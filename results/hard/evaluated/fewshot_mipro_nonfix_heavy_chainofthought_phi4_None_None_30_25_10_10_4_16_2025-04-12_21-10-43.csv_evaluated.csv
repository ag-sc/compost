id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
392,21,test,"Give me the region of Central European Time and entity in Italy and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?region ?entity ?province WHERE {
    ?settlement <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
    ?settlement <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Italian_language> .
    ?settlement <http://dbpedia.org/ontology/province> ?province .
    ?region <http://www.w3.org/2000/01/rdf-schema#label> ""Central European Time"" .
    ?region <http://dbpedia.org/ontology/timeZone> ?cet .
    ?cet <http://www.w3.org/2000/01/rdf-schema#label> ""CET"" .
    ?settlement <http://dbpedia.org/ontology/timeZone> ?cet .
    
    OPTIONAL { 
        ?person <http://dbpedia.org/property/residence> ?settlement .
        FILTER(?person = <http://dbpedia.org/resource/Sebastiano_Bianchetti>)
    }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
421,24,test,Give me the person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
# Step 1: Get Dino Merlin's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Get Samir Bekrić's birthplace
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Step 3: Find a person with the same birth name and birthplace
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER(?birthName = ""Dino Merlin""^^xsd:string) # Replace with actual birth name from Step 1
    FILTER(?birthPlace = <URI_of_Samir_Bekrić_birthplace>) # Replace with URI from Step 2
}
```

Note: The placeholders in the final query should be replaced with the actual values obtained from the first two queries. This SPARQL script assumes that you will execute each part sequentially and replace the placeholders accordingly.",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
427,55,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
SELECT ?prodiParty ?andreottiFatherParty WHERE {
  # Romano Antonio Prodi's party
  <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
  
  # Reference to Italian People's Party (1994)
  OPTIONAL { ?prodiParty rdfs:label ""Italian People's Party (1994)""@en . }

  # Lamberto Andreotti's father and his party
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?andreottiFather .
  ?andreottiFather <http://dbpedia.org/ontology/politicalParty> ?andreottiFatherParty .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
996,19,test,Give me the force of the awardee of 1778.0 and entity in the award of the native of Palestine (region).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
SELECT ?awardee ?force WHERE {
    ?entity <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Palestine_(region)> .
    ?entity <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.w3.org/2002/07/owl#sameAs> ?sameAward .
    ?sameAward <http://purl.org/dc/terms/date> ""1778-01-01""^^xsd:date .
    ?otherAwardee <http://dbpedia.org/property/awards> ?sameAward .
    ?otherAwardee <http://dbpedia.org/ontology/militaryForce> ?force .
}
```",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
184,64,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
# Step 1: Find Archduchess Margaret's parent
SELECT ?margaretParent WHERE {
    <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(1925)> <http://dbpedia.org/ontology/parent> ?margaretParent .
}

# Step 2: Find the child of Archduchess Margaret's parent
SELECT ?childOfMargaretParent WHERE {
    ?margaretParent <http://dbpedia.org/ontology/child> ?childOfMargaretParent .
}

# Step 3: Find Archduke Joseph August's child
SELECT ?josephChild WHERE {
    <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?josephChild .
}

# Step 4: Identify the landmark at elevation 96.0 that is a settlement
SELECT ?landmark WHERE {
    ?landmark <http://dbpedia.org/property/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> ;
              <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Settlement> .
}

# Step 5: Find the native of this landmark
SELECT ?native WHERE {
    ?landmark <http://dbpedia.org/property/nativeOf> ?native .
}

# Step 6: Find the parent of this native
SELECT ?parentOfNative WHERE {
    ?native <http://dbpedia.org/ontology/parent> ?parentOfNative .
}

# Final Step: Find the common parent of both identified children
SELECT ?commonParent WHERE {
    { ?childOfMargaretParent <http://dbpedia.org/ontology/parent> ?commonParent . }
    UNION
    { ?parentOfNative <http://dbpedia.org/ontology/parent> ?commonParent . }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,46,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?decedent WHERE {
    ?author <http://dbpedia.org/property/authors> <http://dbpedia.org/resource/French_Algeria_(book)> .
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
              <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Frédéric-Georges_Herr> .
    ?work <http://dbpedia.org/ontology/author> ?author ;
          <http://dbpedia.org/ontology/event> ?conflict .
    ?decedent <http://dbpedia.org/ontology/decedent> ?work .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,20,test,Give me the reference to Partito Popolare Italiano and party of the father of Lamberto Andreotti.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
SELECT ?father ?party WHERE {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
    OPTIONAL { ?father <http://dbpedia.org/ontology/politicalParty> ?party . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,61,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Part 1: Find the band of the persona Shèna
SELECT ?band WHERE {
    ?persona <http://www.w3.org/2000/01/rdf-schema#label> ""Shèna""@en .
    ?persona <http://dbpedia.org/ontology/band> ?band .
}

UNION

# Part 2: Find the band of the writer of the song Amba Shepherd
SELECT ?band WHERE {
    ?song <http://www.w3.org/2000/01/rdf-schema#label> ""Amba Shepherd""@en .
    ?song <http://dbpedia.org/property/writer> ?writer .
    ?writer <http://dbpedia.org/ontology/band> ?band .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
328,44,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
# Awardee of Order of Suvorov
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> .
}

# Commander in the force of Ferenc Szálasi
SELECT DISTINCT ?commander WHERE {
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
           <http://dbpedia.org/property/commander> ?commander .
    ?force <http://dbpedia.org/property/battle> ?battle .
    ?battle <http://dbpedia.org/property/foughtBy> <http://dbpedia.org/resource/Ferenc_Szálasi> .
}

# Leader of the office, that is a government agency, of Joseph Stalin
SELECT DISTINCT ?leader WHERE {
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> ;
            <http://dbpedia.org/property/officeHolder> ?leader .
    ?stalinOffice <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/Joseph_Stalin> .
    ?stalinOffice <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> ;
                   <http://dbpedia.org/property/leader> ?office .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
294,28,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v5 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
# Part 1: Resting place of the architect of P.D. Houston Jr. House
SELECT ?architectRestingPlace WHERE {
    ?house <http://dbpedia.org/ontology/architect> ?architect .
    ?house rdfs:label ""P. D. Houston Jr. House""@en .
    ?architect <http://dbpedia.org/ontology/deathPlace> ?architectRestingPlace .
}

UNION

# Part 2: Entity in the birthplace of Marion James
SELECT ?entity WHERE {
    ?marion <http://dbpedia.org/property/birthPlace> ?birthPlace .
    ?marion rdfs:label ""Marion James""@en .
    ?birthPlace a <http://dbpedia.org/class/yago/Settlements100000001> .
    ?birthPlace <http://dbpedia.org/ontology/notableFor> ?entity .
}

UNION

# Part 3: Resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army)
SELECT ?awardeeRestingPlace WHERE {
    ?person <http://dbpedia.org/property/awards> ?award .
    ?award rdfs:label ""Distinguished Service Medal (United States Army)""@en .
    ?person a <http://dbpedia.org/class/yago/PoliticiansByCountryYAGO> .
    ?person <http://dbpedia.org/ontology/deathPlace> ?awardeeRestingPlace .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
528,41,test,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Wars of the military forces in Battle of Pisagua
SELECT DISTINCT ?force ?war WHERE {
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?battle <http://dbpedia.org/property/foughtBy> ?force .
    ?force <http://dbpedia.org/ontology/war> ?war .
}

UNION

# Wars of the commander in Battle of La Rinconada de Ate
SELECT DISTINCT ?commander ?war WHERE {
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?battle <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?war .
}

UNION

# Military force of Narciso Campero
SELECT DISTINCT ?force WHERE {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/militaryForce> ?force .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
9,49,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
# Step 1: Identify the Mayor of Northern Ireland Forum
SELECT ?mayor WHERE {
    ?mayor <http://dbpedia.org/ontology/politician> true .
    ?mayor <http://dbpedia.org/property/title> ""Mayor of Northern Ireland Forum"" .
}

# Step 2: Find the Alma Mater of the Identified Mayor
SELECT ?almaMater WHERE {
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
    # Assuming ?mayor is replaced by the actual resource URI found in step 1
}

# Step 3: Identify an Organization and Educational Institution with a Nickname in Northern Ireland
SELECT ?entity WHERE {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
    ?entity <http://dbpedia.org/property/nicknames> ?nickname .
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Northern_Ireland> .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,41,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
# Step 1: Get Bob Heffron's birthplace that is a country
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/Country108069365> .
}

# Step 2: Get individuals awarded Knight Grand Cross of the Order of the Bath associated with New Zealand Army
SELECT DISTINCT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
    ?awardee <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
}

# Step 3: Get wars involving these awardees
SELECT DISTINCT ?war WHERE {
    ?awardee <http://dbpedia.org/property/wars> ?war .
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
    ?awardee <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
}

# Step 4: Find the entity (country) common to both Bob Heffron's birthplace and the war(s)
SELECT DISTINCT ?entity WHERE {
    # From Step 1
    { SELECT ?birthPlace WHERE {
        <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
        ?birthPlace <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/Country108069365> .
    } }
    
    # From Step 3
    { SELECT DISTINCT ?war WHERE {
        ?awardee <http://dbpedia.org/property/wars> ?war .
        ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
        ?awardee <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
    } }
    
    # Find common entity
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?entityLabel .
    ?war <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ?entityLabel .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
485,21,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom and birth place of Thomas Warner (poet).",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?whitakerBirthEntity ?warnerBirthPlace WHERE {
    # For Joseph Whitaker (naturalist)
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?whitakerBirthEntity .
    FILTER EXISTS { ?whitakerBirthEntity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> }
    
    # For Thomas Warner (poet)
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?warnerBirthPlace .
}
```",4,5,5,2,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
528,52,test,"Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v5 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Part 1: War of the commander in Battle of La Rinconada de Ate
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/battleOf> ?battle .
    ?battle <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Narciso_Campero> .
    ?battle <http://dbpedia.org/ontology/war> ?war .
}

UNION

# Part 2: War of the military force in a societal event in Chile
SELECT DISTINCT ?war WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?force <http://dbpedia.org/ontology/battle> ?event .
    ?force <http://dbpedia.org/ontology/war> ?war .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
534,19,test,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician) and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/owner> ?v4 . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
# Step 1: Find the child who is a politician and office holder
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?child <http://dbpedia.org/ontology/officeHolder> ?office .
}

# Step 2: Find the birthplace of this child
SELECT ?birthPlace WHERE {
    ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Step 3: Identify the location of the 2012 Pro12 Grand Final
SELECT ?location WHERE {
    <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/property/location> ?location .
    ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue> .
    ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure> .
}

# Step 4: Find the headquarters of the owner of this location
SELECT ?headquarters WHERE {
    ?owner <http://dbpedia.org/property/location> ?location .
    ?owner <http://dbpedia.org/ontology/headquarters> ?headquarters .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
391,33,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?actor WHERE {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .
    ?spouse <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Compton,_California> .
    ?work <http://dbpedia.org/property/awards> ?spouse .
    ?work <http://dbpedia.org/ontology/starring> ?actor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
54,54,test,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
    # Step 1: Get Soe Min Wimala Dewi's father
    <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/ontology/father> ?father .

    # Step 2: Get Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor
    OPTIONAL { 
        <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/ontology/predecessor> ?predecessor .
    }

    # Step 3: Check if the father is the same as the predecessor
    FILTER(?father = ?predecessor)

    # Step 4: Get the child of this person
    ?father <http://dbpedia.org/ontology/child> ?child .

    # Step 5: Identify Thado Minsaw of Prome and his parent
    OPTIONAL {
        <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?parent .
    }

    # Step 6: Get the child of this parent
    ?parent <http://dbpedia.org/ontology/child> ?grandChild .

    FILTER(?child = ?grandChild)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
10,27,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Part 1: Professional in the birth name of Sharon Kao
SELECT ?birthName ?profession WHERE {
    <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
    <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/profession> ?profession .
}

# Part 2: Associated musical artist of Matt Colton
SELECT ?associatedArtist WHERE {
    ?artist <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Matt_Colton> .
    ?artist <http://www.w3.org/2000/01/rdf-schema#label> ?associatedArtist .
}

# Part 3: Band member of Luke Francis Vibert
SELECT ?bandMember WHERE {
    ?band <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Luke_Francis_Vibert> .
    ?band <http://dbpedia.org/ontology/member> ?bandMember .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
528,65,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
# Part 1: War of the military force in the Battle of Pisagua
SELECT ?war WHERE {
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> .
    ?battle <http://dbpedia.org/ontology/militaryUnit> ?unit .
    ?unit <http://dbpedia.org/ontology/war> ?war .
}

# Part 2: War of the commander in the work of --01-09
SELECT ?war WHERE {
    # Assuming --01-09 refers to a specific event or person, replace with actual resource if known
    ?work <http://dbpedia.org/property/creator> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?war .
}

# Part 3: Force of the person born as Narciso Campero Leyes
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/property/militaryUnit> ?force .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
492,59,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Step 1: Find the commander in the Battle of Verdun
SELECT ?commander WHERE {
    ?battle <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Battle_of_Verdun> .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?battle <http://dbpedia.org/property/commander> ?commander .
}

# Step 2: Find the war associated with this commander
SELECT ?war WHERE {
    ?commander <http://dbpedia.org/property/battle> ?battle .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?battle <http://dbpedia.org/property/war> ?war .
}

# Step 3: Find the author of ""French Algeria""
SELECT ?author WHERE {
    ?book <http://purl.org/dc/terms/title> ""French Algeria"" .
    ?book <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> .
    ?book <http://dbpedia.org/property/author> ?author .
}

# Step 4: Identify the work related to this author
SELECT ?work WHERE {
    ?author <http://purl.org/dc/terms/title> ?title .
    ?author <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
}

# Step 5: Find the person decedent at the work
SELECT ?decedent WHERE {
    ?work <http://dbpedia.org/property/deathPlace> ?place .
    ?person <http://dbpedia.org/property/deathPlace> ?place .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
488,58,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?administration ?birthPlace ?deathPlace WHERE {
    # Step 1: Find Tokugawa Masako's spouse who is royalty
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> .
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    # Step 2: Find the father of Tokugawa Masako's royal spouse
    ?father <http://dbpedia.org/ontology/father> ?spouse .

    # Step 3: Determine the administration of the father
    ?father <http://dbpedia.org/property/administration> ?administration .

    # Step 4: Find Enomoto Takeaki's birth place
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

    # Step 5: Identify Yūki Hideyasu's father who is a politician
    ?yukiFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> .
    ?yukiFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

    # Step 6: Determine the death place of Yūki Hideyasu's father
    ?yukiFather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,56,test,"Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Part 1: Producer of ""Westside Story"" (song)
SELECT ?producer WHERE {
    <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .
}

UNION

# Part 2: Professional in the alter ego of The Shadow
SELECT ?professional WHERE {
    ?shadow <http://www.w3.org/2000/01/rdf-schema#label> ""The Shadow""@en .
    ?shadow <http://dbpedia.org/ontology/profession> ?professional .
}

UNION

# Part 3: Associated musical artist of the writer of the album ""What U See Is What U Get""
SELECT ?associatedArtist WHERE {
    ?album <http://dbpedia.org/property/writer> ?writer .
    FILTER(?album = <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)>)
    FILTER((<http://www.w3.org/2000/01/rdf-schema#label> ?writer) IN (""musical artist"", ""artist""))
    ?writer <http://dbpedia.org/ontology/musicArtist> ?associatedArtist .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
232,54,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of London.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
SELECT ?actor WHERE {
    ?person <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee"" .
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/London> .
    ?child <http://dbpedia.org/ontology/father> ?person ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    ?fame <http://dbpedia.org/property/claimToFame> ?child ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>, <http://dbpedia.org/ontology/MilitaryConflict> .
    ?fame <http://dbpedia.org/property/starring> ?actor .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
184,18,test,Give me the parent of Archduchess Ilona of Austria and parent of Géza von Habsburg and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
SELECT ?commonParent WHERE {
    # Step 1: Get parents of Archduchess Ilona of Austria
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/parent> ?parentIlona .
    
    # Step 2: Get parents of Géza von Habsburg
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/parent> ?parentGéza .
    
    # Step 3: Find common parent and check if they are a child of Archduke Joseph August of Austria
    FILTER(?parentIlona = ?parentGéza)
    ?commonParent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
    
    # Ensure the common parent is indeed one of the parents found
    FILTER(?commonParent = ?parentIlona)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
994,33,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find Fredrik Thordendal's band (organization)
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}

# Step 2: Find a band member who is part of another band (group and organization)
SELECT DISTINCT ?member ?otherBand WHERE {
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?band <http://dbpedia.org/property/member> ?member .
    ?member <http://dbpedia.org/property/memberOf> ?otherBand .
    ?otherBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Band> , <http://dbpedia.org/ontology/Organisation>) .
}

# Step 3: Find associated musical artists of the other band
SELECT ?otherBand ?artist WHERE {
    ?otherBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Band> , <http://dbpedia.org/ontology/Organisation>) .
    ?otherBand <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
}

# Step 4: Find associated musical artists of S.A. Slayer
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
184,47,test,"Give me the parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?parent WHERE {
    # Step 1: Identify Archduke Ladislaus Philipp's royal parent
    ?archduke <http://dbpedia.org/ontology/birthName> ""Archduke Ladislaus Philipp of Austria"" .
    ?archduke <http://dbpedia.org/ontology/father> ?parent .
    ?parent <http://www.w3.org/2002/07/owl#sameAs> ?royalty .

    # Step 2: Find the child (grandchild) of that parent
    ?parent <http://dbpedia.org/ontology/child> ?grandchild .

    # Step 3: Filter for individuals whose native place is Budapest
    ?grandchild <http://dbpedia.org/property/nativePlace> <http://dbpedia.org/resource/Budapest> .

    # Step 4: Retrieve the parent of the individual found in step 3
    ?grandchild <http://dbpedia.org/ontology/father> ?result .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,60,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
# Step 1: Find Antiochus II Theos's successor who is a royalty
SELECT ?successor WHERE {
    <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?successor .
    ?successor <http://www.w3.org/2002/07/owl#sameAs> ?royalty .
}

# Step 2: Find the child of this successor who is a royalty
SELECT ?child WHERE {
    ?successor <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/2002/07/owl#sameAs> ?royalty .
}

# Step 3: Identify the commander in Battle of Panium and find their child
SELECT ?commanderChild WHERE {
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    ?battle <http://dbpedia.org/resource/Battle_of_Panium> .
    ?commander <http://dbpedia.org/ontology/child> ?commanderChild .
}

# Step 4: Determine the parent of this child (should be the commander)
SELECT ?parent WHERE {
    ?commanderChild <http://dbpedia.org/ontology/parent> ?parent .
}

# Step 5: Find the child of the individual identified in step 2
SELECT ?finalChild WHERE {
    ?child <http://dbpedia.org/ontology/child> ?finalChild .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
184,55,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
# Step 1: Find child of Archduke Joseph Francis of Austria
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Find parent of the child (should be Archduke Joseph Francis)
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/parent> ?parent .
}

# Step 3: Find native of Budapest who is a child of the child of Archduke Joseph Karl
SELECT ?native WHERE {
    ?grandChild <http://dbpedia.org/ontology/child> ?native .
    ?grandChild <http://dbpedia.org/property/nationality> ""Hungarian""^^<http://www.w3.org/2001/XMLSchema#string> .
    ?parent <http://dbpedia.org/ontology/child> ?grandChild .
    ?parent <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
}

# Step 4: Find parent of the native
SELECT ?finalParent WHERE {
    ?native <http://dbpedia.org/ontology/parent> ?finalParent .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
92,37,test,"Give me the band of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1"" who is also an artist
SELECT ?actor WHERE {
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?movie <http://dbpedia.org/ontology/title> ""Return to Nuke 'Em High Volume 1""@en .
}

# Step 2: Find the band associated with Joseph Michael
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Joseph_Michael_(musician)> <http://dbpedia.org/property/band> ?band .
}

# Step 3: Check for association between the band and the artist from step 1
SELECT DISTINCT ?artist ?band WHERE {
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?movie <http://dbpedia.org/ontology/title> ""Return to Nuke 'Em High Volume 1""@en .
    ?band <http://dbpedia.org/property/band> <http://dbpedia.org/resource/Joseph_Michael_(musician)> .
    ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?band <http://dbpedia.org/property/member> ?artist .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,69,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Part 1: Force of Narciso Campero
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Narciso_Campero> <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    OPTIONAL { ?person <http://dbpedia.org/ontology/birthName> ?birthName . 
               ?person <http://dbpedia.org/property/militaryForce> ?force }
}

# Part 2: War of the Commander in Battle of La Rinconada de Ate
SELECT ?war WHERE {
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    ?battle <http://dbpedia.org/ontology/battleOf> ?war .
    FILTER(?battle = <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate>)
}

# Part 3: War of the Military Force in a Societal Event in Chile
SELECT ?war WHERE {
    ?event <http://www.w3.org/2000/01/rdf-schema#label> ?eventName .
    FILTER(CONTAINS(LCASE(?eventName), ""chile"") && 
           ?event <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/SocietalEvent108069068>)
    OPTIONAL { ?militaryForce <http://dbpedia.org/property/militaryForce> ?force .
               ?force <http://dbpedia.org/ontology/war> ?war }
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
48,20,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
# Part 1: Actor from show with Stacey Dash who is a musical artist and their band
SELECT ?actorBand WHERE {
    ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> .
    ?actor <http://dbpedia.org/ontology/appearsIn> ?show ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?actor <http://dbpedia.org/property/band> ?actorBand .
}

UNION

# Part 2: Writer of work by Shellback and their band
SELECT ?writerBand WHERE {
    ?work <http://dbpedia.org/ontology/writer> ?writer ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    ?work <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Shellback_(record_producer)> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://dbpedia.org/property/band> ?writerBand .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
314,21,test,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić and person deceased at Madrid.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
# Step 1: Identify Lisa Gavrić's profession
SELECT ?profession WHERE {
    <http://dbpedia.org/resource/Lisa_Gavrić> <http://purl.org/dc/terms/subject> ?profession .
}

# Step 2: Find the event associated with her profession that is both an event and a societal event
SELECT DISTINCT ?event WHERE {
    ?profession rdfs:subClassOf* <http://dbpedia.org/ontology/Event>.
    ?profession rdfs:subClassOf* <http://dbpedia.org/ontology/SocietalEvent>.
    ?event rdf:type ?profession .
}

# Step 3: Identify commanders in this event
SELECT DISTINCT ?commander WHERE {
    ?event dbp:commander ?commander .
}

# Step 4: Filter by awardees of exactly 30 awards
SELECT DISTINCT ?commander WHERE {
    ?commander <http://dbpedia.org/property/awards> ?award .
    { SELECT ?commander (COUNT(?award) AS ?count) WHERE {
        ?commander <http://dbpedia.org/property/awards> ?award .
      } GROUP BY ?commander HAVING (?count = 30) }
}

# Step 5: Identify person deceased at Madrid
SELECT DISTINCT ?person WHERE {
    ?person dbp:deathPlace <http://dbpedia.org/resource/Madrid> .
}
```

Note: This is a conceptual breakdown. The actual SPARQL query would need to be constructed by combining these steps logically, possibly using subqueries or additional filtering based on the results of each step.",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
161,50,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Find predecessor of Indalecio Prieto
SELECT ?predecessor WHERE {
    <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 2: Find military conflict involving the predecessor as a commander or significant role
SELECT ?conflict WHERE {
    ?predecessor <http://dbpedia.org/property/commanded> ?conflict .
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 3: Find military force involved in the conflict
SELECT ?militaryForce WHERE {
    ?conflict <http://dbpedia.org/property/militaryForce> ?militaryForce .
}

# Step 4: Identify Emilio Mola and find event he commanded
SELECT ?event WHERE {
    <http://dbpedia.org/resource/Emilio_Mola> <http://dbpedia.org/ontology/commanded> ?event .
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 5: Find military force associated with the event Emilio Mola commanded
SELECT ?militaryForce WHERE {
    ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
767,66,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
# Step 1: Get the alter ego of Matthew Burland's fictional persona
SELECT ?alterEgo WHERE {
    ?burland <http://dbpedia.org/ontology/persona> ?fictionalCharacter .
    ?fictionalCharacter <http://dbpedia.org/property/alterEgo> ?alterEgo .
    FILTER(?burland = <http://dbpedia.org/resource/Matthew_Burland>)
}

# Step 2: Get the alma mater of George K. Nash
SELECT ?almaMater WHERE {
    ?nash <http://dbpedia.org/ontology/administration> ?administration .
    ?administration <http://dbpedia.org/property/almaMater> ?almaMater .
    FILTER(?nash = <http://dbpedia.org/resource/George_K._Nash>)
}

# Step 3: Get settlements in Green's administration
SELECT ?settlement WHERE {
    ?green <http://dbpedia.org/ontology/administration> ?administration .
    ?administration <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
    FILTER(?settlement a <http://dbpedia.org/class/yago/Settlements>)
    FILTER(?green = <http://dbpedia.org/resource/Green>)
}

# Step 4: Combine results to find the common entity
SELECT DISTINCT ?entity WHERE {
    VALUES ?alterEgo { ?alterEgo1 } # Replace with actual alter ego from step 1
    VALUES ?almaMater { ?almaMater1 } # Replace with actual alma mater from step 2
    VALUES ?settlement { ?settlement1 } # Replace with actual settlement from step 3

    ?entity <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?entity <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?entity <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
182,21,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v0 . },"```sparql
SELECT ?jagathWar ?entityInNationality ?maheshWar WHERE {
    # Wars associated with Jagath Dias
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?jagathWar .

    # Nationality of Tamara Kunanayakam and an entity related to that nationality
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/2000/01/rdf-schema#label> ?nationalityLabel .
    ?entityInNationality <http://www.w3.org/2000/01/rdf-schema#label> ?nationalityLabel .

    # Wars associated with Mahesh Senanayake
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?maheshWar .
}
```",4,4,5,2,3,2,3,28,1,6,0,0.14285714285714285,1.0,0.25
92,71,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v8 . },"```sparql
# Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
SELECT ?actor WHERE {
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    ?film <http://dbpedia.org/property/title> ""Return to Nuke 'Em High Volume 1"" .
}

# Step 2: Find the band associated with this actor
SELECT ?band WHERE {
    ?person <http://dbpedia.org/ontology/band> ?band .
    FILTER(?person = ?actor)
}

# Step 3: Identify the artist related to ""Nevermore"" (2006 film)
SELECT ?artist WHERE {
    ?film <http://dbpedia.org/property/reference> ?artist .
    ?film <http://dbpedia.org/property/title> ""Nevermore"" .
    FILTER(YEAR(?film) = 2006)
}

# Step 4: Find the birth name of Joseph Michael
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
}

# Step 5: Find the band associated with this person
SELECT ?band WHERE {
    ?person <http://dbpedia.org/ontology/band> ?band .
    FILTER(?person = ?personFromStep4)
}

# Step 6: Find the musical artist associated with both bands from steps 2 and 5
SELECT DISTINCT ?musicalArtist WHERE {
    ?band1 <http://dbpedia.org/property/musicalArtist> ?musicalArtist .
    ?band2 <http://dbpedia.org/property/musicalArtist> ?musicalArtist .
    FILTER(?band1 = ?bandFromStep2 && ?band2 = ?bandFromStep5)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
92,30,test,Give me the band of the person born as Joseph Michael Furney and band member of Nevermore and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
SELECT ?band WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael Furney""@en .
    ?person <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nevermore_(band)> .
    ?person <http://dbpedia.org/ontology/band> ?band .
    
    OPTIONAL {
        ?person <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Jim_Sheppard_(musician)> .
    }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
55,21,test,"Give me the band member of Metallica and band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . }","```sparql
SELECT ?person WHERE {
    ?band <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Newsted>.
    ?metallicaMember <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Metallica>.
    ?gunsNrosesMember <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Guns_N%27_Roses>.
    ?band <http://dbpedia.org/ontology/member> ?person.
    FILTER(?metallicaMember = ?gunsNrosesMember && ?metallicaMember = ?person)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
801,22,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?writer ?associatedArtist WHERE {
    ?work <http://dbpedia.org/ontology/writer> ?writer .
    ?work <http://dbpedia.org/property/title> ""40 Dayz & 40 Nightz"" .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    OPTIONAL { ?writer <http://dbpedia.org/property/associatedMusicians> ?associatedArtist . }
}
```",3,5,4,2,2,3,3,71,0,0,22,0,0.0,0
391,46,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Get the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?nickname .
}

# Step 2: Find a figure native to that location using the identified nickname
SELECT ?figure WHERE {
    ?figure <http://dbpedia.org/property/nativePlace> ?location .
    ?location rdfs:label ?nickname .
    FILTER(LANG(?nickname) = 'en')
}

# Step 3: Determine the claim to fame (work) associated with Michael Ballhaus
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/work> ?work .
}

# Step 4: Find the actor involved in that work
SELECT DISTINCT ?actor WHERE {
    ?work <http://dbpedia.org/ontology/actor> ?actor .
}
```

Note: This is a multi-step process, and each step's result feeds into the next. The final query will depend on the results of the previous queries.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
378,55,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Part 1: Wars involving the Peninsular War commander
SELECT ?commander ?war WHERE {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/battleCommander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?war .
}

# Part 2: War involving Carl Pontus Gahn
SELECT ?person ?war WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn"" .
    ?person <http://dbpedia.org/ontology/battle> ?war .
}

# Part 3: Claim to fame of the Great Siege of Gibraltar commander
SELECT ?commander ?claimToFame WHERE {
    ?battle <http://dbpedia.org/property/name> ""Great Siege of Gibraltar"" .
    ?battle <http://dbpedia.org/ontology/battleCommander> ?commander .
    ?commander <http://dbpedia.org/property/claimToFame> ?claimToFame .
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
55,26,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
SELECT ?bandMember WHERE {
  ?producer <http://dbpedia.org/ontology/band> ?band .
  ?band <http://dbpedia.org/property/songProduced> <http://dbpedia.org/resource/Used_to_Love_Her> .
  
  ?metallicaBand <http://dbpedia.org/ontology/member> ?bandMember .
  FILTER(?metallicaBand = <http://dbpedia.org/resource/Metallica>) .

  ?newstedBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?newstedBand <http://dbpedia.org/property/member> ?bandMember .
  FILTER(?newstedBand = <http://dbpedia.org/resource/Newsted>) .

  FILTER(?producer != ?metallicaBand)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
161,39,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
SELECT ?militaryForce ?commander WHERE {
    ?elDirector foaf:alias ""El Director"" .
    ?elDirector <http://dbpedia.org/ontology/memberOf> ?militaryForce .
    ?militaryForce <http://dbpedia.org/property/country> ?country .
    ?country <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Spanish_Civil_War> .
    ?militaryForce <http://dbpedia.org/ontology/commander> ?commander .
}
```",4,5,5,3,2,3,3,71,0,0,32,0,0.0,0
959,63,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of Yōichi Masuzoe.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
# Step 1: Identify Yōichi Masuzoe's residence country
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?country .
}

# Step 2: Find a person born in 1958 native to that country
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> .
    ?person <http://dbpedia.org/ontology/nationality> ?nationality .
    ?nationality <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
    FILTER(?countryLabel = ""Japan"") # Assuming the country from step 1 is Japan
}

# Step 3: Determine their alma mater
SELECT ?almaMater WHERE {
    ?person <http://dbpedia.org/ontology/alumniOf> ?almaMater .
    ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?almaLabel .
    FILTER(CONTAINS(LCASE(?almaLabel), ""university"") && CONTAINS(LCASE(?almaLabel), ""japanese""))
}

# Step 4: Identify Takashi Sekizuka's team
SELECT ?team WHERE {
    <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team .
}

# Step 5: Find the manager of that team
SELECT ?manager WHERE {
    ?team <http://dbpedia.org/ontology/coach> ?manager .
}

# Step 6: Check if the manager is a member of the alma mater
SELECT ?manager WHERE {
    ?manager <http://dbpedia.org/ontology/alumniOf> ?almaMater .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
959,49,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?manager WHERE {
  # Step 1: Find the sports manager of the 1998 Kashima Antlers season
  ?season <http://dbpedia.org/ontology/team> ?team .
  FILTER(STRSTARTS(LCASE(?season), ""kashima antlers season 1998""))
  
  ?team <http://dbpedia.org/ontology/sportsManager> ?sportsManager .

  # Step 2: Determine the team managed by this sports manager
  ?sportsManager <http://dbpedia.org/ontology/team> ?anotherTeam .

  # Step 3: Find the manager of that team
  ?anotherTeam <http://dbpedia.org/ontology/manager> ?manager .

  # Step 4: Identify the alma mater of Eiji Ōtsuka
  OPTIONAL {
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/property/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""japanese"") && 
           CONTAINS(LCASE(?label), ""university"") &&
           CONTAINS(LCASE(?label), ""organization""))
  }
}
```",5,10,6,3,2,3,3,71,0,0,2,0,0.0,0
391,32,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Identify ""Hub City""
SELECT ?city WHERE {
    ?city <http://www.w3.org/2004/02/skos/core#altLabel> ""Hub City"" .
}

# Step 2 and 3: Find Michael Ballhaus's work associated with ""Hub City"" and get the actor
SELECT DISTINCT ?actor WHERE {
    # Replace :hubCityResource with the actual resource URI obtained from step 1
    ?work <http://dbpedia.org/ontology/starring> ?actor .
    ?work <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Michael_Ballhaus> .
    ?work <http://dbpedia.org/ontology/location> :hubCityResource .
}
```

Note: Replace `:hubCityResource` with the actual URI of the city identified in Step 1.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
54,62,test,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?predecessor WHERE {
    # Step 1: Find Thado Minsaw of Prome's parent
    ?thadoMinsaw <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
    ?parent ( <http://dbpedia.org/ontology/father> | <http://dbpedia.org/ontology/mother> ) ?thadoMinsaw .

    # Step 2: Find the child of Thado Minsaw's parent
    ?childOfParent ( <http://dbpedia.org/ontology/father> | <http://dbpedia.org/ontology/mother> ) ?parent .
    
    # Step 3: Find Thinkhaya of Pagan's father
    ?thinkhaya <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
    ?father ( <http://dbpedia.org/ontology/father> ) ?thinkhaya .

    # Step 4: Find the child of Thinkhaya's father
    ?childOfFather ( <http://dbpedia.org/ontology/child> ) ?father .

    # Step 5: Find the parent of the child from step 4
    ?parentOfChild ( <http://dbpedia.org/ontology/father> | <http://dbpedia.org/ontology/mother> ) ?childOfFather .
    
    # Step 6: Identify Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor
    ?ameittaThiri <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
    ?predecessor <http://dbpedia.org/ontology/predecessor> ?ameittaThiri .

    FILTER(?parentOfChild = ?childOfParent)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
488,49,test,"Give me the birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?birthPlace ?administration WHERE {
    # Find the commander in the Boshin War and their birthplace
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
    ?commander <http://dbpedia.org/property/placeOfBirth> ?birthPlace .

    # Find Tokugawa Masako's spouse who is royalty
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://www.w3.org/2002/07/owl#sameAs> ?royaltySpouse .
    ?royaltySpouse a <http://dbpedia.org/class/yago/Royalty100000001> .

    # Find the father of this royal spouse
    ?royaltySpouse <http://dbpedia.org/ontology/father> ?father .

    # Retrieve the administration of this father
    ?father <http://dbpedia.org/property/administration> ?administration .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
747,71,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
# Step 1: Identify Amba Shepherd's song
SELECT ?song WHERE {
    <http://dbpedia.org/resource/Amba_Shepherd> dbo:work ?song .
    ?song rdf:type dbo:Song .
}

# Step 2: Find the writer of the song
SELECT ?writer WHERE {
    ?song dbo:author ?writer .
}

# Step 3: Determine the persona of Shèna
SELECT ?persona WHERE {
    <http://dbpedia.org/resource/Shèna> dbo:alias ?persona .
}

# Step 4: Find the band of Shèna's persona
SELECT ?band WHERE {
    ?persona dbo:member ?band .
}

# Step 5: Identify the athlete and soccer player from Zolotonosha
SELECT ?athlete WHERE {
    ?athlete rdf:type dbo:Athlete ;
             dbo:sport dbr:Soccer ;
             dbo:birthPlace <http://dbpedia.org/resource/Zolotonosha> .
}

# Step 6: Determine the decedent among these athletes
SELECT ?decedent WHERE {
    ?athlete dbo:dateOfDeath ?date .
    FILTER(?date != ""unknown""^^xsd:string)
}

# Step 7: Find the birth date of the decedent
SELECT ?birthDate WHERE {
    ?decedent dbo:birthDate ?birthDate .
}

# Step 8: Identify a person born on that date
SELECT ?person WHERE {
    ?person dbo:birthDate ?birthDate .
    FILTER(?person != ?decedent)
}
```

Note: This query assumes the existence of certain properties and resources in DBpedia, which may not be directly available. Adjustments might be needed based on actual data availability.",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
492,63,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
SELECT ?war ?commander WHERE {
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    ?commander rdfs:label ""Frédéric-Georges Herr""@en .
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
        a <http://dbpedia.org/ontology/Event> .
}

SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers> .
    ?author <http://dbpedia.org/ontology/authorOf> ?work .
    ?work rdfs:label ""French Algeria""@en .
    ?person <http://dbpedia.org/ontology/deceased> ?death .
    ?death <http://dbpedia.org/property/place> ?work .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
617,68,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
    # Step 1: Find the child of Antiochus (son of Antiochus III the Great)
    ?antiochusChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> .
    
    # Step 2: Find the successor of Antiochus II Theos who is royalty and their child
    ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_Theos> ;
               a <http://dbpedia.org/ontology/Royalty> .
    ?successorChild <http://dbpedia.org/ontology/birthParent> ?successor .

    # Step 3: Determine the spouse of the child from step 2
    ?spouse <http://dbpedia.org/property/spouse> ?successorChild ;
            a <http://dbpedia.org/ontology/Royalty> .
    
    # Step 4: Identify the parent of the child from step 1, which is also a child of the individual found in step 3
    ?parent <http://dbpedia.org/ontology/birthParent> ?spouse ;
            <http://dbpedia.org/ontology/birthChild> ?antiochusChild .
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
981,19,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of Time in Indonesia.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
SELECT ?birthPlace WHERE {
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?person <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Kamikaze_Girls> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
    ?person <http://dbpedia.org/ontology/location> ?location .
    ?location <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Indonesia> .
    ?location <http://dbpedia.org/ontology/timezone> ?timezone .
    ?timezone <http://www.w3.org/2000/01/rdf-schema#label> ""Time in Indonesia""@en .
}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
378,60,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
# Step 1: Find the DBpedia resource for Carl Pontus Gahn using his birth name
SELECT ?gahn WHERE {
    ?gahn <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn"" .
}

# Step 2: Identify wars associated with Thomas Trigge and Carl Pontus Gahn
SELECT DISTINCT ?war WHERE {
    OPTIONAL { 
        ?trigge <http://dbpedia.org/ontology/war> ?war .
        FILTER(?trigge = <http://dbpedia.org/resource/Thomas_Trigge>)
    }
    OPTIONAL {
        ?gahn <http://dbpedia.org/ontology/war> ?war .
        FILTER(STRSTARTS(STR(?gahn), ""http://dbpedia.org/resource/"") && ?gahn != <http://dbpedia.org/resource/Carl_Pontus_Gahn>)
    }
}

# Step 3: Find the commander of that war
SELECT DISTINCT ?commander WHERE {
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(STRSTARTS(STR(?war), ""http://dbpedia.org/resource/"") && ?war != <http://dbpedia.org/resource/War>)
}

# Step 4: Retrieve the claim to fame of that commander
SELECT DISTINCT ?claimToFame WHERE {
    ?commander <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
    FILTER(STRSTARTS(STR(?commander), ""http://dbpedia.org/resource/"") && ?commander != <http://dbpedia.org/resource/Commander>)
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
9,33,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?awardee ?almaMater WHERE {
    # Find the DBpedia resource for Royal Medals
    <http://dbpedia.org/resource/Royal_Medals> <http://dbpedia.org/property/awards> ?award .
    
    # Find all awardees of Royal Medals
    ?awardee <http://dbpedia.org/property/awards> ?award .
    
    # Ensure the awardee is also associated with John Alderdice
    OPTIONAL { ?awardee rdfs:label ""John Alderdice, Baron Alderdice""@en }
    
    # Retrieve alma mater for both the identified awardee and John Alderdice
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
    OPTIONAL { 
        <http://dbpedia.org/resource/John_Alderdice> <http://dbpedia.org/ontology/almaMater> ?johnAlmaMater .
    }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,18,test,"Give me the birth place of the person born, that is a beauty queen, as  and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
SELECT ?person ?birthPlace WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
    ?person <http://dbpedia.org/ontology/birthPlace> ?location .
    ?location <http://www.geonames.org/ontology#locatedIn> ?region .
    ?region <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://www.w3.org/2000/01/rdf-schema#label> ""Salak, North Sumatra"" .
    BIND(?location AS ?birthPlace)
}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
54,49,test,"Give me the child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?predecessor WHERE {
    ?soeMinWimalaDewi <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/child> ?soeMinWimalaDewi .
    
    ?soeMinWimalaDewi <http://dbpedia.org/ontology/predecessor> ?predecessor .
    
    ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,48,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
    ?person <http://dbpedia.org/ontology/decedent> <http://dbpedia.org/resource/Francoist_Spain> .
    ?event <http://dbpedia.org/property/commander> ?person .
    ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Emilio_Mola> .
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?person <http://dbpedia.org/property/commander> ?conflict .
    ?conflict <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
303,27,test,"Give me the party of Guillermo Endara and party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?endaraParty ?ariasParty WHERE {
    <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/politicalParty> ?endaraParty .
    
    ?arias a <http://dbpedia.org/ontology/Politician> ;
        <http://dbpedia.org/ontology/birthPlace> ?birthPlace ;
        <http://dbpedia.org/ontology/politicalParty> ?ariasParty .

    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ""El Valle de Antón""@en .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
488,45,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?administration ?birthPlace ?deathPlace WHERE {
    # Part 1: Find the spouse of Tokugawa Masako who is royalty
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
    
    # Ensure the spouse is a royalty
    ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?labelSpouse .
    FILTER(CONTAINS(LCASE(?labelSpouse), ""royalty""))

    # Part 2: Find the father of that spouse
    ?spouse <http://dbpedia.org/ontology/father> ?father .

    # Part 3: Determine the administration of that father
    OPTIONAL { ?father <http://dbpedia.org/property/administration> ?administration . }

    # Part 4: Find Enomoto Takeaki's birth place
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

    # Part 5: Find Tokugawa Ieyasu's death place
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
281,61,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v5 . },"```sparql
# Step 1: Find the leader of the 1962 NSW state election who is a politician
SELECT ?leader WHERE {
    <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/ontology/winner> ?leader .
    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Determine the birthplace country of this leader
SELECT ?country WHERE {
    ?leader <http://dbpedia.org/property/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    BIND(?birthPlace AS ?country)
}

# Step 3: Find entities (people) associated with this country
SELECT ?entity WHERE {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?entity <http://dbpedia.org/property/birthPlace> ?country .
}

# Step 4: Identify professionals who are both office holders and politicians
SELECT ?professional WHERE {
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 5: Find those whose profession is a military unit in the New Zealand Army
SELECT ?militaryUnit WHERE {
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?professional <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
}

# Step 6: Determine the wars associated with these military units
SELECT DISTINCT ?war WHERE {
    ?militaryUnit <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Battle> .
    ?battle <http://dbpedia.org/property/war> ?war .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
421,23,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
# Step 1: Get Dino Merlin's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Identify the band he is a member of
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/memberOf> ?band .
}

# Step 3: Find awards associated with the band or its members
SELECT DISTINCT ?award WHERE {
    ?member <http://dbpedia.org/ontology/memberOf> ?band .
    ?member <http://dbpedia.org/property/awards> ?award .
    FILTER(?band = <BAND_RESOURCE_ID>) # Replace BAND_RESOURCE_ID with the actual resource ID from Step 2
}

# Step 4: Find other awardees of these awards
SELECT DISTINCT ?otherAwardee WHERE {
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?award IN (<AWARD_RESOURCE_IDS>)) # Replace AWARD_RESOURCE_IDS with the actual resource IDs from Step 3
}
```

Note: You will need to replace `<BAND_RESOURCE_ID>` and `<AWARD_RESOURCE_IDS>` with the actual values obtained from executing the first three queries.",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
801,19,test,Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
# Query for the producer of Westside Story (song)
SELECT ?producer WHERE {
    <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .
}

# Query for the profession associated with The Shadow's alter ego
SELECT ?profession WHERE {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ""The Shadow""@en .
    ?entity <http://dbpedia.org/ontology/profession> ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
994,44,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?dokkenBandMember ?meshuggahArtist WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  
  ?dokkenBandMember <http://dbpedia.org/ontology/memberOf> ?person .

  ?meshuggah <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Meshuggah> .
  ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Band> <http://dbpedia.org/ontology/Group> <http://dbpedia.org/ontology/Organisation>) .

  ?meshuggahArtist <http://dbpedia.org/ontology/memberOf> ?meshuggah .
  
  FILTER(?meshuggahArtist = <http://dbpedia.org/resource/S.A._Slayer>)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,36,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
# Step 1: Get Jon Pertwee's children
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Find French politicians and office holders with a British native place
SELECT DISTINCT ?politician ?nativePlace WHERE {
    ?politician <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/France> ;
                <http://dbpedia.org/ontology/politician> true ;
                <http://dbpedia.org/ontology/officeHolder> true .
    ?politician <http://dbpedia.org/property/placeOfBirth> ?nativePlace .
    ?nativePlace <http://www.w3.org/2000/01/rdf-schema#label> ?placeLabel .
    FILTER(CONTAINS(LCASE(?placeLabel), ""british""))
}

# Step 3: Find the residence of such a politician
SELECT DISTINCT ?residence WHERE {
    ?politician <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?residenceLabel ;
               <http://dbpedia.org/ontology/settlement> true ;
               <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
404,64,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
# Step 1: Find Princess Victoria Louise of Prussia's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/spouse> ?spouse .
}

# Step 2: Determine the birth name and find the person (a royalty) born with that name
SELECT ?person WHERE {
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> ;
            <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 3: Find the parent of Prince Ernest Augustus of Hanover (born 1914)
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> <http://dbpedia.org/ontology/parent> ?parent .
}

# Step 4: Identify the father of the spouse from step 1
SELECT ?father WHERE {
    ?spouse <http://dbpedia.org/ontology/father> ?father .
}

# Step 5: Determine the child of this father
SELECT ?child WHERE {
    ?father <http://dbpedia.org/ontology/child> ?child .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,36,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?actor WHERE {
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    ?movie <http://dbpedia.org/ontology/tvSeries> ?tvShow .
    ?actor <http://dbpedia.org/ontology/starring> ?movie ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    FILTER(?person = ?actor)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
9,55,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?almaMater WHERE {
  # Step 1: Find awardee(s) of the Royal Medal
  ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> .
  
  # Step 2: Get alma mater of the awardee
  ?awardee <http://dbpedia.org/ontology/almaMater> ?university1 .

  # Step 3: Find nickname of Queen's University Belfast
  <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/property/nickname> ?nickname .
  
  FILTER(?university1 = ?nickname)

  # Step 4: Identify the mayor of Northern Ireland Forum who is a politician
  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?mayor <http://dbpedia.org/property/politicalOffice> <http://dbpedia.org/resource/Northern_Ireland_Forum> .

  # Step 5: Get alma mater of the mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?university2 .
  
  FILTER(?university1 = ?university2)
  
  BIND(?university1 AS ?almaMater)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
328,40,test,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  ?person <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> .
  ?person <http://dbpedia.org/property/awards> ?award1 .
  ?person <http://dbpedia.org/property/awards> ?award2 .
  ?award1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
  ?award2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
626,16,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Query 1: Find awards received by Aleksey Petrovich Yermolov
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?award .
}

# Query 2: Find military conflicts commanded by Alexander I of Russia and their commanders
SELECT DISTINCT ?conflict ?commander WHERE {
    <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/commanded> ?conflict .
    ?conflict <http://dbpedia.org/property/commander> ?commander .
}

# Combine results to find common entities
SELECT DISTINCT ?award ?commander WHERE {
    # Subquery for awards received by Yermolov
    {
        SELECT ?award WHERE {
            <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?award .
        }
    }

    # Subquery for commanders of conflicts led by Alexander I
    {
        SELECT DISTINCT ?commander WHERE {
            <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/commanded> ?conflict .
            ?conflict <http://dbpedia.org/property/commander> ?commander .
        }
    }

    # Find common entities between awards and commanders
    FILTER(?award = ?commander)
}
```",4,5,5,2,2,3,2,20,0,0,21,0,0.0,0
465,8,test,"Give me the death place of Jiřina Štěpničková and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace ?administration WHERE {
  # Query for the death place of Jiřina Štěpničková
  <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  # Query for the leader's administration
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
  ?leader <http://dbpedia.org/ontology/battleOrWar> <http://dbpedia.org/resource/Czech_Parliament> .
  ?leader <http://dbpedia.org/ontology/administration> ?administration .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
488,65,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
SELECT ?deathPlace ?administration ?birthPlace WHERE {
  # Part 1: Father of Matsudaira Tadamasa who is an office holder
  ?mat_office_holder <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Matsudaira_Tadamasa> .
  ?mat_office_holder <http://dbpedia.org/ontology/officeHolder> ?office .

  # Part 2: Father of the above (Politician) and his death place
  ?politician <http://dbpedia.org/ontology/father> ?mat_office_holder .
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?politician <http://dbpedia.org/property/deathPlace> ?deathPlace .

  # Part 3: Administration of the father of Emperor Go-Mizunoo
  ?go_mizu_father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Emperor_Go-Mizunoo> .
  ?go_mizu_father <http://dbpedia.org/ontology/administration> ?administration .

  # Part 4: Birth place of the commander in Boshin War
  ?boshin_commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
  ?boshin_commander <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
488,68,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> ?v3 . },"```sparql
# Step 1: Identify the war involving Saitō Hajime
SELECT ?war WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?war <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Sait%C5%8D_Hajime>.
}

# Step 2: Find the birthplace of Saitō Hajime
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Sait%C5%8D_Hajime> <http://dbpedia.org/ontology/birthPlace> ?birthPlace.
}

# Step 3: Identify Emperor Go-Mizunoo's father and his administration
SELECT ?father ?administration WHERE {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?father.
    ?father <http://dbpedia.org/ontology/administration> ?administration.
}

# Step 4: Find the death place of Matsudaira Tadamasa's father
SELECT ?deathPlace WHERE {
    ?officeHolder <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Matsudaira_Tadamasa>.
    ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?officeHolder <http://dbpedia.org/property/deathPlace> ?deathPlace.
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
184,57,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg and parent of the child of Archduke Joseph Francis of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?grandchild WHERE {
    # Step 1: Identify the royal parent of Archduke Ladislaus Philipp of Austria
    ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Maria_Anna_of_Austria> .
    ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    # Step 2: Find the child of this royal parent
    ?parent <http://dbpedia.org/ontology/child> ?middleChild .
    
    # Step 3: From step 2, find the grandchild (i.e., the child of the middleChild)
    ?middleChild <http://dbpedia.org/ontology/child> ?grandchild .

    # Step 4: Ensure this grandchild is a parent to both Géza von Habsburg and the child of Archduke Joseph Francis of Austria
    ?grandchild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
    ?grandchild <http://dbpedia.org/ontology/parent> ?josephChild .
    ?josephChild <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,50,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?deathPlace ?administration WHERE {
  # Part 1: Matsudaira Tadamasa's father
  ?matTadamasa <http://dbpedia.org/ontology/father> ?fatherMatTadamasa .
  
  # Part 2: Father of Matsudaira Tadamasa's father (grandfather)
  ?fatherMatTadamasa <http://dbpedia.org/ontology/father> ?grandfatherMatTadamasa .
  
  # Part 3: Check if grandfather is a politician
  ?grandfatherMatTadamasa <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Part 4: Find death place of the grandfather
  ?grandfatherMatTadamasa <http://dbpedia.org/property/deathPlace> ?deathPlace .
  
  # Part 5: Emperor Go-Mizunoo's father
  <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?fatherGoMizunoo .

  # Part 6: Find administration of Emperor Go-Mizunoo's father
  ?fatherGoMizunoo <http://dbpedia.org/property/administration> ?administration .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,56,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to the name of Italian People's Party (1994).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
# Find Romano Prodi's birth name and his party
SELECT ?birthNameProdi ?partyProdi WHERE {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/birthName> ?birthNameProdi .
    OPTIONAL { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/politicalParty> ?partyProdi . }
}

# Find any office holder or politician with the same birth name as Romano Prodi and their party
SELECT DISTINCT ?person ?party WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?person <http://dbpedia.org/ontology/politician> [] .
    ?person <http://dbpedia.org/ontology/birthName> ?birthNameProdi .
    OPTIONAL { ?person <http://dbpedia.org/property/politicalParty> ?party . }
}

# Find Giulio Andreotti's party
SELECT ?partyAndreotti WHERE {
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/property/politicalParty> ?partyAndreotti .
}

# Reference to Italian People's Party (1994)
SELECT ?italianPeopleParty WHERE {
    ?italianPeopleParty <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)""@en .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,66,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?nativePlace WHERE {
    # Step 1: Sean Pertwee's claim to fame (film and military conflict)
    ?film <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Sean_Pertwee> .
    ?conflict <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Sean_Pertwee> .

    # Step 2: Actor associated with these claims to fame
    ?actor <http://dbpedia.org/ontology/starring> ?film ;
           <http://dbpedia.org/ontology/personInvolved> ?conflict .

    # Step 3: Native politician in France who is also an actor
    ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
                <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> ;
                <http://dbpedia.org/ontology/officeHolder> ?office ;
                <http://dbpedia.org/ontology/starring> ?film .

    # Step 4: Residence of this politician
    ?residence <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> ;
               <http://dbpedia.org/ontology/settlement> ?settlement ;
               <http://dbpedia.org/ontology/resident> ?politician .

    # Step 5: Native place of the residence
    ?residence <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
378,64,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Identify Carl Pontus Gahn's resource
SELECT ?gahn WHERE {
    ?gahn <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn""@en .
}

# Step 2: Find wars associated with Thomas Trigge and Joaquín Blake
SELECT DISTINCT ?war WHERE {
    OPTIONAL { 
        <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?war .
    }
    OPTIONAL { 
        <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?war .
    }
}

# Step 3: Identify the war that is a military conflict, societal event, and general event
SELECT DISTINCT ?war WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}

# Step 4: Find the commander of this war
SELECT DISTINCT ?commander WHERE {
    ?war <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 5: Retrieve the claim to fame of the commander
SELECT ?award WHERE {
    ?commander <http://dbpedia.org/property/awards> ?award .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,48,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
# Step 1: Find the organization in Belfast with a mayor
SELECT ?organization WHERE {
    ?organization <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast>.
    ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?mayor <http://dbpedia.org/property/politicalPosition> ?position.
    FILTER(CONTAINS(LCASE(STR(?position)), ""mayor"")).
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?mayor <http://dbpedia.org/property/officeHolder> ?organization.
}

# Step 2: Find the nickname of Queen's University Belfast
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/ontology/nickname> ?nickname.
}

# Step 3: Get the alma mater of the mayor identified in step 1
SELECT ?almaMater WHERE {
    ?mayor <http://dbpedia.org/property/almaMater> ?almaMater.
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
528,54,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . }","```sparql
# Part 1: Military force of Battle of Pisagua
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/property/belligerents> ?belligerent .
    ?belligerent <http://dbpedia.org/ontology/country> ?country .
}

# Part 2: War of the commander in the work of --01-09
SELECT DISTINCT ?war WHERE {
    ?work <http://dbpedia.org/property/date> ""----01-09""^^xsd:date .
    ?work <http://dbpedia.org/ontology/author> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?war .
}

# Part 3: Force of Narciso Campero
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/country> ?country .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
161,46,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
# Query for Francisco Largo Caballero's military force
SELECT DISTINCT ?militaryForce WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Largo_Caballero>.
  ?event <http://dbpedia.org/property/militaryForce> ?militaryForce.
}

UNION

# Query for military force of a person decedent at Francoist Spain
SELECT DISTINCT ?militaryForce WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?event <http://dbpedia.org/property/place> <http://dbpedia.org/resource/Francoist_Spain>.
  ?event <http://dbpedia.org/ontology/decedent> ?person.
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?conflict <http://dbpedia.org/property/person> ?person.
  ?conflict <http://dbpedia.org/property/militaryForce> ?militaryForce.
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
184,25,test,Give me the child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
SELECT ?childOfJosephAugust ?grandChild WHERE {
    <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?childOfJosephAugust .
    ?childOfJosephAugust <http://dbpedia.org/ontology/parent> ?parent .
    ?parent <http://dbpedia.org/ontology/child> ?grandChild .
    FILTER(?parent = <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria>)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,67,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commanderInGermanCampaign WHERE {
    # Step 1: Find societal event related to Rutger Jan Schimmelpenninck
    ?event <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
    
    # Step 2: Identify the commander in the war associated with 'Polish Horse'
    ?polishHorse <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse""@en .
    ?war <http://dbpedia.org/ontology/commander> ?commanderInWar .
    ?war <http://dbpedia.org/ontology/militaryUnit> ?polishHorse .
    
    # Step 3: Determine the military force involved in this war
    ?war <http://dbpedia.org/ontology/militaryForce> ?militaryForce .

    # Step 4: Identify the commander in the German campaign of 1813
    ?germanCampaign <http://www.w3.org/2000/01/rdf-schema#label> ""German campaign of 1813""@en .
    ?germanCampaign <http://dbpedia.org/ontology/commander> ?commanderInGermanCampaign .
}
```",7,14,8,3,3,3,3,71,0,0,7,0,0.0,0
16,57,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
SELECT ?person WHERE {
    # Find the spouse of Ted McGinley
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
    
    # Ensure this person was born as Gigi Rice
    ?spouse <http://dbpedia.org/property/birthName> ""Gigi Rice"" .

    # Find the actor from Unnatural and their profession
    ?unnaturalActor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Unnatural_(TV_series)> .
    ?unnaturalActor <http://dbpedia.org/ontology/profession> ?profession .

    # Ensure this person has the same profession as the actor from Unnatural
    ?spouse <http://dbpedia.org/ontology/profession> ?profession .
    
    BIND(?spouse AS ?person)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
492,56,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Step 1: Find the capital of Khemis Miliana District and person decedent there
SELECT ?capital (SAMPLE(?decedent) AS ?decedentKhemisMiliana)
WHERE {
    <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/capital> ?capital .
    ?event <http://dbpedia.org/property/place> ?capital ;
           <http://dbpedia.org/ontology/death> ?decedent .
}

# Step 2: Find person decedent at the work of Joseph C. Satterthwaite
SELECT (SAMPLE(?decedent) AS ?decedentSatterthwaite)
WHERE {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/workLocation> ?workLocation .
    ?event <http://dbpedia.org/property/place> ?workLocation ;
           <http://dbpedia.org/ontology/death> ?decedent .
}

# Step 3: Find commander in Franco-Hova Wars
SELECT (SAMPLE(?commander) AS ?commanderFrancoHova)
WHERE {
    ?event <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Franco-Hova_Wars> ;
           <http://dbpedia.org/ontology/commander> ?commander .
}

# Final step: Find common individual among the three categories
SELECT DISTINCT ?commonIndividual WHERE {
    VALUES (?decedentKhemisMiliana ?decedentSatterthwaite ?commanderFrancoHova) {
        (<http://dbpedia.org/resource/Person1> <http://dbpedia.org/resource/Person2> <http://dbpedia.org/resource/Person3>)
    }
    FILTER(?decedentKhemisMiliana = ?decedentSatterthwaite && ?decedentSatterthwaite = ?commanderFrancoHova)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,18,test,"Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
# Step 1: Find awards associated with Nie Rongzhen
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?award .
}

# Step 2: Find landmarks at the elevation of these awards (assuming awards have an elevation property)
SELECT DISTINCT ?landmark WHERE {
    ?award <http://dbpedia.org/ontology/elevation> ?elevation .
    ?landmark <http://dbpedia.org/ontology/elevation> ?elevation .
}

# Step 3: Find birthplace of a member of The Boils
SELECT ?birthPlace WHERE {
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/The_Boils> .
    ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Step 4: Confirm The Boils' classification
SELECT ?boils WHERE {
    ?boils <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
328,49,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT DISTINCT ?agencyLeader WHERE {
    # Step 1: Find the leader associated with Gustav Jonson
    ?gustav <http://dbpedia.org/ontology/leader> ?leader .
    
    # Step 2: Identify the government agency linked to this leader
    ?leader <http://dbpedia.org/ontology/governmentAgency> ?agency .
    
    # Step 3: Determine the leader of that government agency
    ?agency <http://dbpedia.org/ontology/leader> ?agencyLeader .

    # Step 4: Find the award received by Bruce Fraser
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?award .
    
    # Step 5: Find other awardees of that award
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
778,20,test,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v5 <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v5 <http://dbpedia.org/ontology/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
# Step 1: Identify Bill Joy's software work (BSD)
SELECT ?software WHERE {
    <http://dbpedia.org/resource/Bill_Joy> <http://dbpedia.org/property/work> ?software .
}

# Step 2: Find American awardee of Wolf Prize in Medicine associated with BSD
SELECT DISTINCT ?person ?award WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> .
    ?person <http://dbpedia.org/ontology/award> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Wolf Prize in Medicine""@en .
    ?person <http://dbpedia.org/property/work> ?software .
    FILTER(CONTAINS(LCASE(?software), ""bsd""))
}

# Step 3: Identify the entity associated with the award
SELECT DISTINCT ?entity WHERE {
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ?awardLabel .
    ?award <http://dbpedia.org/ontology/entity> ?entity .
    FILTER(?awardLabel = ""Wolf Prize in Medicine""@en)
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
427,65,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
# Part 1: Find the father of an MIT alumnus and his party
SELECT ?alumnus ?father ?fatherParty WHERE {
    ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?alumnus <http://dbpedia.org/property/father> ?father .
    OPTIONAL { ?father <http://dbpedia.org/ontology/politicalParty> ?fatherParty . }
}

# Part 2: Find the party of Romano Antonio Prodi
SELECT ?prodi ?party WHERE {
    ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?prodi <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi"" .
    OPTIONAL { ?prodi <http://dbpedia.org/ontology/politicalParty> ?party . }
}

# Reference to Italian People's Party (1994)
SELECT ?ipp WHERE {
    ?ipp <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)"" .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,53,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Step 1: Find the event (force) involving Emilio Mola
SELECT ?event WHERE {
    <http://dbpedia.org/resource/Emilio_Mola> <http://dbpedia.org/ontology/event> ?event .
}

# Step 2: Identify the military force involved in Francoist Spain and Spanish Civil War
SELECT ?militaryForce WHERE {
    ?societalEvent <http://dbpedia.org/ontology/militaryConflict> <http://dbpedia.org/resource/Spanish_Civil_War> .
    ?societalEvent <http://dbpedia.org/ontology/event> ?event .
    ?event <http://dbpedia.org/property/decedent> ?person .
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spanish_Civil_War> .
    ?militaryForce <http://dbpedia.org/ontology/event> ?societalEvent .
}

# Step 3: Find the commander of both forces
SELECT DISTINCT ?commander WHERE {
    # Commander for Emilio Mola's event (force)
    ?event1 <http://dbpedia.org/ontology/commander> ?commander .
    
    # Commander for the military force from Francoist Spain and Spanish Civil War
    ?militaryForce <http://dbpedia.org/ontology/commander> ?commander .
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
645,20,test,"Give me the alma mater of the child of the parent of Adela Pankhurst and entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
# Step 1: Find the parent of Adela Pankhurst
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/birthParent> ?parent .
}

# Step 2: Find the child of that parent
SELECT ?child WHERE {
    ?parent <http://dbpedia.org/ontology/child> ?child .
    FILTER(?parent = <result_from_step_1>)
}

# Step 3: Determine the alma mater of this child
SELECT ?almaMater WHERE {
    ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .
    FILTER(?child = <result_from_step_2>)
}

# Step 4: Identify the commander in Battle of Diamond Rock
SELECT ?commander WHERE {
    ?battle <http://dbpedia.org/property/commander> ?commander .
    FILTER(STR(?battle) = ""Battle_of_Diamond_Rock"")
}

# Step 5: Find the country of residence for this commander
SELECT ?country WHERE {
    ?commander <http://dbpedia.org/ontology/country> ?country .
    FILTER(?commander = <result_from_step_4>)
}

# Combine results from steps 3 and 5
SELECT ?almaMater ?country WHERE {
    { SELECT ?almaMater WHERE {
        ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .
        FILTER(?child = <result_from_step_2>)
    } }
    
    UNION
    
    { SELECT ?country WHERE {
        ?commander <http://dbpedia.org/ontology/country> ?country .
        FILTER(?commander = <result_from_step_4>)
    } }
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
182,25,test,Give me the war of the work of Gotabhaya Rajapaksa and war of the author of 2019 Sri Lanka Easter bombings and entity in Sri Lanka.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v3 . },"```sparql
SELECT DISTINCT ?workGotabahya ?warGotabahya ?authorEaster ?warEaster WHERE {
    # Gotabhaya Rajapaksa's works and associated wars
    <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://purl.org/dc/terms/creator> ?workGotabahya .
    OPTIONAL { ?workGotabahya <http://dbpedia.org/ontology/topic> ?warGotabahya . }
    
    # Author of 2019 Sri Lanka Easter bombings and associated wars
    ?authorEaster <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> .
    OPTIONAL { ?authorEaster <http://purl.org/dc/terms/subject> ?warEaster . }
    
    # Ensure entities are connected to Sri Lanka
    FILTER EXISTS {
        ?workGotabahya <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sri_Lanka> .
        ?authorEaster <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sri_Lanka> .
    }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
16,26,test,Give me the professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?otherProfessional WHERE {
    <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/YagoLegalActor108930848> .
    ?otherProfessional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/YagoLegalActor108930848> .
    FILTER(?otherProfessional != ?actor)
}
```",3,3,4,3,1,3,3,71,0,0,40872,0,0.0,0
184,44,test,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
# Step 1: Find the child of Archduke Joseph Karl of Austria
SELECT ?child1 WHERE {
    <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?child1 .
}

# Step 2: From that child, find their own child (grandchild of Archduke Joseph Karl)
SELECT ?grandchild WHERE {
    ?child1 <http://dbpedia.org/ontology/child> ?grandchild .
}

# Step 3: Find the parent of the child of Archduke Joseph Francis of Austria
SELECT ?parent WHERE {
    ?child2 <http://dbpedia.org/property/father> ?parent .
    ?child2 <http://dbpedia.org/property/mother> ?mother .
    FILTER(?parent = ?mother) # Assuming we need a single parent for simplicity
    ?child2 <http://dbpedia.org/ontology/child> ?child3 .
    ?child3 <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/property/father> ?parent .
}

# Step 4: Ensure this person is also a parent of Géza von Habsburg
SELECT DISTINCT ?result WHERE {
    ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
    ?result = ?parent .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
838,16,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
SELECT ?bandMember ?band WHERE {
    ?bandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/YU_Grupa> .
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?bandMember <http://dbpedia.org/ontology/member> ?band .
}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
427,45,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?prodiParty ?andreottiParty WHERE {
  # Find the political party of Romano Prodi
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
  }
  
  # Find the political party of Giulio Andreotti
  OPTIONAL {
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?andreottiParty .
  }
  
  # Ensure both parties have a reference to Partito Popolare Italiano
  OPTIONAL {
    ?prodiParty <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .
  }
  OPTIONAL {
    ?andreottiParty <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,54,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of Don Dokken.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
# Step 1: Find Fredrik Thordendal's band
SELECT ?meshuggah WHERE {
    <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/memberOf> ?meshuggah .
}

# Step 2: Find a Dokken member who is part of another organization that is both a band and a group
SELECT DISTINCT ?dokkenMember WHERE {
    ?dokkenMember <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Dokken> .
    ?dokkenMember <http://dbpedia.org/ontology/memberOf> ?otherBand .
    ?otherBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?otherBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
}

# Step 3: Find the associated musical artist of Watchtower
SELECT DISTINCT ?watchtowerArtist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/property/associatedMusicalArtist> ?watchtowerArtist .
}

# Step 4: Find the associated musical artist of the result from step 3
SELECT DISTINCT ?finalArtist WHERE {
    ?artist <http://dbpedia.org/property/associatedMusicalArtist> ?watchtowerArtist .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
92,48,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
SELECT ?bandMember WHERE {
  # Find the band associated with Nevermore (2006 film)
  ?film <http://www.w3.org/2000/01/rdf-schema#label> ""Nevermore"" .
  FILTER(CONTAINS(LCASE(?film), ""2006 film""))
  ?film <http://dbpedia.org/ontology/reference> ?artist .
  ?artist <http://dbpedia.org/ontology/band> ?band1 .

  # Find the band of Joseph Michael Furney
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael Furney"" .
  ?person <http://dbpedia.org/property/stageName> ?stageName .
  FILTER(CONTAINS(LCASE(?stageName), ""furney""))
  ?person <http://dbpedia.org/ontology/band> ?band2 .

  # Find members of both bands
  {
    ?member <http://dbpedia.org/ontology/member> ?band1 .
  }
  UNION
  {
    ?member <http://dbpedia.org/ontology/member> ?band2 .
  }

  BIND(?member AS ?bandMember)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,70,test,"Give me the parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
SELECT ?parent WHERE {
    # Step 1: Find Seti I's child
    ?childSetiI <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seti_I>.
    
    # Step 2: Find the grandchild of Seti I
    ?grandChild <http://dbpedia.org/ontology/birthParent> ?childSetiI.
    
    # Step 3: Identify the commander in Battle of Perire and find spouse of their father
    ?battle <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Battle_of_Perire>.
    ?commander <http://dbpedia.org/ontology/birthParent> ?fatherCommander.
    ?battle <http://dbpedia.org/ontology/participant> ?commander.
    
    # Step 4: Ensure the spouse is royalty
    ?spouse <http://dbpedia.org/ontology/spouse> ?fatherCommander.
    ?spouse <http://www.w3.org/2002/07/owl#sameAs> ?royalty.

    # Step 5: Find parent of Nefertari's child
    ?nefertariChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nefertari>.
    
    # Step 6: Find the common entity
    ?parent <http://dbpedia.org/ontology/birthParent> ?grandChild.
    ?parent <http://www.w3.org/2002/07/owl#sameAs> ?spouse.
    ?parent <http://dbpedia.org/ontology/birthParent> ?nefertariChild.
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
281,45,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?entity WHERE {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/New_Zealand>.
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?person <http://dbpedia.org/ontology/officeHolder> ?office.
    ?person rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en.
    
    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?unit <http://dbpedia.org/property/memberOf> ?army.
    ?army rdfs:label ""New Zealand Army""@en.
    
    ?person <http://dbpedia.org/ontology/militaryService> ?service.
    ?service <http://dbpedia.org/ontology/unit> ?unit.
    
    ?war <http://dbpedia.org/ontology/battle> ?battle.
    ?battle <http://dbpedia.org/property/memberOf> ?army.
    
    ?unit <http://dbpedia.org/ontology/country> ?entity.
    FILTER(?entity = <http://dbpedia.org/resource/Colony_of_New_Zealand>)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
712,19,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
# Part 1: Capital of the country of Armed Forces of South Russia
SELECT ?capital WHERE {
    <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?country .
    ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .
}

# Part 2: Resting place of the awardee of the show of Soviet Union
SELECT DISTINCT ?burial WHERE {
    ?show <http://www.w3.org/2000/01/rdf-schema#subject> <http://dbpedia.org/resource/Soviet_Union> .
    ?show <http://dbpedia.org/property/awards> ?award .
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
    ?awardee <http://dbpedia.org/ontology/burial> ?burial .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
959,56,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
SELECT ?manager ?team ?nativeManager ?almaMater WHERE {
  ?season <http://dbpedia.org/property/team> ?kashimaAntlers .
  ?kashimaAntlers <http://dbpedia.org/ontology/season> ""1998"" .
  ?season <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason> .
  ?season <http://dbpedia.org/property/manager> ?manager .
  ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .

  ?team <http://dbpedia.org/property/team> ?nativeManager .
  ?nativeManager <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
  ?nativeManager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .

  ?almaMater <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Eiji_Ōtsuka> .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>, <http://dbpedia.org/ontology/University>, <http://dbpedia.org/ontology/EducationalOrganization> .
  ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
}
```",6,11,7,3,3,3,3,71,0,0,2,0,0.0,0
404,61,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
SELECT ?grandparent WHERE {
  # Step 1: Find Princess Victoria Louise's spouse
  <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/property/spouse> ?spouse .

  # Step 2: Identify the father of that spouse
  ?spouse <http://dbpedia.org/ontology/father> ?father .

  # Step 3: Determine children of that father who are royalty
  ?father <http://dbpedia.org/ontology/child> ?child .
  ?child a <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the child's own children who are royalty
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
  ?grandchild a <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Identify the parent of these grandchildren
  ?grandchild <http://dbpedia.org/ontology/father> ?grandparent ;
              <http://dbpedia.org/ontology/mother> ?grandparent .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
294,27,test,"Give me the entity in the birth place, that is a settlement, of Marion James and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?result <http://dbpedia.org/ontology/location> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?commonEntity WHERE {
  # Marion James' birth place
  <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Architect of P.D. Houston Jr. House's resting place
  ?architect <http://dbpedia.org/property/architectOf> <http://dbpedia.org/resource/P._D._Houston_Jr._House> .
  ?architect <http://dbpedia.org/ontology/deathPlace> ?restingPlaceArchitect .

  # Luke Lea's resting place
  <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/deathPlace> ?restingPlaceLukeLea .

  # Find common entity
  FILTER(?birthPlace = ?restingPlaceArchitect)
  FILTER(?birthPlace = ?restingPlaceLukeLea)
  
  BIND(?birthPlace AS ?commonEntity)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,69,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Step 1: Find Jim Sheppard as an artist and his band
SELECT ?jimSheppard ?band WHERE {
    ?jimSheppard <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
    ?jimSheppard <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?jimSheppard <http://dbpedia.org/ontology/memberOfBand> ?band .
}

# Step 2: Find the reference to ""Nevermore"" (2006 film) and its related artist/band
SELECT ?film ?artist WHERE {
    ?film <http://dbpedia.org/property/name> ""Nevermore"" .
    ?film <http://dbpedia.org/ontology/releaseDate> ?date .
    FILTER(YEAR(?date) = 2006)
    ?film <http://dbpedia.org/ontology/reference> ?artist .
}

# Step 3: Identify Joseph Michael's birth name and his associated band
SELECT ?josephMichael ?band WHERE {
    ?josephMichael <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
    ?josephMichael <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?josephMichael <http://dbpedia.org/ontology/memberOfBand> ?band .
}

# Step 4: Find the common musical artist associated with these connections
SELECT DISTINCT ?associatedArtist WHERE {
    # Assuming we have identified entities from previous steps as ?entity1, ?entity2, etc.
    ?entity1 <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
    ?entity2 <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
    ?entity3 <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
701,57,test,Give me the spouse of the father of Merneptah and parent of the child of the child of Seti I and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?spouse WHERE {
    ?father <http://dbpedia.org/ontology/spouse> ?spouse .
    ?father <http://dbpedia.org/property/fatherOf> <http://dbpedia.org/resource/Merenptah> .
    ?child1 <http://dbpedia.org/ontology/parent> ?father .
    ?setiChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Seti_I> .
    ?child2 <http://dbpedia.org/ontology/parent> ?setiChild .
    ?meritamenParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Meritamen> .
    FILTER(?child1 = ?child2 && ?child1 = ?meritamenParent)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,68,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
# Step 1: Find awardees of Jonathon Band's awards
SELECT ?award (GROUP_CONCAT(?otherAwardee; separator="";"") AS ?awardees) WHERE {
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Jonathon_Band>)
} GROUP BY ?award

# Step 2: Find the country in the birthplace of the leader of the 1962 NSW state election
SELECT ?country WHERE {
    ?election <http://dbpedia.org/ontology/politician> ?leader .
    ?election <http://dbpedia.org/property/year> ""1962""^^xsd:gYear .
    ?election <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/New_South_Wales> .
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2006/vcard/ns#country-name> ?country .
}

# Step 3: Find wars associated with Heather Roy's military unit
SELECT ?war WHERE {
    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?unit <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Heather_Roy> .
    ?unit <http://dbpedia.org/ontology/battle> ?war .
}

# Step 4: Combine results to find common wars
SELECT DISTINCT ?commonWar WHERE {
    # Awardees of Jonathon Band's awards and their wars
    ?award (GROUP_CONCAT(?otherAwardee; separator="";"") AS ?awardees) WHERE {
        <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?award .
        ?otherAwardee <http://dbpedia.org/property/awards> ?award .
        FILTER(?otherAwardee != <http://dbpedia.org/resource/Jonathon_Band>)
    } GROUP BY ?award
    ?awardee <http://dbpedia.org/ontology/battle> ?commonWar .
    
    # Wars associated with Heather Roy's military unit
    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?unit <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Heather_Roy> .
    ?unit <http://dbpedia.org/ontology/battle> ?commonWar .
    
    # Country from the birthplace of the 1962 NSW election leader
    ?election <http://dbpedia.org/ontology/politician> ?leader .
    ?election <http://dbpedia.org/property/year> ""1962""^^xsd:gYear .
    ?election <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/New_South_Wales> .
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2006/vcard/ns#country-name> ?country .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
161,31,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
SELECT ?person ?militaryForce WHERE {
    ?person <http://dbpedia.org/ontology/decedent> ?decedent .
    ?decedent <http://dbpedia.org/property/placeOfDeath> ?place .
    FILTER(CONTAINS(LCASE(?place), ""francoist spain""))
    
    ?person <http://dbpedia.org/ontology/militaryConflict> <http://dbpedia.org/resource/Spanish_Civil_War> .

    ?person <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",4,7,5,3,2,3,3,71,0,0,514,0,0.0,0
820,19,test,Give me the child of the parent of the professional in Actor and professional in the award of Scott McCloud.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v4 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . }","```sparql
SELECT ?child WHERE {
    # Step 1: Find Scott McCloud's awards
    <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?award .

    # Step 2: Find actors who have received the same awards
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    ?actor <http://dbpedia.org/property/awards> ?award .

    # Step 3: Find the parents of these actors
    ?parent <http://dbpedia.org/ontology/child> ?actor .

    # Step 4: Find the children of those parents
    ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",5,5,6,3,2,3,2,20,0,0,128,0,0.0,0
161,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Identify Francoist Spain's military conflict
SELECT ?francoConflict WHERE {
    ?francoEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?francoEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?francoEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?francoEvent <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Francoist_Spain>.
}

# Step 2: Find Indalecio Prieto's predecessor
SELECT ?prietoPredecessor WHERE {
    ?indalecioPrieto <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?indalecioPrieto <http://dbpedia.org/property/predecessor> ?prietoPredecessor.
}

# Step 3: Identify Emilio Mola's commander force
SELECT ?emilioMolaEvent WHERE {
    ?emilioMola <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
    ?emilioMola <http://dbpedia.org/property/commanderIn> ?emilioMolaEvent.
    ?emilioMolaEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
}

# Step 4: Find the military force for each identified element
SELECT DISTINCT ?militaryForce WHERE {
    # Military force of Francoist Spain's conflict
    ?francoConflict <http://dbpedia.org/property/militaryForce> ?militaryForce.
    
    # Military force of Indalecio Prieto's predecessor
    ?prietoPredecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?prietoEvent <http://dbpedia.org/property/militaryConflict> ?militaryForce.
    
    # Military force of Emilio Mola's event
    ?emilioMolaEvent <http://dbpedia.org/property/militaryConflict> ?militaryForce.
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
16,50,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
# Step 1: Get professions of actors in ""Unnatural (TV series)""
SELECT ?actor ?profession WHERE {
    <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
}

# Step 2: Get birth name of Gigi Rice
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?birthName .
}

# Step 3: Find a professional with the same profession and birth name
SELECT DISTINCT ?professional WHERE {
    # Assuming we have identified ?profession and ?birthName from previous queries
    ?professional <http://dbpedia.org/ontology/profession> ?profession .
    ?professional <http://dbpedia.org/property/birthName> ?birthName .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
54,22,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?individual ?predecessor WHERE {
    ?individual <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Thihapate_of_Mohnyin>.
    ?individual <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Thinkhaya_of_Pagan>.
    ?individual <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
    ?individual <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>.
    ?individual <http://dbpedia.org/ontology/predecessor> ?predecessor.
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
492,50,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
# Step 1: Find the commander in the Battle of Verdun
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 2: Identify wars that this commander participated in
SELECT DISTINCT ?war WHERE {
    ?commander <http://dbpedia.org/ontology/war> ?war .
    FILTER(?commander = ?commander1) # Replace with actual resource from step 1
}

# Step 3: Find a person who died in Algiers, the capital of Algeria
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
}

# Step 4: Check if this person was also a commander in any of the wars identified in step 2
SELECT DISTINCT ?war ?person WHERE {
    ?person <http://dbpedia.org/ontology/commander> ?war .
    ?war IN (?war1, ?war2, ... ) # Replace with actual resources from step 2
    FILTER(?person = ?person1) # Replace with actual resource from step 3
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
488,67,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . },"```sparql
SELECT ?birthPlace ?administration ?deathPlace WHERE {
  # Birth Place of Enomoto Takeaki
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Administration of the Father of the Spouse (Royalty) of Tokugawa Masako
  OPTIONAL {
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/property/spouse> ?spouse .
    ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?spouseLabel .
    FILTER(CONTAINS(LCASE(?spouseLabel), ""royalty"")) .
    ?spouse <http://dbpedia.org/ontology/father> ?fatherOfSpouse .
    ?fatherOfSpouse <http://dbpedia.org/ontology/administration> ?administration .
  }

  # Death Place of the Father (Politician) of the Father (Office Holder) of Matsudaira Tadamasa
  OPTIONAL {
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?fatherOfTadamasa .
    ?fatherOfTadamasa <http://www.w3.org/2000/01/rdf-schema#label> ?fatherLabel .
    FILTER(CONTAINS(LCASE(?fatherLabel), ""office holder"")) .
    ?fatherOfTadamasa <http://dbpedia.org/ontology/father> ?grandFather .
    ?grandFather <http://www.w3.org/2000/01/rdf-schema#label> ?grandFatherLabel .
    FILTER(CONTAINS(LCASE(?grandFatherLabel), ""politician"")) .
    ?grandFather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",7,10,8,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
184,59,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
SELECT ?finalChild WHERE {
    # Step 1: Find the royal parent of Archduke Ladislaus Philipp of Austria
    ?parent <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Ladislaus_Philipp_of_Austria> .
    ?parent <http://dbpedia.org/ontology/royalty> _:b0 .

    # Step 2: Find the child of this royal parent
    ?child1 <http://dbpedia.org/ontology/child> ?parent .

    # Step 3: Identify the landmark settlement at an elevation of 96.0 meters and its native country
    ?landmark <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    ?landmark <http://dbpedia.org/property/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
    ?landmark <http://dbpedia.org/ontology/nativeCountry> ?country .

    # Step 4: Find the parent of this native country
    ?parent2 <http://dbpedia.org/ontology/country> ?country .

    # Step 5: Finally, find the child of the child from step 2
    ?finalChild <http://dbpedia.org/ontology/child> ?child1 .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
617,57,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?spouse WHERE {
    # Step 1: Identify Antiochus (son of Antiochus III the Great)
    <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?successor .
    
    # Step 2: Ensure successor is royalty
    ?successor <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""royalty""))

    # Step 3: Identify the child of this successor
    ?successor <http://dbpedia.org/ontology/child> ?child .

    # Step 4: Find the spouse of that child
    ?child <http://dbpedia.org/ontology/spouse> ?spouse .

    # Additional steps for completeness:
    # Parent of Antiochus's child
    ?antiochusChild <http://dbpedia.org/ontology/parent> ?antiochus .
    
    # Child of Antiochus III the Great
    ?childOfAntiochusIII <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
16,59,test,Give me the spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
SELECT ?spouse WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ?birthName ;
            <http://dbpedia.org/ontology/profession> ?profession .
    ?actor <http://dbpedia.org/property/rolesInFilm> <http://dbpedia.org/resource/Unnatural_(TV_series)> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
    ?person <http://dbpedia.org/property/spouse> ?spouse .
    FILTER(?birthName = <http://dbpedia.org/resource/Ted_McGinley#birthName>)
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
994,53,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
# Step 1: Find bands Donald Maynard Dokken is a member of
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Dokken> <http://dbpedia.org/ontology/bandMember> ?band .
}

# Step 2: Find associated musical artists of Red Tide (band)
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Step 3: Find bands or artists referencing Watchtower and their associated musicians
SELECT ?artist WHERE {
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Watchtower_(band)> .
    ?reference <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,56,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
# Step 1: Find the artist associated with Nevermore
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Nevermore> <http://dbpedia.org/ontology/member> ?member .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 2: Find the band member who is also associated with Jim Sheppard
SELECT DISTINCT ?bandMember WHERE {
    # Artist from Nevermore
    ?artist <http://dbpedia.org/ontology/member> ?bandMember .
    
    # Associated musical artist of Jim Sheppard
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Jim_Sheppard_(musician)> .
}

# Step 3: Find the band of the person born as Joseph Michael
SELECT DISTINCT ?band WHERE {
    # Person with birth name Joseph Michael
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .

    # Band of this person
    ?band <http://dbpedia.org/ontology/member> ?person .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,19,test,Give me the birth place of the member of Dropkick Murphys and landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Part 1: Find a member of Dropkick Murphys and their birthplace
SELECT ?member ?birthPlace WHERE {
    ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Dropkick_Murphys> .
    ?member <http://dbpedia.org/property/birthPlace> ?birthPlace .
}

# Part 2: Find the commander in Battle of Chishui River and their awards
SELECT ?commander ?award WHERE {
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    ?battle <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Battle_of_Chishui_River> .
    ?commander <http://dbpedia.org/property/awards> ?award .
}

# Part 3: Find landmarks associated with the awards at a specific elevation
SELECT ?landmark WHERE {
    ?award <http://dbpedia.org/ontology/associatedWith> ?landmark .
    ?landmark <http://dbpedia.org/property/elevation> ?elevation .
    FILTER(?elevation > ""specific_elevation_value"") # Replace with actual value if known
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
345,17,test,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
SELECT ?figure ?team WHERE {
    # Find the figure known as ""Stolz von Liechtenstein""
    ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""Stolz von Liechtenstein""@en .
    
    # Get Eiður Guðjohnsen's birth date
    ?eiðurGuðjohnsen <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER(?eiðurGuðjohnsen = <http://dbpedia.org/resource/Eiður_Guðjohnsen>) .

    # Find a person who is both a soccer player and manager, born on the same date
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> ;
            <http://dbpedia.org/ontology/birthDate> ?birthDate .

    # Get the team associated with this person
    ?person <http://dbpedia.org/ontology/team> ?team .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
64,9,test,"Give me the entity in the region, that is a country, of Central European Time and alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?entity WHERE {
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
    ?writer <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> .
    ?writer <http://dbpedia.org/ontology/almaMater> ?almaMater .
    
    ?country <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    ?country <http://dbpedia.org/property/timeZone> ""Central European Time"" .

    ?entity <http://dbpedia.org/ontology/country> ?country .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
9,34,test,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
# Step 1: Find the figure known as QUB
SELECT ?qub WHERE {
    ?qub <http://www.w3.org/2000/01/rdf-schema#label> ""QUB""@en .
}

# Step 2: Identify organizations in Belfast and find their mayors
SELECT DISTINCT ?organization ?mayor WHERE {
    ?organization <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast""@en .
    ?organization <http://dbpedia.org/property/mayor> ?mayor .
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 3: Find the alma mater of the identified mayor
SELECT DISTINCT ?almaMater WHERE {
    ?mayor <http://dbpedia.org/property/almaMater> ?almaMater .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,37,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?grandparent WHERE {
    ?setiI <http://dbpedia.org/ontology/child> ?ramessesII .
    ?ramessesII <http://dbpedia.org/property/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> ?childOfSpouse .
    ?childOfSpouse <http://dbpedia.org/ontology/child> ?grandchild .
    ?grandparent <http://dbpedia.org/ontology/child> ?grandchild .
}
```",4,4,5,3,2,3,3,71,0,3344,2,0.0,0.0,0
356,17,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in 2015 Sacramento Republic FC season.","SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
# Step 1: Find the birthplace of Gary Williams that is an English settlement
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2006/vcard/ns#country-name> ""England"" .
    ?birthPlace a <http://dbpedia.org/class/yago/SettlementsInEngland108610> .
}

# Step 2: Find soccer players and managers from this birthplace
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/class/yago/SoccerPlayersByNationalityEnglish108610> ; <http://dbpedia.org/class/yago/SoccerManagersByNationalityEnglish108610>) .
    FILTER(?birthPlace = ?birthPlaceFromStep1)
}

# Step 3: Find the team associated with this person in the 2015 Sacramento Republic FC season
SELECT DISTINCT ?team WHERE {
    ?person <http://dbpedia.org/ontology/team> ?team .
    ?team <http://dbpedia.org/property/sportSeason> ""2015"" .
    ?team <http://dbpedia.org/property/sportLeague> <http://dbpedia.org/resource/Sacramento_Republic_FC_seasons> .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,38,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?emilioCommander ?franciscoForce WHERE {
    # Find events where Emilio Mola was a commander
    ?event <http://dbpedia.org/ontology/battle> ?relatedEvent .
    ?relatedEvent <http://dbpedia.org/property/commander> ?emilioCommander .
    ?relatedEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Battle> .
    ?relatedEvent <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Emilio_Mola> .

    # Find military forces involved in events related to Francisco Largo Caballero
    ?societalEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
    ?militaryConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?societalEvent <http://dbpedia.org/property/person> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
    ?militaryConflict <http://dbpedia.org/property/person> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
    ?societalEvent <http://dbpedia.org/ontology/militaryForce> ?franciscoForce .
    ?militaryConflict <http://dbpedia.org/ontology/militaryForce> ?franciscoForce .
}
```",4,7,5,2,2,3,3,71,0,0,32,0,0.0,0
994,70,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?bandMember WHERE {
    # Step 1: Identify Don Dokken as a musical artist
    ?dokken <http://dbpedia.org/ontology/birthName> ""Don Dokken"" .
    ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

    # Step 2: Find associated musical artists of Watchtower
    ?watchtower <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
    
    # Step 3: Determine band members of Meshuggah (Fredrik Thordendal's band)
    ?meshuggah <http://dbpedia.org/ontology/member> ?bandMember .
    ?thordendal <http://dbpedia.org/property/band> ?meshuggah .

    # Step 4: Connect entities to find the common band member
    FILTER(?artist = ?bandMember)
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,38,test,"Give me the parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?predecessor ?parent WHERE {
    # Step 1: Find Thihapate's child who is an office holder and royalty
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?child .

    # Step 2: Find the predecessor of that child
    ?child <http://dbpedia.org/ontology/predecessor> ?predecessor .

    # Step 3: Find Narapati I's child
    ?narapatiChild <http://dbpedia.org/ontology/child> ?narapatiChildEntity .
    <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?narapatiChild .

    # Step 4: Find the parent of Narapati I's child
    ?narapatiChildEntity <http://dbpedia.org/ontology/parent> ?parent .
}
```",4,6,5,2,2,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
404,52,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Find the child of Ernest Augustus, Crown Prince of Hanover who is also royalty
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""royalty""))
}

# Step 2: Check if this child has a parent named Ernest Augustus, Duke of Brunswick
SELECT ?child WHERE {
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
    ?child <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""royalty""))
}

# Step 3: Find the spouse of Princess Victoria Louise of Prussia
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,55,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
# Step 1: Identify Sean Pertwee's films and military conflicts
SELECT ?film ?conflict WHERE {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/film> ?film .
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/militaryConflict> ?conflict .
}

# Step 2: Find actors of these films and conflicts
SELECT DISTINCT ?actor WHERE {
    VALUES ?work { ?film ?conflict }
    ?work <http://dbpedia.org/ontology/actor> ?actor .
}

# Step 3: Determine Sean Pertwee's child
SELECT ?child WHERE {
    <http://dbpedia.org/resource/John_Devon_Roland_Pertwee> <http://dbpedia.org/ontology/child> ?child .
}

# Step 4: Identify Sylvie Bermann's British residence
SELECT ?residence WHERE {
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}

# Combine results to find the actor
SELECT DISTINCT ?actor WHERE {
    VALUES ?work { ?film ?conflict }
    ?work <http://dbpedia.org/ontology/actor> ?actor .
    # Ensure the actor is related to Sean Pertwee's child and Sylvie Bermann's residence
    OPTIONAL { ?actor <http://dbpedia.org/ontology/child> ?child . FILTER(?child = ?pertweeChild) }
    OPTIONAL { ?actor <http://dbpedia.org/ontology/residence> ?residence . FILTER(?residence = ?sylvieResidence) }
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
16,52,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?profession ?spouse WHERE {
    # Get Satomi Ishihara's profession
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .

    # Find Ted McGinley's birth name and spouse
    ?tedBirthName <http://www.w3.org/2000/01/rdf-schema#label> ""Ted McGinley""@en .
    ?tedBirthName <http://dbpedia.org/property/birthName> ?birthName .
    ?tedPerson <http://dbpedia.org/ontology/birthName> ?birthName .
    ?tedPerson <http://dbpedia.org/ontology/spouse> ?spouse .

    # Find Georgeanne Marie Rice's spouse
    ?georgeanne <http://www.w3.org/2000/01/rdf-schema#label> ""Georgeanne Marie Rice""@en .
    ?georgeanne <http://dbpedia.org/ontology/spouse> ?spouse .

    # Ensure the spouse is a professional in Satomi Ishihara's profession
    ?spouse <http://dbpedia.org/ontology/profession> ?profession .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,52,test,"Give me the figure known as QUB and alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . }","```sparql
# Step 1: Identify QUB (Queen's University Belfast)
SELECT ?qub WHERE {
    ?qub <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast""@en .
}

# Step 2: Find alma mater of awardees of the Royal Medal
SELECT DISTINCT ?almaMater WHERE {
    ?person <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal""@en .
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?qub <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast""@en .
    FILTER(?almaMater = ?qub)
}

# Step 3: Find alma mater of the mayor of an organization in Belfast
SELECT DISTINCT ?almaMater WHERE {
    ?organization <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast""@en .
    ?mayor <http://dbpedia.org/ontology/politicalParty> ?party .
    ?mayor <http://dbpedia.org/ontology/mayorFor> ?organization .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?qub <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast""@en .
    FILTER(?almaMater = ?qub)
}

# Step 4: Combine results
SELECT DISTINCT ?commonAlmaMater WHERE {
    VALUES ?almaMater { ?almaMater1 ?almaMater2 }
    {
        SELECT ?almaMater1 WHERE {
            ?person <http://dbpedia.org/property/awards> ?award .
            ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal""@en .
            ?person <http://dbpedia.org/ontology/almaMater> ?almaMater1 .
        }
    }
    {
        SELECT ?almaMater2 WHERE {
            ?organization <http://dbpedia.org/ontology/location> ?location .
            ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast""@en .
            ?mayor <http://dbpedia.org/ontology/politicalParty> ?party .
            ?mayor <http://dbpedia.org/ontology/mayorFor> ?organization .
            ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater2 .
        }
    }
    FILTER(?almaMater1 = ?almaMater2)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
666,19,test,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
# Step 1: Find the manager of the 2016–17 Hull City A.F.C. season
SELECT ?manager WHERE {
    ?season <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Hull_City_A.FC/> .
    ?season <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
    ?season <http://dbpedia.org/property/startYear> ""2016""^^<http://www.w3.org/2001/XMLSchema#gYear> .
    ?season <http://dbpedia.org/property/endYear> ""2017""^^<http://www.w3.org/2001/XMLSchema#gYear> .
    ?season <http://dbpedia.org/ontology/coach> ?manager .
}

# Step 2: Find the nickname of an organization related to England
SELECT ?club ?nickname WHERE {
    ?club <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>, <http://dbpedia.org/ontology/Organisation> .
    ?club <http://dbpedia.org/property/nickname> ?nickname .
}

# Step 3: Find players managed by the identified manager in the 2016–17 Hull City A.F.C. season
SELECT DISTINCT ?player WHERE {
    ?manager <http://dbpedia.org/ontology/coachFor> <http://dbpedia.org/resource/Hull_City_A.FC/> ;
             <http://dbpedia.org/property/teamManaged> ?team .
    ?team <http://dbpedia.org/ontology/player> ?player .
}
```",5,9,6,3,2,3,2,20,0,0,2,0,0.0,0
659,55,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . }","```sparql
SELECT ?war ?commander WHERE {
    ?regiment <http://dbpedia.org/ontology/battle> ?war .
    ?schimmelpenninck <http://dbpedia.org/ontology/battle> ?force .
    ?welsh_force <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
    
    FILTER(?regiment = <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)>) .
    FILTER(?schimmelpenninck = <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>) .
    
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    
    ?war <http://dbpedia.org/property/commander> ?commander .
}
```",6,11,7,2,3,3,3,71,0,0,15,0,0.0,0
488,31,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Find the war involving Saitō Hajime and another commander
SELECT ?war WHERE {
    ?war <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/property/foughtBy> <http://dbpedia.org/resource/Sait%C5%8D_Hajime> .
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
         a <http://dbpedia.org/ontology/Event> ;
         a <http://dbpedia.org/ontology/SocietalEvent> .
}

# Find the commander in this war and their birthplace
SELECT DISTINCT ?commander ?birthPlace WHERE {
    ?war <http://dbpedia.org/property/foughtBy> ?commander .
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER(?commander != <http://dbpedia.org/resource/Sait%C5%8D_Hajime>)
}

# Find the death place of Tokugawa Ieyasu
SELECT ?deathPlace WHERE {
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,56,test,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
# Step 1: Find actors of ""The Departed""
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 2: Identify who is native to Pittsburgh (Hub City)
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Pennsylvania> .
    ?person <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/The_Departed> .
}

# Step 3: Confirm if this person acted in a project that is a movie, work, and television show
SELECT ?project WHERE {
    ?actor <http://dbpedia.org/ontology/starring> ?project .
    ?project <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie105069068> .
    ?project <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Work108557636> .
    ?project <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow105069068> .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
981,17,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in Indonesia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . },"```sparql
SELECT ?person ?birthPlace WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>.
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Author>.
    ?person <http://dbpedia.org/property/authoredBook> <http://dbpedia.org/resource/Kamikaze_Girls>.
    ?person <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia>.
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace.
}
```",4,5,5,3,2,3,2,20,0,0,19,0,0.0,0
55,22,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . },"```sparql
# Step 1: Find the producer of ""Used to Love Her"" who is also a band
SELECT ?producer WHERE {
    ?song <http://dbpedia.org/property/producedBy> ?producer .
    ?song <http://dbpedia.org/ontology/title> ""Used to Love Her""@en .
    ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
}

# Step 2: Find the band members of this producer
SELECT DISTINCT ?bandMember WHERE {
    ?producer <http://dbpedia.org/property/member> ?bandMember .
    FILTER(?producer IN (<result_from_step_1>))
}

# Step 3: Check if these band members are part of another entity that is both a band and a group
SELECT DISTINCT ?qualifiedBand WHERE {
    ?bandMember <http://dbpedia.org/property/member> ?qualifiedBand .
    ?qualifiedBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?qualifiedBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
}

# Step 4: Find the band members of these qualified bands
SELECT DISTINCT ?finalMember WHERE {
    ?qualifiedBand <http://dbpedia.org/property/member> ?finalMember .
    FILTER(?qualifiedBand IN (<result_from_step_3>))
}
```

Note: Replace `<result_from_step_1>` and `<result_from_step_3>` with the actual results obtained from executing each respective query step.",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
281,60,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Step 1: Find awards received by Jonathon Band
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?award .
}

# Step 2: Find other awardees of the same awards
SELECT DISTINCT ?otherAwardee ?award WHERE {
    { 
        SELECT ?award WHERE {
            <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?award .
        }
    }
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Jonathon_Band>)
}

# Step 3: Find wars associated with these awardees
SELECT DISTINCT ?otherAwardee ?battle WHERE {
    { 
        SELECT ?award WHERE {
            <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?award .
        }
    }
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Jonathon_Band>)
    ?militaryUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?militaryUnit <http://dbpedia.org/property/member> ?otherAwardee .
    ?militaryUnit <http://dbpedia.org/ontology/battle> ?battle .
}

# Step 4: Find office holders and politicians in the New Zealand Army
SELECT DISTINCT ?professional WHERE {
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?militaryUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?militaryUnit <http://dbpedia.org/property/member> ?professional .
    ?militaryUnit <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/New_Zealand_Army> .
}

# Step 5: Find wars associated with their profession
SELECT DISTINCT ?professional ?battle WHERE {
    { 
        SELECT ?professional WHERE {
            ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
            ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
            ?militaryUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
            ?militaryUnit <http://dbpedia.org/property/member> ?professional .
            ?militaryUnit <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/New_Zealand_Army> .
        }
    }
    ?militaryUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>",6,9,7,3,2,3,3,71,0,0,9,0,0.0,0
184,67,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Find the royal parent of Archduke Ladislaus Philipp of Austria
SELECT ?royalParent WHERE {
    <http://dbpedia.org/resource/Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/father> ?parent .
    ?parent a <http://dbpedia.org/ontology/Royalty> .
    BIND(?parent AS ?royalParent)
}

# Step 2: Find the child of the royal parent
SELECT ?child WHERE {
    ?royalParent <http://dbpedia.org/ontology/child> ?child .
}

# Step 3: Find the grandchild (child of the child) from step 2
SELECT ?grandChild WHERE {
    ?child <http://dbpedia.org/ontology/child> ?grandChild .
}

# Step 4: Identify the parent of Archduchess Margaret of Austria (born 1925)
SELECT ?parentMargaret WHERE {
    <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://dbpedia.org/ontology/father> ?parentMargaret .
}

# Step 5: Find the child of the parent identified in step 4
SELECT ?childMargaret WHERE {
    ?parentMargaret <http://dbpedia.org/ontology/child> ?childMargaret .
}

# Step 6: Determine the grandparent (parent of the child) from step 5
SELECT ?grandParentMargaret WHERE {
    ?childMargaret <http://dbpedia.org/ontology/father> ?grandParentMargaret .
}

# Step 7: Identify Géza von Habsburg's parent
SELECT ?parentGeza WHERE {
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/father> ?parentGeza .
}

# Final step: Ensure the royal parent is also a parent of both individuals identified in steps 6 and 7
SELECT DISTINCT ?grandChild WHERE {
    ?royalParent <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/child> ?grandChild .
    FILTER EXISTS { ?grandChild <http://dbpedia.org/ontology/father> ?grandParentMargaret }
    FILTER EXISTS { ?grandChild <http://dbpedia.org/ontology/father> ?parentGeza }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,45,test,"Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?parent ?predecessor WHERE {
    ?thadoMinsaw <http://dbpedia.org/ontology/birthParent> ?parent .
    ?thinkhaya <http://dbpedia.org/ontology/birthParent> ?thinkhayaParent .
    ?thadoMinsaw <http://www.w3.org/2002/07/owl#sameAs> ?thinkhaya .
    
    ?predecessor <http://dbpedia.org/ontology/successor> ?thadoMinsaw .
    ?predecessor <http://dbpedia.org/ontology/officeHolder> ?office .
    ?predecessor <http://dbpedia.org/ontology/royalty> ?royalty .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,59,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT ?member WHERE {
    ?leader <http://dbpedia.org/ontology/politician> _:a .
    ?leader <http://dbpedia.org/ontology/birthPlace> ?country .
    ?person <http://dbpedia.org/property/dateOfBirth> ""1958-01-01""^^xsd:date .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    ?person <http://dbpedia.org/ontology/nationality> ?country .
    
    ?almaMater <http://dbpedia.org/ontology/almaMater> ?person ;
               <http://dbpedia.org/ontology/country> ""Japan"" ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/JapaneseEducationalInstitution100000001> .
    
    ?almaMater <http://dbpedia.org/ontology/member> ?member .
}
```",6,12,7,3,2,3,3,71,0,0,167,0,0.0,0
498,9,test,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem and band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for Solace of Requiem's band
SELECT ?solaceBand WHERE {
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
    ?v0 <http://dbpedia.org/property/band> ""Solace of Requiem"" .
}

# Query for Mortician's member band
SELECT DISTINCT ?memberBand WHERE {
    ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
    ?v1 <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Mortician_(band)> .
    ?v1 <http://dbpedia.org/property/band> ?memberBand .
}
```",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
547,62,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . }","```sparql
# Part 1: Resting place of the child of the child of William Haliburton
SELECT ?grandchild ?restingPlace WHERE {
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
    ?grandchild <http://dbpedia.org/property/burialPlace> ?restingPlace .
}

UNION

# Part 2: Resting place of Alan Cunningham
SELECT ?person ?restingPlace WHERE {
    ?person rdfs:label ""Alan Cunningham""@en .
    ?person <http://dbpedia.org/property/burialPlace> ?restingPlace .
}

UNION

# Part 3: Resting place of the actor of the show with Emily Richard
SELECT ?actor ?restingPlace WHERE {
    ?show dbo:starring <http://dbpedia.org/resource/E._Richard> ;
          dbo:starring ?actor .
    ?actor <http://dbpedia.org/property/burialPlace> ?restingPlace .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
251,26,test,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?administration ?warLocation ?deathPlace WHERE {
  # Administration of Forza Italia (2013)
  OPTIONAL {
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?administration .
  }

  # Location of the war involving Louis François Félix Musnier
  OPTIONAL {
    ?musnier <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
    ?musnier <http://dbpedia.org/resource/Louis_François_Félix_Musnier> .
    ?conflict <http://dbpedia.org/ontology/battle> ?musnier .
    ?conflict <http://dbpedia.org/ontology/location> ?warLocation .
  }

  # Death place of the author of The Twelve Abbots of Challant
  OPTIONAL {
    ?author <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> .
    ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,28,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?bandMember WHERE {
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Nevermore> .
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

    ?bandMember <http://dbpedia.org/property/memberOf> ?reference .
    
    ?josephBand <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Joseph_Michael> .
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?jimBand <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Jim_Sheppard> .

    FILTER(?bandMember = ?reference && ?bandMember = ?josephBand && ?bandMember = ?jimBand)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
488,54,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
SELECT ?deathPlace ?administration ?birthPlace WHERE {
  # Part 1: Father of Matsudaira Tadamasa
  ?matsudairaTadamasa <http://dbpedia.org/ontology/father> ?fatherOfMatsudaira.

  # Part 2: Father (Office Holder) and his Father (Politician)
  OPTIONAL { ?fatherOfMatsudaira <http://dbpedia.org/ontology/officeHolder> ?office. }
  OPTIONAL { ?politicianFather <http://dbpedia.org/ontology/father> ?fatherOfMatsudaira.
             ?politicianFather <http://dbpedia.org/ontology/politician> ?politics. }

  # Part 3: Death Place of the Politician
  OPTIONAL { ?politicianFather <http://dbpedia.org/property/deathPlace> ?deathPlace. }

  # Part 4: Administration of Emperor Go-Yōzei
  ?goYozei <http://dbpedia.org/resource/Emperor_Go-Yozei> ;
           <http://dbpedia.org/ontology/administration> ?administration.

  # Part 5: Commander in Boshin War
  ?boshinWar <http://dbpedia.org/resource/Boshin_War> ;
             <http://dbpedia.org/ontology/battleCommander> ?commander.

  # Part 6: Birth Place of the Commander
  OPTIONAL { ?commander <http://dbpedia.org/property/birthPlace> ?birthPlace. }

  FILTER(?matsudairaTadamasa = <http://dbpedia.org/resource/Matsudaira_Tadamasa>)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,50,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . },"```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Get the claim to fame (work) of the spouse and find its actors
SELECT DISTINCT ?actor WHERE {
    ?spouse <http://dbpedia.org/ontology/work> ?claimToFame .
    ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 3: Find movies that are also television shows with Roz Ryan as an actor
SELECT DISTINCT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
    ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
}

# Step 4: Find actors of the identified movie
SELECT DISTINCT ?actor WHERE {
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
54,50,test,"Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
SELECT ?parentOfPredecessor WHERE {
    # Step 1: Get the parent of Thado Minsaw of Prome
    ?thadoMinsaw <http://dbpedia.org/ontology/birthParent> ?parent .

    # Step 2: Find Thado Minsaw's predecessor who is an office holder and royalty
    ?predecessor <http://dbpedia.org/ontology/successor> ?thadoMinsaw .
    ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    # Step 3: Get the parent of this predecessor
    ?predecessor <http://dbpedia.org/ontology/birthParent> ?parentOfPredecessor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
251,22,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
# Query for the ruling party in Sicily that is also an organization
SELECT ?party WHERE {
  ?party <http://dbpedia.org/ontology/politicalParty> ?organization .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/PoliticalParty108069068>.
  ?party <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Sicily> .
}

UNION

# Query for the location of a war associated with Louis François Félix Musnier
SELECT ?location WHERE {
  ?war <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Louis_François_Félix_Musnier> .
  ?war <http://dbpedia.org/ontology/location> ?location .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
328,65,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of Joseph Stalin and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . }","```sparql
# Step 1: Find Bruce Fraser's awards
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?award .
}

# Step 2: Find other awardees of these awards
SELECT DISTINCT ?otherAwardee WHERE {
    ?award <http://dbpedia.org/property/recipient> ?otherAwardee .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>)
}

# Step 3: Find the government agency led by Joseph Stalin
SELECT ?agency WHERE {
    <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/ontology/leaderOf> ?office .
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
}

# Step 4: Find the commander in force at Budapest
SELECT ?commander WHERE {
    ?force <http://dbpedia.org/property/commander> ?commander .
    ?person <http://dbpedia.org/property/decedent> ?deathEvent .
    ?deathEvent <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Budapest> .
    ?force <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Budapest> .
}

# Step 5: Combine information to find the common entity
SELECT DISTINCT ?commonEntity WHERE {
    # Awardee of Bruce Fraser's awards
    ?award <http://dbpedia.org/property/recipient> ?commonEntity .
    
    # Leader of Joseph Stalin's government agency
    ?agency <http://dbpedia.org/ontology/leader> ?commonEntity .
    
    # Commander in force at Budapest
    ?commander = ?commonEntity .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
251,23,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/place> ?result . },"```sparql
SELECT ?warLocation ?deathPlace WHERE {
  # Find the location of a war involving Louis François Félix Musnier
  ?musnier <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/ontology/location> ?warLocation .
  FILTER(?musnier = <http://dbpedia.org/resource/Louis_François_Félix_Musnier>) .

  # Find the death place of the author of ""The Twelve Abbots of Challant""
  ?book <http://purl.org/dc/terms/creator> ?author .
  ?author <http://dbpedia.org/property/deathPlace> ?deathPlace .
  FILTER(?book = <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant>) .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
528,66,test,Give me the war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Part 1: War of the military force in the Battle of Pisagua
SELECT ?militaryForce ?war WHERE {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/belligerent> ?militaryForce .
    ?militaryForce <http://dbpedia.org/ontology/war> ?war .
}

# Part 2: Military force of the person born as Narciso Campero
SELECT ?birthName ?militaryForce ?war WHERE {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/militaryService> ?militaryForce .
    ?militaryForce <http://dbpedia.org/ontology/war> ?war .
}

# Part 3: War of the commander in the Battle of La Rinconada de Ate
SELECT ?commander ?war WHERE {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?militaryForce <http://dbpedia.org/ontology/commander> ?commander .
    ?militaryForce <http://dbpedia.org/ontology/war> ?war .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,66,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Resting place of awardees of Gerald Graham's awards
SELECT ?awardee ?restingPlace WHERE {
  <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?award .
  ?awardee <http://dbpedia.org/property/awards> ?award .
  FILTER(?awardee != <http://dbpedia.org/resource/Gerald_Graham>)
  OPTIONAL { ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}

UNION

# Resting place of children of James Burton (property developer)
SELECT ?child ?restingPlace WHERE {
  <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
  OPTIONAL { ?child <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}

UNION

# Resting place of actors in ""Enemy at the Door""
SELECT ?actor ?restingPlace WHERE {
  <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/starring> ?actor .
  OPTIONAL { ?actor <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,68,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
    # Step 1: Find child of Archduke Joseph Francis of Austria
    ?child1 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
    
    # Step 2: Find parent of that child
    ?parent1 <http://dbpedia.org/ontology/birthChild> ?child1 .

    # Step 3: Find royalty parent of Archduke Ladislaus Philipp of Austria
    ?royaltyParent <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .
    FILTER EXISTS { ?royaltyParent a <http://dbpedia.org/ontology/Royalty> } .

    # Step 4: Find child of that royalty parent
    ?child2 <http://dbpedia.org/ontology/birthParent> ?royaltyParent .

    # Step 5: Identify settlement at elevation 96.0
    ?settlement a <http://dbpedia.org/ontology/Settlement> ;
               <http://dbpedia.org/property/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .

    # Step 6: Identify native landmark of that settlement
    ?native <http://dbpedia.org/ontology/nationality> ?settlement .
    ?landmark <http://dbpedia.org/property/location> ?settlement ;
              <http://dbpedia.org/ontology/nativeOf> ?native .

    # Step 7: Find parent of the native
    ?parent2 <http://dbpedia.org/ontology/birthChild> ?native .

    # Ensure all conditions are met
    FILTER(?parent1 = ?parent2)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
767,47,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Step 1: Find the administration associated with George Kilbon Nash
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/memberOf> ?administration .
}

# Step 2: Identify a settlement entity within that administration related to Green
SELECT ?settlement WHERE {
    ?administration <http://dbpedia.org/property/entity> ?settlement .
    ?settlement <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""green""))
    FILTER(STRSTARTS(STR(?settlement), ""http://dbpedia.org/resource/"") && 
           (STRBEFORE(STR(?settlement), ""#"") IN (""Settlement"", ""City"")))
}

# Step 3: Find the alma mater of the administration
SELECT ?almaMater WHERE {
    ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
92,58,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Find the band associated with Joseph Michael
SELECT ?band WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
    ?person <http://dbpedia.org/property/musicalArtist> ?band .
}

UNION

# Find the band associated with Jim Sheppard, specifically Nevermore
SELECT ?band WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?person <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Nevermore_(band)> .
    ?person <http://dbpedia.org/property/musicalArtist> ?band .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,22,test,Give me the member of University of Tsukuba and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/University_of_Tsukuba> .
    ?person <http://dbpedia.org/property/teamManager> <http://dbpedia.org/resource/Takashi_Sekizuka> .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,52,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent ?spouse ?royalChild WHERE {
  # Step 1: Find Nysa (wife of Pharnaces I of Pontus) and her parent(s)
  ?nysa <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Pharnaces_I_of_Pontus> .
  ?nysa <http://dbpedia.org/ontology/birthName> ""Nysa""@en .
  ?nysa <http://dbpedia.org/ontology/parent> ?parent .

  # Step 2: Identify Antiochus III the Great and his children
  ?antiochusIII <http://dbpedia.org/property/spouse> ?spouseAntiochusIII .
  ?antiochusIII <http://dbpedia.org/ontology/birthName> ""Antiochus_III_the_Great""@en .
  ?childOfAntiochusIII <http://dbpedia.org/ontology/father> ?antiochusIII .

  # Step 3: Find the spouse of one of these children
  ?spouseOfChild <http://dbpedia.org/ontology/spouse> ?childOfAntiochusIII .
  
  # Step 4: Identify the child of this spouse who is royalty and also a child of the successor to Antiochus II Theos
  ?royalChild <http://dbpedia.org/ontology/father> ?spouseOfChild .
  ?royalChild <http://dbpedia.org/ontology/mother> ?successorChild .
  ?successor <http://dbpedia.org/ontology/successor> ?antiochusIITheos .
  ?antiochusIITheos <http://dbpedia.org/ontology/birthName> ""Antiochus_II_theos""@en .
  ?successorChild <http://dbpedia.org/ontology/father> ?successor .
  ?royalChild <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Royalty> .

}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
92,52,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
# Part 1: Find the reference (artist) to ""Nevermore"" (2006 film)
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://dbpedia.org/ontology/reference> ?artist .
}

# Part 2: Find band members of the artist from part 1
SELECT ?bandMember WHERE {
    ?artist <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?bandMember .
}

# Part 3: Identify Jim Sheppard and his associated musical artist
SELECT ?musicalArtist WHERE {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/property/birthName> ""Jim Sheppard"" .
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedBand> ?musicalArtist .
}

# Part 4: Find the band of Joseph Michael
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/ontology/memberOf> ?band .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,51,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find the band associated with the person born as Shèna
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Shèna"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}

UNION

# Query to find the band of the writer(s) of Apollo (Hardwell song)
SELECT ?writerBand WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?writer .
  ?writer <http://dbpedia.org/ontology/memberOfBand> ?writerBand .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
9,53,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?university ?nickname WHERE {
    ?university <http://dbpedia.org/ontology/nickname> ?nickname .
    FILTER(?nickname = ""Queen's University Belfast"")
    
    OPTIONAL { 
        ?university <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Allen_Hill_(scientist)> .
    }
    
    OPTIONAL {
        ?mayor a <http://dbpedia.org/ontology/Politician> ;
               <http://dbpedia.org/ontology/mayorFor> ?organization ;
               <http://dbpedia.org/property/almaMater> ?university .
        FILTER(?organization <http://dbpedia.org/resource/Belfast>)
    }
    
    FILTER(EXISTS { ?university <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Allen_Hill_(scientist)> })
    FILTER(EXISTS { ?mayor a <http://dbpedia.org/ontology/Politician> ; 
                   <http://dbpedia.org/ontology/mayorFor> ?organization ;
                   <http://dbpedia.org/property/almaMater> ?university .
                  FILTER(?organization <http://dbpedia.org/resource/Belfast>) })
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,63,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?commonEntity WHERE {
  # Step 1: Find Amun-her-khepeshef's spouse
  ?amunHerKhepeshef <http://dbpedia.org/ontology/spouse> ?spouseAmun.
  
  # Step 2: Find a child of Amun-her-khepeshef and their parent (the spouse)
  ?childAmun <http://dbpedia.org/ontology/birthParent> ?amunHerKhepeshef.
  ?parentAmun <http://dbpedia.org/ontology/birthChild> ?childAmun.
  
  # Step 3: Identify Ramesses II's children
  ?ramessesII <http://dbpedia.org/ontology/birthChild> ?childRamesses.
  
  # Step 4: Determine the parent of that child (should be Ramesses II or his spouse)
  ?parentRamesses <http://dbpedia.org/ontology/birthChild> ?childRamesses.
  
  # Step 5: Identify Merneptah's father
  ?merneptah <http://dbpedia.org/property/father> ?fatherMerneptah.
  
  # Step 6: Find the spouse of Merneptah's father
  ?spouseFatherMerneptah <http://dbpedia.org/ontology/spouse> ?fatherMerneptah.
  
  # Find common entity among these relationships
  FILTER(?parentAmun = ?parentRamesses)
  FILTER(?parentAmun = ?spouseFatherMerneptah)
  
  BIND(?parentAmun AS ?commonEntity)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,58,test,"Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
# Part 1: War of the commander in Peninsular War
SELECT ?war WHERE {
    ?commander <http://dbpedia.org/ontology/commander> ?peninsularWar .
    ?peninsularWar <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Peninsular_War> .
    ?commander <http://dbpedia.org/property/battles> ?war .
}

UNION

# Part 2: War of Carl Pontus Gahn and his claim to fame
SELECT ?war, ?claimToFame WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/commander> ?commanderRole .
    ?commanderRole <http://dbpedia.org/property/battles> ?war .
    ?commanderRole <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
}

UNION

# Part 3: War of Thomas Trigge and his claim to fame
SELECT ?war, ?claimToFame WHERE {
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/commander> ?commanderRole .
    ?commanderRole <http://dbpedia.org/property/battles> ?war .
    FILTER(?war <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Military_conflict>)
    FILTER(?war <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Societal_event>)
    ?commanderRole <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
427,68,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Find the father's party of an MIT alumnus
SELECT ?fatherParty (STR(?fatherParty) AS ?fatherPartyName) WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?alumnus <http://dbpedia.org/property/father> ?father .
  ?father <http://dbpedia.org/ontology/memberOf> ?fatherParty .
}

UNION

# Find Michele Pinto's party
SELECT ?party (STR(?party) AS ?partyName) WHERE {
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/memberOf> ?party .
}

UNION

# Find Romano Antonio Prodi's party
SELECT ?party (STR(?party) AS ?partyName) WHERE {
  <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://dbpedia.org/ontology/memberOf> ?party .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
391,61,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . }","```sparql
SELECT ?movie WHERE {
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .
    ?work <http://dbpedia.org/ontology/claimToFame> ?spouse .
    ?actor <http://dbpedia.org/ontology/actor> ?work .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> ;
           <http://dbpedia.org/ontology/work> ?movie ;
           <http://dbpedia.org/ontology/televisionShow> ?movie .
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
}
```",6,10,7,3,2,3,3,71,0,0,11,0,0.0,0
528,57,test,Give me the war of the commander in the work of --01-09 and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Part 3: Find Irene Morales' associated war
SELECT ?war WHERE {
    ?irene <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>.
    ?irene <http://dbpedia.org/property/birthName> ""Irene Morales"".
    ?irene <http://dbpedia.org/ontology/commanded> ?force.
    ?force <http://dbpedia.org/ontology/battle> ?war.
}

# Part 4: Find Narciso Campero Leyes' associated force and war
SELECT ?force ?war WHERE {
    ?narciso <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>.
    ?narciso <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes"".
    ?narciso <http://dbpedia.org/ontology/commanded> ?force.
    ?force <http://dbpedia.org/ontology/battle> ?war.
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
48,19,test,"Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Part 1: Band of the writer of ""Emotion"" (Carly Rae Jepsen album)
SELECT ?writer ?band WHERE {
    <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?writer .
    OPTIONAL { ?writer <http://dbpedia.org/ontology/band> ?band . }
}

# Part 2: Band of the actor, who is a musical artist, from a show with Stacey Dash
SELECT DISTINCT ?actor ?band WHERE {
    ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Stacey_Dash> .
    ?show <http://dbpedia.org/ontology/starredBy> ?actor .
    OPTIONAL { ?actor <http://dbpedia.org/ontology/band> ?band . }
    FILTER EXISTS { ?actor <http://dbpedia.org/ontology/musicalArtist> [] }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
391,65,test,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find the movie featuring Roz Ryan that is also a work and television show
SELECT ?movie WHERE {
    ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie105069068> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow104961786> .
}

# Step 2: Find the actor of this movie
SELECT DISTINCT ?actor WHERE {
    VALUES ?movie { ?movie1 } # Replace ?movie1 with the result from step 1
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 3: Identify Sherry Hormann's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/property/spouse> ?spouse .
}

# Step 4: Determine the claim to fame of Sherry Hormann's spouse
SELECT ?work WHERE {
    VALUES ?spouse { ?spouse1 } # Replace ?spouse1 with the result from step 3
    ?spouse <http://dbpedia.org/property/claimToFame> ?work .
}

# Step 5: Find the actor of this work
SELECT DISTINCT ?actor WHERE {
    VALUES ?work { ?work1 } # Replace ?work1 with the result from step 4
    ?work <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 6: Identify Hub City and its native figure
SELECT ?native WHERE {
    ?city <http://www.w3.org/2000/01/rdf-schema#label> ""Hub City""@en .
    ?city <http://dbpedia.org/property/nativeOf> ?native .
}

# Combine results to find the common actor
SELECT DISTINCT ?actor WHERE {
    VALUES ?movie { ?movie1 } # Replace ?movie1 with the result from step 1
    VALUES ?work { ?work1 } # Replace ?work1 with the result from step 4
    {
        ?movie <http://dbpedia.org/ontology/starring> ?actor .
    }
    UNION
    {
        ?work <http://dbpedia.org/ontology/starring> ?actor .
    }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
617,66,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
# Step 1: Find Seleucus II Callinicus's royal child
SELECT ?royalChild WHERE {
    <http://dbpedia.org/resource/Seleucus_II_Callinicus> <http://dbpedia.org/ontology/child> ?royalChild .
    ?royalChild a <http://dbpedia.org/ontology/Royalty> .
}

# Step 2: Find the parent of the child of the commander in Battle of Panium
SELECT ?parent WHERE {
    ?commander <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Battle_of_Panium> .
    ?child <http://dbpedia.org/ontology/father> ?commander .
    ?child <http://dbpedia.org/ontology/mother> ?parent .
}

# Step 3: Find the spouse of Antiochus III the Great's child
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?antiochusChild .
    ?antiochusChild <http://dbpedia.org/property/spouse> ?spouse .
}

# Step 4: Combine to find the final entity
SELECT ?finalEntity WHERE {
    # Assuming we have identified variables from previous steps
    ?royalChild2 <http://dbpedia.org/ontology/father> ?parent .
    ?royalChild2 <http://dbpedia.org/ontology/mother> ?spouse .
    BIND(?royalChild2 AS ?finalEntity)
}
```

Note: This query assumes that the intermediate results from steps 1, 2, and 3 are known or can be substituted with actual values. The final step combines these to find the desired entity.",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
251,21,test,Give me the death place of the author of The Twelve Abbots of Challant and administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . },"```sparql
SELECT ?deathPlace ?administrationLocation ?battleLocation WHERE {
  # Query for the death place of the author of ""The Twelve Abbots of Challant""
  ?author dbo:wikiPageWikiLink <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> .
  ?author dbo:deathPlace ?deathPlace .

  # Query for the location of Forza Italia's administration in 2013
  ?forzaItalia dbp:partyName ""Forza Italia"" ;
               dbp:year ""2013"" ;
               dbo:location ?administrationLocation .

  # Query for the location of the Battle of Marengo
  <http://dbpedia.org/resource/Battle_of_Marengo> dbo:location ?battleLocation .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
747,54,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
# Step 1: Find songs written by Amba Shepherd
SELECT ?song WHERE {
    ?song <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Amba_Shepherd> .
}

# Step 2: Get Pavlo Khudzik's birth date
SELECT ?birthDate WHERE {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/property/birthDate> ?birthDate .
}

# Step 3: Find persons born on the same date as Pavlo Khudzik
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/property/birthDate> ?birthDate .
    FILTER(?birthDate = ?pavloBirthDate)
}

# Step 4: Identify Shèna's band
SELECT ?band WHERE {
    ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Shèna> .
}

# Step 5: Find common band among the entities
SELECT DISTINCT ?commonBand WHERE {
    # Band of the writer of Amba Shepherd's song
    ?song <http://dbpedia.org/ontology/writer> ?writer .
    ?band1 <http://dbpedia.org/ontology/member> ?writer .

    # Band of person born on Pavlo Khudzik's birth date
    ?person <http://dbpedia.org/property/birthDate> ?birthDate .
    FILTER(?birthDate = ?pavloBirthDate)
    ?band2 <http://dbpedia.org/ontology/member> ?person .

    # Band of Shèna
    ?band3 <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Shèna> .

    # Find common band
    FILTER(?band1 = ?band2 && ?band2 = ?band3)
    BIND(?band1 AS ?commonBand)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,53,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
# Step 1: Find Princess Victoria Louise of Prussia's birth name and spouse
SELECT ?birthName ?spouse WHERE {
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/birthName> ?birthName .
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
    FILTER(STRSTARTS(STR(?spouse), ""http://dbpedia.org/resource/QClass/Person"")) # Ensure spouse is a person
}

# Step 2: Find their child, Prince Ernest Augustus of Hanover (born 1914)
SELECT ?child WHERE {
    ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> .
}

# Step 3: Identify the father of Ernest Augustus, Duke of Brunswick
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?father .
}

# Step 4: Find the child of this father
SELECT ?result WHERE {
    ?father <http://dbpedia.org/ontology/child> ?result .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,55,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
    ?father <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick>.
    ?princess <http://dbpedia.org/ontology/child> ?father.
    ?princess <http://www.w3.org/2000/01/rdf-schema#label> ""Princess Victoria Louise of Prussia""@en.
    ?spouse <http://dbpedia.org/property/spouse> ?princess.
    ?royalChild <http://dbpedia.org/ontology/child> ?spouse.
    ?royalChild <http://www.w3.org/2000/01/rdf-schema#label> ?label.
    FILTER(CONTAINS(LCASE(?label), ""royalty"")).
    ?parent <http://dbpedia.org/ontology/parent> ?royalChild.
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
994,61,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Step 1: Find the person with Don Dokken as their persona
  ?person <http://dbpedia.org/property/persona> <http://dbpedia.org/resource/Don_Dokken> .
  
  # Step 2: Identify band members of this person
  ?bandMember <http://dbpedia.org/ontology/member> ?person .
  
  # Step 3: Check if these band members are associated with bands that are organizations
  OPTIONAL {
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?bandType .
    FILTER(?bandType IN (<http://dbpedia.org/class/yago/Band108930069>, <http://dbpedia.org/class/yago/MusicalGroup104067>, <http://dbpedia.org/class/yago/Organisation1062371>))
  }
  
  # Step 4: Specifically find band members of Fredrik Thordendal's band
  ?fredrikBandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  
  # Step 5: Identify associated musical artists for these band members
  ?bandMember <http://dbpedia.org/property/associatedActs> ?associatedArtist .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
182,26,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . },"```sparql
SELECT DISTINCT ?warJagathDias ?entityNationalityTamara ?warAuthorEasterBombs WHERE {
  # Wars involving Jagath Dias
  OPTIONAL { 
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?warJagathDias .
  }

  # Entity with the same nationality as Tamara Kunanayakam
  {
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?nationalityTamara .
    ?entityNationalityTamara <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?nationalityTamara .
    FILTER(?entityNationalityTamara != <http://dbpedia.org/resource/Tamara_Kunanayakam>)
  }

  # Wars involving the author of the 2019 Sri Lanka Easter bombings
  OPTIONAL {
    ?authorEasterBombs <http://dbpedia.org/ontology/battle> ?warAuthorEasterBombs .
    ?event <http://dbpedia.org/property/event> <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> .
    ?event <http://dbpedia.org/ontology/author> ?authorEasterBombs .
  }
}
```",5,5,6,2,3,2,3,28,1,1048576,0,9.536734069124156e-07,1.0,1.9073449948406318e-06
404,62,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
SELECT ?child ?parent ?spouse WHERE {
    # Step 1: Find the child of Ernest Augustus, Crown Prince of Hanover
    <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?child .
    
    # Step 2: Identify the parent of that child who is a royalty
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> ;
           <http://dbpedia.org/ontology/parent> ?parent .
    
    # Step 3: Find the spouse of Princess Victoria Louise of Prussia
    OPTIONAL {
        <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/property/spouse> ?spouse .
    }
}
```",7,10,8,3,3,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
421,25,test,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
# Step 1: Identify Edin Dervišhalidović
SELECT ?edin WHERE {
    ?edin <http://dbpedia.org/ontology/birthName> ""Edin Dervišhalidović"" .
}

# Step 2: Determine Samir Bekrić's birthplace
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/property/placeOfBirth> ?birthPlace .
}

# Step 3: Find band members who are awardees
SELECT DISTINCT ?bandMember WHERE {
    ?award <http://dbpedia.org/ontology/recipient> ?bandMember .
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?band .
}

# Step 4: Combine conditions
SELECT DISTINCT ?person WHERE {
    # Person born as Edin Dervišhalidović
    ?person <http://dbpedia.org/ontology/birthName> ""Edin Dervišhalidović"" .

    # Native of Samir Bekrić's birthplace
    ?person <http://dbpedia.org/ontology/placeOfBirth> ?birthPlace .
    
    # Band member who is an awardee
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
    ?award <http://dbpedia.org/ontology/recipient> ?person .

    # Ensure birthplace matches
    {
        SELECT DISTINCT ?birthPlace WHERE {
            <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/property/placeOfBirth> ?birthPlace .
        }
    }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,56,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
# Step 1: Find wars associated with Thomas Trigge, Joaquín Blake, and Carl Pontus Gahn
SELECT DISTINCT ?war WHERE {
    # War involving Thomas Trigge
    ?triggeWar <http://dbpedia.org/ontology/battle> ?war .
    ?triggeWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?triggeWar <http://dbpedia.org/property/person> <http://dbpedia.org/resource/Thomas_Trigge> .

    # War involving Joaquín Blake
    ?blakeWar <http://dbpedia.org/ontology/battle> ?war .
    ?blakeWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?blakeWar <http://dbpedia.org/property/person> <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> .

    # War involving Carl Pontus Gahn
    ?gahnWar <http://dbpedia.org/ontology/battle> ?war .
    ?gahnWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?personGahn <http://dbpedia.org/property/person> ?gahnWar .
    ?personGahn <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn"" .

    # Ensure the war is a societal event and an event
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}

# Step 2: Find the commander of this war
SELECT DISTINCT ?commander WHERE {
    ?war <http://dbpedia.org/ontology/battleCommander> ?commander .
}

# Step 3: Get the claim to fame (awards) of the commander
SELECT ?award WHERE {
    ?commander <http://dbpedia.org/property/awards> ?award .
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
994,52,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of Don Dokken.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
# Step 1: Get associated musical artist of Watchtower
SELECT ?watchtowerArtist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
}

# Step 2: Find band member common to Meshuggah and Don Dokken
SELECT DISTINCT ?commonMember WHERE {
    ?meshuggahMember <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Meshuggah> .
    ?donDokkenMember <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Don_Dokken> .
    FILTER(?meshuggahMember = ?donDokkenMember)
    BIND(?meshuggahMember AS ?commonMember)
}

# Step 3: Get associated musical artists of the common member
SELECT DISTINCT ?artist WHERE {
    ?commonMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
    VALUES ?commonMember { 
        # Placeholder for actual resource URI found in step 2
    }
}

# Step 4: Find associated musical artist of results from steps 1 and 3
SELECT DISTINCT ?finalArtist WHERE {
    ?intermediateArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist .
    VALUES ?intermediateArtist { 
        # Placeholder for actual resource URIs found in steps 1 and 3
    }
}
```

Note: The placeholders in the final query need to be replaced with actual URIs obtained from executing the previous queries.",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
747,42,test,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Get the birth date of Pavlo Khudzik
SELECT ?birthDate WHERE {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 2: Find persons with the same birth date
SELECT DISTINCT ?personWithSameBirthDate WHERE {
    ?personWithSameBirthDate <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER(?birthDate = ""Pavlo Khudzik's birth date"") # Replace with actual birth date from Step 1
}

# Step 3: Get the band of Amba Shepherd
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/band> ?band .
}

# Step 4: Get the band of Tracey Elizabeth McSween
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Tracey_Elizabeth_McSween> <http://dbpedia.org/ontology/band> ?band .
}

# Step 5: Get the band of the person with the same birth date as Pavlo Khudzik
SELECT ?band WHERE {
    ?personWithSameBirthDate <http://dbpedia.org/ontology/band> ?band .
}
```

Note: Replace `""Pavlo Khudzik's birth date""` in Step 2 with the actual birth date obtained from Step 1. This query assumes that DBpedia has consistent data for these properties and entities.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,20,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?country ?war WHERE {
    # Find Bob Heffron's birthplace that is a country
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .

    # Find wars associated with Beauchamp Seymour, 1st Baron Alcester
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?war .
    
    # Ensure the birthplace is a country and find common entities
    FILTER(STRSTARTS(STR(?country), ""http://dbpedia.org/resource/"") && STRSTARTS(STR(?war), ""http://dbpedia.org/resource/""))
}
```",3,4,4,2,2,3,3,71,1,5,0,0.16666666666666666,1.0,0.2857142857142857
747,43,test,"Give me the person born on 1985-04-29 and band of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?person ?shenaBand ?songWriter ?writerBand WHERE {
  # Find person born on 1985-04-29
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^xsd:date .
  
  # Find Shèna's band
  ?shena <http://www.w3.org/2000/01/rdf-schema#label> ""Shèna""@en .
  ?shena <http://dbpedia.org/property/memberOf> ?shenaBand .

  # Find the writer of the song ""Amba Shepherd""
  ?song <http://purl.org/dc/terms/title> ""Amba Shepherd"" .
  ?song <http://purl.org/dc/terms/creator> ?songWriter .

  # Find the band associated with the song's writer
  ?songWriter <http://dbpedia.org/property/memberOf> ?writerBand .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,27,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?teamManager WHERE {
    ?season <http://dbpedia.org/ontology/team> ?team .
    ?season <http://dbpedia.org/property/managers> ?manager .
    ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
    ?team <http://dbpedia.org/ontology/team> ?laterTeam .
    ?laterTeam <http://dbpedia.org/property/managers> ?teamManager .
    FILTER(?season = <http://dbpedia.org/resource/1998_Kashima_Antlers_season>)
}
```",3,4,4,3,1,3,3,71,0,0,10,0,0.0,0
488,29,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?deathPlace ?administration ?birthPlace WHERE {
  # Part 1: Death Place of Yūki Hideyasu's Father (Politician)
  ?yukiHideyasu dbo:father ?father .
  ?father rdf:type dbo:Politician .
  ?father dbo:deathPlace ?deathPlace .

  # Part 2: Administration of Emperor Go-Yōzei
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> dbo:office ?administration .
  }

  # Part 3: Birth Place of Enomoto Takeaki
  <http://dbpedia.org/resource/Enomoto_Takeaki> dbo:birthPlace ?birthPlace .
}
```",4,5,5,2,3,3,3,71,1,783,0,0.0012755102040816326,1.0,0.0025477707006369425
92,68,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
# Step 1: Identify Joseph Michael Furney
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Joseph Michael Furney"".
}

# Step 2: Find the band associated with Joseph Michael Furney
SELECT ?band WHERE {
    ?person <http://dbpedia.org/ontology/band> ?band.
    FILTER(?person = <resource_for_Joseph_Michael_Furney>)
}

# Step 3: Identify the musical artist who is also an actor in ""Return to Nuke 'Em High Volume 1""
SELECT ?artist WHERE {
    ?artist <http://dbpedia.org/ontology/musicalArtist> ?musicalArtist.
    ?artist <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1>.
}

# Step 4: Determine the band member of the artist referenced by ""Nevermore"" (2006 film)
SELECT ?bandMember WHERE {
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Nevermore_(2006_film)>.
    ?reference <http://dbpedia.org/ontology/bandMember> ?bandMember.
}
```

Note: Replace `<resource_for_Joseph_Michael_Furney>` with the actual DBpedia resource URI for Joseph Michael Furney once identified.",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,42,test,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Hungarian_people> .
  ?person <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Budapest> .
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
  
  ?child <http://dbpedia.org/ontology/father> ?person .
  ?grandchild <http://dbpedia.org/ontology/father> ?child .
  ?grandchild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
328,38,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
SELECT ?ferencCommander ?stalinLeader WHERE {
    # Find the commander in the force of Ferenc Szálasi
    <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> <http://dbpedia.org/ontology/commander> ?ferencCommander .

    # Find the leader of an office associated with Joseph Stalin
    OPTIONAL {
        ?office <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Joseph_Stalin> .
        ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
    }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
801,46,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
SELECT ?work ?producer WHERE {
    ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/50_Cent> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalWork108069068> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Song104067465> .
    OPTIONAL { ?work <http://dbpedia.org/ontology/producers> ?producer . }
    FILTER(CONTAINS(LCASE(?work), ""shadow"") || CONTAINS(LCASE(STR(?producer)), ""shadow""))
}
```",5,8,6,3,2,3,3,71,0,0,27,0,0.0,0
232,58,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?actor WHERE {
    # Step 1: Identify Sean Pertwee's claim to fame (film or military conflict)
    ?fame <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Sean_Pertwee> .
    
    # Ensure the fame is a film or military conflict
    VALUES ?type { <http://dbpedia.org/ontology/Film> <http://dbpedia.org/ontology/MilitaryConflict> }
    ?fame rdf:type ?type .

    # Step 2: Find the actor of that film/military conflict
    ?actor <http://dbpedia.org/ontology/starring> ?fame .
    
    # Step 3: Identify Jon Pertwee's child
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Jon_Pertwee> .

    # Ensure the actor is a child of Jon Pertwee
    FILTER(?actor = ?child)

    # Step 4: Determine the residence of a native politician and office holder from France
    ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> .
    ?politician rdf:type <http://dbpedia.org/ontology/Politician> .
    ?politician rdf:type <http://dbpedia.org/ontology/OfficeHolder> .
    ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .

    # Ensure the residence is a settlement in France
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> .
    ?residence rdf:type <http://dbpedia.org/ontology/Settlement> .
    ?politician <http://dbpedia.org/ontology/residence> ?residence .

    # Ensure the actor is native of that French settlement
    ?actor <http://dbpedia.org/ontology/nationality> ?residence .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
827,17,test,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
# Step 1: Find all children of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Filter children who are royalty
FILTER EXISTS { ?child <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Category:Royalty> }

# Step 3: Find the spouse of Princess Pauline of Saxe-Weimar-Eisenach who is royalty
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/spouse> ?spouse .
    FILTER EXISTS { ?spouse <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Category:Royalty> }
}

# Step 4: Find children of the royal spouse
SELECT ?child WHERE {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> .
    FILTER EXISTS { ?spouse <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Category:Royalty> }
    ?spouse <http://dbpedia.org/ontology/child> ?child .
}

# Step 5: Identify which of these children is also a child of Charles Alexander
SELECT DISTINCT ?commonChild WHERE {
    ?commonChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> .
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> .
    FILTER EXISTS { ?spouse <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Category:Royalty> }
    ?spouse <http://dbpedia.org/ontology/child> ?commonChild .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,59,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
# Step 1: Identify the native office holder of the Kingdom of Ireland
SELECT ?officeHolder WHERE {
    ?officeHolder <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland>.
    ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
}

# Step 2: Determine the military force associated with this office holder and identify its commander
SELECT ?commander WHERE {
    ?force <http://dbpedia.org/property/leader> ?officeHolder.
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?force <http://dbpedia.org/property/commander> ?commander.
}

# Step 3: Identify the war or military conflict linked to 'Polish Horse' and determine its commander
SELECT ?warCommander WHERE {
    ?figure <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse""@en.
    ?war <http://dbpedia.org/property/battle> ?figure.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://dbpedia.org/property/commander> ?warCommander.
}
```",6,11,7,3,2,3,3,71,0,0,71,0,0.0,0
16,63,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
SELECT ?profession ?professional WHERE {
    # Step 1: Get Satomi Ishihara's profession
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?satomiProfession .

    # Step 2: Find Ted McGinley and Gigi Rice by their birth names
    ?ted <http://dbpedia.org/property/birthName> ""Teddy James McGinley"" .
    ?gigi <http://dbpedia.org/property/birthName> ""Gigi Rice"" .

    # Step 3: Find the common spouse of Ted and Gigi
    ?spouse <http://dbpedia.org/ontology/spouse> ?ted ;
            <http://dbpedia.org/ontology/spouse> ?gigi .

    # Step 4: Find another professional in Satomi Ishihara's profession
    ?professional <http://dbpedia.org/ontology/profession> ?satomiProfession .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,46,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Wars associated with Carl Pontus Gahn
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/battle> ?war .
  }
  
  # Wars associated with the commander of the Peninsular War
  OPTIONAL {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?war .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
356,20,test,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
# Step 1: Identify Gary Williams (footballer, born 1960)
SELECT ?gary WHERE {
    ?gary <http://dbpedia.org/ontology/birthYear> ""1960"" .
    ?gary <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Footballer> .
}

# Step 2: Find his birthplace
SELECT ?birthPlace WHERE {
    ?gary <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""england""))
}

# Step 3: Identify native team of the birthplace
SELECT ?team WHERE {
    ?birthPlace <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/England> .
    ?team <http://dbpedia.org/property/location> ?birthPlace .
    ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .
}

# Step 4: Find 2015 Sacramento Republic FC season
SELECT ?sacramentoSeason WHERE {
    ?sacramentoSeason <http://dbpedia.org/property/year> ""2015"" .
    ?sacramentoSeason <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason> .
    ?sacramentoSeason <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Sacramento_Republic_FC> .
}

# Step 5: Determine predecessor and successor seasons
SELECT ?successor WHERE {
    ?predecessor <http://dbpedia.org/ontology/successor> ?successor .
    ?sacramentoSeason <http://dbpedia.org/property/predecessor> ?predecessor .
}

# Step 6: Find player in the successor season
SELECT DISTINCT ?player WHERE {
    ?successor <http://dbpedia.org/ontology/player> ?player .
}
```",6,12,7,3,2,3,2,20,0,0,1,0,0.0,0
645,17,test,Give me the entity in United Kingdom and alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater ?entity WHERE {
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Adela_Pankhurst> .
    <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/property/almaMater> ?almaMater .
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""united kingdom"")).
    OPTIONAL { ?entity <http://dbpedia.org/ontology/location> ?location . }
    FILTER(STRSTARTS(STR(?location), STR(<http://dbpedia.org/resource/United_Kingdom>)))
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
696,17,test,Give me the landmark at elevation of the award of the commander in Battle of Chishui River and birth place of Tim Brennan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Step 1: Find the commander in the Battle of Chishui River
SELECT ?commander WHERE {
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Chishui_River> .
    ?battle <http://dbpedia.org/property/commander> ?commander .
}

# Step 2: Find the awards of this commander
SELECT ?award WHERE {
    ?commander <http://dbpedia.org/property/awards> ?award .
}

# Step 3: Find Tim Brennan's birthplace
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Tim_Brennan_(American_football)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Step 4: Find a landmark at the elevation of any award (assuming awards have an associated elevation)
SELECT DISTINCT ?landmark WHERE {
    ?award <http://dbpedia.org/property/elevation> ?elevation .
    ?landmark <http://dbpedia.org/ontology/elevation> ?elevation .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
184,54,test,"Give me the parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of Budapest.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?parent ?grandchild WHERE {
    # Step 1: Parent of Archduchess Ilona of Austria
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/parent> ?parent .

    # Step 2: Child of that parent who is royalty
    ?child <http://dbpedia.org/ontology/parent> ?parent .
    ?child a <http://dbpedia.org/ontology/Royalty> .

    # Step 3: Parent and grandchild of Archduke Ladislaus Philipp of Austria
    <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?grandparent .
    ?grandchild <http://dbpedia.org/ontology/parent> ?grandparent .

    # Step 4: Ensure grandchild is royalty
    ?grandchild a <http://dbpedia.org/ontology/Royalty> .

    # Step 5: Native of Budapest
    ?native <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Hungary> .
    FILTER(?grandchild = ?native)

    # Ensure the grandchild is the same as the child from step 2
    FILTER(?child = ?grandchild)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,63,test,"Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v3 . },"```sparql
SELECT ?alterEgo ?almaMater ?settlement WHERE {
  # Alter ego of Black Hood
  ?blackHood <http://dbpedia.org/property/alterEgo> ?alterEgo .
  
  FILTER(?blackHood = <http://dbpedia.org/resource/Black_Hood>) .

  # Alma mater of George K. Nash's administration
  ?adminMember <http://dbpedia.org/ontology/memberOf> ?administration .
  ?administration <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/George_K._Nash> .
  ?adminMember <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Settlement entity in the administration of the writer of ""Where It's At""
  ?writer <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> .
  ?adminMember2 <http://dbpedia.org/ontology/memberOf> ?administration2 .
  ?administration2 <http://dbpedia.org/property/leader> ?writer .
  ?adminMember2 <http://dbpedia.org/ontology/settlement> ?settlement .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,53,test,"Give me the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?parent WHERE {
    # Step 1: Find the child of Thinkhaya of Pagan
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
    
    # Step 2: Identify the predecessor of an office holder related to Thihapate of Mohnyin
    ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?officeHolder <http://dbpedia.org/ontology/predecessor> ?predecessor .
    
    # Step 3: Link the predecessor to Thihapate of Mohnyin
    ?predecessor <http://dbpedia.org/property/child> ?relatedChild .
    ?relatedChild <http://dbpedia.org/property/father> ?officeHolder .
    ?officeHolder <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .

    # Step 4: Find the parent of Thado Minsaw of Prome
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,58,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
SELECT ?commander WHERE {
    # Step 1: Identify Francisco Largo Caballero's alias ""El Director""
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://www.w3.org/2000/01/rdf-schema#label> ""Francisco Largo Caballero""@en .
    
    # Step 2: Find military forces associated with Francisco Largo Caballero and the Rif War
    ?force <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> ;
           <http://dbpedia.org/property/militaryForce> ?militaryForce .
    
    # Step 3: Find the commander of these forces
    ?commander <http://dbpedia.org/ontology/commander> ?force .
    
    # Ensure the force is a societal event and military conflict
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
9,43,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
# Find John Alderdice's Alma Mater
SELECT ?almaMaterJohn WHERE {
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMaterJohn .
}

UNION

# Find the Awardee of Royal Medals known as QUB and their Alma Mater
SELECT ?almaMaterAwardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medals> .
    ?awardee <http://www.w3.org/2000/01/rdf-schema#label> ""QUB""@en .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMaterAwardee .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
645,19,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of the parent of Adela Pankhurst.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?entity WHERE {
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Adela_Pankhurst> .
    <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/ontology/country> ?country .
    ?entity <http://www.w3.org/ns/prov#location> ?location .
    ?location <http://dbpedia.org/ontology/country> ?country .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
617,20,test,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
SELECT ?child ?spouse WHERE {
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/spouse> ?spouse .
}
```",3,3,4,2,2,3,3,71,4,3,0,0.5714285714285714,1.0,0.7272727272727273
547,29,test,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/Alan_Cunningham_(British_officer)> <http://dbpedia.org/ontology/burial> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Alan_Cunningham_(British_officer)> AS ?person)
  }
  UNION
  {
    ?actor <http://dbpedia.org/property/film> <http://dbpedia.org/resource/Enemy_at_the_Door> .
    ?actor <http://dbpedia.org/ontology/burial> ?restingPlace .
    BIND(?actor AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/burial> ?restingPlace .
    BIND(<http://dbpedia.org/resource/James_Burton_(Egyptologist)> AS ?person)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
994,50,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?commonMember ?associatedArtist WHERE {
  # Fredrik Thordendal's band
  <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/memberOf> ?meshuggahBand .
  
  # Don Dokken's band
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/property/band> ?dokkenBand .

  # Common member between Meshuggah and Dokken
  ?commonMember <http://dbpedia.org/ontology/memberOf> ?meshuggahBand .
  ?commonMember <http://dbpedia.org/ontology/memberOf> ?dokkenBand .

  # Associated musical artist of the common member
  ?commonMember <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
488,20,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?birthPlace (GROUP_CONCAT(?deathPlace; separator=""; "") AS ?deathPlaces) WHERE {
  # Birth place of Enomoto Takeaki
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Father of Yūki Hideyasu who is a politician
  ?yukiHideyasu <http://dbpedia.org/property/father> ?father .
  FILTER(?yukiHideyasu = <http://dbpedia.org/resource/Yūki_Hideyasu>)
  
  # Ensure the father is a politician
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Death place of Yūki Hideyasu's father
  ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",3,4,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
392,26,test,"Give me the entity in the region, that is a country, of Central European Time and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?country WHERE {
    # Step 1: Find Sebastiano Bianchetti's residence
    ?residence <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Sebastiano_Bianchetti> .
    
    # Step 2: Ensure the residence is a settlement in Italy
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Italy> .

    # Step 3: Find the province of the residence
    ?province <http://dbpedia.org/ontology/province> ?residence .

    # Step 4: Identify regions under Central European Time
    ?region <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
    
    # Step 5: Find the country in this region
    ?country <http://dbpedia.org/ontology/country> ?province ;
             <http://dbpedia.org/ontology/region> ?region .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,57,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . }","```sparql
# Step 1: Find S.A. Slayer's associated musical artists
SELECT ?sASlaveArtist WHERE {
    ?sA <http://dbpedia.org/ontology/associatedMusicalArtist> ?sASlaveArtist .
    FILTER(STR(?sA) = ""S.A.Slayer"")
}

# Step 2: Find the band member of Fredrik Thordendal
SELECT DISTINCT ?bandMember WHERE {
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/Organisation>.
    ?band <http://dbpedia.org/property/member> ?bandMember .
    FILTER(STR(?bandMember) = ""Fredrik_Thordendal"")
}

# Step 3: Find the associated musical artist of Donald Maynard Dokken
SELECT ?dMDokkenArtist WHERE {
    ?dMDokken <http://dbpedia.org/ontology/birthName> ""Donald_Maynard_Dokken"" .
    ?dMDokken <http://dbpedia.org/ontology/associatedMusicalArtist> ?dMDokkenArtist .
}

# Step 4: Combine results to find common associated musical artists
SELECT DISTINCT ?commonArtist WHERE {
    # S.A. Slayer's associated artist
    ?sA <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist .
    FILTER(STR(?sA) = ""S.A.Slayer"")

    # Band member of Fredrik Thordendal's associated artist
    ?bandMember <http://dbpedia.org/ontology/member> ?band .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/Organisation>.
    FILTER(STR(?bandMember) = ""Fredrik_Thordendal"")
    ?band <http://dbpedia.org/property/member> ?member .
    ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist .

    # Donald Maynard Dokken's associated artist
    ?dMDokken <http://dbpedia.org/ontology/birthName> ""Donald_Maynard_Dokken"" .
    ?dMDokken <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
838,17,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of Raša Đelmaš.","SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?bandMember WHERE {
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup>.
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/YU_Grupa>.
    ?reference <http://dbpedia.org/property/band> <http://dbpedia.org/resource/Raša_Đelmaš>.
    ?reference <http://dbpedia.org/ontology/member> ?bandMember.
}
```",4,7,5,3,2,3,2,20,0,0,4,0,0.0,0
994,27,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
SELECT ?band WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?person <http://dbpedia.org/property/persona> ""Don Dokken"" .
    ?person <http://dbpedia.org/ontology/band> ?band .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
281,54,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find awardees of Knight Grand Cross of the Order of the Bath
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
}

# Step 2: Find wars associated with these awardees
SELECT DISTINCT ?war WHERE {
    ?awardee <http://dbpedia.org/property/wars> ?war .
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
}

# Step 3: Find wars involving the New Zealand Army
SELECT DISTINCT ?nzWar WHERE {
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/property/wars> ?nzWar .
}

# Step 4: Intersection of wars from steps 2 and 3
SELECT DISTINCT ?commonWar WHERE {
    ?awardee <http://dbpedia.org/property/wars> ?commonWar .
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
    ?nzArmy <http://dbpedia.org/property/wars> ?commonWar .
    FILTER(?awardee != ?nzArmy)
}

# Step 5: Find the leader of the 1962 New South Wales state election
SELECT ?leader WHERE {
    ?election <http://dbpedia.org/ontology/politicianLeader> ?leader .
    ?election <http://dbpedia.org/property/electionDate> ""1962""^^xsd:gYear .
}

# Step 6: Find the birthplace country of this leader
SELECT DISTINCT ?country WHERE {
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
}

# Step 7: Combine results from steps 4 and 6
SELECT DISTINCT ?commonWar WHERE {
    ?awardee <http://dbpedia.org/property/wars> ?commonWar .
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
    ?nzArmy <http://dbpedia.org/property/wars> ?commonWar .
    FILTER(?awardee != ?nzArmy)
    
    ?leader <http://dbpedia.org/ontology/politicianLeader> ?election .
    ?election <http://dbpedia.org/property/electionDate> ""1962""^^xsd:gYear .
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
    
    # Ensure the war involves the country of birth
    ?commonWar <http://dbpedia.org/property/country> ?country .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,26,test,Give me the parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
SELECT ?grandparent WHERE {
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
    ?grandchild <http://dbpedia.org/ontology/parent> ?grandparent .
    ?setiChild <http://dbpedia.org/ontology/child> ?child .
    FILTER(?setiChild = <http://dbpedia.org/resource/Seti_I>)
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
547,54,test,Give me the resting place of the child of James Burton (property developer) and resting place of the actor of the show with Emily Richard and resting place of Alan Cunningham.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Resting place of the child of James Burton (property developer)
SELECT ?child ?restingPlaceChild WHERE {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    OPTIONAL { ?child <http://dbpedia.org/ontology/burial> ?restingPlaceChild . }
}

# Resting place of the actor of the show with Emily Richard
SELECT DISTINCT ?actor ?restingPlaceActor WHERE {
    ?show <http://dbpedia.org/property/shows> <http://dbpedia.org/resource/E._Richard> .
    ?show <http://dbpedia.org/ontology/starring> ?actor .
    OPTIONAL { ?actor <http://dbpedia.org/ontology/burial> ?restingPlaceActor . }
}

# Resting place of Alan Cunningham
SELECT ?restingPlaceAlan WHERE {
    <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/burial> ?restingPlaceAlan .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
294,22,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for politicians who received the Distinguished Service Medal (U.S. Army) and their resting places
SELECT ?politician ?restingPlace WHERE {
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?politician <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> .
  ?politician <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

# Query for the architect of P. D. Houston Jr. House and their resting place
SELECT ?architect ?restingPlace WHERE {
  ?house <http://dbpedia.org/property/architect> ?architect .
  ?house <http://www.w3.org/2000/01/rdf-schema#label> ""P. D. Houston Jr. House""@en .
  ?architect <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
232,47,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?actor WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""John Devon Roland Pertwee""@en .
    ?child <http://dbpedia.org/ontology/birthParent> ?person ;
           <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(CONTAINS(LCASE(?profession), ""actor"") && CONTAINS(LCASE(?profession), ""narrator"") && CONTAINS(LCASE(?profession), ""producer""))
    
    ?child <http://dbpedia.org/property/awards> ?claimToFame .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER(CONTAINS(LCASE(STR(?type)), ""film"") && CONTAINS(LCASE(STR(?type)), ""military conflict""))
    
    ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,29,test,"Give me the commander in Biscay Campaign and military force of Rif War and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Part 1: Commander of Biscay Campaign
SELECT ?commander WHERE {
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Biscay_Campaign>.
    ?battle <http://dbpedia.org/property/commander> ?commander.
}

# Part 2: Military force in Rif War and a societal event/military conflict of Francisco Largo Caballero
SELECT DISTINCT ?militaryForce WHERE {
    # Military force involved in the Rif War
    ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?force1 <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Rif_War>.

    # Military force involved in a societal event/military conflict of Francisco Largo Caballero
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?event <http://dbpedia.org/property/person> <http://dbpedia.org/resource/Francisco_Largo_Caballero>.
    ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?force2 <http://dbpedia.org/property/battle> ?event.

    # Find common military force
    FILTER(?force1 = ?force2)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
16,47,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
# Step 1: Get the actor of ""Unnatural (TV series)""
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 2: Get the profession of this actor
SELECT ?profession WHERE {
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
}

# Step 3: Find Ted Martin McGinley's spouse
SELECT ?spouse WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Ted Martin McGinley"" .
    ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 4: Find another professional in the same profession as the actor
SELECT DISTINCT ?professional WHERE {
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
    ?professional <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?professional != ?actor)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,24,test,Give me the party of Romano Prodi and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?prodiParty ?father ?fathersParty WHERE {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
    
    OPTIONAL {
        <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
        ?father <http://dbpedia.org/ontology/politicalParty> ?fathersParty .
    }
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
801,45,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in  and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?writer ?associatedArtist WHERE {
    ?album <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> .
    ?album <http://purl.org/dc/terms/creator> ?writer .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?westsideStory <http://purl.org/dc/terms/creator> ?writer .
    ?westsideStory <http://dbpedia.org/resource/Westside_Story_(song)> .
    ?album <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
747,62,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v6 . },"```sparql
# Step 1: Find the athlete and soccer player from Zolotonosha
SELECT ?athlete WHERE {
    ?athlete <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Zolotonosha>;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>, <http://dbpedia.org/ontology/SoccerPlayer>.
}

# Step 2: Get the birth date of this athlete
SELECT ?birthDate WHERE {
    ?athlete <http://dbpedia.org/property/birthDate> ?birthDate.
}

# Step 3: Find the writer of the song ""Amba Shepherd""
SELECT ?writer WHERE {
    ?song <http://purl.org/dc/terms/title> ""Amba Shepherd"" ;
          <http://dbpedia.org/ontology/writer> ?writer.
}

# Step 4: Identify the band associated with Shèna
SELECT ?band WHERE {
    ?shena <http://dbpedia.org/property/band> ?band .
    FILTER(CONTAINS(LCASE(?shena), ""shèna""))
}

# Step 5: Find a person born on the same date as the athlete, linked to both the writer and the band
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/property/birthDate> ?birthDate .
    ?person <http://dbpedia.org/ontology/writer> ?writer ;
            <http://dbpedia.org/property/band> ?band .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
328,45,test,"Give me the commander in Eastern Front (World War II) and awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
    ?commander <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> .

    ?jonson <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?jonson <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

    ?agency <http://dbpedia.org/ontology/leader> ?jonson .
    ?commander <http://dbpedia.org/ontology/leader> ?agency .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
492,36,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?person WHERE {
  # Find the capital of Khemis Miliana District
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/capital> ?capital .
  
  # Find persons who died in that capital
  ?person <http://dbpedia.org/property/deathPlace> ?capital .

  # Additionally, find persons who died in French Algeria
  OPTIONAL { 
    ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
  }

  FILTER EXISTS {
    ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/French_Algeria>
  }
}
```",4,5,5,3,2,3,3,71,0,0,16,0,0.0,0
16,18,test,Give me the professional in Actress and spouse of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actress> .
    ?person <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
    ?person <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,65,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Find Ernest Augustus, Duke of Brunswick's father
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?father .
}

# Step 2: Identify Princess Victoria Louise of Prussia's spouse who was born as royalty
SELECT ?spouse WHERE {
    ?princess <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia"" .
    ?princess <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?princess <http://dbpedia.org/property/spouse> ?spouse .
}

# Step 3: Determine the parent (royalty) of Prince George William of Hanover
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?parent .
    ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 4: Find the child (royalty) of the person identified in step 3
SELECT ?child WHERE {
    ?parent <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 5: Identify the child of the father found in step 1
SELECT ?finalChild WHERE {
    ?father <http://dbpedia.org/ontology/child> ?finalChild .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
959,47,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . },"```sparql
# Step 1: Find Eiji Ōtsuka's alma mater that is a Japanese organization, university, and educational institution
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""japanese"") && 
           ?almaMater <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Organisation> &&
           ?almaMater <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/University> &&
           ?almaMater <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Educational_institution>)
}

# Step 2: Identify the leader of the 2010 Japanese House of Councillors election who is a politician
SELECT ?leader WHERE {
    ?election <http://dbpedia.org/property/electionDate> ""2010"" .
    ?election <http://dbpedia.org/ontology/electoralSystem> <http://dbpedia.org/resource/Japanese_House_of_Councillors_elections> .
    ?candidate <http://dbpedia.org/ontology/candidateFor> ?election .
    ?candidate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?candidate <http://dbpedia.org/property/wonElection> true .
    BIND(?candidate AS ?leader)
}

# Step 3: Find the native country of this leader
SELECT ?country WHERE {
    ?leader <http://dbpedia.org/ontology/nationality> ?nationality .
    ?nationality <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
    FILTER(LANG(?countryLabel) = ""en"")
}

# Step 4: Find members of the alma mater who are native to this country
SELECT DISTINCT ?member WHERE {
    ?almaMater <http://dbpedia.org/ontology/member> ?member .
    ?member <http://dbpedia.org/ontology/nationality> ?nationality .
    ?nationality <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
    FILTER(LANG(?countryLabel) = ""en"" && ?countryLabel = ?country)
}
```",5,11,6,3,2,3,3,71,0,0,84,0,0.0,0
427,63,test,"Give me the party of the father of Lamberto Andreotti and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v6 <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Step 1: Find the father of Lamberto Andreotti and his political party
SELECT ?father ?party WHERE {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
    OPTIONAL { ?father <http://dbpedia.org/property/politicalParty> ?party . }
}

# Step 2: Find Michele Pinto and his political party
SELECT ?michelePinto ?party WHERE {
    <http://dbpedia.org/resource/Michele_Pinto> ?michelePinto .
    OPTIONAL { ?michelePinto <http://dbpedia.org/property/politicalParty> ?party . }
}

# Step 3: Find Romano Antonio Prodi's political party
SELECT ?prodi ?party WHERE {
    ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?prodi <http://dbpedia.org/resource/Romano_Antonio_Prodi> .
    OPTIONAL { ?prodi <http://dbpedia.org/property/politicalParty> ?party . }
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
778,16,test,"Give me the entity in the award of Ralph L. Brinster and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
# Step 1: Get entities related to Ralph L. Brinster's awards
SELECT ?awardEntity WHERE {
    <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?award .
    ?award ?p ?awardEntity .
}

# Step 2: Get software authored by Bill Joy
SELECT ?software WHERE {
    ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Bill_Joy> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .
    ?work ?p ?software .
}

# Step 3: Find common entity between the two sets
SELECT DISTINCT ?commonEntity WHERE {
    VALUES ?awardEntity { 
        # Results from Step 1 will be inserted here
    }
    VALUES ?software { 
        # Results from Step 2 will be inserted here
    }
    FILTER(?awardEntity = ?software)
}
```

Note: The actual SPARQL query execution would require running the first two queries to populate the `VALUES` clauses in the third query with specific results.",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
9,66,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
SELECT ?almaMater WHERE {
  ?mayor <http://dbpedia.org/ontology/politician> _:a .
  ?mayor <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .

  ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> .
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .

  ?org <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> ;
       <http://dbpedia.org/property/nickname> ?nickname .
  ?org <http://dbpedia.org/ontology/almaMater> ?almaMater .

  FILTER(?mayor != ?awardee)
  FILTER(?mayor != ?org)
  FILTER(?awardee != ?org)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
281,66,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?country ?militaryUnit ?war ?profession WHERE {
    # Step 1: Identify Bob Heffron's birthplace country
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .

    # Step 2: Find a military unit in New Zealand Army involved in a war with an awardee of Knight Grand Cross
    ?militaryUnit <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/New_Zealand> .
    ?militaryUnit <http://dbpedia.org/ontology/battle> ?war .
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
    ?awardee <http://dbpedia.org/ontology/battle> ?war .

    # Step 3: Determine the profession (office holder and politician) associated with this military unit
    ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Politician> .
    ?profession <http://dbpedia.org/property/profession> ?militaryUnit .

    # Ensure all conditions are met
    FILTER(?country != ?birthPlace)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
747,69,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v7 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
# Step 1: Find the decedent who is an athlete, soccer player, and born in Zolotonosha
SELECT ?decedent WHERE {
    ?decedent <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Zolotonosha>.
    ?decedent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>.
    ?decedent <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer>.
}

# Step 2: Get the birth date of the decedent
SELECT ?birthDate WHERE {
    ?decedent <http://dbpedia.org/property/birthDate> ?birthDate.
}

# Step 3: Find a person born on that date
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/birthDate> ?birthDate.
}

# Step 4: Identify Shèna's band
SELECT ?shenaBand WHERE {
    ?shena <http://xmlns.com/foaf/0.1/name> ""Shèna"".
    ?shena <http://dbpedia.org/ontology/memberOf> ?shenaBand.
}

# Step 5: Identify the writer of Apollo (Hardwell song)
SELECT ?writer WHERE {
    <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://purl.org/dc/terms/creator> ?writer.
}

# Step 6: Find the band of the writer
SELECT ?band WHERE {
    ?writer <http://dbpedia.org/ontology/memberOf> ?band.
}

# Final Query: Combine results to find a person who is in both bands and born on the decedent's birth date
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/property/birthDate> ?birthDate.
    ?person <http://dbpedia.org/ontology/memberOf> ?shenaBand.
    ?person <http://dbpedia.org/ontology/memberOf> ?band.
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
92,21,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?bandMember WHERE {
    ?nevermore <http://www.w3.org/2000/01/rdf-schema#label> ""Nevermore""@en .
    ?josephMichael <http://dbpedia.org/ontology/band> ?band ;
                    <http://dbpedia.org/property/member> ?bandMember .
    ?nevermore <http://dbpedia.org/ontology/member> ?bandMember .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
161,70,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Step 1: Find Indalecio Prieto's predecessor
SELECT ?predecessor WHERE {
    <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 2: Identify Francisco Franco's military force that is a societal event and a military conflict
SELECT ?francoForce WHERE {
    ?francoForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?francoForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?francoForce <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> .
}

# Step 3: Identify El Director's military force that is an event
SELECT ?elDirectorForce WHERE {
    ?elDirectorForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?elDirectorForce <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/El_Director> .
}

# Step 4: Find the commanders of these forces
SELECT DISTINCT ?commander WHERE {
    # Commander for Francisco Franco's force
    ?francoForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?francoForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?francoForce <http://dbpedia.org/ontology/commander> ?commander .
    
    # Commander for El Director's force
    ?elDirectorForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?elDirectorForce <http://dbpedia.org/ontology/commander> ?commander .
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
959,62,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v5 . }","```sparql
SELECT ?member WHERE {
  ?politician <http://dbpedia.org/ontology/election> <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> .
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?politician <http://dbpedia.org/property/nationality> ?country .

  ?manager <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> ;
           <http://dbpedia.org/ontology/teamManager> <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .
  ?manager <http://dbpedia.org/property/nationality> ?country .

  ?almaMater <http://dbpedia.org/ontology/almaMater> ?manager ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>, <http://dbpedia.org/ontology/University>, <http://dbpedia.org/ontology/EducationalOrganization> ;
             <http://dbpedia.org/property/countryName> ""Japan"" .

  ?almaMater <http://dbpedia.org/ontology/member> ?member .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
285,18,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?spouse ?child ?parent WHERE {
    <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",5,5,6,3,2,3,2,20,3,7,0,0.3,1.0,0.4615384615384615
827,16,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?grandChild WHERE {
    # Step 1: Find the child of Maria Pavlovna who is royalty
    ?child <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Maria_Pavlovna_of_Russia_(1786–1859)> .
    ?child a <http://dbpedia.org/ontology/Royalty> .

    # Step 2: Find the child of that child who is royalty
    ?grandChild <http://dbpedia.org/property/father> ?child .
    ?grandChild a <http://dbpedia.org/ontology/Royalty> .

    # Step 3: Identify Charles Augustus and find his father who is royalty
    ?father <http://dbpedia.org/property/son> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach> .
    ?father a <http://dbpedia.org/ontology/Royalty> .

    # Step 4: Find the common link
    FILTER(?grandChild = ?father)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
747,39,test,Give me the band of Amba Shepherd and band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for Amba Shepherd's band
SELECT ?band1 WHERE {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/band> ?band1 .
}

# Query to find the real name of Shèna and then her band
SELECT ?band2 WHERE {
    ?person <http://dbpedia.org/property/persona> ""Shèna"" .
    ?person <http://dbpedia.org/ontology/band> ?band2 .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,51,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT DISTINCT ?war WHERE {
    # Step 1: Find Bob Heffron's birthplace country
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .

    # Step 2: Find entities who are office holders and politicians from that country
    ?person <http://dbpedia.org/ontology/politicalParty> ?party ;
            <http://dbpedia.org/ontology/officeHolder> ?office .
    ?person <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .

    # Step 3: Find military units these individuals were part of within the New Zealand Army
    ?person <http://dbpedia.org/ontology/militaryUnit> ?militaryUnit .
    ?militaryUnit <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/New_Zealand_Army> .

    # Step 4: Identify wars associated with those military units
    ?militaryUnit <http://dbpedia.org/property/battle> ?war .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
294,25,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?awardeeRestingPlace ?architectRestingPlace WHERE {
  # Part 1: Awardee of Distinguished Service Medal (U.S. Army) who is a politician
  ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(United_States_Army)> .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?awardee <http://dbpedia.org/ontology/burial> ?awardeeRestingPlace .

  # Part 2: Architect of P. D. Houston Jr. House and entity in Nashville, Tennessee
  ?architect <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/P._D._Houston_Jr._House> .
  OPTIONAL { ?entity <http://www.w3.org/2000/01/rdf-schema#label> ""Nashville, Tennessee"" . }
  ?architect <http://dbpedia.org/ontology/burial> ?architectRestingPlace .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
378,41,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Wars involving Carl Pontus Gahn
SELECT ?war WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
    ?person <http://dbpedia.org/ontology/war> ?war .
}

UNION

# Wars involving the commander in the Peninsular War
SELECT ?war WHERE {
    ?commander <http://www.w3.org/2000/01/rdf-schema#label> ""Commander of the Peninsular War""@en .
    ?peninsularWar <http://dbpedia.org/ontology/commander> ?commander .
    ?peninsularWar <http://dbpedia.org/ontology/war> ?war .
}

UNION

# Claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?claimToFame WHERE {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/property/claimToFame> ?claimToFame .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
303,21,test,"Give me the entity in Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?party WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/ontology/politicalParty> ?party .
    <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Panama> .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/politicalParty> ?party .
    <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Panama> .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
701,27,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?spouse WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
    ?father <http://dbpedia.org/ontology/father> ?commander .
    ?father <http://dbpedia.org/property/spouse> ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
959,58,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?teamManager WHERE {
  # Step 1: Identify the sports manager for the 1998 Kashima Antlers season
  ?manager <http://dbpedia.org/ontology/team> ?kashimaAntlers .
  ?kashimaAntlers <http://dbpedia.org/property/sportSeason> ""1998"" .

  # Step 2: Determine the team managed by this sports manager
  ?teamManager <http://dbpedia.org/ontology/team> ?team .
  
  # Step 3: Ensure this manager is a member of University of Tsukuba
  ?teamManager <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> .

  # Step 4: Check if the manager is native to Yōichi Masuzoe's country of residence
  ?yMasuzoe <http://dbpedia.org/ontology/nationality> ?country .
  ?teamManager <http://dbpedia.org/ontology/nationality> ?country .
  
  FILTER(?manager != ?teamManager) # Ensure it's a different manager
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
421,20,test,Give me the band member of Senidah and native of the birthplace of Samir Bekrić and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
# Find the birthplace of Samir Bekrić
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Find people native to that birthplace
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/nationality> ?nationality .
    ?nationality <http://dbpedia.org/ontology/country> ?country .
    FILTER(?country = ?birthPlace)
    
    # Ensure the person is a band member of Senidah
    ?person <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Senidah> .

    # Ensure the person was born as Edin Dervišhalidović
    ?person <http://dbpedia.org/ontology/birthName> ""Edin Dervišhalidović"" .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
767,44,test,Give me the alma mater of the administration of George K. Nash and reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
# Alma mater of George K. Nash
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Alter ego of Black Hood
SELECT ?alterEgo WHERE {
    <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?alterEgo .
}

# Entity in Baden-Württemberg
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
994,56,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
# Step 1: Associated musical artist of Watchtower (band)
SELECT ?watchtowerArtist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
}

# Step 2: Associated musical artist of Red Tide (band)
SELECT ?redTideArtist WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?redTideArtist .
}

# Step 3: Intersection of artists from Watchtower and Red Tide
SELECT DISTINCT ?commonArtist WHERE {
    { 
        <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist .
    }
    UNION
    {
        <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist .
    }
}

# Step 4: Persona of Don Dokken (assumed to be Don Dokken himself)
SELECT ?dokken WHERE {
    ?dokken <http://www.w3.org/2000/01/rdf-schema#label> ""Don Dokken""@en .
}

# Step 5: Confirm Don Dokken was born as a musical artist
ASK {
    ?dokken <http://dbpedia.org/ontology/birthPlace> ?place .
    ?dokken <http://dbpedia.org/ontology/birthDate> ?date .
    ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 6: Band members of Don Dokken
SELECT ?bandMember WHERE {
    ?dokken <http://dbpedia.org/property/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?bandMember .
}

# Step 7: Final intersection to find the common band member
SELECT DISTINCT ?finalResult WHERE {
    { 
        ?commonArtist <http://dbpedia.org/ontology/bandMember> ?finalResult .
    }
    UNION
    {
        ?dokken <http://dbpedia.org/property/memberOf> ?band .
        ?band <http://dbpedia.org/ontology/member> ?finalResult .
    }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,64,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT DISTINCT ?birthPlace WHERE {
    ?war <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Saito_Hajime> .
    ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
    ?event a <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
    ?event a <http://dbpedia.org/class/yago/SocialEvent108069068> .
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/birthPlace> ?birthPlace .

    OPTIONAL {
        <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
        ?spouse a <http://dbpedia.org/class/yago/Royalty108069068> .
        ?spouse <http://dbpedia.org/property/father> ?father .
        ?father <http://dbpedia.org/property/administration> ?administration .
    }

    OPTIONAL {
        <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
528,51,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
# Part 1: Force of Narciso Campero
SELECT ?force WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Narciso Campero""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""Narciso Campero"" .
    ?person <http://dbpedia.org/ontology/militaryForce> ?force .
}

# Part 2: War of the commander in Battle of La Rinconada de Ate
SELECT ?war WHERE {
    ?battle <http://www.w3.org/2000/01/rdf-schema#label> ""Battle of La Rinconada de Ate""@en .
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/wars> ?war .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
92,24,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?artist WHERE {
    ?jim a <http://dbpedia.org/ontology/Artist> ;
         <http://www.w3.org/2000/01/rdf-schema#label> ""Jim Sheppard""@en .
    
    ?band a <http://dbpedia.org/ontology/MusicalBand> ;
          <http://dbpedia.org/property/member> ?josephMichael .

    ?josephMichael <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael""@en .
    
    ?band <http://dbpedia.org/ontology/member> ?artist .
    ?jim <http://dbpedia.org/property/memberOf> ?artist .

    FILTER(?artist != ?josephMichael)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
617,42,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
    # Step 1: Seleucus II Callinicus's child who is royalty
    ?royalChild <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?royalChild <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .

    # Step 2: Parent of Antiochus (son of Antiochus III the Great)
    ?antiochus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?antiochus <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .

    # Step 3: Spouse of Laodice IV
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Laodice_IV> .

    # Step 4: Child of the royal child whose parent is the spouse
    ?grandchild <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?grandchild <http://dbpedia.org/property/father> ?spouse .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
92,57,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . }","```sparql
SELECT ?actor ?associatedArtist WHERE {
    ?furney <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
    ?furney <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Nevermore_(band)> .

    ?actor <http://dbpedia.org/ontology/performance> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> .
    ?actor <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Nevermore_(band)> .

    OPTIONAL { ?actor <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,35,test,"Give me the band of the person born as Joseph Michael Furney and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . }","```sparql
SELECT ?band WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael Furney""@en .
    ?person <http://dbpedia.org/property/birthName> ""Joseph Michael Furney"" .
    ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore_(band)> .
    ?person <http://dbpedia.org/ontology/member> ?band .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
345,19,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen and figure known as the nickname of FC Vaduz.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
# Step 1: Get Eiður Guðjohnsen's birth date
SELECT ?birthDate WHERE {
    <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://www.w3.org/2000/01/rdf-schema#label> ""Eiður Guðjohnsen""@en .
    <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 2: Find a person who is both a soccer player and manager born on that date
SELECT DISTINCT ?person WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER(?birthDate = ""1978-11-15""^^xsd:date) # Assuming Eiður Guðjohnsen's birth date is 1978-11-15
}

# Step 3: Get the nickname of FC Vaduz
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/ontology/nickname> ?nickname .
}

# Step 4: Find the team associated with the person identified in step 2
SELECT DISTINCT ?team WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
    ?person <http://dbpedia.org/ontology/birthDate> ""1978-11-15""^^xsd:date .
    ?person <http://dbpedia.org/property/team> ?team .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
801,29,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?artist ?work WHERE {
    # Find associated musical artist of Chris Taylor (music producer)
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
    
    # Find works that are songs, produced by 50 Cent and Chris Taylor
    ?work <http://dbpedia.org/ontology/work> ?song ;
          <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/50_Cent>, <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
    
    # Ensure the work is a song
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalWork100000001> ;
          <http://www.w3.org/2000/01/rdf-schema#label> ?songLabel .
    
    # Filter to ensure the work is a song
    FILTER(CONTAINS(LCASE(?songLabel), ""song""))
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
184,69,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
# Step 1: Find Archduchess Margaret's resource
SELECT ?margaret WHERE {
    ?margaret <http://dbpedia.org/ontology/birthDate> ?date .
    FILTER(year(?date) = 1925)
    FILTER(CONTAINS(LCASE(str(?margaret)), ""archduchess margaret of austria""))
}

# Step 2: Find her parent
SELECT ?parent WHERE {
    VALUES ?margaret { <resource_of_margaret> }
    ?margaret <http://dbpedia.org/ontology/parent> ?parent .
}

# Step 3: Find the child of this parent
SELECT ?child WHERE {
    ?parent <http://dbpedia.org/ontology/child> ?child .
}

# Step 4: Find Archduke Joseph Karl's resource
SELECT ?joseph WHERE {
    FILTER(CONTAINS(LCASE(str(?joseph)), ""archduke joseph karl of austria""))
}

# Step 5: Find his child
SELECT ?child_joseph WHERE {
    VALUES ?joseph { <resource_of_joseph> }
    ?joseph <http://dbpedia.org/ontology/child> ?child_joseph .
}

# Step 6: Find the parent of this child
SELECT ?parent_child_joseph WHERE {
    ?child_joseph <http://dbpedia.org/ontology/parent> ?parent_child_joseph .
}

# Step 7: Identify the landmark at elevation 96.0 that is a settlement
SELECT ?landmark WHERE {
    ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#elevation> ?elevation .
    FILTER(?elevation = ""96.0""^^xsd:float)
    ?landmark <http://dbpedia.org/ontology/type> ?type .
    FILTER(CONTAINS(LCASE(str(?type)), ""settlement""))
}

# Step 8: Find the native of this landmark
SELECT ?native WHERE {
    VALUES ?landmark { <resource_of_landmark> }
    ?native <http://dbpedia.org/ontology/nationality> ?landmark .
}

# Step 9: Find the parent of this native
SELECT ?parent_native WHERE {
    ?native <http://dbpedia.org/ontology/parent> ?parent_native .
}

# Step 10: Find the child of the entity from step 3 and the parent of the entity from step 9
SELECT ?final_child WHERE {
    VALUES (?child, ?parent_native) { (<resource_of_child>, <resource_of_parent_native>) }
    ?child <http://dbpedia.org/ontology/child> ?final_child .
    ?parent_native <http://dbpedia.org/ontology/child> ?final_child .
}

# Step 11: Find the parent of this final child
SELECT ?result WHERE {
    VALUES ?final_child { <resource_of_final_child> }
    ?final_child <http://dbpedia.org/ontology/parent> ?result .
}",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
391,62,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?nativePlace WHERE {
    # Step 1: Identify Sherry Hormann's spouse
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .
    
    # Step 2: Find the claim to fame of Sherry Hormann's spouse (a work)
    ?spouse <http://dbpedia.org/ontology/claimToFame> ?work .

    # Step 3: Identify the actor of ""All About the Andersons""
    ?actor <http://dbpedia.org/ontology/actedIn> <http://dbpedia.org/resource/All_About_the_Andersons> .
    
    # Ensure this actor is also associated with the work found in step 2
    FILTER(?work = <http://dbpedia.org/resource/All_About_the_Andersons>)
    
    # Step 4: Find the nickname of Jackson, Tennessee
    ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""Jackson, Tennessee""@en .
    ?figure <http://dbpedia.org/ontology/nickName> ?nickname .

    # Step 5: Determine the native place of both the actor and the figure with the nickname
    ?actor <http://dbpedia.org/property/nativePlace> ?nativePlaceActor .
    ?nickname <http://dbpedia.org/property/nativePlace> ?nativePlaceNickname .

    # Ensure they are from the same place
    FILTER(?nativePlaceActor = ?nativePlaceNickname)
    
    BIND(?nativePlaceActor AS ?nativePlace)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,45,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of The Departed.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Identify the actor from Compton, California who acted in ""The Departed""
SELECT ?actor WHERE {
    ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>.
    ?actor <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Compton,_California>.
    ?actor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/The_Departed>.
}

# Step 2: Find movies that are a movie, work, and television show
SELECT DISTINCT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>.
    OPTIONAL { ?movie <http://dbpedia.org/ontology/tvSeries> ?tvShow. }
}

# Step 3: Find the movie from step 2 that features the actor identified in step 1
SELECT ?result WHERE {
    ?actor <http://dbpedia.org/ontology/actor> ?result.
    FILTER(?actor IN (SELECT DISTINCT ?actor WHERE {
        ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>.
        ?actor <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Compton,_California>.
        ?actor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/The_Departed>.
    }))
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>.
    OPTIONAL { ?result <http://dbpedia.org/ontology/tvSeries> ?tvShow. }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
427,59,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
# Query for Michele Pinto's political party
SELECT ?party WHERE {
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalParty> ?party .
}

UNION

# Query for the political parties of fathers of MIT alumni
SELECT DISTINCT ?fatherParty WHERE {
    ?alumnus <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?alumnus <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/politicalParty> ?fatherParty .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
754,18,test,Give me the parent of the parent of the parent of Min Linka and parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
SELECT ?commonParent WHERE {
  # Step 1: Find Min Linka's parent
  ?minLinka <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Min_Linka> .
  ?parentOfMinLinka <http://dbpedia.org/ontology/child> ?minLinka .

  # Step 2: Find Min Linka's grandparent
  ?grandParentOfMinLinka <http://dbpedia.org/ontology/child> ?parentOfMinLinka .

  # Step 3: Find Ram Khamhaeng's child
  ?ramKhamhaeng <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Ram_Khamhaeng> .
  ?childOfRamKhamhaeng <http://dbpedia.org/ontology/child> ?ramKhamhaeng .

  # Step 4: Find the parent of Ram Khamhaeng's child
  ?parentOfChildOfRamKhamhaeng <http://dbpedia.org/ontology/child> ?childOfRamKhamhaeng .

  # Step 5: Find common entity between Min Linka's grandparent and parent of Ram Khamhaeng's child
  FILTER(?grandParentOfMinLinka = ?parentOfChildOfRamKhamhaeng)
  BIND(?grandParentOfMinLinka AS ?commonParent)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
378,54,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
# Part 1: Wars involving Carl Pontus Gahn
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Part 2: Claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?claimToFame WHERE {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/notableFor> ?claimToFame .
}

UNION

# Part 3: Wars involving the commander in Peninsular War
SELECT ?otherWar WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> ;
               <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Peninsular_War> .
    ?commander <http://dbpedia.org/ontology/battle> ?otherWar .
    FILTER(?otherWar != <http://dbpedia.org/resource/Peninsular_War>)
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
701,65,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . },"```sparql
SELECT ?parent WHERE {
    # Step 1: Seti I's child
    ?childSetiI <http://dbpedia.org/ontology/birthPlace> ?setiIBirthPlace .
    <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/child> ?childSetiI .

    # Step 2: Grandchild of Seti I
    ?grandChildSetiI <http://dbpedia.org/ontology/birthPlace> ?setiIBirthPlace .
    ?childSetiI <http://dbpedia.org/ontology/child> ?grandChildSetiI .

    # Step 3: Parent of Grandchild
    ?parent <http://dbpedia.org/ontology/child> ?grandChildSetiI .

    # Step 4: Merneptah's Father and Spouse
    ?merneptahFather <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> .
    ?spouse <http://dbpedia.org/ontology/spouse> ?merneptahFather .

    # Step 5: Nefertari's Child
    ?nefertariChild <http://dbpedia.org/ontology/birthPlace> ?setiIBirthPlace .
    ?parent <http://dbpedia.org/ontology/child> ?nefertariChild .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
783,18,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
SELECT ?priscillaBandMember ?samuelBandMember WHERE {
    ?priscilla a <http://dbpedia.org/ontology/MusicalArtist> ;
              <http://www.w3.org/2000/01/rdf-schema#label> ""Priscilla Opoku-Kwarteng""@en .
    ?priscilla <http://dbpedia.org/ontology/member> ?priscillaBandMember .

    ?samuel a <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://www.w3.org/2000/01/rdf-schema#label> ""Samuel Ofori Amponsah""@en .
    ?samuel <http://dbpedia.org/ontology/member> ?samuelBandMember .

    FILTER(?priscillaBandMember != ?samuelBandMember)
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
959,57,test,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v1 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
# Step 1: Find the leader (politician) of the 2010 Japanese House of Councillors election
SELECT ?leader WHERE {
    ?election <http://dbpedia.org/property/election> ""2010 Japanese House of Councillors election"" .
    ?election <http://dbpedia.org/ontology/winner> ?leader .
    ?leader a <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Determine the leader's native country
SELECT ?country WHERE {
    ?leader <http://dbpedia.org/ontology/nationality> ?country .
}

# Step 3: Find a member of University of Tsukuba who is native to that country
SELECT DISTINCT ?member WHERE {
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?member <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/University_of_Tsukuba> .
    ?member <http://dbpedia.org/ontology/nationality> ?country .
}

# Step 4: Identify the manager of Takashi Sekizuka's team
SELECT DISTINCT ?manager WHERE {
    ?team <http://dbpedia.org/property/teamManager> ?manager .
    ?player <http://dbpedia.org/property/currentTeam> ?team .
    ?player <http://dbpedia.org/resource/Takashi_Sekizuka> .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
328,46,test,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Find the commanders based on their roles
SELECT ?volcanoCommander ?szalasiCommander WHERE {
    ?volcanoCommander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
    ?szalasiCommander <http://dbpedia.org/property/commandedForce> <http://dbpedia.org/resource/Ferenc_Szálasi> .
}

# Find the awards received by these commanders
SELECT ?award WHERE {
    VALUES ?commander { ?volcanoCommander ?szalasiCommander }
    ?commander <http://dbpedia.org/property/awards> ?award .
}

# Find other awardees of those awards
SELECT DISTINCT ?otherAwardee WHERE {
    ?award <http://dbpedia.org/property/awardedTo> ?otherAwardee .
    FILTER(?otherAwardee != ?volcanoCommander && ?otherAwardee != ?szalasiCommander)
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
404,66,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
SELECT ?spouse WHERE {
    ?princess <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?princess <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia"" .
    
    ?princess <http://dbpedia.org/ontology/spouse> ?spouse1 .
    ?spouse1 <http://dbpedia.org/ontology/father> ?father .

    ?child <http://dbpedia.org/ontology/child> ?father ;
           <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
    
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    ?child <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,66,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
# Step 1: Find ""El Director"" and their associated military force
SELECT ?elDirector ?militaryForce WHERE {
    ?elDirector <http://dbpedia.org/ontology/kind> <http://dbpedia.org/resource/Category:Leaders>.
    ?elDirector rdfs:label ""El Director""@en.
    ?elDirector <http://dbpedia.org/property/militaryForce> ?militaryForce.
}

# Step 2: Find the commander of El Director's military force
SELECT ?commander WHERE {
    ?militaryForce <http://dbpedia.org/ontology/commander> ?commander.
}

# Step 3: Identify Francisco Franco's military forces involved in societal events and conflicts
SELECT DISTINCT ?francoMilitaryForce WHERE {
    <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/property/militaryForce> ?francoMilitaryForce.
    ?francoMilitaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/SocietalEvent> | <http://dbpedia.org/ontology/MilitaryConflict>).
}

# Step 4: Identify Francisco Largo Caballero's military forces involved in societal events and conflicts
SELECT DISTINCT ?caballeroMilitaryForce WHERE {
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/militaryForce> ?caballeroMilitaryForce.
    ?caballeroMilitaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/SocietalEvent> | <http://dbpedia.org/ontology/MilitaryConflict>).
}

# Step 5: Find commanders for these forces
SELECT ?commander WHERE {
    VALUES ?militaryForce { ?francoMilitaryForce ?caballeroMilitaryForce }
    ?militaryForce <http://dbpedia.org/ontology/commander> ?commander.
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
184,21,test,Give me the parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?archduchessParent ?budaParent WHERE {
  # Find parents of Archduchess Ilona of Austria
  <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/parent> ?archduchessParent .

  # Find natives of Budapest and their parents
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER(CONTAINS(LCASE(?name), ""buda"") || CONTAINS(LCASE(?name), ""budapest""))
  OPTIONAL { ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . }
  ?person <http://dbpedia.org/ontology/parent> ?budaParent .
}
```",3,3,4,2,2,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
959,70,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . },"```sparql
# Step 1: Find the politician who was a leader in the 2010 Japanese House of Councillors election
SELECT ?leader WHERE {
    ?election <http://dbpedia.org/property/election> ""2010 Japanese House of Councillors election"" .
    ?election <http://dbpedia.org/ontology/politician> ?leader .
}

# Step 2: Find the manager of the team for the 1998 Kashima Antlers season
SELECT ?teamManager WHERE {
    ?season <http://dbpedia.org/property/team> ""Kashima Antlers"" .
    ?season <http://dbpedia.org/property/year> ""1998"" .
    ?season <http://dbpedia.org/ontology/sportsManager> ?manager .
    ?manager <http://dbpedia.org/ontology/manager> ?teamManager .
}

# Step 3: Find the alma mater of Eiji Ōtsuka
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/property/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
               <http://dbpedia.org/ontology/university> true ;
               <http://dbpedia.org/ontology/educationalInstitution> true .
    ?almaMater <http://dbpedia.org/property/country> ""Japan""^^<http://www.w3.org/2001/XMLSchema#string> .
}

# Step 4: Find the residence (country) of the leader and its native country
SELECT ?nativeCountry WHERE {
    ?leader <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://dbpedia.org/property/country> ?country .
    ?country <http://dbpedia.org/ontology/nativeCountry> ?nativeCountry .
}
```",8,15,9,3,3,3,3,71,0,0,2,0,0.0,0
547,49,test,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query 1: Resting place of the child of James Burton (Property Developer)
SELECT ?child ?restingPlaceChild WHERE {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    OPTIONAL { ?child <http://dbpedia.org/ontology/burialPlace> ?restingPlaceChild . }
}

# Query 2: Resting place of the awardee of Gerald Graham's award
SELECT ?award ?awardee ?restingPlaceAwardee WHERE {
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?award .
    ?awardee <http://dbpedia.org/property/awards> ?award .
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlaceAwardee . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
378,66,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
# Part 1: Carl Pontus Gahn's War
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/wars> ?war .
}

# Part 2: Peninsular War Commander and their Claim to Fame
SELECT ?commander ?claimToFame WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
    ?commander <http://dbpedia.org/property/commanded> <http://dbpedia.org/resource/Peninsular_War> .
    ?commander <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
}

# Part 3: Thomas Trigge's War
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/property/wars> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/MilitaryConflict> <http://dbpedia.org/ontology/SocietalEvent> <http://dbpedia.org/ontology/Event>) .
}

# Part 4: Commander's Claim to Fame in Thomas Trigge's War
SELECT ?commander ?claimToFame WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/MilitaryConflict> <http://dbpedia.org/ontology/SocietalEvent> <http://dbpedia.org/ontology/Event>) .
    ?commander <http://dbpedia.org/property/commanded> ?war .
    ?commander <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,56,test,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMaterAllenHill ?nickname ?mayorAlmaMater WHERE {
    # Alma Mater of Allen Hill (Scientist)
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMaterAllenHill .

    # Nickname of an Organisation and Educational Institution in Northern Ireland
    ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
    ?organisation <http://dbpedia.org/ontology/location> ?location .
    ?location <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> .
    ?organisation <http://xmlns.com/foaf/0.1/nick> ?nickname .

    # Alma Mater of the Mayor of the Northern Ireland Forum
    ?mayor <http://dbpedia.org/ontology/politician> _:b0 .
    _:b0 <http://dbpedia.org/property/forum> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
312,9,test,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy) and entity in the birthplace of Giorgio Grigolli.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v1 . },"```sparql
SELECT ?entity WHERE {
  # Part 1: Entity in the administration of Democratic Party (Italy)
  {
    ?admin <http://dbpedia.org/ontology/administrativeUnit> ?entity .
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""democratic party italy""))
    ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
    ?entity <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
    ?settlement a <http://dbpedia.org/class/yago/Settlements1000000Inhabitantsschema-2180697> .
    ?entity a <http://dbpedia.org/class/yago/StatesAndProvincesInItaly> .
  }
  
  UNION
  
  # Part 2: Entity in the birthplace of Giorgio Grigolli
  {
    <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?placeLabel .
    ?entity <http://dbpedia.org/ontology/location> ?birthPlace .
  }
}
```",4,8,5,2,2,2,2,9,0,1872,587,0.0,0.0,0
232,69,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . },"SELECT ?actor WHERE {
    # Step 1: Find Jon Pertwee's child
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?birthName .
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jon_Pertwee> .

    # Step 2: Find the native of a British settlement who is a French politician and office holder
    ?native <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
    ?native <http://dbpedia.org/ontology/politician> true .
    ?native <http://dbpedia.org/ontology/officeHolder> true .
    ?native <http://dbpedia.org/ontology/residence> ?settlement .
    ?settlement <http://www.w3.org/2002/07/owl#sameAs> ?britishSettlement .
    ?britishSettlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

    # Step 3: Find Sean Pertwee's claim to fame that is both a film and a military conflict
    ?pertweeClaimToFame <http://dbpedia.org/property/claimToFame> ?filmConflict .
    ?filmConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflicts1000000> .
    ?filmConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Films100000>. 

    # Step 4: Find the actor associated with this claim to fame
    ?actor <http://dbpedia.org/ontology/starring> ?filmConflict .
}
",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
391,70,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v1 <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/property/spouse> ?spouse .
}

# Step 2: Get the claim to fame of the spouse, which is a work
SELECT ?work WHERE {
    ?spouse <http://dbpedia.org/ontology/claimToFame> ?work .
}

# Step 3: Find the actor associated with this work
SELECT ?actor WHERE {
    ?work <http://dbpedia.org/property/actors> ?actor .
}

# Step 4: Identify the figure known as Hub City and find its native professional
SELECT ?professional WHERE {
    <http://dbpedia.org/resource/Hub_City> <http://dbpedia.org/ontology/nativeOf> ?place .
    ?place <http://dbpedia.org/property/professionals> ?professional .
}

# Step 5: Find the movie that involves both the actor and the professional
SELECT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> ;
           <http://dbpedia.org/ontology/work> ?work ;
           <http://dbpedia.org/ontology/televisionShow> ?tvshow .
    ?movie <http://dbpedia.org/property/actors> ?actor .
    ?movie <http://dbpedia.org/property/professionals> ?professional .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
161,28,test,"Give me the military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?spanishCivilWarForce ?francoMilitaryForce WHERE {
  # Military forces involved in the Spanish Civil War
  ?event <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/property/name> ""Spanish Civil War"" .
  ?battle <http://dbpedia.org/ontology/militaryUnit> ?spanishCivilWarForce .

  # Military force associated with Francisco Franco
  OPTIONAL {
    ?francoMilitaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?francoMilitaryForce <http://dbpedia.org/property/country> ?country .
    ?event2 <http://dbpedia.org/ontology/battle> ?biscayCampaign .
    ?biscayCampaign <http://dbpedia.org/property/name> ""Biscay Campaign"" .
    ?biscayCampaign <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> .
    ?francoMilitaryForce <http://dbpedia.org/ontology/battle> ?event2 .
  }
}
```",4,7,5,2,3,3,3,71,0,0,3,0,0.0,0
783,20,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandMember WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?bandMember <http://dbpedia.org/ontology/member> ?person .
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

    OPTIONAL {
        ?ebonyPerson <http://dbpedia.org/property/birthName> ""Ebony Reigns"" .
        ?ebonyPerson <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
        ?association <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandMember .
    }
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
281,64,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Step 1: Find awards received by Jonathon Band
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?award .
}

# Step 2: Find other awardees of those awards
SELECT DISTINCT ?otherAwardee WHERE {
    ?award <http://dbpedia.org/property/awards> ?otherAwardee .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Jonathon_Band>)
}

# Step 3: Find wars associated with these awardees
SELECT DISTINCT ?war WHERE {
    ?otherAwardee <http://dbpedia.org/ontology/war> ?war .
}

# Step 4: Identify military units that are also office holders/politicians in the New Zealand Army
SELECT DISTINCT ?entity WHERE {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?entity <http://dbpedia.org/property/militaryService> <http://dbpedia.org/resource/New_Zealand_Army> .
}

# Step 5: Find wars associated with these entities
SELECT DISTINCT ?war WHERE {
    ?entity <http://dbpedia.org/ontology/war> ?war .
}

# Step 6: Ensure these entities are part of the Colony of New Zealand
SELECT DISTINCT ?war WHERE {
    ?entity <http://dbpedia.org/ontology/entityLocatedIn> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
    ?entity <http://dbpedia.org/ontology/war> ?war .
}

# Combine results from steps 3 and 5
SELECT DISTINCT ?war WHERE {
    { ?otherAwardee <http://dbpedia.org/ontology/war> ?war . }
    UNION
    { ?entity <http://dbpedia.org/ontology/war> ?war . 
      ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
      ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
      ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
      ?entity <http://dbpedia.org/property/militaryService> <http://dbpedia.org/resource/New_Zealand_Army> .
      ?entity <http://dbpedia.org/ontology/entityLocatedIn> <http://dbpedia.org/resource/Colony_of_New_Zealand> . 
    }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,50,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?writer ?associatedArtist WHERE {
    ?album <http://purl.org/dc/terms/title> ""40 Dayz & 40 Nightz"" .
    ?album <http://dbpedia.org/ontology/writer> ?writer .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

    ?album <http://dbpedia.org/property/producer> ?producer .
    
    ?work <http://dbpedia.org/ontology/producer> ?producer .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .

    ?professional <http://dbpedia.org/property/profession> ""Rapper"" .
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    
    ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",5,11,6,3,2,3,3,71,0,0,9,0,0.0,0
435,20,test,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . }","```sparql
# Query for Article 62, Section IV of Constitution of Iceland
SELECT ?description WHERE {
    <http://dbpedia.org/resource/Constitution_of_Iceland> <http://dbpedia.org/ontology/article> ?article .
    ?article <http://dbpedia.org/property/title> ""Article 62"" .
    ?article <http://dbpedia.org/property/section> ""Section IV"" .
    ?article <http://dbpedia.org/ontology/description> ?description .
}

# Query for territory administered from Reykjavík
SELECT ?territory WHERE {
    ?admin <http://dbpedia.org/ontology/administrativeUnit> ?territory .
    ?admin <http://dbpedia.org/property/capital> <http://dbpedia.org/resource/Reykjavík> .
}

# Query for time zone and region of Bombali Shebora Chiefdom
SELECT ?timeZone ?region WHERE {
    <http://dbpedia.org/resource/Bombali_Shebora_Chowchiefdom> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?location .
    ?location <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?location <http://dbpedia.org/ontology/region> ?region .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
232,64,test,"Give me the actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
# Step 1: Find the actor of ""Dog Soldiers"" (film)
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/Dog_Soldiers_(film)> dbo:starring ?actor .
}

# Step 2: Determine the native residence of this actor, ensuring it is a settlement and British
SELECT ?residence WHERE {
    ?actor dbo:nationality dbr:United_Kingdom . # Assuming the actor is British
    ?actor dbo:birthPlace ?residence .
    ?residence rdf:type dbo:Settlement .
}

# Step 3: Find the politician who is an office holder from France and is also a child of Jon Pertwee
SELECT ?politician WHERE {
    ?politician dbo:nationality dbr:France .
    ?politician dbo:officeHolder true .
    ?politician dbo:parent <http://dbpedia.org/resource/Jon_Pertwee> .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
232,49,test,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
# Step 1: Identify John Devon Roland Pertwee
SELECT ?pertwee WHERE {
    ?pertwee <http://www.w3.org/2000/01/rdf-schema#label> ""John Devon Roland Pertwee""@en .
}

# Step 2: Find the native residence of a British politician and office holder from France
SELECT ?settlement WHERE {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> ;
            <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> ;
            <http://dbpedia.org/ontology/birthPlace> ?settlement .
    FILTER EXISTS { ?person <http://dbpedia.org/ontology/politicalParty> ?party . }
    FILTER EXISTS { ?person <http://dbpedia.org/ontology/officeHolder> ?office . }
}

# Step 3: Find the child of John Devon Roland Pertwee
SELECT ?child WHERE {
    ?pertwee <http://dbpedia.org/ontology/child> ?child .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
701,50,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . },"```sparql
# Step 1: Identify Seti I's child
SELECT ?setiChild WHERE {
    <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/spouse> ?parent .
    ?setiChild <http://dbpedia.org/ontology/birthParent> ?parent .
}

# Step 2: Find the grandchild of Seti I
SELECT ?grandchild WHERE {
    ?setiChild <http://dbpedia.org/ontology/birthChild> ?grandchild .
}

# Step 3: Determine the parent of this grandchild
SELECT ?grandchildParent WHERE {
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?grandchildParent .
}

# Step 4: Identify Merneptah's father
SELECT ?merneptahFather WHERE {
    <http://dbpedia.org/resource/Merenptah> <http://dbpedia.org/ontology/father> ?merneptahFather .
}

# Step 5: Find the spouse of Merneptah's father
SELECT ?spouse WHERE {
    ?merneptahFather <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Final query to find the common entity
SELECT DISTINCT ?result WHERE {
    # Parent of Seti I's grandchild
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?result .
    
    # Spouse of Merneptah's father
    ?merneptahFather <http://dbpedia.org/ontology/spouse> ?result .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,47,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
# Step 1: Find awards associated with Bruce Fraser, 1st Baron Fraser of North Cape
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?award .
}

# Step 2: Find other awardees for each award identified in step 1
SELECT DISTINCT ?otherAwardee WHERE {
    ?award <http://dbpedia.org/property/awards> ?otherAwardee .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>)
}

# Step 3: Identify the force commanded by the person decedent at Budapest
SELECT ?force WHERE {
    ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Budapest> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
    ?person <http://dbpedia.org/property/commandedForce> ?force .
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
747,66,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song) and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
SELECT ?personaBand ?writerBand ?birthdatePersonBand WHERE {
  # Persona of Shèna
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Shèna""@en .
  ?person <http://dbpedia.org/ontology/band> ?personaBand .

  # Writer of Apollo (Hardwell song)
  ?song <http://purl.org/dc/terms/creator> ?writer .
  ?song <http://www.w3.org/2000/01/rdf-schema#label> ""Apollo""@en .
  ?song <http://dbpedia.org/ontology/musicArtist> <http://dbpedia.org/resource/Hardwell> .
  ?writer <http://dbpedia.org/ontology/band> ?writerBand .

  # Person born on the birth date of Pavlo Khudzik
  ?pavloBirthDate <http://www.w3.org/2002/07/owl#sameAs> ?birthdatePerson .
  ?pavloBirthDate <http://dbpedia.org/ontology/birthDate> ?dateValue .
  ?personWithSameBirthDate <http://dbpedia.org/ontology/birthDate> ?dateValue .
  ?personWithSameBirthDate <http://dbpedia.org/ontology/band> ?birthdatePersonBand .

  # Ensure Pavlo Khudzik is the reference for birth date
  ?pavlo <http://www.w3.org/2000/01/rdf-schema#label> ""Pavlo Khudzik""@en .
  ?pavlo <http://dbpedia.org/ontology/birthDate> ?pavloBirthDate .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
492,64,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT DISTINCT ?authorDecedent ?capitalDecedent ?commanderDecedent WHERE {
  # Step 1: Find the author of ""French Algeria""
  ?book <http://dbpedia.org/ontology/book> <http://dbpedia.org/resource/French_Algeria_(book)> .
  ?book <http://purl.org/dc/terms/creator> ?author .

  # Step 2: Find the person decedent at the work of this author
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/subject> ?author .
    ?deathEvent <http://dbpedia.org/ontology/location> ?work .
    ?deathEvent <http://dbpedia.org/ontology/deathOf> ?decedent .
    BIND(?decedent AS ?authorDecedent)
  }

  # Step 3: Identify the capital of Khemis Miliana District's country
  ?district <http://dbpedia.org/property/country> ?country .
  FILTER(STRSTARTS(STR(?district), ""http://dbpedia.org/resource/Khemis_Miliana_District""))
  ?capital <http://www.geonames.org/ontology#capital> ?country .

  # Step 4: Find the person decedent at this capital
  OPTIONAL {
    ?deathEvent2 <http://dbpedia.org/ontology/location> ?capital .
    ?deathEvent2 <http://dbpedia.org/ontology/deathOf> ?decedent2 .
    BIND(?decedent2 AS ?capitalDecedent)
  }

  # Step 5: Identify the commander in Franco-Hova Wars
  ?battle <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Franco-Hova_Wars> .
  ?commander <http://dbpedia.org/ontology/commander> ?battle .

  # Step 6: Find the person decedent at this commander's work
  OPTIONAL {
    ?work2 <http://dbpedia.org/ontology/subject> ?commander .
    ?deathEvent3 <http://dbpedia.org/ontology/location> ?work2 .
    ?deathEvent3 <http://dbpedia.org/ontology/deathOf> ?decedent3 .
    BIND(?decedent3 AS ?commanderDecedent)
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
184,53,test,"Give me the child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
# Step 1: Find the child of Archduke Joseph August of Austria
SELECT ?childOfJosephAugust WHERE {
    <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?childOfJosephAugust .
}

# Step 2: Find the native of a settlement at elevation 96.0
SELECT ?native WHERE {
    ?settlement <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> ;
                <http://dbpedia.org/ontology/settlement> true .
    ?person <http://dbpedia.org/property/nativePlace> ?settlement .
    ?native :sameAs ?person .
}

# Step 3: Find the parent of this native
SELECT ?parentOfNative WHERE {
    ?child <http://dbpedia.org/property/nativePlace> ?settlement .
    ?parent <http://dbpedia.org/ontology/child> ?child .
}

# Step 4: Find the child of Archduke Joseph Francis of Austria
SELECT ?childOfJosephFrancis WHERE {
    <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?childOfJosephFrancis .
}

# Step 5: Find the common entity that satisfies all conditions
SELECT DISTINCT ?commonEntity WHERE {
    VALUES ?childOfJosephAugust { ?childOfJosephAugust }
    VALUES ?parentOfNative { ?parentOfNative }
    VALUES ?childOfJosephFrancis { ?childOfJosephFrancis }

    ?commonEntity = ?childOfJosephAugust ;
                   = ?parentOfNative .
    
    ?anotherParent <http://dbpedia.org/ontology/child> ?childOfJosephFrancis .
    FILTER(?commonEntity = ?anotherParent)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
701,31,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?parent WHERE {
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
    ?child <http://dbpedia.org/ontology/child> ?spouse .
    ?parent <http://dbpedia.org/ontology/parent> ?child .
    ?henuttawyParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> .
    FILTER(?parent = ?henuttawyParent)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,50,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . },"```sparql
SELECT ?commander WHERE {
    ?office <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Joseph_Stalin> .
    ?office <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> ?governmentAgency .
    ?person <http://dbpedia.org/property/decedentAt> ""Budapest"" .
    ?person <http://dbpedia.org/ontology/leader> ?office .
    
    ?force <http://dbpedia.org/ontology/hasMember> ?person .
    ?force <http://dbpedia.org/ontology/commander> ?commander .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
179,19,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as the birth name of Sirikit.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?parentOfParent WHERE {
    # Step 1: Identify Vajiralongkorn's parent
    <http://dbpedia.org/resource/Vajiralongkorn> <http://dbpedia.org/ontology/father|mother> ?vFatherMother .
    
    # Step 2: Find the child of that parent (should be Vajiralongkorn)
    ?vFatherMother <http://dbpedia.org/ontology/child> ?vChild .
    FILTER(?vChild = <http://dbpedia.org/resource/Vajiralongkorn>)
    
    # Step 3: Identify Sirikit by her birth name
    ?sirikit <http://dbpedia.org/property/birthName> ""Sirikit"" .
    
    # Step 4: Find the parent of this person (Sirikit)
    ?sirikit <http://dbpedia.org/ontology/father|mother> ?parentOfParent .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
77,18,test,Give me the force of the mayor of Congress Poland and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Part 1: Find the military force of the Mayor of Congress Poland
SELECT ?mayor ?force WHERE {
    ?mayor <http://dbpedia.org/ontology/title> ""Mayor of Congress Poland"" .
    ?mayor <http://dbpedia.org/property/militaryForce> ?force .
}

# Part 2: Find wars associated with awardees of Maxim Grigorievich Vlasov's awards
SELECT DISTINCT ?awardee ?war WHERE {
    <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?award .
    ?awardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?awardee != <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov>)
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/battle> ?war . }
}
```",5,5,6,3,2,3,2,20,0,0,24,0,0.0,0
303,20,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara and party of Arnulfo Arias.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?entity WHERE {
    ?valle <http://dbpedia.org/ontology/location> ?location .
    ?location <http://dbpedia.org/ontology/country> ?country .

    ?endara <http://dbpedia.org/property/party> ?party1 .
    ?arias <http://dbpedia.org/property/party> ?party2 .

    ?entity <http://dbpedia.org/ontology/country> ?country .
    ?entity <http://dbpedia.org/property/memberOf> ?party1 ;
            <http://dbpedia.org/property/memberOf> ?party2 .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
959,24,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?native ?manager WHERE {
    # Step 1: Find Yōichi Masuzoe's residence that is a country
    <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?country .
    ?country <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

    # Step 2: Find the native of that country
    ?native <http://dbpedia.org/property/nationality> ?country .
    
    # Step 3: Identify the manager of the 2013 Júbilo Iwata season
    ?manager <http://dbpedia.org/ontology/teamManager> <http://dbpedia.org/resource/Júbilo_Iwata_season_2013> .
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
617,64,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?finalChild WHERE {
    # Step 1: Find Antiochus II Theos' successor who is a royalty
    <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?successor .
    FILTER(STRSTARTS(STR(?successor), ""http://dbpedia.org/resource/"") && 
           EXISTS { ?successor a <http://dbpedia.org/ontology/Royalty> }).

    # Step 2: Find Laodice IV's spouse and their child
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Laodice_IV> .
    ?successor <http://dbpedia.org/property/spouse> ?spouse .
    ?child1 <http://dbpedia.org/ontology/parent> ?successor .

    # Step 3: Find the commander in Battle of Panium and his child
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Panium> .
    ?child2 <http://dbpedia.org/ontology/parent> ?commander .

    # Step 4: Find the child of the child from step 2
    ?finalChild <http://dbpedia.org/ontology/parent> ?child1 .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
281,59,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT DISTINCT ?entity WHERE {
    # Step 1: Identify the leader of the 1962 New South Wales state election
    ?election <http://dbpedia.org/property/date> ""1962"" .
    ?election <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/property/leader> ?leader .
    
    # Step 2: Determine the country where this leader was born
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/Country108610> .

    # Step 3: Find the awardee(s) of an award received by Jonathon Band
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .

    # Step 4: Identify any wars associated with these awardees
    ?otherAwardee <http://dbpedia.org/ontology/battle> ?war .

    # Step 5: Find the entity in the birthplace (country) related to the war
    ?entity <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?entity <http://dbpedia.org/ontology/battle> ?war .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
963,20,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> ?v5 . ?v4 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
SELECT ?administration WHERE {
    ?canton <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?region <http://www.w3.org/2000/01/rdf-schema#label> ""Herzegovina-Neretva Canton"" .
    FILTER(lang(?region) = 'en') .
    ?canton <http://dbpedia.org/ontology/location> ?location .
    ?location <http://dbpedia.org/property/postalCode> ""21205""^^xsd:string .
    ?country <http://www.w3.org/2000/01/rdf-schema#label> ?regionLabel .
    FILTER(lang(?regionLabel) = 'en') .
    ?country <http://dbpedia.org/ontology/timeZone> ?timeZone .
    
    ?party <http://dbpedia.org/ontology/politicalParty> ?rulingParty .
    ?rulingParty <http://dbpedia.org/property/country> ?country .
    ?government <http://dbpedia.org/ontology/rulingParty> ?rulingParty .
    ?government <http://dbpedia.org/ontology/administration> ?administration .
}
```",6,8,7,3,2,3,2,20,0,0,84,0,0.0,0
328,42,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT DISTINCT ?person WHERE {
    # Find commanders in Eastern Front (World War II)
    ?unit <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?unit <http://dbpedia.org/property/commander> ?person .

    # Find government agencies led by these commanders and associated with Joseph Stalin
    OPTIONAL { 
        ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
        ?office <http://dbpedia.org/property/leader> ?person .
        ?office <http://dbpedia.org/property/minister> <http://dbpedia.org/resource/Joseph_Stalin> .
    }

    # Find awards received by Bruce Fraser, 1st Baron Fraser of North Cape
    ?fraserAward <http://dbpedia.org/property/awards> ?award .
    FILTER(?fraserAward = <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>) .

    # Find other individuals who received the same award
    ?person <http://dbpedia.org/property/awards> ?award .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
488,66,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Part 1: Death place of the father (politician) of Yūki Hideyasu
SELECT ?deathPlace WHERE {
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?father <http://dbpedia.org/property/father> ?yukiHideyasu .
    ?yukiHideyasu <http://dbpedia.org/resource/Yūki_Hideyasu> .
    ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}

# Part 2: Birth place of the commander in Boshin War
SELECT ?birthPlace WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
    ?commander <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Boshin_War> .
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Part 3: Administration of the father of the spouse (royalty) of Tokugawa Masako
SELECT ?administration WHERE {
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> .
    ?father <http://dbpedia.org/property/father> ?spouse .
    ?father <http://dbpedia.org/ontology/administration> ?administration .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
10,22,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . }","```sparql
SELECT ?mattMusicalArtist ?lukeBandMember WHERE {
    ?mattColton <http://dbpedia.org/ontology/birthName> ""Matt Colton"" .
    ?mattColton <http://dbpedia.org/ontology/musicalArtist> ?mattMusicalArtist .

    ?lukeVibert <http://dbpedia.org/ontology/birthName> ""Luke Francis Vibert"" .
    ?lukeVibert <http://dbpedia.org/ontology/memberOfBand> ?lukeBandMember .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
92,46,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
SELECT ?bandMemberArtist WHERE {
    ?jimSheppard <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?jimSheppard <http://dbpedia.org/property/birthName> ""Jim Sheppard"" .
    
    ?bandMember <http://dbpedia.org/ontology/member> ?jimSheppard .
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Nevermore_(2006_film)> .
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

    ?bandMember <http://dbpedia.org/property/associatedMusicalArtist> ?reference .
    ?bandMember <http://dbpedia.org/property/associatedMusicalArtist> ?bandMemberArtist .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
767,69,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
SELECT ?almaMater ?settlementInNashAdmin ?settlementInWriterAdmin ?alterEgoReference WHERE {
  # Part 1: Alma Mater of George K. Nash's Administration
  ?administration <http://dbpedia.org/property/administration> <http://dbpedia.org/resource/George_K._Nash> .
  ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Part 2: Entity in the Administration that is a Settlement
  ?entityInAdmin <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?administration <http://dbpedia.org/property/entity> ?entityInAdmin .
  BIND(?entityInAdmin AS ?settlementInNashAdmin)

  # Part 3: Writer of ""Where It's At"" (Dustin Lynch Album)
  <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://dbpedia.org/ontology/writer> ?writer .
  
  # Entity in the writer's administration that is a settlement
  ?writerAdministration <http://dbpedia.org/property/administration> ?writer .
  ?settlementInWriterAdmin <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?writerAdministration <http://dbpedia.org/property/entity> ?settlementInWriterAdmin .

  # Part 4: Alter Ego of Matthew Burland's Persona
  <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/property/persona> ?persona .
  ?persona <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  
  # Reference to the alter ego
  ?reference <http://dbpedia.org/ontology/reference> ?alterEgo .
  BIND(?reference AS ?alterEgoReference)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
16,44,test,Give me the person born as the birth name of Gigi Rice and spouse of Ted McGinley and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName .
  
  # Find Ted McGinley's spouse
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/spouse> ?spouse .

  # Find Satomi Ishihara's profession
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .
  
  # Combine conditions to find the person who matches all criteria
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/property/spouse> ?spouse .
  ?person <http://dbpedia.org/ontology/profession> ?profession .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
488,36,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Part 1: Birthplace of Enomoto Takeaki
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

UNION

# Part 2: Administration of the father of the spouse (royalty) of Tokugawa Masako
SELECT ?administration WHERE {
    ?spouse a dbo:Royalty ;
            dbo:spouse <http://dbpedia.org/resource/Tokugawa_Masako> .
    ?father dbo:child ?spouse .
    ?father <http://dbpedia.org/property/administration> ?administration .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
161,57,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola and military force of Rif War.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
# Step 1: Find the predecessor of Indalecio Prieto and their military conflict
SELECT ?predecessor ?conflict WHERE {
    ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .
    ?predecessor <http://dbpedia.org/ontology/battle> ?conflict .
    FILTER(?conflict <http://www.w3.org/2002/07/owl#Thing>) # Ensure it's a societal event and military conflict
}

# Step 2: Find Emilio Mola's event and its military force
SELECT ?event ?militaryForce WHERE {
    ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> .
    ?commander <http://dbpedia.org/ontology/battle> ?event .
    ?commander <http://dbpedia.org/ontology/militaryUnit> ?militaryForce .
}

# Step 3: Find the military force of the Rif War
SELECT ?rifWarMilitaryForce WHERE {
    ?unit <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> .
    ?unit <http://dbpedia.org/ontology/militaryUnit> ?rifWarMilitaryForce .
}

# Final step: Find the common military force
SELECT DISTINCT ?commonMilitaryForce WHERE {
    VALUES ?conflict { ?conflict }
    VALUES ?event { ?event }
    VALUES ?rifWarMilitaryForce { ?rifWarMilitaryForce }

    ?unit <http://dbpedia.org/ontology/battle> ?conflict .
    ?unit <http://dbpedia.org/ontology/battle> ?event .
    ?unit <http://dbpedia.org/ontology/militaryUnit> ?commonMilitaryForce .

    FILTER(?commonMilitaryForce = ?rifWarMilitaryForce)
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
767,32,test,"Give me the entity in the administration, that is a settlement, of Green and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?settlement WHERE {
    ?nash <http://dbpedia.org/property/almaMater> ?almaMater .
    ?administration <http://dbpedia.org/ontology/member> ?nash .
    ?administration <http://dbpedia.org/ontology/entityInAdministration> ?entity .
    ?entity rdf:type <http://dbpedia.org/ontology/Settlement> .
    FILTER(?entity = ?almaMater)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
391,23,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . }","```sparql
SELECT ?result WHERE {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ""Jackson, Tennessee""@en .
    ?entity <http://dbpedia.org/ontology/nativePlace> ?result .
}
```",3,3,4,3,1,3,3,71,0,0,176,0,0.0,0
404,22,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?child WHERE {
    ?father <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick>.
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia>.
    FILTER(?father = ?spouse)
    ?father <http://dbpedia.org/ontology/child> ?child.
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,58,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Step 1: Find the father of Lamberto Andreotti and his political party
SELECT ?father ?party WHERE {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
    OPTIONAL { ?father <http://dbpedia.org/property/politicalParty> ?party . }
}

# Step 2: Find Romano Prodi's birth name and ensure he is an office holder and a politician, then get his political party
SELECT ?birthName ?party WHERE {
    <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    FILTER(CONTAINS(LCASE(?birthName), ""romano prodi""))
    OPTIONAL { 
        ?prodi <http://dbpedia.org/ontology/politicalParty> ?party .
        ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
        ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    }
}

# Step 3: Check for references to Partito Popolare Italiano
SELECT ?person WHERE {
    OPTIONAL { 
        ?person <http://dbpedia.org/property/politicalParty> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .
    }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,38,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II> .
    ?child <http://dbpedia.org/ontology/spouse> ?parent .
    
    OPTIONAL { 
        ?merneptah <http://dbpedia.org/property/father> ?father .
        FILTER(?parent = ?father)
    }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
281,62,test,"Give me the war of New Zealand Army and war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Step 1: Find wars involving the New Zealand Army
SELECT ?nzWar WHERE {
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?nzWar .
}

# Step 2: Find awardees of Jonathon Band's awards
SELECT ?award ?otherAwardee WHERE {
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Jonathon_Band>)
}

# Step 3: Find the leader of the 1962 New South Wales state election
SELECT ?leader WHERE {
    ?election <http://dbpedia.org/ontology/politician> ?leader .
    ?election <http://dbpedia.org/property/electionDate> ""1962""^^xsd:gYear .
    ?election <http://dbpedia.org/property/state> <http://dbpedia.org/resource/New_South_Wales> .
}

# Step 4: Find the country of birth of that leader
SELECT ?country WHERE {
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
}

# Step 5: Find wars involving the New Zealand Army, awardees of Jonathon Band's awards, and the leader's birthplace country
SELECT DISTINCT ?war WHERE {
    # Wars involving the New Zealand Army
    OPTIONAL { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?war . }
    
    # Wars involving awardees of Jonathon Band's awards
    OPTIONAL {
        ?otherAwardee <http://dbpedia.org/property/awards> ?award .
        ?war <http://dbpedia.org/ontology/battleParticipant> ?otherAwardee .
    }

    # Wars involving the leader's birthplace country
    OPTIONAL {
        ?country <http://dbpedia.org/ontology/country> ?birthCountry .
        ?war <http://dbpedia.org/ontology/battleParticipant> ?birthCountry .
    }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,39,test,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v2 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Step 1: Find associated musical artist of Red Tide (band)
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Step 2: Identify the persona of Don Dokken
SELECT ?persona WHERE {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/persona> ?persona .
}

# Step 3: Find person born as this persona who is a musical artist
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ?persona .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 4: Retrieve band members of this person
SELECT ?bandMember WHERE {
    ?person <http://dbpedia.org/property/memberOf> ?band .
    ?band <http://dbpedia.org/property/member> ?bandMember .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
16,62,test,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
# Step 1: Identify Georgeanne Marie Rice by birth name
SELECT ?georgeanne WHERE {
    ?georgeanne <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
}

# Step 2: Find the spouse of Georgeanne Marie Rice
SELECT ?spouse WHERE {
    ?georgeanne <http://dbpedia.org/property/spouse> ?spouse .
}

# Step 3: Identify Ted McGinley by birth name and profession
SELECT ?ted WHERE {
    ?ted <http://dbpedia.org/ontology/birthName> ""Ted McGinley"" .
    ?ted <http://purl.org/dc/terms/profession> <http://dbpedia.org/resource/Category:American_male_actors> .
}

# Step 4: Find the actor of ""Unnatural"" (TV series) and their profession
SELECT ?unnaturalActor WHERE {
    ?unnaturalActor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Unnatural_(TV_series)> .
    ?unnaturalActor <http://purl.org/dc/terms/profession> <http://dbpedia.org/resource/Category:American_male_actors> .
}

# Step 5: Ensure the spouse matches the criteria related to Ted McGinley's profession
SELECT ?spouse WHERE {
    ?georgeanne <http://dbpedia.org/property/spouse> ?spouse .
    ?ted <http://purl.org/dc/terms/profession> <http://dbpedia.org/resource/Category:American_male_actors> .
    ?unnaturalActor <http://purl.org/dc/terms/profession> <http://dbpedia.org/resource/Category:American_male_actors> .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,49,test,Give me the force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Query 1: Force associated with Narciso Campero
SELECT ?birthName ?militaryForce WHERE {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?birthName .
    OPTIONAL { 
        <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    }
}

# Query 2: War of the military force in Battle of Pisagua
SELECT ?battle ?militaryForce ?war WHERE {
    ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> .
    ?militaryForce <http://dbpedia.org/property/war> ?war .
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
747,52,test,"Give me the band of the writer of Apollo (Hardwell song) and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  # Part 1: Band of the writer of ""Apollo"" by Hardwell
  ?song <http://dbpedia.org/property/song> <http://dbpedia.org/resource/Apollo_(Hardwell_song)> .
  ?song <http://purl.org/dc/terms/creator> ?writer .
  ?writer <http://dbpedia.org/ontology/memberOfBand> ?result .

  UNION

  # Part 2: Band of Shèna
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/memberOfBand> ?result .

  UNION

  # Part 3: Person born on the birth date of an athlete and soccer player who decedent at Zolotonosha
  ?athlete <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
  ?athlete <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?athlete <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .
  ?athlete <http://dbpedia.org/property/birthDate> ?birthDate .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/property/birthDate> ?birthDate .
  BIND(?person AS ?result)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,70,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
# Step 1: Identify the leader of the 1962 New South Wales state election
SELECT ?leader WHERE {
    ?election <http://dbpedia.org/property/electionYear> ""1962"" .
    ?election <http://dbpedia.org/ontology/politicalParty> ?party .
    ?leader <http://dbpedia.org/ontology/politicalAffiliation> ?party ;
            <http://dbpedia.org/ontology/officeHolder> ?office .
}

# Step 2: Determine the birth country of this leader
SELECT ?birthCountry WHERE {
    ?leader <http://dbpedia.org/property/birthPlace> ?place .
    ?place <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?countryResource .
    ?countryResource <http://www.w3.org/2002/07/owl#sameAs> ?birthCountry .
}

# Step 3: Find entities in this birth country
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/birthPlace> ?birthCountry .
}

# Step 4: Identify a professional who is an office holder and politician in the New Zealand Army
SELECT ?professional WHERE {
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                  <http://dbpedia.org/ontology/politicalAffiliation> ?party .
    ?unit <http://dbpedia.org/property/militaryUnit> ?professional .
    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
          <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/New_Zealand> .
}

# Step 5: Determine the military unit of this professional
SELECT ?unit WHERE {
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
                  <http://dbpedia.org/property/militaryUnit> ?unit .
}

# Step 6: Find wars associated with this military unit
SELECT ?war WHERE {
    ?unit <http://dbpedia.org/ontology/battle> ?war .
}

# Step 7: Identify awardees of Knight Grand Cross of the Order of the Bath
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
}

# Step 8: Determine wars associated with these awardees
SELECT ?war WHERE {
    ?awardee <http://dbpedia.org/ontology/battle> ?war ;
             <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
}

# Step 9: Find common wars from steps 6 and 8
SELECT DISTINCT ?commonWar WHERE {
    { ?unit <http://",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
617,69,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
SELECT ?spouse WHERE {
    # Step 1: Antiochus III the Great's Child (Royalty)
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
    ?child a <http://dbpedia.org/ontology/RoyalFamilyMember> .

    # Step 2: Spouse of Antiochus III's Child
    ?child <http://dbpedia.org/property/spouse> ?spouse .

    # Step 3: Antiochus II Theos' Successor (Royalty)
    ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_theos> .
    ?successor a <http://dbpedia.org/ontology/RoyalFamilyMember> .

    # Step 4: Child of Antiochus II's Successor (Royalty)
    ?royalChild <http://dbpedia.org/ontology/birthParent> ?successor .
    ?royalChild a <http://dbpedia.org/ontology/RoyalFamilyMember> .

    # Step 5: Parent of Commander's Child in Battle of Panium
    ?commander <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Battle_of_Panium> .
    ?childOfCommander <http://dbpedia.org/ontology/birthParent> ?commander .
    ?parent <http://dbpedia.org/ontology/birthChild> ?childOfCommander .

    # Ensure the spouse is related to the royal child
    FILTER(?spouse = ?royalChild)
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
801,71,test,"Give me the professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> ?v8 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://dbpedia.org/property/writer> ?v4 . }","```sparql
SELECT ?producer WHERE {
    # Step 1: Find the album ""What U See Is What U Get""
    ?album <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> .

    # Step 2: Identify the writer of the album
    ?writer <http://purl.org/dc/terms/creator> ?album .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
           <http://dbpedia.org/ontology/Artist> .

    # Step 3: Find associated musical artists who are rappers
    ?rapper <http://dbpedia.org/ontology/associatedMusicalArtist> ?writer .
    ?rapper <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

    # Step 4: Identify the professional role of these rappers
    ?professional <http://dbpedia.org/property/profession> ?rapper .

    # Step 5: Find the alter ego of The Shadow
    ?shadowAlterEgo <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
    
    # Step 6: Locate producer of a musical work/song by this professional musician
    ?producer <http://dbpedia.org/property/profession> ?professional ;
              <http://purl.org/dc/terms/creator> ?musicalWork .
    ?musicalWork <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song> .
}
```",9,17,10,3,3,3,3,71,0,0,8,0,0.0,0
767,54,test,"Give me the reference to  and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . }","```sparql
# Step 1: Find George Kilbon Nash's resource and his alma mater
SELECT ?nash ?almaMater WHERE {
    ?nash <http://www.w3.org/2000/01/rdf-schema#label> ""George Kilbon Nash""@en .
    OPTIONAL { ?nash <http://dbpedia.org/ontology/almaMater> ?almaMater . }
}

# Step 2: Find the administration of Green and its settlement
SELECT ?administration ?settlement WHERE {
    ?green <http://www.w3.org/2000/01/rdf-schema#label> ""Green""@en .
    OPTIONAL { ?green <http://dbpedia.org/ontology/administrativeUnit> ?administration . }
    OPTIONAL { ?administration <http://dbpedia.org/ontology/settlement> ?settlement . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
179,16,test,Give me the parent of the child of Bhumibol Adulyadej and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/birthName> ""Sirikit"" .
    ?child <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Bhumibol_Adulyadej> .
    <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?child .
    ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
801,53,test,"Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
# Part 1: Producer of ""Westside Story"" (song)
SELECT ?producer WHERE {
    <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .
}

UNION

# Part 2: Professional in the alter ego of The Shadow's true self
SELECT ?professional WHERE {
    ?shadowAlterEgo <http://dbpedia.org/ontology/allegedTrueSelf> <http://dbpedia.org/resource/The_Shadow> .
    ?shadowAlterEgo <http://dbpedia.org/ontology/profession> ?professional .
}

UNION

# Part 3: Associated musical artist of the writer of ""40 Dayz & 40 Nightz""
SELECT ?associatedArtist WHERE {
    ?writer <http://dbpedia.org/property/wrote> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?writer <http://dbpedia.org/property/associatedMusicians> ?associatedArtist .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,55,test,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . }","```sparql
# Part 1: Band of the writer of ""Apollo"" (Hardwell song)
SELECT ?writerBand WHERE {
    ?song <http://dbpedia.org/property/song> <http://dbpedia.org/resource/Apollo_(Hardwell_song)> .
    ?song <http://purl.org/dc/terms/creator> ?writer .
    ?writer <http://dbpedia.org/ontology/band> ?writerBand .
}

UNION

# Part 2: Band of Tracey Elizabeth McSween
SELECT ?band WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Tracey Elizabeth McSween""@en .
    ?person <http://dbpedia.org/ontology/band> ?band .
}

UNION

# Part 3: Band of person born on Pavlo Khudzik's birth date
SELECT ?personBand WHERE {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/property/dateOfBirth> ?birthDate .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?person <http://dbpedia.org/ontology/band> ?personBand .
    FILTER(?person != <http://dbpedia.org/resource/Pavlo_Khudzik>)
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,54,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
SELECT ?grandparent WHERE {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia>.
    ?child <http://dbpedia.org/ontology/birthParent> ?spouse.
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia>.
    ?child <http://www.w3.org/2002/07/owl#sameAs> ?royaltyChild .
    
    ?parent <http://dbpedia.org/ontology/birthChild> ?royaltyChild.
    ?grandparent <http://dbpedia.org/ontology/birthChild> ?parent.
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
485,24,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
# Find Joseph Whitaker's birthplace that is a region
SELECT ?birthPlaceWhitaker WHERE {
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceWhitaker .
    ?birthPlaceWhitaker <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/class/yago/Region100000001> .
}

# Find awardees of the Eric Gregory Award who are writers and poets, and their birthplaces that are regions
SELECT ?birthPlaceAwardee WHERE {
    ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Eric_Gregory_Award> .
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Writers100000001> .
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Poets100000001> .
    ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlaceAwardee .
    ?birthPlaceAwardee <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/class/yago/Region100000001> .
}

# Find common region between the two birthplaces
SELECT DISTINCT ?commonRegion WHERE {
    { SELECT ?birthPlaceWhitaker WHERE {
        <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceWhitaker .
        ?birthPlaceWhitaker <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/class/yago/Region100000001> .
    }}
    
    { SELECT ?birthPlaceAwardee WHERE {
        ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Eric_Gregory_Award> .
        ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Writers100000001> .
        ?awardee <http://www.w3.org/1999/02/22-rdf-schema#type> <http://dbpedia.org/class/yago/Poets100000001> .
        ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlaceAwardee .
        ?birthPlaceAwardee <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/class/yago/Region100000001> .
    }}
    
    VALUES ?commonRegion { ?birthPlaceWhitaker ?birthPlaceAwardee }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,18,test,Give me the alma mater of Carl L. Nippert and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
# Query for alma mater of Carl L. Nippert
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Query for entities in Baden-Württemberg and their connection to Carl L. Nippert
SELECT DISTINCT ?entityInBW ?connection WHERE {
    ?entityInBW <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
    OPTIONAL { 
        ?entityInBW ?p ?o .
        FILTER(?p = <http://dbpedia.org/ontology/alumni> || ?p = <http://dbpedia.org/ontology/founder> || ?p = <http://dbpedia.org/ontology/employee>)
        ?o <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/CarlLNippertPerson100000001> .
    }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
801,23,test,Give me the professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
SELECT ?alterEgo ?profession WHERE {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?alterEgo <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?profession .
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
485,26,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?country WHERE {
    # Step 1: Country for Western European Time
    ?timeZone <http://www.w3.org/2000/01/rdf-schema#label> ""Western European Time""@en .
    ?timeZone <http://dbpedia.org/ontology/country> ?country .

    UNION

    # Step 2 and 3: Country for the birthplace region of Joseph Whitaker
    OPTIONAL {
        <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace1 .
        ?birthPlace1 <http://dbpedia.org/ontology/country> ?country .
    }

    # Step 3: Country for the birthplace of Thomas Warner
    OPTIONAL {
        <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace2 .
        ?birthPlace2 <http://dbpedia.org/ontology/country> ?country .
    }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,28,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
SELECT ?albumWriter ?blindedByTheLightAuthor ?nativeOfDeathPlace WHERE {
  # Part 1: Writer of the album by Dave Flett
  ?album <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/Dave_Flett> .
  ?album <http://purl.org/dc/terms/creator> ?albumWriter .

  # Part 2: Author of ""Blinded by the Light""
  <http://dbpedia.org/resource/Blinded_by_the_Light_(song)> <http://purl.org/dc/terms/creator> ?blindedByTheLightAuthor .

  # Part 3: Native place of Winnie Madikizela-Mandela's death
  <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://dbpedia.org/ontology/nativePlace> ?nativeOfDeathPlace .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
378,62,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
# Part 1: Wars of Carl Pontus Gahn
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn""@en .
    OPTIONAL { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName . }
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?person <http://dbpedia.org/ontology/warFought> ?war .
}

UNION

# Part 2: Claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?claimToFame WHERE {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/notableWork> ?claimToFame .
}

UNION

# Part 3: Wars of commanders in the Peninsular War
SELECT DISTINCT ?war WHERE {
    ?commander <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    FILTER(CONTAINS(?name, ""Peninsular War"")).
    ?commander <http://dbpedia.org/ontology/warFought> ?peninsularWar .
    ?commander <http://dbpedia.org/ontology/warFought> ?war .
    FILTER(?peninsularWar != ?war)
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
528,20,test,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query for the war involving Irene Morales
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/property/war> ?war .
}

UNION

# Query for the war involving the commander in the Battle of La Rinconada de Ate
SELECT ?war WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
    ?commander <http://dbpedia.org/property/commanded> <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Battle> .
    ?commander <http://dbpedia.org/property/battles> ?battle .
    ?battle <http://dbpedia.org/property/war> ?war .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
488,61,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?administration ?deathPlace WHERE {
    # Step 1: Find Tokugawa Masako's royal spouse
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> .
    ?spouse <http://www.w3.org/2002/07/owl#sameAs> ?royaltyResource .

    # Step 2: Identify the father of this royal spouse
    ?father <http://dbpedia.org/ontology/father> ?spouse .

    # Step 3: Determine the administration of this father
    OPTIONAL { ?father <http://dbpedia.org/property/administration> ?administration . }

    # Step 4: Identify Matsudaira Tadamasa's political father
    ?matsudairaFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Matsudaira_Tadamasa> .
    ?matsudairaFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
                      <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .

    # Step 5: Find the death place of this political father
    ?matsudairaFather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
747,56,test,Give me the band of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of the person born as the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
SELECT ?bandOfAmbaShepherd ?personWithSameBirthDate ?bandOfPersonBornAsShenaPersona WHERE {
  # Part 1: Band of Amba Shepherd
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/member> ?bandOfAmbaShepherd .

  # Part 2: Person born on the birth date of Pavlo Khudzik
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/property/birthDate> ?birthDatePavloKhudzik .
  ?personWithSameBirthDate <http://dbpedia.org/property/birthDate> ?birthDatePavloKhudzik .
  FILTER(?personWithSameBirthDate != <http://dbpedia.org/resource/Pavlo_Khudzik>) .

  # Part 3: Band of the person born as the persona of Shèna
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/birthName> ?shenaPersona .
  ?personBornAsShenaPersona <http://dbpedia.org/property/birthName> ?shenaPersona .
  ?personBornAsShenaPersona <http://dbpedia.org/ontology/member> ?bandOfPersonBornAsShenaPersona .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
54,36,test,"Give me the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
# Step 1: Find the child of Thinkhaya of Pagan
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Determine the predecessor who is an office holder and royalty
SELECT ?predecessor WHERE {
    ?child <http://dbpedia.org/ontology/predecessor> ?predecessor .
    ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 3: Find Thihapate of Mohnyin's child who matches the predecessor
SELECT ?thihapateChild WHERE {
    <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?thihapateChild .
    ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,29,test,Give me the party of the father of Lamberto Andreotti and reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?father ?partyAndreottiFather ?partyProdi WHERE {
  # Find Lamberto Andreotti's father and his party
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
  OPTIONAL { ?father <http://dbpedia.org/property/politicalParty> ?partyAndreottiFather . }
  
  # Check if the party is referenced as Partito Popolare Italiano
  OPTIONAL {
    ?partyAndreottiFather rdfs:label ""Partito Popolare Italiano""@it .
  }

  # Find Romano Prodi's political party
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/politicalParty> ?partyProdi .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,53,test,"Give me the person decedent at the work of the author of French Algeria and commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?author ?decedentAtWork ?capitalDecedent WHERE {
  # Find the author of ""French Algeria""
  ?work <http://dbpedia.org/property/book> ""French Algeria"" .
  ?work <http://purl.org/dc/terms/creator> ?author .

  # Find the decedent at the work's location
  OPTIONAL { ?author <http://dbpedia.org/ontology/deathPlace> ?decedentAtWork . }

  # Find the commander in Franco-Hova Wars
  ?commander <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Franco-Hova_Wars> .
  
  # Find the capital of Algeria and a person decedent there
  <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?capital .
  OPTIONAL { ?person <http://dbpedia.org/ontology/deathPlace> ?capital . FILTER(?person != ?author) }

  # Check for common decedent
  FILTER (?decedentAtWork = ?capitalDecedent)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
485,25,test,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
# Step 1: Find the country associated with Western European Time
SELECT ?country WHERE {
    ?timeZone <http://dbpedia.org/ontology/country> ?country .
    ?timeZone <http://www.w3.org/2000/01/rdf-schema#label> ""Western European Time""@en .
}

# Step 2: Find an entity in Nottinghamshire
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Nottinghamshire""@en .
}

# Step 3: Find the birthplace of an awardee who is a writer and poet for the Eric Gregory Award
SELECT ?birthPlace WHERE {
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?person <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Eric Gregory Award""@en .
    ?person <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?profession IN (<http://dbpedia.org/ontology/Writer>, <http://dbpedia.org/ontology/Poet>)).
}

# Step 4: Combine results to find a common entity
SELECT DISTINCT ?entity WHERE {
    # Country associated with WET
    ?timeZone <http://dbpedia.org/ontology/country> ?country .
    ?timeZone <http://www.w3.org/2000/01/rdf-schema#label> ""Western European Time""@en .

    # Entity in Nottinghamshire
    ?entity <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Nottinghamshire""@en .

    # Birthplace of an awardee who is a writer and poet for the Eric Gregory Award
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?person <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Eric Gregory Award""@en .
    ?person <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?profession IN (<http://dbpedia.org/ontology/Writer>, <http://dbpedia.org/ontology/Poet>)).
    
    # Ensure the birthplace is in the country associated with WET
    ?birthPlace <http://dbpedia.org/ontology/country> ?country .

    # Ensure the entity matches the birthplace
    FILTER(?entity = ?birthPlace)
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,38,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?bandMember WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?person <http://dbpedia.org/ontology/memberOfBand> ?bandMember .

    OPTIONAL {
        ?bandMember <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Meshuggah> .
    }
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
10,21,test,Give me the associated musical artist of Matt Colton and band member of Luke Vibert and professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Part 1: Associated Musical Artist of Matt Colton
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

UNION

# Part 2: Band Member of Luke Vibert
SELECT ?bandMember WHERE {
    ?band <http://dbpedia.org/ontology/memberOfBand> ?bandMember .
    ?band <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Luke_Vibert> .
}

UNION

# Part 3: Professional in the Birth Name of Sharon Kao
SELECT ?professional WHERE {
    ?professional <http://dbpedia.org/property/birthName> ""Sharon Kao"" .
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
488,69,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?birthPlace WHERE {
    # Step 1: Identify the war involving Saitō Hajime
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?war <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Saitō_Hajime> .

    # Step 2: Find the commander's birthplace
    ?war <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

    # Step 3: Identify Tokugawa Masako's spouse (a royalty)
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> .

    # Step 4: Find the father's administration
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?spouse <http://dbpedia.org/property/father> ?father .

    # Step 5: Identify Yūki Hideyasu's father (a politician)
    ?yukiFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?yukiFather <http://dbpedia.org/property/child> <http://dbpedia.org/resource/Yūki_Hideyasu> .

    # Step 6: Find the death place of Yūki Hideyasu's father
    OPTIONAL { ?yukiFather <http://dbpedia.org/ontology/deathPlace> ?deathPlace . }
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,68,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
SELECT ?finalChild WHERE {
    # Step 1: Find Thinkhaya of Pagan's child
    ?thinkhayasChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .

    # Step 2: Find the father of that child
    ?father <http://dbpedia.org/ontology/child> ?thinkhayasChild .

    # Step 3: Determine the predecessor of this father
    ?predecessor <http://dbpedia.org/ontology/successorOrPredecessor> ?father .
    
    # Step 4: Identify Thihapate of Mohnyin's child who is an office holder and royalty
    ?thihapatessChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
    ?thihapatessChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?thihapatessChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    # Step 5: Find the parent of that child
    ?parentOfThihapateChild <http://dbpedia.org/ontology/child> ?thihapatessChild .

    # Step 6: Identify Thado Minsaw of Prome's parent
    ?thadoMinsawsParent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .

    # Step 7: Determine the child of that parent
    ?finalChild <http://dbpedia.org/ontology/birthParent> ?thadoMinsawsParent .

    # Final condition: The final child must be the child of the predecessor found in step 3
    ?predecessor <http://dbpedia.org/ontology/child> ?finalChild .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
427,48,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of the party of Michele Pinto.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
SELECT ?prodiParty ?pintoParty WHERE {
    ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?prodi <http://dbpedia.org/ontology/birth> ?birth .
    ?birth rdfs:label ""Romano Antonio Prodi""@en .
    ?prodi <http://dbpedia.org/ontology/politicalParty> ?prodiParty .

    <http://dbpedia.org/resource/Michele_Pinto_(politician)> <http://dbpedia.org/ontology/politicalParty> ?pintoParty .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
281,53,test,"Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
# Step 1: Find awards received by Jonathon Band
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?award .
}

# Step 2: Find other awardees of those awards
SELECT DISTINCT ?otherAwardee WHERE {
    ?award <http://dbpedia.org/property/awards> ?otherAwardee .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Jonathon_Band>)
}

# Step 3: Filter for entities related to Colony of New Zealand
SELECT DISTINCT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
    ?award <http://dbpedia.org/property/awards> ?entity .
}

# Step 4: Identify wars involving Heather Roy's military unit
SELECT DISTINCT ?war WHERE {
    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/profession> ?unit .
    ?unit <http://dbpedia.org/ontology/battle> ?war .
}

# Step 5: Find common wars between steps 3 and 4
SELECT DISTINCT ?commonWar WHERE {
    ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
    ?award <http://dbpedia.org/property/awards> ?entity .
    ?war1 <http://dbpedia.org/ontology/battle> ?commonWar .
    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/profession> ?unit .
    ?war2 <http://dbpedia.org/ontology/battle> ?commonWar .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,41,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
    ?princess <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?princess <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia"" .
    ?princess <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
    ?child <http://dbpedia.org/ontology/parent> ?princess .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
    ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,18,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?resident WHERE {
    ?director <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> .
    ?director <http://dbpedia.org/ontology/birthPlace> ?birthplace .
    ?birthplace a <http://dbpedia.org/class/yago/Settlement108069068> .

    ?spauldingChild <http://dbpedia.org/ontology/fictionalCharacter> true ;
                     <http://dbpedia.org/ontology/soapCharacter> true .
    ?spaulding <http://dbpedia.org/ontology/child> ?spauldingChild .
    ?spaulding <http://www.wikidata.org/entity/P373> ""Phillip Spaulding""@en .

    ?father <http://dbpedia.org/ontology/father> ?spauldingChild .

    ?birthplace <http://dbpedia.org/property/residents> ?resident .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
487,17,test,"Give me the country of 2022 Vermont House of Representatives election and administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v3 . },"```sparql
# Query for the country of the 2022 Vermont House of Representatives election
SELECT ?country WHERE {
    <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?country .
}

# Query to find the administration of a soccer player born as Phil Scott
SELECT ?administration WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Phil Scott""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""Phil Scott"" .
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Soccer_player> .
    ?person <http://dbpedia.org/ontology/administration> ?administration .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
801,62,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v6 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
SELECT ?trueSelf ?associatedArtist ?producerWork WHERE {
    # Step 1: Identify The Shadow's true self
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/allegedAlterEgo> ?trueSelf .

    # Step 2: Find associated musical artist with Chris Taylor (music producer)
    ?associatedArtist <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
    
    # Step 3: Determine the professional in ""Rapper"" and their produced work
    ?rapper <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Musical_artist> .
    ?rapper <http://dbpedia.org/property/works> ?work .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/class/yago/MusicalWork108930069> <http://dbpedia.org/class/yago/Song106066465>) .

    # Step 4: Find the producer of this work
    ?producer <http://dbpedia.org/ontology/produced> ?work .
    
    # Combine information to find the professional in question
    FILTER(?associatedArtist = ?producer)
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
9,60,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?almaMater WHERE {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?entity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Belfast>.
    ?entity <http://dbpedia.org/ontology/nickname> ""the figure"".
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>.
    ?entity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Northern_Ireland>.

    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?mayor <http://dbpedia.org/property/mayorOf> ?entity.

    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater.
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
994,58,test,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find the persona of Don Dokken
SELECT ?persona WHERE {
    <http://dbpedia.org/resource/Don_Dokken> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?persona <http://dbpedia.org/property/persona> <http://dbpedia.org/resource/Don_Dokken> .
}

# Step 2: Find associated musical artists of S.A. Slayer
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Step 3: Find associated musical artists of the band member from Don Dokken's persona
SELECT ?bandMember ?associatedArtist WHERE {
    ?persona <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?persona <http://dbpedia.org/property/bandMember> ?bandMember .
    ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Step 4: Identify Meshuggah as a band, group, and organization
SELECT ?meshuggah WHERE {
    ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
    ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}

# Step 5: Find associated musical artists of Meshuggah's band members
SELECT ?bandMember ?associatedArtist WHERE {
    ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
    ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?meshuggah <http://dbpedia.org/property/member> ?bandMember .
    ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
994,63,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
SELECT DISTINCT ?commonArtist WHERE {
  # Step 1: Find associated musical artist for Watchtower
  ?watchtower <http://dbpedia.org/ontology/member> ?member .
  ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .

  # Step 2: Find a band member of Meshuggah and their associated musical artist
  ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?meshuggah <http://www.w3.org/2000/01/rdf-schema#label> ""Meshuggah""@en .
  ?meshuggah <http://dbpedia.org/ontology/member> ?member2 .
  ?member2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .

  # Step 3: Find Don Dokken and one of his band members, then their associated musical artist
  ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?dokken <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en .
  ?dokken <http://dbpedia.org/ontology/member> ?member3 .
  ?member3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist3 .

  # Step 4: Find the common associated musical artist
  FILTER(?artist1 = ?commonArtist)
  FILTER(?artist2 = ?commonArtist)
  FILTER(?artist3 = ?commonArtist)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
391,49,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
# Step 1: Find the city known as ""Hub City""
SELECT ?city WHERE {
    ?alias <http://dbpedia.org/ontology/nickName> ""Hub City"" .
    ?alias <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?city .
}

# Step 2: Find professionals (actors) from this city
SELECT DISTINCT ?actor WHERE {
    ?actor <http://dbpedia.org/ontology/nationality> ?country .
    ?actor <http://dbpedia.org/ontology/birthPlace> ?birthCity .
    FILTER(?birthCity = ?city)
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
}

# Step 3: Find movies that are both films and television shows
SELECT DISTINCT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
}

# Step 4: Find the actor in these movies
SELECT DISTINCT ?actor WHERE {
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    ?actor IN (?actors) .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
747,67,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
# Find the band of the person with persona ""Shèna""
SELECT ?person ?band WHERE {
  ?person <http://dbpedia.org/ontology/personalName> ""Shèna"" .
  ?person <http://dbpedia.org/ontology/band> ?band .
}

UNION

# Find the band of the writer of the song ""Amba Shepherd""
SELECT ?writer ?band WHERE {
  ?song <http://purl.org/dc/terms/title> ""Amba Shepherd"" ;
        <http://dbpedia.org/property/writtenBy> ?writer .
  ?writer <http://dbpedia.org/ontology/band> ?band .
}

UNION

# Find the band of the person born on 1985-04-29
SELECT ?person ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/band> ?band .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,63,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Part 1: Birth Place of Saitō Hajime's Commander
SELECT ?birthPlace WHERE {
    ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Sait%C5%8D_Hajime> .
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/birthPlace> ?birthPlace .
}

# Part 2: Death Place of Yūki Hideyasu's Father
SELECT ?deathPlace WHERE {
    <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?father <http://dbpedia.org/property/deathPlace> ?deathPlace .
}

# Part 3: Administration of Emperor Go-Mizunoo's Father
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/administration> ?administration .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
994,67,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?associatedArtist WHERE {
    # Step 1: Identify Fredrik Thordendal's band
    <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/memberOf> ?band .
    FILTER((<http://www.w3.org/2000/01/rdf-schema#label> ?band) IN (""Meshuggah""))

    # Step 2: Identify the persona of Don Dokken
    ?person <http://dbpedia.org/property/birthName> ""Don Dokken"" .
    FILTER((<http://www.w3.org/2000/01/rdf-schema#label> ?person) IN (""George Lynch""))

    # Step 3: Find associated musical artist of S.A. Slayer
    <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?slayerArtist .
    FILTER((<http://www.w3.org/2000/01/rdf-schema#label> ?slayerArtist) IN (""Jeff Hanneman""))

    # Step 4: Find associated musical artist of Meshuggah's band member
    ?bandMember <http://dbpedia.org/ontology/memberOf> ?band .
    FILTER((<http://www.w3.org/2000/01/rdf-schema#label> ?band) IN (""Meshuggah""))
    ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
421,26,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
# Step 1: Retrieve Dino Merlin's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find the band he is a member of
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/memberOf> ?band .
}

# Step 3: Get the awards won by that band
SELECT DISTINCT ?award WHERE {
    ?band <http://dbpedia.org/property/awards> ?award .
}

# Step 4: Identify other awardees who have received those same awards
SELECT DISTINCT ?otherAwardee WHERE {
    ?band <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Dino_Merlin>)
}

# Step 5: Filter these awardees to find those native to the Socialist Federal Republic of Yugoslavia
SELECT DISTINCT ?person WHERE {
    ?otherAwardee <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,68,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
# Part 1: Find the war associated with Carl Pontus Gahn
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn""@en .
    OPTIONAL { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName . }
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    FILTER(?birthName = ""Carl Pontus Gahn""@en)
    OPTIONAL { ?person <http://dbpedia.org/ontology/famousFor> ?war . }
}

# Part 2: Find the commander of the Great Siege of Gibraltar and their claim to fame
SELECT ?commander ?claimToFame WHERE {
    ?battle <http://dbpedia.org/property/battleCommander> ?commander .
    ?battle <http://www.w3.org/2000/01/rdf-schema#label> ""Great Siege of Gibraltar""@en .
    OPTIONAL { ?commander <http://dbpedia.org/ontology/famousFor> ?claimToFame . }
}

# Part 3: Find the war associated with the commander linked to the Peninsular War
SELECT ?war WHERE {
    ?battle <http://dbpedia.org/property/battleCommander> ?commander .
    ?battle <http://www.w3.org/2000/01/rdf-schema#label> ""Peninsular War""@en .
    OPTIONAL { ?commander <http://dbpedia.org/ontology/famousFor> ?war . }
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
360,26,test,"Give me the reference to the author of Blinded by the Light and native of Johannesburg and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","```sparql
SELECT ?author WHERE {
  ?author <http://dbpedia.org/property/authors> <http://dbpedia.org/resource/Blinded_by_the_Light_(song)> .
  ?author <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Johannesburg> .
  ?album <http://dbpedia.org/ontology/writer> ?author ;
         <http://dbpedia.org/property/works> <http://dbpedia.org/resource/Dave_Flett> .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
435,26,test,"Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
# Step 1: Identify ""Land of fire and ice""
SELECT ?island WHERE {
    ?island <http://dbpedia.org/ontology/nickname> ""Land of fire and ice"" .
    ?island <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""iceland""))
}

# Step 2: Find author who wrote about Iceland and GMT
SELECT DISTINCT ?author WHERE {
    ?work <http://dbpedia.org/ontology/subject> <http://dbpedia.org/resource/Iceland> .
    ?work <http://purl.org/dc/terms/creator> ?author .
    OPTIONAL { 
        ?gmtWork <http://dbpedia.org/ontology/subject> <http://dbpedia.org/resource/Greenwich_Mean_Time> .
        ?gmtWork <http://purl.org/dc/terms/creator> ?author .
    }
}

# Step 3: Find works of the identified author
SELECT ?work WHERE {
    ?work <http://purl.org/dc/terms/creator> ?author .
}

# Step 4: Identify region associated with GMT
SELECT ?region WHERE {
    ?gmt <http://dbpedia.org/ontology/subject> <http://dbpedia.org/resource/Greenwich_Mean_Time> .
    ?gmt <http://dbpedia.org/ontology/country> ?region .
}

# Step 5: Determine territory administered from Iceland
SELECT ?territory WHERE {
    ?island <http://dbpedia.org/ontology/administrativeTerritory> ?territory .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,70,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Part 1: Italian People's Party (1994) Name
SELECT ?name WHERE {
    <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://www.w3.org/2000/01/rdf-schema#label> ?name .
}

UNION

# Part 2: Father's Party of an MIT Alumnus
SELECT ?party WHERE {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?alumnus <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/property/memberOf> ?party .
}

UNION

# Part 3: Party of Romano Prodi
SELECT ?party WHERE {
    <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    FILTER(?birthName = ""Romano Prodi"")
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/memberOf> ?party .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
360,20,test,"Give me the reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and writer of The Roaring Silence.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?native ?writer WHERE {
    # Step 1: Get death place of Winnie Madikizela-Mandela that is a settlement
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?settlement .

    # Step 2: Find native of this settlement
    ?native <http://dbpedia.org/ontology/nativeOf> ?settlement .

    # Step 3: Identify the writer of ""The Roaring Silence""
    ?book <http://purl.org/dc/terms/title> ""The Roaring Silence"" .
    ?book <http://purl.org/dc/terms/creator> ?writer .

    # Optional: Check for any reference to Manfred Mann
    OPTIONAL {
        ?reference <http://dbpedia.org/ontology/wikiPageRedirects> <http://dbpedia.org/resource/Manfred_Mann> .
        FILTER(?native = ?reference || ?writer = ?reference)
    }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
92,45,test,Give me the band member of Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
SELECT ?bandMember ?associatedArtist ?personBand WHERE {
  # Part 1: Find Jim Sheppard as a member of Nevermore
  <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/member> ?bandMember .
  
  # Ensure the band is Nevermore
  FILTER(?bandMember = <http://dbpedia.org/resource/Nevermore_(band)>)
  
  # Part 2: Find associated musical artists of Jim Sheppard
  OPTIONAL {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/member> ?associatedArtist .
    FILTER(?associatedArtist != ?bandMember) # Exclude Nevermore to find other associations
  }
  
  # Part 3: Find the person born as Joseph Michael and their band
  ?person <http://dbpedia.org/property/birthName> ""Joseph Michael"" .
  ?person <http://dbpedia.org/ontology/member> ?personBand .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,45,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War and military force of Spanish Civil War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
SELECT ?commander WHERE {
    ?elDirector <http://www.w3.org/2000/01/rdf-schema#label> ""El Director""@en .
    ?militaryForce1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> .
    ?militaryForce2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> .
    FILTER(?militaryForce1 = ?militaryForce2)
    ?militaryForce1 <http://dbpedia.org/ontology/commander> ?commander .
}
```",5,6,6,3,3,3,3,71,0,0,11,0,0.0,0
232,44,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
SELECT ?child WHERE {
    # Step 1: Identify the child of Jon Pertwee
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .

    # Step 2: Find the native place of Sylvie Bermann's residence
    OPTIONAL {
        ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/BritishSettlement108067> .
        <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?residence .
    }

    # Step 3: Identify Sean Pertwee's claim to fame
    OPTIONAL {
        ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Films108067> .
        ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflicts108067> .
        <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/property/claimToFame> ?fame .
    }
}
```",5,9,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
617,37,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?parent ?spouse WHERE {
  # Step 1: Find Nysa's parent(s)
  <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> <http://dbpedia.org/ontology/parent> ?parent .

  # Step 2: Find the successor of Antiochus (son of Antiochus III the Great)
  ?antiochusSuccessor <http://dbpedia.org/ontology/successorOf> <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> .

  # Step 3: Find the child of this successor
  ?child <http://dbpedia.org/ontology/birthParent> ?antiochusSuccessor .

  # Step 4: Find the spouse of that child
  ?child <http://dbpedia.org/property/spouse> ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
54,70,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . }","```sparql
SELECT ?predecessor WHERE {
    # Step 1: Find Thado Minsaw of Prome's parent
    ?thadoMinsawParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
    
    # Step 2: Find the child of that parent
    ?childOfParent <http://dbpedia.org/ontology/parent> ?thadoMinsawParent .

    # Step 3: Identify Soe Min Wimala Dewi's father
    ?soeMinWimalaDewiFather <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> .
    
    # Step 4: Find the parent of the child from step 2
    ?parentOfChild <http://dbpedia.org/ontology/child> ?childOfParent .

    # Step 5: Reference Thihapate of Mohnyin and find their child who is an office holder and royalty
    ?thihapateChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
    ?thihapateChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?thihapateChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    # Step 6: Find the predecessor of that child
    ?predecessor <http://dbpedia.org/ontology/predecessor> ?thihapateChild .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
48,17,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of Carl Falk.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find the show featuring Stacey Dash and retrieve actors from that show
SELECT ?show ?actor WHERE {
    <http://dbpedia.org/resource/Stacey_Dash> dbo:performerIn ?show .
    ?show dbo:castMember ?actor .
}

# Step 2: Filter these actors to find one who is also a musical artist
SELECT DISTINCT ?actor ?band WHERE {
    # Assuming we have identified the actor from step 1, replace `?actor` with the specific URI if known
    ?actor rdf:type <http://dbpedia.org/ontology/MusicalArtist> .
    ?actor dbo:associatedBand ?band .
}

# Step 3: Find the band associated with Carl Falk
SELECT ?falkBand WHERE {
    <http://dbpedia.org/resource/Carl_Falk> dbo:associatedBand ?falkBand .
}
```

Note: The SPARQL query is split into logical steps. In practice, you would execute these queries sequentially or combine them as needed to retrieve the final results.",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
9,68,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
# Step 1: Find the Mayor of Belfast
SELECT ?mayor WHERE {
    ?mayor <http://dbpedia.org/ontology/politician> true .
    ?organization <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> .
    ?organization <http://dbpedia.org/ontology/mayor> ?mayor .
}

# Step 2: Find the Alma Mater of the Mayor
SELECT ?almaMater WHERE {
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Step 3: Identify Queen's University Belfast
SELECT ?queenUniversity WHERE {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast""@en .
    ?entity <http://dbpedia.org/ontology/nickname> ?nickname .
    FILTER(?nickname = ""QUB"")
}

# Step 4: Find Awardees of Royal Medals
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> .
}

# Step 5: Find Alma Mater of the Awardee(s)
SELECT ?almaMaterAwardee WHERE {
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMaterAwardee .
}

# Final Query: Common Alma Mater
SELECT DISTINCT ?commonAlmaMater WHERE {
    { ?mayor <http://dbpedia.org/ontology/almaMater> ?commonAlmaMater . }
    UNION
    { ?awardee <http://dbpedia.org/ontology/almaMater> ?commonAlmaMater . }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
48,16,test,"Give me the band of the actor, that is a musical artist, of Honor Up and band of the writer of Emotion (Carly Rae Jepsen album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?actorBand ?writerBand WHERE {
  # Part 1: Actor who is a musical artist of ""Honor Up""
  ?actor <http://dbpedia.org/ontology/band> ?band .
  ?actor <http://purl.org/dc/terms/contributor> <http://dbpedia.org/resource/Honor_Up> .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Part 2: Writer of ""Emotion"" from Carly Rae Jepsen's album
  ?writer <http://purl.org/dc/terms/contributor> <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> .
  ?song <http://purl.org/dc/terms/title> ""Emotion""@en .
  ?song <http://purl.org/dc/terms/creator> ?writer .

  # Retrieve bands
  OPTIONAL { ?band1 <http://dbpedia.org/ontology/band> ?actorBand . }
  OPTIONAL { ?band2 <http://dbpedia.org/ontology/band> ?writerBand . }

}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
801,48,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Step 1: Find The Shadow's alter ego
SELECT ?alterEgo WHERE {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alternateName> ?alterEgo .
}

# Step 2: Find the true self (professional) of the alter ego
SELECT ?trueSelf WHERE {
    ?alterEgo <http://dbpedia.org/ontology/profession> ?trueSelf .
}

# Step 3: Find associated musical artist with the true self
SELECT ?musicalArtist WHERE {
    ?trueSelf <http://dbpedia.org/property/associatedMusicalArtist> ?musicalArtist .
}

# Step 4: Identify the writer of ""40 Dayz & 40 Nightz""
SELECT ?writer WHERE {
    <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> <http://dbpedia.org/ontology/writer> ?writer .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}

# Step 5: Find associated musical artist of the writer
SELECT ?associatedMusicalArtist WHERE {
    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedMusicalArtist .
}
```",5,7,6,3,2,3,3,71,0,0,22,0,0.0,0
488,57,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?birthPlace ?deathPlace ?administration WHERE {
  # Birth place of Enomoto Takeaki
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Death place of the father (politician) of Matsudaira Tadamasa
  OPTIONAL {
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }

  # Administration of the father of Emperor Go-Mizunoo
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?goMizunooFather .
    ?goMizunooFather <http://dbpedia.org/property/administration> ?administration .
  }
}
```",6,8,7,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
427,50,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
# Part 1: Find the father of an MIT alumnus and their political party
SELECT ?alumnus ?father ?fatherParty WHERE {
    ?alumnus <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?alumnus <http://dbpedia.org/ontology/father> ?father .
    OPTIONAL { ?father <http://dbpedia.org/property/politicalParty> ?fatherParty . }
}

# Part 2: Find the political party of Romano Antonio Prodi
SELECT ?prodiParty WHERE {
    <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://dbpedia.org/property/politicalParty> ?prodiParty .
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
492,67,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
# Step 1: Find the capital of Khemis Miliana District
SELECT ?capital WHERE {
    <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/capital> ?capital .
}

# Step 2: Identify person decedent at French Algeria and the identified capital
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
    ?person <http://dbpedia.org/property/deathPlace> ?capital .
}

# Step 3: Identify the commander in the Battle of Verdun
SELECT DISTINCT ?commander WHERE {
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(STR(?battle) = ""http://dbpedia.org/resource/Battle_of_Verdun"")
}

# Step 4: Find the war involving this commander
SELECT DISTINCT ?war WHERE {
    ?war <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 5: Find person decedent at both French Algeria and the capital, and also a commander in the identified war
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
    ?person <http://dbpedia.org/property/deathPlace> ?capital .
    ?war <http://dbpedia.org/ontology/commander> ?person .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
701,60,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the spouse of Amun-her-khepeshef.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?spouse WHERE {
    # Step 1: Find the commander who is royalty in Battle of Perire
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
    ?commander <http://www.w3.org/2000/01/rdf-schema#label> ?labelCommander .
    FILTER(CONTAINS(LCASE(?labelCommander), ""royalty"")) .

    # Step 2: Find the father of this commander
    ?father <http://dbpedia.org/ontology/child> ?commander .

    # Step 3: Find the spouse of this father
    ?spouse1 <http://dbpedia.org/ontology/spouse> ?father .
    
    # Step 4: Identify Amun-her-khepeshef's spouse
    <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?spouse2 .

    # Step 5: Find the child of Amun-her-khepeshef's spouse
    ?child <http://dbpedia.org/ontology/parent> ?spouse2 .
    
    # Step 6: Identify the parent of this child (should be Amun-her-khepeshef)
    ?parent <http://dbpedia.org/ontology/child> ?child .

    # Ensure that the parent is indeed Amun-her-khepeshef
    FILTER(?parent = <http://dbpedia.org/resource/Amun-her-khepeshef>) .

    # Step 7: Retrieve the spouse of the father from step 3
    BIND(?spouse1 AS ?spouse)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
747,28,test,Give me the band of Shèna and person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
# Step 1: Get the band of Shèna
SELECT ?bandShena WHERE {
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/band> ?bandShena .
}

UNION

# Step 2: Find a person born on the same date as Pavlo Khudzik
SELECT ?person ?birthDate WHERE {
    # Get Pavlo Khudzik's birth date
    OPTIONAL { 
        <http://dbpedia.org/resource/Pavlo_Khudzik> <http://www.w3.org/2002/07/owl#sameAs> ?khudzikBirthResource .
        ?khudzikBirthResource <http://purl.org/dc/terms/birthDate> ?birthDate .
    }
    
    # Find other persons with the same birth date
    ?person <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?sameAsResource .
    ?sameAsResource <http://purl.org/dc/terms/birthDate> ?birthDate .
    FILTER(?person != <http://dbpedia.org/resource/Pavlo_Khudzik>)
}

UNION

# Step 3: Get the band of Amba Shepherd
SELECT ?bandAmba WHERE {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/band> ?bandAmba .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
659,50,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
SELECT ?commander WHERE {
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?force <http://dbpedia.org/property/militaryForce> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.

    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?unit <http://dbpedia.org/property/nickname> ""Polish Horse""@en.
    ?unit <http://dbpedia.org/property/militaryForce> ?force.

    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?unit <http://dbpedia.org/property/battle> ?war.

    ?commander <http://dbpedia.org/property/commander> ?war.
}
```",5,12,6,3,2,3,3,71,0,0,31,0,0.0,0
182,27,test,Give me the war of Mahesh Senanayake and war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war1 ?war2 ?entity WHERE {
  # Wars involving Mahesh Senanayake
  <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?war1 .

  # Wars related to the work of Gotabhaya Rajapaksa
  <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/ontology/battle> ?war2 .

  # Entity in the nationality of Tamara Kunanayakam
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?country .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> ;
          <http://dbpedia.org/ontology/name> ?name .
  FILTER(?country = ?entity)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
701,64,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT DISTINCT ?henuttawyParent ?childOfSpouseParent ?spouseOfFatherParent WHERE {
    # Parent of Henuttawy (19th dynasty)
    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/parent> ?henuttawyParent .

    # Spouse of Amun-her-khepeshef
    ?amunHerKhepeshef <http://dbpedia.org/property/spouse> ?spouseOfAmun .
    
    # Child of the spouse of Amun-her-khepeshef
    ?spouseOfAmun <http://dbpedia.org/ontology/child> ?childOfSpouse .

    # Parent of the child of the spouse of Amun-her-khepeshef
    ?childOfSpouse <http://dbpedia.org/ontology/parent> ?childOfSpouseParent .

    # Commander in Battle of Perire who is royalty
    ?battleParticipant <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
    ?battleParticipant <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    # Father of the commander
    ?battleParticipant <http://dbpedia.org/ontology/father> ?fatherOfCommander .

    # Spouse of the father of the commander
    ?fatherOfCommander <http://dbpedia.org/property/spouse> ?spouseOfFather .

    # Parent of the spouse of the father of the commander
    ?spouseOfFather <http://dbpedia.org/ontology/parent> ?spouseOfFatherParent .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
232,53,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?native WHERE {
    # Find Sylvie Bermann's British settlement
    ?sylvie <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
    FILTER(CONTAINS(LCASE(?settlementLabel), ""british"")) .

    # Find the actor of Dog Soldiers
    ?dogSoldiersFilm <http://dbpedia.org/ontology/starring> ?actor .
    VALUES ?dogSoldiersFilm { <http://dbpedia.org/resource/Dog_Soldiers_(film)> } .

    # Find Jon Pertwee's birth name and his child
    ?jonPertwee <http://dbpedia.org/property/birthName> ?birthName .
    ?child <http://dbpedia.org/ontology/father> ?jonPertwee .
    
    # Combine conditions to find the matching individual
    FILTER(?actor = ?child) .

    # Find the native place of this person
    ?actor <http://dbpedia.org/ontology/nativeCountry> ?native .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
197,8,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of Dumitru Nadu.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?awardee ?birthPlace WHERE {
  ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Leroy_P._Steele_Prize> .
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
UNION
SELECT ?person ?birthPlace WHERE {
  <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  BIND(<http://dbpedia.org/resource/Dumitru_Nadu> AS ?person)
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
747,45,test,Give me the person born on 1985-04-29 and band of Amba Shepherd and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
# Step 1: Find the person born on 1985-04-29
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
}

# Step 2: Find the band of Amba Shepherd
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/memberOf> ?band .
}

# Step 3: Identify Shèna's persona and find the person born as that persona
SELECT ?person WHERE {
    ?persona <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Pseudonym> ;
             <http://dbpedia.org/property/pseudonymFor> <http://dbpedia.org/resource/Shèna> .
    ?person <http://dbpedia.org/ontology/birthName> ?persona .
}

# Step 4: Retrieve the band of the person identified in step 3
SELECT ?band WHERE {
    ?person <http://dbpedia.org/ontology/memberOf> ?band .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
963,17,test,"Give me the entity in Serbia and administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . }","```sparql
SELECT ?entity ?administration WHERE {
    # Assuming 21205 refers to a specific municipality or administrative division in Serbia
    ?location <http://dbpedia.org/ontology/location> ?municipality .
    ?municipality <http://www.w3.org/2000/01/rdf-schema#label> ""21205"" .

    # Find the ruling party for this location
    ?party <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Serbia> ;
           <http://dbpedia.org/ontology/location> ?location .
    
    # Get the administration of the ruling party
    ?administration <http://dbpedia.org/ontology/administrationOf> ?party .

    # Ensure the entity is a political party
    ?party a <http://dbpedia.org/ontology/PoliticalParty> .

    # Return the entity and its administration
    BIND(?party AS ?entity)
}
```",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
391,47,test,"Give me the native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
SELECT ?actor ?nativeCity WHERE {
    # Step 1: Identify Sherry Hormann's spouse
    <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?spouse .

    # Step 2: Determine the claim to fame of Sherry Hormann's spouse (a work)
    ?spouse <http://dbpedia.org/property/filmography> ?work .

    # Step 3: Find the actor associated with that work
    ?work <http://dbpedia.org/ontology/starring> ?actor .

    # Step 4: Identify ""Hub City"" (assuming it's Columbia, South Carolina)
    VALUES ?hubCity { <http://dbpedia.org/resource/Columbia,_South_Carolina> }

    # Step 5: Determine the native city of the actor
    ?actor <http://dbpedia.org/ontology/nativePlace> ?nativeCity .
    
    FILTER(?nativeCity = ?hubCity)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,22,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
SELECT ?entity WHERE {
    ?cet <http://dbpedia.org/ontology/country> ?country .
    ?sportsEvent <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Aguilar_de_Segarra> .
    ?entity <http://dbpedia.org/ontology/country> ?country .
    ?entity <http://dbpedia.org/ontology/sportsEvent> ?sportsEvent .
}
```",4,6,5,2,2,2,3,28,0,0,28787,0,0.0,0
9,35,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?mayorAlmaMater ?figureAlmaMater WHERE {
    ?mayor <http://dbpedia.org/ontology/politician> _:b0 .
    _:b0 <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater .

    ?figure <http://purl.org/dc/terms/nickname> ""Queen's University Belfast"" .
    ?figure <http://dbpedia.org/ontology/almaMater> ?figureAlmaMater .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
488,62,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Step 1: Identify the war involving Saitō Hajime
SELECT ?war WHERE {
    ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Saito_Hajime> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
}

# Step 2: Find the commander's birthplace
SELECT ?birthPlace WHERE {
    ?war <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Step 3: Identify Emperor Go-Yōzei's administration
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Emperor_Go-Yozei> <http://dbpedia.org/property/administration> ?administration .
}

# Step 4: Find Matsudaira Tadamasa's father
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?father .
    FILTER(?father != <http://dbpedia.org/resource/>)
}

# Step 5: Find the death place of Matsudaira Tadamasa's paternal grandfather
SELECT ?deathPlace WHERE {
    ?father <http://dbpedia.org/ontology/father> ?grandfather .
    ?grandfather <http://dbpedia.org/property/deathPlace> ?deathPlace .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
184,50,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?parentOfJosephChild WHERE {
    # Step 1: Find the child of Archduke Joseph Francis of Austria
    ?childOfJoseph <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
    
    # Step 2: The parent of this child is Archduke Joseph Francis himself
    ?parentOfJosephChild <http://dbpedia.org/ontology/child> ?childOfJoseph .

    # Step 3: Find the child of Archduke Ladislaus Philipp who is royalty
    ?royaltyChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .
    
    # Ensure the child is royalty
    ?royaltyChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    # Step 4: The parent of this royal child is Archduke Ladislaus Philipp himself
    OPTIONAL { ?parentOfLadislausChild <http://dbpedia.org/ontology/child> ?royaltyChild . }

    # Step 5: Find the parent of the child identified in step 2
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,49,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Step 1: Find Francisco Franco's involvement in a societal event that is also an event and a military conflict
SELECT ?conflict WHERE {
    ?conflict <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Franco>.
    ?conflict <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent.
    ?societalEvent a <http://dbpedia.org/class/yago/SocialEvents>.
    ?conflict a <http://dbpedia.org/ontology/Event>.
    ?conflict a <http://dbpedia.org/ontology/MilitaryConflict>.
}

# Step 2: Identify the commander known as ""El Director""
SELECT ?commander WHERE {
    ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""El Director""@en.
    ?figure <http://dbpedia.org/property/commanderOf> ?event.
    ?commander <http://dbpedia.org/ontology/person> ?figure.
}

# Step 3: Find the military force associated with both the conflict and commander
SELECT DISTINCT ?militaryForce WHERE {
    # From Step 1
    ?conflict <http://dbpedia.org/property/militaryForce> ?militaryForce.

    # From Step 2
    ?commander <http://dbpedia.org/ontology/commandedMilitaryUnit> ?unit.
    ?unit <http://dbpedia.org/property/militaryForce> ?militaryForce.
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
547,70,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v3 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Part 1: Resting place of awardees of Gerald Graham's awards
SELECT DISTINCT ?award ?otherAwardee ?restingPlace WHERE {
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Gerald_Graham>)
    OPTIONAL { ?otherAwardee <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}

# Part 2: Resting place of actors in shows with Emily Richard
UNION

SELECT DISTINCT ?show ?actor ?restingPlace WHERE {
    ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Emily_Richard> .
    ?show <http://dbpedia.org/ontology/starring> ?actor .
    OPTIONAL { ?actor <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}

# Part 3: Resting place of children of James Burton (property developer)
UNION

SELECT DISTINCT ?child ?restingPlace WHERE {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    OPTIONAL { ?child <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
488,53,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Step 1: Identify the war involving Saitō Hajime
SELECT ?war WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?war <http://dbpedia.org/property/personsInvolved> <http://dbpedia.org/resource/Sait%C5%8D_Hajime>.
}

# Step 2: Find the commander's birthplace
SELECT ?birthPlace WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>.
    ?war <http://dbpedia.org/property/commanders> ?commander.
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace.
}

# Step 3: Identify Emperor Go-Mizunoo's father
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?father.
}

# Step 4: Determine the administration of Emperor Go-Mizunoo's father
SELECT ?administration WHERE {
    ?father <http://dbpedia.org/ontology/administration> ?administration.
}

# Step 5: Find Tokugawa Ieyasu's death place
SELECT ?deathPlace WHERE {
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace.
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
754,17,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of Loe Thai.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?commonParent WHERE {
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> .
    ?child <http://dbpedia.org/ontology/parent> ?commonParent .
    ?loethai <http://dbpedia.org/ontology/parent> ?commonParent .
    FILTER(?loethai = <http://dbpedia.org/resource/Loe_Thai>)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
55,20,test,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?bandMember WHERE {
    # Find Newsted's band
    ?newstedBand <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Newsted> .
    
    # Identify members of Newsted's band
    ?newstedBand <http://dbpedia.org/ontology/member> ?bandMember .

    # Check if the member is part of San Francisco Symphony as both a band and group
    ?symphony <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?symphony <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
    ?symphony <http://dbpedia.org/ontology/member> ?bandMember .

    # Check if the member is also part of Guns N' Roses
    ?gunsNRoses <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    FILTER(?gunsNRoses = <http://dbpedia.org/resource/Guns_N%27_Roses>)
    ?gunsNRoses <http://dbpedia.org/ontology/member> ?bandMember .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
184,56,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
# Step 1: Find Archduchess Margaret of Austria (born 1925)
SELECT ?margaret WHERE {
    ?margaret <http://dbpedia.org/ontology/birthDate> ""1925-01-01""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?margaret <http://xmlns.com/foaf/0.1/name> ""Margaret of Austria""@en .
}

# Step 2: Find her parent
SELECT ?parent WHERE {
    ?margaret <http://dbpedia.org/ontology/child> ?parent .
}

# Step 3: Find the child of that parent
SELECT ?grandchild WHERE {
    ?parent <http://dbpedia.org/ontology/child> ?grandchild .
}

# Step 4: Identify the native of Budapest who is a child of Archduke Joseph August of Austria
SELECT ?budaChild WHERE {
    ?budaChild <http://dbpedia.org/property/nationality> ""Hungarian"" .
    ?budaChild <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
    ?budaChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Joseph_August_of_Austria> .
}

# Step 5: Find the parent of this individual
SELECT ?parentBuda WHERE {
    ?budaChild <http://dbpedia.org/ontology/mother> ?parentBuda .
}

# Step 6: Identify the common parent between the grandchild and the parent from Budapest
SELECT DISTINCT ?commonParent WHERE {
    { ?grandchild <http://dbpedia.org/ontology/father> ?commonParent . }
    UNION
    { ?grandchild <http://dbpedia.org/ontology/mother> ?commonParent . }
    UNION
    { ?parentBuda <http://dbpedia.org/ontology/father> ?commonParent . }
    UNION
    { ?parentBuda <http://dbpedia.org/ontology/mother> ?commonParent . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,69,test,"Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . ?v7 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?michelePintoParty ?lambertoFatherParty ?romanoProdiBirthName WHERE {
  # Michele Pinto's party
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalParty> ?michelePintoParty .

  # Father of Lamberto Andreotti's party
  OPTIONAL { 
    ?lambertoFather <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Lamberto_Andreotti> .
    ?lambertoFather <http://dbpedia.org/ontology/politicalParty> ?lambertoFatherParty .
  }

  # Romano Prodi's birth name as an office holder and politician
  OPTIONAL {
    ?romanoProdi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
                 <http://dbpedia.org/property/birthName> ?romanoProdiBirthName .
    FILTER(?romanoProdi = <http://dbpedia.org/resource/Romano_Prodi>)
  }
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
617,41,test,"Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Step 1: Find the child of Antiochus III the Great
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Identify which child is a parent of Nysa (wife of Pharnaces I of Pontus)
SELECT ?parent WHERE {
    ?parent <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> .
}

# Step 3: Find the spouse of that identified child
SELECT ?spouse WHERE {
    ?parent <http://dbpedia.org/property/spouse> ?spouse .
}

# Step 4: Identify the child of Seleucus II Callinicus who is royalty
SELECT ?royalChild WHERE {
    <http://dbpedia.org/resource/Seleucus_II_Callinicus> <http://dbpedia.org/ontology/child> ?royalChild .
    ?royalChild a <http://dbpedia.org/ontology/Royalty> .
}

# Step 5: Check if there's any connection between the child found in step 4 and the previously identified individuals
SELECT ?relatedChild WHERE {
    ?royalChild <http://dbpedia.org/ontology/child> ?relatedChild .
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
232,42,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
SELECT ?nativePlace WHERE {
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://dbpedia.org/ontology/nativePlace> ?nativePlace .

    ?pertwee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
              <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""^^<http://www.w3.org/2001/XMLSchema#string> ;
              <http://dbpedia.org/ontology/film> ?film .
    ?film <http://dbpedia.org/ontology/title> ""Dog Soldiers"" .

    ?pertwee <http://dbpedia.org/ontology/child> ?child .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,19,test,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
SELECT ?father WHERE {
    # Step 1: Find Lizzie Spaulding's parent who is both a fictional character and a soap character
    ?parent <http://dbpedia.org/ontology/fictionalWork> ?fictionalCharacter .
    ?parent <http://dbpedia.org/ontology/fictionalWork> ?soapCharacter .
    ?lizzie <http://dbpedia.org/ontology/father> ?parent .
    VALUES ?lizzie { <http://dbpedia.org/resource/Lizzie_Spaulding> } .

    # Step 2: Find the child of that parent who is also a fictional character and a soap character
    ?child <http://dbpedia.org/ontology/father> ?parent .
    ?child <http://dbpedia.org/ontology/fictionalWork> ?fictionalCharacter .
    ?child <http://dbpedia.org/ontology/fictionalWork> ?soapCharacter .

    # Step 3: Get Stephen Verona's birthplace, ensuring it is a settlement
    ?veronaBirthPlace <http://dbpedia.org/ontology/birthPlace> ?settlement .
    VALUES ?verona { <http://dbpedia.org/resource/Stephen_Verona> } .
    FILTER(?settlement <http://dbpedia.org/ontology/Settlement>) .

    # Step 4: Identify the resident of this birthplace who matches the child from step 2
    ?resident <http://dbpedia.org/ontology/resident> ?veronaBirthPlace .
    FILTER(?child = ?resident) .

    # Step 5: Retrieve the father of this child
    ?father <http://dbpedia.org/ontology/father> ?child .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
427,41,test,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?father ?partyFather ?prodiParty WHERE {
  # Step 1: Identify Lamberto Andreotti's father
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
  
  # Step 2: Determine the political party of his father
  OPTIONAL { ?father <http://dbpedia.org/property/politicalParty> ?partyFather . }
  
  # Step 3: Find reference to Italian People's Party (1994) and Romano Prodi's party
  OPTIONAL {
    ?prodi <http://dbpedia.org/ontology/memberOf> ?prodiParty .
    FILTER(?prodi = <http://dbpedia.org/resource/Romano_Prodi>)
    ?partyReference <http://dbpedia.org/property/name> ""Italian People's Party (1994)""@en .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,41,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
# Military force of Francisco Largo Caballero
SELECT DISTINCT ?militaryForce WHERE {
  ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/SocietalEvent> | <http://dbpedia.org/ontology/MilitaryConflict>) .
  ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
}

UNION

# Military force of Francisco Franco
SELECT DISTINCT ?militaryForce WHERE {
  ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Franco> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/SocietalEvent> | <http://www.w3.org/2002/07/owl#Thing> | <http://dbpedia.org/ontology/MilitaryConflict>) .
  ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
}

UNION

# Commander in Biscay Campaign
SELECT DISTINCT ?commander WHERE {
  <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commander .
}
```",5,10,6,2,3,3,3,71,0,0,3,0,0.0,0
404,47,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
SELECT ?spouse WHERE {
    # Step 1: Identify Princess Victoria Louise of Prussia
    ?princess a <http://dbpedia.org/ontology/Royalty> ;
              <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia"" .

    # Step 2: Find her spouse
    ?princess <http://dbpedia.org/ontology/spouse> ?spouse .

    # Step 3: Determine her child who is royalty
    ?princess <http://dbpedia.org/ontology/child> ?child .
    ?child a <http://dbpedia.org/ontology/Royalty> .

    # Step 4: Find the parent of this child (who is also royalty)
    ?child <http://dbpedia.org/ontology/parent> ?grandChildParent .
    ?grandChildParent a <http://dbpedia.org/ontology/Royalty> .

    # Step 5: Identify the child of this last parent
    ?grandChildParent <http://dbpedia.org/ontology/child> ?greatGrandChild .

    # Ensure that Prince George William of Hanover is in the lineage
    FILTER(?greatGrandChild = <http://dbpedia.org/resource/Prince_George_William_of_Hanover>)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
959,55,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
SELECT ?manager WHERE {
  # Manager of Takashi Sekizuka's Team
  ?team <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Takashi_Sekizuka> .
  ?team <http://dbpedia.org/ontology/coach> ?manager .

  # Native Country of Yōichi Masuzoe
  <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
  FILTER(LANG(?countryLabel) = 'en') .

  # Alma Mater of Eiji Ōtsuka
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?universityLabel .
  FILTER(LANG(?universityLabel) = 'en') .
  ?almaMater <http://dbpedia.org/ontology/country> ?countryUniv .
  ?countryUniv <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabelUniv .
  FILTER(LANG(?countryLabelUniv) = 'en' && ?countryLabelUniv = ""Japan"") .

  # Ensure alma mater is a university and educational institution
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/JapaneseOrganizations100000001> .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/JapaneseUniversitiesAndColleges1000000> .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/EducationalInstitutions1000000> .

  # Combine conditions
  FILTER(?countryLabel = ?countryLabelUniv)
}
```",6,11,7,2,3,3,3,71,0,0,2,0,0.0,0
179,17,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
SELECT ?parent WHERE {
    # Step 1: Find Vajiralongkorn's parent
    <http://dbpedia.org/resource/Vajiralongkorn> <http://dbpedia.org/ontology/father> ?father .
    
    # Step 2: Identify Mom Rajawongse Sirikit Kitiyakara using her birth name and find her spouse
    OPTIONAL { 
        ?sirikit <http://www.w3.org/2000/01/rdf-schema#label> ""Mom Rajawongse Sirikit Kitiyakara""@en .
        ?sirikit <http://dbpedia.org/ontology/husband> ?father .
    }
    
    # Step 3: Return the parent
    FILTER(?father = ?parent)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
303,28,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
# Query for Arnulfo Arias Madrid's political party
SELECT ?party WHERE {
    <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/ontology/politicalParty> ?party .
}

UNION

# Query for the commander in the United States invasion of Panama's political party
SELECT ?party WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
               <http://dbpedia.org/ontology/battleCommanded> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .
    ?commander <http://dbpedia.org/ontology/politicalParty> ?party .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
659,69,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v7 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?commander WHERE {
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?force <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .

    ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?native <http://dbpedia.org/property/nativeCountry> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
    ?force <http://dbpedia.org/property/commander> ?native .

    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?war <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> .

    ?war <http://dbpedia.org/property/commander> ?commander .
}
```",8,14,9,3,3,3,3,71,0,0,15,0,0.0,0
281,56,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT DISTINCT ?war WHERE {
  # Step 1: Identify professional in New Zealand Army
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Military_officer> .
  ?person <http://dbpedia.org/property/politicalParty> ?party .
  ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .

  # Step 2: Find military unit
  ?unit <http://dbpedia.org/ontology/militaryUnit> ?person .

  # Step 3: Wars involving this military unit
  ?unit <http://dbpedia.org/ontology/battle> ?war .

  # Step 4: Identify awardees of Knight Grand Cross of the Order of the Bath
  ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .

  # Step 5: Wars involving these awardees
  ?awardee <http://dbpedia.org/ontology/battle> ?war .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,24,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/property/parents> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick>.
    ?child a <http://dbpedia.org/ontology/Royalty>.
    ?child <http://dbpedia.org/ontology/parent> ?parent.
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
492,62,test,"Give me the person decedent at Algiers and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
# Step 1: Find the author of ""French Algeria""
SELECT ?author WHERE {
    ?work <http://dbpedia.org/property/book> ""French Algeria"" .
    ?work <http://purl.org/dc/terms/creator> ?author .
}

# Step 2: Identify the military conflict and its commander
SELECT ?conflict ?commander WHERE {
    ?work <http://dbpedia.org/ontology/topic> ?conflict .
    ?conflict <http://dbpedia.org/property/commander> ?commander .
}

# Step 3: Find the commander in Battle of Verdun
SELECT ?verdunCommander WHERE {
    <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/property/commander> ?verdunCommander .
}

# Step 4 & 5: Determine who died in Algiers and during the event of ""French Algeria""
SELECT DISTINCT ?personDecedent WHERE {
    { 
        VALUES ?commander { ?conflictCommander ?verdunCommander }
        ?commander <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers> .
    } UNION {
        ?event <http://dbpedia.org/ontology/topic> ?work .
        ?personDecedent <http://dbpedia.org/ontology/event> ?event ;
                        <http://dbpedia.org/property/deathPlace> ?deathPlace .
        FILTER(?deathPlace = <http://dbpedia.org/resource/Algiers>)
    }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
391,67,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Determine the claim to fame of Sherry Hormann's spouse
SELECT ?work WHERE {
    ?spouse <http://dbpedia.org/ontology/claimToFame> ?work .
    FILTER(?work != <http://dbpedia.org/resource/Sherry_Hormann>)
}

# Step 3: Find actors associated with that work
SELECT DISTINCT ?actor WHERE {
    ?work <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 4: Identify a professional native to Compton, California and actor in the movie
SELECT DISTINCT ?professional WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
    ?professional <http://dbpedia.org/ontology/starring> ?movie .
    ?professional <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> .
    ?professional <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
547,51,test,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Part 1: Resting place of actors in ""Enemy at the Door""
SELECT ?actor ?restingPlace WHERE {
    <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/starring> ?actor .
    OPTIONAL { ?actor <http://dbpedia.org/ontology/burial> ?restingPlace . }
}

# Part 2: Resting place of awardees of awards received by Gerald Graham
SELECT DISTINCT ?awardee ?restingPlace WHERE {
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?award .
    ?awardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?awardee != <http://dbpedia.org/resource/Gerald_Graham>)
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/burial> ?restingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
820,20,test,Give me the child of the parent of the professional in Actor and professional in the award of the author of Understanding Comics.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?child WHERE {
    # Step 1: Identify the author of ""Understanding Comics""
    <http://dbpedia.org/resource/Scott_McCloud> <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Understanding_Comics> .
    
    # Step 2: Determine the award associated with this author
    <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?award .

    # Step 3: Find a professional who is both an actor and has received that award
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    ?actor <http://dbpedia.org/property/awards> ?award .

    # Step 4: Identify the parent of this professional
    ?actor <http://dbpedia.org/ontology/parent> ?parent .

    # Step 5: Find the child of this parent
    ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",6,6,7,3,2,3,2,20,0,0,128,0,0.0,0
701,54,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?parent WHERE {
    ?child1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> .
    ?grandchild <http://dbpedia.org/ontology/child> ?child1 .
    ?child2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Seti_I> .
    ?greatGrandchild <http://dbpedia.org/ontology/child> ?child2 .
    ?nephertariChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nefertari> .
    ?parent <http://dbpedia.org/ontology/child> ?grandchild .
    FILTER(?greatGrandchild = ?nephertariChild)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,63,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
# Part 1: Resting place of the child of the child of William Haliburton
SELECT ?grandchild ?restingPlace WHERE {
    ?parent <http://dbpedia.org/ontology/birth> ?williamHaliburton .
    ?williamHaliburton <http://www.w3.org/2000/01/rdf-schema#label> ""William Haliburton"" .
    ?parent <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
    OPTIONAL { ?grandchild <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}

UNION

# Part 2: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?awardee ?restingPlace WHERE {
    ?awardee <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Knight Grand Cross of the Order of St Michael and St George"" .
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}

UNION

# Part 3: Resting place of the actor of ""Enemy at the Door""
SELECT ?actor ?restingPlace WHERE {
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    ?film <http://www.w3.org/2000/01/rdf-schema#label> ""Enemy at the Door"" .
    OPTIONAL { ?actor <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
659,60,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
SELECT ?commander WHERE {
    ?officeHolder <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
    ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?militaryForce <http://dbpedia.org/property/leader> ?officeHolder .
    ?event <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/MilitaryConflict> .
    ?militaryForce <http://dbpedia.org/property/commander> ?commander .
}
```",6,10,7,3,2,3,3,71,0,0,40,0,0.0,0
783,19,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of Ofori Amponsah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
SELECT ?bandMember WHERE {
    ?ebonyReigns a <http://dbpedia.org/ontology/MusicalArtist> ;
                 <http://www.w3.org/2000/01/rdf-schema#label> ""Ebony Reigns""@en .
    ?oforiAmponsah a <http://dbpedia.org/ontology/MusicalArtist> ;
                   <http://dbpedia.org/ontology/memberOf> ?band .
    ?bandMember a <http://dbpedia.org/ontology/MusicalArtist> ;
                <http://dbpedia.org/ontology/memberOf> ?band .
    FILTER(?ebonyReigns != ?oforiAmponsah)
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
232,30,test,"Give me the child of Jon Pertwee and actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?child WHERE {
    # Step 1: Identify Jon Pertwee's child
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .

    # Step 2: Find an actor of ""Dog Soldiers"" (film)
    ?child <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .

    # Step 3: Determine Sylvie Bermann's British residence
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?settlement .
    ?residence <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Sylvie_Bermann> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

    # Step 4: Find a native of Sylvie Bermann's residence
    ?child <http://dbpedia.org/property/nationality> ?nativeOf .
    FILTER(?nativeOf = ?residence)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
492,44,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
SELECT ?deathPlaceInAlgeria ?capitalCity ?war WHERE {
    # Frédéric-Georges Herr's death place related to French Algeria
    <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/deathPlace> ?deathPlaceInAlgeria .
    ?deathPlaceInAlgeria <http://www.w3.org/2000/01/rdf-schema#label> ?placeLabel .
    FILTER(CONTAINS(LCASE(?placeLabel), ""algeria""))

    # Capital of Algeria
    <http://dbpedia.org/resource/Algiers> <http://www.w3.org/2000/01/rdf-schema#label> ?capitalCity .

    # Frédéric-Georges Herr's role in a war
    <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?war .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
767,59,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Step 1: Find the writer of ""Where It's At""
SELECT ?writer WHERE {
    <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> dbo:lyrics ?writer .
}

# Step 2: Identify a settlement in the administration related to George Kilbon Nash
SELECT DISTINCT ?settlement WHERE {
    ?admin dbo:administrator <http://dbpedia.org/resource/George_Kilbon_Nash> .
    ?admin dbo:location ?settlement .
    ?settlement rdf:type dbo:Settlement .
}

# Step 3: Find the alma mater of the administration involving both the writer and the settlement
SELECT DISTINCT ?almaMater WHERE {
    ?writer dbo:education ?edu .
    ?edu dbo:almaMater ?almaMater .
    
    ?settlement dbo:administration ?admin .
    ?admin dbo:administrator ?writer .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,71,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Step 1: Get the actor of ""Unnatural (TV series)"" and their profession
SELECT ?actor ?profession WHERE {
    ?series <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(STR(?series) = ""http://dbpedia.org/resource/Unnatural_(TV_series)"")
}

# Step 2: Get Ted McGinley's spouse
SELECT ?tedSpouse WHERE {
    ?ted <http://www.w3.org/2000/01/rdf-schema#label> ""Ted McGinley""@en .
    ?ted <http://dbpedia.org/ontology/birthName> ?birthName .
    ?ted <http://dbpedia.org/property/spouse> ?tedSpouse .
}

# Step 3: Get the alumnus of Ohio State University and their birth name
SELECT ?alumnus ?alumnusBirthName WHERE {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
    ?alumnus <http://dbpedia.org/ontology/birthName> ?alumnusBirthName .
}

# Step 4: Find the common spouse
SELECT DISTINCT ?commonSpouse WHERE {
    # Ted McGinley's spouse
    ?ted <http://www.w3.org/2000/01/rdf-schema#label> ""Ted McGinley""@en .
    ?ted <http://dbpedia.org/property/spouse> ?commonSpouse .

    # Alumnus of Ohio State University with the same birth name as Ted McGinley
    ?alumnus <http://dbpedia.org/ontology/birthName> ?birthName .
    ?ted <http://dbpedia.org/ontology/birthName> ?birthName .
    ?alumnus <http://dbpedia.org/property/spouse> ?commonSpouse .

    # Ensure the alumnus is from Ohio State University
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
}

# Step 5: Get the professional in the profession of the actor from ""Unnatural (TV series)""
SELECT DISTINCT ?professional WHERE {
    # Actor's profession
    ?series <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(STR(?series) = ""http://dbpedia.org/resource/Unnatural_(TV_series)"")

    # Common spouse's professional in the same profession
    ?commonSpouse <http://dbpedia.org/ontology/profession> ?profession .
    ?professional <http://dbpedia.org/ontology/profession> ?profession .
}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
285,19,test,Give me the spouse of the professional in the award of Stan Lee and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT DISTINCT ?spouse WHERE {
    # Step 1: Find the child of Tina Onassis Niarchos
    <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?child .

    # Step 2: Identify awards associated with Stan Lee and find other awardees
    <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?award .
    ?professional <http://dbpedia.org/property/awards> ?award .
    FILTER(?professional != <http://dbpedia.org/resource/Stan_Lee>) .

    # Step 3: Find the spouse of the professional
    ?professional <http://dbpedia.org/property/spouse> ?spouse .
}
```",5,5,6,3,2,3,2,20,0,1811,2,0.0,0.0,0
391,64,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?native WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Jackson, Tennessee""@en .
    ?person <http://dbpedia.org/property/nicknames> ?nickname .
    FILTER(?nickname = ""Jackson, Tennessee"")
    
    ?person <http://dbpedia.org/ontology/film> ?film .
    ?film <http://www.w3.org/2000/01/rdf-schema#label> ""The Departed""@en .

    ?movie <http://dbpedia.org/ontology/starring> ?person .
    ?movie <http://dbpedia.org/ontology/work> ?work .
    ?movie <http://dbpedia.org/ontology/tvEpisode> ?tvShow .
    
    ?person <http://dbpedia.org/ontology/nativePlace> ?native .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
528,45,test,Give me the war of Orozimbo Barbosa and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?orozimboWar ?ireneWar ?birthName ?force WHERE {
  # Wars involving Orozimbo Barbosa
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?orozimboWar .

  # Wars involving Irene Morales
  <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?ireneWar .

  # Birth name of Narciso Campero and associated military force
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?person <http://dbpedia.org/ontology/militaryForce> ?force .
  }
}
```",5,5,6,3,3,3,3,71,2,11,0,0.15384615384615385,1.0,0.2666666666666667
251,25,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . },"```sparql
SELECT ?warLocation ?rulingPartyAdmin ?deathPlace WHERE {
  # Part 1: Location of the war involving Louis François Félix Musnier
  ?musnier <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/ontology/location> ?warLocation .
  
  FILTER(?musnier = <http://dbpedia.org/resource/Louis_François_Félix_Musnier>)
  
  # Part 2: Administration of the ruling party in Sicily
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?party <http://dbpedia.org/property/rulingIn> <http://dbpedia.org/resource/Sicily> .
  ?party <http://dbpedia.org/ontology/administration> ?rulingPartyAdmin .

  # Part 3: Death place of Laura Mancinelli
  <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/property/deathPlace> ?deathPlace .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,49,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Step 1: Identify office holders and politicians in the New Zealand Army
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/New_Zealand_Army>.
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
}

# Step 2: Find military units associated with these individuals
SELECT DISTINCT ?militaryUnit WHERE {
    ?person <http://dbpedia.org/ontology/profession> ?militaryUnit.
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
}

# Step 3: Find wars associated with these military units
SELECT DISTINCT ?war WHERE {
    ?militaryUnit <http://dbpedia.org/property/war> ?war.
}

# Step 4: Identify awardees of Knight Grand Cross of the Order of the Bath
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath>.
}

# Step 5: Find wars associated with these awardees
SELECT DISTINCT ?war2 WHERE {
    ?awardee <http://dbpedia.org/property/war> ?war2.
}

# Final step: Find common wars between steps 3 and 5
SELECT DISTINCT ?commonWar WHERE {
    { SELECT ?war WHERE { ... } } AS ?wars1
    { SELECT ?war2 WHERE { ... } } AS ?wars2
    VALUES ?commonWar { ?wars1 ?wars2 }
}
```",5,8,6,3,2,3,3,71,0,0,9,0,0.0,0
9,62,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Step 1: Identify the Mayor of Belfast
SELECT ?mayor WHERE {
    ?mayor <http://dbpedia.org/ontology/politician> true .
    ?mayor <http://dbpedia.org/property/placeOfBirth> ?place .
    ?place <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast""@en .
}

# Step 2: Find the Alma Mater of the Mayor
SELECT DISTINCT ?almaMater WHERE {
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
    # Use the result from Step 1 for ?mayor
}

# Step 3: Identify QUB
SELECT ?qub WHERE {
    ?qub <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast""@en .
}

# Step 4: Find Awardees of Royal Medals and their Alma Mater
SELECT DISTINCT ?almaMater WHERE {
    ?awardee <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal""@en .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Step 5: Combine Results
SELECT DISTINCT ?commonAlmaMater WHERE {
    { ?mayor <http://dbpedia.org/ontology/almaMater> ?commonAlmaMater . }
    UNION
    { ?awardee <http://dbpedia.org/ontology/almaMater> ?commonAlmaMater .
      ?awardee <http://dbpedia.org/property/awards> ?award .
      ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal""@en . }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
994,51,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?bandMember ?associatedArtist WHERE {
    ?person <http://dbpedia.org/ontology/personalName> ""Don Dokken"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    
    ?bandMember <http://dbpedia.org/property/memberOf> ?person .
    
    OPTIONAL {
        ?bandMember <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Meshuggah> .
    }
    
    ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
528,56,test,Give me the war of Orozimbo Barbosa and war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
# Wars involving Orozimbo Barbosa
SELECT ?war1 WHERE {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?war1 .
}

UNION

# Wars of the military force involved in the Battle of Pisagua
SELECT ?war2 WHERE {
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?force <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua>.
    ?force <http://dbpedia.org/ontology/battle> ?war2 .
}

UNION

# Wars involving Narciso Campero
SELECT ?war3 WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Narciso Campero""@en.
    ?person <http://dbpedia.org/ontology/birthName> ""Narciso Campero"".
    ?person <http://dbpedia.org/ontology/battle> ?war3 .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
55,24,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?band1 ?member1 ?band2 ?member2 WHERE {
    ?band1 <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/San_Francisco_Symphony>.
    ?band1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
    ?band1 <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?band2.
    ?band2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
    ?band1 <http://dbpedia.org/ontology/member> ?member1.
    ?band2 <http://dbpedia.org/ontology/member> ?member2.
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
16,70,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . }","```sparql
SELECT ?professional WHERE {
    # Step 1: Find the actor of ""Unnatural (TV series)"" and their profession
    <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/profession> ?profession .

    # Step 2: Find Ted Martin McGinley's spouse
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/spouse> ?tedSpouse .

    # Step 3: Identify the alumnus of Ohio State University by birth name
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
    ?alumnus <http://dbpedia.org/property/birthName> ?birthName .

    # Step 4: Find the spouse of this alumnus
    ?alumnus <http://dbpedia.org/property/spouse> ?alumniSpouse .

    # Ensure the spouses are the same person
    FILTER(?tedSpouse = ?alumniSpouse)

    # Step 5: Find a professional in the same profession as the actor
    ?professional <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?professional != ?actor)
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
404,68,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
# Step 1: Find Princess Victoria Louise of Prussia by birth name
SELECT ?princess WHERE {
    ?princess <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
    ?princess <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 2: Find her spouse
SELECT ?spouse WHERE {
    ?princess <http://dbpedia.org/property/spouse> ?spouse .
    FILTER(?princess = ?princessFromStep1)
}

# Step 3: Identify Ernest Augustus, Duke of Brunswick and his father
SELECT ?ernestAugustus ?father WHERE {
    ?ernestAugustus <http://dbpedia.org/ontology/birthName> ""Ernest Augustus, Duke of Brunswick"" .
    ?father <http://dbpedia.org/property/spouse> ?mother .
    ?ernestAugustus <http://dbpedia.org/ontology/father> ?father .
}

# Step 4: Find the child (royalty) of Ernest Augustus's parent
SELECT ?child WHERE {
    ?parent <http://dbpedia.org/ontology/child> ?child .
    FILTER(?parent = ?father)
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 5: Identify Prince George William of Hanover as the child of that royalty
SELECT ?princeGeorge WHERE {
    ?child <http://dbpedia.org/ontology/child> ?princeGeorge .
    FILTER(?child = ?childFromStep4)
    ?princeGeorge <http://dbpedia.org/ontology/birthName> ""Prince George William of Hanover"" .
}

# Step 6: Confirm Princess Victoria Louise of Prussia and retrieve her spouse
SELECT ?spouse WHERE {
    ?princess <http://dbpedia.org/property/spouse> ?spouse .
    FILTER(?princess = ?princessFromStep1)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,62,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?parent ?childOfChild ?spouse WHERE {
    # Step 1: Find Nysa's parent
    <http://dbpedia.org/resource/Nysa_(wife_of_Pharmaaces_I_of_Pontus)> <http://dbpedia.org/ontology/child> ?nysaParent .
    
    # Step 2: Identify successor of Antiochus II Theos and their royal child
    ?antiochusII <http://dbpedia.org/property/successor> ?successorAntiochusII .
    ?successorAntiochusII <http://www.w3.org/2000/01/rdf-schema#label> ?labelSuccessorAntiochusII .
    FILTER(CONTAINS(LCASE(?labelSuccessorAntiochusII), ""royalty"")) .
    
    # Step 2.1: Find the royal child of the successor
    ?successorAntiochusII <http://dbpedia.org/ontology/child> ?royalChildAntiochusII .
    ?royalChildAntiochusII <http://www.w3.org/2000/01/rdf-schema#label> ?labelRoyalChildAntiochusII .
    FILTER(CONTAINS(LCASE(?labelRoyalChildAntiochusII), ""royalty"")) .

    # Step 3: Find the child of the royal child from step 2
    ?royalChildAntiochusII <http://dbpedia.org/ontology/child> ?childOfChild .
    
    # Step 4: Identify successor of Antiochus III the Great and their royal child
    ?antiochusIII <http://dbpedia.org/property/successor> ?successorAntiochusIII .
    ?successorAntiochusIII <http://www.w3.org/2000/01/rdf-schema#label> ?labelSuccessorAntiochusIII .
    FILTER(CONTAINS(LCASE(?labelSuccessorAntiochusIII), ""royalty"")) .

    # Step 4.1: Find the royal child of the successor
    ?successorAntiochusIII <http://dbpedia.org/ontology/child> ?royalChildAntiochusIII .
    ?royalChildAntiochusIII <http://www.w3.org/2000/01/rdf-schema#label> ?labelRoyalChildAntiochusIII .
    FILTER(CONTAINS(LCASE(?labelRoyalChildAntiochusIII), ""royalty"")) .

    # Step 5: Determine spouse of the royal child from step 4
    ?royalChildAntiochusIII <http://dbpedia.org/ontology/spouse> ?spouse .

    # Ensure parent matches childOfChild and spouse is correct
    FILTER(?nysaParent = ?childOfChild)
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
659,18,test,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT DISTINCT ?militaryForce ?commanderLeipzig ?commanderGermanCampaign WHERE {
    ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Leipzig> .
    ?militaryForce <http://dbpedia.org/ontology/campaign> <http://dbpedia.org/resource/German_campaign_of_1813> .
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    
    OPTIONAL { 
        ?battleOfLeipzig <http://dbpedia.org/property/commander> ?commanderLeipzig .
        FILTER(?battleOfLeipzig = <http://dbpedia.org/resource/Battle_of_Leipzig>)
    }
    
    OPTIONAL {
        ?germanCampaign1813 <http://dbpedia.org/property/commander> ?commanderGermanCampaign .
        FILTER(?germanCampaign1813 = <http://dbpedia.org/resource/German_campaign_of_1813>)
    }
}
```",3,3,4,1,3,3,3,71,0,0,5,0,0.0,0
391,69,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Step 1: Find the nickname for Jackson, Tennessee
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?nickname .
}

# Step 2: Identify a figure (actor) native to this location and having the nickname
SELECT ?actor WHERE {
    ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> ;
           <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Jackson,_Tennessee> .
    FILTER(?actorLabel = ""NicknameActor"") # Replace with actual nickname if known
}

# Step 3: Find a work that involves both Michael Ballhaus and this actor
SELECT ?work WHERE {
    ?work <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Michael_Ballhaus> ;
          <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 4: Retrieve the actor associated with this work
SELECT DISTINCT ?actor WHERE {
    ?work <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Michael_Ballhaus> ;
          <http://dbpedia.org/ontology/starring> ?actor .
}
```

Note: The query assumes that the nickname and actor can be identified through DBpedia's structured data. Adjustments may be needed based on actual data availability.",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
959,60,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v5 . }","```sparql
SELECT ?teamManager WHERE {
  # Step 1: Find the sports manager of the 1998 Kashima Antlers season
  ?season <http://dbpedia.org/ontology/team> ?kashimaAntlers .
  ?kashimaAntlers <http://dbpedia.org/property/year> ""1998""^^xsd:gYear .
  ?kashimaAntlers <http://dbpedia.org/ontology/sportsManager> ?sportsManager .

  # Step 2: Determine the team managed by this sports manager
  ?sportsManager <http://dbpedia.org/ontology/team> ?team .

  # Step 3: Find the manager of that team
  ?team <http://dbpedia.org/ontology/manager> ?teamManager .

  # Step 4: Identify the person born in 1958 with a Japanese alma mater
  ?person <http://dbpedia.org/property/birthYear> ""1958""^^xsd:gYear .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?universityLabel .
  FILTER(CONTAINS(LCASE(?universityLabel), ""japan""))
  FILTER(EXISTS { ?almaMater a <http://dbpedia.org/class/yago/JapaneseUniversity100000001>. })
  FILTER(EXISTS { ?almaMater a <http://dbpedia.org/ontology/Organisation>. })
  FILTER(EXISTS { ?almaMater a <http://dbpedia.org/ontology/EducationalOrganization>. })

  # Ensure the person is the same as the sports manager
  FILTER(?person = ?sportsManager)
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
281,38,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT ?country ?war WHERE {
    # Query for Bob Heffron's birth place that is a country
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .

    # Query for Heather Roy's profession that is a military unit and its associated war
    ?heather rdf:type <http://dbpedia.org/ontology/Person> ;
             <http://dbpedia.org/property/profession> ?profession .
    ?profession rdf:type <http://dbpedia.org/ontology/MilitaryUnit> ;
                <http://dbpedia.org/ontology/battle> ?war .

    # Ensure Heather Roy is the correct person
    FILTER(?heather = <http://dbpedia.org/resource/Heather_Roy>)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
404,46,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
    ?princess <http://www.w3.org/2000/01/rdf-schema#label> ""Princess Victoria Louise of Prussia""@en .
    ?princess <http://dbpedia.org/ontology/birthName> ?birthName .
    FILTER(CONTAINS(LCASE(?birthName), ""victoria louise""))

    ?spouse <http://dbpedia.org/ontology/spouse> ?princess .
    ?child <http://dbpedia.org/ontology/parent> ?spouse .
    ?child <http://www.w3.org/2000/01/rdf-schema#label> ?childLabel .
    FILTER(CONTAINS(LCASE(?childLabel), ""royalty""))

    ?parent <http://dbpedia.org/ontology/parent> ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,45,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of Japan and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
SELECT ?manager ?teamManager WHERE {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>.
    ?person <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/University_of_Tsukuba>.
    ?person <http://dbpedia.org/ontology/teamManaged> <http://dbpedia.org/resource/Kashima_Antlers>.
    ?person <http://dbpedia.org/ontology/sportManagerForTeam> _:b0.
    _:b0 <http://dbpedia.org/property/year> ""1998""^^<http://www.w3.org/2001/XMLSchema#gYear>.
    ?person <http://dbpedia.org/ontology/teamManaged> ?team.
    ?team <http://dbpedia.org/ontology/manager> ?teamManager.
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
378,40,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?crillonFame ?blakeWars ?gahnBirthName ?gahnFame WHERE {
    # Louis des Balbes de Berton de Crillon's claim to fame
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/notableworks> ?crillonFame .

    # Joaquín Blake's wars
    <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/property/wars> ?blakeWars .

    # Carl Pontus Gahn's birth name and claim to fame
    <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/ontology/birthName> ?gahnBirthName .
    <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/ontology/notableworks> ?gahnFame
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
701,62,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
SELECT ?grandparent WHERE {
  # Step 1: Find the spouse of Amun-her-khepeshef
  ?amunHerKhepeshef <http://dbpedia.org/property/spouse> ?spouse .
  
  # Step 2: Ensure this spouse is also a spouse of Ramesses II
  ?ramessesII <http://dbpedia.org/property/spouse> ?spouse .

  # Step 3: Find the child of Amun-her-khepeshef and Ramesses II
  ?child <http://dbpedia.org/ontology/parent> ?amunHerKhepeshef .
  ?child <http://dbpedia.org/ontology/parent> ?ramessesII .

  # Step 4: Find the parent of this child (should be the spouse)
  ?spouse <http://dbpedia.org/ontology/child> ?child .

  # Step 5: Identify Seti I's child
  ?setiI <http://dbpedia.org/property/spouse> ?amunHerKhepeshef .
  ?setiIClone <http://dbpedia.org/ontology/child> ?setiI .

  # Step 6: Find the grandchild (the child of Seti I's child)
  ?grandchild <http://dbpedia.org/ontology/parent> ?setiIClone .

  # Step 7: Identify the parent of this grandchild
  ?spouse <http://dbpedia.org/ontology/child> ?grandchild .
  
  BIND(?spouse AS ?grandparent)
}
```",7,7,8,3,3,3,3,71,1,37,0,0.02631578947368421,1.0,0.05128205128205127
801,67,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
SELECT ?producer WHERE {
    # Step 1: Identify the album ""What U See Is What U Get""
    <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> <http://purl.org/dc/terms/creator> ?writer .
    
    # Step 2: Find writers who are musical artists and artists
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    
    # Step 3: Determine associated musical artist(s) who are rappers
    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?rapper ;
            <http://purl.org/dc/terms/contributor> ?contributor .
    ?rapper <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://dbpedia.org/property/category> <http://dbpedia.org/resource/Rapper> .
    
    # Step 4: Identify the professional (musical artist) among these rappers
    ?contributor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    
    # Step 5: Find the producer(s) of the work that is a song from this album
    ?song <http://purl.org/dc/terms/isPartOf> <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
    ?song <http://purl.org/dc/terms/creator> ?producer .
}
```",7,15,8,3,3,3,3,71,0,0,8,0,0.0,0
747,47,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
# Step 1: Get the birth date of Pavlo Khudzik
SELECT ?birthDate WHERE {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 2: Find a person born on that same birth date
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER(?birthDate = ""Pavlo Khudzik's Birth Date"") # Replace with actual date from step 1
}

# Step 3: Identify a song written by Amba Shepherd and find its writer
SELECT DISTINCT ?song ?writer WHERE {
    ?song <http://dbpedia.org/ontology/writtenBy> <http://dbpedia.org/resource/Amba_Shepherd> .
    ?song <http://dbpedia.org/ontology/writer> ?writer .
}

# Step 4: Determine the band associated with this writer
SELECT DISTINCT ?band WHERE {
    ?writer <http://dbpedia.org/property/memberOfBand> ?band .
}
```

Note: The actual SPARQL query would need to be executed in parts, using the results from each step to inform the next. This is a conceptual breakdown and may require adjustments based on available data in DBpedia.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
77,20,test,"Give me the war of the awardee of the award of Maxim Grigorievich Vlasov and force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Step 1: Find awards received by Maxim Grigorievich Vlasov
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?award .
}

# Step 2: Find other awardees of those awards
SELECT DISTINCT ?otherAwardee WHERE {
    ?award <http://dbpedia.org/property/awards> ?otherAwardee .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov>)
}

# Step 3: Find the mayor of Warsaw and their administered territory
SELECT DISTINCT ?mayor ?territory WHERE {
    ?mayor <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Warsaw> .
    ?mayor <http://dbpedia.org/property/administers> ?territory .
}

# Step 4: Find the military force related to that territory
SELECT DISTINCT ?force WHERE {
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?force <http://dbpedia.org/property/country> ?territory .
}

# Step 5: Find wars involving both the awardees and the military force
SELECT DISTINCT ?war WHERE {
    ?otherAwardee <http://dbpedia.org/ontology/battle> ?war .
    ?force <http://dbpedia.org/ontology/battle> ?war .
}
```",6,7,7,3,2,3,2,20,0,0,26,0,0.0,0
994,46,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . }","```sparql
# Part 1: Find band members of Meshuggah who are also a band/group/organization
SELECT ?member WHERE {
    <http://dbpedia.org/resource/Meshuggah> <http://dbpedia.org/ontology/member> ?member .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER(?type IN (<http://dbpedia.org/class/yago/Band115069769>, <http://dbpedia.org/class/yago/MusicalGroup117067068>, <http://dbpedia.org/class/yago/Organisation118065965>))
}

# Part 2: Find associated musical artists of these members
SELECT ?associatedArtist WHERE {
    ?member <http://dbpedia.org/ontology/member> ?band .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER(?type IN (<http://dbpedia.org/class/yago/Band115069769>, <http://dbpedia.org/class/yago/MusicalGroup117067068>, <http://dbpedia.org/class/yago/Organisation118065965>) && ?band = <http://dbpedia.org/resource/Meshuggah>)
    ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Part 3: Find associated musical artists of the associated artists found in Part 2
SELECT DISTINCT ?secondLevelAssociatedArtist WHERE {
    ?member <http://dbpedia.org/ontology/member> ?band .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER(?type IN (<http://dbpedia.org/class/yago/Band115069769>, <http://dbpedia.org/class/yago/MusicalGroup117067068>, <http://dbpedia.org/class/yago/Organisation118065965>) && ?band = <http://dbpedia.org/resource/Meshuggah>)
    ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?firstLevelAssociatedArtist .
    ?firstLevelAssociatedArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?secondLevelAssociatedArtist .
}

# Part 4: Find associated musical artists of Watchtower
SELECT ?watchtowerAssociatedArtist WHERE {
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Watchtower_(band)> .
    ?reference <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerAssociatedArtist .
}
```",5,8,6,3,2,3,3,71,0,0,5,0,0.0,0
492,45,test,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Franco-Hova_Wars> .
    ?person <http://dbpedia.org/property/deathPlace> ?deathPlace1 .
    ?person <http://dbpedia.org/property/deathPlace> ?deathPlace2 .
    
    # Capital of Khemis Miliana District
    ?capital <http://www.w3.org/2000/01/rdf-schema#label> ""Khemis Miliana""@en .
    ?capital <http://dbpedia.org/ontology/capital> ?district .
    ?district <http://dbpedia.org/property/name> ""Khemis Miliana District"" .

    # French Algeria
    ?algeria <http://www.w3.org/2000/01/rdf-schema#label> ""French Algeria""@en .

    FILTER(?deathPlace1 = ?capital || ?deathPlace2 = ?capital)
    FILTER(?deathPlace1 = ?algeria || ?deathPlace2 = ?algeria)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,61,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Find Parent1 (parent of Archduchess Margaret who is royalty)
SELECT ?parent1 WHERE {
    <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://dbpedia.org/ontology/birthParent> ?parent1 .
    ?parent1 <http://www.w3.org/2002/07/owl#sameAs> ?royalty .
}

# Step 2: Find Child1 (child of Parent1)
SELECT ?child1 WHERE {
    ?parent1 <http://dbpedia.org/ontology/child> ?child1 .
}

# Step 3: Find Parent2 (parent of Child1)
SELECT ?parent2 WHERE {
    ?child1 <http://dbpedia.org/ontology/birthParent> ?parent2 .
}

# Step 4: Find Grandchild (child of Child1)
SELECT ?grandchild WHERE {
    ?child1 <http://dbpedia.org/ontology/child> ?grandchild .
}

# Final Step: Find the child of Grandchild
SELECT ?finalChild WHERE {
    ?grandchild <http://dbpedia.org/ontology/child> ?finalChild .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,49,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person ?birthName WHERE {
    ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Ohio_State_University>.
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ted_McGinley>.
    FILTER(?alumnus = ?spouse)
    ?person rdfs:label ?alumnus .
    OPTIONAL { ?person <http://dbpedia.org/ontology/birthName> ?birthName . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,65,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . }","```sparql
SELECT ?person WHERE {
    # Step 1: Get Gigi Rice's birth name
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName .

    # Step 2: Get Ted Martin McGinley's spouse
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/spouse> ?spouse .

    # Step 3 and 4: Get the actor of ""Unnatural"" and their profession
    <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/actor> ?actor .
    ?actor <http://dbpedia.org/ontology/profession> ?profession .

    # Step 5: Find the person with the same birth name, spouse, and profession
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/property/spouse> ?spouse .
    ?person <http://dbpedia.org/ontology/profession> ?profession .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
16,60,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
    ?ted <http://www.w3.org/2000/01/rdf-schema#label> ""Ted McGinley""@en .
    ?ted <http://dbpedia.org/property/birthName> ?birthNameTed .
    ?ted <http://dbpedia.org/ontology/spouse> ?spouse .
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
    ?alumnus <http://www.w3.org/2000/01/rdf-schema#label> ?spouseLabel .
    FILTER(?spouse = ?alumnus)
    ?alumnus <http://dbpedia.org/property/birthName> ?person
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
547,60,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
# Part 1: Resting place of awardees of Gerald Graham's awards
SELECT DISTINCT ?awardee ?restingPlace WHERE {
    # Find awards received by Gerald Graham
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?award .
    
    # Find other individuals who have also received those awards
    ?awardee <http://dbpedia.org/property/awards> ?award .
    
    # Get the resting place of these awardees
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}

UNION

# Part 2: Resting place of grandchildren of William Haliburton
SELECT DISTINCT ?grandchild ?restingPlace WHERE {
    # Find children of William Haliburton
    <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?child .
    
    # Find children (grandchildren) of those children
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
    
    # Get the resting place of these grandchildren
    OPTIONAL { ?grandchild <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
659,49,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
# Step 1: Find the military force associated with Arthur Wellesley, 1st Duke of Wellington
SELECT ?militaryForce WHERE {
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}

# Step 2: Find the commander of that military force
SELECT ?commander WHERE {
    ?militaryForce <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 3: Identify societal events and military conflicts related to Rutger Jan Schimmelpenninck
SELECT DISTINCT ?event WHERE {
    <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/reference> ?event .
    ?event a <http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 4: Determine the military force involved in these events
SELECT DISTINCT ?militaryForce WHERE {
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",5,8,6,3,2,3,3,71,0,0,38,0,0.0,0
547,67,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . },"```sparql
# Resting place of James Burton (Egyptologist)
SELECT ?deathPlace WHERE {
    <http://dbpedia.org/resource/James_Burton_(egyptologist)> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}

UNION

# Resting place of the awardee of the award of Gerald Graham
SELECT ?otherAwardeeDeathPlace WHERE {
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ?awardLabel .
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/ontology/deathPlace> ?otherAwardeeDeathPlace .
}

UNION

# Resting place of the actor of the show with Emily Richard
SELECT ?actorDeathPlace WHERE {
    ?work <http://dbpedia.org/property/filmography> <http://dbpedia.org/resource/Emily_Richard> .
    ?work <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorDeathPlace .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
994,62,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Step 1: Find Fredrik Thordendal's band (Meshuggah)
SELECT ?meshuggah WHERE {
    <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/memberOf> ?meshuggah .
}

# Step 2: Find associated musical artists of Meshuggah
SELECT DISTINCT ?associatedArtist WHERE {
    ?meshuggah <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Step 3: Find Don Dokken's band members (Dokken)
SELECT ?dokkenMember WHERE {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/memberOf> ?dokkenBand .
    ?dokkenBand <http://dbpedia.org/ontology/member> ?dokkenMember .
}

# Step 4: Find associated musical artists of Dokken's band members
SELECT DISTINCT ?associatedArtist WHERE {
    ?dokkenMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Step 5: Identify Watchtower reference and find associated musical artist
SELECT ?watchtowerAssociatedArtist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerAssociatedArtist .
}

# Final step: Find common associated musical artist across all steps
SELECT DISTINCT ?commonArtist WHERE {
    { ?meshuggah <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist . }
    UNION
    { ?dokkenMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist . }
    UNION
    { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist . }
}
```

Note: This query is conceptual and may require adjustments based on the actual data available in DBpedia. The complexity of the relationships might necessitate multiple queries or manual verification to ensure accuracy.",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,71,test,"Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?decedent WHERE {
    # Step 1: Identify Gustav Jonson's leader
    ?leader <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Gustav_Jonson> .
    
    # Step 2: Find the government agency led by this person
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> ;
            <http://dbpedia.org/property/leader> ?leader .
    
    # Step 3: Determine the commander of the office
    ?commander <http://dbpedia.org/property/commander> ?office .
    
    # Step 4: Identify the force commanded by this commander during the Volcano and Ryukyu Islands campaign
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> ;
            <http://dbpedia.org/property/commander> ?commander .
    
    ?force <http://dbpedia.org/property/militaryForce> ?battle .
    
    # Step 5: Find the awardee who received an award for their role in that campaign
    ?awardee <http://dbpedia.org/ontology/awards> ?award ;
             <http://dbpedia.org/property/militaryForce> ?force .
    
    # Step 6: Identify the decedent at Budapest related to this awardee's force
    ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> ;
              <http://dbpedia.org/property/militaryForce> ?force .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
391,66,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
# Step 1: Identify Michael Ballhaus's claim to fame (a work)
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/notableWork> ?work .
}

# Step 2: Find the actor who is a professional in and an actor of this work
SELECT DISTINCT ?actor WHERE {
    ?work <http://dbpedia.org/property/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
}

# Step 3: Find the city known as ""Hub City""
SELECT ?city WHERE {
    ?city <http://www.w3.org/2000/01/rdf-schema#label> ""Hub City""@en .
}

# Step 4: Identify the figure associated with Hub City
SELECT DISTINCT ?figure WHERE {
    ?figure <http://dbpedia.org/ontology/nationality> ?country .
    ?city <http://dbpedia.org/ontology/country> ?country .
}

# Step 5: Locate the movie that is a work and television show, involving the actor from step 2 and related to the figure from step 4
SELECT DISTINCT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie110557069> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Work108610699> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow110557069> .
    ?movie <http://dbpedia.org/property/starring> ?actor .
    ?figure <http://dbpedia.org/ontology/associatedWith> ?movie .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
801,69,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
SELECT ?producer WHERE {
    # Step 1: Identify the album ""What U See Is What U Get""
    <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> <http://purl.org/dc/terms/creator> ?writer .
    
    # Step 2: Ensure the writer is a musical artist and an artist
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    
    # Step 3: Find the associated musical artist of this writer
    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
    
    # Step 4: Identify The Shadow's alter ego, which is also a professional in music
    ?shadowAlterEgo <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
                    <http://dbpedia.org/property/profession> ""The Shadow"" .
    
    # Step 5: Find the work that is both a musical work and a song by 50 Cent and The Shadow's alter ego
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> ;
          <http://purl.org/dc/terms/contributor> <http://dbpedia.org/resource/50_Cent> , ?shadowAlterEgo .
    
    # Step 6: Identify the producer of this work
    ?work <http://dbpedia.org/property/producer> ?producer .
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
488,21,test,Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query 1: Administration of Emperor Go-Yōzei
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/reign> ?administration .
}

# Query 2: Birthplace of the Commander in Boshin War
SELECT ?birthPlace WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> ;
               <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Boshin_War> .
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
429,9,test,"Give me the country of the military force, that is an organisation, of Camden Expedition and administration of the father of Martha Johnson Patterson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Query 1: Country of the military force (organisation) of Camden Expedition
SELECT ?country WHERE {
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition>.
    ?militaryForce <http://dbpedia.org/ontology/country> ?country.
}

# Query 2: Administration of the father of Martha Johnson Patterson
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/memberOf> ?administration.
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
427,53,test,"Give me the reference to the name of the party of Michele Pinto and party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . }","```sparql
SELECT ?micheleParty ?giulioParty ?romanoParty WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalParty> ?micheleParty .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?giulioParty .
  }
  OPTIONAL {
    ?romano a <http://dbpedia.org/ontology/OfficeHolder> ;
            <http://dbpedia.org/ontology/politician> true ;
            <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER(?birthDate <= ""1949-08-09T00:00:00""^^xsd:dateTime && ?birthDate >= ""1948-08-09T00:00:00""^^xsd:dateTime)
    ?romano <http://dbpedia.org/ontology/politicalParty> ?romanoParty .
  }
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
285,17,test,Give me the spouse of the professional in the award of Stan Lee and parent of Alexander Onassis.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?professional ?spouse WHERE {
    ?onassis <http://dbpedia.org/ontology/birthName> ""Alexander Onassis""@en .
    ?onassis <http://dbpedia.org/ontology/father> ?professional .
    ?professional <http://dbpedia.org/property/awards> ?award .
    FILTER(CONTAINS(LCASE(STR(?award)), ""stan lee""))
    ?professional <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
232,67,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Identify Jon Pertwee's child who is a politician and office holder native of France.
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/France> .
    ?child <http://dbpedia.org/ontology/politicalPartyMember> ?party .
    ?child <http://dbpedia.org/ontology/officeHolder> ?office .
}

# Step 2: Determine the settlement in which this person was born that is also British.
SELECT ?settlement WHERE {
    ?child <http://dbpedia.org/property/placeOfBirth> ?settlement .
    ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}

# Step 3: Find the professional actor, narrator, and producer from Penarth.
SELECT ?professional WHERE {
    ?professional <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Penarth> .
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Narrator> .
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Producer> .
}

# Step 4: Identify the film and military conflict associated with this professional as their claim to fame.
SELECT ?film ?conflict WHERE {
    ?professional <http://dbpedia.org/property/filmography> ?film .
    ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?professional <http://dbpedia.org/property/militaryService> ?conflict .
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 5: Find the actor involved in these films or conflicts.
SELECT DISTINCT ?actor WHERE {
    ?film <http://dbpedia.org/property/castMember> ?actor .
    ?conflict <http://dbpedia.org/property/personnel> ?actor .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
281,67,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
SELECT ?entity WHERE {
    ?politician <http://dbpedia.org/ontology/politicalParty> ?party .
    ?election <http://dbpedia.org/property/winner> ?politician .
    FILTER(STR(?election) = ""1962 New South Wales state election"")
    
    ?politician <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?entity .

    ?unit <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Military_unit> .
    ?unit <http://dbpedia.org/ontology/war> ?war .
    
    ?beauchamp <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Office_holder> .
    ?beauchamp <http://dbpedia.org/property/politicalParty> <http://dbpedia.org/resource/Politician> .
    ?beauchamp <http://dbpedia.org/ontology/war> ?war .

    FILTER(?entity != ?unit)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
487,16,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of Patricia McCoy.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?philipTeam ?patriciaCountry WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://dbpedia.org/ontology/birthName> ""Philip Brian Scott"" .
  ?person <http://dbpedia.org/ontology/team> ?philipTeam .

  ?patricia <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?administrationType .
  ?patricia <http://dbpedia.org/property/birthName> ""Patricia McCoy"" .
  ?patricia <http://dbpedia.org/ontology/team> ?team .
  ?team <http://dbpedia.org/ontology/country> ?patriciaCountry .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
232,50,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
# Step 1: Find Sylvie Bermann's British settlement residence
SELECT ?residence WHERE {
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""british"") && CONTAINS(LCASE(?label), ""settlement""))
}

# Step 2: Find the native of this residence
SELECT ?native WHERE {
    ?residence <http://dbpedia.org/ontology/nativePlace> ?native .
}

# Step 3: Identify the professional who is an actor, narrator, and producer
SELECT ?professional WHERE {
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> ;
                  <http://dbpedia.org/ontology/narrator> ?narrator .
    FILTER(EXISTS { ?professional <http://dbpedia.org/ontology/producer> ?producer })
}

# Step 4: Determine their claim to fame involving both a film and a military conflict
SELECT ?claimToFame WHERE {
    ?professional <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""film"") && CONTAINS(LCASE(?label), ""military conflict""))
}

# Step 5: Find the actor associated with this claim to fame
SELECT ?actor WHERE {
    ?claimToFame <http://dbpedia.org/ontology/actor> ?actor .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
281,71,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v8 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT DISTINCT ?awardeeWar ?birthPlaceCountry ?professionWar WHERE {
    # Step 1: Find awards of Jonathon Band
    ?award <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Jonathon_Band> .
    
    # Step 2: Find other awardees of those awards
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Jonathon_Band>)
    
    # Step 3: Find the leader of the 1962 New South Wales state election and their birthplace country
    ?election <http://dbpedia.org/ontology/politician> ?leader .
    FILTER(?election = <http://dbpedia.org/resource/1962_New_South_Wales_state_election>)
    ?leader <http://dbpedia.org/property/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?countryResource .
    ?countryResource <http://www.w3.org/2002/07/owl#sameAs> ?birthPlaceCountry .

    # Step 4: Find wars associated with the awardees
    OPTIONAL {
        ?otherAwardee <http://dbpedia.org/ontology/militaryUnit> ?militaryUnit .
        ?militaryUnit <http://dbpedia.org/property/war> ?awardeeWar .
    }

    # Step 5: Find profession of a New Zealand Army office holder who is also a politician
    ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                  <http://dbpedia.org/ontology/politician> true ;
                  <http://dbpedia.org/property/profession> ?profession .
    ?profession <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/New_Zealand_Army> .

    # Step 6: Find wars associated with that profession
    OPTIONAL {
        ?profession <http://dbpedia.org/property/militaryUnit> ?militaryUnit .
        ?militaryUnit <http://dbpedia.org/property/war> ?professionWar .
    }
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
30,9,test,Give me the professional in the profession of Édouard Alphonse James de Rothschild and native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?professional WHERE {
    ?edward <http://dbpedia.org/ontology/profession> ?profession .
    ?silvia <http://dbpedia.org/property/birthPlace> ?birthPlace .
    
    ?edward <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/%C3%89douard_Alphonse_James_de_Rothschild> .
    ?silvia <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Silvia_Cohen> .

    ?professional <http://dbpedia.org/ontology/profession> ?profession .
    ?professional <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
528,58,test,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Part 1: War of the Commander in Battle of La Rinconada de Ate
SELECT ?commander ?war WHERE {
    ?battle <http://dbpedia.org/property/battle> ""Battle of La Rinconada de Ate"" .
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/wars> ?war .
}

# Part 2: War of Irene Morales
SELECT ?irene ?war WHERE {
    ?person <http://xmlns.com/foaf/0.1/name> ""Irene Morales"" .
    ?person <http://dbpedia.org/property/wars> ?war .
    BIND(?person AS ?irene)
}

# Part 3: Force of the Person Born as Narciso Campero
SELECT ?person ?force WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Narciso Campero"" .
    ?person <http://dbpedia.org/ontology/country> ?force .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
617,45,test,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
# Step 1: Find Laodice IV's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Identify Antiochus III the Great's children
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
}

# Step 3: Find the commander in the Battle of Panium
SELECT ?commander WHERE {
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Panium> .
}

# Step 4: Identify which child of Antiochus III is a parent of this commander
SELECT ?child WHERE {
    ?child <http://dbpedia.org/ontology/parent> ?commander .
    FILTER(?child IN (
        SELECT ?c WHERE {
            <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?c .
        }
    ))
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,59,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
# Part 1: Find the predecessor of Indalecio Prieto and their associated military force
SELECT ?predecessor ?militaryForce WHERE {
    ?indalecio <http://dbpedia.org/ontology/predecessor> ?predecessor .
    FILTER(STR(?indalecio) = ""Indalecio_Prieto"")
    
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
           <http://dbpedia.org/ontology/militaryConflict> ?militaryConflict .
    
    ?predecessor <http://dbpedia.org/ontology/battle> ?event .
    
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
                    <http://dbpedia.org/ontology/country> ?country .
    
    ?militaryConflict <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}

UNION

# Part 2: Find the person who died during Francoist Spain and their associated military force
SELECT ?decedent ?militaryForce WHERE {
    ?person <http://dbpedia.org/property/deathPlace> ?place ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    
    FILTER(STR(?place) = ""Francoist_Spain"")
    
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/Event> ;
           <http://dbpedia.org/ontology/militaryConflict> ?militaryConflict .
    
    ?person <http://dbpedia.org/property/decedent> ?event .
    
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
                    <http://dbpedia.org/ontology/country> ?country .
    
    ?militaryConflict <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",6,11,7,3,2,3,3,71,0,0,514,0,0.0,0
801,70,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
SELECT ?associatedArtist WHERE {
    ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> .
    ?professional <http://dbpedia.org/property/alterEgo> ""The Shadow"" .
    
    ?work <http://dbpedia.org/ontology/producer> ?professional ;
          <http://dbpedia.org/ontology/work> ?album .

    ?album <http://dbpedia.org/ontology/title> ""What U See Is What U Get"" .
    ?album <http://dbpedia.org/ontology/writer> ?writer .

    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

    ?writer <http://dbpedia.org/property/associatedMusicians> ?associatedArtist .
}
```",8,16,9,3,3,3,3,71,0,0,8,0,0.0,0
981,20,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
SELECT ?person ?birthPlace WHERE {
    ?person <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Kamikaze_Girls>.
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?beautyQueen.
    ?beautyQueen a <http://dbpedia.org/ontology/BeautyQueen>.
    ?person <http://dbpedia.org/property/location> ?location.
    ?location <http://dbpedia.org/ontology/locatedInRegion> <http://dbpedia.org/resource/Salak,_North_Sumatra>.
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace.
}
```",6,7,7,3,2,3,2,20,0,0,19,0,0.0,0
666,16,test,"Give me the figure known as the nickname of England national beach soccer team and player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . },"```sparql
# Step 1: Get the nickname of the England national beach soccer team
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?nickname .
}

# Step 2: Get the manager of the 2016–17 Hull City A.F.C. season
SELECT ?manager WHERE {
    <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.FC_season> <http://dbpedia.org/property/sports_manager> ?manager .
}

# Step 3: Find players associated with both the team and the manager
SELECT DISTINCT ?player WHERE {
    # Assuming we have obtained ?nickname and ?manager from previous queries
    ?team <http://dbpedia.org/ontology/nickname> ?nickname ;
          <http://dbpedia.org/property/team_member> ?player .
    
    ?season <http://dbpedia.org/property/sports_manager> ?manager ;
            <http://dbpedia.org/property/player> ?player .

    FILTER(?team = <http://dbpedia.org/resource/England_national_beach_soccer_team>)
    FILTER(?season = <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.FC_season>)
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
427,22,test,"Give me the reference to Partito Popolare Italiano and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
SELECT ?party ?reference WHERE {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?party .
    OPTIONAL { ?party rdfs:label ""Partito Popolare Italiano""@en . }
    OPTIONAL { ?party <http://www.w3.org/2002/07/owl#sameAs> ?reference . }
}
```",3,5,4,2,2,3,3,71,1,14,0,0.06666666666666667,1.0,0.125
528,40,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of Narciso Campero.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT DISTINCT ?societalEvent ?war WHERE {
  ?societalEvent <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""chile"") && CONTAINS(LCASE(?label), ""event"")) .
  OPTIONAL { ?societalEvent <http://dbpedia.org/ontology/battle> ?war . }
  
  OPTIONAL {
    ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?force1 <http://dbpedia.org/property/members> <http://dbpedia.org/resource/Orozimbo_Barbosa> .
    ?societalEvent = ?force1 .
  }
  
  OPTIONAL {
    ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?force2 <http://dbpedia.org/property/members> <http://dbpedia.org/resource/Narciso_Campero> .
    ?societalEvent = ?force2 .
  }
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
328,63,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?entity WHERE {
    ?szalasiCommander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> .
    ?stalinOfficeLeader <http://dbpedia.org/ontology/leader> ?entity ;
                        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> ;
                        <http://dbpedia.org/ontology/minister> <http://dbpedia.org/resource/Joseph_Stalin> .
    ?campaignCommander <http://dbpedia.org/property/awards> ?award .
    ?entity <http://dbpedia.org/property/awards> ?award .
    FILTER(?szalasiCommander = ?stalinOfficeLeader && ?szalasiCommander = ?campaignCommander)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,29,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars and commander in German campaign of 1813.",SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
SELECT ?commander WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?event <http://dbpedia.org/ontology/event> ?war.
    ?regiment <http://dbpedia.org/property/battle> ?event.
    ?commander <http://dbpedia.org/ontology/commander> ?regiment.
    
    FILTER(?regiment = <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)>)
    
    ?campaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?campaign <http://dbpedia.org/property/event> <http://dbpedia.org/resource/German_campaign_of_1813>.
    ?commander <http://dbpedia.org/ontology/commander> ?campaign.
}
```",4,6,5,2,3,3,3,71,0,0,6,0,0.0,0
659,52,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland>.
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
    
    OPTIONAL { 
        ?militaryForce <http://dbpedia.org/property/membership> ?person.
        ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars>.
    }
    
    OPTIONAL {
        ?war <http://dbpedia.org/ontology/commander> ?person.
        ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
        ?war <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)>.
    }
}
```",6,9,7,3,3,3,3,71,0,1,13,0.0,0.0,0
404,71,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
    # Step 1: Identify Princess Victoria Louise of Prussia by her birth name
    ?princess <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
    
    # Step 2: Find her spouse
    ?princess <http://dbpedia.org/property/spouse> ?spouse .

    # Step 3: Determine the father of her spouse
    ?spouse <http://dbpedia.org/ontology/father> ?fatherOfSpouse .

    # Step 4: Identify the child (royalty) of that father
    ?child <http://dbpedia.org/ontology/father> ?fatherOfSpouse .
    ?child <http://www.w3.org/2002/07/owl#sameAs> ?princeGeorgeWilliamParent .

    # Step 5: Find the parent (royalty) of Prince George William of Hanover
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_George_William_of_Hanover> .
    
    # Ensure the child from step 4 is a royalty and matches the parent from step 5
    ?princeGeorgeWilliamParent <http://www.w3.org/2002/07/owl#sameAs> ?parent .

    FILTER(?child != ?spouse) # Ensure we are not considering the spouse as their own child
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
16,55,test,Give me the person born as the birth name of Gigi Rice and professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
# Step 1: Get Gigi Rice's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Get Satomi Ishihara's profession
SELECT ?profession WHERE {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/profession> ?profession .
}

# Step 3: Find the spouse of Ted Martin McGinley
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Ted_McGinley> <http://xmlns.com/foaf/0.1/birthName> ""Ted Martin McGinley"" .
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 4: Find the person who matches all criteria
SELECT DISTINCT ?person WHERE {
    # Person with Gigi Rice's birth name
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .

    # Person professional in Satomi Ishihara's profession
    ?person <http://purl.org/dc/terms/profession> ?profession .

    # Person is spouse of Ted Martin McGinley
    ?spouse <http://dbpedia.org/resource/Ted_McGinley> :spouse .
    
    FILTER(?birthName = (SELECT ?birthName WHERE {
        <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName .
    }))
    
    FILTER(?profession = (SELECT ?profession WHERE {
        <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/profession> ?profession .
    }))

    BIND(?spouse AS ?person)
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,51,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
    # Step 1: Find spouse of Princess Victoria Louise of Prussia
    <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .

    # Step 2: Find father of the spouse
    ?spouse <http://dbpedia.org/ontology/father> ?father .

    # Step 3: Find child of this father who is royalty and parent of Ernest Augustus, Duke of Brunswick
    ?father <http://dbpedia.org/ontology/child> ?child .
    ?child a <http://dbpedia.org/ontology/Royalty> .
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,20,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
# Query for military force of Francisco Largo Caballero in a societal event that is also a military conflict
SELECT DISTINCT ?event ?militaryForce WHERE {
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?eventType .
    FILTER(?eventType IN (<http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/MilitaryConflict>)).
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/battle> ?event .
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}

# Query for military forces involved in the Rif War
SELECT DISTINCT ?militaryForce WHERE {
    <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/property/battle> ?battle .
    ?battle <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",3,5,4,2,2,3,3,71,0,0,34,0,0.0,0
281,58,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v5 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . }","```sparql
# Step 1: Identify the professional who is both an office holder and a politician in the New Zealand Army.
SELECT ?professional WHERE {
    ?professional <http://dbpedia.org/ontology/profession> ?militaryUnit .
    ?militaryUnit <http://www.w3.org/2000/01/rdf-schema#label> ""New Zealand Army"" .
    ?professional <http://dbpedia.org/ontology/politicalPartyMember> ?party .
    ?professional <http://dbpedia.org/ontology/officeHolder> ?office .
}

# Step 2: Determine the profession of this individual that is also a military unit.
SELECT ?militaryUnit WHERE {
    ?professional <http://dbpedia.org/ontology/profession> ?militaryUnit .
    FILTER(?professional IN (?professional))
}

# Step 3: Find the wars associated with this military unit.
SELECT DISTINCT ?war WHERE {
    ?militaryUnit <http://dbpedia.org/property/battle> ?war .
}

# Step 4: Identify Bob Heffron's birthplace country.
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
}

# Step 5: Find the war associated with Beauchamp Seymour, 1st Baron Alcester.
SELECT DISTINCT ?war WHERE {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/property/battle> ?war .
}

# Final Step: Find the common war(s) from steps 3 and 5 that also involve the country identified in step 4.
SELECT DISTINCT ?commonWar WHERE {
    ?militaryUnit <http://dbpedia.org/property/battle> ?commonWar .
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/property/battle> ?commonWar .
    ?warCountry <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
    FILTER(?country IN (?country))
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
838,20,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?bandMember WHERE {
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
    ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/YU_Grupa> .

    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalBand> .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
    ?band <http://dbpedia.org/property/reference> ?reference .

    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?band <http://dbpedia.org/property/member> ?member .

    ?zikaBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalBand> .
    ?zikaBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
    ?zikaBand <http://dbpedia.org/property/member> <http://dbpedia.org/resource/%C5%BDika_Jeli%C4%87> .

    ?zikaMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?zikaMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?zikaBand <http://dbpedia.org/property/member> ?zikaMember .

    FILTER(?member = ?zikaMember)
}
```",6,13,7,3,2,3,2,20,0,0,5,0,0.0,0
92,60,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
SELECT ?band WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Joseph Michael"" .
    ?person <http://dbpedia.org/ontology/memberOf> ?band .
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Nevermore_(2006_film)> .
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?person <http://dbpedia.org/ontology/memberOf> ?reference .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
827,20,test,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
    # Step 1: Princess Pauline's spouse who is royalty
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> .
    
    # Step 2: Child of this spouse who is royalty
    ?child <http://dbpedia.org/ontology/child> ?spouse .
    ?child <http://www.w3.org/2000/01/rdf-schema#label> ?labelChild .
    FILTER(CONTAINS(LCASE(?labelChild), ""royalty"")) .

    # Step 3: Parent of Charles Alexander
    <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?parent .

    # Step 4: Child of this parent who is royalty
    ?royalChild <http://dbpedia.org/ontology/child> ?parent .
    ?royalChild <http://www.w3.org/2000/01/rdf-schema#label> ?labelRoyalChild .
    FILTER(CONTAINS(LCASE(?labelRoyalChild), ""royalty"")) .

    # Step 5: Father of the child from step 2
    ?child <http://dbpedia.org/property/father> ?father .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
54,46,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?thinkhayasChild ?thinkhayasFatherChild ?narapatisChild ?narapatisParent WHERE {
  # Step 1: Find Thinkhaya of Pagan's child
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayasChild .

  # Step 2: Determine the father of that child (Thinkhaya himself)
  ?thinkhayasFather <http://dbpedia.org/property/father> ?thinkhayasChild .
  FILTER(?thinkhayasFather = <http://dbpedia.org/resource/Thinkhaya_of_Pagan>) .

  # Step 3: Find the child of Thinkhaya's father
  ?thinkhayasFather <http://dbpedia.org/ontology/child> ?thinkhayasFatherChild .

  # Step 4: Identify Narapati I of Ava and his child
  <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?narapatisChild .

  # Step 5: Determine the parent of Narapati I's child
  ?narapatisParent <http://dbpedia.org/property/father> ?narapatisChild .
  FILTER(?narapatisParent = <http://dbpedia.org/resource/Narapati_I_of_Ava>) .

  # Step 6: Find the commonality or connection (if any)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,71,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . }","```sparql
# Step 1: Identify Fredrik Thordendal's Band
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/member> ?band .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
}

# Step 2: Find the Associated Musical Artist of Fredrik Thordendal's Band
SELECT ?associatedArtist WHERE {
    ?band <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}

# Step 3: Identify Don Dokken's Persona
SELECT ?person WHERE {
    ?persona <http://dbpedia.org/ontology/birthName> ""Don Dokken"" ;
             <http://dbpedia.org/ontology/birthDate> ?date .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://dbpedia.org/property/persona> ?persona .
}

# Step 4: Find the Associated Musical Artist of This Person
SELECT ?associatedArtist WHERE {
    ?person <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}

# Step 5: Reference to Watchtower and Find Its Associated Musical Artist
SELECT ?watchtowerArtist WHERE {
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Watchtower> ;
               <http://dbpedia.org/property/associatedMusicalArtist> ?watchtowerArtist .
}

# Step 6: Final Association
SELECT ?finalAssociatedArtist WHERE {
    ?watchtowerArtist <http://dbpedia.org/property/associatedMusicalArtist> ?finalAssociatedArtist .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
179,20,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of the parent of Vajiralongkorn.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
SELECT ?birthName WHERE {
    ?parent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Vajiralongkorn> .
    ?royalChild <http://dbpedia.org/ontology/child> ?parent ;
                 <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""royalty"")) .

    ?nakkhatraChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nakkhatra_Mangala> ;
                    <http://www.w3.org/2000/01/rdf-schema#label> ?childLabel .
    FILTER(?royalChild = ?nakkhatraChild) .

    ?nakkhatraChild <http://dbpedia.org/property/birthName> ?birthName .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
547,53,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of the child of William Haliburton and resting place of Simon Cadell.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Part 1: Resting place of awardees of Knight Grand Cross of the Order of St Michael and St George
SELECT ?person ?restingPlace WHERE {
    ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    OPTIONAL { ?person <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}

UNION

# Part 2: Resting place of the child of the child of William Haliburton
SELECT ?grandchild ?restingPlace WHERE {
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild <http://dbpedia.org/ontology/parent> ?child .
    OPTIONAL { ?grandchild <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}

UNION

# Part 3: Resting place of Simon Cadell
SELECT ?person ?restingPlace WHERE {
    ?person = <http://dbpedia.org/resource/Simon_Cadell> .
    OPTIONAL { ?person <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,48,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
    # Step 1: Identify Antiochus (son of Antiochus III the Great)
    ?antiochus dbpedia-owl:father <http://dbpedia.org/resource/Antiochus_III_the_Great> .
    
    # Step 2: Find his child who is royalty
    ?child dbpedia-owl:parent ?antiochus ;
           a dbo:Royalty .

    # Step 3: Identify the successor of Antiochus II Theos who is royalty
    ?successor dbpedia-owl:succeededBy <http://dbpedia.org/resource/Antiochus_II_theos> ;
               a dbo:Royalty .

    # Step 4: Find the grandchild (child of the child) of this successor who is royalty
    ?grandchild dbpedia-owl:parent ?successorChild .
    ?successorChild dbpedia-owl:parent ?successor ;
                    a dbo:Royalty .
    ?grandchild a dbo:Royalty .

    # Step 5: Determine the parent of both individuals found in steps 2 and 4
    ?parent dbpedia-owl:child ?child, ?grandchild .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
659,23,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?native ?force ?commander WHERE {
    ?native <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
    ?native <http://purl.org/dc/terms/occupation> ?officeHolder .
    ?native <http://dbpedia.org/property/militaryForce> ?force .
    ?force <http://dbpedia.org/ontology/commander> ?commander .
}
```",3,4,4,3,1,3,3,71,0,0,269,0,0.0,0
161,61,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?militaryForce WHERE {
    # Step 1: Identify ""El Director"" as Indalecio Prieto
    <http://dbpedia.org/resource/Indalecio_Prieto> <http://www.w3.org/2000/01/rdf-schema#label> ""El Director""@en .

    # Step 2: Find predecessor of Indalecio Prieto (e.g., as Prime Minister)
    ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .
    
    # Step 3: Determine military conflict where predecessor was a commander
    ?conflict <http://dbpedia.org/property/commander> ?predecessor .
    
    # Step 4: Identify societal event and military conflict associated with this command
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    
    # Step 5: Find military force involved in that specific event
    ?conflict <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",6,9,7,3,2,3,3,71,0,0,32,0,0.0,0
161,60,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
SELECT ?militaryForce WHERE {
    # Step 1: Identify ""El Director"" and his associated military force where he was a commander
    ?elDirector <http://www.w3.org/2000/01/rdf-schema#label> ""El Director""@en .
    ?force <http://dbpedia.org/ontology/commander> ?elDirector ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

    # Step 2: Identify the person who was a decedent at Francoist Spain and a commander in that force
    ?person <http://dbpedia.org/property/deathPlace> ?francoistSpain ;
            <http://dbpedia.org/ontology/commander> ?force .

    # Step 3: Determine the societal event, event, and military conflict involving this person
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> {<http://dbpedia.org/ontology/SocialEvent> <http://dbpedia.org/ontology/Event> <http://dbpedia.org/ontology/MilitaryConflict>} ;
           <http://dbpedia.org/property/person> ?person .

    # Step 4: Retrieve the military force associated with these events
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> {<http://dbpedia.org/ontology/SocialEvent> <http://dbpedia.org/ontology/Event> <http://dbpedia.org/ontology/MilitaryConflict>} ;
                   <http://dbpedia.org/property/person> ?person .
}
```",6,10,7,3,2,3,3,71,0,0,34,0,0.0,0
55,23,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . }","```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Find the band that produced ""Used to Love Her""
  ?producer <http://dbpedia.org/ontology/produced> <http://dbpedia.org/resource/Used_to_Love_Her> .
  ?producer a <http://dbpedia.org/ontology/Band> .
  ?producer <http://dbpedia.org/ontology/member> ?bandMember .

  UNION

  # Find the band that has a reference to Newsted
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Newsted> .
  ?reference a <http://dbpedia.org/ontology/Band> .
  ?reference <http://dbpedia.org/ontology/member> ?bandMember .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
659,61,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?militaryForce WHERE {
    ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    FILTER(STR(?polishHorse) = ""Polish_Horse"") .

    ?war <http://dbpedia.org/property/commander> ?commander .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
    ?polishHorse <http://dbpedia.org/property/battle> ?war .

    ?reference <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
    ?reference <http://dbpedia.org/ontology/commander> ?commander .

    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?reference <http://dbpedia.org/property/event> ?event .

    ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",6,13,7,3,2,3,3,71,0,0,31,0,0.0,0
328,35,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
# Step 1: Identify the government agency led by Joseph Stalin
SELECT ?agency WHERE {
    <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/ontology/leader> ?office .
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
}

# Step 2: Identify the awards received by Bruce Fraser
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?award .
}

# Step 3 and 4: Find other awardees of the same award and check if they are leaders of the agency
SELECT DISTINCT ?leader WHERE {
    # Replace ?agency with the actual URI obtained from step 1
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
    ?office <http://dbpedia.org/ontology/leader> ?leader .

    # Replace ?award with the actual URI obtained from step 2
    ?leader <http://dbpedia.org/property/awards> ?award .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,51,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of Ferenc Szálasi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?gustavLeader ?agencyLeader WHERE {
    # Step 1: Find Gustav Jonson's leader
    ?gustavLeader <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Gustav_Jonson> .
    
    # Step 2: Check if this leader has an associated government agency
    OPTIONAL { ?agency <http://dbpedia.org/ontology/governmentAgency> ?gustavLeader . }
    
    # Step 3: Find Ferenc Szálasi's military force and its commander
    ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> .
    
    # Step 4: Determine the leader of the office that is a government agency related to both individuals
    ?agencyLeader <http://dbpedia.org/ontology/leader> ?agency .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,54,test,"Give me the band of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
# Part 1: Find Joseph Michael's band
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Joseph_Michael_(musician)> <http://dbpedia.org/ontology/band> ?band .
}

# Part 2: Find a referenced artist related to Nevermore
SELECT DISTINCT ?artist WHERE {
    <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/reference> ?reference .
    ?reference <http://dbpedia.org/ontology/artist> ?artist .
}

# Part 3: Find the actor of ""Return to Nuke 'Em High Volume 1"" and their associated musical artists
SELECT DISTINCT ?actor ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Return_to_Nuke_'em_High_Volume_1> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,19,test,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
SELECT ?awardee ?war WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
    ?awardee <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
    OPTIONAL { ?awardee <http://dbpedia.org/property/wars> ?war . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,68,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Identify Sherry Hormann's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Find the claim to fame of Sherry Hormann's spouse
SELECT ?work WHERE {
    ?spouse <http://dbpedia.org/ontology/claimToFame> ?work .
}

# Step 3: Identify the actor of that work
SELECT ?actor WHERE {
    ?work <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 4: Identify Roz Ryan's movie
SELECT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie110769069> ;
           <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
}

# Step 5: Find the actor common to both works
SELECT ?commonActor WHERE {
    ?movie <http://dbpedia.org/ontology/starring> ?commonActor .
    ?work <http://dbpedia.org/ontology/starring> ?commonActor .
}

# Step 6: Identify Jackson, Tennessee's nickname
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/property/nicknames> ?nickname .
}

# Step 7: Find a figure associated with that nickname
SELECT ?figure WHERE {
    ?figure <http://xmlns.com/foaf/0.1/knows> ?nickname .
}

# Step 8: Determine the native of that figure
SELECT ?nativePlace WHERE {
    ?figure <http://dbpedia.org/ontology/birthPlace> ?nativePlace .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
404,70,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?finalParent WHERE {
    # Step 1: Identify Princess Victoria Louise of Prussia
    ?princess_victoria_louise a dbo:Royalty ;
                              foaf:name ""Princess Victoria Louise of Prussia""@en .
    
    # Step 2: Find her spouse
    ?princess_victoria_louise dbo:spouse ?spouse .

    # Step 3: Determine the father of her spouse
    ?spouse dbo:father ?father_of_spouse .

    # Step 4: Identify their child
    ?father_of_spouse dbo:child ?child_1 .

    # Step 5: Find the parent of this child (who is royalty)
    ?child_1 a dbo:Royalty ;
             dbo:parent ?parent_of_child_1 .

    # Step 6: Identify Prince George William of Hanover
    ?prince_george_william a dbo:Royalty ;
                           foaf:name ""Prince George William of Hanover""@en .

    # Step 7: Determine his parent (who is royalty)
    ?prince_george_william dbo:parent ?parent_of_prince_george_william .

    # Step 8: Find the child of this parent (who is royalty)
    ?parent_of_prince_george_william a dbo:Royalty ;
                                     dbo:child ?child_2 .

    # Step 9: Finally, identify the parent of this child
    ?child_2 dbo:parent ?finalParent .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
659,45,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?militaryForce WHERE {
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?conflict <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
    ?conflict <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Battle_of_Leipzig>.
    ?conflict <http://dbpedia.org/property/campaign> <http://dbpedia.org/resource/German_campaign_of_1813>.
    ?conflict <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
    ?conflict <http://dbpedia.org/property/militaryForce> ?militaryForce.
}
```",5,8,6,3,3,3,3,71,0,0,6,0,0.0,0
161,47,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
# Part 1: Francisco Franco's military force
SELECT ?militaryForce WHERE {
    ?event <http://dbpedia.org/ontology/event> ?franco .
    ?franco rdfs:label ""Francisco Franco""@en .
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?eventType .
    FILTER(?eventType IN (<http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/MilitaryConflict>)).
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}

UNION

# Part 2: Predecessor of Indalecio Prieto's military force
SELECT ?predecessorMilitaryForce WHERE {
    ?prieto rdfs:label ""Indalecio Prieto""@en .
    ?role <http://dbpedia.org/ontology/heldBy> ?prieto .
    ?role <http://dbpedia.org/ontology/heldBy> ?predecessor .
    ?event2 <http://dbpedia.org/ontology/event> ?predecessor .
    ?event2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?eventType2 .
    FILTER(?eventType2 IN (<http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/MilitaryConflict>)).
    ?event2 <http://dbpedia.org/ontology/militaryForce> ?predecessorMilitaryForce .
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
232,45,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee and actor of Dog Soldiers (film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
# Since the conditions are not met, there is no valid SPARQL query.
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
617,55,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?parent WHERE {
    # Step 1: Find the child of Antiochus (son of Antiochus III the Great)
    ?antiochusChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_IV_Epiphanes> .
    
    # Step 2: Find the spouse of that child
    ?spouse <http://dbpedia.org/property/spouse> ?antiochusChild .

    # Step 3: Identify the child of Antiochus III the Great and their child
    ?childOfAntiochusIII <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
    ?grandChild <http://dbpedia.org/ontology/birthParent> ?childOfAntiochusIII .

    # Step 4: Locate Seleucus II Callinicus, find his royal child, and determine the parent
    ?royalChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
    ?parent <http://dbpedia.org/ontology/birthChild> ?royalChild .

    # Ensure all conditions are met
    FILTER(?spouse = ?grandChild)
}
```",6,7,7,2,3,3,3,71,0,0,2,0,0.0,0
391,43,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Filter for the one native to Compton, California and actor of ""All About the Andersons""
SELECT ?person WHERE {
    ?spouse <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>.
    ?spouse <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Compton,_California>.
    ?spouse <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/All_About_the_Andersons>.
}

# Step 3: Identify their claim to fame (a work)
SELECT ?work WHERE {
    ?person <http://dbpedia.org/property/claimToFame> ?work .
}

# Step 4: Determine who acted in that work
SELECT ?actor WHERE {
    ?work <http://dbpedia.org/ontology/actor> ?actor .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,71,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
# Step 1: Find Archduchess Margaret of Austria (born 1925)
SELECT ?margaret WHERE {
    ?margaret <http://dbpedia.org/ontology/birthDate> ?date .
    FILTER(year(?date) = 1925 && contains(str(?margaret), ""Archduchess_Margaret_of_Austria""))
}

# Step 2: Find her parent
SELECT ?parent WHERE {
    ?margaret <http://dbpedia.org/ontology/parent> ?parent .
}

# Step 3: Find the child of this parent
SELECT ?child WHERE {
    ?parent <http://dbpedia.org/ontology/child> ?child .
}

# Step 4: Find Archduke Ladislaus Philipp of Austria
SELECT ?ladislaus WHERE {
    ?ladislaus <http://dbpedia.org/ontology/name> ""Ladislaus Philipp"" .
    FILTER(contains(str(?ladislaus), ""Archduke""))
}

# Step 5: Find his royalty parent
SELECT ?royaltyParent WHERE {
    ?ladislaus <http://dbpedia.org/ontology/parent> ?royaltyParent .
    ?royaltyParent <http://www.w3.org/2002/07/owl#sameAs> ?royalty .
}

# Step 6: Find the child of this royalty parent
SELECT ?childOfRoyalty WHERE {
    ?royaltyParent <http://dbpedia.org/ontology/child> ?childOfRoyalty .
}

# Step 7: Identify the settlement at elevation 96.0
SELECT ?settlement WHERE {
    ?settlement <http://dbpedia.org/property/elevation> ""96.0""^^xsd:float .
    ?settlement <http://www.w3.org/2002/07/owl#sameAs> ?landmark .
}

# Step 8: Find its native person
SELECT ?native WHERE {
    ?native <http://dbpedia.org/property/nativePlace> ?settlement .
}

# Step 9: Find this native's parent
SELECT ?parentOfNative WHERE {
    ?native <http://dbpedia.org/ontology/parent> ?parentOfNative .
}

# Step 10: Finally, find the parent of all these identified children and parents
SELECT DISTINCT ?finalParent WHERE {
    { ?child <http://dbpedia.org/ontology/parent> ?finalParent . }
    UNION
    { ?childOfRoyalty <http://dbpedia.org/ontology/parent> ?finalParent . }
    UNION
    { ?parentOfNative <http://dbpedia.org/ontology/parent> ?finalParent . }
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
617,18,test,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?parentOfRoyalFather WHERE {
  # Step 1: Find Mlada (abbess) and her parent
  ?mlada <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER(STR(?birthPlace) = ""Mlada (abbess)"")

  ?mladaParent <http://dbpedia.org/ontology/child> ?mlada .

  # Step 2: Find the child of Mlada's parent who is royalty
  ?royalChild <http://dbpedia.org/ontology/parent> ?mladaParent .
  ?royalChild <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""royalty""))

  # Step 3: Identify Richeza of Poland, Queen of Hungary and her royal father
  ?richeza <http://dbpedia.org/ontology/father> ?richezasFather .
  ?richeza <http://www.w3.org/2000/01/rdf-schema#label> ""Richeza of Poland, Queen of Hungary"" .

  FILTER(CONTAINS(LCASE(?richezasFather), ""royalty""))

  # Step 4: Find the parent of Richeza's royal father
  ?parentOfRoyalFather <http://dbpedia.org/ontology/child> ?richezasFather .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,47,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
# Step 1: Find the leader of the 1962 New South Wales state election and their birthplace country.
SELECT ?leader ?birthCountryLeader WHERE {
    ?election <http://dbpedia.org/property/election> ""1962 New South Wales state election"" .
    ?election <http://dbpedia.org/ontology/winner> ?leader .
    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?leader <http://dbpedia.org/property/birthPlace> ?birthPlaceLeader .
    ?birthPlaceLeader <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?countryLeader .
    ?countryLeader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}

UNION

# Step 2: Find the awardee of the Knight Grand Cross of the Order of the Bath who was involved in a war, and their birthplace country.
SELECT ?awardee ?birthCountryAwardee WHERE {
    ?person <http://dbpedia.org/property/awards> ""Knight Grand Cross of the Order of the Bath"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?person <http://dbpedia.org/property/war> ?war .
    ?person <http://dbpedia.org/property/birthPlace> ?birthPlaceAwardee .
    ?birthPlaceAwardee <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?countryAwardee .
    ?countryAwardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
314,27,test,"Give me the person deceased at Madrid and awardee of the award of Sergei Makovetsky and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT DISTINCT ?person WHERE {
    # Step 1: Find awards received by Sergei Makovetsky
    <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?award .

    # Step 2: Find other awardees of those awards
    ?person <http://dbpedia.org/property/awards> ?award .
    
    # Step 3: Identify Lisa Gavrić's profession as an event and societal event
    ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/SocietalEvent> .
    <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/profession> ?profession .

    # Step 4: Find commanders in that profession/event
    ?person <http://dbpedia.org/ontology/commander> ?profession .

    # Step 5: Filter by deceased at Madrid
    OPTIONAL { ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> . }
    
    FILTER EXISTS { ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
996,16,test,Give me the entity in the award of Ekrem Akurgal and force of the awardee of 1778.0.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . }","```sparql
# Step 1: Find the award received by Ekrem Akurgal
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?award .
}

# Step 2: Find awardees of awards in 1778 and their associated military force
SELECT DISTINCT ?awardee ?force WHERE {
    ?awardee <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?date .
    FILTER(CONTAINS(str(?date), ""1778""))
    
    OPTIONAL { 
        ?awardee <http://dbpedia.org/ontology/country> ?force .
    }
}
```",4,4,5,2,2,3,2,20,0,0,4,0,0.0,0
701,66,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
    
    ?father <http://dbpedia.org/ontology/father> ?commander .
    
    ?ramessesChild <http://dbpedia.org/ontology/father> ?father .
    ?ramessesChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ramesses_II> .

    ?nefertariChild <http://dbpedia.org/ontology/mother> ?father .
    ?nefertariChild <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Nefertari> .

    ?father <http://dbpedia.org/property/spouse> ?spouse .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
378,61,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?commander1 ?fame ?referenceConflict ?commander2 ?war WHERE {
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?conflict <http://dbpedia.org/property/personsInvolved> <http://dbpedia.org/resource/Thomas_Trigge> .
    
    ?conflict <http://dbpedia.org/ontology/commander> ?commander1 .
    ?commander1 <http://dbpedia.org/property/awards> ?fame .

    ?referenceConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?referenceConflict <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Peninsular_War> .

    ?referenceConflict <http://dbpedia.org/ontology/commander> ?commander2 .
    ?commander2 <http://dbpedia.org/property/wars> ?war .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
767,52,test,"Give me the alma mater of the administration of George K. Nash and reference to  and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/state> ?v2 . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
# Step 1: Identify George K. Nash's Administration
SELECT ?administration WHERE {
    ?person <http://dbpedia.org/property/name> ""George K. Nash"" .
    ?person <http://dbpedia.org/ontology/memberOf> ?administration .
}

# Step 2: Find the Alma Mater of the Administration
SELECT ?almaMater WHERE {
    ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Step 3: Identify the Writer of ""Where It's At"" by Dustin Lynch
SELECT ?writer WHERE {
    <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://dbpedia.org/ontology/writer> ?writer .
}

# Step 4: Find an Entity in the Writer's Administration that is a Settlement
SELECT ?settlement WHERE {
    ?writer <http://dbpedia.org/ontology/memberOf> ?administration2 .
    ?administration2 <http://dbpedia.org/ontology/entity> ?settlement .
    FILTER(?settlement <http://dbpedia.org/ontology/Settlement>)
}

# Step 5: Reference to the Alma Mater
SELECT ?almaMater WHERE {
    ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
528,70,test,Give me the war of the commander in the work of --01-09 and force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
# Step 1: Find the work associated with the date --01-09
SELECT ?work WHERE {
    ?work <http://dbpedia.org/ontology/date> ""1909-01-09""^^xsd:date .
}

# Step 2: Find the commander of the force involved in that work
SELECT ?commander WHERE {
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
           <http://dbpedia.org/property/commander> ?commander .
    ?work <http://dbpedia.org/ontology/battle> ?battle .
    ?force <http://dbpedia.org/ontology/battle> ?battle .
}

# Step 3: Determine the war associated with this commander
SELECT ?war WHERE {
    ?commander <http://dbpedia.org/property/wars> ?war .
}

# Step 4: Identify the person born with the birth name Narciso Campero
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Narciso Campero"" ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
}

# Step 5: Find the military force associated with this person
SELECT ?force WHERE {
    ?person <http://dbpedia.org/property/militaryService> ?service .
    ?service <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
             <http://dbpedia.org/ontology/unitName> ?force .
}

# Step 6: Determine the war associated with this military force
SELECT ?war WHERE {
    ?force <http://dbpedia.org/property/wars> ?war .
}

# Step 7: Identify the military force involved in the Battle of Pisagua
SELECT ?force WHERE {
    ?battle <http://dbpedia.org/resource/Battle_of_Pisagua> ;
            <http://dbpedia.org/ontology/battleParticipant> ?force .
}

# Step 8: Determine the war associated with this military force
SELECT ?war WHERE {
    ?force <http://dbpedia.org/property/wars> ?war .
}
```",8,8,9,3,3,3,3,71,0,0,2,0,0.0,0
404,48,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
SELECT ?spouse WHERE {
    ?princess <http://www.w3.org/2000/01/rdf-schema#label> ""Princess Victoria Louise of Prussia""@en .
    ?princess <http://dbpedia.org/ontology/Royalty> [] .
    ?ernestAugustus <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
    ?ernestAugustusFather <http://dbpedia.org/property/father> ?ernestAugustus .
    ?princess <http://dbpedia.org/ontology/child> ?ernestAugustusFather .
    ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,38,test,Give me the spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
    # Step 1: Find the child of Antiochus III the Great who is Antiochus
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?antiochus .
    
    # Step 2: Find the spouse of this child (Antiochus)
    ?antiochus <http://dbpedia.org/property/spouse> ?spouse .

    # Step 3: Identify the parent of the child of Antiochus
    OPTIONAL {
        ?childOfAntiochus <http://dbpedia.org/ontology/birthParent> ?parent .
        FILTER(?antiochus = ?parent)
    }
}
```",4,4,5,2,2,3,3,71,2,4,0,0.3333333333333333,1.0,0.5
528,63,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile and war of the commander in Battle of La Rinconada de Ate.","SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Part 1: Find the military force associated with Narciso Campero Leyes
SELECT ?force WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Narciso Campero Leyes"" .
    ?person <http://dbpedia.org/property/militaryForce> ?force .
}

# Part 2: Find societal events in Chile and their associated military forces
SELECT ?event ?militaryForce WHERE {
    ?event <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""chile"")).
    ?event <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/SocietalEvent108069068> .
    OPTIONAL { ?event <http://dbpedia.org/property/militaryForce> ?militaryForce . }
}

# Part 3: Find the commander in Battle of La Rinconada de Ate and their associated wars
SELECT ?commander ?war WHERE {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/wars> ?war .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
712,18,test,"Give me the resting place of the awardee of Hero of the Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?restingPlace WHERE {
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising>.
    ?militaryForce <http://dbpedia.org/ontology/country> ?country.
    
    ?hero <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union>.
    ?hero <http://dbpedia.org/ontology/nationality> ?nationality.
    FILTER(?nationality = ?country).
    
    ?hero <http://dbpedia.org/property/burialPlace> ?restingPlace.
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,42,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
# Part 1: Find awardees of Knight Grand Cross of the Order of the Bath in Colony of New Zealand
SELECT ?awardee ?war WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
    ?awardee <http://dbpedia.org/ontology/entity> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
    ?awardee <http://dbpedia.org/property/wars> ?war .
}

# Part 2: Find war associated with Heather Roy's military unit profession
SELECT ?professionWar WHERE {
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?militaryUnit .
    ?militaryUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?militaryUnit <http://dbpedia.org/property/wars> ?professionWar .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
360,27,test,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to the author of Blinded by the Light.",SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?writer ?nativePlace ?blindedByTheLightAuthor WHERE {
  # Part 1: Writer of The Roaring Silence
  ?album <http://dbpedia.org/ontology/artist> ?writer .
  FILTER(STR(?album) = ""The Roaring Silence"")

  # Part 2: Native place of Winnie Madikizela-Mandela's death location
  ?winnie <http://dbpedia.org/property/deathPlace> ?deathPlace .
  FILTER(STR(?winnie) = ""Winnie_Madikizela-Mandela"")
  ?deathPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?settlement .
  ?settlement <http://dbpedia.org/ontology/nativePlace> ?nativePlace .

  # Part 3: Author of Blinded by the Light
  ?book <http://dbpedia.org/property/author> ?blindedByTheLightAuthor .
  FILTER(STR(?book) = ""Blinded_by_the_Light"")
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
701,69,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
    # Step 1: Amun-her-khepeshef's Spouse
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
    
    # Step 2: Child of Amun-her-khepeshef and Their Parent
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Amun-her-khepeshef> ;
           <http://dbpedia.org/ontology/parent> ?parent .
    
    # Step 3: Ramesses II's Child and Their Parent
    ?ramChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ramesses_II> ;
              <http://dbpedia.org/ontology/parent> ?parent2 .
    
    # Ensure the parent is also a spouse of someone else
    ?parent2 <http://dbpedia.org/ontology/spouse> ?spouse2 .

    # Step 4: Commander in Battle of Perire
    ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Perire> ;
               a <http://dbpedia.org/class/yago/Royalty108069> .
    
    # Find the father of this commander and their spouse
    ?father <http://dbpedia.org/ontology/child> ?commander ;
            <http://dbpedia.org/ontology/spouse> ?spouse3 .

    # Match conditions: parent from step 2 should match with parent2 or spouse3
    FILTER(?parent = ?parent2 || ?parent = ?spouse3)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
528,50,test,Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
SELECT ?war ?force WHERE {
    ?work <http://purl.org/dc/terms/issued> ""1909-01""^^xsd:gYearMonth .
    ?work <http://dbpedia.org/ontology/creator> ?commander .
    ?commander <http://dbpedia.org/ontology/battleCommanded> ?battle .
    ?battle <http://dbpedia.org/ontology/war> ?war .

    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
        <http://dbpedia.org/property/birthPlace> ?birthPlace ;
        <http://dbpedia.org/ontology/militaryUnit> ?force .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,51,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
# Step 1: Get Satomi Ishihara's profession
SELECT ?profession WHERE {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .
}

# Step 2: Find the birth name of an alumnus from Ohio State University
SELECT ?birthName WHERE {
    ?alumnus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AlumniOf> <http://dbpedia.org/resource/Ohio_State_University>.
    ?alumnus <http://dbpedia.org/property/birthName> ?birthName .
}

# Step 3: Find a person with that birth name and their profession
SELECT DISTINCT ?person ?profession WHERE {
    ?person <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/profession> ?profession .
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
378,63,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?birthNameWar ?commanderFame ?peninsularWar WHERE {
    # Part 1: Find the war associated with Carl Pontus Gahn's birth name
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?person <http://dbpedia.org/property/wars> ?birthNameWar .

    # Part 2: Find the commander in the Great Siege of Gibraltar and their claim to fame
    ?unit <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> .
    ?unit <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/awards> ?commanderFame .

    # Part 3: Find the war associated with the commander in the Peninsular War
    ?peninsularUnit <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Peninsular_War> .
    ?peninsularUnit <http://dbpedia.org/ontology/commander> ?peninsularCommander .
    ?peninsularCommander <http://dbpedia.org/property/wars> ?peninsularWar .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
767,27,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
SELECT ?alterEgo WHERE {
    ?character <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>.
    ?character <http://dbpedia.org/property/alterEgo> ?alterEgo.
    ?character <http://dbpedia.org/property/persona> <http://dbpedia.org/resource/Matthew_Burland>.
}
```",3,4,4,3,1,3,3,71,0,0,98447,0,0.0,0
281,30,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and war of the profession, that is a military unit, of Heather Roy and entity in Colony of New Zealand.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT DISTINCT ?beauchampWar ?heatherRoyWar ?newZealandEntity WHERE {
  # Wars of Beauchamp Seymour, 1st Baron Alcester
  <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?beauchampWar .

  # Heather Roy's military unit and its wars
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?militaryUnit .
  ?militaryUnit <http://dbpedia.org/ontology/battle> ?heatherRoyWar .

  # Entities in Colony of New Zealand
  <http://dbpedia.org/resource/Colony_of_New_Zealand> <http://dbpedia.org/ontology/entity> ?newZealandEntity .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
488,56,test,"Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
# Part 1: Birthplace of the Commander in Boshin War
SELECT ?commander ?birthPlace WHERE {
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War>.
    ?battle <http://dbpedia.org/property/commander> ?commander.
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace.
}

# Part 2: Death Place of Tokugawa Ieyasu
SELECT ?deathPlace WHERE {
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/property/deathPlace> ?deathPlace.
}

# Part 3: Administration of the Father of the Spouse (Royalty) of Tokugawa Masako
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse.
    ?spouse <http://www.w3.org/2002/07/owl#sameAs> ?royalty.
    ?royalty a <http://dbpedia.org/class/yago/Royalty108069>.
    ?royalty <http://dbpedia.org/property/father> ?father.
    ?father <http://dbpedia.org/ontology/administration> ?administration.
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,34,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
# Query 1: Find person decedent at work of the author of ""French Algeria""
SELECT ?author ?decedent WHERE {
    ?book <http://dbpedia.org/property/book> ""French Algeria"" .
    ?book <http://purl.org/dc/terms/creator> ?author .
    OPTIONAL { 
        ?deathEvent <http://dbpedia.org/ontology/deathPlace> ?workLocation .
        ?decedent <http://dbpedia.org/ontology/death> ?deathEvent .
        ?workLocation rdfs:label ?locationLabel .
        FILTER(CONTAINS(LCASE(?locationLabel), LCASE(STR(?author))))
    }
}

# Query 2: Find person decedent at Algiers
SELECT ?decedent WHERE {
    ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
}
```",4,4,5,3,2,3,3,71,0,0,16,0,0.0,0
10,26,test,"Give me the band member of Luke Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v4 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for band members of Luke Vibert
SELECT ?bandMember WHERE {
    <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/member> ?bandMember .
}

UNION

# Query for associated musical artists of Matt Colton
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

UNION

# Query for person born as an artist and professionally known by Sharon Kao's birth name
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Sharon Kao""^^<http://www.w3.org/2001/XMLSchema#string> .
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Artist> .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
9,59,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
# Step 1: Identify the mayor of an organization in Belfast who is a politician
SELECT ?mayor WHERE {
    ?organisation <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast>.
    ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?mayor <http://dbpedia.org/ontology/politicalPartyMember> ?organisation.
    ?mayor <http://dbpedia.org/ontology/jobTitle> ""Mayor""@en.
}

# Step 2: Find the alma mater of this mayor
SELECT DISTINCT ?almaMater WHERE {
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater.
    # Filter to ensure it's the same mayor identified in step 1
    FILTER(?mayor IN (<list_of_mayors_from_step_1>))
}

# Step 3: Identify awardees of Royal Medals
SELECT DISTINCT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> ?award.
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal""@en.
}

# Step 4: Determine the common alma mater
SELECT DISTINCT ?commonAlmaMater WHERE {
    ?mayor <http://dbpedia.org/ontology/almaMater> ?commonAlmaMater.
    ?awardee <http://dbpedia.org/ontology/almaMater> ?commonAlmaMater.
    FILTER(?mayor IN (<list_of_mayors_from_step_1>))
    FILTER(?awardee IN (<list_of_awardees_from_step_3>))
}
```

Note: Replace `<list_of_mayors_from_step_1>` and `<list_of_awardees_from_step_3>` with the actual results from steps 1 and 3.",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
115,8,test,Give me the alma mater of Vladimir Cerrón and alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
# Query 1: Alma Mater of Vladimir Cerrón
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

UNION

# Query 2: Alma Mater of Awardees of National Order of Scientific Merit
SELECT DISTINCT ?awardee ?almaMater WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
232,65,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?actor WHERE {
    # Step 1: Find Sylvie Bermann's British settlement residence
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
    FILTER(CONTAINS(LCASE(?settlementLabel), ""british"") && CONTAINS(LCASE(?settlementLabel), ""settlement""))

    # Step 2: Identify John Devon Roland Pertwee native to this settlement
    <http://dbpedia.org/resource/John_Devon_Roland_Pertwee> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER(?birthPlace = ?residence)

    # Step 3: Find his child who is a professional in acting, narration, and production
    <http://dbpedia.org/resource/John_Devon_Roland_Pertwee> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(CONTAINS(LCASE(?profession), ""actor"") && CONTAINS(LCASE(?profession), ""narrator"") && CONTAINS(LCASE(?profession), ""producer""))

    # Step 4: Identify the claim to fame that is both a film and a military conflict
    ?child <http://dbpedia.org/property/awards> ?claimToFame .
    ?claimToFame <http://www.w3.org/2000/01/rdf-schema#label> ?fameLabel .
    FILTER(CONTAINS(LCASE(?fameLabel), ""film"") && CONTAINS(LCASE(?fameLabel), ""military conflict""))

    # Step 5: Find the actor associated with this claim to fame
    ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,24,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?leader ?commander WHERE {
  # Find the leader of the People's Commissariat of Defense of the Soviet Union
  <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?leader .

  # Find the commander in the force associated with Ferenc Szálasi
  OPTIONAL {
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?force <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://www.w3.org/2000/01/rdf-schema#label> ""Ferenc Szálasi""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,63,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?mayor ?awardee WHERE {
  # Find Queen's University Belfast by its nickname
  ?university <http://dbpedia.org/ontology/nickname> ""Queen's"" .
  
  # Find organizations in Belfast
  ?organization <http://dbpedia.org/ontology/location> ?location .
  FILTER(CONTAINS(LCASE(?location), ""belfast""))
  
  # Find the mayor who is a politician and has Queen's University as alma mater
  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?mayor <http://dbpedia.org/ontology/almaMater> ?university .
  ?organization <http://dbpedia.org/property/mayor> ?mayor .

  # Find the awardee of the Royal Medal who attended Queen's University
  ?awardee <http://dbpedia.org/property/awards> ?award .
  FILTER(CONTAINS(LCASE(?award), ""royal medal""))
  ?awardee <http://dbpedia.org/ontology/almaMater> ?university .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,57,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29 and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?person1Band ?person2Band ?writerBand WHERE {
  # Find Tracey Elizabeth McSween's band
  <http://dbpedia.org/resource/Tracey_McSween> <http://dbpedia.org/ontology/band> ?person1Band .

  # Find the person born on 1985-04-29 and their band
  ?person2 a dbo:Person ;
           dbo:birthday ""1985-04-29""^^xsd:date .
  ?person2 <http://dbpedia.org/ontology/band> ?person2Band .

  # Find the writer of the song ""Amba Shepherd"" and their band
  <http://dbpedia.org/resource/Amba_Shepherd> <http://purl.org/dc/terms/creator> ?writer .
  ?writer <http://dbpedia.org/ontology/band> ?writerBand .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,61,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?commander WHERE {
    # Step 1: Identify Gustav Jonson's leader role
    <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/leader> ?officeHolder .
    
    # Step 2: Determine the office and its government agency status
    ?officeHolder <http://dbpedia.org/ontology/office> ?office .
    ?office <http://dbpedia.org/ontology/governmentAgency> ?governmentAgency .

    # Step 3: Find the person decedent at Budapest associated with this leader
    ?decedent <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Budapest> .
    ?officeHolder <http://dbpedia.org/ontology/associatedWith> ?decedent .

    # Step 4: Identify the force linked to this person
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?decedent <http://dbpedia.org/property/memberOf> ?force .

    # Step 5: Find the commander of that military force
    ?force <http://dbpedia.org/ontology/commander> ?commander .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
994,48,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?bandMember ?associatedArtist WHERE {
    ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?dokken <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken"" .
    
    ?dokken <http://dbpedia.org/property/memberOf> ?bandMember .
    
    ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
    
    OPTIONAL {
        ?associatedArtist <http://xmlns.com/foaf/0.1/topic> <http://dbpedia.org/resource/Watchtower_(band)> .
    }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,65,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
# Step 1: Find the nickname for Queen's University Belfast
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/ontology/nickname> ?nickname .
}

# Step 2: Identify the mayor of Northern Ireland Forum and their alma mater
SELECT ?mayor ?almaMater WHERE {
    ?mayor <http://dbpedia.org/property/politicalParty> ?party ;
           <http://dbpedia.org/ontology/mayorFor> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Step 3: Find individuals associated with Royal Medals
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> ?award .
    FILTER(CONTAINS(LCASE(STR(?award)), ""royal medal""))
}

# Step 4: Determine the alma mater of the awardee from step 3
SELECT ?almaMater WHERE {
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?awardee <http://dbpedia.org/property/awards> ?award .
    FILTER(CONTAINS(LCASE(STR(?award)), ""royal medal""))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,46,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
SELECT ?nativeCountry WHERE {
    ?person <http://dbpedia.org/property/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear>.
    ?person rdfs:label ""Yōichi Masuzoe""@en.
    
    ?person <http://dbpedia.org/ontology/residence> ?residence .
    ?residence a <http://dbpedia.org/class/yago/Country108069068> .

    ?person <http://dbpedia.org/property/almaMater> ?almaMater .
    ?almaMater a <http://dbpedia.org/class/yago/JapaneseOrganizations> ;
              a <http://dbpedia.org/class/yago/EducationalInstitutions> ;
              a <http://dbpedia.org/class/yago/UniversitiesAndColleges> .

    ?almaMater <http://dbpedia.org/ontology/nativeCountry> ?nativeCountry .
}
```",5,10,6,3,2,3,3,71,0,0,167,0,0.0,0
547,68,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v5 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Part 1: Resting place of the child of the child of William Haliburton
SELECT ?grandchild ?restingPlace WHERE {
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
    ?grandchild <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

UNION

# Part 2: Resting place of the actor of the show with Emily Richard
SELECT ?actor ?restingPlace WHERE {
    ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/E._Richard> .
    ?show <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

UNION

# Part 3: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?awardee ?restingPlace WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St._George> .
    ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
659,62,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of Napoleonic Wars and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
SELECT ?war WHERE {
    ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?polishHorse rdfs:label 'Polish Horse'@en.
    
    ?force <http://dbpedia.org/property/militaryConflicts> <http://dbpedia.org/resource/Napoleonic_Wars>.
    ?force <http://dbpedia.org/ontology/member> ?polishHorse.

    ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
    ?officeHolder <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland>.
    ?officeHolder <http://dbpedia.org/ontology/commander> ?force.

    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?officeHolder <http://dbpedia.org/property/commander> ?war.
}
```",7,12,8,3,3,3,3,71,0,0,13,0,0.0,0
54,60,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v2 . }","```sparql
SELECT ?finalChild WHERE {
    # Step 1: Find the child of Thinkhaya of Pagan
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayasChild .

    # Step 2: Find the predecessor who is an office holder and royalty
    ?thinkhayasChild <http://dbpedia.org/ontology/predecessor> ?predecessor .
    ?predecessor a <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Royalty> .

    # Step 3: Reference to Thihapate of Mohnyin (not directly used in query but part of context)
    OPTIONAL { ?predecessor <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . }

    # Step 4: Identify the father of the predecessor
    ?predecessor <http://dbpedia.org/ontology/father> ?father .

    # Step 5: Find the child of this father
    ?father <http://dbpedia.org/ontology/child> ?finalChild .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
427,64,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to the name of the party of Michele Pinto and party of Giulio Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Step 1: Get Romano Prodi's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find a person who is an office holder and politician with the same birth name
SELECT DISTINCT ?person ?party WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    
    # Step 3: Get the party of Michele Pinto
    OPTIONAL {
        <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/memberOf> ?partyMichele .
    }
    
    # Step 4: Get the party of Giulio Andreotti
    OPTIONAL {
        <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/memberOf> ?partyGiulio .
    }

    # Ensure the person's party matches either Michele Pinto's or Giulio Andreotti's party
    ?person <http://dbpedia.org/ontology/memberOf> ?party .
    FILTER(?party = ?partyMichele || ?party = ?partyGiulio)
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
9,47,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
# Find the mayor of Northern Ireland Forum
SELECT ?mayor WHERE {
    ?mayor <http://dbpedia.org/property/politicalParty> ?party .
    ?mayor <http://dbpedia.org/ontology/officeHolder> ?position .
    ?position <http://www.w3.org/2000/01/rdf-schema#label> ""Northern Ireland Forum"" .
}

# Find the awardee of Royal Medals
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal"" .
}

# Find common alma mater
SELECT DISTINCT ?almaMater WHERE {
    # Alma mater of the mayor
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
    
    # Alma mater of the awardee
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
184,63,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
# Step 1: Find the child of Archduke Joseph Karl
SELECT ?child1 WHERE {
    <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?child1 .
}

# Step 2: Find the grandchild (child of the child) of Archduke Joseph Karl
SELECT ?grandchild WHERE {
    ?child1 <http://dbpedia.org/ontology/child> ?grandchild .
    FILTER(?child1 IN {<result_of_step_1>})
}

# Step 3: Identify a landmark settlement at an elevation of 96.0 meters
SELECT ?settlement WHERE {
    ?settlement <http://dbpedia.org/property/elevation> ""96.0""^^xsd:float .
    ?settlement <http://www.w3.org/2002/07/owl#sameAs> ?landmark .
}

# Step 4: Find the native of this settlement
SELECT ?native WHERE {
    ?native <http://dbpedia.org/ontology/birthPlace> ?settlement .
}

# Step 5: Identify the parent of this native
SELECT ?parent WHERE {
    ?native <http://dbpedia.org/property/father> ?parent .
    UNION
    ?native <http://dbpedia.org/property/mother> ?parent .
}

# Step 6: Ensure this parent is also linked to Archduke Joseph Francis's child
SELECT ?finalParent WHERE {
    ?child2 <http://dbpedia.org/ontology/child> ?finalParent .
    FILTER(?child2 IN {<result_of_step_5>})
    
    ?archdukeChild <http://dbpedia.org/ontology/child> ?finalParent .
    FILTER(?archdukeChild IN {
        SELECT ?archdukeChild WHERE {
            <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?archdukeChild .
        }
    })
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
994,65,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Find band associated with Fredrik Thordendal (Meshuggah)
  <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/member> ?meshuggahBand .
  
  # Step 2: Find person born as Donald Maynard Dokken and their associated musical artist
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken"" .
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?dokkenBand .
  
  # Step 3: Find associated musical artist of Watchtower
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/property/associatedMusicalArtist> ?watchtowerArtist .
  
  # Step 4: Use the result from step 3 to find another associated musical artist
  ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?controlDeniedArtist .
  
  # Step 5: Find the associated musical artist of a Meshuggah band member and Don Dokken
  ?meshuggahBandMember <http://dbpedia.org/ontology/member> ?meshuggahBand .
  ?dokkenBandMember <http://dbpedia.org/ontology/member> ?dokkenBand .
  
  # Final step: Find the associated musical artist of these connections
  ?meshuggahBandMember <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  ?dokkenBandMember <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
492,48,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
# Query to find the decedent at the workplace of the author of ""French Algeria""
SELECT ?decedent WHERE {
  ?book <http://dbpedia.org/property/book> ""French Algeria"" .
  ?book <http://dbpedia.org/ontology/author> ?author .
  ?author <http://dbpedia.org/ontology/workLocation> ?workplace .
  ?person <http://dbpedia.org/ontology/deathPlace> ?workplace .
  BIND(?person AS ?decedent)
}

UNION

# Query to find the decedent at the capital of Algeria
SELECT ?decedent WHERE {
  <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?capital .
  ?person <http://dbpedia.org/ontology/deathPlace> ?capital .
  BIND(?person AS ?decedent)
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
617,51,test,Give me the parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?parent WHERE {
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Panium> .
    ?child <http://dbpedia.org/ontology/child> ?commander .
    ?spouse <http://dbpedia.org/property/spouse> ?child .
    ?antiochusChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
    FILTER(?spouse = ?antiochusChild)
    ?parent <http://dbpedia.org/ontology/parent> ?child
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,61,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
# Step 1: Find the actor of ""Unnatural (TV series)"" and their profession
SELECT ?actor ?profession WHERE {
    <http://dbpedia.org/resource/Unnatural_(TV_series)> dbo:castMember ?actor .
    ?actor dbo:occupation ?profession .
}

# Step 2: Find an alumnus of Ohio State University and their birth name
SELECT ?alumnus ?birthName WHERE {
    ?alumnus dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> .
    ?alumnus foaf:name ?birthName .
}

# Step 3: Find a person with the same birth name as the alumnus
SELECT DISTINCT ?person WHERE {
    ?person foaf:name ?birthName .
    FILTER EXISTS { 
        ?alumnus dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> .
        ?alumnus foaf:name ?birthName .
    }
}

# Step 4: Find a professional in the same profession as the actor
SELECT DISTINCT ?professional WHERE {
    ?actor dbo:occupation ?profession .
    ?professional dbo:occupation ?profession .
    FILTER(?actor != ?professional)
}
```",6,6,7,3,2,3,3,71,0,0,3,0,0.0,0
378,36,test,"Give me the war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?war ?commander ?claimToFame WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/war> ?war .
    ?war a <http://dbpedia.org/class/yago/MilitaryConflict108069068> ;
         a <http://dbpedia.org/class/yago/SocietalEvent108069068> ;
         a <http://dbpedia.org/class/yago/Event108069068> .

    ?war <http://dbpedia.org/property/commander> ?commander .
    
    OPTIONAL {
        ?commander <http://dbpedia.org/ontology/notableworks> ?claimToFame .
    }
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
801,68,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
SELECT ?trueSelf ?producer ?writer ?associatedArtist WHERE {
  ?shadow <http://dbpedia.org/ontology/alterEgo> ?trueSelf .
  ?trueSelf <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(CONTAINS(LCASE(STR(?profession)), ""rapper"") && CONTAINS(LCASE(STR(?profession)), ""musical artist"")) .

  ?work <http://dbpedia.org/property/producedWork> ?trueSelf ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>, <http://dbpedia.org/ontology/MusicalWork> .

  ?song <http://dbpedia.org/property/title> ""40 Dayz & 40 Nightz"" ;
        <http://dbpedia.org/ontology/producer> ?producer .

  ?producer <http://dbpedia.org/property/writer> ?writer .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>, <http://dbpedia.org/ontology/Artist> .

  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",8,14,9,3,3,3,3,71,0,0,8,0,0.0,0
547,52,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Resting place of the child of the child of William Haliburton
SELECT ?grandchild ?restingPlace WHERE {
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
  <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?child .
  ?grandchild <http://dbpedia.org/property/burialPlace> ?restingPlace .
}

# Resting place of Alan Cunningham
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Alan_Cunningham_(explorer)> <http://dbpedia.org/property/burialPlace> ?restingPlace .
}

# Resting place of the actor of ""Enemy at the Door""
SELECT ?actor ?restingPlace WHERE {
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?movie <http://dbpedia.org/ontology/title> ""Enemy at the Door""@en .
  ?actor <http://dbpedia.org/property/burialPlace> ?restingPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
528,35,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . }","```sparql
# Query for the military force of Narciso Campero Leyes
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?force .
}

# Query for the war involving the military force in the Battle of Pisagua
SELECT ?war WHERE {
    ?militaryForce <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Battle_of_Pisagua> .
    ?militaryForce <http://dbpedia.org/ontology/war> ?war .
}
```",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
92,70,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v7 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find Joseph Michael's bands, focusing on Nevermore and other associations
SELECT ?band WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Joseph Michael"" .
    ?person <http://dbpedia.org/ontology/memberOf> ?band .
    FILTER EXISTS { ?band <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Nevermore_(band)> }
}

UNION

SELECT ?associatedArtist WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Joseph Michael"" .
    ?person <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/reference> ?associatedArtist .
}

# Step 2: Find the actor from ""Return to Nuke 'Em High Volume 1"" and their band
SELECT ?actorBand WHERE {
    ?actor <http://dbpedia.org/property/birthName> ?birthName .
    ?actor <http://dbpedia.org/ontology/performedIn> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> .
    ?actor <http://dbpedia.org/ontology/memberOf> ?actorBand .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,62,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
# Step 1: Find the parent of Archduchess Ilona of Austria
SELECT ?ilonaParent WHERE {
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/parent> ?ilonaParent .
}

# Step 2: Find the native of a landmark at elevation 96.0
SELECT ?native WHERE {
    ?landmark <http://dbpedia.org/property/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
    ?landmark <http://dbpedia.org/ontology/location> ?settlement .
    ?settlement <http://dbpedia.org/ontology/native> ?native .
}

# Step 3: Find the child of the child of the parent, that is royalty, of Archduke Ladislaus Philipp of Austria
SELECT ?finalChild WHERE {
    ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .
    ?parent <http://www.w3.org/2000/01/rdf-schema#label> ?role .
    FILTER(CONTAINS(LCASE(?role), ""royalty""))
    
    ?child1 <http://dbpedia.org/ontology/parent> ?parent .
    ?child2 <http://dbpedia.org/ontology/parent> ?child1 .
    ?finalChild <http://dbpedia.org/ontology/parent> ?child2 .
}

# Step 4: Find the parent of the native from step 2
SELECT ?nativeParent WHERE {
    ?native <http://dbpedia.org/ontology/parent> ?nativeParent .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
303,22,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . },"```sparql
SELECT ?commanderParty WHERE {
    ?invasion <http://dbpedia.org/ontology/battleCommander> ?commander .
    ?invasion <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?commander <http://dbpedia.org/property/politicalParty> ?commanderParty .

    OPTIONAL {
        ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> .
        ?entity <http://www.w3.org/2000/01/rdf-schema#label> ""El Valle de Antón""@en .
    }
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
547,44,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?entity ?restingPlace WHERE {
  # Actor of ""Enemy at the Door""
  { 
    ?actor <http://dbpedia.org/property/film> <http://dbpedia.org/resource/Enemy_at_the_Door> .
    ?actor <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    BIND(?actor AS ?entity)
  }
  
  UNION
  
  # James Burton (Egyptologist)
  { 
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/James_Burton_(Egyptologist)> AS ?entity)
  }
  
  UNION
  
  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  { 
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    ?awardee <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    BIND(?awardee AS ?entity)
  }
}
```",5,5,6,2,3,3,3,71,1,47,0,0.020833333333333332,1.0,0.04081632653061225
492,26,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?war ?commander WHERE {
    <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?commander .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
         <http://dbpedia.org/ontology/event> ?event .
    ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```",3,5,4,3,1,3,3,71,0,0,92,0,0.0,0
339,17,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> <http://dbpedia.org/ontology/father> ?father .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
959,21,test,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
# Query to find the manager of 2013 Júbilo Iwata season
SELECT ?manager WHERE {
    <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/coach> ?manager .
}

# Query to find the alma mater of Eiji Ōtsuka
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/property/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
               <http://dbpedia.org/ontology/university> true ;
               <http://dbpedia.org/ontology/educationalInstitution> true .
    ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""japanese""))
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
427,71,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?alumnus ?fatherParty ?micheleParty ?romanoBirthName ?romanoParty WHERE {
  # Find an alumnus of MIT
  ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  
  # Get the father's political party
  ?father <http://dbpedia.org/property/father> ?alumnus .
  ?father <http://dbpedia.org/ontology/politicalParty> ?fatherParty .

  # Find Michele Pinto's political party
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalParty> ?micheleParty .

  # Get Romano Prodi's birth name and his political party
  <http://dbpedia.org/resource/Romano_Prodi> <http://xmlns.com/foaf/0.1/name> ?romanoBirthName .
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?romanoParty .

  # Ensure the person is an office holder and a politician
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/birthName> ?romanoBirthName .
    ?person <http://dbpedia.org/ontology/officeHolder> ?office .
    ?person <http://dbpedia.org/ontology/politician> ?politician .
  }
}
```",9,11,10,3,3,3,3,71,0,0,2,0,0.0,0
281,55,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
# Part 1: Heather Roy's Military Unit and Wars
SELECT ?unit ?warHeather WHERE {
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?unit .
    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?unit <http://dbpedia.org/property/battles> ?warHeather .
}

# Part 2: Bob Heffron's Birth Place and Awardees' Wars
SELECT ?country ?awardee ?warBob WHERE {
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?place .
    ?place <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
    ?awardee <http://dbpedia.org/property/battles> ?warBob .
}

# Part 3: Find Common Wars
SELECT DISTINCT ?commonWar WHERE {
    { SELECT ?warHeather WHERE { ... } }
    UNION
    { SELECT ?warBob WHERE { ... } }
    FILTER(?warHeather = ?warBob)
    BIND(?warHeather AS ?commonWar)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
16,46,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
# Step 1: Get Satomi Ishihara's profession
SELECT ?profession WHERE {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
}

# Step 2: Get Ted McGinley's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 3: Confirm the person with that birth name is Ted McGinley (already known)

# Step 4: Get Ted McGinley's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 5: Check if the spouse has the same profession as Satomi Ishihara
SELECT ?spouse ?sharedProfession WHERE {
    # Get Satomi Ishihara's profession again for comparison
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
    
    # Get the spouse of Ted McGinley and their professions
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://purl.org/dc/terms/subject> ?sharedProfession .

    # Ensure the profession matches
    FILTER(?profession = ?sharedProfession)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
959,50,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
# Step 1: Find the leader of the 2010 Japanese House of Councillors election
SELECT ?politician WHERE {
    ?election <http://dbpedia.org/property/election> ?event .
    ?event <http://dbpedia.org/ontology/year> ""2010""^^xsd:gYear .
    ?event <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .
    ?politician <http://dbpedia.org/property/wonElection> ?election .
}

# Step 2: Find the country of residence for this politician
SELECT ?country WHERE {
    ?politician <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
}

# Step 3: Find Takashi Sekizuka's team
SELECT ?team WHERE {
    <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team .
}

# Step 4: Find the manager of that team
SELECT ?manager WHERE {
    ?team <http://dbpedia.org/property/coach> ?manager .
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
161,65,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
# Step 1: Find predecessor of Indalecio Prieto
SELECT ?predecessor WHERE {
    <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 2: Identify military forces for Francisco Franco and his predecessor
SELECT DISTINCT ?francoEvent ?predecessorEvent WHERE {
    # Events involving Francisco Franco
    ?francoEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?francoEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?francoEvent <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco>.

    # Events involving predecessor of Indalecio Prieto
    ?predecessorEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?predecessorEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?predecessorEvent <http://dbpedia.org/ontology/commander> ?predecessorCommander.
    
    # Link predecessor from Step 1
    ?predecessorCommander rdfs:label ?predecessorLabel .
    FILTER(CONTAINS(LCASE(?predecessorLabel), LCASE(STR(?predecessor))))
}

# Step 3: Find commanders, specifically Emilio Mola
SELECT DISTINCT ?commander WHERE {
    # For events involving Francisco Franco
    ?francoEvent <http://dbpedia.org/ontology/commander> ?commander .
    
    # For events involving predecessor of Indalecio Prieto
    ?predecessorEvent <http://dbpedia.org/ontology/commander> ?commander .

    FILTER(?commander = <http://dbpedia.org/resource/Emilio_Mola>)
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
492,69,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ?v4 . },"```sparql
SELECT ?commander WHERE {
    # Step 1: Find the author of ""French Algeria""
    ?author dbo:wikiPageWikiLink <http://dbpedia.org/resource/French_Algeria_(book)> .
    
    # Step 2: Identify Khemis Miliana District's country and its capital
    <http://dbpedia.org/resource/Khemis_Miliana_District> dbo:country ?country .
    ?country dbo:capital ?capitalCity .

    # Step 3: Find the person who died at both the author's work and in the capital city
    ?person dbo:deathPlace ?work .
    ?work dbo:wikiPageWikiLink ?author .
    
    ?person dbo:deathPlace ?capitalDeath .
    ?capitalDeath rdfs:label ?capitalCityLabel .
    FILTER(CONTAINS(LCASE(?capitalCityLabel), LCASE(STR(?capitalCity)))) .

    # Step 4: Identify the military conflict involving Frédéric-Georges Herr and the person from step 3
    <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric-Georges_Herr> dbo:commander ?conflict .
    ?conflict dbo:participant ?person .

    # Return the commander of the conflict
    ?conflict dbo:commander ?commander .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
54,57,test,"Give me the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?thinkhayaChild ?thadoParent ?thadoChild ?thihapatePredecessor ?predecessorChild WHERE {
    # Step 1: Find Thinkhaya of Pagan's child
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayaChild .

    # Step 2 and 3: Find Thado Minsaw of Prome's parent and their child
    OPTIONAL {
        ?thadoParent (<http://dbpedia.org/ontology/father>|<http://dbpedia.org/ontology/mother>) <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
        ?thadoParent <http://dbpedia.org/ontology/child> ?thadoChild .
    }

    # Step 4: Find Thihapate of Mohnyin's predecessor
    OPTIONAL {
        ?thihapatePredecessor (<http://dbpedia.org/ontology/predecessor>|<http://dbpedia.org/ontology/successor>) <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
        ?thihapatePredecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/OfficeHolder>|<http://dbpedia.org/ontology/Royalty>) .
    }

    # Step 5: Find the child of Thihapate of Mohnyin's predecessor
    OPTIONAL {
        ?thihapatePredecessor <http://dbpedia.org/ontology/child> ?predecessorChild .
    }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,67,test,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
SELECT ?alterEgo ?entityInBW WHERE {
    # Step 1: Find Matthew Burland's fictional character and its alter ego
    ?burland <http://dbpedia.org/ontology/person> ?fictionalCharacter .
    ?fictionalCharacter <http://dbpedia.org/property/alterEgo> ?alterEgo .

    # Step 2: Identify George Kilbon Nash's administration
    ?nash <http://dbpedia.org/ontology/administration> ?administration .

    # Step 3: Determine the alma mater of this administration
    ?administration <http://dbpedia.org/property/almaMater> ?almaMater .

    # Step 4: Link the alter ego to an entity in Baden-Württemberg
    ?entityInBW <http://www.w3.org/2000/01/rdf-schema#label> ?alterEgo .
    FILTER(CONTAINS(LCASE(?entityInBW), ""baden-württemberg""))
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,55,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?commander WHERE {
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?conflict <http://dbpedia.org/ontology/event> ?event.
    
    ?herr <http://dbpedia.org/property/commander> ?conflict.
    FILTER(?herr = <http://dbpedia.org/resource/Frédéric-Georges_Herr>).
    
    ?satterthwaite <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
    ?satterthwaite <http://dbpedia.org/property/title> ""US Assistant Secretary of State for African Affairs"".
    ?satterthwaite <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?event.
    
    ?algeriaCapital <http://dbpedia.org/ontology/capital> ?capitalCity.
    FILTER(?algeriaCapital = <http://dbpedia.org/resource/Algeria>).
    
    ?decedent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
    ?decedent <http://dbpedia.org/property/deathPlace> ?capitalCity.
    
    ?conflict <http://dbpedia.org/ontology/commander> ?commander.
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
360,24,test,"Give me the reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
# Find the author of ""Blinded by the Light""
SELECT ?author WHERE {
  <http://dbpedia.org/resource/Blinded_by_the_Light_(novel)> <http://dbpedia.org/ontology/author> ?author .
}

# Find the native place of Winnie Madikizela-Mandela's death settlement
SELECT ?nativePlace WHERE {
  ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/property/deathPlace> ?deathPlace .
  ?deathPlace <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
959,39,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v2 . },"```sparql
SELECT ?nativeManager WHERE {
  ?season <http://dbpedia.org/property/manager> ?firstManager .
  ?season <http://www.w3.org/2000/01/rdf-schema#label> ""1998 Kashima Antlers season"" .
  ?firstManager <http://dbpedia.org/ontology/team> ?team .
  ?firstManager <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .

  ?team <http://dbpedia.org/property/manager> ?secondManager .
  ?secondManager <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .

  FILTER(?firstManager != ?secondManager)
}
```",4,5,5,3,2,3,3,71,0,0,6,0,0.0,0
339,19,test,Give me the child of the child of Christian IX of Denmark and father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
# Step 1: Find Christian IX's children
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Find the child of one of Christian IX's children (grandchildren)
SELECT ?grandchild WHERE {
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
    FILTER(?child IN (<list_of_Christian_IX_children>))
}

# Step 3: Identify Princess Olga's parent
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Olga_of_Greece_and_Denmark> <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother>> ?parent .
}

# Step 4: Find the father of that parent's child (Princess Olga)
SELECT ?father WHERE {
    ?parent <http://dbpedia.org/ontology/father> ?father .
    FILTER(?parent IN (<list_of_Princess_Olga_parents>))
}
```

Note: Replace `<list_of_Christian_IX_children>` and `<list_of_Princess_Olga_parents>` with actual results from the queries.",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
55,25,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Identify the band that is both a band and group associated with San Francisco Symphony
SELECT ?band WHERE {
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>.
    ?band <http://dbpedia.org/property/bandMember> <http://dbpedia.org/resource/San_Francisco_Symphony>.
}

# Step 2: Find the band member of Newsted in this identified band
SELECT ?newstedBandMember WHERE {
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>.
    ?band <http://dbpedia.org/property/bandMember> <http://dbpedia.org/resource/San_Francisco_Symphony>.
    ?newstedBandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BandMember>.
    ?newstedBandMember <http://dbpedia.org/property/bandMember> <http://dbpedia.org/resource/Newsted>.
    ?newstedBandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?band.
}

# Step 3: Identify the producer of ""Used to Love Her"" and find their band members
SELECT ?producerBandMember WHERE {
    ?song <http://dbpedia.org/ontology/producer> ?producer.
    ?song <http://www.w3.org/2000/01/rdf-schema#label> ""Used to Love Her""@en.
    ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
    ?producerBandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BandMember>.
    ?producerBandMember <http://dbpedia.org/property/bandMember> ?producer.
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
547,58,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Resting place of the actor in ""Enemy at the Door""
SELECT ?actor ?restingPlace WHERE {
    ?movie <http://dbpedia.org/property/starring> ?actor .
    ?movie <http://dbpedia.org/ontology/title> ""Enemy at the Door"" .
    OPTIONAL { ?actor <http://dbpedia.org/ontology/burial> ?restingPlace . }
}

# Resting place of James Burton (Egyptologist)
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/burial> ?restingPlace .
}

# Resting place of the awardee of the award received by Gerald Graham
SELECT DISTINCT ?awardee ?restingPlace WHERE {
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?award .
    ?awardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?awardee != <http://dbpedia.org/resource/Gerald_Graham>)
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/burial> ?restingPlace . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,59,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Step 1: Find the war involving Saitō Hajime
SELECT ?war WHERE {
    ?war <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Sait%C5%8D_Hajime> .
    ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
    ?event a <http://dbpedia.org/class/yago/MilitaryConflict108069068> ;
           a <http://dbpedia.org/class/yago/SocialEvent108070000> .
}

# Step 2: Find the commander's birthplace
SELECT ?birthPlace WHERE {
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/birthPlace> ?birthPlace .
}

# Step 3: Identify Matsudaira Tadamasa's father (office holder)
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?father .
    ?father a <http://dbpedia.org/class/yago/OfficeHolder108070000> .
}

# Step 4: Find the father's father (grandfather)
SELECT ?grandfather WHERE {
    ?father <http://dbpedia.org/ontology/father> ?grandfather .
    ?grandfather a <http://dbpedia.org/class/yago/Politician108070000> .
}

# Step 5: Retrieve the death place of the grandfather
SELECT ?deathPlace WHERE {
    ?grandfather <http://dbpedia.org/property/deathPlace> ?deathPlace .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
528,48,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
# Part 1: Find the military force of Narciso Campero Leyes
SELECT ?militaryForce WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Narciso Campero Leyes""@en .
    ?person <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}

# Part 2: Find the war of the military force related to a societal event in Chile
SELECT DISTINCT ?societalEvent ?war WHERE {
    ?event <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    ?event <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Chile> .
    ?event <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/SocietalEvent108930069> .
    
    OPTIONAL { ?militaryForce <http://dbpedia.org/property/battle> ?war . }
    FILTER(?societalEvent = ?event)
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
488,51,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
# Part 1: Death place of Yūki Hideyasu's father (politician)
SELECT ?deathPlace WHERE {
    <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}

UNION

# Part 2: Administration of Tokugawa Masako's spouse's father (royalty)
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?spouse <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/administration> ?administration .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,57,test,"Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
SELECT ?fatherParty ?prodiParty WHERE {
  # Identify Romano Antonio Prodi's alumnus status at MIT
  <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AlumniOf> ?mit .
  FILTER(?mit = <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology>) .

  # Find the father of Romano Antonio Prodi
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/father> ?father .

  # Determine the political party associated with his father
  OPTIONAL { ?father <http://dbpedia.org/property/party> ?fatherParty . }

  # Verify Romano Antonio Prodi's connection to Partito Popolare Italiano
  OPTIONAL { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/party> ?prodiParty .
             FILTER(?prodiParty = <http://dbpedia.org/resource/Partito_Popolare_Italiano>) }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
498,8,test,"Give me the band of the member, that is an artist, of Mortician (band) and band of Malevolent Creation.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?person ?currentBand WHERE {
    ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Mortician_(band)> .
    ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Malevolent_Creation> .
    OPTIONAL { ?person <http://dbpedia.org/ontology/currentMemberOf> ?currentBand . }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
485,23,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Query for an entity in the country of Western European Time
SELECT ?entity WHERE {
    ?timeZone <http://dbpedia.org/ontology/country> ?country .
    FILTER(STR(?timeZone) = ""Western European Time"")
    ?entity <http://www.w3.org/ns/prov#wasDerivedFrom> ?source .
    ?source <http://dbpedia.org/property/country> ?country .
}

UNION

# Query for an entity in the birthplace of Joseph Whitaker (naturalist)
SELECT ?entity WHERE {
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthRegion .
    ?entity <http://www.w3.org/ns/prov#wasDerivedFrom> ?source .
    ?source <http://dbpedia.org/property/place> ?birthRegion .
}
```",4,6,5,2,2,2,3,28,0,0,357,0,0.0,0
547,30,test,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/burial> ?restingPlace .
    BIND(<http://dbpedia.org/resource/James_Burton_(Egyptologist)> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/burial> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Simon_Cadell> AS ?person)
  }
  UNION
  {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    ?awardee <http://dbpedia.org/ontology/burial> ?restingPlace .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,40,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
# Find the author of ""French Algeria""
SELECT ?author WHERE {
    ?work <http://dbpedia.org/ontology/author> ?author .
    ?work <http://purl.org/dc/terms/title> ""French Algeria""@en .
}

# Find person decedent at Algiers
SELECT ?decedent WHERE {
    ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Person100007846> .
}

# Find commander in Franco-Hova Wars
SELECT ?commander WHERE {
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    ?battle <http://purl.org/dc/terms/title> ""Franco-Hova Wars""@en .
}

# Combine results to find common individuals
SELECT DISTINCT ?person WHERE {
    VALUES ?role { 
        (<http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/ontology/author>) 
        (<http://dbpedia.org/resource/Algiers> <http://dbpedia.org/property/deathPlace>)
        (<http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander>)
    }
    ?person ?role .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
54,66,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
SELECT ?predecessor WHERE {
    # Step 1: Find Thihapate of Mohnyin's child who is an office holder and royalty
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
    ?child a <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Royalty> .

    # Step 2: Find Narapati I of Ava's child
    ?narapatiChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Narapati_I_of_Ava> .

    # Step 3: Identify Soe Min Wimala Dewi's father
    ?soeMinFather <http://dbpedia.org/ontology/spouse> ?soeMinMother .
    ?soeMinMother <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> .

    # Step 4: Find the common child
    ?commonChild <http://dbpedia.org/ontology/parent> ?child .
    ?commonChild <http://dbpedia.org/ontology/parent> ?soeMinFather .
    ?narapatiChild <http://dbpedia.org/ontology/parent> ?commonChild .

    # Step 5: Determine the predecessor
    ?predecessor <http://dbpedia.org/ontology/successor> ?commonChild .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
92,50,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
SELECT ?actor ?artist1 ?furney ?band WHERE {
  # Find the actor for ""Return to Nuke 'Em High Volume 1""
  <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/ontology/starring> ?actor .
  
  # Get associated musical artist of the actor
  ?actor <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .

  # Find Joseph Michael Furney (born as such)
  <http://dbpedia.org/resource/Joseph_Michael_Furney> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  
  # Get band of Joseph Michael Furney
  ?furney <http://dbpedia.org/resource/Joseph_Michael_Furney> ;
          <http://dbpedia.org/ontology/band> ?band .

  # Ensure the associated musical artist and band are the same
  FILTER(?artist1 = ?band)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
54,27,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child ?predecessor WHERE {
    <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?child <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",3,5,4,3,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
314,25,test,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/restingPlace> ?v3 . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v3 . },"```sparql
# Find awardees for Sergei Makovetsky's awards
SELECT ?award ?otherAwardee WHERE {
    <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Sergei_Makovetsky>)
}

UNION

# Find awardees for the commander in the Spanish Civil War's awards
SELECT ?award ?otherAwardee WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
    ?commander <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Spanish_Civil_War> .
    ?commander <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != ?commander)
}

UNION

# Find awardees for the person deceased at the headquarter of House of Sombrerete's awards
SELECT ?award ?otherAwardee WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/House_of_Sombrerete> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?person <http://dbpedia.org/property/deathDate> ?deathDate .
    FILTER(?deathDate != ""unknown"") # Ensure the person is deceased
    ?person <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != ?person)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
767,60,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
# Step 1: Get the writer of ""Where It's At"" (Dustin Lynch album)
SELECT ?writer WHERE {
    <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://purl.org/dc/terms/creator> ?writer .
}

# Step 2: Find administration with a settlement related to the writer
SELECT DISTINCT ?administrationEntity WHERE {
    ?writer <http://dbpedia.org/ontology/administration> ?administrationEntity .
    ?administrationEntity <http://dbpedia.org/ontology/settlement> ?settlement .
}

# Step 3: Get alter ego of Matthew Burland's fictional character persona
SELECT ?alterEgo WHERE {
    ?persona <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?persona <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
    ?persona <http://dbpedia.org/resource/Matthew_Burland> .
}

# Step 4: Reference the alter ego to find or confirm the entity in administration
SELECT DISTINCT ?administrationEntity WHERE {
    ?writer <http://dbpedia.org/ontology/administration> ?administrationEntity .
    ?administrationEntity <http://dbpedia.org/ontology/settlement> ?settlement .
    ?alterEgo ?p ?o .
}
```",6,8,7,3,2,3,3,71,0,0,8,0,0.0,0
547,59,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
# Part 1: Resting place of the child of the child of William Haliburton
SELECT ?grandchild ?restingPlace WHERE {
    # Find children of William Haliburton
    <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?child .
    
    # Find grandchildren (children of the child)
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
    
    # Get resting place of the grandchild
    ?grandchild <http://dbpedia.org/property/burialPlace> ?restingPlace .
}

UNION

# Part 2: Resting place of the actor of the show with Emily Richard
SELECT ?actor ?restingPlace WHERE {
    # Find shows associated with Emily Richard
    ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/E._Richard> .
    
    # Find actors in those shows
    ?show <http://dbpedia.org/ontology/starring> ?actor .
    
    # Get resting place of the actor
    ?actor <http://dbpedia.org/property/burialPlace> ?restingPlace .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
251,27,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of Battle of Marengo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?deathPlace ?administration ?battleLocation WHERE {
  # Part 1: Death Place of the Author of ""The Twelve Abbots of Challant""
  ?author dbo:work <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> .
  ?author dbo:deathPlace ?deathPlace .

  # Part 2: Administration of the Ruling Party in Sicily
  ?party a dbo:PoliticalParty ;
         dbo:country <http://dbpedia.org/resource/Sicily> ;
         dbo:administration ?administration .

  # Part 3: Location of the Battle of Marengo
  <http://dbpedia.org/resource/Battle_of_Marengo> dbo:location ?battleLocation .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
747,20,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?writer ?band ?person WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?writer .
  OPTIONAL { ?writer <http://dbpedia.org/ontology/band> ?band . }
  ?person <http://www.w3.org/2006/vcard/ns#bday> ""1985-04-29""^^xsd:date .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
712,17,test,Give me the capital of South Russia (1919–1920) and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital ?restingPlace WHERE {
    # Part 1: Capital of South Russia (1919–1920)
    <http://dbpedia.org/resource/South_Russia_(1919%E2%80%931920)> <http://dbpedia.org/ontology/capital> ?capital .

    # Part 2: Resting place of the awardee of a show in the Soviet Union
    ?show <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Soviet_Union> .
    ?award <http://dbpedia.org/ontology/show> ?show .
    ?awardee <http://dbpedia.org/property/awards> ?award .
    ?awardee <http://dbpedia.org/ontology/burial> ?restingPlace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
16,56,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person ?birthName WHERE {
    ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Ohio_State_University>.
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ted_McGinley>.
    ?spouse <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actress>.
    ?person <http://dbpedia.org/ontology/alumni> ?alumnus.
    ?person <http://dbpedia.org/property/spouse> ?spouse.
    ?person <http://dbpedia.org/ontology/birthName> ?birthName.
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
959,54,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
# Step 1: Find Eiji Ōtsuka's alma mater that is Japanese
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
               <http://dbpedia.org/ontology/university> true ;
               <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .
}

# Step 2: Find the leader of the 2010 Japanese House of Councillors election
SELECT ?leader WHERE {
    ?election <http://dbpedia.org/property/electionYear> ""2010"" ;
              <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .
    ?election <http://dbpedia.org/ontology/politicianLeader> ?leader .
}

# Step 3: Determine the country of residence for this leader
SELECT ?country WHERE {
    ?leader <http://dbpedia.org/property/nationality> ?country .
}

# Step 4: Identify the manager of the 2013 Júbilo Iwata season
SELECT ?manager WHERE {
    <http://dbpedia.org/resource/Júbilo_Iwata_season_2013-14> <http://dbpedia.org/ontology/manager> ?manager .
}

# Step 5: Find a member (alumnus) of Eiji Ōtsuka's alma mater who matches all criteria
SELECT ?member WHERE {
    ?almaMater <http://dbpedia.org/property/alumni> ?member .
    ?leader <http://dbpedia.org/ontology/nationality> ?country .
    ?manager <http://dbpedia.org/ontology/nationality> ?country .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
801,47,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?producer WHERE {
    ?artist <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> .
    ?artist <http://dbpedia.org/property/alterEgo> ""The Shadow"" .
    ?work <http://dbpedia.org/ontology/workOf> ?artist ;
          <http://dbpedia.org/ontology/type> ?type1, ?type2 .
    FILTER(?type1 = <http://dbpedia.org/resource/Musical_work> && ?type2 = <http://dbpedia.org/resource/Song>) .
    ?work <http://dbpedia.org/property/producer> ?producer .
}
```",5,9,6,3,2,3,3,71,0,0,473,0,0.0,0
488,70,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?administration ?birthPlace ?deathPlace WHERE {
  # Part 1: Spouse of Tokugawa Masako who is a royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> .
  ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?spouseLabel .
  FILTER(CONTAINS(LCASE(?spouseLabel), ""royalty"")) .

  # Part 2: Father of the spouse and his administration
  ?father <http://dbpedia.org/ontology/spouse> ?spouse .
  ?father <http://dbpedia.org/property/administration> ?administration .

  # Part 3: Commander in Boshin War and their birthplace
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Part 4: Father of Matsudaira Tadamasa's father who is a politician and his death place
  ?officeHolderFather <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Matsudaira_Tadamasa> .
  ?grandfather <http://dbpedia.org/ontology/spouse> ?officeHolderFather .
  ?grandfather <http://www.w3.org/2000/01/rdf-schema#label> ?grandfatherLabel .
  FILTER(CONTAINS(LCASE(?grandfatherLabel), ""politician"")) .
  ?grandfather <http://dbpedia.org/property/deathPlace> ?deathPlace .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
285,16,test,Give me the parent of the child of Tina Onassis Niarchos and spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?spouse WHERE {
    ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tina_Onassis_Niarchos> .
    ?parent <http://dbpedia.org/ontology/child> ?child .
    ?parent <http://dbpedia.org/property/spouse> ?spouse .
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
659,70,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
SELECT ?militaryForce WHERE {
    ?polishHorse <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse""@en .
    ?polishHorse <http://dbpedia.org/ontology/militaryUnit> ?unit .
    ?polishHorse <http://dbpedia.org/ontology/organisation> ?org .

    ?welshConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/War> .
    ?welshConflict <http://dbpedia.org/ontology/militaryConflict> ?conflict .
    ?welshConflict <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .

    ?societalEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
    ?societalEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?societalEvent <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .

    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?militaryForce <http://dbpedia.org/property/militaryForce> ?societalEvent .
    ?militaryForce <http://dbpedia.org/property/war> ?welshConflict .
}
```",8,15,9,3,3,3,3,71,0,0,15,0,0.0,0
328,59,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?commanderInBudapest WHERE {
    ?campaign <http://dbpedia.org/ontology/commander> ?volcanoCommander .
    FILTER(?campaign = <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign>) .

    ?volcanoCommander <http://dbpedia.org/property/awards> ?award .

    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != ?volcanoCommander) .

    ?force <http://dbpedia.org/ontology/commander> ?otherAwardee .
    ?personDecedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
    ?force <http://dbpedia.org/property/member> ?personDecedent .

    BIND(?otherAwardee AS ?commanderInBudapest)
}
```",6,6,7,3,2,3,3,71,0,0,15,0,0.0,0
54,64,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
# Step 1: Find Thinkhaya of Pagan's child
SELECT ?thinkhayasChild WHERE {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayasChild .
}

# Step 2: Find the father of Thinkhaya's child
SELECT ?father WHERE {
    ?thinkhayasChild <http://dbpedia.org/ontology/father> ?father .
}

# Step 3: Find the predecessor of this father
SELECT ?predecessor WHERE {
    ?father <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 4: Identify office holder and royalty related to Thihapate of Mohnyin
SELECT ?officeHolderRoyalty WHERE {
    ?officeHolderRoyalty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?officeHolderRoyalty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?officeHolderRoyalty <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
}

# Step 5: Find the parent of Thado Minsaw of Prome
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?parent .
}

# Final query to find the child of the predecessor (from Step 3) who matches the criteria from Steps 4 and 5
SELECT ?finalChild WHERE {
    ?predecessor <http://dbpedia.org/ontology/child> ?finalChild .
    ?finalChild = ?officeHolderRoyalty .
    ?finalChild = ?parent .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
232,61,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . }","```sparql
SELECT ?nativePlace WHERE {
    ?professional <http://dbpedia.org/ontology/profession> ?actor .
    ?professional <http://dbpedia.org/ontology/profession> ?narrator .
    ?professional <http://dbpedia.org/ontology/profession> ?producer .
    
    FILTER(?actor = <http://dbpedia.org/resource/Actor>)
    FILTER(?narrator = <http://dbpedia.org/resource/Narrator>)
    FILTER(?producer = <http://dbpedia.org/resource/Producer>)
    
    ?professional <http://dbpedia.org/ontology/notableWorks> ?film .
    ?professional <http://dbpedia.org/ontology/notableWorks> ?conflict .
    
    ?actor <http://dbpedia.org/property/filmography> ?film .
    ?actor <http://dbpedia.org/property/militaryService> ?conflict .
    
    ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
    ?politician <http://dbpedia.org/ontology/profession> ?officeHolder .
    ?actor <http://dbpedia.org/ontology/nativeOf> ?politician .
    
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlements100000001> .
    ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .
    ?politician <http://dbpedia.org/ontology/residence> ?residence .
    
    ?residence <http://dbpedia.org/ontology/nativeOf> ?nativePlace .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
184,45,test,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
# Step 1: Find the parent of Géza von Habsburg
SELECT ?parentOfGéza WHERE {
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/parent> ?parentOfGéza .
}

# Step 2: Find the child of the parent of Archduchess Margaret of Austria (born 1925)
SELECT ?childOfParent WHERE {
    ?parentOfMargaret <http://dbpedia.org/property/birthYear> ""1925""^^<http://www.w3.org/2001/XMLSchema#gYear> .
    <http://dbpedia.org/resource/Margaret_of_Austria_(born_1925)> <http://dbpedia.org/ontology/parent> ?parentOfMargaret .
    ?parentOfParent <http://dbpedia.org/ontology/child> ?parentOfMargaret .
    ?parentOfParent <http://dbpedia.org/ontology/child> ?childOfParent .
}

# Step 3: Find the child of Archduke Joseph August of Austria
SELECT ?childOfJoseph WHERE {
    <http://dbpedia.org/resource/Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?childOfJoseph .
}

# Combine results to find a common parent
SELECT DISTINCT ?commonParent WHERE {
    VALUES ?parentOfGéza { ?parentOfGéza }
    VALUES ?childOfParent { ?childOfParent }
    VALUES ?childOfJoseph { ?childOfJoseph }

    ?commonParent <http://dbpedia.org/ontology/parent> ?parentOfGéza .
    ?commonParent <http://dbpedia.org/ontology/child> ?childOfParent .
    ?commonParent <http://dbpedia.org/ontology/child> ?childOfJoseph .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
747,58,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song) and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?personBorn1985 ?bandOfApolloWriter ?bandOfShenaPersona WHERE {
  # Part 1: Find person born on 1985-04-29
  ?personBorn1985 <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^xsd:date .
  
  # Part 2: Find the band of the writer of Apollo (Hardwell song)
  ?apolloSong <http://purl.org/dc/terms/creator> ?writerOfApollo .
  ?writerOfApollo <http://dbpedia.org/ontology/band> ?bandOfApolloWriter .
  FILTER(STR(?apolloSong) = ""Apollo_(Hardwell_song)"")

  # Part 3: Find the band of the persona of Shèna
  ?shenaPersona rdfs:label ""Shèna""@en .
  ?shenaPersona <http://dbpedia.org/ontology/band> ?bandOfShenaPersona .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,60,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?birthPlace WHERE {
    # Step 1: Identify the war involving Saitō Hajime
    ?war <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Sait%C5%8D_Hajime> .
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
         a <http://dbpedia.org/ontology/Event> ;
         a <http://dbpedia.org/ontology/SocietalEvent> .

    # Step 2: Find the commander in this war and their birthplace
    ?war <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

    # Step 3: Identify Tokugawa Masako's spouse who is royalty
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/property/spouse> ?spouse .
    ?spouse a <http://dbpedia.org/ontology/Royalty> .

    # Step 4: Find the father of this spouse and his administration
    ?spouse <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/administration> ?administration .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
54,24,test,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?child ?predecessor ?parent WHERE {
    <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?child .
    ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
    FILTER(?child = ?predecessor)
    ?child <http://dbpedia.org/ontology/parent> ?parent
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
328,56,test,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
# Part 1: Confirm Bruce Fraser as a commander on the Eastern Front
SELECT ?battle WHERE {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/battleCommanded> ?command .
    ?command <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
}

# Part 2: Find awards received by Bruce Fraser and other awardees
SELECT DISTINCT ?award ?otherAwardee WHERE {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>)
}

# Part 3: Identify the government agency led by Bruce Fraser and its leader
SELECT DISTINCT ?agency ?leader WHERE {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/officeHolder> ?position .
    ?position <http://dbpedia.org/property/department> ?agency .
    OPTIONAL { ?leader <http://dbpedia.org/ontology/officeHolder> ?position . }
}

# Part 4: Identify Gustav Jonson's office, the associated government agency, and its leader
SELECT DISTINCT ?jonsonOffice ?agency ?leader WHERE {
    <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/officeHolder> ?jonsonOffice .
    ?jonsonOffice <http://dbpedia.org/property/department> ?agency .
    OPTIONAL { ?leader <http://dbpedia.org/ontology/officeHolder> ?jonsonOffice . }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
534,17,test,"Give me the birth place of Garret FitzGerald and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?v3 . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
# Step 1: Get Garret FitzGerald's birthplace
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Step 2 and 3: Identify the venue of the 2012 Pro12 Grand Final and its owner
SELECT ?venue ?owner WHERE {
    ?event <http://dbpedia.org/property/location> ?venue .
    ?venue <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue> .
    ?venue <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure> .
    ?event <http://purl.org/dc/terms/title> ""2012 Pro12 Grand Final""@en .
    ?venue <http://dbpedia.org/property/owner> ?owner .
}

# Step 4: Get the headquarters of the owner
SELECT ?headquarters WHERE {
    ?owner <http://dbpedia.org/ontology/headquarter> ?headquarters .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,65,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
# Step 1: Identify the military unit known as 'Polish Horse'
SELECT ?polishHorse WHERE {
    ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?polishHorse <http://dbpedia.org/property/commonName> ""Polish Horse""@en.
}

# Step 2: Determine the commander of the force associated with Arthur Wellesley, 1st Duke of Wellington
SELECT ?welshForce WHERE {
    ?welshForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?welshForce <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington>.
}

# Step 3: Identify the societal event and military conflict associated with Rutger Jan Schimmelpenninck
SELECT ?event WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?event <http://dbpedia.org/property/associatedWith> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
}

# Step 4: Find the commander in the war identified in step 3, which is also the same war where 'Polish Horse' was involved
SELECT ?commander WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://dbpedia.org/property/battle> ?polishHorse.
    ?war <http://dbpedia.org/property/battle> ?event.
    ?war <http://dbpedia.org/property/commander> ?commander.
}
```",7,14,8,3,3,3,3,71,0,0,15,0,0.0,0
994,59,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT DISTINCT ?bandMemberArtist WHERE {
  # Step 1: Identify Fredrik Thordendal's Band
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> ;
        <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .

  # Step 2: Find Reference to Watchtower
  OPTIONAL { ?band <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Watchtower_(band)> . }

  # Step 3: Associated Musical Artist for the Band and Watchtower
  ?bandArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?band .
  OPTIONAL { ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Watchtower_(band)> . }

  # Step 4: Identify Band Member who is part of a Group, Band, and Organisation
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type ;
          <http://dbpedia.org/ontology/member> ?band .
  FILTER(?type IN (<http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/MusicalGroup>, <http://dbpedia.org/ontology/Organisation>))

  # Step 5: Associated Musical Artist of the Band Member
  ?memberArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?member .

  # Return the associated musical artist of the band member
  VALUES ?result { ?bandArtist ?watchtowerArtist ?memberArtist }
}
```",6,10,7,3,2,3,3,71,0,0,5,0,0.0,0
712,20,test,"Give me the resting place of the awardee of the show of Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
SELECT ?restingPlace WHERE {
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising>.
    ?militaryForce <http://dbpedia.org/ontology/country> ?country.
    
    ?show <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Soviet_Union>.
    ?show <http://dbpedia.org/property/awards> ?award.
    ?award <http://dbpedia.org/property/recipient> ?awardee.

    ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlace.
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
435,28,test,"Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
SELECT ?work ?region WHERE {
    # Find the author associated with Iceland
    <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/ontology/notableWork> ?work .
    ?work <http://dbpedia.org/property/author> ?author .
    
    # Confirm the region for the time zone of Bombali Shebora Chiefdom
    <http://dbpedia.org/resource/Bombali_Shebora_Cheifdom> <http://www.w3.org/2006/time#during> ?timeZone .
    ?timeZone <http://www.w3.org/2006/time#inCalendar> ?region .
    
    # Filter to ensure the author is Icelandic
    ?author <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Iceland> .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
534,18,test,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex and headquarter of the owner of RDS Arena.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?birthPlace WHERE {
    ?politician <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/East_of_England#Essex> .
    ?arena <http://dbpedia.org/property/owner> ?owner .
    ?arena <http://dbpedia.org/ontology/headquarters> ?headquarters .
    ?child <http://dbpedia.org/ontology/child> ?politician .
    ?child a <http://dbpedia.org/ontology/Politician>, <http://dbpedia.org/ontology/OfficeHolder> .
    ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
339,18,test,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Step 1: Find the child of Grand Duchess Elena Vladimirovna of Russia
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Find the father of that child
SELECT ?father WHERE {
    ?child <http://dbpedia.org/property/father> ?father .
}

# Step 3: Find the predecessor of Frederick VIII of Denmark
SELECT ?predecessor WHERE {
    <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 4: Find the child of that predecessor
SELECT ?secondChild WHERE {
    ?predecessor <http://dbpedia.org/ontology/child> ?secondChild .
}

# Step 5: Find the father of the second child
SELECT ?secondFather WHERE {
    ?secondChild <http://dbpedia.org/property/father> ?secondFather .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
666,20,test,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England and player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?nickname WHERE {
    # Step 1: Find teams managed by Leonid Slutsky
    ?team <http://dbpedia.org/ontology/team> ?slutskyManager .
    
    # Step 2: Ensure the team is a soccer club and sports team
    ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam> .
    
    # Step 3: Find the season when Leonid Slutsky was a manager
    ?season <http://dbpedia.org/property/team> ?team ;
            <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/Lenid_Slutskiy> .

    # Step 4: Identify players in that team during the season
    ?player <http://dbpedia.org/ontology/playerInTeamSeason> ?season .
    
    # Step 5: Find the organization related to England, which is a soccer club and sports club
    ?org <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam> ;
         <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England> .
    
    # Step 6: Retrieve the nickname for this organization
    ?org <http://dbpedia.org/property/nicknames> ?nickname .
}
```",6,12,7,3,2,3,2,20,0,0,2,0,0.0,0
16,67,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
# Find the actor of ""Unnatural"" (TV series)
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
}

# Find Ted McGinley's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Find an alumnus of Ohio State University and their birth name
SELECT ?alumnus ?birthName WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University>.
  ?alumnus <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Find a person with the same birth name
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  FILTER(?person != ?alumnus)
}

# Determine professions of these individuals
SELECT DISTINCT ?profession WHERE {
  VALUES ?individual { ?actor ?spouse ?person }
  ?individual <http://dbpedia.org/ontology/profession> ?profession .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,52,test,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Part 1: Louis des Balbes de Berton de Crillon
SELECT ?battle ?fame WHERE {
    OPTIONAL { 
        <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon> <http://dbpedia.org/ontology/battle> ?battle .
        FILTER(CONTAINS(LCASE(STR(?battle)), ""peninsular war""))
    }
    OPTIONAL {
        <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon> <http://dbpedia.org/property/awards> ?fame .
    }
}

# Part 2: Carl Pontus Gahn
SELECT ?war WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn""@en .
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    FILTER(STR(?birthName) = ""Carl Pontus Gahn"")
    ?person <http://dbpedia.org/ontology/battle> ?war .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
328,60,test,"Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
# Step 1: Identify Gustav Jonson's leader
SELECT ?leader WHERE {
    <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/leader> ?leader .
}

# Step 2: Find the government agency led by this leader
SELECT ?agency WHERE {
    ?leader <http://dbpedia.org/ontology/office> ?office .
    ?office <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?agency .
    FILTER(?agency <http://dbpedia.org/resource/Government_agency>)
}

# Step 3: Identify the commander of the Volcano and Ryukyu Islands campaign
SELECT ?commander WHERE {
    ?campaign <http://dbpedia.org/ontology/commander> ?commander .
    ?campaign <http://www.w3.org/2000/01/rdf-schema#label> ""Volcano and Ryukyu Islands campaign""@en .
}

# Step 4: Find awards associated with both the leader and the commander
SELECT DISTINCT ?award WHERE {
    OPTIONAL { ?leader <http://dbpedia.org/property/awards> ?award . }
    OPTIONAL { ?commander <http://dbpedia.org/property/awards> ?award . }
}

# Step 5: Retrieve other awardees who have received these same awards
SELECT DISTINCT ?otherAwardee WHERE {
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != ?leader && ?otherAwardee != ?commander)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
391,60,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Step 1: Get the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?nickname .
}

# Step 2: Find movies that are both works and television shows
SELECT DISTINCT ?movie ?actor WHERE {
    ?movie a <http://dbpedia.org/ontology/Movie> ;
           <http://www.w3.org/2000/01/rdf-schema#isPartOf> ?work ;
           <http://dbpedia.org/ontology/tvSeries> ?tvShow .
    ?actor <http://dbpedia.org/ontology/starring> ?movie .
}

# Step 3: Find the native place of the actor
SELECT DISTINCT ?nativePlace WHERE {
    ?actor <http://dbpedia.org/property/nationality> ?nationality ;
           <http://dbpedia.org/ontology/birthPlace> ?nativePlace .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
184,46,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of Archduke Joseph Karl of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> ?grandchild .
    ?grandchild <http://dbpedia.org/property/nativePlace> ?settlement .
    ?settlement <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
    ?settlement <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/Settlements100000Link> .
    ?settlement <http://dbpedia.org/ontology/locatedIn> ?parent .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,53,test,Give me the spouse of the father of Merneptah and parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Find Merneptah's father
SELECT ?merneptahFather WHERE {
    <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/ontology/father> ?merneptahFather .
}

# Step 2: Check if this person is also a parent of Henuttawy (19th dynasty)
SELECT ?henuttawyParent WHERE {
    ?henuttawyParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> .
    FILTER(?henuttawyParent = ?merneptahFather) # Assuming ?merneptahFather is bound from Step 1
}

# Step 3: Find Amun-her-khepeshef's spouse and their child
SELECT ?amunSpouse ?child WHERE {
    <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/property/spouse> ?amunSpouse .
    ?amunSpouse <http://dbpedia.org/ontology/child> ?child .
}

# Step 4: Identify the parent of that child
SELECT ?parent WHERE {
    ?parent <http://dbpedia.org/ontology/parent> ?child .
    FILTER(?child = ?childFromStep3) # Assuming ?child is bound from Step 3
}

# Step 5: Find the spouse of the identified parent (who is also a parent of Henuttawy)
SELECT ?spouse WHERE {
    ?henuttawyParent <http://dbpedia.org/property/spouse> ?spouse .
    FILTER(?henuttawyParent = ?parent) # Assuming ?parent is bound from Step 4
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,46,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
# Part 1: Death Place of Yūki Hideyasu's Father (Politician)
SELECT ?deathPlace WHERE {
    ?yukiHideyasu dbo:father ?father .
    ?father rdf:type dbo:Politician .
    ?father dbo:placeOfDeath ?deathPlace .
    FILTER(STRSTARTS(STR(?yukiHideyasu), ""http://dbpedia.org/resource/Yūki_Hideyasu""))
}

# Part 2: Birth Place of Saitō Hajime's Commander
SELECT ?birthPlace WHERE {
    ?war dbo:type [ a dbo:MilitaryConflict ; a dbo:Event ; a dbo:SocietalEvent ] .
    ?saitoHajime dbo:commanderIn ?war .
    ?commander dbo:commanderIn ?war .
    ?commander dbo:birthPlace ?birthPlace .
    FILTER(STRSTARTS(STR(?saitoHajime), ""http://dbpedia.org/resource/Saitō_Hajime""))
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
659,35,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?event ?militaryForce WHERE {
    ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
    ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington>.
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?event <http://dbpedia.org/property/militaryForce> ?militaryForce.
}
```",4,7,5,2,2,3,3,71,0,0,38,0,0.0,0
659,48,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?commander WHERE {
    # Step 1: Identify Rutger Jan Schimmelpenninck's native office holder role
    <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/nativeCountry> ?nativeCountry .
    
    # Step 2: Determine the military force associated with the Kingdom of Ireland linked to this office holder
    ?officeHolder <http://dbpedia.org/ontology/nationality> ?nativeCountry ;
                  <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    
    # Step 3: Find the societal event and military conflict related to Rutger Jan Schimmelpenninck
    ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> ;
           <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .
    
    # Step 4: Identify the commander of the military force involved in both contexts
    ?commander <http://dbpedia.org/ontology/commandedMilitaryForce> ?militaryForce ;
               <http://dbpedia.org/ontology/battleCommanded> ?militaryConflict .
}
```",5,9,6,3,2,3,3,71,0,0,40,0,0.0,0
64,8,test,"Give me the alma mater of Jovan Hristić and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query for Alma Mater of Jovan Hristić
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Query for Countries in the Central European Time Zone
SELECT DISTINCT ?country WHERE {
    ?country <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?timeZoneResource .
    ?timeZoneResource <http://dbpedia.org/ontology/timeZone> ""Europe/Berlin""^^<http://www.w3.org/2001/XMLSchema#string> .
    ?country a <http://dbpedia.org/class/yago/Country108069068> .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
232,41,test,"Give me the native of London and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
SELECT ?child WHERE {
    # Step 1: Identify Sean Pertwee's claim to fame that is both a film and military conflict.
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/property/claimToFame> ?fame .
    
    # Ensure the fame is both a film and a military conflict
    ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

    # Step 2: Confirm John Devon Roland Pertwee is Sean Pertwee
    OPTIONAL { 
        ?person <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee"" .
        FILTER(?person = <http://dbpedia.org/resource/Sean_Pertwee>)
    }

    # Step 3: Find the child of Sean Pertwee
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/child> ?child .

    # Step 4: Ensure the child is an actor and native of London
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    ?child <http://dbpedia.org/property/nationality> ""British"" .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
92,62,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 2: Check if this actor is linked to any musical artists or bands
SELECT DISTINCT ?associatedArtist WHERE {
    ?actor <http://dbpedia.org/property/birthPlace> ?birthPlace . # Ensures the person is an artist
    OPTIONAL { ?actor <http://dbpedia.org/ontology/memberOf> ?band . }
    OPTIONAL { ?actor <http://dbpedia.org/ontology/collaborationWith> ?associatedArtist . }
}

# Step 3: Identify Joseph Michael's band
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Joseph_Michael_(musician)> <http://dbpedia.org/ontology/memberOf> ?band .
}

# Step 4: Find the reference to ""Nevermore (2006 film)"" and determine the associated artist or band member
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://dbpedia.org/ontology/reference> ?reference .
    ?reference <http://dbpedia.org/property/name> ""Nevermore"" . # Ensures it's the correct reference
    OPTIONAL { ?reference <http://dbpedia.org/ontology/memberOf> ?band . }
    OPTIONAL { ?reference <http://dbpedia.org/ontology/collaborationWith> ?associatedArtist . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,25,test,Give me the native of Japan and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
SELECT ?team ?manager WHERE {
    <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team .
    ?team <http://dbpedia.org/property/manager> ?manager .
    ?manager <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER(CONTAINS(LCASE(STR(?birthPlace)), ""japan""))
}
```",3,3,4,2,2,3,3,71,0,0,6,0,0.0,0
427,61,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Part 1: Party of Romano Prodi
SELECT ?party WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Romano Prodi"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?person <http://dbpedia.org/property/politicalParty> ?party .
}

UNION

# Part 2: Party of the father of an MIT alumnus
SELECT ?fatherParty WHERE {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?alumnus <http://dbpedia.org/property/father> ?father .
    OPTIONAL { ?father <http://dbpedia.org/property/politicalParty> ?fatherParty . }
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
626,18,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Part 1: Find awardees of awards received by Aleksey Petrovich Yermolov
SELECT ?award ?otherAwardee WHERE {
    <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov>)
}

# Part 2: Find commander in the force of the commander in Battle of Paris (1814)
SELECT ?commanderInBattleOfParis ?force WHERE {
    ?battle <http://dbpedia.org/ontology/battleCommander> ?commanderInBattleOfParis .
    FILTER(STR(?battle) = ""http://dbpedia.org/resource/Battle_of_Paris_(1814)"")
    
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?force <http://dbpedia.org/ontology/battleCommander> ?commanderInBattleOfParis .
}

# Combine results to find entities that satisfy both conditions
SELECT DISTINCT ?otherAwardee WHERE {
    # Awardees of Yermolov's awards
    { 
        <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?award .
        ?otherAwardee <http://dbpedia.org/property/awards> ?award .
        FILTER(?otherAwardee != <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov>)
    }
    
    # Commanders in the force of Battle of Paris (1814) commander
    {
        ?battle <http://dbpedia.org/ontology/battleCommander> ?commanderInBattleOfParis .
        FILTER(STR(?battle) = ""http://dbpedia.org/resource/Battle_of_Paris_(1814)"")
        
        ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
        ?force <http://dbpedia.org/ontology/battleCommander> ?commanderInBattleOfParis .
    }
    
    # Find intersection
    FILTER(?otherAwardee = ?commanderInBattleOfParis)
}
```",5,6,6,3,2,3,2,20,0,0,23,0,0.0,0
959,48,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of Takashi Sekizuka.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . }","```sparql
SELECT ?member WHERE {
    ?person <http://dbpedia.org/property/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear>.
    ?person <http://dbpedia.org/ontology/teamManager> <http://dbpedia.org/resource/Takashi_Sekizuka>.
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater.
    
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization>.
    ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan>.

    ?member <http://dbpedia.org/ontology/memberOf> ?almaMater.
}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
754,20,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of the parent of the parent of Min Linka.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
SELECT ?greatGrandparent WHERE {
    ?child <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> .
    ?parent <http://dbpedia.org/ontology/child> ?child .
    
    ?minLinka <http://dbpedia.org/ontology/birthName> ""Min Linka"" .
    ?linkaParent <http://dbpedia.org/ontology/child> ?minLinka .
    ?grandparent <http://dbpedia.org/ontology/child> ?linkaParent .
    ?greatGrandparent <http://dbpedia.org/ontology/child> ?grandparent .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
528,62,test,"Give me the force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
SELECT ?narcisoForce ?chileEvent ?commanderWar WHERE {
    # Find Narciso Campero's military force
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?narcisoForce .

    # Find societal event in Chile and its military force
    ?chileEvent <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Chile> .
    ?chileEvent <http://dbpedia.org/ontology/militaryForce> ?eventForce .

    # Find commander's war on January 9th
    ?work <http://dbpedia.org/property/battleDate> ""2001-01-09""^^xsd:date .
    ?commander <http://dbpedia.org/ontology/commander> ?work .
    ?commander <http://dbpedia.org/ontology/militaryForce> ?commanderForce .
    ?commanderForce <http://dbpedia.org/property/war> ?commanderWar .

    # Optional: Find common military forces
    OPTIONAL { ?narcisoForce = ?eventForce }
    OPTIONAL { ?narcisoForce = ?commanderForce }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
767,70,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> ?v4 . }","```sparql
SELECT ?settlement WHERE {
    # Step 1: Find the fictional character associated with Matthew Burland and its alter ego
    ?character <http://dbpedia.org/ontology/allegedAlterEgo> ?alterEgo .
    ?burland <http://dbpedia.org/property/persona> ?character .
    FILTER(?burland = <http://dbpedia.org/resource/Matthew_Burland>) .

    # Step 2: Find the alma mater related to George Kilbon Nash's administration
    ?nashAdmin <http://dbpedia.org/ontology/almaMater> ?almaMater .
    FILTER(?nashAdmin = <http://dbpedia.org/resource/George_Kilbon_Nash>) .

    # Step 3: Identify the settlement in Green's administration
    ?greenAdmin <http://dbpedia.org/ontology/administration> ?settlement .
    FILTER(?greenAdmin = <http://dbpedia.org/resource/Green>) .

    # Combine elements to find a settlement with references to both alter ego and alma mater
    ?settlement <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?alterEgo ;
                <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?almaMater .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
392,25,test,"Give me the province of Schio and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# 1. Province of Schio
SELECT ?province WHERE {
    <http://dbpedia.org/resource/Schio> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?province .
}

# 2. Region of the Time Zone (Central European Time)
SELECT ?region WHERE {
    <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/country> ?country .
    ?country <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region .
}

# 3. Time Zone of a Sports Event in Aguilar de Segarra
SELECT ?event ?timeZone WHERE {
    ?event <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Aguilar_de_Segarra> ;
           <http://dbpedia.org/ontology/timeZone> ?timeZone .
}

# 4. Entity in the Region, that is a Country, of Central European Time
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/country> ?country .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,23,test,"Give me the reference to the author of Blinded by the Light and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
SELECT ?authorOfBlindedByTheLight ?writerOfDaveFlettsAlbum WHERE {
  # Find the author of ""Blinded by the Light""
  <http://dbpedia.org/resource/Blinded_by_the_Light_(song)> dbo:lyrics ?lyrics .
  ?lyrics dbo:creator ?authorOfBlindedByTheLight .

  # Find the writer for an album associated with Dave Flett
  ?album dbo:artist <http://dbpedia.org/resource/Dave_Flett> ;
         dbo:writer ?writerOfDaveFlettsAlbum .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
547,45,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?awardee ?restingPlace WHERE {
    # Find awardees of Gerald Graham's awards
    { 
        <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?award .
        ?awardee <http://dbpedia.org/property/awards> ?award .
        FILTER(?awardee != <http://dbpedia.org/resource/Gerald_Graham>)
    }
    
    UNION
    
    # Directly find resting places for James Burton (Egyptologist) and Simon Cadell
    {
        VALUES ?person { 
            <http://dbpedia.org/resource/James_Burton_(Egyptologist)> 
            <http://dbpedia.org/resource/Simon_Cadell> 
        }
        ?person <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
    }

    # Get the resting place for each awardee
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/deathPlace> ?restingPlace . }
}
```",5,5,6,3,3,3,3,71,0,2182,1,0.0,0.0,0
391,51,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
# Step 1: Find Michael Ballhaus's claim to fame (work)
SELECT ?fame WHERE {
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/notableWorks> ?fame .
}

# Step 2: Get actors of the identified work
SELECT DISTINCT ?actor WHERE {
    ?fame <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 3: Find movies that are both a movie and a television show
SELECT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TVEpisode> .
}

# Step 4: Get professionals involved in these movies
SELECT DISTINCT ?professional WHERE {
    ?movie <http://dbpedia.org/property/director> ?professional .
}
```",5,9,6,3,2,3,3,71,0,0,11,0,0.0,0
391,59,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
SELECT ?native WHERE {
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> ;
          <http://dbpedia.org/ontology/work> ?spouse .
    ?actor <http://dbpedia.org/ontology/starring> ?work .
    ?figure <http://dbpedia.org/property/nickName> ""Jackson, Tennessee"" .
    ?figure <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?figure <http://dbpedia.org/ontology/nativePlace> ?native .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,66,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
# Step 1: Get Satomi Ishihara's profession
SELECT ?profession WHERE {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .
}

# Step 2: Find Ted McGinley's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/spouse> ?spouse .
}

# Step 3: Identify an alumnus of Ohio State University by birth name and find their spouse
SELECT ?alumnus ?birthName ?spouse WHERE {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University>.
    ?alumnus <http://xmlns.com/foaf/0.1/name> ?birthName .
    ?alumnus <http://dbpedia.org/property/spouse> ?spouse .
}

# Step 4: Check for common professional link
SELECT DISTINCT ?commonProfession WHERE {
    # Assuming we have identified the spouse from step 2 and 3 as ?person1 and ?person2
    OPTIONAL { ?person1 <http://dbpedia.org/ontology/profession> ?commonProfession . }
    OPTIONAL { ?person2 <http://dbpedia.org/ontology/profession> ?commonProfession . }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
421,22,test,Give me the native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
# Step 1: Find Samir Bekrić's birthplace
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Step 2: Find natives of that birthplace
SELECT DISTINCT ?native WHERE {
    ?birthPlace <http://dbpedia.org/ontology/nativeOf> ?native .
}

# Step 3 and 4: Identify awards/nominations related to a band member and find awardees
SELECT DISTINCT ?awardee WHERE {
    ?bandMember <http://dbpedia.org/property/bandMember> ?band .
    ?band <http://dbpedia.org/ontology/award> ?award .
    ?awardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?awardee != ?bandMember)
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
54,30,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?individual ?predecessor WHERE {
    ?individual <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thihapate_of_Mohnyin>.
    ?individual <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
    ?individual <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Royalty>.
    ?individual <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thinkhaya_of_Pagan>.
    ?individual <http://dbpedia.org/ontology/spouse> ?spouse.
    ?spouse <http://dbpedia.org/ontology/offspring> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome>.
    
    OPTIONAL { ?individual <http://dbpedia.org/ontology/predecessor> ?predecessor. }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,53,test,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?joaquinBlakeWar ?commanderClaimToFame ?carlPontusGahnWar WHERE {
  # Joaquín Blake's wars
  <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?joaquinBlakeWar .

  # Commander in Great Siege of Gibraltar and their claim to fame
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> .
  OPTIONAL { ?commander <http://dbpedia.org/property/awards> ?award . }
  BIND(CONCAT(""Award: "", STR(?award)) AS ?commanderClaimToFame)

  # Person born as Carl Pontus Gahn and their wars
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn""@en .
  ?person <http://dbpedia.org/ontology/battle> ?carlPontusGahnWar .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
801,59,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?producer WHERE {
    ?trueSelf <http://dbpedia.org/ontology/alternateName> ""The Shadow"" .
    ?trueSelf <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?trueSelf <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Rapper> .

    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
    ?work <http://purl.org/dc/terms/creator> ?trueSelf .

    ?work <http://dbpedia.org/property/producer> ?producer .
}
```",6,10,7,3,2,3,3,71,0,0,473,0,0.0,0
767,68,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
SELECT ?alterEgo ?settlement WHERE {
    # Step 1: Identify the writer of ""Where It's At"" (Dustin Lynch album)
    ?album <http://dbpedia.org/property/writer> ?writer .
    FILTER(STR(?album) = ""Where_It's_At_(Dustin_Lynch_album)"")

    # Step 2: Find the alma mater of the administration of George Kilbon Nash
    ?nash <http://dbpedia.org/ontology/administration> ?administration .
    FILTER(STR(?nash) = ""George_Kilbon_Nash"")
    
    ?administration <http://dbpedia.org/property/almaMater> ?almaMater .

    # Step 3: Identify the alter ego of Black Hood
    ?blackHood <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
    FILTER(STR(?blackHood) = ""Black_Hood"")

    # Step 4: Find a settlement in the administration related to step 2
    ?administration <http://dbpedia.org/property/settlement> ?settlement .

    # Combine these elements
    FILTER(?writer = ?almaMater)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,66,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?producer WHERE {
    # Step 1: Find the album ""What U See Is What U Get""
    <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> <http://purl.org/dc/terms/creator> ?writer .
    
    # Step 2: Ensure the writer is a musical artist and an artist
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    
    # Step 3: Find the associated musical artist (alter ego) known as The Shadow
    ?writer <http://dbpedia.org/property/professionalName> ""The Shadow"" ;
            <http://dbpedia.org/ontology/associatedMusicalArtist> ?shadowArtist .
    
    # Step 4: Identify the work that is a song by 50 Cent and this alter ego
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> ;
          <http://dbpedia.org/ontology/Song> ;
          <http://dbpedia.org/property/artist> ?artist .
    FILTER(?artist = <http://dbpedia.org/resource/50_Cent> || ?artist = ?shadowArtist)
    
    # Step 5: Find the producer of this work
    ?work <http://dbpedia.org/ontology/producer> ?producer .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
378,32,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
SELECT ?war1 ?war2 WHERE {
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>;
             <http://dbpedia.org/ontology/battle> ?battle.
  FILTER(?battle = <http://dbpedia.org/resource/Peninsular_War>)
  
  ?war1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Battle>;
        <http://dbpedia.org/property/battles> ?commander.
  
  <http://dbpedia.org/resource/C._P._Gahn> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>;
                                         <http://dbpedia.org/ontology/battle> ?war2.
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
9,23,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . },"```sparql
SELECT ?almaMater WHERE {
    ?belfast <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast""@en .
    ?belfast <http://dbpedia.org/ontology/city> ?organization .
    ?mayor <http://dbpedia.org/ontology/mayor> ?organization ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
328,53,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> ;
            <http://dbpedia.org/ontology/leader> ?person ;
            <http://dbpedia.org/property/minister> <http://dbpedia.org/resource/Joseph_Stalin> .
    ?person <http://dbpedia.org/property/awards> ?award1, ?award2 .
    ?battle1 <http://dbpedia.org/ontology/battle> ?award1 ;
              <http://dbpedia.org/ontology/name> ""Volcano and Ryukyu Islands campaign""@en .
    ?battle2 <http://dbpedia.org/ontology/battle> ?award2 ;
              <http://dbpedia.org/ontology/name> ""Volcano and Ryukyu Islands campaign""@en .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,70,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","```sparql
# Step 1: Identify Joseph C. Satterthwaite's workplace
SELECT ?workplace WHERE {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/workFor> ?workplace .
}

# Step 2: Find the commander in a war who also commanded in Battle of Verdun
SELECT DISTINCT ?commander ?war WHERE {
    ?commander <http://dbpedia.org/property/commanded> <http://dbpedia.org/resource/Battle_of_Verdun> .
    ?commander <http://dbpedia.org/property/commanded> ?war .
    FILTER(?war != <http://dbpedia.org/resource/Battle_of_Verdun>)
}

# Step 3: Identify the capital of Khemis Miliana District's country
SELECT ?capital WHERE {
    ?district <http://dbpedia.org/ontology/country> ?country .
    ?country <http://dbpedia.org/property/administrativeCapital> ?capital .
    FILTER(?district = <http://dbpedia.org/resource/Khemis_Miliana_District>)
}

# Step 4: Find the person decedent at the identified capital
SELECT ?decedent WHERE {
    ?decedent <http://dbpedia.org/ontology/deathPlace> ?capital .
}

# Final Query: Combine all conditions to find the common individual
SELECT DISTINCT ?person WHERE {
    # Decedent at Joseph C. Satterthwaite's workplace
    ?person <http://dbpedia.org/ontology/deathPlace> ?workplace .

    # Commander in both identified war and Battle of Verdun
    ?person <http://dbpedia.org/property/commanded> <http://dbpedia.org/resource/Battle_of_Verdun> .
    ?person <http://dbpedia.org/property/commanded> ?war .

    # Decedent at the capital of Khemis Miliana District's country
    ?person <http://dbpedia.org/ontology/deathPlace> ?capital .

    # Join conditions from previous queries
    VALUES (?workplace) { (<#workplace_uri_from_step_1>) }
    VALUES (?war) { (<#war_uri_from_step_2>) }
    VALUES (?capital) { (<#capital_uri_from_step_3>) }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
184,70,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
# Step 1: Find Archduke Ladislaus Philipp's royal parent
SELECT ?royalParent WHERE {
    <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/birthParent> ?parent .
    ?parent <http://www.w3.org/2002/07/owl#sameAs> ?royalParent .
    ?royalParent a <http://dbpedia.org/ontology/Royalty> .
}

# Step 2: Find the child of this royal parent
SELECT ?child WHERE {
    ?royalParent <http://dbpedia.org/ontology/child> ?child .
}

# Step 3: Find the grandchild (child of the child)
SELECT ?grandChild WHERE {
    ?child <http://dbpedia.org/ontology/child> ?grandChild .
}

# Step 4: Find Archduchess Margaret's parent
SELECT ?parentMargaret WHERE {
    <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://dbpedia.org/ontology/birthParent> ?parentMargaret .
}

# Step 5: Find the grandchild of this parent
SELECT ?grandChildMargaret WHERE {
    ?parentMargaret <http://dbpedia.org/ontology/child> ?childMargaret .
    ?childMargaret <http://dbpedia.org/ontology/child> ?grandChildMargaret .
}

# Step 6: Find the native of Budapest's parent
SELECT ?budaParent WHERE {
    ?native a <http://dbpedia.org/ontology/Person> ;
            <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Hungary> ;
            <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
    ?native <http://dbpedia.org/ontology/birthParent> ?budaParent .
}

# Step 7: Find the common entity
SELECT ?finalChild WHERE {
    ?grandChild <http://dbpedia.org/ontology/child> ?finalChild .
    ?finalChild <http://dbpedia.org/ontology/parent> ?grandChildMargaret .
    ?finalChild <http://dbpedia.org/ontology/parent> ?budaParent .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
492,58,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . },"```sparql
# Find person decedent at French Algeria
SELECT ?person WHERE {
  ?event <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria>.
  ?event <http://dbpedia.org/ontology/personDecedent> ?person.
}

UNION

# Find person decedent at the capital of Khemis Miliana District
SELECT ?person WHERE {
  ?district <http://dbpedia.org/property/capital> ?capital .
  FILTER(?district = <http://dbpedia.org/resource/Khemis_Miliana_District>)
  ?event <http://dbpedia.org/ontology/deathPlace> ?capital.
  ?event <http://dbpedia.org/ontology/personDecedent> ?person.
}

UNION

# Find commander in the war of Frédéric-Georges Herr
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/property/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/militaryConflict> ?war .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,50,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?spouse WHERE {
    ?antiochus <http://www.w3.org/2000/01/rdf-schema#label> ""Antiochus (son of Antiochus III the Great)"" .
    ?successor <http://dbpedia.org/ontology/successor> ?antiochus ;
               <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""royalty"")) .

    ?child <http://dbpedia.org/ontology/parent> ?successor ;
           <http://dbpedia.org/property/spouse> ?spouse .

    ?otherChild <http://dbpedia.org/ontology/parent> ?antiochus .
    FILTER(?child != ?otherChild)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
345,18,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15 and figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.","SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
# Step 1: Find the person born on 1978-09-15 who is both a soccer player and manager.
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?person <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(CONTAINS(str(?profession), ""soccer player"") && CONTAINS(str(?profession), ""soccer manager""))
}

# Step 2: Find the team associated with this person.
SELECT ?team WHERE {
    ?person <http://dbpedia.org/property/team> ?team .
}

# Step 3: Find Armando Heeb's player nickname and ensure it belongs to a sports club that is also an organization and soccer club.
SELECT ?playerNickName WHERE {
    ?player <http://www.w3.org/2000/01/rdf-schema#label> ""Armando Heeb"" .
    ?player <http://dbpedia.org/ontology/nickname> ?playerNickName .
    ?club <http://dbpedia.org/property/player> ?player .
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub> .
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
528,59,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
SELECT DISTINCT ?war1 ?war2 WHERE {
  # Part 1: Find societal event in Chile involving military force
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?militaryForce <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  
  # Part 2: Find war associated with a commander in a work dated --01-09
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?work <http://dbpedia.org/property/date> ""----01-09""^^xsd:date .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?work <http://dbpedia.org/property/subject> ?battle .

  # Combine results to find wars
  ?militaryForce <http://dbpedia.org/ontology/battle> ?war1 .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Battle> .
  BIND(?battle AS ?war2)
}
```",6,7,7,3,2,3,3,71,0,0,14,0,0.0,0
281,50,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?entity WHERE {
    # Step 1: Heather Roy's profession as a military unit
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>) .

    # Step 2: Wars associated with the military unit
    ?profession <http://dbpedia.org/property/wars> ?war .

    # Step 3: Leader of the 1962 New South Wales state election
    <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/ontology/leader> ?leader .
    FILTER(?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>) .

    # Step 4: Birthplace country of the leader
    ?leader <http://dbpedia.org/property/birthPlace> ?birthPlace .
    FILTER(?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>) .

    # Step 5: Entities in that country
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER(?entity != ?birthPlace) .
    FILTER(STRSTARTS(STR(?entity), STR(?birthPlace)))
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,52,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
# Step 1: Find Bob Heffron's birthplace country
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
    FILTER(STRSTARTS(STR(?country), ""http://dbpedia.org/resource/"") && 
           EXISTS { ?country a <http://dbpedia.org/ontology/Country> })
}

UNION

SELECT DISTINCT ?entity WHERE {
    # Step 2: Find wars involving the New Zealand Army
    ?nzArmy <http://dbpedia.org/property/battle> ?war .
    
    # Step 3: Find wars related to Jonathon Band's awards
    ?jonBand <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/ontology/battle> ?war .

    # Step 4: Find common entities
    VALUES ?country { 
        ?country1 # Result from Step 1
    }
    
    ?entity a <http://dbpedia.org/ontology/Country> .
    FILTER(?entity = ?country || ?entity IN (?war))
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,48,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
SELECT ?officeLeader WHERE {
    ?agency <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Joseph_Stalin> .
    ?commander <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
    ?commander <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    ?agency2 <http://dbpedia.org/ontology/leader> ?officeLeader .
    FILTER(?agency = ?agency2)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
391,71,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v1 . ?v7 <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v8 <http://dbpedia.org/property/starring> ?result . ?v8 <http://dbpedia.org/property/starring> ?v7 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v4 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Identify Sherry Hormann's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Find the claim to fame of Sherry Hormann's spouse
SELECT ?claimToFame WHERE {
    ?spouse <http://dbpedia.org/ontology/notableWorks> ?claimToFame .
}

# Step 3: Identify the actor associated with this claim to fame
SELECT ?actor WHERE {
    ?claimToFame <http://dbpedia.org/property/starring> ?actor .
}

# Step 4: Find the movie involving this actor
SELECT DISTINCT ?movie WHERE {
    ?actor <http://dbpedia.org/ontology/film> ?movie .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie110175124> .
}

# Step 5: Identify another actor from this movie
SELECT DISTINCT ?anotherActor WHERE {
    ?movie <http://dbpedia.org/ontology/starring> ?anotherActor .
}

# Step 6: Determine the nickname associated with Jackson, Tennessee
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/property/nicknames> ?nickname .
}

# Step 7: Find the native of this nickname
SELECT ?native WHERE {
    ?person <http://xmlns.com/foaf/0.1/nick> ?nickname .
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jackson,_Tennessee> .
    ?person <http://dbpedia.org/ontology/starring> ?movie .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
659,24,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?event ?commander WHERE {
    <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?event .
    ?event rdf:type <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
    ?event rdf:type <http://dbpedia.org/class/yago/Event108069068> .
    ?event <http://dbpedia.org/property/commander> ?commander .
    ?event <http://dbpedia.org/ontology/battleOf> ?war .
    ?war rdfs:label ""Napoleonic Wars""@en .
}
```",3,5,4,2,2,3,3,71,0,0,29,0,0.0,0
232,62,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
SELECT ?actor WHERE {
    # Step 1: Identify Jon Pertwee's birth name
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?birthName .

    # Step 2: Find Jon Pertwee's child who is a professional actor, narrator, and producer native to London
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?child <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/London> .
    ?child <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(CONTAINS(?profession, ""Actor"") && CONTAINS(?profession, ""Narrator"") && CONTAINS(?profession, ""Producer"")) .
    ?child <http://dbpedia.org/property/father> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Jon_Pertwee> .

    # Step 3: Identify claim to fame involving a film and a military conflict
    ?child <http://dbpedia.org/property/claimToFame> ?claimToFame .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER(CONTAINS(?type, ""Film"") && CONTAINS(?type, ""Military conflict"")) .

    # Step 4: Find the actor associated with this claim to fame
    ?claimToFame <http://dbpedia.org/property/actor> ?actor .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
659,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?militaryForce WHERE {
    ?officeHolder <http://dbpedia.org/ontology/nativeCountry> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
    ?force <http://dbpedia.org/property/commandedBy> ?officeHolder .
    
    ?unitOrOrg <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
               <http://dbpedia.org/ontology/Organisation> ;
               <http://dbpedia.org/property/nickname> ""Polish Horse"" .
    ?unitOrOrg <http://dbpedia.org/ontology/commander> ?commander .
    
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
         <http://dbpedia.org/property/event> ?event ;
         <http://dbpedia.org/property/battle> ?battle .
    ?war <http://dbpedia.org/property/commander> ?commander .

    ?reference <http://dbpedia.org/ontology/referencedIn> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>,
                          <http://dbpedia.org/ontology/Event>,
                          <http://dbpedia.org/ontology/MilitaryConflict> .
    
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
                    <http://dbpedia.org/property/commandedBy> ?commander ;
                    <http://dbpedia.org/property/battle> ?battle .
}
```",9,17,10,3,3,3,3,71,0,0,15,0,0.0,0
427,46,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . },"```sparql
SELECT ?michelePintoParty ?fatherName ?fathersParty WHERE {
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalParty> ?michelePintoParty .
    
    OPTIONAL {
        <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
        ?father rdfs:label ?fatherName .
        ?father <http://dbpedia.org/ontology/politicalParty> ?fathersParty .
    }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
161,62,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Find predecessor of Indalecio Prieto
SELECT ?predecessor WHERE {
    <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 2: Identify military force associated with the predecessor
SELECT ?militaryForce1 WHERE {
    ?predecessor <http://dbpedia.org/property/battle> ?event .
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/SocietalEvent> <http://dbpedia.org/ontology/MilitaryConflict>) .
    ?militaryForce1 <http://dbpedia.org/property/battle> ?event .
}

# Step 3: Identify person decedent at Francoist Spain
SELECT ?decedent WHERE {
    ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> .
}

# Step 4: Identify military force associated with the decedent
SELECT ?militaryForce2 WHERE {
    ?decedent <http://dbpedia.org/property/battle> ?event .
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/SocietalEvent> <http://dbpedia.org/ontology/Event> <http://dbpedia.org/ontology/MilitaryConflict>) .
    ?militaryForce2 <http://dbpedia.org/property/battle> ?event .
}

# Step 5: Find commander in Biscay Campaign
SELECT ?commander WHERE {
    ?campaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?campaign <http://dbpedia.org/property/name> ""Biscay Campaign"" .
    ?campaign <http://dbpedia.org/property/commander> ?commander .
    FILTER(?militaryForce1 = ?militaryForce2)
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
435,25,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v4 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
SELECT ?territory WHERE {
    ?island <http://dbpedia.org/ontology/nickName> ""Land of fire and ice"" .
    ?island <http://www.w3.org/2000/01/rdf-schema#label> ""Iceland""@en .
    
    ?constitution <http://dbpedia.org/property/article> ""62"" ;
                   <http://dbpedia.org/property/section> ""IV"" ;
                   <http://dbpedia.org/ontology/subjectOf> ?territory .

    ?chiefdom <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://www.w3.org/2000/01/rdf-schema#label> ""GMT""@en .
    ?chiefdom <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Bombali_Shebora_Cheifdom> .

    FILTER(?territory = ?island)
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,35,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT DISTINCT ?war WHERE {
  # Heather Roy's profession as a military unit and associated war
  OPTIONAL {
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?militaryUnit .
    ?militaryUnit <http://dbpedia.org/property/battles> ?war .
  }

  # Awardee of Knight Grand Cross of the Order of the Bath and associated war
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
    ?awardee <http://dbpedia.org/property/battles> ?war .
  }
}
```",4,5,5,2,2,3,3,71,9,454,0,0.019438444924406047,1.0,0.038135593220338986
281,69,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Part 1: Find wars associated with awardees of Jonathon Band's awards
SELECT DISTINCT ?war WHERE {
    # Step 1: Identify Jonathon Band's Awards
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?award .
    
    # Step 2: Find Awardees of Those Awards
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    
    # Step 3: Determine Wars Associated with These Awardees
    ?otherAwardee <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Part 2: Find wars associated with New Zealand Army politicians from Bob Heffron's birthplace country
SELECT DISTINCT ?war WHERE {
    # Step 4: Identify Bob Heffron's Birthplace Country
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .

    # Step 5: Find Entities in That Country
    ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
    
    # Step 6: Identify New Zealand Army Politicians
    ?entity <http://dbpedia.org/ontology/profession> ?profession .
    ?profession <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/New_Zealand_Army> .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?entity <http://dbpedia.org/ontology/officeHolder> ?office .

    # Step 7: Determine Wars Associated with These Politicians
    ?entity <http://dbpedia.org/ontology/battle> ?war .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
547,69,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?result WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    ?grandchild <http://dbpedia.org/ontology/birthPlace> ?child .
    ?child <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?result .
  }
  
  UNION
  
  # Resting place of the awardee of the award of Gerald Graham
  {
    ?award <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gerald_Graham> .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Gerald_Graham>)
    ?otherAwardee <http://dbpedia.org/ontology/deathPlace> ?result .
  }
  
  UNION
  
  # Resting place of the actor of ""Enemy at the Door""
  {
    ?actor <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Enemy_at_the_Door> .
    ?actor <http://dbpedia.org/ontology/deathPlace> ?result .
  }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
492,65,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Part 1: Person Decedent at the Work of Joseph C. Satterthwaite
SELECT ?successor WHERE {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/officeHolder> ?position .
    ?position <http://dbpedia.org/property/successor> ?successor .
}

# Part 2: Person Decedent at the Capital of Algeria
SELECT ?leader WHERE {
    <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?capital .
    ?capital <http://dbpedia.org/property/governmentHead> ?leader .
}

# Part 3: Commander in the War involving the Commander in Battle of Verdun
SELECT DISTINCT ?warCommander WHERE {
    ?verdunCommander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Verdun> .
    ?verdunCommander <http://dbpedia.org/ontology/commander> ?war .
    ?war <http://www.w3.org/2002/07/owl#sameAs> ?warCommander .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
981,16,test,"Give me the entity in the region of Time in Indonesia and birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
SELECT ?beautyQueen ?birthPlace ?region WHERE {
    ?beautyQueen <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Indonesia> .
    ?birthPlace <http://dbpedia.org/ontology/timeZone> ?region .
    ?beautyQueen <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/BeautyQueen108930069> .
}
```",4,5,5,2,2,3,2,20,0,0,19,0,0.0,0
391,35,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?native WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Hub City""@en .
    ?movie <http://dbpedia.org/ontology/starring> ?person ;
           <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
    ?movie a <http://dbpedia.org/ontology/Film> .
    ?movie a <http://dbpedia.org/ontology/Work> .
    ?movie a <http://dbpedia.org/ontology/TVEpisode> .
    ?person <http://dbpedia.org/ontology/nativePlace> ?native .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
485,27,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT DISTINCT ?awardee ?birthPlace WHERE {
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet> .
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  OPTIONAL {
    ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?region .
    FILTER EXISTS { ?region a <http://dbpedia.org/ontology/Region> }
  }

  FILTER NOT EXISTS {
    ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> .
  }
}
```",5,8,6,2,3,2,3,28,1,14,0,0.06666666666666667,1.0,0.125
435,23,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of the author of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . }","```sparql
SELECT ?territory WHERE {
    <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/ontology/administrativeTerritory> ?territory .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
378,42,test,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?carlGahnWar ?commanderFame ?joaquinBlakeWar WHERE {
  # War of Carl Pontus Gahn
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?carlGahnWar .

  # Commander in Great Siege of Gibraltar and their claim to fame
  OPTIONAL {
    ?greatSiege dbpedia-owl:commander ?commander .
    ?commander dbpedia-owl:notableworks ?commanderFame .
    FILTER(STRSTARTS(STR(?greatSiege), ""http://dbpedia.org/resource/Great_Siege_of_Gibraltar""))
  }

  # War of Joaquín Blake
  <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?joaquinBlakeWar .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
360,25,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v3 <http://dbpedia.org/property/writer> ?result . }","```sparql
# Step 1: Find albums associated with Dave Flett
SELECT ?album WHERE {
    ?album <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Dave_Flett> .
}

# Step 2: Find the writer of those albums
SELECT DISTINCT ?writer WHERE {
    ?album <http://dbpedia.org/property/writer> ?writer .
    ?album <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Dave_Flett> .
}

# Step 3: Ensure the writer has a reference to Manfred Mann
SELECT DISTINCT ?writer WHERE {
    ?writer <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Manfred_Mann> .
    ?album <http://dbpedia.org/property/writer> ?writer .
    ?album <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Dave_Flett> .
}

# Step 4: Find the death place of Winnie Madikizela-Mandela
SELECT ?deathPlace WHERE {
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}

# Step 5: Find a native of that death place who matches the criteria
SELECT DISTINCT ?native WHERE {
    ?native <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?deathPlaceLabel .
    ?writer <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Manfred_Mann> .
    ?album <http://dbpedia.org/property/writer> ?writer .
    ?album <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Dave_Flett> .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
318,9,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
# Step 1: Find the profession of Robert Xavier Rodriguez
SELECT ?profession WHERE {
    <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://purl.org/dc/terms/profession> ?profession .
}

# Step 2: Find the founding year of Eel Pie Publishing
SELECT ?foundingYear WHERE {
    <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingDate> ?foundingYear .
}

# Step 3: Find a person with the same profession and born in the founding year of Eel Pie Publishing
SELECT DISTINCT ?person WHERE {
    # Get the profession from step 1
    ?robertXavierRodriguez <http://purl.org/dc/terms/profession> ?profession .
    
    # Get the founding year from step 2
    ?eelPiePublishing <http://dbpedia.org/ontology/foundingDate> ?foundingYear .

    # Find a person with the same profession and born in that year
    ?person <http://purl.org/dc/terms/profession> ?profession .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    
    # Filter by birth year
    BIND(YEAR(?birthDate) AS ?birthYear)
    FILTER(?birthYear = ?foundingYear)
}
```",4,4,5,2,2,2,2,9,0,0,7,0,0.0,0
701,55,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II> .
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ramesses_II> .
    ?merneptah <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ramesses_II> .
    ?nephertariChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nefertari> .
    FILTER(?spouse = <http://dbpedia.org/resource/Nefertari>)
    BIND(?spouse AS ?parent)
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
285,20,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?parent ?spouseOfProfessional WHERE {
    # Step 1: Find Aristotle Onassis's spouse
    <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/property/spouse> ?spouse .
    
    # Step 2: Find the child of that spouse
    ?spouse <http://dbpedia.org/ontology/child> ?child .
    
    # Step 3: Determine the parent of that child
    ?parent <http://dbpedia.org/ontology/child> ?child .
    
    # Step 4: Identify the professional associated with an award received by Stan Lee
    <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?award .
    ?professional <http://dbpedia.org/property/awards> ?award .
    
    # Step 5: Find the spouse of that professional
    ?professional <http://dbpedia.org/property/spouse> ?spouseOfProfessional .
}
```",6,6,7,3,2,3,2,20,3,1813,0,0.0016519823788546256,1.0,0.003298515667949423
487,18,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of the person born on 1955-01-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?administration1 ?country WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Philip Brian Scott"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?person <http://dbpedia.org/property/administration> ?administration1 .

    OPTIONAL {
        ?person2 <http://www.w3.org/2000/01/rdf-schema#label> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> .
        ?person2 <http://dbpedia.org/property/administration> ?administration2 .
        ?administration2 <http://dbpedia.org/ontology/country> ?country .
    }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
465,9,test,"Give me the death place of the native of Prague and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
# Step 1: Find the leader of the Chamber of Deputies of the Czech Republic
SELECT ?leader WHERE {
    ?v0 <http://dbpedia.org/ontology/leader> ?leader .
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?v0 <http://dbpedia.org/ontology/politicalParty> ?party .
    ?v0 <http://dbpedia.org/resource/Czech_Parliament> <http://dbpedia.org/property/chamberOfDeputies> ?chamber .
}

# Step 2: Determine the administration of this leader
SELECT DISTINCT ?administration WHERE {
    ?leader <http://dbpedia.org/ontology/administration> ?administration .
}

# Step 3: Find natives of Prague and their death places
SELECT ?person ?deathPlace WHERE {
    ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Czech_Republic>.
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague>.
    OPTIONAL { ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace . }
}
```",4,6,5,2,2,2,2,9,0,0,8,0,0.0,0
161,69,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?militaryForce WHERE {
    # Step 1: Identify the person decedent at Francoist Spain
    ?personDecedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> .
    
    # Step 2: Find the military conflict associated with their death
    ?militaryConflict1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
                      <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
                      <http://dbpedia.org/ontology/death> ?personDecedent .
    
    # Step 3: Identify Francisco Largo Caballero and his associated military force
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/militaryForce> ?militaryConflict2 .
    
    # Ensure the conflict is a societal event and a military conflict
    ?militaryConflict2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
                       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    
    # Step 4: Identify ""El Director"" and find the event he commanded
    ?elDirector <http://xmlns.com/foaf/0.1/knowsAs> ""El Director""@en ;
                <http://dbpedia.org/property/commandedEvent> ?eventCommanded .
    
    # Find the commander of that event
    ?commander <http://dbpedia.org/ontology/commander> ?eventCommanded .
    
    # Step 5: Find the common military force between steps 2 and 3
    FILTER(?militaryConflict1 = ?militaryConflict2)
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
488,28,test,Give me the death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace ?administrationStart ?administrationEnd ?birthPlace WHERE {
  # Death place of Tokugawa Ieyasu
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  # Administration period of Emperor Go-Yōzei
  OPTIONAL { 
    <http://dbpedia.org/resource/Emperor_Go-Yozei> <http://dbpedia.org/property/reignStart> ?administrationStart .
    <http://dbpedia.org/resource/Emperor_Go-Yozei> <http://dbpedia.org/property/reignEnd> ?administrationEnd .
  }

  # Birth place of the commander in Boshin War
  {
    SELECT DISTINCT ?commander WHERE {
      ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
      ?battle <http://dbpedia.org/property/commander> ?commander .
    }
    OPTIONAL { 
      ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    }
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
701,68,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v5 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
SELECT ?parent WHERE {
    # Step 1: Find a child of Seti I
    ?childSetiI <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seti_I>.
    
    # Step 2: Find the grandchild (child of the child)
    ?grandChild <http://dbpedia.org/ontology/birthParent> ?childSetiI.
    
    # Step 3: Determine the parent of this grandchild
    ?parent <http://dbpedia.org/ontology/birthParent> ?grandChild.
    
    # Step 4: Identify Merneptah's father (spouse of Seti I)
    ?merneptahFather <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Seti_I>.
    
    # Step 5: Find Amun-her-khepeshef's spouse
    ?amunSpouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef>.
    
    # Step 6: Determine the child of this spouse
    ?childOfAmunSpouse <http://dbpedia.org/ontology/birthParent> ?amunSpouse.
    
    # Step 7: Identify the parent of this child
    FILTER(?parent = ?merneptahFather)
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
754,19,test,Give me the parent of the parent of May Hnin Htapi and parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
SELECT DISTINCT ?grandparentMayHninHtapi ?parentChildRamKhamhaeng WHERE {
  # Part 1: Parent of the parent of May Hnin Htapi
  ?parentMayHninHtapi <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/May_Hnin_Htapi> .
  ?grandparentMayHninHtapi <http://dbpedia.org/ontology/parent> ?parentMayHninHtapi .

  # Part 2: Parent of the child of Ram Khamhaeng the Great
  ?childRamKhamhaeng <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> .
  ?parentChildRamKhamhaeng <http://dbpedia.org/ontology/parent> ?childRamKhamhaeng
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
701,51,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?commander <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Battle_of_Perire> .
    ?father <http://dbpedia.org/ontology/father> ?commander .
    ?father <http://dbpedia.org/property/spouse> ?spouse .
    ?child <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother>> ?father .
    ?child <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother>> <http://dbpedia.org/resource/Ramesses_II> .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
747,48,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Identify Tracey Elizabeth McSween's resource
SELECT ?tracey WHERE {
    ?tracey <http://dbpedia.org/ontology/birthName> ""Tracey Elizabeth McSween"" .
}

# Step 2: Find the birth date of a decedent who is an athlete and soccer player from Zolotonosha
SELECT ?birthDate WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> ;
            <http://dbpedia.org/ontology/birthDate> ?birthDate ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>, <http://dbpedia.org/ontology/SoccerPlayer> .
}

# Step 3: Find any person with the same birth date
SELECT ?personWithSameBirthDate WHERE {
    ?personWithSameBirthDate <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER(?birthDate = ?birthDateFromStep2)
}

# Step 4: Determine if this person is associated with a band
SELECT DISTINCT ?band WHERE {
    ?personWithSameBirthDate <http://dbpedia.org/property/memberOf> ?band .
}
```

Note: This query assumes that the SPARQL endpoint supports chaining these queries or allows for intermediate results to be used in subsequent queries. Adjustments may be needed based on actual data availability and structure in DBpedia.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,52,test,"Give me the manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
# Step 1: Find Yōichi Masuzoe's native country
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
    FILTER(STRSTARTS(STR(?residence), ""http://dbpedia.org/resource/"") && 
           (STR(?residence) = STR(<http://dbpedia.org/resource/Japan>) || 
            EXISTS { ?residence <http://www.w3.org/2000/01/rdf-schema#label> ""Japan""@en } ))
    BIND(?residence AS ?country)
}

# Step 2: Find the person born in 1958 and their alma mater
SELECT ?person ?almaMater WHERE {
    ?person <http://dbpedia.org/property/birthYear> ""1958""^^xsd:gYear .
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
    FILTER(STRSTARTS(STR(?almaMater), ""http://dbpedia.org/resource/"") &&
           EXISTS { ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label . 
                    FILTER(CONTAINS(LCASE(?label), ""university"") && CONTAINS(LCASE(?label), ""japanese"")) } )
}

# Step 3: Find the manager of the 2013 Júbilo Iwata season
SELECT ?manager WHERE {
    <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/coach> ?manager .
}

# Final Query: Combine all conditions
SELECT DISTINCT ?manager WHERE {
    # Manager of 2013 Júbilo Iwata season
    <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/coach> ?manager .

    # Yōichi Masuzoe's native country
    <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?country .
    FILTER(STRSTARTS(STR(?country), ""http://dbpedia.org/resource/"") && 
           (STR(?country) = STR(<http://dbpedia.org/resource/Japan>) || 
            EXISTS { ?country <http://www.w3.org/2000/01/rdf-schema#label> ""Japan""@en } ))

    # Person born in 1958 and their alma mater
    ?person <http://dbpedia.org/property/birthYear> ""1958""^^xsd:gYear .
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
    FILTER(STRSTARTS(STR(?almaMater), ""http://dbpedia.org/resource/"") &&
           EXISTS { ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label . 
                    FILTER(CONTAINS(LCASE(?label), ""university"") && CONTAINS(LCASE(?label), ""japanese"")) } )

    # Ensure manager is from the same country and alma mater
    ?manager <http://dbpedia.org/ontology/nationality> ?country .
    ?manager <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
16,68,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
SELECT ?gigiBirthName ?tedBirthName ?spouse ?actor ?profession WHERE {
    # Step 1: Find Gigi Rice's birth name
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?gigiBirthName .

    # Step 2: Find Ted McGinley's birth name
    ?tedResource <http://dbpedia.org/property/birthName> ?tedBirthName .
    FILTER(?tedBirthName = ""Ted McGinley"") .

    # Step 3: Find the spouse of Ted McGinley using his resource
    ?tedResource <http://dbpedia.org/property/spouse> ?spouse .

    # Step 4: Identify the actor from ""Unnatural"" TV series and their profession
    ?unnaturalEpisode <http://dbpedia.org/ontology/starring> ?actor .
    FILTER(STRSTARTS(STR(?unnaturalEpisode), ""http://dbpedia.org/resource/Unnatural_(TV_series)"")) .
    ?actor <http://purl.org/dc/terms/profession> ?profession .

    # Step 5: Ensure the spouse is in the same profession as the actor
    ?spouse <http://purl.org/dc/terms/profession> ?sameProfession .
    FILTER(?sameProfession = ?profession)
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
328,57,test,"Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?person WHERE {
    # Step 1: Find commanders in Budapest
    ?force <http://dbpedia.org/ontology/commander> ?person .
    ?force <http://dbpedia.org/property/location> ""Budapest"" .

    # Step 2: Find leaders of government agencies under Stalin
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
    ?office <http://dbpedia.org/property/leader> ?person .
    ?office <http://dbpedia.org/property/duringLeader> <http://dbpedia.org/resource/Joseph_Stalin> .

    # Step 3: Check for Order of Suvorov awardees
    ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
161,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Step 1: Identify Indalecio Prieto's resource
SELECT ?prieto WHERE {
    ?prieto <http://dbpedia.org/property/nicknames> ""El Director"" .
}

# Step 2: Find his predecessor (assuming a political role like Prime Minister)
SELECT ?predecessor WHERE {
    ?prieto <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 3: Identify military conflicts involving Francoist Spain and the predecessor
SELECT DISTINCT ?conflict WHERE {
    ?conflict <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Francoist_Spain> .
    OPTIONAL { ?conflict <http://dbpedia.org/ontology/participant> ?predecessor . }
}

# Step 4: Find the commander of this conflict
SELECT DISTINCT ?commander WHERE {
    ?conflict <http://dbpedia.org/property/commander> ?commander .
}

# Step 5: Determine the military force associated with these entities
SELECT DISTINCT ?militaryForce WHERE {
    ?conflict <http://dbpedia.org/ontology/military_force> ?militaryForce .
}
```",9,15,10,3,3,3,3,71,0,0,32,0,0.0,0
915,17,test,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
    # Step 1: Find Lizzie Spaulding's parent who is a fictional character and soap character
    ?parent <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Lizzie_Spaulding> .
    ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
    ?parent <http://dbpedia.org/ontology/family> ?soapCharacter .
    
    # Step 2: Find the child of that parent who is a fictional character and soap character
    ?child <http://dbpedia.org/ontology/family> ?parent .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
    ?child <http://dbpedia.org/ontology/family> ?soapCharacter .

    # Step 3: Find the father of this child
    ?father <http://dbpedia.org/ontology/spouse> ?mother .
    ?father <http://dbpedia.org/ontology/family> ?child .

    # Step 4: Identify the resident of Springfield, Illinois who is this father
    ?father <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ""Springfield, Illinois""@en .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
617,46,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Find Antiochus III the Great's child who is royalty
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
    ?child a <http://dbpedia.org/class/yago/Royalty108069>.
}

# Step 2: Find the spouse of that child
SELECT ?spouse WHERE {
    ?child <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 3: Identify Antiochus II Theos' successor who is royalty
SELECT ?successor WHERE {
    <http://dbpedia.org/resource/Antiochus_II_theos> <http://dbpedia.org/property/successor> ?successor .
    ?successor a <http://dbpedia.org/class/yago/Royalty108069>.
}

# Step 4: Find the child of that successor who is royalty
SELECT ?child2 WHERE {
    ?successor <http://dbpedia.org/ontology/child> ?child2 .
    ?child2 a <http://dbpedia.org/class/yago/Royalty108069>.
}

# Step 5: Find the spouse of this second child
SELECT ?spouse2 WHERE {
    ?child2 <http://dbpedia.org/ontology/spouse> ?spouse2 .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
767,38,test,Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
# Step 1: Find alter ego of Black Hood
SELECT ?alterEgo WHERE {
    <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
}

# Step 2: Find alma mater for members of George K. Nash's administration
SELECT ?member ?almaMater WHERE {
    ?member <http://dbpedia.org/property/memberOfAdministration> <http://dbpedia.org/resource/George_K._Nash> .
    ?member <http://dbpedia.org/property/almaMater> ?almaMater .
}

# Step 3: Find a reference connecting the alter ego and alma mater
SELECT ?reference WHERE {
    ?alterEgo <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
    ?member <http://dbpedia.org/property/almaMater> ?almaMater .
    ?reference <http://dbpedia.org/ontology/wikiPageWikiLink> ?almaMater .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
161,67,test,"Give me the military force of Rif War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Step 1: Identify ""El Director""
SELECT ?elDirector WHERE {
    ?elDirector <http://dbpedia.org/property/nicknames> ""El Director"" .
}

# Step 2: Find the military force and commander of Rif War
SELECT ?rifWarForce ?commander WHERE {
    ?rifWarEvent <http://dbpedia.org/ontology/battleOf> ?rifWarForce .
    ?rifWarForce <http://dbpedia.org/property/commander> ?commander .
    ?rifWarEvent <http://dbpedia.org/ontology/event> ""Rif War"" .
}

# Step 3: Link El Director to a military force
SELECT ?elDirectorForce WHERE {
    ?elDirector <http://dbpedia.org/ontology/militaryService> ?elDirectorForce .
}

# Step 4: Identify Indalecio Prieto's predecessor
SELECT ?predecessor WHERE {
    ?prieto <http://dbpedia.org/property/predecessor> ?predecessor .
    ?prieto <http://dbpedia.org/resource/Indalecio_Prieto> .
}

# Step 5: Find the military force of the societal event and conflict related to the predecessor
SELECT ?societalEventForce WHERE {
    ?event <http://dbpedia.org/ontology/battleOf> ?societalEventForce .
    ?event <http://dbpedia.org/property/involves> ?predecessor .
    ?event <http://dbpedia.org/ontology/type> ?type .
    FILTER(?type IN (""Societal event"", ""Military conflict""))
}

# Combine the results
SELECT DISTINCT ?rifWarForce ?commander ?elDirectorForce ?societalEventForce WHERE {
    # Rif War details
    ?rifWarEvent <http://dbpedia.org/ontology/battleOf> ?rifWarForce .
    ?rifWarForce <http://dbpedia.org/property/commander> ?commander .
    ?rifWarEvent <http://dbpedia.org/ontology/event> ""Rif War"" .

    # El Director's military force
    ?elDirector <http://dbpedia.org/ontology/militaryService> ?elDirectorForce .
    ?elDirector <http://dbpedia.org/property/nicknames> ""El Director"" .

    # Predecessor of Indalecio Prieto and related military force
    ?prieto <http://dbpedia.org/property/predecessor> ?predecessor .
    ?event <http://dbpedia.org/ontology/battleOf> ?societalEventForce .
    ?event <http://dbpedia.org/property/involves> ?predecessor .
    ?event <http://dbpedia.org/ontology/type> ?type .
    FILTER(?type IN (""Societal event"", ""Military conflict""))
}
```",7,10,8,3,3,3,3,71,0,0,11,0,0.0,0
767,55,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
SELECT ?almaMater ?settlement ?alterEgo WHERE {
  # Part 1: Alma Mater of George K. Nash's Administration
  ?administration <http://dbpedia.org/property/administration> <http://dbpedia.org/resource/G._K._Nash> .
  ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Part 2: Entity in Green's Administration that is a Settlement
  ?greenAdministration <http://dbpedia.org/property/administration> <http://dbpedia.org/resource/Green> .
  ?entityInGreenAdmin <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?greenAdministration <http://dbpedia.org/property/entity> ?entityInGreenAdmin .

  # Part 3: Alter Ego of Black Hood
  <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?alterEgo .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
429,8,test,"Give me the administration of Andrew Johnson and country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
# Query 1: Administration of Andrew Johnson
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Andrew_Johnson> <http://dbpedia.org/ontology/government> ?administration .
}

# Query 2: Country of the Military Force for Camden Expedition
SELECT DISTINCT ?country WHERE {
    ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?organization <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> .
    ?organization <http://dbpedia.org/ontology/country> ?country .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
701,48,test,Give me the spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?spouseOfMerneptahsFather WHERE {
    ?merneptah <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/spouse> ?spouseOfMerneptahsFather .

    OPTIONAL { 
        <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?amunSpouse .
        ?amunSpouse <http://dbpedia.org/ontology/child> ?childOfAmunSpouse .
        OPTIONAL {
            ?parent <http://dbpedia.org/ontology/father> ?childOfAmunSpouse ;
                    <http://dbpedia.org/ontology/mother> ?childOfAmunSpouse .
        }
    }

    FILTER(?merneptah = <http://dbpedia.org/resource/Merneptah>)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,55,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Step 1: Identify Donald Maynard Dokken's band members
SELECT ?bandMember WHERE {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?bandMember .
}

# Step 2: Identify Watchtower's associated musical artists
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Step 3: Identify Meshuggah's band members
SELECT ?meshuggahMember WHERE {
    <http://dbpedia.org/resource/Meshuggah> <http://dbpedia.org/ontology/member> ?meshuggahMember .
}

# Step 4: Find commonality or association among these entities
SELECT DISTINCT ?commonEntity WHERE {
    { 
        # From Don Dokken's band members
        ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    }
    UNION
    {
        # From Watchtower's associated artists
        ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    }
    UNION
    {
        # From Meshuggah's band members
        ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    }
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
747,26,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
    ?song <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Amba_Shepherd> .
    ?song a <http://dbpedia.org/ontology/Song> .
    ?song <http://dbpedia.org/property/band> ?band .
}
```",3,4,4,3,1,3,3,71,0,0,13,0,0.0,0
528,30,test,Give me the war of Irene Morales and force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Wars of Irene Morales
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Force associated with Narciso Campero Leyes
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ?force .
    UNION
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/Organisation> ?force .
}

UNION

# Wars of Orozimbo Barbosa
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?war .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
378,30,test,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query 1: War of Carl Pontus Gahn
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
}

# Query 2: Claim to Fame of the Commander in Great Siege of Gibraltar
SELECT ?commander ?claimToFame WHERE {
    ?commander <http://dbpedia.org/property/commanded> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> .
    ?commander <http://dbpedia.org/ontology/notableworks> ?claimToFame .
}

# Query 3: War of Joaquín Blake
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?war .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
16,58,test,Give me the spouse of Ted McGinley and professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?person WHERE {
    # Part 1: Spouse of Ted McGinley
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
    
    # Part 2: Professional in the profession of Satomi Ishihara
    ?profession <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Satomi_Ishihara> .
    ?person <http://dbpedia.org/ontology/profession> ?profession .

    # Part 3: Person born as the birth name of an alumnus of Ohio State University
    ?alumnus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AlumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
    ?alumnus <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://dbpedia.org/property/birthName> ?birthName .

    # Combine all conditions
    FILTER(?spouse = ?person)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,27,test,Give me the child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?child WHERE {
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia>.
    ?father <http://dbpedia.org/ontology/father> ?spouse.
    ?father <http://dbpedia.org/ontology/child> ?child.
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
281,65,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v6 . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Identify the leader of the 1962 New South Wales state election
  ?politician <http://dbpedia.org/ontology/politicalParty> ?party .
  ?election <http://dbpedia.org/property/electionDate> ""1962""^^xsd:gYear .
  ?election <http://dbpedia.org/ontology/winner> ?politician .
  ?election <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/New_South_Wales> .

  # Step 2: Determine the birthplace country of this politician
  ?politician <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?entity .

  # Step 3: Find the awardee of the Knight Grand Cross of the Order of the Bath
  ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
  
  # Step 4: Identify the military unit associated with Heather Roy's profession
  ?heatherRoy <http://dbpedia.org/ontology/profession> ?militaryUnit .
  ?militaryUnit a <http://dbpedia.org/ontology/MilitaryUnit> .

  # Step 5: Find common wars involving both individuals
  ?politician <http://dbpedia.org/property/wars> ?war .
  ?awardee <http://dbpedia.org/property/wars> ?war .

  FILTER(?entity a <http://www.w3.org/2002/07/owl#Thing>)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,49,test,"Give me the professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
SELECT ?writer ?alterEgo ?associatedArtist WHERE {
    ?album <http://dbpedia.org/ontology/work> ?work .
    ?album <http://dbpedia.org/ontology/musicalWork> ?musicalWork .
    ?album rdfs:label ""What U See Is What U Get""@en .

    ?writer <http://dbpedia.org/property/writer> ?album ;
            a <http://dbpedia.org/ontology/MusicalArtist>, <http://dbpedia.org/ontology/Artist> .

    OPTIONAL { ?writer <http://dbpedia.org/property/alterEgo> ?alterEgo .
               FILTER(?alterEgo = <http://dbpedia.org/resource/The_Shadow_(character)>) }
    
    OPTIONAL { ?writer <http://dbpedia.org/property/associatedBand> ?associatedArtist . }
}
```",5,9,6,3,2,3,3,71,0,0,22,0,0.0,0
659,58,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
# Step 1: Identify the societal event related to Rutger Jan Schimmelpenninck
SELECT ?event WHERE {
    <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/referencedIn> ?event .
    ?event <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent .
    ?societalEvent a <http://dbpedia.org/class/yago/SocialEvents>.
    ?societalEvent a <http://dbpedia.org/class/yago/MilitaryConflicts>.
}

# Step 2: Find the commander in the war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
SELECT ?commander WHERE {
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://dbpedia.org/property/commander> ?commander .
    ?unit <http://dbpedia.org/property/inWar> ?war .
    ?unit rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
}

# Step 3: Determine the military force associated with this war
SELECT ?militaryForce WHERE {
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
    ?force <http://dbpedia.org/property/inWar> ?war .
    ?force a <http://dbpedia.org/ontology/MilitaryUnit> .
}

# Step 4: Find the commander in the German campaign of 1813
SELECT ?commander WHERE {
    ?campaign a <http://dbpedia.org/ontology/MilitaryConflict> .
    ?campaign rdfs:label ""German campaign of 1813""@en .
    ?campaign <http://dbpedia.org/property/commander> ?commander .
}
```",6,11,7,3,3,3,3,71,0,0,7,0,0.0,0
294,26,test,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
SELECT ?restingPlaceKeeble ?entityInBirthplaceJames ?restingPlaceAwardee WHERE {
  # Resting place of Edwin A. Keeble
  <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/burial> ?restingPlaceKeeble .

  # Entity in the birthplace of Marion James
  <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceJames .
  ?entityInBirthplaceJames <http://www.w3.org/2004/02/skos/core#inScheme> <http://dbpedia.org/resource/British_settlements_in_the_West_Indies> .
  FILTER(?birthPlaceJames = ?entityInBirthplaceJames)

  # Resting place of awardee (politician) of Distinguished Service Medal (U.S. Army)
  ?awardee <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> .
  ?awardee <http://dbpedia.org/ontology/burial> ?restingPlaceAwardee
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
16,22,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}
UNION
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Gigi Rice"" .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
801,61,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?producer WHERE {
    # Step 1: Identify the album ""What U See Is What U Get""
    ?album <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> .
    
    # Step 2: Find writers of this album who are both a musical artist and an artist
    ?writer <http://dbpedia.org/property/writer> ?album ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>, <http://dbpedia.org/ontology/Artist> .
    
    # Step 3: Determine associated musical artists who are rappers
    ?rapper <http://dbpedia.org/property/associatedMusicalArtist> ?writer ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    
    # Step 4: Identify professional musical artists among these rappers
    ?professionalRapper <http://dbpedia.org/property/profession> ""Rapper"" ;
                        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    
    # Step 5: Locate the work that is a musical work, song, and work produced by these professionals
    ?work <http://dbpedia.org/property/producer> ?professionalRapper ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song>, <http://dbpedia.org/ontology/Work> .
    
    # Step 6: Find the producer of this identified work
    ?work <http://dbpedia.org/property/producer> ?producer .
}
```",6,14,7,3,2,3,3,71,0,0,9,0,0.0,0
182,23,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
# Step 1: Identify the author of a work related to the 2019 Sri Lanka Easter bombings
SELECT ?author WHERE {
    ?work <http://dbpedia.org/ontology/topic> <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings>.
    ?work <http://purl.org/dc/terms/creator> ?author.
}

# Step 2: Determine Tamara Kunanayakam's nationality and identify an entity associated with it
SELECT ?entity WHERE {
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/2000/01/rdf-schema#label> ""Tamara Kunanayakam""@en.
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?nationalityEntity.
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?nationalityLabel .
    FILTER(?nationalityEntity = ?entity)
}

# Step 3: Find any wars related to both entities
SELECT DISTINCT ?war WHERE {
    VALUES (?entity) { (<result_from_step_1_author>) (<result_from_step_2_entity>) }
    ?entity <http://dbpedia.org/ontology/war> ?war.
}
```

Note: Replace `<result_from_step_1_author>` and `<result_from_step_2_entity>` with the actual URIs obtained from executing the first two queries.",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
303,26,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . }","```sparql
SELECT ?person1 ?party1 ?person2 ?party2 WHERE {
  # Arnulfo Arias Madrid's party
  <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/ontology/politicalParty> ?party1 .
  
  # Commander during the United States invasion of Panama who is a politician
  ?person2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
           <http://dbpedia.org/ontology/battleCommander> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .
  ?person2 <http://dbpedia.org/ontology/politicalParty> ?party2 .

  # Ensure the person is distinct from Arnulfo Arias Madrid
  FILTER(?person2 != <http://dbpedia.org/resource/Arnulfo_Arias_Madrid>)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
767,62,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?almaMater WHERE {
  # Step 1: Find George Kilbon Nash's administration
  ?administration <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/George_Kilbon_Nash> .
  
  # Step 2: Identify a settlement in the administration
  ?settlement <http://dbpedia.org/ontology/entityInAdministration> ?administration ;
              a <http://dbpedia.org/class/yago/Settlements100000>.
  
  # Step 3: Find the writer of ""Where It's At"" by Dustin Lynch
  ?song <http://purl.org/dc/terms/creator> ?writer .
  FILTER(STR(?song) = ""http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_song)"")

  # Step 4: Find the alma mater for both George Kilbon Nash and the writer
  OPTIONAL { <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater . }
  OPTIONAL { ?writer <http://dbpedia.org/ontology/almaMater> ?almaMater . }

  FILTER(?almaMater != UNDEF)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
801,36,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?writer ?associatedArtist WHERE {
  ?album <http://purl.org/dc/terms/title> ""What U See Is What U Get"" .
  ?album <http://dbpedia.org/ontology/workType> ?workType .
  FILTER(?workType IN (dbo:MusicalWork, dbo:Work)) .

  ?writer <http://dbpedia.org/ontology/writer> ?album ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?types .
  FILTER(?types IN (dbo:MusicalArtist, dbo:Artist)) .

  OPTIONAL { ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist . }
}
```",4,8,5,3,2,3,3,71,0,0,22,0,0.0,0
617,30,test,Give me the child of Antiochus III the Great and spouse of Laodice IV and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?child ?spouse WHERE {
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Laodice_IV> .
    ?spouse <http://dbpedia.org/ontology/parent> ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,60,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . }","```sparql
SELECT ?associatedArtist WHERE {
    # Step 1: Identify The Shadow's true self/alter ego
    ?shadow <http://dbpedia.org/ontology/trueSelf> ?trueSelf .
    
    # Step 2: Find professional association with the true self
    ?association <http://dbpedia.org/ontology/professionalAssociation> ?trueSelf .
    
    # Step 3: Locate the album ""What U See Is What U Get""
    ?album <http://purl.org/dc/terms/title> ""What U See Is What U Get"" .
    
    # Step 4: Identify the writer of the album
    ?writer <http://dbpedia.org/ontology/writer> ?album ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>, <http://dbpedia.org/ontology/Artist> .
    
    # Step 5: Determine associated musical artist
    ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",6,10,7,3,2,3,3,71,0,0,22,0,0.0,0
421,21,test,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Senidah>.
  ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia>.
  ?person <http://dbpedia.org/property/birthName> ""Dino Merlin"" .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
48,18,test,"Give me the band of the writer of the work, that is a work, of Shellback (record producer) and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
# Query for Shellback's band through works
SELECT DISTINCT ?band WHERE {
  ?work <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> .
  ?work <http://dbpedia.org/ontology/band> ?band .
}

UNION

# Query for Honor Up's band
SELECT DISTINCT ?band WHERE {
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Honor_Up> .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
747,64,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band1 ?band2 WHERE {
    # Step 1: Find Shèna's persona
    ?shena <http://dbpedia.org/ontology/personalName> ""Shèna"" .
    
    # Step 2: Find athlete/soccer player from Zolotonosha and their birth date
    ?athlete <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> ;
             <http://dbpedia.org/ontology/SoccerPlayer> ;
             <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Zolotonosha> .
    ?athlete <http://dbpedia.org/property/dateOfBirth> ?birthDate .

    # Step 3: Find person born on the same date
    ?person <http://dbpedia.org/ontology/personalName> ?shena ;
            <http://dbpedia.org/property/dateOfBirth> ?birthDate .
    
    # Step 4: Find band of Shèna's persona
    ?band1 <http://dbpedia.org/ontology/member> ?shena .

    # Step 5: Find Amba Shepherd's band
    ?amba <http://dbpedia.org/resource/Amba_Shepherd> .
    ?band2 <http://dbpedia.org/ontology/member> ?amba .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
54,47,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Step 1: Find Soe Min Wimala Dewi's father
SELECT ?father WHERE {
    ?soeMinWimalaDewi <http://dbpedia.org/property/father> ?father .
    FILTER(STR(?soeMinWimalaDewi) = ""Soe_Min_Wimala_Dewi"")
}

# Step 2: Find the child of Soe Min Wimala Dewi's father
SELECT ?child WHERE {
    ?father <http://dbpedia.org/ontology/child> ?child .
    FILTER(STR(?father) IN (<result_from_step_1>))
}

# Step 3: Find Thado Minsaw of Prome's parent
SELECT ?parent WHERE {
    ?thadoMinsawOfProme <http://dbpedia.org/property/father> ?parent .
    UNION
    ?thadoMinsawOfProme <http://dbpedia.org/property/mother> ?parent .
    FILTER(STR(?thadoMinsawOfProme) = ""Thado_Minsaw_of_Prome"")
}

# Step 4: Find the child of Thado Minsaw of Prome's parent
SELECT ?child WHERE {
    ?parent <http://dbpedia.org/ontology/child> ?child .
    FILTER(STR(?parent) IN (<result_from_step_3>))
}

# Step 5: Find the parent of the child identified in step 4
SELECT ?finalParent WHERE {
    ?child <http://dbpedia.org/property/father> ?finalParent .
    UNION
    ?child <http://dbpedia.org/property/mother> ?finalParent .
    FILTER(STR(?child) IN (<result_from_step_4>))
}
```

Note: Replace `<result_from_step_X>` with the actual results obtained from each step when executing the queries sequentially.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
404,60,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
    # Step 1: Identify Princess Victoria Louise's spouse
    <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/property/spouse> ?spouse .

    # Step 2: Find the birth name of Princess Victoria Louise and match it with another royalty
    <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/birthName> ?birthName .
    
    # Ensure the person is a royalty
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName ;
            <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Royalty> .

    # Step 3: Find the father of the spouse
    ?spouse <http://dbpedia.org/ontology/father> ?father .

    # Step 4: Identify the child of this father
    ?father <http://dbpedia.org/ontology/child> ?child .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
197,9,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of the member of FC Politehnica Timișoara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
SELECT ?person ?birthPlace WHERE {
  # Query for awardees of Leroy P. Steele Prize
  { 
    ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Leroy_P._Steele_Prize> .
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
  
  UNION
  
  # Query for members of FC Politehnica Timișoara
  { 
    ?person <http://dbpedia.org/property/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> .
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",4,4,5,2,2,2,2,9,1,67,3,0.014705882352941176,0.25,0.027777777777777776
54,31,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?childOfThinkhaya WHERE {
    ?thinkhaya <http://dbpedia.org/ontology/spouse> ?spouse .
    ?thinkhaya <http://dbpedia.org/ontology/child> ?childOfThinkhaya .
    
    ?thadoMinsaw <http://dbpedia.org/ontology/father> ?parentOfThadoMinsaw .
    
    FILTER(?thinkhaya = <http://dbpedia.org/resource/Thihathu_of_Pagan>)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,26,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
SELECT ?almaMater WHERE {
    ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medals> .
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
391,54,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons and native of the figure known as Hub City.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Find the claim to fame (work) of the spouse and its actor
SELECT ?actor WHERE {
    ?spouse <http://dbpedia.org/ontology/work> ?work .
    ?work <http://dbpedia.org/ontology/actor> ?actor .
}

# Step 3: Find the actor of ""All About the Andersons""
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/actor> ?actor .
}

# Step 4: Identify Hub City and its notable figure
SELECT ?figure WHERE {
    ?city <http://www.w3.org/2000/01/rdf-schema#label> ""Hub City""@en .
    ?figure <http://dbpedia.org/property/nativeOf> ?city .
}

# Final query to ensure all conditions are met
SELECT DISTINCT ?actor WHERE {
    # Sherry Hormann's spouse and their work
    ?spouse <http://xmlns.com/foaf/0.1/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .
    ?spouse <http://dbpedia.org/ontology/work> ?work .
    
    # Actor of the spouse's claim to fame
    ?work <http://dbpedia.org/ontology/actor> ?actor .
    
    # Actor of ""All About the Andersons""
    <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/actor> ?actor2 .
    FILTER(?actor = ?actor2)
    
    # Hub City and its notable figure
    ?city <http://www.w3.org/2000/01/rdf-schema#label> ""Hub City""@en .
    ?figure <http://dbpedia.org/property/nativeOf> ?city .
    ?actor <http://dbpedia.org/ontology/nationality> ?figure .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,20,test,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v5 . },"```sparql
SELECT ?nickname WHERE {
    # Step 1: Get Eiður Guðjohnsen's birth date
    <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?birthDate .

    # Step 2: Find a person born on that date who is both a soccer player and manager
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .

    # Step 3: Determine Armando Heeb's team
    <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/property/team> ?team .

    # Step 4: Identify the sports club that is an organization and a soccer club associated with Armando Heeb's team
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub> .
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .
    ?team <http://dbpedia.org/property/team> ?club .

    # Step 5: Retrieve the nickname of a player from this sports club
    ?player <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?player <http://dbpedia.org/property/team> ?club .
    ?player <http://dbpedia.org/property/nickname> ?nickname .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
617,43,test,"Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
# Step 1: Find the child of Antiochus III the Great
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Identify Nysa's parent
SELECT ?parent WHERE {
    ?nysa <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Pharnaces_I_of_Pontus> .
    ?parent <http://dbpedia.org/ontology/child> ?nysa .
}

# Step 3: Identify the successor of Antiochus III the Great
SELECT ?successor WHERE {
    ?successor <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
    ?successor <http://www.w3.org/2002/07/owl#sameAs> ?royalty .
}

# Step 4: Find the spouse of the child of the successor
SELECT ?spouse WHERE {
    ?child <http://dbpedia.org/ontology/child> ?successor .
    ?spouse <http://dbpedia.org/property/spouse> ?child .
}

# Final query combining all steps
SELECT DISTINCT ?parent ?spouse WHERE {
    # Nysa's parent
    ?nysa <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Pharnaces_I_of_Pontus> .
    ?parent <http://dbpedia.org/ontology/child> ?nysa .

    # Successor of Antiochus III the Great
    ?successor <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
    ?successor <http://www.w3.org/2002/07/owl#sameAs> ?royalty .

    # Spouse of the child of the successor
    ?child <http://dbpedia.org/ontology/child> ?successor .
    ?spouse <http://dbpedia.org/property/spouse> ?child .

    # Combine to find the individual who is both parent and spouse
    FILTER(?parent = ?spouse)
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
801,20,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?producer WHERE {
    ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/50_Cent> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalWork108069068> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Song104968377> .
    ?work <http://dbpedia.org/ontology/producer> ?producer .
    ?producer <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Music_production> .
}
```",3,6,4,2,2,3,3,71,0,0,27,0,0.0,0
360,21,test,Give me the writer of The Roaring Silence and native of Johannesburg and reference to the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?writer WHERE {
    ?album <http://dbpedia.org/ontology/author> ?writer .
    ?album <http://dbpedia.org/property/title> ""The Roaring Silence"" .
    
    ?writer <http://dbpedia.org/property/nationality> ?nationality .
    ?nationality <http://www.w3.org/2000/01/rdf-schema#label> ""Johannesburg""@en .

    OPTIONAL {
        ?reference <http://dbpedia.org/ontology/references> ?blindedByTheLightAuthor .
        ?writer <http://dbpedia.org/ontology/references> ?reference .
        
        ?blindedByTheLightAuthor <http://dbpedia.org/ontology/author> ?blindedByTheLight .
        ?blindedByTheLight <http://dbpedia.org/property/title> ""Blinded by the Light""@en .
    }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
801,39,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of Westside Story (song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
# Step 1: Identify the writer of the album ""What U See Is What U Get"" who is a musical artist and an artist.
SELECT ?writer WHERE {
    ?album <http://dbpedia.org/ontology/writer> ?writer .
    ?album <http://purl.org/dc/terms/title> ""What U See Is What U Get"" .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}

# Step 2: Identify the producer of the song ""Westside Story.""
SELECT ?producer WHERE {
    ?song <http://dbpedia.org/property/producer> ?producer .
    ?song <http://purl.org/dc/terms/title> ""Westside Story"" .
}

# Step 3: Find associated musical artists for both individuals.
SELECT DISTINCT ?associatedArtist WHERE {
    # For the writer of the album
    ?writer <http://dbpedia.org/ontology/writer> ?album .
    ?album <http://purl.org/dc/terms/title> ""What U See Is What U Get"" .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?writer <http://dbpedia.org/property/associatedMusicians> ?associatedArtist .

    # For the producer of the song
    ?producer <http://dbpedia.org/property/producedSongs> ?song .
    ?song <http://purl.org/dc/terms/title> ""Westside Story"" .
    ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?producer <http://dbpedia.org/property/associatedMusicians> ?associatedArtist .

    FILTER(?writer != ?producer)
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
314,26,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of 30.","SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?person WHERE {
    # Step 1: Identify the headquarters of House of Sombrerete
    <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/headquarters> ?headquarters .

    # Step 2: Find a person deceased at that location
    ?person <http://dbpedia.org/property/deathPlace> ?headquarters .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/DeceasedPerson> .

    # Step 3: Identify Lisa Gavrić's profession
    <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/ontology/profession> ?profession .
    
    # Ensure the profession is an event and a societal event
    ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvent> .
    ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Event> .

    # Step 4: Find a commander in that profession
    ?person <http://dbpedia.org/ontology/commanderOf> ?profession .

    # Step 5: Identify an awardee of 30
    ?person <http://dbpedia.org/property/awards> ?award .
    FILTER(CONTAINS(LCASE(STR(?award)), ""30""))

    # Ensure the person satisfies all conditions
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
281,57,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
# Step 1: Find wars associated with Beauchamp Seymour, 1st Baron Alcester
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/war> ?war .
}

# Step 2: Find the leader of the 1962 New South Wales state election and their birthplace country
SELECT ?leader ?country WHERE {
    ?election <http://dbpedia.org/property/electionDate> ""1962""^^xsd:gYear .
    ?election <http://dbpedia.org/ontology/politicalElection> <http://dbpedia.org/resource/New_South_Wales_state_election,_1962> .
    ?election <http://dbpedia.org/ontology/winner> ?leader .
    ?leader a <http://dbpedia.org/ontology/Politician> .
    ?leader <http://dbpedia.org/property/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#country> ?country .
}

# Step 3: Find the military unit associated with Heather Roy and its wars
SELECT ?unit ?war WHERE {
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
    ?profession a <http://dbpedia.org/ontology/MilitaryUnit> .
    ?profession <http://dbpedia.org/property/war> ?war .
}

# Step 4: Find common wars between Beauchamp Seymour and the other entities
SELECT DISTINCT ?commonWar WHERE {
    # Wars of Beauchamp Seymour
    { 
        ?beauchampWar <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/war> .
    }
    
    UNION
    
    # Wars related to the leader of 1962 NSW election
    { 
        ?leaderWar <http://dbpedia.org/resource/New_South_Wales_state_election,_1962> <http://dbpedia.org/property/winner> ?leader .
        ?leader a <http://dbpedia.org/ontology/Politician> .
        ?leader <http://dbpedia.org/property/war> ?leaderWar .
    }
    
    UNION
    
    # Wars related to Heather Roy's military unit
    { 
        ?royUnit <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
        ?profession a <http://dbpedia.org/ontology/MilitaryUnit> .
        ?profession <http://dbpedia.org/property/war> ?royWar .
    }
    
    # Find common wars
    FILTER(?beauchampWar = ?leaderWar || ?beauchampWar = ?royWar)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,63,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . },"```sparql
SELECT ?native WHERE {
    # Step 1: Find Sylvie Bermann's British residence that is a settlement
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
    FILTER(CONTAINS(LCASE(?settlementLabel), ""british"") && CONTAINS(LCASE(?settlementLabel), ""settlement""))

    # Step 2: Find Sean Pertwee's claim to fame that is both a film and a military conflict
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/film> ?film .
    ?film <http://www.w3.org/2000/01/rdf-schema#label> ?filmLabel .
    FILTER(CONTAINS(LCASE(?filmLabel), ""military conflict""))

    # Step 3: Find Jon Pertwee's child
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?personLabel .
    FILTER(?personLabel = ""Sean Pertwee"")
    ?person <http://dbpedia.org/ontology/child> ?child .

    # Step 4: Find the native of Sylvie Bermann's residence
    ?native <http://www.w3.org/2000/01/rdf-schema#label> ?nativeLabel .
    ?native <http://dbpedia.org/ontology/nationality> ?residence .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
659,63,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
# Step 1: Find the military conflict for the 1st Light Cavalry Lancers Regiment and its commander
SELECT ?conflict ?commander WHERE {
    ?regiment <http://dbpedia.org/ontology/battle> ?conflict .
    FILTER(?regiment = <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)>)
    ?conflict <http://dbpedia.org/property/commander> ?commander .
}

# Step 2: Find the societal event and military conflict for Rutger Jan Schimmelpenninck
SELECT ?event ?type WHERE {
    ?schimmelpenninck <http://dbpedia.org/ontology/battleCommanded> ?event .
    FILTER(?schimmelpenninck = <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>)
    OPTIONAL { ?event <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> ?type . }
}

# Step 3: Find the native office holder of Kingdom of Ireland and their commander
SELECT ?officeHolder ?commander WHERE {
    ?officeHolder <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
    ?officeHolder <http://dbpedia.org/ontology/battleCommanded> ?event .
    ?event <http://dbpedia.org/property/commander> ?commander .
}

# Final step: Find the common commander across all identified events and forces
SELECT DISTINCT ?commonCommander WHERE {
    VALUES ?conflict1 { ?conflict }
    VALUES ?event2 { ?event }
    VALUES ?event3 { ?battleCommanded }

    ?conflict1 <http://dbpedia.org/property/commander> ?commonCommander .
    ?event2 <http://dbpedia.org/property/commander> ?commonCommander .
    ?event3 <http://dbpedia.org/property/commander> ?commonCommander .
}
```",7,13,8,3,3,3,3,71,0,0,15,0,0.0,0
232,31,test,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?actor WHERE {
    # Find actor of Dog Soldiers (film)
    <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?actor .
    
    # Find person born as Jon Pertwee's birth name
    ?person <http://dbpedia.org/property/birthName> ""Jon Pertwee""^^<http://www.w3.org/2001/XMLSchema#string> .

    # Find child of the person found above
    ?child <http://dbpedia.org/ontology/personBirthDate> ?birth .
    ?person <http://dbpedia.org/ontology/child> ?child .

    # Match actor with child
    FILTER(?actor = ?child)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
528,60,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
# Part 1: Force of Narciso Campero
SELECT ?birthName ?force WHERE {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?birthName .
    OPTIONAL { 
        <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/militaryForce> ?force .
    }
}

# Part 2: War of the Military Force in Chile
SELECT DISTINCT ?event ?war WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
           <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Chile> .
    OPTIONAL {
        ?event <http://dbpedia.org/property/militaryForce> ?force .
        ?force <http://dbpedia.org/ontology/battle> ?war .
    }
}
```",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
232,24,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?filmMilitaryConflict ?actor WHERE {
    ?person <http://dbpedia.org/resource/Sean_Pertwee> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/London> .

    ?filmMilitaryConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?filmMilitaryConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

    ?person <http://dbpedia.org/property/awards> ?filmMilitaryConflict .
    
    ?filmMilitaryConflict <http://dbpedia.org/ontology/starring> ?actor .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
659,53,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
# Step 1: Find Rutger Jan Schimmelpenninck's office in the Kingdom of Ireland
SELECT ?office WHERE {
    <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/nationality> ?nationality .
    ?office <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
}

# Step 2: Find the commander of this office
SELECT ?commander WHERE {
    ?office <http://dbpedia.org/property/commander> ?commander .
}

# Step 3: Identify the military force involved in both Battle of Leipzig and a societal event related to Schimmelpenninck
SELECT ?militaryForce WHERE {
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?militaryForce <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Battle_of_Leipzig> .
    ?militaryForce <http://dbpedia.org/property/event> ?event .
    FILTER(?event IN (<http://dbpedia.org/resource/Societal_event>, <http://dbpedia.org/resource/Military_conflict>))
}

# Step 4: Find the commander of this military force
SELECT ?commander WHERE {
    ?militaryForce <http://dbpedia.org/property/commander> ?commander .
}
```",6,10,7,3,3,3,3,71,0,0,6,0,0.0,0
54,59,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?result WHERE {
    # Step 1: Find Thinkhaya of Pagan's child
    ?thinkhayaChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
    
    # Step 2: Use that child to find Thinkhaya (as the father)
    ?thinkhayaFather <http://dbpedia.org/ontology/child> ?thinkhayaChild .

    # Step 3: Find Thinkhaya's child (Thinkhaya's sibling or descendant)
    ?thinkhayaFatherChild <http://dbpedia.org/ontology/child> ?thinkhayaFather .
    
    # Step 4: Identify Thado Minsaw of Prome and his parent
    ?thadoMinsawParent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .

    # Step 5: Find the child of Thado Minsaw's parent
    ?thadoMinsawParentChild <http://dbpedia.org/ontology/child> ?thadoMinsawParent .
    
    # Step 6: Determine the parent of this child
    ?result <http://dbpedia.org/ontology/child> ?thadoMinsawParentChild .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
10,25,test,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?vibertBandMember ?coltonAssociatedArtist WHERE {
  ?vibert <http://www.w3.org/2000/01/rdf-schema#label> ""Luke Francis Vibert""@en .
  ?vibert <http://dbpedia.org/ontology/member> ?vibertBandMember .

  ?colton <http://www.w3.org/2000/01/rdf-schema#label> ""Matt Colton""@en .
  ?colton <http://dbpedia.org/ontology/associatedMusicalArtist> ?coltonAssociatedArtist .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
801,54,test,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
SELECT ?professional WHERE {
  # Step 1: Identify Chris Taylor's resource as a music producer
  ?chrisTaylor <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Music_producer> .
  
  # Step 2: Find associated musical artists (Rappers) linked to Chris Taylor
  ?rapper <http://dbpedia.org/ontology/associatedMusicalArtist> ?chrisTaylor .
  ?rapper <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> .

  # Step 3: Identify works that are both a song and a musical work for each Rapper
  ?work <http://dbpedia.org/ontology/work> ?rapper ;
        <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Song> .
  
  # Step 4: Find the alter ego ""The Shadow"" and its associated professional role or producer
  ?alterEgo <http://dbpedia.org/property/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  ?producer <http://dbpedia.org/ontology/profession> ?professional ;
            <http://dbpedia.org/ontology/work> ?work .

  # Step 5: Link the professional to the original query
  FILTER(?alterEgo = ?rapper)
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
994,49,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find associated musical artists of Watchtower (band)
  ?watchtower <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
  
  # Step 2: For each artist found, find their associated musical artists
  ?artist1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .

  # Step 3: Identify Don Dokken's persona and the corresponding musical artist born with that persona
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/property/persona> ?persona .
  ?bornArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
              <http://dbpedia.org/property/birthName> ?persona ;
              <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Step 4: Find the band members of the identified musical artist
  ?bornArtist <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?band .
  
  # Ensure we are looking for the final associated artist from step 2
  FILTER(?artist2 = ?finalArtist)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,28,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v5 . ?v5 <http://dbpedia.org/ontology/province> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
SELECT ?country ?sportsEvent ?province WHERE {
  # Entity in the region (country) of Central European Time
  <http://dbpedia.org/resource/Central_European_Time> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?timeZone .
  ?timeZone <http://dbpedia.org/ontology/country> ?country .

  # Region of the time zone (sports event) of Aguilar de Segarra
  <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?location .
  ?location <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://dbpedia.org/ontology/event> ?sportsEvent .

  # Province of the residence (settlement and Italian) of Sebastiano Bianchetti
  <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?settlement .
  ?settlement a <http://dbpedia.org/class/yago/Settlements100000001> .
  ?settlement <http://dbpedia.org/ontology/province> ?province .
  FILTER EXISTS { ?province <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Italy> }
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
356,18,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
# Step 1: Identify the native soccer player and manager from Wolverhampton
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Wolverhampton>.
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Soccer_player>.
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Soccer_manager>.
}

# Step 2: Find the predecessor of the 2015 Sacramento Republic FC season
SELECT ?predecessor WHERE {
    <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/predecessor> ?predecessor.
    ?predecessor <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Sports_team_season>.
    ?predecessor <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Soccer_club_season>.
}

# Step 3: Find the successor of that predecessor season
SELECT ?successor WHERE {
    ?predecessor <http://dbpedia.org/ontology/successor> ?successor.
}

# Step 4: Identify the team associated with the player in that successor season
SELECT ?team WHERE {
    ?person <http://dbpedia.org/property/team> ?team.
    ?team <http://dbpedia.org/ontology/season> ?successor.
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
312,8,test,Give me the entity in the birthplace of Giorgio Grigolli and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?birthEntity ?bergamoEntity WHERE {
  # Entity in the birthplace of Giorgio Grigolli
  <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?birthEntity .

  # Entity in Province of Bergamo
  OPTIONAL {
    <http://dbpedia.org/resource/Province_of_Bergamo> <http://dbpedia.org/ontology/country> ?bergamoEntity .
  }
}
```",3,3,4,2,2,2,2,9,0,3,228,0.0,0.0,0
314,22,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
SELECT ?award ?otherAwardee WHERE {
    <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Sergei_Makovetsky>)
    
    OPTIONAL {
        ?deceased <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/House_of_Sombrerete> .
        FILTER(?otherAwardee != ?deceased)
    }
}
```",4,4,5,2,2,2,3,28,1,950,0,0.0010515247108307045,1.0,0.0021008403361344537
54,51,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?predecessor WHERE {
    ?child1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
    ?child1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?child1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    ?child2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
    
    ?parent <http://dbpedia.org/ontology/child> ?child2 .
    
    ?predecessor <http://dbpedia.org/ontology/predecessorOrSuccessor> ?parent .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
182,28,test,Give me the war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v5 . },"```sparql
# Part 1: War of Gotabhaya Rajapaksa's work
SELECT ?work ?war WHERE {
    <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/ontology/work> ?work .
    OPTIONAL { ?work <http://dbpedia.org/property/war> ?war . }
}

# Part 2: Nationality of Tamara Kunanayakam
SELECT ?nationality WHERE {
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""nationality""))
}

# Part 3: War of the author of 2019 Sri Lanka Easter bombings
SELECT ?author ?war WHERE {
    <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/ontology/author> ?author .
    OPTIONAL { ?author <http://dbpedia.org/property/war> ?war . }
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
959,61,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
# Step 1: Find the sports manager of the 1998 Kashima Antlers season
SELECT ?manager WHERE {
    ?season <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Kashima_Antlers> .
    ?season <http://dbpedia.org/property/year> ""1998""^^<http://www.w3.org/2001/XMLSchema#gYear> .
    ?season <http://dbpedia.org/ontology/coach> ?manager .
    FILTER(?manager <http://dbpedia.org/ontology/SportsManager>)
}

# Step 2: Find the team managed by this sports manager
SELECT ?team WHERE {
    ?manager <http://dbpedia.org/property/team> ?team .
}

# Step 3: Find the manager of that team
SELECT ?teamManager WHERE {
    ?team <http://dbpedia.org/ontology/coach> ?teamManager .
}

# Step 4: Identify the leader (politician) involved in the 2010 Japanese House of Councillors election
SELECT ?leader WHERE {
    ?election <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
    ?election <http://dbpedia.org/property/year> ""2010""^^<http://www.w3.org/2001/XMLSchema#gYear> .
    ?election <http://dbpedia.org/ontology/politician> ?leader .
}

# Step 5: Determine the country where this politician resides
SELECT ?country WHERE {
    ?leader <http://dbpedia.org/property/residence> ?location .
    ?location <http://dbpedia.org/ontology/country> ?country .
}

# Step 6: Find the manager associated with the team from step 3 whose residence is in the country identified in step 5
SELECT ?finalManager WHERE {
    ?teamManager <http://dbpedia.org/property/residence> ?location .
    ?location <http://dbpedia.org/ontology/country> ?country .
    FILTER(?country = ?countryFromStep5)
}
```",6,9,7,3,2,3,3,71,0,0,6,0,0.0,0
179,18,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of Bhumibol Adulyadej.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?child ?birthName WHERE {
    # Step 1: Find the child of Nakkhatra Mangala who is royalty
    <http://dbpedia.org/resource/Nakkhatra_Mangala> <http://dbpedia.org/ontology/child> ?royaltyChild .
    
    # Ensure the child is a royalty (type check)
    ?royaltyChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    # Step 2: Find children of Bhumibol Adulyadej
    <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?child .
    
    # Step 3: Retrieve the birth name of each child
    ?child <http://dbpedia.org/property/birthName> ?birthName .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
547,36,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query for the resting place of James Burton (Egyptologist)
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/James_Burton_(egyptologist)> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

UNION

# Query for the resting place of awardees of Gerald Graham's awards
SELECT ?awardee ?restingPlace WHERE {
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?award .
    ?awardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?awardee != <http://dbpedia.org/resource/Gerald_Graham>)
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
427,51,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of Lamberto Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query for Romano Prodi's party
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicianParty> ?party.
}

UNION

# Query for Lamberto Andreotti's father's party
SELECT ?fatherParty WHERE {
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
  ?father <http://dbpedia.org/ontology/politicianParty> ?fatherParty.
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
747,50,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for Tracey Elizabeth McSween's band
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Tracey_McSween> <http://dbpedia.org/ontology/band> ?band .
}

UNION

# Query for the writer of the song ""Amba Shepherd"" and their band
SELECT ?writerBand WHERE {
  ?song <http://www.w3.org/2000/01/rdf-schema#label> ""Amba Shepherd""@en .
  ?song <http://dbpedia.org/property/writer> ?writer .
  ?writer <http://dbpedia.org/ontology/band> ?writerBand .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,28,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Step 1: Identify the mayor of Northern Ireland Forum
SELECT ?mayor WHERE {
    ?mayor <http://dbpedia.org/ontology/politician> true .
    ?mayor <http://dbpedia.org/property/title> ""Mayor of Northern Ireland Forum"" .
}

# Step 2: Identify the figure known as QUB
SELECT ?qubFigure WHERE {
    ?qubFigure <http://xmlns.com/foaf/0.1/nick> ""QUB"" .
}

# Step 3: Find the alma mater of Allen Hill (scientist)
SELECT ?allenHillAlmaMater WHERE {
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?allenHillAlmaMater .
}

# Step 4: Find the alma mater of the identified individuals
SELECT DISTINCT ?almaMater WHERE {
    VALUES (?individual) { 
        (<result from step 1>) 
        (<result from step 2>)
        (<http://dbpedia.org/resource/Allen_Hill_(scientist)>)
    }
    ?individual <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```

Note: The SPARQL query assumes that the results of steps 1 and 2 can be directly used in step 4. In practice, you would need to execute each part separately and use the actual URIs obtained from the first two queries.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
9,70,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
# Step 1: Identify the organisation and educational institution in Northern Ireland
SELECT ?institution WHERE {
    ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization>.
    ?institution <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Northern_Ireland>.
}

# Step 2: Get the nickname of this institution
SELECT ?nickname WHERE {
    ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization>.
    ?institution <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Northern_Ireland>.
    ?institution <http://dbpedia.org/property/nicknames> ?nickname.
}

# Step 3: Find the mayor associated with Northern Ireland Forum and their alma mater
SELECT ?mayorAlmaMater WHERE {
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?mayor <http://dbpedia.org/property/politicalOffice> ?office.
    ?office <http://dbpedia.org/ontology/positionHeldBy> <http://dbpedia.org/resource/Northern_Ireland_Forum>.
    ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater.
}

# Step 4: Find the awardee of Royal Medals and their alma mater
SELECT ?awardeeAlmaMater WHERE {
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
    ?awardee <http://dbpedia.org/property/awards> ?award.
    ?award <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Royal_Medals>.
    ?awardee <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater.
}

# Step 5: Ensure both alma maters match the institution
SELECT DISTINCT ?nickname WHERE {
    ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization>.
    ?institution <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Northern_Ireland>.
    ?institution <http://dbpedia.org/property/nicknames> ?nickname.
    
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?mayor <http://dbpedia.org/property/politicalOffice> ?office.
    ?office <http://dbpedia.org/ontology/positionHeldBy> <http://dbpedia.org/resource/Northern_Ireland_Forum>.
    ?mayor <http://dbpedia.org/ontology/almaMater",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
184,52,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?grandchild WHERE {
    ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
    ?grandchild <http://dbpedia.org/ontology/child> ?child .
    ?grandchild <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .
    ?settlement <http://dbpedia.org/ontology/nationality> ?grandchild .
    ?settlement <http://dbpedia.org/ontology/settlement> ?settlementType .
    ?settlement <http://www.w3.org/2003/01/geo/wgs84_pos#lat> ?latitude .
    ?settlement <http://www.w3.org/2003/01/geo/wgs84_pos#long> ?longitude .
    ?elevation <http://dbpedia.org/ontology/elevation> ""96.0""^^xsd:float .
    FILTER(?settlementType = <http://dbpedia.org/resource/Settlement>)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
391,52,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of All About the Andersons and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
# Step 1: Find the figure known by the nickname ""Jackson, Tennessee""
SELECT ?figure WHERE {
    ?figure <http://dbpedia.org/ontology/nickName> ""Jackson, Tennessee"" .
}

# Step 2: Verify if this figure is an actor in ""All About the Andersons""
SELECT ?figure WHERE {
    ?figure <http://dbpedia.org/ontology/nickName> ""Jackson, Tennessee"" .
    ?film <http://dbpedia.org/ontology/starring> ?figure .
    ?film <http://dbpedia.org/property/title> ""All About the Andersons""@en .
}

# Step 3: Find Michael Ballhaus's claim to fame (a work) and its actors
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/claimToFame> ?work .
}
SELECT ?actor WHERE {
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    ?film <http://dbpedia.org/property/title> ?work .
}

# Step 4: Confirm if the figure from step 1 acted in this work
SELECT ?figure WHERE {
    ?figure <http://dbpedia.org/ontology/nickName> ""Jackson, Tennessee"" .
    ?film <http://dbpedia.org/ontology/starring> ?figure .
    ?film <http://dbpedia.org/property/title> ?work .
}

# Step 5: Find the native place of this figure
SELECT ?native WHERE {
    ?figure <http://dbpedia.org/ontology/nickName> ""Jackson, Tennessee"" .
    ?figure <http://dbpedia.org/ontology/starring> ?film1 .
    ?film1 <http://dbpedia.org/property/title> ""All About the Andersons""@en .
    ?figure <http://dbpedia.org/ontology/starring> ?film2 .
    ?film2 <http://dbpedia.org/property/title> ?work .
    ?figure <http://dbpedia.org/ontology/nativePlace> ?native .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
994,47,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
# Step 1: Find Fredrik Thordendal's band
SELECT ?fredrikBand WHERE {
    <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/memberOf> ?fredrikBand .
}

# Step 2: Identify a band member of Fredrik's band who is also part of another band and organization
SELECT DISTINCT ?bandMember WHERE {
    ?fredrikBand <http://dbpedia.org/ontology/member> ?bandMember .
    ?otherBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?otherBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?otherBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
    ?bandMember <http://dbpedia.org/ontology/memberOf> ?otherBand .
}

# Step 3: Find the associated musical artist of Watchtower
SELECT DISTINCT ?watchtowerArtist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/property/associatedMusicalArtist> ?watchtowerArtist .
}

# Step 4: Find the common associated musical artist between the identified band member's band and Watchtower
SELECT DISTINCT ?commonArtist WHERE {
    ?otherBand <http://dbpedia.org/property/associatedMusicalArtist> ?commonArtist .
    ?watchtowerArtist = ?commonArtist .
}
```",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
659,66,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . }","```sparql
SELECT ?commander WHERE {
    # Step 1: Find Arthur Wellesley's military forces and their commanders
    ?force <http://dbpedia.org/ontology/commander> ?commander .
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?force <http://dbpedia.org/property/members> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .

    # Step 2: Find societal events and military conflicts related to Rutger Jan Schimmelpenninck
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/SocietalEvent> | <http://dbpedia.org/ontology/MilitaryConflict>) .
    ?event <http://dbpedia.org/property/personsInvolved> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .

    # Step 3: Find the war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and its commander
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/MilitaryConflict> | <http://dbpedia.org/ontology/War>) .
    ?war <http://dbpedia.org/property/members> <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> .
    ?war <http://dbpedia.org/ontology/commander> ?commander .

    # Step 4: Connect these elements to identify a common commander
    FILTER(?force = ?event || ?force = ?war)
}
```",7,12,8,3,3,3,3,71,0,0,15,0,0.0,0
547,65,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
# Part 1: Resting place of actors in shows with Emily Richard
SELECT ?actor ?restingPlaceActor WHERE {
    ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/E._Richard>.
    ?show <http://dbpedia.org/ontology/starredBy> ?actor.
    OPTIONAL { ?actor <http://dbpedia.org/ontology/burialPlace> ?restingPlaceActor. }
}

# Part 2: Resting place of awardees of Knight Grand Cross of the Order of St Michael and St George
UNION

SELECT ?awardee ?restingPlaceAwardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St._George>.
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlaceAwardee. }
}

# Part 3: Resting place of the child of James Burton (property developer)
UNION

SELECT ?child ?restingPlaceChild WHERE {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child.
    OPTIONAL { ?child <http://dbpedia.org/ontology/burialPlace> ?restingPlaceChild. }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
547,71,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v8 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . }","```sparql
# Part 1: Resting place of awardees of Gerald Graham's awards
SELECT ?awardee ?restingPlace WHERE {
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?award .
    ?awardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?awardee != <http://dbpedia.org/resource/Gerald_Graham>)
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlace }
}

UNION

# Part 2: Resting place of actors in shows with Emily Richard
SELECT ?actor ?restingPlace WHERE {
    ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Emily_Richard> .
    ?show <http://dbpedia.org/property/starring> ?actor .
    OPTIONAL { ?actor <http://dbpedia.org/ontology/burialPlace> ?restingPlace }
}

UNION

# Part 3: Resting place of the child's child (grandchild) of William Haliburton
SELECT ?grandchild ?restingPlace WHERE {
    <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
    OPTIONAL { ?grandchild <http://dbpedia.org/ontology/burialPlace> ?restingPlace }
}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
55,28,test,"Give me the band of the reference, that is a band, to Newsted and band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
# Step 1: Find the band associated with Newsted
SELECT ?metallica WHERE {
    ?newsted <http://dbpedia.org/ontology/member> ?metallica .
    ?newsted rdfs:label ""Jason Newsted""@en .
}

# Step 2: Identify the producer of ""Used to Love Her""
SELECT ?producer WHERE {
    ?album <http://purl.org/dc/terms/title> ""St. Anger""@en .
    ?album <http://dbpedia.org/ontology/producer> ?producer .
    ?song <http://dbpedia.org/property/songOfAlbum> ?album .
    ?song rdfs:label ""Used to Love Her""@en .
}

# Step 3: Find the band associated with the producer
SELECT ?band WHERE {
    ?producer <http://dbpedia.org/ontology/member> ?band .
}

# Step 4: Identify band members of San Francisco Symphony (assuming conductors or notable musicians)
SELECT ?member WHERE {
    ?symphony <http://dbpedia.org/property/members> ?member .
    ?symphony rdfs:label ""San Francisco Symphony""@en .
}

# Step 5: Find the band associated with these connections
SELECT ?finalBand WHERE {
    ?bandMember <http://dbpedia.org/ontology/member> ?finalBand .
    FILTER(?bandMember IN (?metallica, ?producer, ?member))
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
303,25,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v4 . },"```sparql
SELECT ?entity WHERE {
    # Find the country where El Valle de Antón is located
    <http://dbpedia.org/resource/El_Valle_de_Ant%C3%B3n> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?countryResource .
    
    # Identify Arnulfo Arias's political party
    <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/politicalParty> ?ariasParty .

    # Identify the commander in the United States invasion of Panama and his political party
    ?commanderResource <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?commanderResource <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .
    ?commanderResource <http://dbpedia.org/ontology/politicalParty> ?commanderParty .

    # Find an entity in the country of El Valle de Antón that is associated with both political parties
    ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?countryResource .
    ?entity <http://dbpedia.org/ontology/politicalAffiliation> ?ariasParty .
    ?entity <http://dbpedia.org/ontology/politicalAffiliation> ?commanderParty .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
404,49,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
    ?princess <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?princess <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia"" .
    ?princess <http://dbpedia.org/ontology/spouse> ?spouse .

    ?spouse <http://dbpedia.org/property/father> ?father .
    
    ?child <http://dbpedia.org/property/father> ?father .
    FILTER(?child != ?spouse)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,62,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?micheleParty ?alumniFatherParty ?romanoParty WHERE {
    # Michele Pinto's political party
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalParty> ?micheleParty .

    # Alumnus of MIT and their father's political party
    ?alumni a dbo:Alumnus ;
            dbo:almaMater <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?father dbo:child ?alumni .
    ?father <http://dbpedia.org/ontology/politicalParty> ?alumniFatherParty .

    # Romano Prodi's political party
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?romanoParty .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,48,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Part 1: Resting place of the child of the child of William Haliburton
SELECT ?grandchild ?restingPlace WHERE {
    # Find children of William Haliburton
    <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?child .
    
    # For each child, find their children (grandchildren)
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
    
    # Find the resting place of these grandchildren
    ?grandchild <http://dbpedia.org/property/burialPlace> ?restingPlace .
}

UNION

# Part 2: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?awardee ?restingPlace WHERE {
    # Find individuals who have received the award
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    
    # Find their resting place
    ?awardee <http://dbpedia.org/property/burialPlace> ?restingPlace .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,38,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?profession ?person WHERE {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .
    ?person <http://dbpedia.org/property/birthName> ""Gigi Rice"" .
    ?person <http://dbpedia.org/ontology/profession> ?profession .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
404,31,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Find the parent of Prince Ernest Augustus of Hanover (born 1914)
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> <http://dbpedia.org/ontology/parent> ?parent .
}

# Find the spouse of the person born as royalty with the birth name Princess Victoria Louise of Prussia
SELECT ?spouse WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Princess Victoria Louise of Prussia""@en ;
            <http://dbpedia.org/ontology/birthName> ""Victoria Louise Margaret Agnes"" .
    ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,49,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
SELECT ?capitalPersonDecedent ?workPersonDecedent WHERE {
  # Part 1: Person decedent at the capital of Khemis Miliana District
  ?district <http://dbpedia.org/ontology/administrativeUnit> <http://dbpedia.org/resource/Khemis_Miliana_District> .
  ?district <http://dbpedia.org/ontology/capital> ?capital .
  ?personDecedent <http://dbpedia.org/ontology/deathPlace> ?capital .

  # Part 2: Person decedent at the work of Joseph C. Satterthwaite
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/property/work> ?work .
  ?personDecedent <http://dbpedia.org/ontology/deathPlace> ?work .

  BIND(?personDecedent AS ?capitalPersonDecedent)
  OPTIONAL {
    ?otherPersonDecedent <http://dbpedia.org/ontology/deathPlace> ?work .
    FILTER(?otherPersonDecedent != ?personDecedent)
    BIND(?otherPersonDecedent AS ?workPersonDecedent)
  }
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
10,20,test,"Give me the professional in  and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for Matt Colton's professional role and associated musical artist
SELECT ?profession ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/profession> ?profession .
    OPTIONAL { 
        <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
    }
}

# Query for band members of Luke Francis Vibert
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://dbpedia.org/ontology/memberOf> ?band .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,66,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . }","```sparql
# Part 1: Find commander in Ferenc Szálasi's force
SELECT ?commander WHERE {
    ?force <http://dbpedia.org/ontology/commander> ?commander .
    ?force <http://dbpedia.org/property/battleCommandedBy> <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> .
}

# Part 2: Find awardee of Bruce Fraser's award
SELECT ?awardee WHERE {
    ?award <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
    ?otherRecipient <http://dbpedia.org/ontology/recipient> ?award .
    FILTER(?otherRecipient != <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>)
}

# Part 3: Find leader of Gustav Jonson's office
SELECT ?leader WHERE {
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
    ?office <http://dbpedia.org/property/leader> ?leader .
    ?leader <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/Gustav_Jonson> .
}

# Combine results
SELECT DISTINCT ?entity WHERE {
    { 
        # Commander in Ferenc Szálasi's force
        ?force <http://dbpedia.org/ontology/commander> ?entity .
        ?force <http://dbpedia.org/property/battleCommandedBy> <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> .
    }
    UNION
    { 
        # Awardee of Bruce Fraser's award
        ?award <http://dbpedia.org/ontology/recipient> ?entity .
        ?award <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
    }
    UNION
    { 
        # Leader of Gustav Jonson's office
        ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
        ?office <http://dbpedia.org/property/leader> ?entity .
        ?entity <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/Gustav_Jonson> .
    }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
427,34,test,Give me the party of Romano Prodi and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?prodiParty ?pintoPartyName WHERE {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
    <http://dbpedia.org/resource/Michele_Pinto_(politician)> <http://dbpedia.org/ontology/politicalParty> ?pintoParty .
    ?pintoParty rdfs:label ?pintoPartyName .
    FILTER(LANG(?pintoPartyName) = ""en"")
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
617,70,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
# Step 1: Find Antiochus's successor who is a royalty
SELECT ?successor WHERE {
    <http://dbpedia.org/resource/Antiochus_I_Soter> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?successor .
    ?successor <http://dbpedia.org/ontology/nationality> ?nationality .
    FILTER(CONTAINS(LCASE(STR(?nationality)), ""royalty""))
}

# Step 2: Find the child of this successor
SELECT ?child WHERE {
    ?successor <http://dbpedia.org/ontology/child> ?child .
}

# Step 3: Get the spouse of this child
SELECT ?spouse WHERE {
    ?child <http://dbpedia.org/property/spouse> ?spouse .
}

# Step 4: Find the commander in Battle of Panium and his child
SELECT ?commanderChild WHERE {
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(STR(?battle) = ""Battle_of_Panium"")
    ?commander <http://dbpedia.org/ontology/child> ?commanderChild .
}

# Step 5: Find the child of Seleucus II Callinicus who is a royalty
SELECT ?royalChild WHERE {
    <http://dbpedia.org/resource/Seleucus_II_Callinicus> <http://dbpedia.org/ontology/child> ?royalChild .
    ?royalChild <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?nationality .
    FILTER(CONTAINS(LCASE(STR(?nationality)), ""royalty""))
}

# Step 6: Find the grandchild of Seleucus II Callinicus
SELECT ?grandchild WHERE {
    ?royalChild <http://dbpedia.org/ontology/child> ?grandchild .
}
```

Note: This query is structured to be executed in parts due to its complexity. Each step retrieves necessary intermediate results that are used in subsequent steps.",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
184,58,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
# Step 1: Find Archduchess Margaret of Austria (born 1925)
SELECT ?margaret WHERE {
    ?margaret <http://dbpedia.org/ontology/birthDate> ""1925-01-01""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?margaret <http://dbpedia.org/ontology/name> ""Margaret of Austria""@en .
}

# Step 2: Find her parent
SELECT ?parent WHERE {
    ?margaret <http://dbpedia.org/ontology/parent> ?parent .
}

# Step 3: From that parent, find their child
SELECT ?child WHERE {
    ?parent <http://dbpedia.org/ontology/child> ?child .
}

# Step 4: Identify Géza von Habsburg and find his parent
SELECT ?gezaParent WHERE {
    ?geza <http://dbpedia.org/ontology/name> ""Géza von Habsburg""@en .
    ?geza <http://dbpedia.org/ontology/parent> ?gezaParent .
}

# Step 5: Identify Archduke Joseph Karl of Austria and find his child
SELECT ?josephChild WHERE {
    ?joseph <http://dbpedia.org/ontology/name> ""Joseph Karl of Austria""@en .
    ?joseph <http://dbpedia.org/ontology/child> ?josephChild .
}

# Step 6: From that child, find their child
SELECT ?grandchild WHERE {
    ?josephChild <http://dbpedia.org/ontology/child> ?grandchild .
}

# Step 7: Find the parent of the individual found in step 3
SELECT ?finalParent WHERE {
    ?child <http://dbpedia.org/ontology/parent> ?finalParent .
}
```

Note: This query assumes that each step can be resolved uniquely, which may require additional filtering or assumptions based on DBpedia's data structure. The actual SPARQL query would need to combine these steps into a single query with appropriate variable bindings and filters.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,69,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
SELECT ?spouse WHERE {
    ?princess <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
    ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
    
    ?child <http://dbpedia.org/ontology/parent> ?spouse ;
           <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
           
    ?father <http://dbpedia.org/ontology/spouse> ?princessSpouse .
    ?spouse <http://dbpedia.org/ontology/father> ?father .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,24,test,Give me the parent of Archduchess Ilona of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?grandchild WHERE {
    <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
    FILTER(?grandchild = <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria>)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
820,17,test,Give me the child of the parent of the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?child WHERE {
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?otherProfession .
    ?actor <http://dbpedia.org/ontology/parent> ?parent .
    ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",4,4,5,3,2,3,2,20,0,50,128,0.0,0.0,0
767,71,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v8 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?v5 <http://dbpedia.org/property/governor> ?v4 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v7 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
SELECT ?alterEgo ?almaMater ?settlement WHERE {
  # Part 1: Alter ego of Matthew Burland's fictional character
  ?character <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Matthew_Burland> .
  ?character <http://dbpedia.org/property/alterEgo> ?alterEgo .

  # Part 2: Alma mater of George Kilbon Nash's administration
  ?nash <http://dbpedia.org/ontology/administration> ?administration .
  ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
  FILTER(?nash = <http://dbpedia.org/resource/George_Kilbon_Nash>) .

  # Part 3: Settlement in the writer's administration of ""Where It's At""
  ?writer <http://dbpedia.org/ontology/wrote> <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> .
  ?administration2 <http://dbpedia.org/ontology/administration> ?settlement .
  FILTER(?writer IN ?writers) .

  # Combine results
  BIND(?alterEgo AS ?resultAlterEgo)
  BIND(?almaMater AS ?resultAlmaMater)
  BIND(?settlement AS ?resultSettlement)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
77,17,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of Alexander Chechenskiy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?force WHERE {
    ?mayor <http://dbpedia.org/ontology/administrativePost> <http://dbpedia.org/resource/Mayor_of_Warsaw> .
    ?organisation <http://www.w3.org/2000/01/rdf-schema#label> ""Warsaw""@en .
    ?organisation <http://dbpedia.org/property/administeredBy> ?mayor .
    ?chechenskiy <http://dbpedia.org/ontology/battle> ?battle .
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?force <http://dbpedia.org/property/country> ?country .
    ?mayor <http://dbpedia.org/property/militaryForce> ?force .
    FILTER(?chechenskiy = <http://dbpedia.org/resource/Alexander_Chechenskiy>)
}
```",4,5,5,3,2,3,2,20,0,0,6,0,0.0,0
54,58,test,"Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Find child of Thinkhaya of Pagan
SELECT ?thinkhayaChild WHERE {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayaChild .
}

# Step 2: Find parent of the child of Narapati I of Ava
SELECT ?narapatiChildParent WHERE {
    ?narapatiChild <http://dbpedia.org/property/parent> ?narapatiChildParent .
    ?narapatiI <http://dbpedia.org/ontology/child> ?narapatiChild .
    FILTER(?narapatiI = <http://dbpedia.org/resource/Narapati_I_of_Ava>)
}

# Step 3: Find predecessor of an office holder and royalty related to Thihapate of Mohnyin
SELECT ?predecessor WHERE {
    ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Royalty> .
    ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
    ?officeHolder <http://dbpedia.org/property/reference> ?reference .
    ?predecessor <http://dbpedia.org/ontology/predecessor> ?officeHolder .
}

# Combine the results to find a common entity
SELECT DISTINCT ?thinkhayaChild WHERE {
    # Reuse previous queries as subqueries or inline views if supported by SPARQL endpoint
    # This is a conceptual representation; actual implementation may vary based on data availability and query capabilities

    { SELECT ?thinkhayaChild WHERE {
        <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayaChild .
    }}

    UNION

    { SELECT ?narapatiChildParent WHERE {
        ?narapatiChild <http://dbpedia.org/property/parent> ?narapatiChildParent .
        ?narapatiI <http://dbpedia.org/ontology/child> ?narapatiChild .
        FILTER(?narapatiI = <http://dbpedia.org/resource/Narapati_I_of_Ava>)
    }}

    UNION

    { SELECT ?predecessor WHERE {
        ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Royalty> .
        ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
        ?officeHolder <http://dbpedia.org/property/reference> ?reference .
        ?predecessor <http://dbpedia.org/ontology/predecessor> ?officeHolder .
    }}

    # Assuming a common entity exists that satisfies all conditions
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,55,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
# Step 1: Identify ""Hub City""
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/kindOf> <http://dbpedia.org/resource/Human> .
    ?alias <http://www.w3.org/2000/01/rdf-schema#label> ""Hub City""@en .
    ?person <http://xmlns.com/foaf/0.1/alsoKnownAs> ?alias .
}

# Step 2: Find the movie with Roz Ryan and the actor from step 1
SELECT DISTINCT ?movie WHERE {
    ?actor <http://dbpedia.org/ontology/nationality> ?nationality .
    ?actor <http://dbpedia.org/ontology/film> ?movie .
    ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
}

# Step 3: Find Michael Ballhaus's claim to fame
SELECT DISTINCT ?work WHERE {
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/property/awards> ?award .
    ?award <http://dbpedia.org/ontology/work> ?work .
}

# Step 4: Identify actors in Michael Ballhaus's work
SELECT DISTINCT ?actor WHERE {
    ?work <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 5: Find the native city of the person who fits all criteria
SELECT DISTINCT ?nativeCity WHERE {
    ?person <http://dbpedia.org/property/nationality> ?nationality .
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?nativeCity .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
701,28,test,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?parent WHERE {
  # Parent of Henuttawy (19th dynasty)
  ?henuttawy <http://dbpedia.org/ontology/birth> ?birth .
  FILTER(CONTAINS(LCASE(STR(?birth)), ""19th dynasty""))
  ?henuttawy <http://dbpedia.org/ontology/parent> ?parent .

  # Spouse of Ramesses II
  OPTIONAL { 
    <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/property/spouse> ?spouse .
    FILTER(?spouse = ?parent)
  }

  # Parent of the child of Nefertari
  OPTIONAL {
    ?nefertariChild <http://dbpedia.org/ontology/birth> ?birthNefertari .
    ?nefertari <http://www.wikidata.org/entity/Q11152> ?nefertariChild .
    ?nefertariChild <http://dbpedia.org/ontology/parent> ?parent .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
16,45,test,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?spouse ?person WHERE {
  # Find Ted McGinley's spouse
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Find a person with the specified birth name, who is an alumnus of Ohio State University and works as an actress
  ?person <http://dbpedia.org/property/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actress> .

  # Ensure the person found is the same as Ted McGinley's spouse
  FILTER(?spouse = ?person)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,64,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?finalLeader WHERE {
  # Step 1: Leader associated with Gustav Jonson
  ?gustavLeader <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Gustav_Jonson> .
  
  # Step 2: Commander in Eastern Front (World War II)
  ?easternFrontCommander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
                        <http://dbpedia.org/property/commander> ?gustavLeader .
  
  # Step 3: Awardee of the award received by commander in Volcano and Ryukyu Islands campaign
  ?volcanoCommander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
                    <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
  ?volcanoCommander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
                    <http://dbpedia.org/property/commander> ?easternFrontCommander .
  
  ?award ?p ?volcanoCommander .
  ?otherAwardee ?p ?volcanoCommander .
  FILTER(?otherAwardee != ?volcanoCommander)
  
  # Step 4: Government agency led by this awardee
  ?governmentAgency <http://dbpedia.org/ontology/leader> ?otherAwardee ;
                     <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  
  # Step 5: Leader of that government agency
  ?finalLeader <http://dbpedia.org/ontology/leader> ?governmentAgency .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
54,52,test,Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
# Step 1: Find Thinkhaya of Pagan's child
SELECT ?thinkhayasChild WHERE {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayasChild .
}

# Step 2: Identify Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor
SELECT ?predecessor WHERE {
    <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/property/predecessor> ?predecessor .
}

# Step 3: Find Narapati I of Ava's child
SELECT ?narapatisChild WHERE {
    <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?narapatisChild .
}

# Step 4: Find the parent of Narapati I of Ava's child
SELECT ?parent WHERE {
    ?narapatisChild <http://dbpedia.org/ontology/parent> ?parent .
}
```

Note: The above SPARQL queries are broken down into steps for clarity. In practice, you would combine these into a single query to directly retrieve the desired result.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,54,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
# Step 1: Find awardees of Royal Medals
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal>.
}

# Step 2: Find alma mater of these awardees
SELECT DISTINCT ?almaMater WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal>.
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater.
}

# Step 3: Find the mayor of Northern Ireland Forum
SELECT ?mayor WHERE {
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?mayor <http://dbpedia.org/property/title> ""Mayor of Northern Ireland Forum"".
}

# Step 4: Find alma mater of this mayor
SELECT DISTINCT ?almaMater WHERE {
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?mayor <http://dbpedia.org/property/title> ""Mayor of Northern Ireland Forum"".
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater.
}

# Step 5: Identify the figure known as QUB
SELECT ?figure WHERE {
    ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""QUB""@en.
}

# Step 6: Find alma mater of this figure
SELECT DISTINCT ?almaMater WHERE {
    ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""QUB""@en.
    ?figure <http://dbpedia.org/ontology/almaMater> ?almaMater.
}

# Combine results to find common alma maters
SELECT DISTINCT ?commonAlmaMater WHERE {
    VALUES ?source { ?awardee ?mayor ?figure }
    ?source <http://dbpedia.org/ontology/almaMater> ?commonAlmaMater.
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,68,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v5 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Find the commander of the Battle of Verdun
SELECT ?verdunCommander WHERE {
    <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?verdunCommander .
}

# Step 2: Find a person who died in Algiers related to French Algeria
SELECT ?personDecedentInAlgiers WHERE {
    ?personDecedentInAlgiers <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers> .
    ?personDecedentInAlgiers <http://dbpedia.org/ontology/relatedTo> <http://dbpedia.org/resource/French_Algeria> .
}

# Step 3: Find the author of ""French Algeria"" and their work
SELECT ?author ?work WHERE {
    ?book <http://dbpedia.org/property/bookAuthor> ?author ;
          <http://dbpedia.org/ontology/title> ""French Algeria""@en .
    ?book <http://dbpedia.org/ontology/work> ?work .
}

# Step 4: Find the person who died at the location of this work
SELECT ?personDecedentAtWork WHERE {
    ?personDecedentAtWork <http://dbpedia.org/property/deathPlace> ?workLocation .
    ?workLocation <http://www.w3.org/2002/07/owl#sameAs> ?work .
}

# Step 5: Find the war where both commanders served
SELECT ?war WHERE {
    ?verdunCommander <http://dbpedia.org/ontology/commander> ?war .
    ?personDecedentAtWork <http://dbpedia.org/ontology/commander> ?war .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
488,55,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?deathPlace ?birthPlace ?administration WHERE {
  # Part 1: Death place of Yūki Hideyasu's father (politician)
  ?yukiHideyasu <http://dbpedia.org/ontology/father> ?fatherYūki .
  ?fatherYūki <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?fatherYūki <http://dbpedia.org/property/deathPlace> ?deathPlace .

  # Part 2: Birth place of the commander in Boshin War
  ?boshinWar <http://dbpedia.org/ontology/commander> ?commanderBoshin .
  ?commanderBoshin <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Part 3: Administration of Emperor Go-Mizunoo's father
  ?goMizunoo <http://dbpedia.org/ontology/father> ?fatherGoMizunoo .
  ?fatherGoMizunoo <http://dbpedia.org/property/administration> ?administration .

  # Bindings for specific individuals and events
  VALUES ?yukiHideyasu { <http://dbpedia.org/resource/Yūki_Hideyasu> }
  VALUES ?boshinWar { <http://dbpedia.org/resource/Boshin_War> }
  VALUES ?goMizunoo { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
378,70,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?war1 ?commander ?fameWar ?triggeWar ?gahnWar WHERE {
  # Step 1: Find a military conflict related to Peninsular War
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Peninsular_War> .

  # Step 2: Find the commander of this military conflict
  ?reference <http://dbpedia.org/property/commander> ?commander .

  # Step 3: Find wars where this commander has a claim to fame
  ?fameWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/MilitaryConflict> <http://dbpedia.org/ontology/SocietalEvent> <http://dbpedia.org/ontology/Event>) .
  ?commander <http://dbpedia.org/property/claimToFame> ?fameWar .

  # Step 4: Find the war involving Thomas Trigge as a commander
  ?triggeWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?triggeWar <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Thomas_Trigge> .

  # Step 5: Find the war associated with Carl Pontus Gahn
  ?gahnWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?gahnWar <http://dbpedia.org/property/personBorn> <http://dbpedia.org/resource/Carl_Pontus_Gahn> .

  # Bind the first military conflict to war1
  BIND(?reference AS ?war1)
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
617,67,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
    # Step 1: Identify the commander in Battle of Panium
    ?commander <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Battle_of_Panium> .
    
    # Step 2: Find the child of the commander
    ?commanderChild <http://dbpedia.org/ontology/child> ?commander .
    
    # Step 3: Identify Antiochus (son of Antiochus III the Great) and his successor who is a royalty
    <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?successor .
    ?successor <http://www.w3.org/2000/01/rdf-schema#label> ?successorLabel .
    FILTER(CONTAINS(LCASE(?successorLabel), ""royalty"")) .

    # Step 4: Find the child of the successor
    ?successorChild <http://dbpedia.org/ontology/child> ?successor .
    
    # Step 5: Identify the spouse of the child of the successor
    ?spouse <http://dbpedia.org/property/spouse> ?successorChild .

    # Step 6: Find the parent of the child of the commander
    ?parent <http://dbpedia.org/ontology/child> ?commanderChild .
    
    # Ensure consistency between spouse and parent
    FILTER(?spouse = ?parent)

    # Step 7: Ensure the final entity is a child of Antiochus III the Great
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?parent .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
747,60,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
# Step 1: Identify the athlete and soccer player decedent at Zolotonosha
SELECT ?athlete WHERE {
    ?athlete <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer>.
    ?athlete <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>.
    ?athlete <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Zolotonosha>.
}

# Step 2: Retrieve the birth date of this athlete
SELECT ?birthDate WHERE {
    ?athlete <http://dbpedia.org/ontology/birthDate> ?birthDate.
}

# Step 3: Find another person born on that same birth date
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate.
    FILTER(?person != ?athlete)
}

# Step 4: Check if this person has a persona known as ""Shèna""
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/persona> ""Shèna"" .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate.
    FILTER(?person != ?athlete)
}

# Step 5: Determine the band associated with this person
SELECT ?band WHERE {
    ?person <http://dbpedia.org/property/memberOfBand> ?band.
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
492,66,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Query for person decedent at the capital of Khemis Miliana District
SELECT ?personDecedent WHERE {
  ?district <http://dbpedia.org/ontology/capital> ?capital .
  ?capital <http://www.w3.org/2000/01/rdf-schema#label> ""Khemis Miliana"" .
  FILTER(CONTAINS(LCASE(?district), LCASE(""Khemis Miliana District"")))
  
  ?deathEvent <http://dbpedia.org/ontology/deathPlace> ?capital .
  ?deathEvent <http://dbpedia.org/ontology/personDecedent> ?personDecedent .
}

UNION

# Query for person decedent at the work of Joseph C. Satterthwaite
SELECT ?personDecedent WHERE {
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Occupation> .
  ?work <http://purl.org/dc/terms/title> ""US Assistant Secretary of State for African Affairs"" .
  ?work <http://dbpedia.org/property/person> <http://dbpedia.org/resource/Joseph_C._Satterthwaite> .

  ?deathEvent <http://dbpedia.org/ontology/deathPlace> ?work .
  ?deathEvent <http://dbpedia.org/ontology/personDecedent> ?personDecedent .
}

UNION

# Query for commander in the war involving Frédéric-Georges Herr
SELECT ?commander WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://dbpedia.org/property/commander> ?commander .
  ?war <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Frédéric-Georges_Herr> .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
778,19,test,"Give me the author of the work, that is a software, of the author of Pushd and popd and entity in the award of Ralph L. Brinster.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?softwareAuthor WHERE {
    # Step 1: Find Bill Joy as the author of Pushd and Popd
    <http://dbpedia.org/resource/Pushd> <http://dbpedia.org/property/author> ?billJoy .
    <http://dbpedia.org/resource/Popd> <http://dbpedia.org/property/author> ?billJoy .

    # Step 2: Find a software work authored by Bill Joy
    ?softwareWork <http://dbpedia.org/ontology/creator> ?billJoy .
    
    # Step 3: Identify an award associated with Ralph L. Brinster and find entities that have received it
    ?award <http://dbpedia.org/property/recipient> ?entity .
    ?award <http://dbpedia.org/property/awardedBy> <http://dbpedia.org/resource/Ralph_L._Brinster> .

    # Step 4: Find the author of the software identified in step 2
    ?softwareWork <http://dbpedia.org/ontology/creator> ?softwareAuthor .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
360,22,test,"Give me the writer of the work, that is an album, of Dave Flett and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
SELECT ?writer WHERE {
    # Step 1: Get the death place of Winnie Madikizela-Mandela, ensuring it is a settlement
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/class/yago/Settlements100000001> .

    # Step 2: Find Dave Flett's native place that matches the death place
    <http://dbpedia.org/resource/Dave_Flett> <http://dbpedia.org/ontology/birthPlace> ?nativePlace .
    FILTER(?nativePlace = ?deathPlace)

    # Step 3: Identify an album associated with Dave Flett and find its writer
    ?album <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Dave_Flett> ;
           a <http://dbpedia.org/class/yago/MusicalAlbums100000001> .
    ?album <http://purl.org/dc/terms/creator> ?writer .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
666,18,test,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as the nickname of England national beach soccer team.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
    ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
    ?manager rdfs:label ""Leonid Slutsky""@en .
    
    ?team <http://dbpedia.org/property/team> ?manager ;
          (<http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> , <http://dbpedia.org/ontology/SportsTeamSeason>) .
    
    ?team <http://dbpedia.org/property/player> ?player .

    OPTIONAL {
        ?beachSoccerTeam <http://dbpedia.org/property/nickname> ?nickname .
        FILTER(CONTAINS(LCASE(?nickname), ""england national beach soccer team""))
    }
}
```",5,8,6,3,2,3,2,20,0,0,2,0,0.0,0
701,20,test,Give me the parent of the child of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?commonParent WHERE {
    ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ramesses_II> .
    ?parent <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?child .
    ?meritamenParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Meritamen> .
    FILTER(?parent = ?meritamenParent)
    BIND(?parent AS ?commonParent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?militaryForce WHERE {
    # Step 1: Find the conflict involving Rutger Jan Schimmelpenninck as a commander
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?conflict <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .

    # Step 2: Find the native office holder of Kingdom of Ireland who commanded in the same conflict
    ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?officeHolder <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
    ?officeHolder <http://dbpedia.org/property/commander> ?conflict .

    # Step 3: Identify the figure known as 'Polish Horse'
    ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?polishHorse <http://dbpedia.org/property/nickname> ""Polish Horse""@en .

    # Step 4: Find the military force associated with each step
    ?conflict <http://dbpedia.org/property/militaryForce> ?militaryForce1 .
    ?officeHolder <http://dbpedia.org/property/commander> ?war .
    ?war <http://dbpedia.org/property/militaryForce> ?militaryForce2 .
    ?polishHorse <http://dbpedia.org/property/militaryForce> ?militaryForce3 .

    # Step 5: Ensure all conditions are met
    FILTER(?militaryForce1 = ?militaryForce2 && ?militaryForce2 = ?militaryForce3)
}
```",8,16,9,3,3,3,3,71,0,0,15,0,0.0,0
9,45,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
# Query for John Alderdice's alma mater
SELECT ?almaMaterAlderdice WHERE {
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMaterAlderdice .
}

# Query for Allen Hill's alma mater
SELECT ?almaMaterHill WHERE {
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMaterHill .
}

# Query for an organization and educational institution in Northern Ireland with a nickname
SELECT ?entity ?nickname WHERE {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> ;
            <http://dbpedia.org/property/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Northern Ireland"" .
    OPTIONAL { ?entity <http://dbpedia.org/property/nicknames> ?nickname . }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
281,25,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?militaryUnit ?war WHERE {
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/militaryUnit> ?militaryUnit .
    ?militaryUnit <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
182,24,test,Give me the entity in the nationality of Tamara Kunanayakam and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
SELECT ?entity WHERE {
  # Find the nationality of Tamara Kunanayakam
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?nationalityEntity .
  
  # Find wars associated with Gotabhaya Rajapaksa's work
  ?work <http://dbpedia.org/property/battle> ?warEntity .
  ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> .

  # Find a common entity between the nationality and the war
  FILTER(?nationalityEntity = ?warEntity)
  BIND(?nationalityEntity AS ?entity)
}
```",4,4,5,2,2,2,3,28,0,0,5,0,0.0,0
994,19,test,Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?commonArtist WHERE {
    ?watchtower <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
    ?redTide <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .
    FILTER(?watchtower = <http://dbpedia.org/resource/Watchtower_(band)>)
    FILTER(?redTide = <http://dbpedia.org/resource/Red_Tide_(band)>)
    FILTER(?artist1 = ?commonArtist && ?artist2 = ?commonArtist)
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
747,41,test,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find Pavlo Khudzik's birth date
SELECT ?birthDate WHERE {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 2: Find people born on the same date
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER(?birthDate = ""Pavlo_Khudzik_birth_date"") # Replace with actual birth date from step 1
}

# Step 3: Find the band of Shèna
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/band> ?band .
}

# Step 4: Find the writer of ""Apollo"" by Hardwell
SELECT ?writer WHERE {
    <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?writer .
}

# Step 5: Find the band of the writer
SELECT ?band WHERE {
    ?writer <http://dbpedia.org/ontology/band> ?band .
}
```

Note: Replace `""Pavlo_Khudzik_birth_date""` with the actual birth date obtained from step 1. The query is structured to be executed in parts, and you may need to run each part separately or combine them logically depending on your SPARQL environment capabilities.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
915,16,test,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?resident WHERE {
    ?verona <http://dbpedia.org/ontology/birthPlace> ?birthplace .
    ?birthplace a <http://dbpedia.org/ontology/Settlement> .
    
    ?residents <http://dbpedia.org/ontology/resident> ?birthplace .
    ?residents rdfs:label ""Stephen Verona""@en .

    ?spaulding <http://dbpedia.org/ontology/child> ?child .
    ?child a <http://dbpedia.org/ontology/FictionalCharacter>, <http://dbpedia.org/ontology/SoapCharacter> .
    
    ?father <http://dbpedia.org/ontology/father> ?child .

    FILTER(?residents = ?resident)
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
184,49,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
# Step 1: Find Archduchess Margaret of Austria (born 1925)
SELECT ?margaret WHERE {
    ?margaret <http://dbpedia.org/property/birthDate> ""1925-01-01""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?margaret <http://dbpedia.org/ontology/name> ""Margaret of Austria""@en .
}

# Step 2: Find her parent
SELECT ?parent WHERE {
    ?margaret <http://dbpedia.org/ontology/parent> ?parent .
}

# Step 3: Find the child of that parent (grandchild of Margaret)
SELECT ?grandchild WHERE {
    ?parent <http://dbpedia.org/ontology/child> ?grandchild .
}

# Step 4: Find the parent of this grandchild
SELECT ?greatGrandparent WHERE {
    ?grandchild <http://dbpedia.org/ontology/parent> ?greatGrandparent .
}

# Step 5: Identify the native of Budapest
SELECT ?budaNative WHERE {
    ?budaNative <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Budapest> .
}

# Step 6: Find their parent
SELECT ?budaParent WHERE {
    ?budaNative <http://dbpedia.org/ontology/parent> ?budaParent .
}

# Step 7: Find the common parent between greatGrandparent and budaParent
SELECT DISTINCT ?commonParent WHERE {
    VALUES (?entity1 ?entity2) { 
        (?greatGrandparent ?budaParent)
        (?budaParent ?greatGrandparent)
    }
    ?entity1 <http://dbpedia.org/ontology/child> ?commonParent .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
994,41,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT DISTINCT ?associatedArtist WHERE {
    # Step 1: Find associated musical artist of Watchtower
    ?watchtower <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
    
    # Step 2: Find band member of Don Dokken who is also an associated artist of Watchtower
    ?donDokkenMember <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Don_Dokken> .
    FILTER(?artist1 = ?donDokkenMember)
    
    # Step 3: Find band that is a band, group, and organization with Meshuggah as a member
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?band <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Meshuggah> .

    # Step 4: Find associated musical artist of the identified band
    ?band <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
161,56,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director and military force of Spanish Civil War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . }","```sparql
# Step 1: Find Francisco Franco's military force that is a societal event, an event, and a military conflict.
SELECT ?force WHERE {
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?force <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Francisco_Franco>.
}

# Step 2: Identify the commander known as ""El Director.""
SELECT ?commander WHERE {
    ?commander <http://www.w3.org/2000/01/rdf-schema#label> ""El Director""@en.
    ?force <http://dbpedia.org/property/commander> ?commander.
}

# Step 3: Find the military force involved in the Spanish Civil War.
SELECT ?spanishCivilWarForce WHERE {
    ?spanishCivilWarForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?spanishCivilWarForce <http://dbpedia.org/property/name> ""Spanish Civil War""@en.
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
318,8,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?profession ?person WHERE {
    <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://purl.org/dc/terms/profession> ?profession .
    ?person <http://purl.org/dc/terms/profession> ?profession .
    ?person <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> .
    FILTER(?person != <http://dbpedia.org/resource/Robert_Xavier_Rodriguez>)
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
659,43,test,"Give me the military force of Napoleonic Wars and commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
SELECT ?militaryForce ?commander WHERE {
    ?event <http://dbpedia.org/ontology/event> ?war .
    ?war <http://www.w3.org/2000/01/rdf-schema#label> ""Napoleonic Wars"" .
    
    ?campaign <http://dbpedia.org/ontology/battle> ?war .
    ?campaign <http://www.w3.org/2000/01/rdf-schema#label> ""German campaign of 1813"" .

    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?unit <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse"" .

    ?war <http://dbpedia.org/property/militaryForce> ?militaryForce .
    
    ?campaign <http://dbpedia.org/property/commander> ?commander .
    ?war <http://dbpedia.org/property/commander> ?commander .
}
```",5,9,6,3,3,3,3,71,0,0,6,0,0.0,0
963,19,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of Central European Time.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
SELECT ?location ?country ?rulingParty ?administration WHERE {
  # Step 1: Find the location using postal code ""21205""
  ?location <http://dbpedia.org/ontology/postalCode> ""21205"" .
  
  # Step 2: Determine the country of this location
  ?location <http://dbpedia.org/ontology/country> ?country .

  # Step 3: Find the ruling political party in that country
  ?rulingParty <http://dbpedia.org/ontology/country> ?country .
  ?rulingParty a <http://dbpedia.org/ontology/PoliticalParty> .
  ?rulingParty <http://dbpedia.org/property/rulingParty> ""true""^^<http://www.w3.org/2001/XMLSchema#boolean> .

  # Step 4: Get the administration details of this ruling party
  ?administration <http://dbpedia.org/ontology/administration> ?rulingParty .
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
391,53,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://www.w3.org/2000/01/rdf-schema#label> ?nickname .
}

# Step 2: Identify the actor who acted in both specified movies
SELECT DISTINCT ?actor WHERE {
    # Find actors of a movie that is also a work and TV show with Roz Ryan
    ?movie <http://dbpedia.org/ontology/starring> ?actor ;
           <http://www.w3.org/2000/01/rdf-schema#label> ?title .
    FILTER CONTAINS(LCASE(?title), ""roz ryan"")
    ?movie <http://purl.org/dc/terms/subject> ?genre .
    FILTER EXISTS { ?genre <http://dbpedia.org/ontology/Movie> . }
    FILTER EXISTS { ?genre <http://dbpedia.org/ontology/Work> . }
    FILTER EXISTS { ?genre <http://dbpedia.org/ontology/TVSeries> . }

    # Find actors of ""The Departed""
    ?departedMovie <http://dbpedia.org/ontology/starring> ?actor .
    ?departedMovie <http://www.w3.org/2000/01/rdf-schema#label> ""The Departed"" .

    # Ensure the same actor is found in both queries
}

# Step 3: Get the native place of this actor
SELECT ?nativePlace WHERE {
    ?actor <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,70,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?nativePlace WHERE {
    # Step 1: Identify John Pertwee
    ?johnPertwee <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
    
    # Step 2: Find his child who is a professional in acting, narration, and production
    ?child <http://dbpedia.org/ontology/parent> ?johnPertwee ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    
    # Step 3: Determine the claim to fame of this child
    ?child <http://dbpedia.org/property/filmography> ?film ;
           <http://dbpedia.org/property/militaryConflicts> ?conflict .
    
    # Step 4: Identify the actor associated with these claims to fame
    ?actor <http://dbpedia.org/ontology/film> ?film ;
           <http://dbpedia.org/ontology/militaryConflict> ?conflict .
    
    # Step 5: Find the native of France who is both a politician and an office holder
    ?politician <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/France> ;
                <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>, <http://dbpedia.org/ontology/OfficeHolder> .
    
    # Step 6: Locate the residence of this French politician/office holder
    ?residence <http://dbpedia.org/property/residence> ?politician ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> ;
               <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .
    
    # Step 7: Determine the native place of this residence
    ?residence <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
16,69,test,Give me the spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v7 . },"```sparql
SELECT ?tedSpouse ?satomiSpouse WHERE {
    # Find Ted McGinley's birth name and spouse
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?tedBirthName .
    ?person1 <http://dbpedia.org/ontology/birthName> ?tedBirthName .
    ?person1 <http://dbpedia.org/ontology/spouse> ?tedSpouse .

    # Find Satomi Ishihara's spouse
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?satomiProfession .
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/spouse> ?satomiSpouse .

    # Ensure the profession matches
    FILTER(?satomiProfession = <http://dbpedia.org/resource/Actress>)  # Assuming actress as her known profession
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
701,45,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen and parent of Henuttawy (19th dynasty).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
# Step 1: Find the commander who is royalty and involved in the Battle of Perire
SELECT ?commander WHERE {
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
    ?commander <http://www.w3.org/2002/07/owl#sameAs> ?royalty .
}

# Step 2: Find the parent of Meritamen and Henuttawy (19th dynasty)
SELECT ?parent WHERE {
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Meritamen> .
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> .
}

# Step 3: Find the father of the commander
SELECT ?father WHERE {
    ?commander <http://dbpedia.org/property/father> ?father .
}

# Step 4: Find the spouse of this father
SELECT ?spouse WHERE {
    ?father <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
232,68,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
# Step 1: Find Jon Pertwee's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
}

# Step 2: Identify Sylvie Bermann's British settlement residence
SELECT ?settlement WHERE {
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
    ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
    ?settlement <http://dbpedia.org/ontology/inhabitant> <http://dbpedia.org/resource/Sylvie_Bermann> .
}

# Step 3: Find child of Sylvie Bermann with Jon Pertwee's birth name
SELECT ?child WHERE {
    ?child <http://dbpedia.org/ontology/birthName> ?birthName .
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Sylvie_Bermann> .
}

# Step 4: Identify professional's claim to fame (film and military conflict)
SELECT ?claimToFame WHERE {
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> ;
                  <http://dbpedia.org/ontology/narrator> ?true ;
                  <http://dbpedia.org/ontology/producer> ?true .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>, <http://dbpedia.org/ontology/MilitaryConflict> ;
                 <http://dbpedia.org/property/actor> ?professional .
}

# Step 5: Find actor of the film
SELECT ?actor WHERE {
    ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> ;
          <http://dbpedia.org/property/actor> ?actor .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
378,51,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in Peninsular War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?triggeCommanderFame ?peninsularWarCommanderFame WHERE {
  # Find the war involving Thomas Trigge
  ?war <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Thomas_Trigge> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Find the commander of this war
  ?war <http://dbpedia.org/property/commander> ?triggeCommander .
  
  # Get the claim to fame for this commander
  ?triggeCommander <http://dbpedia.org/ontology/notableworks> ?triggeCommanderFame .

  # Find the Peninsular War
  ?peninsularWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?peninsularWar <http://dbpedia.org/resource/Peninsular_War> .

  # Find the commander of the Peninsular War
  ?peninsularWar <http://dbpedia.org/property/commander> ?peninsularWarCommander .

  # Get the claim to fame for this commander
  ?peninsularWarCommander <http://dbpedia.org/ontology/notableworks> ?peninsularWarCommanderFame .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
528,42,test,Give me the war of Orozimbo Barbosa and force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
SELECT DISTINCT ?warOrozimbo ?forceNarciso ?warPisaguaForce WHERE {
  # Wars involving Orozimbo Barbosa
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?warOrozimbo .

  # Force of Narciso Campero Leyes
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/memberOf> ?forceNarciso .
  }

  # Wars involving the military force in the Battle of Pisagua
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
                 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> .
  ?militaryForce <http://dbpedia.org/ontology/battle> ?warPisaguaForce .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
747,68,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
SELECT DISTINCT ?person WHERE {
  ?decedent <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Zolotonosha>;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>, <http://dbpedia.org/ontology/SoccerPlayer>.
  ?decedentBirthDate <http://dbpedia.org/property/birthDate> ?birthDate.
  
  ?tracey <http://dbpedia.org/resource/Tracey_Elizabeth_McSween>;
          <http://dbpedia.org/ontology/memberOfBand> ?band.
  
  ?song <http://dbpedia.org/property/writer> ?writer;
        <http://dbpedia.org/property/singer> <http://dbpedia.org/resource/Amba_Shepherd>.
  
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate;
          <http://dbpedia.org/ontology/memberOfBand> ?band, ?writer.
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
427,47,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?alumnus ?father ?party ?italianPartyName WHERE {
  # Find an alumnus of MIT
  ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  
  # Get the father of that alumnus
  ?alumnus <http://dbpedia.org/ontology/father> ?father .
  
  # Find the political party of the father
  OPTIONAL { ?father <http://dbpedia.org/property/politicalParty> ?party . }
  
  # Reference to the name of Italian People's Party (1994)
  ?italianParty <http://dbpedia.org/ontology/name> ?italianPartyName .
  FILTER(?italianParty = <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)>)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,66,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?bandMember WHERE {
    # Step 1: Identify Don Dokken as a musical artist
    ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?dokken rdfs:label ""Don Dokken""@en .

    # Step 2: Find associated musical artists of Watchtower
    ?watchtower <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?watchtower rdfs:label ""Watchtower (band)""@en .
    ?associatedArtist <http://dbpedia.org/property/associatedMusicalArtist> ?watchtower .

    # Step 3: Find band members of Meshuggah
    ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/Organisation>, <http://dbpedia.org/ontology/MusicalGroup> .
    ?meshuggah rdfs:label ""Meshuggah""@en .
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/Organisation>, <http://dbpedia.org/ontology/MusicalGroup> .
    ?bandMember <http://dbpedia.org/property/bandMember> ?meshuggah .

    # Combine to find the band member
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?bandMember rdfs:label ?associatedArtistLabel .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
356,16,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of 2014 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?person ?team WHERE {
    ?person <http://dbpedia.org/ontology/soccerPlayer> true .
    ?person <http://dbpedia.org/ontology/soccerManager> true .
    ?person <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Wolverhampton> .
    ?person <http://dbpedia.org/ontology/team> ?team .
    ?team <http://dbpedia.org/ontology/season> ?season .
    FILTER(?season >= ""2015-01-01""^^xsd:date && ?season <= ""2016-01-01""^^xsd:date)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
92,66,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Find the band associated with Jim Sheppard
SELECT ?band WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Jim Sheppard""@en .
  ?person <http://dbpedia.org/ontology/band> ?band .
}

UNION

# Find the band associated with Joseph Michael using his birth name
SELECT ?band WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael""@en .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/band> ?band .
}

UNION

# Find a band member who references Nevermore
SELECT ?band WHERE {
  ?reference <http://www.w3.org/2000/01/rdf-schema#label> ""Nevermore""@en .
  ?member <http://dbpedia.org/ontology/memberOf> ?band .
  ?member <http://dbpedia.org/ontology/reference> ?reference .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
701,29,test,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?parent WHERE {
    ?meritamen <http://dbpedia.org/ontology/birthName> ""Meritamen"" .
    ?meritamen <http://dbpedia.org/ontology/parent> ?parent .
    ?parent <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ramesses_II> .
    OPTIONAL { 
        ?child <http://dbpedia.org/ontology/birthParent> ?parent ;
               <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II> .
    }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
617,53,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?parent WHERE {
    # Step 1: Identify Antiochus (son of Antiochus III the Great)
    ?antiochus dbp:father <http://dbpedia.org/resource/Antiochus_III_the_Great> .
    
    # Step 2: Find the child of this Antiochus
    ?child1 dbp:parent ?antiochus .
    
    # Step 3: Determine the parent of that child
    ?parent1 dbp:child ?child1 .
    
    # Step 4: Identify the successor of Antiochus II Theos who is royalty and married to Laodice IV
    ?successor dbp:succeededBy <http://dbpedia.org/resource/Antiochus_II_theos> ;
               a dbo:Monarch ;
               dbp:spouse <http://dbpedia.org/resource/Laodice_IV> .
    
    # Step 5: Find the child of this successor who is also royalty
    ?child2 dbp:parent ?successor ;
            a dbo:Monarch .
    
    # Step 6: Determine the child of the child from step 5
    ?grandChild dbp:parent ?child2 .
    
    # Step 7: Find the parent of the child identified in step 6
    ?parent2 dbp:child ?grandChild .
    
    FILTER(?parent1 = ?parent2)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,33,test,"Give me the military force of Rif War and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT DISTINCT ?rifWarForce ?predecessorEventForce WHERE {
    # Military force of Rif War
    ?rifWar <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> .
    ?rifWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?rifWar ?p ?rifWarForce .

    # Predecessor of Indalecio Prieto
    ?indalecio <http://dbpedia.org/resource/Indalecio_Prieto> ;
               <http://dbpedia.org/property/predecessor> ?predecessor .

    # Societal event or military conflict involving the predecessor
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/SocietalEvent> | <http://dbpedia.org/ontology/MilitaryConflict>) ;
           ?p ?predecessor .

    # Military force of the predecessor's event or conflict
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Battle> | <http://dbpedia.org/ontology/MilitaryUnit>) ;
           ?p ?predecessorEventForce .
}
```",4,6,5,3,2,3,3,71,0,0,34,0,0.0,0
801,26,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
SELECT ?producer WHERE {
    ?rapper a <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://www.w3.org/2000/01/rdf-schema#label> ""Rapper"" .
    ?work a <http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song> ;
          <http://purl.org/dc/terms/creator> ?rapper .
    ?work <http://dbpedia.org/property/producer> ?producer .
}
```",3,7,4,3,1,3,3,71,0,0,956,0,0.0,0
547,46,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Part 1: Resting place of the child of the child of William Haliburton
SELECT ?grandchild ?restingPlaceHaliburton WHERE {
    <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
    OPTIONAL { ?grandchild <http://dbpedia.org/ontology/burialPlace> ?restingPlaceHaliburton . }
}

# Part 2: Resting place of the actor of ""Enemy at the Door""
UNION

SELECT ?actor ?restingPlaceMovie WHERE {
    <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?actor .
    OPTIONAL { ?actor <http://dbpedia.org/ontology/burialPlace> ?restingPlaceMovie . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
294,24,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Part 1: Resting place of the architect of P. D. Houston Jr. House
SELECT ?architect ?restingPlace WHERE {
    <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?architect .
    OPTIONAL { ?architect <http://dbpedia.org/property/burialPlace> ?restingPlace . }
}

# Part 2: Entity in the birthplace of Marion James
SELECT ?birthPlace ?entity WHERE {
    <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER (isLiteral(?birthPlace) && contains(str(?birthPlace), ""Settlement""))
    OPTIONAL { ?birthPlace <http://www.w3.org/2004/02/skos/core#related> ?entity . }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
492,51,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
SELECT ?commander WHERE {
    # Step 1: Find the country of Khemis Miliana District
    <http://dbpedia.org/resource/Khemis_Miliana_District> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .

    # Step 2: Identify the capital of that country
    ?country <http://dbpedia.org/ontology/capital> ?capital .

    # Step 3: Find Frédéric-Georges Herr who died in that capital
    ?person <http://dbpedia.org/property/deathPlace> ?deathPlace .
    ?person rdfs:label ""Frédéric-Georges Herr""@en .
    FILTER(?deathPlace = ?capital) .

    # Step 4: Determine the military conflict where this person was a commander
    ?person <http://dbpedia.org/ontology/battleCommander> ?commander .
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,67,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
# Find the actor of ""Return to Nuke 'Em High Volume 1"" and band member of Nevermore
SELECT ?actor WHERE {
    ?actor <http://dbpedia.org/property/role> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> .
    ?actor <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore_(band)> .
}

# Find the person born with the birth name of Joseph Michael
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Joseph Michael"" .
}

# Get associated musical artists for both individuals
SELECT DISTINCT ?actor ?artist1, ?person ?artist2 WHERE {
    # Actor's associated musical artist
    ?actor <http://dbpedia.org/ontology/musicalArtist> ?artist1 .
    
    # Person born as Joseph Michael's associated musical artist
    ?person <http://dbpedia.org/property/birthName> ""Joseph Michael"" .
    ?person <http://dbpedia.org/ontology/musicalArtist> ?artist2 .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,48,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Find the war involving Saitō Hajime that is a military conflict, event, and societal event.
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Sait%C5%8D_Hajime> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflicts1000Through2000SomeProperties.yaml> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Events1000Through2000SomeProperties.yaml> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvents1000Through2000SomeProperties.yaml> .
}

# Step 2: Identify the commander of this war.
SELECT ?commander WHERE {
    ?war <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 3: Find the birthplace of this commander.
SELECT ?birthPlace WHERE {
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Step 4: Identify Emperor Go-Mizunoo's father and his administration.
SELECT ?father ?administration WHERE {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/administration> ?administration .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
232,59,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT DISTINCT ?child WHERE {
    # Step 1: Get Jon Pertwee's birth name
    ?birthNameResource <http://dbpedia.org/ontology/birthName> ?birthName .
    
    FILTER(?birthNameResource = <http://dbpedia.org/resource/Jon_Pertwee>)
    
    # Step 2: Find a person with the same birth name
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    
    # Step 3: Identify the claim to fame of an actor, narrator, and producer that is both a film and a military conflict
    ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> ;
                  <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Narrator> ;
                  <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Producer> .
    ?professional <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film98b8f2c0> ;
                 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108a5e7> .
    
    # Step 4: Find an actor associated with this claim to fame
    ?actor <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
    
    # Step 5: Get the child of the person identified in step 2
    ?person <http://dbpedia.org/ontology/child> ?child .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
182,20,test,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake and entity in Sri Lanka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT DISTINCT ?warGotabhaya ?warMahesh ?entityInSriLanka WHERE {
    # Wars related to Gotabhaya Rajapaksa
    <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/ontology/battle> ?warGotabhaya .
    
    # Wars related to Mahesh Senanayake
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?warMahesh .

    # Entity in Sri Lanka associated with either individual
    OPTIONAL {
        { ?entityInSriLanka <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Sri_Lanka> . }
        UNION
        { ?entityInSriLanka <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
          FILTER EXISTS { ?entityInSriLanka <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Sri_Lanka> }
        }
    }

    # Linking entity to either individual
    OPTIONAL {
        ?entityInSriLanka <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
        FILTER EXISTS { 
            { ?entityInSriLanka <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> }
            UNION
            { ?entityInSriLanka <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Mahesh_Senanayake> }
        }
    }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
161,52,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Identify the person who was a decedent at Francoist Spain and a commander in the Biscay Campaign
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/decedent> <http://dbpedia.org/resource/Francoist_Spain>.
    ?person <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Biscay_Campaign>.
}

# Step 2: Determine their military force
SELECT ?militaryForce WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?person <http://dbpedia.org/property/militaryForce> ?militaryForce.
}

# Step 3: Find Francisco Largo Caballero's military force
SELECT ?caballeroMilitaryForce WHERE {
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/militaryForce> ?caballeroMilitaryForce.
}

# Step 4: Identify the military force of the force from step 2
SELECT ?finalMilitaryForce WHERE {
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?militaryForce <http://dbpedia.org/property/militaryForce> ?finalMilitaryForce.
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
391,20,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  # Find the claim to fame (work) of Michael Ballhaus
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/property/claimToFame> ?work .
  
  # Find actors who are natives of Compton, California and have acted in this work
  ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Compton,_California> ;
         <http://dbpedia.org/ontology/actor> ?role .
  FILTER EXISTS { ?role <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FilmRole> }
  FILTER EXISTS { ?role <http://dbpedia.org/ontology/film> ?work }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
345,16,test,"Give me the figure known as the nickname of FC Vaduz and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
# Query 1: Find the nickname of FC Vaduz
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/ontology/nickname> ?nickname .
}

# Query 2: Find the team associated with a person born on 1978-09-15 who is both a soccer player and manager
SELECT DISTINCT ?team WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    ?person <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?person <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(CONTAINS(LCASE(?profession), ""soccer player"") && CONTAINS(LCASE(?profession), ""manager""))
    ?person <http://dbpedia.org/property/team> ?team .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
232,25,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?sylvieNative ?actorNative WHERE {
    # Sylvie Bermann's residence
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
    ?sylvie <http://dbpedia.org/property/residence> ?residence .
    ?sylvie rdfs:label ""Sylvie Bermann""@en .
    
    # Actor of Dog Soldiers
    ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?film rdfs:label ""Dog Soldiers""@en .
    ?actor <http://dbpedia.org/ontology/starring> ?film .

    # Native places
    ?sylvie <http://dbpedia.org/ontology/native> ?sylvieNative .
    ?actor <http://dbpedia.org/ontology/native> ?actorNative .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
404,50,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . }","```sparql
SELECT ?finalParent WHERE {
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?father <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""royalty""))
  ?child <http://dbpedia.org/ontology/father> ?parent .
  ?parent <http://dbpedia.org/ontology/child> ?grandChild .
  ?grandChild <http://dbpedia.org/ontology/father> ?finalParent .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
16,64,test,Give me the professional in Actress and person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?actress WHERE {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
    ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?spouse <http://dbpedia.org/property/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
    ?actress <http://dbpedia.org/ontology/birthName> ?birthName .
    ?actress <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,34,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . }","```sparql
SELECT ?parentIlona ?native ?parentNative WHERE {
  # Query for parent of Archduchess Ilona of Austria
  <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/parent> ?parentIlona .

  # Query for native of a landmark at elevation 96.0
  ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#lat> ?lat .
  ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#long> ?long .
  ?settlement <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?settlement <http://dbpedia.org/ontology/naturalFeature> ?landmark .

  # Find natives of the settlement
  ?native <http://dbpedia.org/ontology/nationality> ?nationality .
  ?nationality <http://www.w3.org/ns/prov#wasDerivedFrom> ?settlement .

  # Query for parent of the native
  ?native <http://dbpedia.org/ontology/parent> ?parentNative .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
617,61,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?parent WHERE {
    ?commander <http://dbpedia.org/property/commanded> <http://dbpedia.org/resource/Battle_of_Panium> .
    ?childCommander <http://dbpedia.org/ontology/child> ?commander .
    
    ?antiochus <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Antiochus_III_the_Great#Antiochus> .
    ?successor <http://dbpedia.org/ontology/successor> ?antiochus .
    ?childSuccessor <http://dbpedia.org/ontology/child> ?successor .
    ?spouse <http://dbpedia.org/property/spouse> ?childSuccessor .

    ?parent <http://dbpedia.org/ontology/parent> ?childCommander .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
659,56,test,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
SELECT ?commander WHERE {
  # Commander in Battle of Leipzig
  ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Leipzig> .
  ?battle <http://dbpedia.org/ontology/commander> ?commander .

  # Commander in the force of Arthur Wellesley, 1st Duke of Wellington
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?force <http://dbpedia.org/ontology/commander> ?commander2 .
  ?force <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .

  # Military force related to a societal event and a military conflict involving Rutger Jan Schimmelpenninck
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?force .

  # Ensure the commanders are the same
  FILTER(?commander = ?commander2)
}
```",6,9,7,3,3,3,3,71,0,0,6,0,0.0,0
747,34,test,"Give me the band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?band ?person WHERE {
    ?decedent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> ;
              <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .
    ?decedent <http://dbpedia.org/ontology/birthDate> ?birthDate .

    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    
    FILTER(?decedent != ?person)

    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/property/memberOf> ?band .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
994,69,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Step 1: Find Meshuggah band members
SELECT ?meshuggahMember WHERE {
    ?meshuggah <http://dbpedia.org/ontology/member> ?meshuggahMember .
    ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
    ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    VALUES ?meshuggah { <http://dbpedia.org/resource/Meshuggah> }
}

# Step 2: Find associated musical artists for Meshuggah's band members
SELECT DISTINCT ?associatedArtist WHERE {
    ?meshuggahMember <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
    # Join with step 1 results
    FILTER(?meshuggahMember IN {<#meshuggahMemberResults>})
}

# Step 3: Find associated musical artists for Watchtower
SELECT DISTINCT ?watchtowerAssociatedArtist WHERE {
    ?watchtower <http://dbpedia.org/property/associatedMusicalArtist> ?watchtowerAssociatedArtist .
    VALUES ?watchtower { <http://dbpedia.org/resource/Watchtower_(band)> }
}

# Step 4: Find band members of Don Dokken
SELECT DISTINCT ?donDokkenMember WHERE {
    ?donDokken <http://dbpedia.org/ontology/member> ?donDokkenMember .
    VALUES ?donDokken { <http://dbpedia.org/resource/Don_Dokken> }
}

# Step 5: Find associated musical artists for Watchtower's associated artists
SELECT DISTINCT ?finalAssociatedArtist WHERE {
    ?watchtowerAssociatedArtist <http://dbpedia.org/property/associatedMusicalArtist> ?finalAssociatedArtist .
    # Join with step 3 results
    FILTER(?watchtowerAssociatedArtist IN {<#watchtowerAssociatedArtistResults>})
}

# Combine results from steps 2 and 5
SELECT DISTINCT ?result WHERE {
    VALUES ?result { <#step2Results> <#step5Results> }
}
```

Note: The placeholders `<#meshuggahMemberResults>`, `<#watchtowerAssociatedArtistResults>`, `<#step2Results>`, and `<#step5Results>` need to be replaced with actual query results from the respective steps when executed in a SPARQL environment that supports subqueries or intermediate result storage.",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
10,28,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v3 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Part 1: Sharon Kao's professional in birth name
SELECT ?birthName ?profession WHERE {
    <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
    OPTIONAL { <http://dbpedia.org/resource/Sharon_Kao> <http://purl.org/dc/terms/profession> ?profession . }
}

# Part 2: Associated musical artist of Matt Colton
SELECT ?associatedArtist WHERE {
    ?artist <http://dbpedia.org/ontology/birthName> ""Matt Colton"" .
    OPTIONAL { ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist . }
}

# Part 3: Band member of Luke Francis Vibert
SELECT ?bandMember WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Luke Francis Vibert"" .
    OPTIONAL { ?person <http://dbpedia.org/ontology/memberOfBand> ?bandMember . }
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
16,48,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
    # Step 1: Get Gigi Rice's birth name
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?gigiBirthName .
    
    # Step 2: Find Gigi Rice's spouse
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/spouse> ?spouse .

    # Step 3: Get Ted McGinley's birth name
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?tedBirthName .
    
    # Step 4: Find the person who is both Gigi Rice's spouse and born as her birth name, 
    # and also check if this person has a birth name matching Ted McGinley's birth name
    ?spouse <http://dbpedia.org/ontology/birthName> ?gigiBirthName .
    OPTIONAL { ?spouse <http://dbpedia.org/ontology/birthName> ?tedBirthName . }
    
    FILTER(?gigiBirthName = ?tedBirthName)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
328,52,test,Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?commander WHERE {
    ?force <http://dbpedia.org/ontology/commander> ?commander .
    ?force <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> .

    ?campaignCommander <http://dbpedia.org/ontology/commander> ?campaign .
    ?campaign <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
    ?award <http://dbpedia.org/property/awards> ?campaignCommander .

    ?sovietLeader <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> .
    
    FILTER(?commander = ?campaignCommander && ?commander = ?sovietLeader)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
314,20,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT ?awardee WHERE {
    # Step 1: Find awards received by Sergei Makovetsky
    <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?award .

    # Step 2: Find other awardees of these awards
    ?awardee <http://dbpedia.org/property/awards> ?award .
    
    # Step 3: Filter for those deceased at Madrid
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> . }
    
    # Step 4: Check if they were commanders in the Spanish Civil War
    OPTIONAL { ?awardee <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }

    FILTER(?awardee != <http://dbpedia.org/resource/Sergei_Makovetsky>)
    FILTER(BOUND(?award))
}
```",4,4,5,2,3,2,3,28,1,949,0,0.0010526315789473684,1.0,0.002103049421661409
712,16,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
# Query for the capital of the country associated with Armed Forces of South Russia
SELECT ?capital WHERE {
    ?forces <http://dbpedia.org/ontology/country> ?country .
    ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .
    FILTER(STR(?forces) = ""Armed_Forces_of_South_Russia"")
}

# Query for the resting place of an awardee of Hero of the Soviet Union
SELECT DISTINCT ?restingPlace WHERE {
    ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> .
    OPTIONAL { ?person <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
547,25,test,Give me the resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for Simon Cadell's resting place
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

UNION

# Query for awardees of the Knight Grand Cross of the Order of St Michael and St George's resting place
SELECT ?awardee ?restingPlace WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
659,31,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
    ?person <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Battle_of_Leipzig> .
}
```",4,5,5,3,2,3,3,71,0,0,19,0,0.0,0
328,22,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
# Query for awardees of the Order of Suvorov
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> .
}

# Query for leader of a government agency associated with Joseph Stalin
SELECT ?agency ?leader WHERE {
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> ;
            <http://dbpedia.org/property/officeHolder> <http://dbpedia.org/resource/Joseph_Stalin> .
    ?agency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> ;
            <http://dbpedia.org/property/leader> ?leader .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
339,16,test,Give me the child of the child of Christian IX of Denmark and father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Step 1: Get Christian IX's children
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Get grandchildren of Christian IX (children of his children)
SELECT ?grandchild WHERE {
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
    FILTER EXISTS { 
        <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/child> ?child .
    }
}

# Step 3: Get Grand Duchess Elena Vladimirovna's children
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?child .
}

# Step 4: Get fathers of these children (children of Grand Duchess Elena Vladimirovna)
SELECT ?father WHERE {
    ?child <http://dbpedia.org/property/father> ?father .
    FILTER EXISTS { 
        <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?child .
    }
}

# Final Step: Find common individuals between Christian IX's grandchildren and fathers of Grand Duchess Elena Vladimirovna's children
SELECT DISTINCT ?commonIndividual WHERE {
    # Christian IX's grandchild
    ?grandchild1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    FILTER EXISTS { 
        ?child <http://dbpedia.org/ontology/child> ?grandchild1 .
        <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/child> ?child .
    }

    # Father of Grand Duchess Elena Vladimirovna's child
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    FILTER EXISTS { 
        ?child <http://dbpedia.org/property/father> ?father .
        <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?child .
    }

    # Find common individuals
    FILTER (?grandchild1 = ?father)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
177,9,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in the residence of Alexander Gamelin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://dbpedia.org/ontology/location> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?headquarters WHERE {
    # Find organizations associated with Joo Don-sik
    ?org <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
    ?org <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Joo_Don-sik> .

    # Find the residence of Alexander Gamelin
    <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?residence .

    # Find entities that share this residence and are organizations
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
    ?entity <http://dbpedia.org/property/residence> ?residence .

    # Get the headquarters of these overlapping organizations
    ?org <http://dbpedia.org/ontology/headquarters> ?headquarters .
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
617,47,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Find the child of Seleucus II Callinicus who is royalty.
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Seleucus_II_Callinicus> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""royalty""))
}

# Step 2: Find the spouse of that child.
SELECT ?spouse WHERE {
    ?child <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 3: Identify Antiochus (son of Antiochus III the Great) and his successor who is royalty.
SELECT ?successor WHERE {
    <http://dbpedia.org/resource/Antiochus_I_Soter> <http://dbpedia.org/ontology/successor> ?successor .
    ?successor <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""royalty""))
}

# Step 4: Determine the child of this successor.
SELECT ?childOfSuccessor WHERE {
    ?successor <http://dbpedia.org/ontology/child> ?childOfSuccessor .
}

# Step 5: Find the child of the spouse identified in step 2.
SELECT ?finalChild WHERE {
    ?spouse <http://dbpedia.org/ontology/child> ?finalChild .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
492,60,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?capitalDecedent ?workDecedent WHERE {
  # Find the capital of Khemis Miliana District
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/capital> ?capital .
  
  # Find a person who died in that capital
  ?person1 <http://dbpedia.org/property/deathPlace> ?capital .
  BIND(?person1 AS ?capitalDecedent)
  
  # Find the author associated with French Algeria
  ?author <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/French_Algeria> .
  
  # Find a work of this author and a person who died there
  ?work <http://purl.org/dc/terms/creator> ?author .
  ?person2 <http://dbpedia.org/property/deathPlace> ?work .
  BIND(?person2 AS ?workDecedent)
}
```",6,7,7,3,2,3,3,71,0,0,16,0,0.0,0
391,57,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Identify the work where this spouse acted
SELECT DISTINCT ?work WHERE {
    ?spouse <http://purl.org/dc/terms/contributor> ?work .
    ?work <http://dbpedia.org/ontology/actor> ?spouse .
}

# Step 3: Find actor from Compton, California involved in the work
SELECT DISTINCT ?actor WHERE {
    ?work <http://dbpedia.org/ontology/actor> ?actor .
    ?actor <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> .
    ?actor <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
}

# Step 4: Ensure this actor acted in a movie with Roz Ryan
SELECT DISTINCT ?movie WHERE {
    ?actor <http://dbpedia.org/ontology/actor> ?movie .
    ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
    ?movie <http://dbpedia.org/ontology/movie> ?movie .
    ?movie <http://dbpedia.org/ontology/work> ?movie .
    ?movie <http://dbpedia.org/ontology/televisionShow> ?movie .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
767,45,test,"Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
SELECT ?almaMater ?entityInBW ?alterEgo WHERE {
  # Alma Mater of Carl L. Nippert
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Entity in Baden-Württemberg
  ?entityInBW <http://dbpedia.org/ontology/location> ?location .
  FILTER(CONTAINS(LCASE(STR(?location)), ""baden-württemberg""))

  # Alter ego of the fictional character associated with Matthew Burland
  ?fictionalCharacter <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?fictionalCharacter <http://dbpedia.org/property/alterEgo> ?alterEgo .
  ?person <http://dbpedia.org/ontology/fictionalCharacter> ?fictionalCharacter .
  FILTER(STR(?person) = ""Matthew Burland"")
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
92,26,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?actor ?associatedArtist WHERE {
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?film <http://dbpedia.org/property/title> ""Return to Nuke 'Em High Volume 1"" .
    OPTIONAL { ?actor <http://dbpedia.org/ontology/musicArtist> ?associatedArtist . }
}
```",3,4,4,3,1,3,3,71,0,0,126,0,0.0,0
281,46,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT DISTINCT ?entity WHERE {
    # Step 1: Find the birthplace country of Bob Heffron
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?country .

    # Step 2: Find the awards of Jonathon Band and other awardees
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .

    # Step 3: Find wars associated with those awardees
    ?otherAwardee <http://dbpedia.org/ontology/battle> ?battle .

    # Step 4: Find entities in the birthplace country of Bob Heffron related to these wars
    ?entity <http://dbpedia.org/ontology/country> ?country .
    ?entity <http://dbpedia.org/ontology/battle> ?battle .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,55,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT DISTINCT ?militaryForce1 ?commander ?militaryForce2 WHERE {
  # Part 1: Francisco Largo Caballero's societal event and military conflict
  ?event1 <http://dbpedia.org/ontology/battle> ?battle .
  ?event1 <http://www.w3.org/2000/01/rdf-schema#label> ""Francisco Largo Caballero""@en .
  
  # Part 2: Emilio Mola's event and its commander
  ?event2 <http://dbpedia.org/ontology/battle> ?battle .
  ?event2 <http://www.w3.org/2000/01/rdf-schema#label> ""Emilio Mola""@en .
  ?event2 <http://dbpedia.org/ontology/commander> ?commander .

  # Part 3: Francisco Franco's societal event and military conflict
  ?event3 <http://dbpedia.org/ontology/battle> ?battle .
  ?event3 <http://www.w3.org/2000/01/rdf-schema#label> ""Francisco Franco""@en .
  
  # Extracting the military forces involved
  ?event1 <http://dbpedia.org/ontology/militaryForce> ?militaryForce1 .
  ?event3 <http://dbpedia.org/ontology/militaryForce> ?militaryForce2 .
}
```",6,12,7,2,3,3,3,71,0,0,32,0,0.0,0
378,45,test,"Give me the war of Joaquín Blake and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
# Find wars of Joaquin Blake
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?war .
}

# Find wars of Carl Pontus Gahn
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
}

# Find common war between Joaquin Blake and Carl Pontus Gahn
SELECT DISTINCT ?commonWar WHERE {
    { <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?commonWar . }
    UNION
    { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?commonWar . }
}

# Find war of Thomas Trigge that is a military conflict, societal event, and an event
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}

# Find commander of the war and their claim to fame
SELECT ?commander ?claimToFame WHERE {
    ?war <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/property/awards> ?award .
    OPTIONAL { ?commander <http://dbpedia.org/ontology/claimToFame> ?claimToFame . }
}
```",5,8,6,3,3,3,3,71,0,0,2,0,0.0,0
161,32,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Query for Francisco Franco's military force in societal and military conflict events
SELECT DISTINCT ?militaryForceFranco WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?event <http://dbpedia.org/property/battle> ?battle.
  ?battle <http://dbpedia.org/property/country> ?militaryForceFranco.
  ?battle <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Francisco_Franco>.
}

# Query for Francisco Largo Caballero's military force in societal and military conflict events
SELECT DISTINCT ?militaryForceCaballero WHERE {
  ?event1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>.
  ?event1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?event1 <http://dbpedia.org/property/battle> ?battleCaballero.
  ?battleCaballero <http://dbpedia.org/property/country> ?militaryForceCaballero.
  ?battleCaballero <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero>.
}
```",4,9,5,2,2,3,3,71,0,0,514,0,0.0,0
617,54,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . },"```sparql
# Step 1: Find Nysa's parent
SELECT ?nysaParent WHERE {
    <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> <http://dbpedia.org/ontology/parent> ?nysaParent .
}

# Step 2: Identify Antiochus and his successor
SELECT ?antiochusSuccessor WHERE {
    ?antiochus <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> ;
               <http://dbpedia.org/ontology/successor> ?antiochusSuccessor .
}

# Step 3: Find the child of Antiochus's successor who is royalty
SELECT ?childOfSuccessor WHERE {
    ?antiochusSuccessor <http://dbpedia.org/ontology/child> ?childOfSuccessor ;
                        <http://www.w3.org/2000/01/rdf-schema#label> ?successorLabel .
    FILTER(CONTAINS(LCASE(?successorLabel), ""royalty""))
}

# Step 4: Identify Seleucus II Callinicus and his child who is royalty
SELECT ?childOfSeleucus WHERE {
    <http://dbpedia.org/resource/Seleucus_II_Callinicus> <http://dbpedia.org/ontology/child> ?childOfSeleucus ;
                                                            <http://www.w3.org/2000/01/rdf-schema#label> ?seleucusLabel .
    FILTER(CONTAINS(LCASE(?seleucusLabel), ""royalty""))
}

# Step 5: Find the spouse of the child from step 3
SELECT ?spouse WHERE {
    ?childOfSuccessor <http://dbpedia.org/property/spouse> ?spouse .
}

# Step 6: Identify the child of the child from step 4
SELECT ?grandChild WHERE {
    ?childOfSeleucus <http://dbpedia.org/ontology/child> ?grandChild ;
                     <http://www.w3.org/2000/01/rdf-schema#label> ?childLabel .
    FILTER(CONTAINS(LCASE(?childLabel), ""royalty""))
}

# Step 7: Ensure the parent of Nysa is also the spouse from step 5
SELECT DISTINCT ?nysaParent WHERE {
    VALUES (?spouse) { ?spouse }
    ?nysaParent <http://dbpedia.org/property/spouse> ?spouse .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
617,19,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . }","```sparql
SELECT ?finalChild WHERE {
    # Step 1: Identify Richeza of Poland's father
    <http://dbpedia.org/resource/Richeza_of_Poland> <http://dbpedia.org/ontology/father> ?richezasFather .

    # Step 2: Find the parent (mother or father) of Richeza's father
    OPTIONAL { ?richezasFather <http://dbpedia.org/ontology/mother> ?grandMother . }
    OPTIONAL { ?richezasFather <http://dbpedia.org/ontology/father> ?grandFather . }

    # Step 3: Identify Boleslaus I, Duke of Bohemia's child who is a royalty
    <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> <http://dbpedia.org/ontology/child> ?boleslausChild .
    FILTER EXISTS { ?boleslausChild <http://www.w3.org/2002/07/owl#sameAs> ?royalty . }

    # Step 4: Find the child of this royal child
    ?boleslausChild <http://dbpedia.org/ontology/child> ?finalChild .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
666,17,test,"Give me the player in Steve Bruce and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?player WHERE {
    ?org <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub> .
    ?org <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .
    ?org <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England> .
    ?org <http://dbpedia.org/property/nickname> ?nickname .
    
    ?steveBruce <http://dbpedia.org/ontology/player> ?player ;
                <http://dbpedia.org/ontology/teamManager> ?org .

}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,37,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?commanderInVerdun ?war WHERE {
    ?commanderInVerdun <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Verdun> .
    ?commanderInVerdun <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
    ?commanderInVerdun <http://dbpedia.org/ontology/battle> ?war .
    FILTER(?war != <http://dbpedia.org/resource/Battle_of_Verdun>)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
9,57,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Part 1: Alma Mater of John Alderdice
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Part 2: Nickname of Queen's University Belfast
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/property/nickName> ?nickname .
}

# Part 3: Awardee of Royal Medals and their Alma Mater
SELECT DISTINCT ?awardee ?almaMater WHERE {
    ?awardee <http://dbpedia.org/ontology/awardReceived> <http://dbpedia.org/resource/Royal_Medals> .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,70,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/office> ?v3 . }","```sparql
# Step 1: Find awards received by Bruce Fraser
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?award .
}

# Step 2: Find other awardees of the same awards
SELECT DISTINCT ?otherAwardee WHERE {
    ?award <http://dbpedia.org/property/awards> ?otherAwardee .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>)
}

# Step 3: Identify the force commander at Budapest
SELECT ?commander WHERE {
    ?event <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Budapest> .
    ?person <http://dbpedia.org/ontology/deceased> true .
    ?event <http://dbpedia.org/property/commander> ?commander .
}

# Step 4: Find the leader of the government agency associated with Gustav Jonson
SELECT ?leader WHERE {
    ?officeHolder <http://dbpedia.org/ontology/politician> true ;
                  <http://dbpedia.org/ontology/office> ?office .
    ?office <http://dbpedia.org/property/leader> ?leader .
    ?governmentAgency <http://dbpedia.org/ontology/leader> ?officeHolder .
    FILTER(?officeHolder = <http://dbpedia.org/resource/Gustav_Jonson>)
}

# Combine results to find the final awardee
SELECT DISTINCT ?finalAwardee WHERE {
    # Assuming we have identified specific awards, commanders, and leaders from above steps
    ?award <http://dbpedia.org/property/awards> ?finalAwardee .
    FILTER(?finalAwardee != <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>)
    # Additional filters based on commander and leader roles
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
534,20,test,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/headquarter> ?result . ?v4 <http://dbpedia.org/ontology/owner> ?v5 . },"```sparql
SELECT DISTINCT ?headquarter WHERE {
  ?politician a dbo:Politician ;
              foaf:birthPlace dbr:Essex .

  ?child a dbo:Politician, dbo:OfficeHolder ;
         dbo:parent ?politician .

  ?birthPlace foaf:birthPlace ?child .
  
  ?owner dbo:owns ?birthPlace .

  ?venue a dbo:Venue, dbo:ArchitecturalStructure ;
         dbo:event dbr:2012_Pro12_Grand_Final .

  FILTER(?birthPlace = ?venue)

  ?headquarter dbo:headquarters ?owner .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
528,64,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT DISTINCT ?societalEvent ?warOrozimbo ?militaryForceNarciso WHERE {
  # Societal events in Chile
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  ?event <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Chile> .

  # Military forces associated with societal events
  ?militaryForce <http://dbpedia.org/ontology/battle> ?event .

  # Wars involving Orozimbo Barbosa
  OPTIONAL {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/property/wars> ?warOrozimbo .
  }

  # Narciso Campero's birth name and associated military force
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?birthNameNarciso .
  OPTIONAL {
    ?militaryForceNarciso <http://dbpedia.org/property/person> ?birthNameNarciso .
  }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
421,27,test,Give me the band member of Senidah and person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
# Find band members of Senidah
SELECT ?bandMember WHERE {
    ?senidah <http://dbpedia.org/ontology/member> ?bandMember .
    FILTER(STRSTARTS(STR(?senidah), ""http://dbpedia.org/resource/Senidah""))
}

UNION

# Find person with the birth name of Dino Merlin
SELECT ?person WHERE {
    <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    FILTER(?person != <http://dbpedia.org/resource/Dino_Merlin>)
}

UNION

# Find native of the birthplace of Samir Bekrić
SELECT ?native WHERE {
    <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?native <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER(?native != <http://dbpedia.org/resource/Samir_Bekrić>)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,57,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
SELECT ?parent WHERE {
    # Step 1: Find Ernest Augustus, Duke of Brunswick's father
    ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick>.

    # Step 2: Identify his child who is royalty
    ?child <http://dbpedia.org/ontology/parent> ?father .
    ?child a <http://dbpedia.org/ontology/Royalty> .

    # Step 3: Determine that child's royal parent
    ?royalParent <http://dbpedia.org/ontology/child> ?child .
    ?royalParent a <http://dbpedia.org/ontology/Royalty> .

    # Step 4: Match this with the spouse of Princess Victoria Louise of Prussia and find their child
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> .
    ?spouse a <http://dbpedia.org/ontology/Royalty> .
    ?spouseChild <http://dbpedia.org/ontology/parent> ?spouse .
    ?spouseChild = ?child .

    # Step 5: Finally, get the parent of this child
    ?parent <http://dbpedia.org/ontology/child> ?spouseChild .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
547,21,test,Give me the resting place of Alan Cunningham and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?alanCunninghamBurialPlace ?childName ?childBurialPlace WHERE {
  # Resting place of Alan Cunningham
  <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> <http://dbpedia.org/ontology/burialPlace> ?alanCunninghamBurialPlace .

  # Child of James Burton (property developer)
  OPTIONAL {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    ?child rdfs:label ?childName .
    ?child <http://dbpedia.org/ontology/burialPlace> ?childBurialPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,33,test,Give me the spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
# Step 1: Get Ted McGinley's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Find the profession of an actor from ""Unnatural""
SELECT DISTINCT ?actorProfession WHERE {
    ?series <http://dbpedia.org/property/starring> ?actor .
    ?actor <http://purl.org/dc/terms/profession> ?actorProfession .
    FILTER(CONTAINS(LCASE(?series), ""unnatural""))
}

# Step 3: Find professionals in the same profession as the actor
SELECT DISTINCT ?professional WHERE {
    ?professional <http://purl.org/dc/terms/profession> ?actorProfession .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
696,16,test,Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT DISTINCT ?landmark WHERE {
  # Part 1: Find the award of Nie Rongzhen
  ?award <http://dbpedia.org/property/recipient> <http://dbpedia.org/resource/Nie_Rongzhen> .
  
  # Part 2: Find birthplaces of members of Dropkick Murphys
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Dropkick_Murphys> .
  ?member <http://dbpedia.org/property/birthPlace> ?birthPlace .

  # Part 3: Find landmarks at the elevation of these locations
  ?landmark <http://dbpedia.org/ontology/elevation> ?elevation .
  
  OPTIONAL { ?award <http://dbpedia.org/ontology/location> ?location1 . }
  OPTIONAL { ?birthPlace <http://dbpedia.org/ontology/elevation> ?elevation . }

  FILTER(?elevation = ?elevation)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
767,39,test,"Give me the alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
# Query for Alma Mater of Carl L. Nippert
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Query for Alter Ego Reference of Matthew Burland's Persona
SELECT ?persona ?alterEgo WHERE {
    ?burland <http://dbpedia.org/property/persona> ?persona .
    ?persona <http://www.w3.org/2004/02/skos/core#altLabel> ?alterEgo .
    FILTER(?burland = <http://dbpedia.org/resource/Matthew_Burland>)
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
77,16,test,Give me the force of the mayor of Congress Poland and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
SELECT ?mayorForce ?war WHERE {
  # Part 1: Find the force associated with the mayor of Congress Poland
  ?mayor <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Congress_Poland>.
  ?mayor <http://dbpedia.org/property/force> ?mayorForce.

  # Part 2: Find wars involving awardees of the Golden Weapon for Bravery
  ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery>.
  ?awardee <http://dbpedia.org/ontology/battle> ?war.
}
```",4,4,5,2,2,3,2,20,0,0,13,0,0.0,0
54,55,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Find Thihapate of Mohnyin's child who is an office holder and royalty
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 2: Find the predecessor of this child
SELECT ?predecessor WHERE {
    ?officeHolder <http://dbpedia.org/property/predecessor> ?predecessor .
    FILTER(?officeHolder = ?child) # Use the result from step 1
}

# Step 3: Find Narapati I of Ava's child
SELECT ?narapatiChild WHERE {
    <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?narapatiChild .
}

# Step 4: Identify Soe Min Wimala Dewi's father
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?father .
}

# Step 5: Find the child of Soe Min Wimala Dewi's father
SELECT ?soeChild WHERE {
    ?father <http://dbpedia.org/ontology/child> ?soeChild .
    FILTER(?father = ?fatherFromStep4) # Use the result from step 4
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
55,27,test,"Give me the band of the reference, that is a band, to Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
# Step 1: Find the band member linked to both Newsted and Guns N' Roses
SELECT ?bandMember WHERE {
    ?bandMember <http://dbpedia.org/ontology/band> <http://dbpedia.org/resource/Guns_N%27_Roses> .
    ?bandMember <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Metallica> . # Newsted was a member of Metallica
}

# Step 2: Find the band associated with this individual as a reference or member
SELECT ?referenceBand WHERE {
    ?bandMember <http://dbpedia.org/ontology/band> ?referenceBand .
}

# Step 3: Determine the band that includes San Francisco Symphony as a member
SELECT ?symphonyBand WHERE {
    <http://dbpedia.org/resource/San_Francisco_Symphony> <http://dbpedia.org/property/memberOf> ?symphonyBand .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
492,47,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
# Step 1: Find the commander of the Battle of Verdun
SELECT ?verdunCommander WHERE {
    <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?verdunCommander .
}

# Step 2: Find wars commanded by the Verdun commander
SELECT DISTINCT ?war WHERE {
    ?verdunCommander <http://dbpedia.org/ontology/commander> ?war .
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 3: Identify Joseph C. Satterthwaite's place of death
SELECT ?deathPlace WHERE {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/property/placeOfDeath> ?deathPlace .
}

# Step 4: Find the commander in the identified war and connected to Satterthwaite's place of death
SELECT DISTINCT ?commander WHERE {
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
         <http://dbpedia.org/ontology/commander> ?commander .
    
    ?commander <http://dbpedia.org/property/placeOfDeath> ?deathPlace .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
404,67,test,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
SELECT ?spouse ?childOfSpouseParent WHERE {
    # Step 1: Find spouse of Princess Victoria Louise of Prussia
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .

    # Step 2: Find child of the spouse who is royalty and their parent (who is also royalty)
    ?childOfSpouse <http://dbpedia.org/ontology/parent> ?spouse .
    ?childOfSpouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    # Step 3: Find parent of Prince George William of Hanover who is royalty
    <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?parentOfGeorge .
    ?parentOfGeorge <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    # Step 4: Find child of the father of Princess Victoria Louise's spouse
    ?spouse <http://dbpedia.org/ontology/father> ?fatherOfSpouse .
    ?fatherOfSpouse <http://dbpedia.org/ontology/child> ?childOfFatherOfSpouse .

    # Final step: Ensure the child from Step 4 matches the parent from Step 2
    FILTER(?parentOfGeorge = ?spouse)
    BIND(?childOfFatherOfSpouse AS ?childOfSpouseParent)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
378,65,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
# Part 1: War of Carl Pontus Gahn
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Part 2: Claim to Fame of the Commander in Great Siege of Gibraltar
SELECT ?claimToFame WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
    ?commander <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> .
    ?commander <http://dbpedia.org/property/claimToFame> ?claimToFame .
}

UNION

# Part 3: War of the Commander in Peninsular War
SELECT ?war WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
    ?commander <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Peninsular_War> .
    ?commander <http://dbpedia.org/ontology/battle> ?war .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
54,32,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
    ?father <http://dbpedia.org/ontology/spouse> ?soeMinWimalaDewi .
    ?soeMinWimalaDewi <http://dbpedia.org/ontology/birthName> ""Soe Min Wimala Dewi"" .
    ?father <http://dbpedia.org/ontology/child> ?child .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
161,64,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?militaryForce ?commander ?decedentMilitaryForce WHERE {
  # Step 1: Identify ""El Director""
  ?elDirector <http://www.w3.org/2000/01/rdf-schema#label> ""El Director""@en .
  
  # Step 2: Find Military Force of Spanish Civil War
  ?militaryEvent <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Spanish_Civil_War> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
                 <http://dbpedia.org/ontology/battle> ?militaryEvent .

  # Step 3: Commander of the Force Associated with El Director
  ?commander <http://dbpedia.org/property/commandedMilitaryForce> ?militaryForce .
  
  # Step 4: Identify Societal Event and Military Conflict in Francoist Spain
  ?francoEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/MilitaryConflict> ;
               <http://dbpedia.org/property/place> <http://dbpedia.org/resource/Francoist_Spain> .

  # Step 5: Find Decedent Person of Francoist Spain
  ?decedent <http://www.w3.org/2002/07/owl#sameAs> ?francoEvent ;
            <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> .

  # Step 6: Military Force Associated with the Decedent's Force
  ?decedentMilitaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
                         <http://dbpedia.org/ontology/battle> ?francoEvent .
}
```",7,11,8,3,3,3,3,71,0,0,32,0,0.0,0
92,49,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
SELECT ?bandMember WHERE {
    # Part 1: Find band members of Nevermore
    ?artist <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore_(band)> .
    
    # Part 2: Find the person born as Joseph Michael and their associated band
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael""@en ;
            <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
    ?person <http://dbpedia.org/ontology/member> ?band .

    # Combine results to find the common band member
    FILTER(?artist = ?bandMember)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,59,test,Give me the parent of the child of the child of Seti I and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?commonParent WHERE {
  # Part 1: Seti I's lineage
  ?setiIChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Seti_I> .
  ?grandchild <http://dbpedia.org/ontology/parent> ?setiIChild .
  ?commonParent <http://dbpedia.org/ontology/child> ?grandchild .

  # Part 2: Amun-her-khepeshef's lineage
  ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?childOfSpouse <http://dbpedia.org/ontology/parent> ?spouse .
  ?commonParent2 <http://dbpedia.org/ontology/child> ?childOfSpouse .

  # Find the common parent
  FILTER(?commonParent = ?commonParent2)
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
378,47,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . }","```sparql
SELECT ?commonWar WHERE {
    ?peninsularWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?peninsularWar rdfs:label ""Peninsular War""@en.
    
    ?war1 <http://dbpedia.org/ontology/reference> ?peninsularWar.
    ?war2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?carlGahn rdfs:label ""Carl Pontus Gahn""@en.
    ?carlGahn dbp:birthName ""Carl Pontus Gahn""@en.
    ?war2 <http://dbpedia.org/ontology/reference> ?carlGahn.

    FILTER(?war1 = ?commonWar)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
701,71,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
    # Step 1: Amun-her-khepeshef's spouse
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
    
    # Step 2: Child of Amun-her-khepeshef's spouse
    ?child1 <http://dbpedia.org/ontology/parent> ?spouse .
    
    # Step 3: Parent of this child
    ?parent1 <http://dbpedia.org/ontology/child> ?child1 .

    # Step 4: Seti I's child
    ?setiChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Seti_I> .
    
    # Step 5: Child of Seti I's child
    ?grandchild <http://dbpedia.org/ontology/parent> ?setiChild .
    
    # Step 6: Parent of this grandchild
    ?parent2 <http://dbpedia.org/ontology/child> ?grandchild .

    # Step 7: Commander in the Battle of Perire
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?battle <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
    ?commander <http://dbpedia.org/property/commander> ?battle .

    # Step 8: Father of this commander
    ?father <http://dbpedia.org/ontology/father> ?commander .

    # Step 9: Spouse of this father
    ?spouse2 <http://dbpedia.org/property/spouse> ?father .

    # Step 10: Parent of the child from step 3 and step 6
    FILTER(?parent1 = ?parent2)
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
92,61,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Step 1: Identify Joseph Michael and his band
SELECT ?person ?band WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael""@en .
    OPTIONAL { ?person <http://dbpedia.org/ontology/band> ?band . }
}

# Step 2: Identify the actor of ""Return to Nuke 'Em High Volume 1"" and their musical artist
SELECT ?actor ?musicalArtist WHERE {
    ?film <http://dbpedia.org/property/starring> ?actor .
    FILTER(STR(?film) = STR(<http://dbpedia.org/resource/Return_to_Nuke_%27Em_High_Volume_1>))
    OPTIONAL { ?actor <http://dbpedia.org/ontology/musicalArtist> ?musicalArtist . }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
701,58,test,"Give me the parent of the child of Ramesses II and parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  # Part 1: Ramesses II's child who is a parent of Meritamen
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ramesses_II> .
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Meritamen> .

  # Part 2: Commander in the Battle of Perire and their father's spouse
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
  ?father <http://dbpedia.org/ontology/father> ?commander .
  ?spouse <http://dbpedia.org/property/spouse> ?father .

  # Find the common parent
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?parent <http://dbpedia.org/property/spouse> ?spouse .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,24,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?rulingParty ?deathPlace WHERE {
  ?region <http://www.w3.org/2000/01/rdf-schema#label> ""Sicily""@en .
  ?region <http://dbpedia.org/ontology/country> ?country .
  
  ?party <http://dbpedia.org/ontology/rulingParty> ?region ;
         a <http://dbpedia.org/ontology/PoliticalParty>, <http://dbpedia.org/ontology/Organization> .
         
  ?author <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> .
  ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
994,45,test,"Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Find associated musical artists for Red Tide (band)
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

UNION

# Find associated musical artists for S.A. Slayer
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

UNION

# Find band members of the person born as the persona of Don Dokken
SELECT ?bandMember WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?person <http://dbpedia.org/property/persona> ""Don Dokken"" .
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?band <http://dbpedia.org/ontology/member> ?bandMember .
    FILTER(?bandMember != ?person)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
16,54,test,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series) and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
# Step 1: Find Ted Martin McGinley's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Identify the actor of ""Unnatural"" and their profession
SELECT DISTINCT ?actor ?profession WHERE {
    ?series <http://dbpedia.org/property/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(STR(?series) = ""http://dbpedia.org/resource/Unnatural_(TV_series)"")
}

# Step 3: Verify Georgeanne Marie Rice's profession
SELECT DISTINCT ?person WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Georgeanne Marie Rice""@en .
    ?person <http://dbpedia.org/ontology/profession> ?profession .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,64,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of Red Tide (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find associated musical artists of Watchtower
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/member> ?member .
    ?member <http://dbpedia.org/property/persona> <http://dbpedia.org/resource/Don_Dokken> .
}

# Step 2: Find associated musical artist of Red Tide (band)
SELECT ?redTideArtist WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/member> ?member .
    ?member <http://dbpedia.org/property/associatedMusicalArtist> ?redTideArtist .
}

# Step 3: Find associated musical artist of the person from step 2
SELECT ?finalArtist WHERE {
    ?redTideArtist <http://dbpedia.org/ontology/member> ?person .
    ?person <http://dbpedia.org/property/associatedMusicalArtist> ?finalArtist .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
161,63,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
# Step 1: Find the person who was a decedent at Francoist Spain and commander in an event involving Emilio Mola
SELECT ?person WHERE {
    ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Emilio_Mola> .
    ?person <http://dbpedia.org/property/decedents> <http://dbpedia.org/resource/Francoist_Spain> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Commander> .
    ?event <http://dbpedia.org/property/commander> ?person .
}

# Step 2: Find the military force related to this person as both a societal event and a military conflict
SELECT DISTINCT ?militaryForce WHERE {
    ?person <http://dbpedia.org/ontology/militaryConflict> ?militaryForce .
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
}

# Step 3: Repeat the process for Francisco Largo Caballero
SELECT DISTINCT ?militaryForce WHERE {
    ?person2 <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
    ?person2 <http://dbpedia.org/ontology/militaryConflict> ?militaryForce .
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
54,69,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v4 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find Thinkhaya of Pagan's child
  ?thinkhayasChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  
  # Step 2: Find predecessor of that child
  ?predecessor <http://dbpedia.org/property/predecessor> ?thinkhayasChild .

  # Step 3: Identify Narapati I of Ava's child
  ?narapatisChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
  
  # Step 4: Find parent of Narapati I's child
  ?parent <http://dbpedia.org/ontology/child> ?narapatisChild .

  # Step 5: Link to Thihapate of Mohnyin through office holder and royalty
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?officeHolder <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .

  # Ensure the office holder is connected through the reference chain
  FILTER(?predecessor = ?officeHolder)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
801,65,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
SELECT ?associatedArtist WHERE {
    ?shadow <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> .
    ?shadow <http://xmlns.com/foaf/0.1/alternativeName> ""The Shadow"" .
    
    ?work <http://purl.org/dc/terms/creator> ?shadow ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song> .
    
    ?writer <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>, <http://dbpedia.org/ontology/Artist> .
    
    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",7,13,8,3,3,3,3,71,0,0,8,0,0.0,0
44,8,test,"Give me the band member of Undertow (band) and band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?undertowMember ?queensrycheMember WHERE {
    # Find band members of Undertow (band)
    <http://dbpedia.org/resource/Undertow_(band)> <http://dbpedia.org/ontology/member> ?undertowMember .
    
    # Find band members of Queensrÿche, ensuring it is both a group and an organization
    ?queensryche <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?queensryche <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?queensryche <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
    ?queensryche <http://dbpedia.org/resource/Queensrÿche> . # Ensures we are referring to the correct entity
    ?queensryche <http://dbpedia.org/ontology/member> ?queensrycheMember .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
92,47,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
SELECT ?bandMember WHERE {
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    ?actor <http://dbpedia.org/property/filmography> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> .
    ?actor <http://dbpedia.org/ontology/associatedMusicalArtist> ?musicalArtist .
    ?musicalArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?musicalArtist <http://dbpedia.org/ontology/member> ?bandMember .
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?bandMember <http://dbpedia.org/resource/Nevermore_(band)> .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
378,57,test,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in Great Siege of Gibraltar.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . }","```sparql
# Find wars involving Carl Pontus Gahn
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Find commanders in Peninsular War and Great Siege of Gibraltar
SELECT DISTINCT ?commander WHERE {
    ?battle <http://dbpedia.org/property/commander> ?commander .
    FILTER(?battle IN (<http://dbpedia.org/resource/Peninsular_War>, <http://dbpedia.org/resource/Great_Siege_of_Gibraltar>))
}

# Find wars involving these commanders
SELECT DISTINCT ?war WHERE {
    ?commander <http://dbpedia.org/property/commander> ?battle .
    FILTER(?commander IN (
        SELECT ?commander WHERE {
            ?battle <http://dbpedia.org/property/commander> ?commander .
            FILTER(?battle IN (<http://dbpedia.org/resource/Peninsular_War>, <http://dbpedia.org/resource/Great_Siege_of_Gibraltar>))
        }
    ))
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
801,51,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?writerArtist WHERE {
    ?album <http://dbpedia.org/ontology/writer> ?writer .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?album <http://purl.org/dc/terms/title> ""What U See Is What U Get"" .
    
    ?work <http://dbpedia.org/ontology/producer> ?producer .
    ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?work <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/50_Cent> .
    
    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?writerArtist .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
404,58,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?parent WHERE {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia>.
    ?father <http://dbpedia.org/property/father> ?spouse.
    ?child <http://dbpedia.org/ontology/child> ?father;
           <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick>.
    ?child <http://www.w3.org/2002/07/owl#sameAs> ?royalty.
    ?parent <http://dbpedia.org/ontology/child> ?child.
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,29,test,Give me the reference to  and entity in Baden-Württemberg and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
SELECT ?administration ?almaMater ?reference WHERE {
    ?nash <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?nash <http://xmlns.com/foaf/0.1/name> ""George K. Nash"" .
    
    OPTIONAL { ?nash <http://dbpedia.org/ontology/administration> ?administration . }
    OPTIONAL { ?nash <http://dbpedia.org/ontology/almaMater> ?almaMater . }

    OPTIONAL {
        ?administration <http://dbpedia.org/property/location> ?location .
        FILTER(CONTAINS(LCASE(STR(?location)), ""baden-württemberg""))
    }
    
    OPTIONAL {
        ?almaMater <http://dbpedia.org/ontology/location> ?reference .
        FILTER(CONTAINS(LCASE(STR(?reference)), ""baden-württemberg""))
    }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
232,57,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
# Step 1: Find Sylvie Bermann's British residence
SELECT ?residence WHERE {
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""british"") && CONTAINS(LCASE(?label), ""settlement""))
}

# Step 2: Find the claim to fame (film or military conflict) and associated actor
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/claimToFame> ?fame .
    ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Film> | <http://dbpedia.org/ontology/MilitaryConflict>) .
    ?actor <http://dbpedia.org/ontology/performedIn> ?fame .
}

# Step 3: Identify the professional in Actor, Narrator, Producer
SELECT ?professional WHERE {
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Actor> | <http://dbpedia.org/ontology/Narrator> | <http://dbpedia.org/ontology/Producer>) .
}

# Step 4: Find the child of Jon Pertwee
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
}

# Step 5: Find the native place of the residence identified in step 1
SELECT ?nativePlace WHERE {
    ?residence <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
801,64,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
SELECT ?writer ?associatedArtist WHERE {
    ?album <http://dbpedia.org/ontology/writer> ?writer .
    ?album <http://purl.org/dc/terms/title> ""What U See Is What U Get"" .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?writer <http://dbpedia.org/property/produced> <http://dbpedia.org/resource/Westside_Story_(song)> .

    OPTIONAL { 
        ?shadowAlterEgo <http://dbpedia.org/ontology/profession> ?profession .
        ?shadowAlterEgo <http://dbpedia.org/ontology/trueSelf> <http://dbpedia.org/resource/The_Shadow> .
        FILTER(?profession = ""Musician"")
    }

    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
281,63,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Step 1: Find Bob Heffron's birth place country
SELECT ?birthPlaceCountry WHERE {
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?countryResource .
    ?countryResource a <http://dbpedia.org/class/yago/Country108069068> .
    BIND(?countryResource AS ?birthPlaceCountry)
}

UNION

SELECT ?result WHERE {
    # Step 2: Find wars associated with Jonathon Band's award awardees
    ?award <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Jonathon_Band> .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Jonathon_Band>)
    ?otherAwardee <http://dbpedia.org/ontology/battle> ?battle .
    ?battle a <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
    BIND(?battle AS ?result)
    
    UNION
    
    # Step 3: Find wars associated with Heather Roy's military unit profession
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?militaryUnit .
    ?militaryUnit a <http://dbpedia.org/class/yago/MilitaryUnit108069068> .
    ?militaryUnit <http://dbpedia.org/ontology/battle> ?battle .
    ?battle a <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
    BIND(?battle AS ?result)
}

# Final step: Find the common entity (country) between Bob Heffron's birthplace and the wars
SELECT DISTINCT ?commonEntity WHERE {
    VALUES ?entity { ?birthPlaceCountry ?result }
    ?entity a <http://dbpedia.org/class/yago/Country108069068> .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
767,56,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
# Step 1: Find alter ego of Matthew Burland's fictional character
SELECT ?alterEgo WHERE {
    ?character <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?character <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
    ?character <http://dbpedia.org/property/persona> <http://dbpedia.org/resource/Matthew_Burland> .
}

# Step 2: Find alma mater of Carl L. Nippert
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Step 3: Find settlement in Green's administration
SELECT ?settlement WHERE {
    ?admin <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion> .
    ?admin <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Green> .
    ?admin <http://dbpedia.org/ontology/settlement> ?settlement .
}

# Final step: Find common entity
SELECT DISTINCT ?entity WHERE {
    VALUES ?entity { ?alterEgo ?almaMater ?settlement }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
9,61,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
SELECT ?almaMater WHERE {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Northern_Ireland> .
    ?entity <http://dbpedia.org/ontology/nickname> ?nickname .

    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medals""@en .
    ?awardee <http://dbpedia.org/property/awards> ?award .

    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
378,49,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
SELECT ?war ?commander ?claimToFame WHERE {
    <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
    <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/property/wars> ?war .
    FILTER(?war <http://dbpedia.org/ontology/MilitaryConflict> || ?war <http://dbpedia.org/ontology/SocietalEvent> || ?war <http://www.w3.org/2002/07/owl#Thing>)
    
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    
    OPTIONAL {
        ?commander <http://dbpedia.org/ontology/notableWork> ?claimToFame .
    }
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
996,18,test,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Part 1: Find the awardee for the elevation of Lac d'Avoriaz
SELECT ?awardee WHERE {
    ?event <http://dbpedia.org/ontology/elevation> <http://dbpedia.org/resource/Lac_d%27Avoriaz> .
    ?event <http://dbpedia.org/property/awards> ?award .
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
}

# Part 2: Find the force associated with this awardee
SELECT DISTINCT ?force WHERE {
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?entityType .
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/country> ?force . }
    FILTER(?entityType IN (<http://dbpedia.org/ontology/Organisation>, <http://dbpedia.org/ontology/MilitaryUnit>) && EXISTS { ?event <http://dbpedia.org/ontology/elevation> <http://dbpedia.org/resource/Lac_d%27Avoriaz> })
}

# Part 3: Find entities in the award of Ekrem Akurgal
SELECT DISTINCT ?entity WHERE {
    <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?award .
    ?award <http://dbpedia.org/ontology/recipient> ?entity .
}

# Part 4: Find the force associated with these entities
SELECT DISTINCT ?force WHERE {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?entityType .
    OPTIONAL { ?entity <http://dbpedia.org/ontology/country> ?force . }
    FILTER(?entityType IN (<http://dbpedia.org/ontology/Organisation>, <http://dbpedia.org/ontology/MilitaryUnit>) && EXISTS {
        <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?award .
        ?award <http://dbpedia.org/ontology/recipient> ?entity
    })
}
```",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
328,55,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . }","```sparql
SELECT ?entity WHERE {
    # Commander in the force of Ferenc Szálasi
    ?force <http://dbpedia.org/ontology/commander> ?commander .
    ?force <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> .

    # Leader of the office (government agency) of Joseph Stalin
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
    ?office <http://dbpedia.org/property/leader> ?entity .
    ?office <http://dbpedia.org/property/minister> <http://dbpedia.org/resource/Joseph_Stalin> .

    # Awardee of the award received by Bruce Fraser, 1st Baron Fraser of North Cape
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?award .
    ?entity <http://dbpedia.org/property/awards> ?award .

    FILTER(?commander = ?entity && ?office != ?force)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
959,32,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?member WHERE {
    # Find Eiji Ōtsuka's alma mater
    ?almaMater <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eiji_Ōtsuka> .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/JapaneseOrganizations100000001> ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/EducationalInstitutions100000027> .
    
    # Find Yōichi Masuzoe's country of residence
    ?country <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Yōichi_Masuzoe> .

    # Find a member who is associated with both the alma mater and the country
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/EducationalInstitutions100000027> ;
            <http://dbpedia.org/ontology/memberOf> ?almaMater .
    OPTIONAL { ?member <http://dbpedia.org/ontology/nationality> ?country . }
}
```",4,9,5,2,2,3,3,71,0,0,84,0,0.0,0
232,60,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
SELECT ?child WHERE {
    ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
    ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?politician <http://dbpedia.org/ontology/officeHolder> ?office .
    ?politician <http://dbpedia.org/ontology/nativePlace> ?settlement .
    ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

    ?person <http://dbpedia.org/property/birthName> ""Jon Pertwee""^^<http://www.w3.org/2001/XMLSchema#string> .
    ?person <http://dbpedia.org/ontology/nativePlace> ?settlement .

    ?person <http://dbpedia.org/ontology/child> ?child .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
959,41,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?person WHERE {
    # Yōichi Masuzoe's country of residence
    <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/nationality> ?country .
    
    # Eiji Ōtsuka's alma mater
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    FILTER(?almaMater <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Japanese_language>)
    FILTER((?almaMater <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/YahooCategoryOrganizations100000001>) && 
           (?almaMater <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/YahooCategoryUniversitiesAndCollegesInJapan>) &&
           (?almaMater <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/EducationalInstitutions100000001>))
    
    # Manager of 2013 Júbilo Iwata season
    ?person <http://dbpedia.org/property/manages> <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .
    
    # The person must be native and resident in the same country as Yōichi Masuzoe
    ?person <http://dbpedia.org/ontology/nationality> ?country .
    FILTER(?person != <http://dbpedia.org/resource/Yōichi_Masuzoe>)
    
    # The person must have attended the alma mater of Eiji Ōtsuka
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
492,31,test,Give me the commander in Franco-Hova Wars and person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Step 1: Get commanders in the Franco-Hova Wars
SELECT ?commander WHERE {
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Franco-Hova_Wars>.
    ?battle <http://dbpedia.org/property/commander> ?commander.
}

# Step 2: Get the author of ""French Algeria"" and their place of death
SELECT ?author ?deathPlace WHERE {
    ?work <http://purl.org/dc/terms/title> ""French Algeria""@en.
    ?work <http://dbpedia.org/property/author> ?author.
    ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace.
}

# Step 3: Find overlap between commanders and death place of the author
SELECT DISTINCT ?commander WHERE {
    # Commanders in Franco-Hova Wars
    ?battle1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Franco-Hova_Wars>.
    ?battle1 <http://dbpedia.org/property/commander> ?commander.
    
    # Author of ""French Algeria"" and their death place
    ?work <http://purl.org/dc/terms/title> ""French Algeria""@en.
    ?work <http://dbpedia.org/property/author> ?author.
    ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace.

    # Check if the commander's death place matches the author's death place
    ?commander <http://dbpedia.org/ontology/deathPlace> ?deathPlace.
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
378,69,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
# Part 1: Carl Pontus Gahn's birth name and associated wars
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .
}

SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/wars> ?war .
}

# Part 2: Commander in the Peninsular War and their claim to fame
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
}

SELECT ?claimToFame WHERE {
    ?commander <http://dbpedia.org/property/awards> ?award .
    OPTIONAL { ?commander <http://dbpedia.org/property/notableWorks> ?claimToFame . }
}

# Part 3: Wars associated with Thomas Trigge and claim to fame of their commanders
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/property/wars> ?war .
}

SELECT ?commander WHERE {
    ?war <http://dbpedia.org/ontology/commander> ?commander .
}

SELECT ?claimToFame WHERE {
    ?commander <http://dbpedia.org/property/awards> ?award .
    OPTIONAL { ?commander <http://dbpedia.org/property/notableWorks> ?claimToFame . }
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
391,63,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?actor ?native WHERE {
  # Step 1: Find the nickname for Jackson, Tennessee
  ?jackson <http://dbpedia.org/ontology/nickName> ?nickname .

  # Step 2: Identify Michael Ballhaus' claim to fame (a work)
  ?ballhausClaimToFame <http://dbpedia.org/property/claimToFame> ?work .
  ?ballhausClaimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .

  # Step 3: Find the actor who acted in Michael Ballhaus' work
  ?actor <http://dbpedia.org/ontology/actedIn> ?ballhausClaimToFame .

  # Step 4: Find the movie with Roz Ryan that is also a TV show and a work
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .

  # Step 5: Find the actor who acted in this movie
  ?actor <http://dbpedia.org/ontology/actedIn> ?movie .

  # Step 6: Get the native place of this actor
  ?actor <http://dbpedia.org/property/nativePlace> ?native .
  
  FILTER(?jackson = <http://dbpedia.org/resource/Jackson,_Tennessee>)
  FILTER(?ballhausClaimToFame = <http://dbpedia.org/resource/Michael_Ballhaus>)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
701,56,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of Nefertari and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?parent WHERE {
    # Parent of Henuttawy (19th dynasty)
    OPTIONAL { 
        <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/father> ?fatherHenuttawy .
        BIND(?fatherHenuttawy AS ?parent)
    }
    
    # Child of Nefertari
    OPTIONAL {
        ?childNefertari <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Nefertari> .
        
        # Spouse of the father of the commander in Battle of Perire
        ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> ;
                   <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
        ?fatherCommander <http://dbpedia.org/property/father> ?commander .
        ?spouseFatherCommander <http://dbpedia.org/ontology/spouse> ?fatherCommander .

        # Parent of the child of Nefertari and spouse
        ?parentChildNefertari <http://dbpedia.org/ontology/father> ?childNefertari ;
                              <http://dbpedia.org/ontology/mother> ?childNefertari .
        
        ?parentSpouseFatherCommander <http://dbpedia.org/ontology/father> ?spouseFatherCommander ;
                                     <http://dbpedia.org/ontology/mother> ?spouseFatherCommander .

        FILTER(?parentChildNefertari = ?parentSpouseFatherCommander)
        BIND(?parentChildNefertari AS ?parent)
    }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,67,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
SELECT ?nativeCountry WHERE {
    # Step 1: Find the leader (politician) of the 2010 Japanese House of Councillors election
    ?leader <http://dbpedia.org/ontology/politician> true .
    ?leader <http://dbpedia.org/property/election> <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> .

    # Step 2: Determine the residence country of this politician
    ?leader <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://dbpedia.org/ontology/country> ?country .

    # Step 3: Find the manager of the team managed by the sports manager of the 1998 Kashima Antlers season
    ?sportsManager <http://dbpedia.org/ontology/sportsManager> true .
    ?sportsManager <http://dbpedia.org/property/teamManaged> ?team .
    ?team <http://dbpedia.org/property/season> <http://dbpedia.org/resource/1998_Kashima_Antlers_season> .

    ?manager <http://dbpedia.org/ontology/teamManaged> ?team .
    ?manager <http://www.w3.org/2000/01/rdf-schema#member> <http://dbpedia.org/resource/University_of_Tsukuba> .

    # Step 5: Find the native place (country) of the residence
    ?residence <http://dbpedia.org/ontology/nativeCountry> ?nativeCountry .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
184,60,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
# Step 1: Find Archduchess Margaret's parent
SELECT ?parentMargaret WHERE {
    <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://dbpedia.org/ontology/birth> ?birth .
    FILTER(YEAR(?birth) = 1925)
    ?parentMargaret <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Margaret_of_Austria_(1925)>
}

# Step 2: Find the child of Archduchess Margaret's parent
SELECT ?grandChild WHERE {
    ?parentMargaret <http://dbpedia.org/ontology/child> ?grandChild .
    # Use the result from step 1 for ?parentMargaret
}

# Step 3: Identify the landmark at elevation 96.0 and its native
SELECT ?native WHERE {
    ?settlement <http://dbpedia.org/property/elevation> ""96.0""^^xsd:float ;
                <http://www.w3.org/2002/07/owl#sameAs> ?landmark .
    ?native <http://dbpedia.org/ontology/nationality> ?country ;
            <http://dbpedia.org/ontology/birthPlace> ?settlement
}

# Step 4: Find the parent of that native
SELECT ?parentNative WHERE {
    ?native <http://dbpedia.org/ontology/child> ?parentNative .
    # Use the result from step 3 for ?native
}

# Step 5: Identify the common parent of both children found in steps 2 and 4
SELECT ?commonParent WHERE {
    ?commonParent <http://dbpedia.org/ontology/child> ?grandChild .
    ?commonParent <http://dbpedia.org/ontology/child> ?parentNative .
    # Use results from step 2 for ?grandChild and step 4 for ?parentNative
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
747,23,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?person ?birthDate ?otherPerson WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?person <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Zolotonosha> .
    ?person <http://dbpedia.org/property/birthDate> ?birthDate .

    ?otherPerson <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?otherPerson <http://dbpedia.org/property/deathPlace> ?deathPlace .
    ?otherPerson <http://dbpedia.org/property/birthDate> ?birthDate .

    FILTER(?person != ?otherPerson)
}
```",3,5,4,3,1,3,3,71,0,0,30,0,0.0,0
16,53,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?spouse WHERE {
    # Step 1: Get Gigi Rice's birth name
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthNameGigi .
    
    # Step 2: Get Ted McGinley's birth name and confirm his profession
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?birthNameTed .
    <http://dbpedia.org/resource/Ted_McGinley> <http://purl.org/dc/terms/profession> ?profession .
    
    # Step 3: Find Gigi Rice's spouse
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/spouse> ?spouse .
    
    # Step 4: Ensure the spouse matches Ted McGinley by birth name
    FILTER(?birthNameGigi = ""Gigi Rice""^^xsd:string)
    FILTER(?birthNameTed = ""Edward Joseph McGinley""^^xsd:string) # Assuming this is his birth name
    FILTER(?profession = <http://dbpedia.org/resource/Actor>) # Correcting the profession to Actor
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,44,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v4 . }","```sparql
# Step 1: Identify Heather Roy's profession as a military unit
SELECT ?militaryUnit WHERE {
    <http://dbpedia.org/resource/Heather_Roy> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
}

# Step 2: Find the war(s) associated with that military unit
SELECT ?war WHERE {
    ?militaryUnit <http://dbpedia.org/property/wars> ?war .
    FILTER(?militaryUnit IN {<result_from_step_1>})
}

# Step 3: Identify Bob Heffron's birthplace country
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
}

# Step 4: Find entities associated with that country
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/birthPlace> ?birthLocation .
    ?birthLocation <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
    FILTER(?country IN {<result_from_step_3>})
}

# Step 5: Identify Beauchamp Seymour's wars
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/property/wars> ?war .
}

# Step 6: Find common war(s) between Heather Roy's military unit and Beauchamp Seymour
SELECT DISTINCT ?commonWar WHERE {
    ?militaryUnit <http://dbpedia.org/property/wars> ?commonWar .
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/property/wars> ?commonWar .
    FILTER(?militaryUnit IN {<result_from_step_1>})
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
294,21,test,"Give me the resting place of Edwin A. Keeble and resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query 1: Resting place of Edwin A. Keeble
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

UNION

# Query 2: Resting place of Luke Lea (American politician, born 1879)
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Luke_Lea_(politician)> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

UNION

# Query 3: Entity in the birth place of Marion James
SELECT ?entity WHERE {
    <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> ?entity .
    FILTER(?entity <http://dbpedia.org/ontology/Settlement>)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,69,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?commander WHERE {
    # Step 1: Identify Ferenc Szálasi's Force
    <http://dbpedia.org/resource/Ferenc_Szálasi> <http://dbpedia.org/ontology/militaryForce> ?force .
    
    # Step 2: Find Commander of the Force
    ?force <http://dbpedia.org/ontology/commander> ?commander .

    # Step 3: Identify Awardee of the Commander in Volcano and Ryukyu Islands Campaign
    ?volcanoCommander <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
    ?volcanoCommander <http://dbpedia.org/property/awards> ?award .
    
    # Ensure the commander from step 2 is the same as the awardee
    FILTER(?commander = ?volcanoCommander)

    # Step 4: Find Leader of the Office associated with Gustav Jonson
    <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/officeHolder> ?office .
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
    ?office <http://dbpedia.org/ontology/leader> ?commanderLeader .

    # Ensure the commander from step 2 is also the leader
    FILTER(?commander = ?commanderLeader)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,32,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
SELECT ?grandchild ?spouse WHERE {
    # Seleucus II Callinicus and his royal children
    ?royalChild <http://dbpedia.org/ontology/birthPlace> ?place .
    ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?royalChild <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .

    # Grandchildren of Seleucus II Callinicus
    ?royalChild <http://dbpedia.org/ontology/child> ?grandchild .
    
    # Antiochus III the Great and his children
    ?antiochusChild <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .

    # Spouse of the grandchild who is a child of Antiochus III the Great
    ?grandchild <http://dbpedia.org/ontology/spouse> ?spouse .
    FILTER(?spouse = ?antiochusChild)
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
392,27,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
# Part 1: Province of Sebastiano Bianchetti's Residence
SELECT ?province WHERE {
    ?residence <http://dbpedia.org/ontology/settlement> ?settlement .
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ""Sebastiano Bianchetti""@en .
    ?residence <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Italy> .
    ?residence <http://dbpedia.org/ontology/province> ?province .
}

UNION

# Part 2: Region of Aguilar de Segarra's Time Zone
SELECT ?region WHERE {
    ?event <http://www.w3.org/2000/01/rdf-schema#label> ""Aguilar de Segarra""@en .
    ?event <http://dbpedia.org/ontology/sportsEvent> ?sportsEvent .
    ?timeZone <http://dbpedia.org/property/timeZone> ?tz .
    ?region <http://www.w3.org/2000/01/rdf-schema#label> ?rLabel .
    FILTER(CONTAINS(LCASE(?rLabel), ""italy"")) .
    ?region <http://dbpedia.org/ontology/timeZone> ?timeZone .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,60,test,"Give me the reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?michelePintoParty ?romanoProdiBirthName ?romanoProdiParty WHERE {
  # Query for Michele Pinto's party
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalParty> ?michelePintoParty .

  # Query for Romano Prodi's birth name and associated party
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?romanoProdiBirthName .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?romanoProdiBirthName ;
          <http://dbpedia.org/ontology/politicalParty> ?romanoProdiParty ;
          <http://dbpedia.org/ontology/officeHolder> ?office .
  FILTER(?person != <http://dbpedia.org/resource/Romano_Prodi>)
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
404,26,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?grandParent WHERE {
    # Step 1: Find the parent of Prince George William of Hanover who is a royalty
    <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?parent .
    ?parent rdf:type <http://dbpedia.org/ontology/Royalty> .

    # Step 2: Find the child of that parent who is also a royalty
    ?parent <http://dbpedia.org/ontology/child> ?child .
    ?child rdf:type <http://dbpedia.org/ontology/Royalty> .

    # Step 3: Determine the parent of this child
    ?child <http://dbpedia.org/ontology/parent> ?grandParent .
}
```",3,5,4,3,1,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
767,57,test,Give me the entity in Baden-Württemberg and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT DISTINCT ?entityInBadenWurttemberg WHERE {
    # Step 1: Identify George Kilbon Nash
    ?georgeKilbonNash <http://www.w3.org/2000/01/rdf-schema#label> ""George Kilbon Nash""@en .
    
    # Step 2: Find the administration of George Kilbon Nash
    OPTIONAL { ?georgeKilbonNash <http://dbpedia.org/ontology/administration> ?administration . }
    
    # Step 3: Alma mater of the administration
    OPTIONAL {
        ?administration <http://dbpedia.org/property/almaMater> ?almaMater .
        
        # Step 5: Entity in Baden-Württemberg
        ?entityInBadenWurttemberg <http://www.w3.org/2000/01/rdf-schema#label> ?label .
        ?entityInBadenWurttemberg <http://dbpedia.org/ontology/location> ?location .
        ?location <http://dbpedia.org/property/country> ?country .
        FILTER(?country = ""Germany"" && CONTAINS(LCASE(?location), ""baden-württemberg""))
        
        # Match with alma mater
        FILTER(?entityInBadenWurttemberg = ?almaMater)
    }
    
    # Step 4: Alter ego of Black Hood
    OPTIONAL {
        <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
        
        # Match with entity in Baden-Württemberg
        FILTER(?entityInBadenWurttemberg = ?alterEgo)
    }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,68,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify Fredrik Thordendal's Band
  ?band a <http://dbpedia.org/ontology/Band> ;
        a <http://dbpedia.org/ontology/Organisation> ;
        <http://dbpedia.org/property/member> ?member .
  
  FILTER(?member = <http://dbpedia.org/resource/Fredrik_Thordendal>) .

  # Step 2: Find the Associated Musical Artist of the Band Member
  ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .

  # Step 3: Identify Donald Maynard Dokken's Birth Information
  ?dokken a <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""^^<http://www.w3.org/2001/XMLSchema#string> .

  # Step 4: Find Associated Musical Artists of Donald Maynard Dokken
  ?dokken <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .
  
  ?artist2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist3 .

  # Step 5: Reference to Watchtower
  ?reference a <http://dbpedia.org/resource/Watchtower> ;
             <http://dbpedia.org/property/associatedMusicalArtist> ?artist4 .
  
  # Step 6: Combine Results
  FILTER(?artist1 = ?artist3 || ?artist1 = ?artist4)
  
  BIND(?artist1 AS ?associatedArtist)
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
391,22,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?actor WHERE {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>.
    ?person <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Compton,_California>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>;
           <http://dbpedia.org/ontology/work> ?work;
           <http://dbpedia.org/ontology/tvShow> ?tvShow.
    ?movie <http://dbpedia.org/property/starring> ?actor.
    ?movie <http://dbpedia.org/property/castMember> <http://dbpedia.org/resource/Roz_Ryan>.
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,46,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
# Step 1: Find Sean Pertwee's claim to fame that is both a film and a military conflict
SELECT ?fame WHERE {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/notableWorks> ?fame .
    ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film98b2a5d0>.
    ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108e1c7f>.
}

# Step 2: Find Jon Pertwee's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 3: Identify Sean Pertwee as Jon Pertwee's child
SELECT ?child WHERE {
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jon_Pertwee> .
    ?child rdfs:label ""Sean Pertwee""@en .
}

# Step 4: Find the actor associated with the fame identified in step 1
SELECT ?actor WHERE {
    ?fame <http://dbpedia.org/ontology/starring> ?actor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,67,test,"Give me the parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . },"```sparql
# Step 1: Find the commander in the Battle of Perire who is royalty
SELECT ?commander WHERE {
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
    ?battle <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""royalty""))
}

# Step 2: Find the father of this commander
SELECT ?father WHERE {
    ?commander <http://dbpedia.org/ontology/father> ?father .
}

# Step 3: Determine the spouse of this father
SELECT ?spouse WHERE {
    ?father <http://dbpedia.org/property/spouse> ?spouse .
}

# Step 4: Identify Seti I's child and then that child's child
SELECT ?grandchild WHERE {
    <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
}

# Step 5: Find the parent of this grandchild
SELECT ?parent WHERE {
    ?grandchild <http://dbpedia.org/ontology/father> ?parent .
   UNION
   ?grandchild <http://dbpedia.org/ontology/mother> ?parent .
}

# Step 6: Cross-reference with Meritamen's parent
SELECT DISTINCT ?spouse WHERE {
    ?meritamen <http://dbpedia.org/property/parent> ?spouse .
    VALUES ?meritamen { <http://dbpedia.org/resource/Meritamen> }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,42,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?force WHERE {
    ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
    ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington>.
    ?force <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Leipzig>.
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
}
```",5,8,6,2,3,3,3,71,0,0,6,0,0.0,0
547,23,test,Give me the resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
SELECT ?grandchild ?restingPlace WHERE {
    ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild <http://dbpedia.org/ontology/child> ?child .
    ?grandchild <http://dbpedia.org/property/burialPlace> ?restingPlace .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,28,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
# Step 1: Find Lisa Gavrić's profession (event or societal event)
SELECT ?profession WHERE {
    <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/ontology/profession> ?profession .
}

# Step 2: Find awardees of Sergei Makovetsky's awards
SELECT DISTINCT ?otherAwardee WHERE {
    ?award <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sergei_Makovetsky> .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Sergei_Makovetsky>)
}

# Step 3: Find the person deceased at House of Sombrerete
SELECT ?deceased WHERE {
    ?location <http://dbpedia.org/ontology/headquarters> <http://dbpedia.org/resource/House_of_Sombrerete> .
    ?deceased <http://dbpedia.org/property/deathPlace> ?location .
}

# Step 4: Find a commander linked to these elements
SELECT DISTINCT ?commander WHERE {
    # Assuming the profession found in step 1 is stored as ?profession
    ?commander <http://dbpedia.org/ontology/profession> ?profession .

    # Assuming the awardees found in step 2 are stored as ?otherAwardee
    ?commander <http://dbpedia.org/property/awards> ?award .
    VALUES ?award { ?award1 ?award2 ... } # Replace with actual awards from step 2

    # Assuming the deceased person found in step 3 is stored as ?deceased
    ?commander <http://dbpedia.org/ontology/deathPlace> ?location .
    FILTER(?location = ?deathLocation) # Replace with actual location from step 3
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
184,35,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
# Step 1: Find the child of Archduke Joseph Francis of Austria
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Find the parent(s) of that child
SELECT DISTINCT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/child> ?parent .
    FILTER(?child IN (<result_from_step_1>))
}

# Step 3: Identify individuals native to Budapest
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Hungary> .
    OPTIONAL { ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . }
}

# Step 4: Find overlap between parents from step 2 and natives of Budapest
SELECT DISTINCT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/child> ?parent .
    FILTER(?child IN (<result_from_step_1>))
    ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Hungary> .
    OPTIONAL { ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . }
    FILTER(?parent = ?person)
}
```

Note: The above SPARQL script is a conceptual representation. In practice, you would need to execute the first query to get the child's identifier and then use that result in subsequent queries. Additionally, adjustments might be necessary based on the exact structure of DBpedia data.",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
801,55,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?person WHERE {
    ?work <http://dbpedia.org/property/writer> ?person .
    ?work <http://dbpedia.org/ontology/title> ""40 Dayz & 40 Nightz"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

    OPTIONAL { ?work2 <http://dbpedia.org/property/producer> ?person . }
    OPTIONAL {
        ?work2 <http://dbpedia.org/ontology/title> ?title .
        FILTER(CONTAINS(?title, ""50 Cent""))
        ?work2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
        ?work2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
        ?work2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    }

    OPTIONAL { ?person <http://dbpedia.org/property/alterEgo> ""The Shadow"" . }
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
488,42,test,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?deathPlace ?administration ?birthPlace WHERE {
  # Death Place of Tokugawa Ieyasu
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  # Administration of the Father of Emperor Go-Mizunoo
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/administration> ?administration .
  }

  # Birth Place of the Commander in Boshin War
  OPTIONAL {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",5,5,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
528,46,test,"Give me the war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query for the commander of the Battle of La Rinconada de Ate and their wars
SELECT ?commander ?war WHERE {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/wars> ?war .
}

# Query for the societal event in Chile and its associated military force's wars
SELECT ?event ?militaryForce ?war WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    ?militaryForce <http://dbpedia.org/property/wars> ?war .
}
```",5,6,6,3,2,3,3,71,0,0,14,0,0.0,0
701,52,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?spouseParent WHERE {
    ?amunHerKhepeshef <http://dbpedia.org/property/spouse> ?sharedSpouse .
    ?ramessesII <http://dbpedia.org/property/spouse> ?sharedSpouse .
    ?child <http://dbpedia.org/ontology/parent> ?amunHerKhepeshef ;
           <http://dbpedia.org/ontology/parent> ?ramessesII .
    ?spouseParent <http://dbpedia.org/ontology/child> ?sharedSpouse .
}
```",6,6,7,3,3,3,3,71,1,3945,0,0.00025342118601115053,1.0,0.0005067139599695971
427,54,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
# Step 1: Identify an MIT alumnus and their father
SELECT ?alumnus ?father WHERE {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology>.
    ?alumnus <http://dbpedia.org/property/father> ?father.
}

# Step 2: Determine the father's political party
SELECT ?father ?party WHERE {
    ?father <http://dbpedia.org/ontology/politicalParty> ?party.
}

# Step 3: Reference the Italian People's Party (1994)
SELECT ?italianPeopleParty WHERE {
    ?italianPeopleParty <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)""@en .
}

# Step 4: Identify Romano Prodi's political party
SELECT ?prodi ?party WHERE {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?party.
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
963,16,test,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?rulingParty ?administration WHERE {
  # Find the ruling party in Sremski Karlovci
  ?location <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Sremski_Karlovci>.
  ?location <http://dbpedia.org/ontology/rulingParty> ?rulingParty.
  
  # Ensure the location is in a country using Central European Time
  ?country <http://www.w3.org/2006/time#during> ?timeZone .
  ?timeZone <http://dbpedia.org/property/timeZone> ""Central European Time"" .
  ?location <http://dbpedia.org/ontology/country> ?country .

  # Get the administration of the ruling party
  ?rulingParty <http://dbpedia.org/ontology/administration> ?administration.
}
```",4,6,5,2,2,3,2,20,0,0,84,0,0.0,0
435,27,test,Give me the territory administered from Reykjavík and work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
# Part 1: Territory administered from Reykjavík
SELECT ?territory WHERE {
    ?territory <http://dbpedia.org/ontology/administrativeCenter> <http://dbpedia.org/resource/Reykjavík>.
}

UNION

# Part 2: Work of the author of Iceland
SELECT ?work WHERE {
    ?book <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Iceland>.
    ?book dbo:author ?author.
    ?author dbo:work ?work.
}

UNION

# Part 3: Region of the time zone in Bombali Shebora Chiefdom
SELECT ?region WHERE {
    <http://dbpedia.org/resource/Bombali_Shebora_Chuifdom> <http://dbpedia.org/ontology/timeZone> ?timeZone.
    ?timeZone <http://dbpedia.org/ontology/region> ?region.
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
184,48,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?parent1 ?parent2 WHERE {
    # Step 1: Find child of Archduke Joseph Francis of Austria
    <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child .
    
    # Step 2: Find parent of that child
    ?child <http://dbpedia.org/ontology/parent> ?parent1 .

    # Step 3: Identify landmark at elevation 96.0 meters
    ?settlement <http://dbpedia.org/property/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
    
    # Step 4: Find native of that settlement
    ?native <http://dbpedia.org/ontology/nativePlace> ?settlement .

    # Step 5: Find parent of this native
    ?native <http://dbpedia.org/ontology/parent> ?parent2 .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,47,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?force WHERE {
    ?unit <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse""@en .
    ?unit <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
    ?battle <http://dbpedia.org/ontology/countryForces> ?force .
}
```",5,9,6,3,2,3,3,71,0,0,71,0,0.0,0
534,16,test,"Give me the headquarter of the owner of RDS Arena and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?headquarter WHERE {
  ?rdsArena <http://dbpedia.org/ontology/owner> ?owner .
  FILTER(STR(?rdsArena) = ""RDS_Arena"")
  ?owner <http://dbpedia.org/ontology/headquarters> ?headquarter .
}
UNION
SELECT ?birthPlace WHERE {
  ?desmondFitzGerald <http://dbpedia.org/ontology/child> ?child .
  FILTER(STR(?desmondFitzGerald) = ""Desmond_FitzGerald_(politician)"")
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
         <http://dbpedia.org/ontology/officeHolder> ?office .
  ?child <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
754,16,test,Give me the parent of the child of Ram Khamhaeng and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?grandparent WHERE {
  # Step 1: Find the child of Ram Khamhaeng
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ram_Khamhaeng> .
  
  # Step 2: Find the parent of that child (i.e., grandparent)
  ?grandparent <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Find the parent of May Hnin Htapi
  ?mayChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Htapi> .
  
  # Step 4: Find the parent of that parent (i.e., great-grandparent)
  ?greatGrandparent <http://dbpedia.org/ontology/child> ?mayChild .

  # Ensure both conditions are met
  FILTER(?grandparent = ?greatGrandparent)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
92,64,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
# Find Joseph Michael's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Confirm Jim Sheppard as a musical artist and find his band association
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    OPTIONAL { <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/property/band> ?band . }
}

# Identify the artist associated with Nevermore (2006 film)
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://dbpedia.org/ontology/reference> ?artist .
    FILTER(?artist != <http://dbpedia.org/resource/Nevermore_(2006_film)>)
}

# Find the band associated with Joseph Michael using his birth name
SELECT ?band WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/property/band> ?band .
    FILTER(?birthName = ""Joseph Michael"") # Replace with actual birth name once known
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,30,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  ?actor <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Compton,_California> .
  
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie110769069> ;
         <http://dbpedia.org/ontology/work> ?work ;
         <http://dbpedia.org/ontology/starring> ?actor .
  
  ?tvShow <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
  FILTER(?movie = ?tvShow)
  
  ?departed <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie110769069> ;
            <http://dbpedia.org/ontology/starring> ?actor .
  FILTER(?departed = <http://dbpedia.org/resource/The_Departed>)
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
92,59,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
# Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 2: Check if this actor is a band member of an artist linked to ""Nevermore (2006 film)""
SELECT ?bandMember WHERE {
    ?film <http://dbpedia.org/property/reference> ?reference .
    FILTER(STR(?film) = ""http://dbpedia.org/resource/Nevermore_(2006_film)"")
    ?reference <http://dbpedia.org/ontology/bandMember> ?bandMember .
    FILTER(?actor = ?bandMember)
}

# Step 3: Retrieve the associated musical artist for this individual
SELECT ?associatedArtist WHERE {
    ?person <http://dbpedia.org/ontology/musicalArtist> ?associatedArtist .
    FILTER(?person = ?bandMember)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
801,63,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
SELECT ?writer ?associatedArtist WHERE {
    ?work <http://dbpedia.org/property/writtenBy> ?writer .
    ?work <http://www.w3.org/2000/01/rdf-schema#label> ""40 Dayz & 40 Nightz"" .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

    OPTIONAL { ?writer <http://dbpedia.org/property/alterEgo> ?trueSelf . }
    FILTER(?trueSelf = ""The Shadow"")

    ?song <http://dbpedia.org/property/producer> ?producer .
    ?song <http://www.w3.org/2000/01/rdf-schema#label> ?workLabel .
    ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
    ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
    ?producer <http://dbpedia.org/property/profession> ""50 Cent"" .

    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
783,17,test,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?persona ?realName ?bandMember WHERE {
    # Step 1: Find the persona of Ebony Reigns and their real name
    <http://dbpedia.org/resource/Ebony_Reigns> <http://dbpedia.org/property/birthName> ?realName .
    
    # Ensure this person is both an artist and a musical artist
    ?realName <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?realName <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

    # Step 2: Find Appietus's associated musical artists
    OPTIONAL {
        <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?persona .
    }

    # Step 3: Identify any band members of the real person
    OPTIONAL {
        ?realName <http://dbpedia.org/property/memberOfBand> ?bandMember .
    }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
9,46,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?almaMater WHERE {
    # Find the organisation in Belfast with a mayor who is a politician
    ?organisation <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast"" .
    ?organisation <http://dbpedia.org/ontology/politicalLeader> ?mayor .
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

    # Get the alma mater of the mayor
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMaterMayor .

    # Find awardees of the Royal Medal
    ?awardee <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal"" .

    # Get the alma mater of each awardee
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMaterAwardee .

    # Find common alma mater
    FILTER(?almaMaterMayor = ?almaMaterAwardee)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
9,50,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Step 1: Find the nickname of Queen's University Belfast
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://www.w3.org/2000/01/rdf-schema#label> ?nickname .
}

# Step 2: Find awardees of Royal Medals and their alma mater
SELECT DISTINCT ?almaMater WHERE {
    ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Medals> .
    ?awardee <http://dbpedia.org/property/almaMater> ?almaMater .
}

# Step 3: Combine results to find matching alma mater with the nickname
SELECT DISTINCT ?almaMater WHERE {
    ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Medals> .
    ?awardee <http://dbpedia.org/property/almaMater> ?almaMater .
    ?university <http://www.w3.org/2000/01/rdf-schema#label> ?nickname .
    FILTER(?nickname = ""Queen's University Belfast"")
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,18,test,Give me the resting place of Alan Cunningham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?burialPlace WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Alan_Cunningham_(British_officer)>
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)>
    <http://dbpedia.org/resource/Simon_Cadell>
  }
  ?person <http://dbpedia.org/ontology/burialPlace> ?burialPlace .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
617,49,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?grandChild ?commandersChildParent WHERE {
    # Step 1: Find Seleucus II Callinicus's child who is royalty
    ?royalChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
    ?royalChild a <http://dbpedia.org/ontology/Royalty> .

    # Step 2: Find the child of that royal child
    ?grandChild <http://dbpedia.org/ontology/child> ?royalChild .

    # Step 3: Identify the commander in the Battle of Panium and their child
    ?battle <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Battle_of_Panium> .
    ?commander <http://dbpedia.org/ontology/commander> ?battle .
    ?commandersChild <http://dbpedia.org/ontology/child> ?commander .

    # Step 4: Find the parent of the commander's child
    ?commandersChildParent <http://dbpedia.org/ontology/parent> ?commandersChild .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
801,58,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
SELECT ?professional ?producer WHERE {
    # Step 1: Identify the album ""What U See Is What U Get""
    <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> <http://purl.org/dc/terms/creator> ?writer .

    # Step 2: Find writers who are musical artists and artists
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

    # Step 3: Determine associated musical artist(s) for these writers
    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .

    # Step 4: Identify work involving 50 Cent and the associated musical artist
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    ?work <http://purl.org/dc/terms/contributor> <http://dbpedia.org/resource/50_Cent> .
    ?work <http://purl.org/dc/terms/contributor> ?associatedArtist .

    # Step 5: Find the professional in and producer of this work
    ?work <http://dbpedia.org/property/professionalIn> ?professional .
    ?work <http://dbpedia.org/property/producer> ?producer .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
92,63,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
# Step 1: Find an artist related to ""Nevermore"" (2006 film)
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://dbpedia.org/ontology/reference> ?artist .
}

# Step 2: Identify the band associated with Joseph Michael Furney
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/property/band> ?band .
}

# Step 3: Find any musical artists linked to Jim Sheppard
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Step 4: Determine if there is a common band member among these connections
SELECT DISTINCT ?bandMember WHERE {
    VALUES ?artist { ?artist1 } # Replace with actual artist from step 1
    VALUES ?band { ?band1 }     # Replace with actual band from step 2

    ?band <http://dbpedia.org/ontology/member> ?bandMember .
    OPTIONAL { ?artist <http://dbpedia.org/ontology/member> ?bandMember . }
    FILTER(?bandMember != ?artist)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
492,52,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
SELECT ?commander WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

    ?war <http://dbpedia.org/property/commander> ?commander .

    ?herr <http://dbpedia.org/resource/Frédéric-Georges_Herr> .
    ?person1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
    ?work <http://dbpedia.org/property/author> ?author .
    ?author <http://dbpedia.org/ontology/wikiPageWikiLink> <http://dbpedia.org/resource/French_Algeria> .
    ?person2 <http://dbpedia.org/ontology/deathPlace> ?work .

    FILTER(?herr = ?person1 || ?herr = ?person2)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
626,17,test,Give me the awardee of the award of the military force of Battle of Borodino and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
# Step 1: Get military force involved in the Battle of Borodino
SELECT ?militaryForce WHERE {
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> .
    ?battle <http://dbpedia.org/ontology/militaryUnit> ?militaryForce .
}

# Step 2: Get commander in the Battle of Leipzig
SELECT ?commander WHERE {
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Leipzig> .
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 3: Find awards for the military force and commander
SELECT DISTINCT ?award WHERE {
    VALUES ?entity { ?militaryForce ?commander }
    ?entity <http://dbpedia.org/property/awards> ?award .
}

# Step 4: Get other awardees of those awards
SELECT DISTINCT ?otherAwardee WHERE {
    ?award <http://dbpedia.org/property/recipient> ?otherAwardee .
    FILTER(?otherAwardee != ?militaryForce && ?otherAwardee != ?commander)
}
```",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
701,49,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?spouse WHERE {
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
    ?commander <http://www.w3.org/2000/01/rdf-schema#label> ?labelCommander .
    FILTER(CONTAINS(LCASE(?labelCommander), ""royalty"")) .

    ?father <http://dbpedia.org/ontology/spouse> ?spouse .
    ?father <http://dbpedia.org/ontology/child> ?commander .

    ?nefertariChild <http://dbpedia.org/ontology/parent> ?spouse .
    ?nefertariChild <http://dbpedia.org/property/parents> <http://dbpedia.org/resource/Nefertari> .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
994,60,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?bandMember WHERE {
  # Step 1: Identify Don Dokken's main band
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/memberOf> ?dokkenBand .
  
  # Step 2: Find Watchtower and its members
  ?watchtowerMember <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Watchtower_(band)> .

  # Step 3: Identify associated musical artists of Watchtower's members
  ?associatedArtist <http://dbpedia.org/property/associatedMusicalArtist> ?watchtowerMember .
  
  # Step 4: Find connections to Dokken band members
  ?dokkenBandMember <http://dbpedia.org/ontology/memberOf> ?dokkenBand .
  
  # Step 5: Identify a band member who is also a musical artist by birth
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
              <http://dbpedia.org/property/birthName> ?birthName .
  
  # Ensure the band member is connected through the associations
  FILTER(?bandMember = ?dokkenBandMember || ?bandMember = ?associatedArtist)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,28,test,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice and professional in Actress.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
SELECT ?spouse WHERE {
    { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse . }
    UNION
    { <http://dbpedia.org/resource/Georgeanne_Rice> <http://dbpedia.org/ontology/spouse> ?spouse . }
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
801,52,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
# Step 1: Find The Shadow's alter ego
SELECT ?alterEgo WHERE {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alternateName> ?alterEgo .
}

# Step 2: Find Chris Taylor's associated musical artist
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
}

# Step 3 & 4: Identify the song by 50 Cent and its producer
SELECT ?song ?producer WHERE {
    ?song <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/50_Cent> ;
          <http://purl.org/dc/terms/type> ""Song"" .
    ?song <http://dbpedia.org/property/producer> ?producer .
}

# Step 5: Find the professional link
SELECT DISTINCT ?professional WHERE {
    # Assuming we have variables from previous queries: ?alterEgo, ?artist, ?producer
    OPTIONAL { ?professional <http://dbpedia.org/ontology/profession> ?alterEgo . }
    OPTIONAL { ?professional <http://dbpedia.org/property/associatedMusicalArtist> ?artist . }
    OPTIONAL { ?professional <http://dbpedia.org/property/producer> ?song . }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
492,54,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Step 1: Find Joseph C. Satterthwaite's resource
SELECT ?satterthwaite WHERE {
    ?satterthwaite <http://dbpedia.org/ontology/jobTitle> ""US Assistant Secretary of State for African Affairs"" .
}

# Step 2: Identify the commander in the Battle of Verdun
SELECT ?verdunCommander WHERE {
    ?battle <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Battle_of_Verdun> .
    ?battle <http://dbpedia.org/ontology/commander> ?verdunCommander .
}

# Step 3: Find the person decedent at Algiers
SELECT ?algiersDecedent WHERE {
    ?event <http://dbpedia.org/property/location> ""Algiers"" .
    ?event <http://dbpedia.org/ontology/death> ?algiersDecedent .
}

# Step 4: Identify the war involving the Verdun commander
SELECT ?war WHERE {
    ?verdunCommander <http://dbpedia.org/ontology/war> ?war .
}

# Final Query: Find the common person meeting all criteria
SELECT DISTINCT ?person WHERE {
    # Person decedent at work of Joseph C. Satterthwaite
    ?satterthwaite <http://dbpedia.org/property/death> ?person .

    # Commander in the war identified and Battle of Verdun
    ?verdunCommander <http://dbpedia.org/ontology/war> ?war .
    ?verdunCommander <http://dbpedia.org/ontology/commander> ?person .

    # Person decedent at Algiers
    ?event <http://dbpedia.org/property/location> ""Algiers"" .
    ?event <http://dbpedia.org/ontology/death> ?person .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,61,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
# Step 1: Find the fictional character (persona) linked to Matthew Burland by querying his alter ego.
SELECT ?fictionalCharacter WHERE {
    ?burland <http://dbpedia.org/ontology/alterEgo> ?fictionalCharacter .
    ?burland rdfs:label ""Matthew Burland""@en .
}

# Step 2: Identify any administrative role or organization associated with George Kilbon Nash.
SELECT ?administration WHERE {
    ?nash <http://dbpedia.org/property/administration> ?administration .
    ?nash rdfs:label ""George Kilbon Nash""@en .
}

# Step 3: Find the alma mater of the administration identified in step 2.
SELECT ?almaMater WHERE {
    ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
365,8,test,Give me the band of Phil Alvin and reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
# Query to find the band associated with Phil Alvin
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Phil_Alvin> <http://dbpedia.org/ontology/member> ?band .
}

# Query to find the real name of The Blasters (assuming aliases or real names are stored under a property like 'alias')
SELECT ?member ?realName WHERE {
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?member <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/The_Blasters> .
  OPTIONAL { ?member <http://dbpedia.org/property/alias> ?realName . }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
10,24,test,"Give me the professional in the birth name of Sharon Kao and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?sharonBirthName ?bandMember WHERE {
  # Find the birth name of Sharon Kao
  <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?sharonBirthName .

  # Identify Luke Francis Vibert as an artist and find his band members
  ?vibert a <http://dbpedia.org/ontology/Artist> ;
          <http://www.w3.org/2000/01/rdf-schema#label> ""Luke Francis Vibert""@en .
  
  ?bandMember <http://dbpedia.org/property/memberOfBand> ?vibert .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
617,63,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?grandChild WHERE {
    # Step 1: Find Antiochus II Theos's successor who is a royalty
    <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?successor .
    FILTER(STRSTARTS(STR(?successor), ""http://dbpedia.org/resource/"") && 
           EXISTS { ?successor a <http://dbpedia.org/ontology/Royalty> }).

    # Step 2: Find the spouse of the child of Antiochus III the Great
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/spouse> ?spouse .

    # Step 3: Determine the parent of the child of Antiochus (son of Antiochus III the Great)
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?antioch .
    FILTER(STR(?antioch) = ""Antiochus"").
    ?antioch <http://dbpedia.org/property/parent> ?parent .

    # Step 4: Find the child of the child from step 1
    ?successor <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/child> ?grandChild .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
963,18,test,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
# Step 1: Find the time zone of Herzegovina-Neretva Canton
SELECT ?timeZone WHERE {
    <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://www.w3.org/2006/time#during> ?timeZone .
}

# Step 2: Identify countries in that time zone
SELECT DISTINCT ?country WHERE {
    ?country <http://dbpedia.org/ontology/countryTimeZone> ?timeZone .
}

# Step 3: Find the ruling party in Sremski Karlovci
SELECT ?rulingParty WHERE {
    <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/rulingParty> ?rulingParty .
}

# Step 4: Identify administration of that political party
SELECT DISTINCT ?administration WHERE {
    ?rulingParty <http://dbpedia.org/ontology/administration> ?administration .
}

# Final step: Find the entity (country) in both regions
SELECT DISTINCT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/countryTimeZone> ?timeZone .
    ?administration <http://dbpedia.org/property/location> ?entity .
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
528,61,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
# Part 1: Force of Narciso Campero
SELECT ?force WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Narciso Campero"" .
    ?person <http://dbpedia.org/ontology/militaryForce> ?force .
}

UNION

# Part 2: War of the commander in the work of --01-09
SELECT ?battle WHERE {
    ?work <http://purl.org/dc/terms/date> ""----01-09""^^xsd:date .
    ?work <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?battle .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
404,59,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?parentOfChild WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia by her birth name
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://www.w3.org/2000/01/rdf-schema#label> ""Victoria Louise, Princess Royal""@en .
  
  # Step 2: Find her spouse who is royalty
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> .
  ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?spouseLabel .
  
  # Step 3: Determine the parent of this spouse
  ?parentOfSpouse <http://dbpedia.org/ontology/child> ?spouse .
  ?parentOfSpouse <http://www.w3.org/2000/01/rdf-schema#label> ?parentOfSpouseLabel .

  # Step 4: Identify the child of this parent
  ?child <http://dbpedia.org/ontology/parent> ?parentOfSpouse .
  ?child <http://www.w3.org/2000/01/rdf-schema#label> ?childLabel .

  # Step 5: Find the parent of this child
  ?parentOfChild <http://dbpedia.org/ontology/child> ?child .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
427,38,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
# Query to find the father's party of Lamberto Andreotti
SELECT ?father ?party WHERE {
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?father .
  OPTIONAL { ?father <http://dbpedia.org/ontology/politicalParty> ?party . }
}

# Query to find the party of Romano Antonio Prodi
SELECT ?person ?party WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/OfficeHolder108930068> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108930068> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/politicalParty> ?party . }
}
```",4,6,5,2,2,3,3,71,0,0,3,0,0.0,0
645,16,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?entity WHERE {
    ?jamesWilkes <http://dbpedia.org/ontology/residence> ?residenceCountry .
    ?richardPankhurst <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/almaMater> ?almaMater .
    ?entity <http://dbpedia.org/ontology/inception> ?inception .
    FILTER(?residenceCountry = ?almaMater)
    BIND(<http://dbpedia.org/resource/James_Wilkes_Maurice> AS ?jamesWilkes)
    BIND(<http://dbpedia.org/resource/Richard_Pankhurst> AS ?richardPankhurst)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
435,22,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?territory WHERE {
    ?place <http://www.w3.org/2000/01/rdf-schema#label> ""Iceland""@en .
    ?place <http://dbpedia.org/ontology/country> ?country .
    ?town <http://dbpedia.org/ontology/settlement> ?place ;
          <http://dbpedia.org/ontology/type> ?type .
    VALUES ?type { <http://dbpedia.org/resource/Town> }
    ?town <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    FILTER(CONTAINS(LCASE(?name), ""iceland""))
    
    ?territory <http://dbpedia.org/ontology/administrativeUnit> ?town .
    ?chiefdom <http://dbpedia.org/property/timeZone> ?timeZone .
    ?region <http://dbpedia.org/property/timeZone> ?timeZone .
    FILTER(?chiefdom = <http://dbpedia.org/resource/Bombali_Shebora_Cheifdom>)
    
    ?territory <http://dbpedia.org/ontology/administrativeUnit> ?region .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,24,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
# Step 1: Find Lisa Gavrić's profession that is an event and a societal event.
SELECT ?profession WHERE {
    <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/ontology/profession> ?profession .
    ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
}

# Step 2: Find the commander associated with this profession.
SELECT ?commander WHERE {
    ?event <http://dbpedia.org/ontology/profession> ?profession .
    ?event <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(?profession = ?professionFromStep1)
}

# Step 3: Find the awards received by Sergei Makovetsky.
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?award .
}

# Step 4: Identify other awardees who have received the same awards as Sergei Makovetsky.
SELECT DISTINCT ?otherAwardee WHERE {
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Sergei_Makovetsky>)
}
```

Note: The above SPARQL queries are structured to be executed sequentially, with the results of earlier steps used in subsequent ones. In practice, you may need to execute these as separate queries or combine them into a single query using subqueries or temporary variables, depending on your SPARQL endpoint's capabilities.",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
488,71,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Part 1: Administration of Tokugawa Masako's Spouse's Father (Royalty)
SELECT ?administration WHERE {
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> .
    ?royalFather <http://dbpedia.org/ontology/father> ?spouse .
    ?royalFather <http://dbpedia.org/ontology/administration> ?administration .
    FILTER(STRSTARTS(STR(?royalFather), ""http://dbpedia.org/resource/"") && 
           (IRI(CONCAT(""http://dbpedia.org/resource/"", STRBEFORE(STR(?royalFather), ""#""))) IN (<http://dbpedia.org/ontology/Royalty>)))
}

# Part 2: Death Place of Matsudaira Tadamasa's Father (Politician and Office Holder)
SELECT ?deathPlace WHERE {
    ?father <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Matsudaira_Tadamasa> .
    ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    FILTER(STRSTARTS(STR(?father), ""http://dbpedia.org/resource/"") && 
           (IRI(CONCAT(""http://dbpedia.org/resource/"", STRBEFORE(STR(?father), ""#""))) IN (<http://dbpedia.org/ontology/Politician>, <http://dbpedia.org/ontology/OfficeHolder>)))
}

# Part 3: Birth Place of Saitō Hajime's War Commander
SELECT ?birthPlace WHERE {
    ?war <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Saitō_Hajime> .
    ?commander <http://dbpedia.org/ontology/commander> ?war .
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER(STRSTARTS(STR(?war), ""http://dbpedia.org/resource/"") && 
           (IRI(CONCAT(""http://dbpedia.org/resource/"", STRBEFORE(STR(?war), ""#""))) IN (<http://dbpedia.org/ontology/MilitaryConflict>, <http://dbpedia.org/ontology/SocietalEvent>)))
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
485,22,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?awardee ?birthPlace WHERE {
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet> .
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> .
    ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    
    OPTIONAL {
        ?country <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
        ?country <http://dbpedia.org/property/timeZone> ""Western European Time"" .
        ?awardee <http://dbpedia.org/ontology/country> ?country .
    }
}
```",4,7,5,2,2,2,3,28,5,8,0,0.38461538461538464,1.0,0.5555555555555556
617,56,test,"Give me the parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of Laodice IV.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
    # Step 1: Identify the commander in Battle of Panium
    ?battle <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Battle_of_Panium> .
    ?battle <http://dbpedia.org/ontology/commander> ?commander .

    # Step 2: Find the child of this commander
    ?commander <http://dbpedia.org/ontology/child> ?child1 .

    # Step 3: Parent of this child is the commander (already identified)

    # Step 4: Identify Seleucus II Callinicus and Laodice IV's royal child
    <http://dbpedia.org/resource/Seleucus_II_Callinicus> <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Laodice_IV> .
    ?royalParent <http://dbpedia.org/property/husband> <http://dbpedia.org/resource/Seleucus_II_Callinicus> ;
                 <http://dbpedia.org/property/wife> <http://dbpedia.org/resource/Laodice_IV> .
    ?royalParent <http://dbpedia.org/ontology/child> ?royalChild .
    ?royalChild a <http://dbpedia.org/class/yago/Royalty108069> .

    # Step 5: Find the child of this royal child
    ?royalChild <http://dbpedia.org/ontology/child> ?grandchild .

    # Step 6: Parent of grandchild is the royal child
    ?grandchild <http://dbpedia.org/ontology/parent> ?parent .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,20,test,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils and landmark at elevation of the award of the commander in Battle of Chishui River.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
# Step 1: Identify the associated musical artist
SELECT ?artist WHERE {
    ?artist <http://dbpedia.org/ontology/member> ?member .
    ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
    ?artist <http://dbpedia.org/ontology/band> [] .
    ?member <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/The_Boils> .
}

# Step 2: Find a member of this musical artist
SELECT ?member WHERE {
    ?artist <http://dbpedia.org/ontology/member> ?member .
    FILTER(?artist IN (<result_from_step_1>))
}

# Step 3: Determine the birthplace of this member
SELECT ?birthPlace WHERE {
    ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER(?member = <result_from_step_2>)
}

# Step 4: Identify the commander in Battle of Chishui River
SELECT ?commander WHERE {
    ?battle <http://dbpedia.org/property/commander> ?commander .
    ?battle <http://www.w3.org/2000/01/rdf-schema#label> ""Battle of Chishui River""@en .
}

# Step 5: Find awards received by this commander
SELECT ?award WHERE {
    ?commander <http://dbpedia.org/property/awards> ?award .
    FILTER(?commander = <result_from_step_4>)
}

# Step 6: Determine the landmark at elevation of these awards
SELECT ?landmark WHERE {
    ?landmark <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    ?landmark <http://dbpedia.org/ontology/elevation> ?elevation .
    ?award <http://dbpedia.org/property/elevation> ?elevation .
    FILTER(?award = <result_from_step_5>)
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
959,69,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . }","```sparql
SELECT ?nativePlace WHERE {
    ?manager <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Kashima_Antlers> .
    ?manager <http://dbpedia.org/ontology/managers> ?teamManager .
    
    ?person <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/ontology/SportsManager> ;
            <http://dbpedia.org/property/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> ;
            <http://dbpedia.org/property/managesTeam> ?teamManagedByPerson .
    
    FILTER(?teamManagedByPerson = ?manager)
    
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label ;
               <http://www.w3.org/2002/07/owl#sameAs> ?japaneseAlmaMater .
    
    FILTER(CONTAINS(LCASE(?label), ""university"") && CONTAINS(LCASE(?label), ""japan""))
    
    <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?country .
    
    ?country <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
251,28,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v5 . },"```sparql
# Part 1: Death place of the author of ""The Twelve Abbots of Challant""
SELECT ?deathPlace WHERE {
    ?author dbo:work <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> .
    ?author dbo:deathPlace ?deathPlace .
}

UNION

# Part 2: Administration of the ruling party in Sicily
SELECT ?administration WHERE {
    ?party a dbo:PoliticalParty ;
           dbo:country <http://dbpedia.org/resource/Sicily> ;
           dbo:administration ?administration .
}

UNION

# Part 3: Location of the war involving Louis François Félix Musnier
SELECT ?location WHERE {
    ?war dbo:participant <http://dbpedia.org/resource/Louis_François_Félix_Musnier> ;
         dbo:location ?location .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
747,65,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . }","```sparql
# Part 1: Band of Tracey Elizabeth McSween
SELECT ?band WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Tracey Elizabeth McSween"" .
    ?person <http://dbpedia.org/property/memberOf> ?band .
}

UNION

# Part 2: Band of person born on the same date as Pavlo Khudzik
SELECT ?otherPerson ?band WHERE {
    ?pavlo <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?otherPerson <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?otherPerson <http://dbpedia.org/property/memberOf> ?band .
    FILTER(?otherPerson != ?pavlo)
}

UNION

# Part 3: Band of the writer of a song by Amba Shepherd
SELECT ?band WHERE {
    ?song <http://dbpedia.org/ontology/writer> ?writer .
    ?writer <http://dbpedia.org/property/memberOf> ?band .
    ?song <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Song> .
    ?song <http://dbpedia.org/ontology/lyricist> <http://dbpedia.org/resource/Amba_Shepherd> .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
294,20,test,"Give me the entity in Nashville, Tennessee and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Find the architect of P.D. Houston Jr. House and their resting place in Nashville, TN
SELECT ?architectRestingPlace WHERE {
    ?house <http://dbpedia.org/ontology/architect> ?architect .
    FILTER(STR(?house) = ""P._D._Houston_Jr._House"")
    ?architect <http://dbpedia.org/property/placeOfBurial> ?architectRestingPlace .
    ?architectRestingPlace <http://www.w3.org/2000/01/rdf-schema#label> ?placeLabel .
    FILTER(CONTAINS(LCASE(?placeLabel), ""nashville, tennessee""))
}

UNION

# Find the resting place of Luke Lea
SELECT ?lukeLeaRestingPlace WHERE {
    <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/property/placeOfBurial> ?lukeLeaRestingPlace .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
339,20,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
    # Step 1: Find Princess Olga's parent
    OPTIONAL { <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> <http://dbpedia.org/ontology/father> ?parent . }
    OPTIONAL { <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> <http://dbpedia.org/ontology/mother> ?parent . }

    # Step 2: Find the child of that parent (Princess Olga)
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    FILTER(?child = <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark>) .

    # Step 3: Find Frederick VIII's predecessor
    ?predecessor <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> .

    # Step 4: Identify the child of that predecessor, and then their child
    ?childOfPredecessor <http://dbpedia.org/ontology/father> ?predecessor ;
                       <http://dbpedia.org/ontology/mother> ?predecessor .
    ?grandChildOfPredecessor <http://dbpedia.org/ontology/father> ?childOfPredecessor ;
                             <http://dbpedia.org/ontology/mother> ?childOfPredecessor .

    # Step 5: Find the father of Princess Olga
    ?parent <http://dbpedia.org/ontology/father> ?father .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
142,8,test,Give me the entity in Japan and birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?actor ?entityInJapan ?birthPlace WHERE {
    ?work <http://dbpedia.org/ontology/starring> ?actor .
    ?work rdfs:label ""Papa wa Newscaster""@en.
    
    OPTIONAL { ?actor <http://dbpedia.org/property/nationality> ?nationality . 
               ?nationality rdfs:label ?entityInJapan FILTER(lang(?entityInJapan) = 'ja') }
               
    OPTIONAL { ?actor <http://dbpedia.org/property/birthPlace> ?birthPlace }
}
```",3,3,4,2,2,2,2,9,0,6,2,0.0,0.0,0
820,18,test,Give me the child of the parent of Jason Schwartzman and professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
# Step 1: Find Jason Schwartzman's parent
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Jason_Schwartzman> <http://dbpedia.org/ontology/child> ?parent .
}

# Step 2: Find the child of that parent (excluding Jason Schwartzman)
SELECT DISTINCT ?sibling WHERE {
    ?parent <http://dbpedia.org/ontology/child> ?sibling .
    FILTER(?sibling != <http://dbpedia.org/resource/Jason_Schwartzman>)
}

# Step 3: Identify awards received by Scott McCloud
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?award .
}

# Step 4: Find professionals in those awards
SELECT DISTINCT ?professional WHERE {
    ?award <http://dbpedia.org/ontology/receipient> ?professional .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
10,23,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
SELECT ?musicalArtist WHERE {
    ?mattColton <http://dbpedia.org/ontology/birthName> ""Matt Colton"" .
    ?sharonKao <http://dbpedia.org/ontology/birthName> ""Sharon Kao"" .
    ?mattColton <http://dbpedia.org/ontology/associatedMusicalArtist> ?musicalArtist .
    ?musicalArtist <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?profession IN (<http://dbpedia.org/resource/Music_production>, <http://dbpedia.org/resource/Audio_engineering>))
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
391,48,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
SELECT ?native WHERE {
    ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""Jackson, Tennessee""@en .
    ?movie <http://purl.org/dc/terms/subject> ?figure ;
           <http://dbpedia.org/ontology/starring> ?actor1, ?actor2 .
    ?actor1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
    ?actor2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
    ?actor1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
    ?figure <http://dbpedia.org/ontology/nativePlace> ?native .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
9,69,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
# Step 1: Identify the organisation and educational institution in Northern Ireland
SELECT ?institution WHERE {
    ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>.
    ?institution <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Northern_Ireland>.
}

# Step 2: Retrieve the nickname of this institution
SELECT ?nickname WHERE {
    ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>.
    ?institution <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Northern_Ireland>.
    ?institution <http://dbpedia.org/property/nicknames> ?nickname.
}

# Step 3: Identify the mayor who is a politician associated with an organisation in Belfast
SELECT ?mayor WHERE {
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?organisation <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Belfast>.
    ?mayor <http://dbpedia.org/ontology/mayorOf> ?organisation.
}

# Step 4: Find this mayor's alma mater
SELECT ?almaMater WHERE {
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?organisation <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Belfast>.
    ?mayor <http://dbpedia.org/ontology/mayorOf> ?organisation.
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater.
}

# Step 5: Ensure this alma mater matches the educational institution from step 1
SELECT DISTINCT ?nickname WHERE {
    ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>.
    ?institution <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Northern_Ireland>.
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?organisation <http://dbpedia.org",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
232,51,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . },"```sparql
SELECT ?nativePlace WHERE {
    ?film rdf:type dbo:Film .
    ?conflict rdf:type dbo:MilitaryConflict .
    <http://dbpedia.org/resource/Sean_Pertwee> dbo:claimToFame ?film, ?conflict .

    ?actor dbo:actor ?film ;
           dbo:actor ?conflict .

    ?politician dbo:nativeCountry dbr:France ;
                a dbo:Politician, dbo:OfficeHolder ;
                dbo:residence ?settlement .

    ?settlement rdf:type dbo:Settlement ;
                dbo:country dbr:United_Kingdom ;
                dbo:native ?nativePlace .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
378,67,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
SELECT ?commander ?claimToFame WHERE {
    # Step 1: Identify the war that references Peninsular War
    ?war <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Peninsular_War> .
    
    # Step 2: Find the commander of this war
    ?war <http://dbpedia.org/ontology/commander> ?commander .

    # Step 3: Identify wars involving Thomas Trigge and Carl Pontus Gahn
    ?triggeWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?triggeWar <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Thomas_Trigge> .

    ?gahnWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?gahnWar <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Carl_Pontus_Gahn> .

    # Step 4: Ensure the commander participated in these wars
    ?commander <http://dbpedia.org/ontology/commander> ?triggeWar .
    ?commander <http://dbpedia.org/ontology/commander> ?gahnWar .

    # Step 5: Retrieve the claim to fame of this commander
    ?commander <http://dbpedia.org/property/claimToFame> ?claimToFame .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
659,51,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?commander WHERE {
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?force <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.

    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?regiment <http://dbpedia.org/property/battle> ?war.
    ?regiment <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)>.

    ?war <http://dbpedia.org/ontology/commander> ?commander.
}
```",5,10,6,3,2,3,3,71,0,0,31,0,0.0,0
959,30,test,Give me the native of Japan and manager of the team of Takashi Sekizuka and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
    ?person <http://dbpedia.org/property/teamManager> <http://dbpedia.org/resource/Takashi_Sekizuka> .
    ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
421,28,test,Give me the band member of the awardee of [[#Awards and nominations and native of the birthplace of Samir Bekrić and person born as the birth name of Dino Merlin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
# Step 1: Find Samir Bekrić's birthplace
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Step 2: Find a native of Samir Bekrić's birthplace
SELECT ?nativePerson WHERE {
    ?nativePerson <http://dbpedia.org/ontology/nativeOf> ?birthPlace .
}

# Step 3: Determine Dino Merlin's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?birthName .
}

# Step 4: Identify person born as Dino Merlin's birth name
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 5: Find awardees of the identified person from step 4
SELECT ?awardee WHERE {
    ?person <http://dbpedia.org/property/awards> ?award .
    ?awardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?awardee != ?person)
}

# Step 6: Identify band members of the awardee
SELECT ?bandMember WHERE {
    ?awardee <http://dbpedia.org/ontology/memberOfBand> ?band .
    ?band <http://dbpedia.org/ontology/member> ?bandMember .
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
378,18,test,"Give me the war of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?person ?war ?claimToFame WHERE {
  { 
    OPTIONAL { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war . BIND(""Carl Pontus Gahn"" AS ?person) }
  } UNION {
    OPTIONAL { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/property/claimToFame> ?claimToFame . BIND(""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón"" AS ?person) }
  } UNION {
    OPTIONAL { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?war . BIND(""Joaquín Blake"" AS ?person) }
  }
}
```",3,3,4,1,3,3,3,71,2,21,0,0.08695652173913043,1.0,0.16
767,50,test,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of Black Hood.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
SELECT DISTINCT ?almaMater WHERE {
  # Step 1: Find George Kilbon Nash's administration
  ?nash <http://dbpedia.org/ontology/member> ?administration1 .
  
  # Step 2: Find Black Hood's alter ego and its administration
  ?blackHood <http://dbpedia.org/property/alterEgo> ?alterEgo .
  ?alterEgo <http://dbpedia.org/ontology/member> ?administration2 .

  # Step 3: Get alma mater for both administrations
  ?administration1 <http://dbpedia.org/ontology/almaMater> ?almaMater .
  OPTIONAL { ?administration2 <http://dbpedia.org/ontology/almaMater> ?almaMater . }
  
  FILTER(?nash = <http://dbpedia.org/resource/George_Kilbon_Nash>)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,68,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?commander WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
    ?force <http://dbpedia.org/property/commander> ?commander .
    ?force <http://dbpedia.org/property/person> ?person .
    
    OPTIONAL {
        ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
        ?office <http://dbpedia.org/property/leader> ?commander .
        ?office <http://dbpedia.org/property/person> <http://dbpedia.org/resource/Joseph_Stalin> .
    }
    
    OPTIONAL {
        ?awardEvent <http://dbpedia.org/ontology/battle> [
            <http://dbpedia.org/ontology/location> ?location ;
            <http://dbpedia.org/ontology/commander> ?commander
        ] .
        VALUES ?location { <http://dbpedia.org/resource/Volcano_Islands_campaign> <http://dbpedia.org/resource/Ryukyu_Islands_campaign> } .
    }
    
    FILTER EXISTS {
        ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Budapest>
    }
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
92,51,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?band1 ?band2 WHERE {
    ?person1 <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
    ?person1 <http://dbpedia.org/ontology/band> ?band1 .

    ?person2 <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
    ?person2 <http://dbpedia.org/ontology/band> ?band2 .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,52,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?person ?partyName WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Michele_Pinto> 
    (<http://dbpedia.org/resource/Lamberto_Andreotti> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/FatherOfLambertoAndreotti108067068> ?father) 
    <http://dbpedia.org/resource/Romano_Prodi>
  }
  
  OPTIONAL { ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/FatherOfLambertoAndreotti108067068> . BIND(?father AS ?person) }

  ?person <http://dbpedia.org/ontology/politicalParty> ?party .
  ?party rdfs:label ?partyName .
  FILTER(LANG(?partyName) = 'en')
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
184,65,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
# Step 1: Find Archduke Joseph Francis's child
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Find the parent of this child
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/parent> ?parent .
}

# Step 3a: Find Archduke Ladislaus Philipp's parent
SELECT ?ladislausParent WHERE {
    <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/child> ?ladislausParent .
}

# Step 3b: Find the child of this parent
SELECT ?ladislausChild WHERE {
    ?ladislausParent <http://dbpedia.org/ontology/child> ?ladislausChild .
}

# Step 3c: Find a native of Budapest who is also a child of this individual
SELECT ?budapestNative WHERE {
    ?ladislausChild <http://dbpedia.org/ontology/child> ?budapestNative .
    ?budapestNative <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Hungary> .
}

# Step 4: Find the common parent of the two individuals identified in steps 2 and 3c
SELECT DISTINCT ?commonParent WHERE {
    ?parent1 <http://dbpedia.org/ontology/child> ?individual1 .
    ?parent2 <http://dbpedia.org/ontology/child> ?individual2 .
    FILTER(?parent1 = ?parent2)
    FILTER(?individual1 = ?budapestNative || ?individual1 = ?child)
    FILTER(?individual2 = ?budapestNative || ?individual2 = ?child)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
9,64,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
SELECT ?almaMater WHERE {
    # Step 1: Identify the Mayor of Belfast who is a politician
    ?mayor <http://dbpedia.org/ontology/politician> _:a .
    ?mayor <http://www.w3.org/ns/prov#wasDerivedFrom> <http://dbpedia.org/resource/Belfast> .

    # Step 2: Find the alma mater of the mayor
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .

    # Step 3: Identify the entity with a nickname in Northern Ireland that is an organization and educational institution
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?nickname .
    ?entity <http://dbpedia.org/ontology/nickname> ?nickname .
    ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> .
    ?entity <http://www.w3.org/ns/org#organization> _:b .
    ?entity <http://dbpedia.org/ontology/educationalInstitution> _:c .

    # Step 4: Find the alma mater of Allen Hill (scientist)
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
487,20,test,"Give me the country of the administration of the person born on 1955-01-26 and administration of the person born, that is a soccer player, as the birth name of Phil Scott.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/country> ?result . }","```sparql
SELECT ?person1 ?administration1 ?country1 ?person2 ?administration2 ?country2 WHERE {
  # Person born on 1955-01-26
  ?person1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^xsd:date .
  
  # Administration and country for the first person
  OPTIONAL { ?person1 <http://dbpedia.org/ontology/administration> ?administration1 . }
  OPTIONAL { ?administration1 <http://dbpedia.org/property/country> ?country1 . }

  # Soccer player with birth name Phil Scott
  ?person2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person2 <http://dbpedia.org/property/birthName> ""Phil Scott"" .

  # Administration and country for the soccer player
  OPTIONAL { ?person2 <http://dbpedia.org/ontology/administration> ?administration2 . }
  OPTIONAL { ?administration2 <http://dbpedia.org/property/country> ?country2 . }
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
54,61,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?predecessor WHERE {
    ?thadoMinsawParent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
    ?thihapateReference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
    ?thihapateChild <http://dbpedia.org/ontology/child> ?thihapateReference ;
                    <http://dbpedia.org/ontology/officeHolder> [] ;
                    <http://dbpedia.org/ontology/Royalty> [] .
    ?predecessor <http://dbpedia.org/ontology/predecessor> ?thihapateChild .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
92,38,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
SELECT ?band1 ?band2 WHERE {
    # For Joseph Michael Furney, likely Joe Satriani
    <http://dbpedia.org/resource/Joe_Satriani> <http://dbpedia.org/ontology/band> ?band1 .
    
    # For Jim Sheppard, likely Jimi Tenor
    <http://dbpedia.org/resource/Jimi_Tenor> <http://dbpedia.org/ontology/musicalArtist> ?band2 .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
827,18,test,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?grandfather WHERE {
    ?parent <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> .
    ?child <http://dbpedia.org/ontology/child> ?parent ;
           a <http://dbpedia.org/ontology/Royalty> .
    ?grandchild <http://dbpedia.org/ontology/child> ?child ;
                a <http://dbpedia.org/ontology/Royalty> .
    ?grandchild <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> .
    ?grandchild <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/property/father> ?grandfather .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
435,21,test,Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
SELECT ?author ?work WHERE {
  # Find the author of a work related to Iceland
  ?work <http://dbpedia.org/ontology/author> ?author .
  ?work <http://dbpedia.org/ontology/subject> <http://dbpedia.org/resource/Iceland> .

  # Ensure this author is linked to Greenwich Mean Time region
  ?gmtWork <http://dbpedia.org/ontology/author> ?author .
  ?gmtWork <http://dbpedia.org/ontology/subject> <http://dbpedia.org/resource/Greenwich_Mean_Time> .

  # Ensure this author is linked to the territory administered from Reykjavík
  ?territoryWork <http://dbpedia.org/ontology/author> ?author .
  ?territoryWork <http://dbpedia.org/ontology/subject> ?territory .
  ?territory <http://dbpedia.org/property/administrativeCentre> <http://dbpedia.org/resource/Reykjavík> .

  # Return the works by this author
  VALUES ?work { ?work ?gmtWork ?territoryWork }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
547,64,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Part 1: Resting place of the child of the child of William Haliburton
SELECT ?grandchild ?restingPlace WHERE {
    # Find grandchildren of William Haliburton
    ?parent <http://dbpedia.org/ontology/birthName> ""William Haliburton"" .
    ?parent <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/child> ?grandchild .

    # Find resting place of each grandchild
    OPTIONAL { ?grandchild <http://dbpedia.org/property/burialPlace> ?restingPlace . }
}

UNION

# Part 2: Resting place of the awardee of the award of Gerald Graham
SELECT ?otherAwardee ?restingPlace WHERE {
    # Find awards received by Gerald Graham
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?award .

    # Find other awardees for each award
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Gerald_Graham>) .

    # Find resting place of each other awardee
    OPTIONAL { ?otherAwardee <http://dbpedia.org/property/burialPlace> ?restingPlace . }
}

UNION

# Part 3: Resting place of Simon Cadell
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/property/burialPlace> ?restingPlace .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
701,47,test,Give me the parent of the child of the child of Seti I and parent of the child of Nefertari.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
# Part 1: Identify the grandchild of Seti I and their parent
SELECT ?grandchild (SAMPLE(?parent) AS ?commonParent) WHERE {
    # Find the child of Seti I
    <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> ?child1 .

    # Find the grandchild (child of the child)
    ?child1 <http://dbpedia.org/ontology/child> ?grandchild .

    # Find the parent of this grandchild
    ?parent <http://dbpedia.org/ontology/child> ?grandchild .
}

# Part 2: Identify the child of Nefertari and their parent
UNION

SELECT ?commonParent WHERE {
    # Find the child of Nefertari
    <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> ?child2 .

    # Find the parent of this child
    ?parent <http://dbpedia.org/ontology/child> ?child2 .

    # Ensure it's the same parent as found in Part 1
    VALUES ?commonParent { ?parent }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
161,54,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
# Step 1: Identify the commander of the Biscay Campaign
SELECT ?biscayCommander WHERE {
    ?biscayCampaign <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Biscay_Campaign>.
    ?biscayCampaign <http://dbpedia.org/property/commander> ?biscayCommander.
}

# Step 2: Find Francisco Franco's military force
SELECT ?francoForce WHERE {
    <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/ontology/militaryUnit> ?francoForce.
    ?francoEvent <http://www.w3.org/2000/01/rdf-schema#isPartOf> ?francoForce.
    ?francoEvent <http://dbpedia.org/ontology/type> ?type.
    FILTER(?type = <http://dbpedia.org/resource/Societal_event> || ?type = <http://dbpedia.org/resource/Military_conflict>)
}

# Step 3: Determine Indalecio Prieto's predecessor and their military force
SELECT ?predecessor, ?predecessorForce WHERE {
    ?prieto <http://dbpedia.org/ontology/predecessor> ?predecessor.
    ?event <http://www.w3.org/2000/01/rdf-schema#isPartOf> ?predecessorForce.
    ?event <http://dbpedia.org/ontology/type> ?type.
    FILTER(?type = <http://dbpedia.org/resource/Societal_event> || ?type = <http://dbpedia.org/resource/Military_conflict>)
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
701,46,test,Give me the parent of the child of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find a child of Ramesses II
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II>.
  
  # Step 2: Find the parent of that child (should be Ramesses II)
  ?parent <http://dbpedia.org/ontology/birthChild> ?child.
  
  # Step 3: Identify the spouse of Amun-her-khepeshef
  OPTIONAL { 
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef>.
    
    # Step 4: Find a child of that spouse
    ?child2 <http://dbpedia.org/ontology/birthParent> ?spouse.
    
    # Step 5: Find the parent of that child
    ?parent2 <http://dbpedia.org/ontology/birthChild> ?child2.
    
    FILTER(?parent = ?parent2)
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
232,52,test,"Give me the native of London and child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
# Step 1: Get Jon Pertwee's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find the person with that birth name (Jon Pertwee)
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    FILTER(?birthName = ""John Julian Pertwee"") # Assuming we found this from step 1
}

# Step 3: Query for Jon Pertwee's children
SELECT ?child WHERE {
    ?person <http://dbpedia.org/ontology/child> ?child .
    FILTER(?person = <http://dbpedia.org/resource/Jon_Pertwee>)
}

# Step 4: Identify Sean Pertwee's claim to fame as a film and military conflict
SELECT ?fame WHERE {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/claimToFame> ?fame .
    ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Film> , <http://dbpedia.org/ontology/MilitaryConflict>) .
}

# Step 5: Filter Jon Pertwee's children who are native to London and have acted in that film/military conflict
SELECT ?child WHERE {
    ?person <http://dbpedia.org/ontology/child> ?child .
    FILTER(?person = <http://dbpedia.org/resource/Jon_Pertwee>)
    
    ?child <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/London> .
    
    ?child <http://dbpedia.org/ontology/actor> ?fame .
    ?fame IN (?film, ?conflict) .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,37,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
SELECT ?rapper WHERE {
    # Step 1: Find associated musical artist of Chris Taylor
    ?artist <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
    
    # Step 2: Identify works produced by Chris Taylor that are both a song and a musical work
    ?work <http://dbpedia.org/ontology/work> ?artist ;
          <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalWork108069068> ,
                          <http://dbpedia.org/class/yago/Song106557377> .
    
    # Step 3: Find the professional associated with this work who is a rapper
    ?rapper <http://dbpedia.org/ontology/work> ?work ;
            <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> .
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
778,17,test,"Give me the entity in United States and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
SELECT ?software ?entity WHERE {
    <http://dbpedia.org/resource/Bill_Joy> <http://dbpedia.org/property/works> ?work .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .
    ?software <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Bill_Joy> .
    OPTIONAL { ?software <http://dbpedia.org/property/entity> ?entity . }
    FILTER EXISTS { ?entity <http://www.w3.org/2000/01/rdf-schema#label> ""United States""@en }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,24,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
SELECT ?party WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?person <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/El_Valle_de_Antón> .
    ?person rdfs:label ""Arnulfo Arias Madrid""@en .
    ?person <http://dbpedia.org/ontology/politicalParty> ?party .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
378,59,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war WHERE {
    # Step 1: Get the commander of the Peninsular War
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?peninsularCommander .
    
    # Step 2: Find Carl Pontus Gahn by his birth name and get wars he commanded
    ?gahn <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn""@en .
    ?gahn <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
    ?gahn <http://dbpedia.org/ontology/commander> ?war .

    # Step 3: Find the common war
    FILTER(?peninsularCommander = ?gahn)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
232,71,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/property/residence> ?v8 . ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v4 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?child WHERE {
    # Step 1: Politician native of France (assuming Charles de Gaulle)
    <http://dbpedia.org/resource/Charles_de_Gaulle> <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
    
    # Step 2: Residence in Britain
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
    <http://dbpedia.org/resource/Charles_de_Gaulle> <http://dbpedia.org/property/residence> ?residence .

    # Step 3: Actor, narrator, and producer native to this settlement
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Narrator> .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Producer> .
    ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/British> .
    ?actor <http://dbpedia.org/ontology/birthPlace> ?residence .

    # Step 4: Claim to fame involving a film and military conflict
    ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?actor <http://dbpedia.org/property/awards> ?film .
    ?actor <http://dbpedia.org/property/awards> ?conflict .

    # Step 5: Jon Pertwee linked to these films/military conflicts
    <http://dbpedia.org/resource/Jon_Pertwee> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    ?film <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Jon_Pertwee> .
    ?conflict <http://dbpedia.org/property/personnel> <http://dbpedia.org/resource/Jon_Pertwee> .

    # Step 6: Retrieve Jon Pertwee's children
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
356,19,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in the successor of 2014 Sacramento Republic FC season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/manager> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?team WHERE {
    # Step 1: Identify Gary Williams' birthplace
    <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    
    # Step 2: Ensure the birthplace is an English settlement
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""england"") && CONTAINS(LCASE(?label), ""settlement""))

    # Step 3: Find a soccer player and manager from that birthplace
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace ;
            <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/England> ;
            <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(CONTAINS(LCASE(?profession), ""soccer player"") && CONTAINS(LCASE(?profession), ""soccer manager""))

    # Step 4: Identify the team of this person who played in the successor of the 2014 Sacramento Republic FC season
    ?person <http://dbpedia.org/ontology/team> ?team .
    ?season <http://dbpedia.org/resource/Sacramento_Republic_FC_seasons#2015> ?team .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
528,53,test,"Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Part 1: Find the military force of Narciso Campero Leyes
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?force .
}

UNION

# Part 2: Find wars involving Orozimbo Barbosa
SELECT ?war WHERE {
    ?barbosa <http://dbpedia.org/property/birthName> ""Orozimbo Barbosa"" .
    ?barbosa <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Part 3: Find societal events in Chile associated with a military force
SELECT ?event WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
           <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
    OPTIONAL { ?event <http://dbpedia.org/ontology/militaryForce> ?force . }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
9,38,test,Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> .
    ?university <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast""@en .
    ?university <http://dbpedia.org/ontology/nickname> ?nickname .
    FILTER(?nickname = ""QUB"" || ?nickname = ""Queen's"") # Assuming these are possible nicknames
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
487,19,test,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott and country of the administration of Patricia McCoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?result <http://dbpedia.org/property/governor> ?v4 . },"```sparql
SELECT ?administration1 ?country WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Phil Scott"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://dbpedia.org/ontology/administration> ?administration1 .

  ?adminPatricia <http://dbpedia.org/ontology/administration> ?administration2 .
  ?administration2 <http://dbpedia.org/ontology/country> ?country .
  
  FILTER(?adminPatricia = <http://dbpedia.org/resource/Patricia_McCoy>)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
404,56,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
SELECT ?parent WHERE {
    ?prince <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> .
    ?prince <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?father <http://dbpedia.org/ontology/father> ?spouse .
    ?child <http://dbpedia.org/ontology/child> ?father .
    ?parent <http://dbpedia.org/ontology/parent> ?child .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,20,test,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?battleLocation ?partyAdministration ?deathPlace WHERE {
  # Location of Battle of Marengo
  <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?battleLocation .

  # Administration of the ruling party in Sicily
  ?party a <http://dbpedia.org/ontology/PoliticalParty> ;
         a <http://dbpedia.org/ontology/Organisation> ;
         <http://dbpedia.org/property/rulingParties> <http://dbpedia.org/resource/Sicily> .
  ?party <http://dbpedia.org/ontology/administration> ?partyAdministration .

  # Death place of Laura Mancinelli
  <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/property/deathPlace> ?deathPlace .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,27,test,Give me the force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?person <http://dbpedia.org/ontology/militaryForce> ?force .
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
328,58,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Part 1: Awardee of Order of Suvorov
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> .
}

# Part 2: Commander in the force of Ferenc Szálasi
SELECT ?commander WHERE {
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
           <http://dbpedia.org/property/commander> ?commander .
    ?force <http://dbpedia.org/property/battle> ?battle .
    ?battle <http://dbpedia.org/property/foughtBy> <http://dbpedia.org/resource/Ferenc_Szálasi> .
}

# Part 3: Leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson
SELECT ?agencyLeader WHERE {
    ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                   <http://dbpedia.org/property/politician> true .
    ?officeHolder <http://dbpedia.org/resource/Gustav_Jonson> .
    
    ?agency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> ;
            <http://dbpedia.org/property/leader> ?officeHolder .
    
    ?agencyLeader <http://dbpedia.org/property/leader> ?agency .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,30,test,"Give me the spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
# Step 1: Find spouse of Princess Victoria Louise of Prussia
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Identify father of Ernest Augustus, Duke of Brunswick
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?father .
}

# Step 3: Find child of the identified father who is a parent of Prince Ernest Augustus of Hanover (born 1914)
SELECT ?child WHERE {
    ?father <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Prince_Ernst_August_of_Hanover> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
54,48,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find Thihapate's child who is an office holder and royalty
  ?thihapateChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?thihapateChild a <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the predecessor of that child
  ?predecessor <http://dbpedia.org/ontology/predecessor> ?thihapateChild .

  # Step 3: Find the father of the predecessor's child
  ?predecessorChild <http://dbpedia.org/ontology/child> ?predecessor .
  ?father <http://dbpedia.org/property/father> ?predecessorChild .

  # Step 4: Identify the child of that father
  ?finalChild <http://dbpedia.org/ontology/child> ?father .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
392,24,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
SELECT ?province ?region WHERE {
  # Query for Sebastiano Bianchetti's residence province
  OPTIONAL {
    <http://dbpedia.org/resource/Sebastiano_Bianchetti> 
      <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Italy> .
    <http://dbpedia.org/resource/Sebastiano_Bianchetti> 
      <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://dbpedia.org/ontology/province> ?province .
  }

  # Query for Aguilar de Segarra's time zone region
  OPTIONAL {
    <http://dbpedia.org/resource/Aguilar_de_Segarra> 
      <http://www.w3.org/2006/time#during> ?timeZone .
    ?timeZone <http://dbpedia.org/ontology/region> ?region .
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,23,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?person WHERE {
  # Step 1: Find headquarters of House of Sombrerete
  <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/headquarters> ?headquarters .

  # Step 2: Find person deceased at that location
  ?person <http://dbpedia.org/property/deathPlace> ?headquarters .
  
  # Step 3: Identify events related to Lisa Gavrić's profession as a commander
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Lisa_Gavrić> .

  # Step 4: Link the person to these events
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Commander> .
  ?person <http://dbpedia.org/property/profession> ?event .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,51,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
    ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> .
    ?entity <http://dbpedia.org/ontology/nickname> ?nickname .

    ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> .
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
    
    FILTER EXISTS { ?person <http://dbpedia.org/ontology/nickname> ?nickname }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
617,58,test,Give me the child of Antiochus III the Great and spouse of the child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?child ?spouse ?grandChild ?parent WHERE {
    # Step 1: Find children of Antiochus III the Great
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
    
    # Step 2: Identify which child is a spouse
    ?child <http://dbpedia.org/property/spouse> ?spouse .

    # Step 3: Find the commander in the Battle of Panium and their child
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Panium> .
    ?commander <http://dbpedia.org/ontology/child> ?grandChild .

    # Step 4: Find the parent of this grandChild
    ?grandChild <http://dbpedia.org/ontology/parent> ?parent .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
767,65,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
# Step 1: Identify George Kilbon Nash's Administration
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/administration> ?administration .
}

# Step 2: Find Alma Mater of the Administration
SELECT ?almaMater WHERE {
    ?administration <http://dbpedia.org/property/almaMater> ?almaMater .
}

# Step 3: Identify Black Hood's Alter Ego
SELECT ?alterEgo WHERE {
    <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
}

# Step 4: Find Settlement in Green's Administration with Reference to Alter Ego
SELECT DISTINCT ?settlement WHERE {
    ?greenAdministration <http://dbpedia.org/property/administration> ?administration .
    ?administration <http://www.w3.org/2000/01/rdf-schema#label> ""Green"" .
    ?settlement <http://dbpedia.org/ontology/settlement> ?administration .
    ?settlement <http://dbpedia.org/ontology/reference> ?alterEgo .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
182,22,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?authorWar ?gotabayaWorkWar WHERE {
  # Part 1: Author of ""2019 Sri Lanka Easter bombings"" and their wars
  <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/ontology/author> ?author .
  OPTIONAL { ?author <http://dbpedia.org/ontology/war> ?authorWar . }

  # Part 2: Works of Gotabhaya Rajapaksa and their wars
  ?work <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> .
  OPTIONAL { ?work <http://dbpedia.org/ontology/war> ?gotabayaWorkWar . }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,46,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
# Query for the commander in the war involving the 1st Light Cavalry Lancers Regiment
SELECT ?war ?commander WHERE {
    <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/ontology/event> ?war .
    FILTER(?war <http://dbpedia.org/ontology/MilitaryConflict>)
    ?battle <http://dbpedia.org/property/commander> ?commander .
}

# Query for the commander in the force of a native office holder from the Kingdom of Ireland
SELECT ?officeHolder ?force ?commander WHERE {
    ?officeHolder <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> ;
                  <http://dbpedia.org/ontology/officeHolder> ?position .
    ?force <http://dbpedia.org/property/commander> ?commander ;
           <http://dbpedia.org/ontology/leader> ?officeHolder .
}
```",5,8,6,3,2,3,3,71,0,0,71,0,0.0,0
485,20,test,"Give me the entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
SELECT ?awardee ?birthPlace WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award>.
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>.
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>.
    ?awardee <http://dbpedia.org/property/birthPlace> ?birthPlace.
    ?birthPlace <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nottinghamshire>.
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,68,test,"Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
# Part 1: War of the Commander in the Work of --01-09
SELECT ?war WHERE {
    ?work <http://dbpedia.org/property/date> ""-01-09"" .
    ?work <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?war .
}

# Part 2: Force of the Person Born as Narciso Campero Leyes
SELECT ?force WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes"" .
    ?person <http://dbpedia.org/ontology/militaryForce> ?force .
}

# Part 3: War of the Military Force of the Entity in Chile
SELECT ?war WHERE {
    ?entity <http://www.w3.org/2002/07/owl#sameAs> ?chileEvent .
    ?chileEvent <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Chile> .
    ?entity <http://dbpedia.org/ontology/militaryForce> ?force .
    ?force <http://dbpedia.org/ontology/battle> ?war .
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
547,34,test,Give me the resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query 1: Resting place of Alan Cunningham
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

UNION

# Query 2: Resting place of the child of the child of William Haliburton
SELECT ?grandchildRestingPlace WHERE {
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild <http://dbpedia.org/ontology/parent> ?child .
    ?grandchild <http://dbpedia.org/ontology/burialPlace> ?grandchildRestingPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,58,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash and entity in Baden-Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
# Part 1: Alter ego of Matthew Burland's fictional character
SELECT ?alterEgo WHERE {
    ?fictionalCharacter <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?fictionalCharacter <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
    ?fictionalCharacter <http://dbpedia.org/property/persona> <http://dbpedia.org/resource/Matthew_Burland> .
}

UNION

# Part 2: Alma mater of George K. Nash's administration
SELECT ?almaMater WHERE {
    ?nash <http://dbpedia.org/ontology/administration> ?administration .
    ?administration <http://dbpedia.org/property/almaMater> ?almaMater .
    ?nash <http://www.w3.org/2000/01/rdf-schema#label> ""George K. Nash"" .
}

UNION

# Part 3: Entity in Baden-Württemberg
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Baden-Württemberg"" .
}

# Find common reference among the results
SELECT DISTINCT ?result WHERE {
    VALUES ?result { ?alterEgo ?almaMater ?entity }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,20,test,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
SELECT ?region WHERE {
    ?event <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Aguilar de Segarra"" .
    ?event <http://dbpedia.org/ontology/location> ?italianEntity .
    ?italianEntity <http://www.w3.org/2000/01/rdf-schema#label> ?italyLabel .
    FILTER(CONTAINS(?italyLabel, ""Italy"")).
    ?event <http://dbpedia.org/ontology/location> ?schioLocation .
    ?schioLocation <http://www.w3.org/2000/01/rdf-schema#label> ?schioLabel .
    FILTER(CONTAINS(?schioLabel, ""Schio"")).
    ?event <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://dbpedia.org/property/region> ?region .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
547,55,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Part 1: Resting place of awardees of Knight Grand Cross of the Order of St Michael and St George
SELECT ?person ?burialPlace WHERE {
    ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    OPTIONAL { ?person <http://dbpedia.org/ontology/burialPlace> ?burialPlace . }
}

UNION

# Part 2: Resting place of the child of James Burton (property developer)
SELECT ?child ?burialPlace WHERE {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    OPTIONAL { ?child <http://dbpedia.org/ontology/burialPlace> ?burialPlace . }
}

UNION

# Part 3: Resting place of the actor of ""Enemy at the Door""
SELECT ?actor ?burialPlace WHERE {
    ?actor <http://dbpedia.org/property/filmography> <http://dbpedia.org/resource/Enemy_at_the_Door> .
    OPTIONAL { ?actor <http://dbpedia.org/ontology/burialPlace> ?burialPlace . }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
232,48,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
# Step 1: Get Jon Pertwee's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Get Sylvie Bermann's native residence that is a settlement and British
SELECT ?settlement WHERE {
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> .
    ?person <http://dbpedia.org/ontology/placeOfBirth> ?settlement .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Sylvie Bermann""@en .
    ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}

# Step 3: Find the person born with Jon Pertwee's birth name and native of Sylvie Bermann's settlement
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/placeOfBirth> ?settlement .
    FILTER(?birthName = ""Jon Pertwee""^^xsd:string) # Replace with actual birth name from Step 1
    FILTER(?settlement = ?settlementFromStep2) # Use settlement from Step 2
}

# Step 4: Get the child of this person
SELECT ?child WHERE {
    ?person <http://dbpedia.org/ontology/child> ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
488,39,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?administration ?deathPlace WHERE {
    # Find Tokugawa Masako's royal spouse
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> .
    ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?labelSpouse .
    FILTER(CONTAINS(LCASE(?labelSpouse), ""royalty"")) .

    # Find the father of this spouse
    ?father <http://dbpedia.org/ontology/spouse> ?spouse .
    ?father <http://dbpedia.org/property/administration> ?administration .

    # Find the death place of Tokugawa Ieyasu
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
9,71,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v7 <http://dbpedia.org/property/nickname> ?v8 . ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v8 . }","```sparql
SELECT ?nickname WHERE {
    ?org <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast""@en .
    ?org <http://dbpedia.org/ontology/location> ?location .
    ?location <http://dbpedia.org/ontology/country> ?country .
    FILTER(?country = dbc:Northern_Ireland) .

    ?org <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .

    ?mayor <http://dbpedia.org/property/politicalParty> ?party .
    ?mayor <http://dbpedia.org/ontology/mayorFor> ?org .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .

    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medals> .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .

    ?almaMater <http://dbpedia.org/property/nicknames> ?nickname .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
427,49,test,"Give me the reference to the name of Italian People's Party (1994) and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Query to get the reference to the name of Italian People's Party (1994)
SELECT ?name WHERE {
    <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://dbpedia.org/ontology/name> ?name .
}

# Query to find the birth name and party of Romano Prodi
SELECT ?birthName ?party WHERE {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?birthName ;
        <http://dbpedia.org/ontology/party> ?party .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
747,63,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . }","```sparql
# Part 1: Band of Tracey Elizabeth McSween
SELECT ?band WHERE {
    ?person <http://dbpedia.org/ontology/band> ?band .
    ?person <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween"" .
}

UNION

# Part 2: Band of the writer of Apollo (Hardwell song)
SELECT ?band WHERE {
    ?song <http://dbpedia.org/ontology/writer> ?writer .
    ?writer <http://dbpedia.org/ontology/band> ?band .
    ?song <http://dbpedia.org/property/title> ""Apollo"" .
    ?song <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Hardwell> .
}

UNION

# Part 3: Person born on the birth date of an athlete and soccer player who died in Zolotonosha
SELECT ?person WHERE {
    ?athlete <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?athlete <http://dbpedia.org/property/deathPlace> ""Zolotonosha"" .
    ?athlete <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
    ?athlete <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .

    ?person <http://dbpedia.org/property/birthDate> ?birthDate .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
328,62,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Step 1: Identify the commander involved in both campaigns and leadership roles
SELECT ?commander WHERE {
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign>.
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Ryukyu_Islands_campaign>.
    ?commander <http://dbpedia.org/property/leaderOf> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union>.
}

# Step 2: Determine the awards received by this commander
SELECT ?award WHERE {
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign>.
    ?commander <http://dbpedia.org/property/leaderOf> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union>.
    ?commander <http://dbpedia.org/property/awards> ?award.
}

# Step 3: Find other awardees of these awards
SELECT DISTINCT ?otherAwardee WHERE {
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign>.
    ?commander <http://dbpedia.org/property/leaderOf> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union>.
    ?commander <http://dbpedia.org/property/awards> ?award.
    ?otherAwardee <http://dbpedia.org/property/awards> ?award.
    FILTER(?otherAwardee != ?commander)
}

# Step 4: Identify individuals who were decedents at Budapest
SELECT DISTINCT ?decedent WHERE {
    ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest>.
}

# Step 5: Determine the commander of the military force associated with one such individual
SELECT DISTINCT ?commanderOfForce WHERE {
    ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest>.
    ?force <http://dbpedia.org/property/militaryForce> ?decedent.
    ?force <http://dbpedia.org/ontology/commander> ?commanderOfForce.
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,37,test,Give me the war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
SELECT ?war WHERE {
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?force <http://dbpedia.org/ontology/country> ?country.
    ?commander <http://dbpedia.org/property/commandedBy> ?force.
    ?commander rdfs:label ""Narciso Campero""@en.
    ?force <http://dbpedia.org/ontology/battle> ?war.
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
378,71,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/commander> ?v8 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v7 . ?v8 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Step 1: Get Carl Pontus Gahn's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find wars involving Thomas Trigge
SELECT DISTINCT ?war WHERE {
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/property/wars> ?war .
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
         a <http://dbpedia.org/ontology/SocietalEvent> ;
         a <http://dbpedia.org/ontology/Event> .
}

# Step 3: Identify commanders in these wars
SELECT DISTINCT ?commander WHERE {
    ?war <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 4: Find claim to fame of these commanders
SELECT DISTINCT ?awards WHERE {
    ?commander <http://dbpedia.org/property/awards> ?awards .
}

# Step 5: Identify wars related to the Peninsular War
SELECT DISTINCT ?relatedWar WHERE {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/references> ?relatedWar .
    ?relatedWar a <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Combine results to find the war of interest
SELECT DISTINCT ?war WHERE {
    ?commander <http://dbpedia.org/property/wars> ?war .
    ?relatedWar <http://dbpedia.org/ontology/references> ?war .
}
```",9,13,10,3,3,3,3,71,0,0,2,0,0.0,0
528,38,test,Give me the war of the commander in Battle of La Rinconada de Ate and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
# Query for Battle of La Rinconada de Ate
SELECT ?commander ?war WHERE {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/property/war> ?war .
}

# Query for Narciso Campero Leyes
SELECT ?militaryForce WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Narciso Campero Leyes""@en .
    ?person <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
404,45,test,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
SELECT ?parent ?child WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Prince Ernest Augustus of Hanover""@en .
    ?person <http://dbpedia.org/ontology/birthYear> ""1914""^^xsd:gYear .

    # Find the parent
    ?person <http://dbpedia.org/ontology/parent> ?parent .

    # Identify spouse of Princess Victoria Louise of Prussia
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> .
    
    # Find the father of this spouse
    ?spouse <http://dbpedia.org/ontology/father> ?father .

    # Determine the child of this father who is also a spouse of Princess Victoria Louise of Prussia
    ?child <http://dbpedia.org/ontology/father> ?father .
    ?child <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> .

    FILTER(?parent = ?child)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
659,36,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in German campaign of 1813.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
SELECT ?militaryForce WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?event <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
    ?event <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/German_campaign_of_1813>.
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce.
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
488,22,test,Give me the administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  # Administration of the father of Emperor Go-Mizunoo
  {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/administration> ?result .
  }
  
  UNION
  
  # Birthplace of Enomoto Takeaki
  {
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result .
  }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
9,36,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?entity ?nickname WHERE {
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?entity .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
            <http://dbpedia.org/ontology/EducationalOrganization> ;
            <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Northern_Ireland> .
    OPTIONAL { ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?nickname . }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,61,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?person WHERE {
    # Step 1: Identify the capital of Khemis Miliana District
    <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/capital> ?capital .
    
    # Step 2: Find a person who died in that capital city
    ?person <http://dbpedia.org/ontology/deathPlace> ?capital .

    # Step 3: Identify the commander of the Battle of Verdun
    ?battle <http://dbpedia.org/resource/Battle_of_Verdun> .
    ?battle <http://dbpedia.org/ontology/commander> ?verdunCommander .

    # Step 4: Find wars or military conflicts where this commander was involved
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?conflict <http://dbpedia.org/ontology/commander> ?verdunCommander .

    # Step 5: Ensure the person is also a commander in one of these conflicts
    ?person <http://dbpedia.org/ontology/commander> ?conflict .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
54,26,test,Give me the parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?grandparent WHERE {
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
    ?grandparent <http://dbpedia.org/ontology/child> ?parent .
}
```",3,3,4,3,1,3,3,71,0,3,2,0.0,0.0,0
959,71,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/manager> ?v7 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?member WHERE {
    ?leader <http://dbpedia.org/ontology/election> ?election .
    ?election <http://dbpedia.org/ontology/year> ""2010""^^xsd:integer .
    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    
    ?leader <http://dbpedia.org/property/birthPlace> ?country .
    ?person <http://dbpedia.org/property/birthYear> ""1958""^^xsd:integer .
    ?person <http://dbpedia.org/property/nationality> ?country .

    ?almaMater <http://dbpedia.org/ontology/almaMater> ?person .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> .
    ?almaMater <http://dbpedia.org/property/countryName> ""Japan"" .

    ?sportsManager <http://dbpedia.org/ontology/teamManager> <http://dbpedia.org/resource/1998_Kashima_Antlers_season> .
    ?team <http://dbpedia.org/property/teamManaged> ?sportsManager .
    ?leader <http://dbpedia.org/property/teamManaged> ?team .

    ?almaMater <http://dbpedia.org/ontology/member> ?member .
}
```",9,16,10,3,3,3,3,71,0,0,3,0,0.0,0
959,68,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?manager WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?leader <http://dbpedia.org/property/election> <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 2: Determine the leader's birthplace and native residence
  ?leader <http://dbpedia.org/property/birthPlace> ?country .
  
  # Step 3: Find a person born in 1958 from that country
  ?person <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> ;
          <http://dbpedia.org/property/nationality> ?country .

  # Step 4: Identify their alma mater
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>, <http://dbpedia.org/ontology/University>, <http://dbpedia.org/ontology/EducationalOrganization> .
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""japanese""))

  # Step 5: Find Takashi Sekizuka's team manager
  <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team .
  ?team <http://dbpedia.org/property/manager> ?manager .

  # Step 6: Ensure the manager is also a member of the alma mater
  ?manager <http://dbpedia.org/ontology/memberOf> ?almaMater .
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
232,38,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
# Find Sean Pertwee's films and military conflicts
SELECT ?film ?conflict WHERE {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/film> ?film .
    FILTER(STRSTARTS(STR(?film), ""http://dbpedia.org/resource/"") && EXISTS { ?film a <http://dbpedia.org/ontology/Film> }).
    
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/property/battle> ?conflict .
    FILTER(STRSTARTS(STR(?conflict), ""http://dbpedia.org/resource/"") && EXISTS { ?conflict a <http://dbpedia.org/ontology/MilitaryConflict> }).
}

# Find Sylvie Bermann's native British settlement
SELECT ?settlement WHERE {
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?residence .
    FILTER(STRSTARTS(STR(?residence), ""http://dbpedia.org/resource/"") && EXISTS { 
        ?residence a <http://dbpedia.org/ontology/Settlement> ;
                   <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>
    }).
}

# Find actors of the films identified
SELECT DISTINCT ?actor WHERE {
    ?film <http://dbpedia.org/property/starring> ?actor .
    FILTER(STRSTARTS(STR(?film), ""http://dbpedia.org/resource/"") && EXISTS { ?film a <http://dbpedia.org/ontology/Film> }).
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
378,21,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
# Query for wars associated with Carl Pontus Gahn
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
}

# Query for claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?claimToFame WHERE {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/property/claimToFame> ?claimToFame .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
54,65,test,"Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Find Soe Min Wimala Dewi's father
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/ontology/father> ?father .
}

# Step 2: Find the child of this father
SELECT ?child1 WHERE {
    ?father <http://dbpedia.org/ontology/child> ?child1 .
}

# Step 3: Find Thado Minsaw's parent
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?parent .
   UNION
   <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/mother> ?parent .
}

# Step 4: Find the child of this parent
SELECT ?child2 WHERE {
    ?parent <http://dbpedia.org/ontology/child> ?child2 .
}

# Step 5: Find Thihapate's predecessor
SELECT ?predecessor WHERE {
    <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 6: Find the child of this predecessor who is an office holder and royalty
SELECT ?child3 WHERE {
    ?predecessor <http://dbpedia.org/ontology/child> ?child3 .
    ?child3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?child3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 7: Combine results to find the common entity
SELECT DISTINCT ?commonChild WHERE {
    VALUES (?child1) { (<result_of_step_2>) }
    VALUES (?child2) { (<result_of_step_4>) }
    VALUES (?child3) { (<result_of_step_6>) }
    FILTER(?child1 = ?child2 && ?child2 = ?child3)
}
```

Note: Replace `<result_of_step_X>` with the actual results obtained from each step when executing the query.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
645,18,test,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?entity WHERE {
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Diamond_Rock> .
    ?commander <http://dbpedia.org/property/country> ?country .
    
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Richard_Pankhurst> .
    ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .

    ?entity <http://www.w3.org/ns/prov#location> ?country .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
767,64,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Step 1: Find the writer of ""Where It's At"" (Dustin Lynch album)
SELECT ?writer WHERE {
    <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://purl.org/dc/terms/creator> ?writer .
}

# Step 2: Find the alma mater of Carl L. Nippert
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/C._L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Step 3: Identify the alter ego of the fictional character associated with Matthew Burland
SELECT ?alterEgo WHERE {
    ?fictionalCharacter <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
    ?fictionalCharacter <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?fictionalCharacter <http://dbpedia.org/property/persona> <http://dbpedia.org/resource/Matthew_Burland> .
}

# Step 4: Find an entity in the administration of both the writer and alma mater
SELECT DISTINCT ?entity WHERE {
    ?writer <http://dbpedia.org/ontology/administration> ?entity .
    ?almaMater <http://dbpedia.org/ontology/administration> ?entity .
    FILTER(?entity <http://dbpedia.org/ontology/Settlement>)
}

# Step 5: Ensure the entity is referenced by the alter ego
SELECT DISTINCT ?entity WHERE {
    ?writer <http://dbpedia.org/ontology/administration> ?entity .
    ?almaMater <http://dbpedia.org/ontology/administration> ?entity .
    ?alterEgo <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?entity .
    FILTER(?entity <http://dbpedia.org/ontology/Settlement>)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
528,55,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Part 1: Force of Narciso Campero Leyes
SELECT ?force WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Narciso Campero Leyes"" .
    ?person <http://dbpedia.org/property/militaryForce> ?force .
}

# Part 2: War of the Military Force in Battle of Pisagua
SELECT ?war WHERE {
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> .
    ?battle <http://dbpedia.org/property/militaryForce> ?force .
    ?force <http://dbpedia.org/property/war> ?war .
}

# Part 3: War of the Commander in Battle of La Rinconada de Ate
SELECT ?war WHERE {
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> .
    ?battle <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/property/war> ?war .
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
427,67,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?party WHERE {
  # Part 1: Political party of Romano Prodi
  {
    <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?party .
  }
  
  UNION
  
  # Part 2: Political party of the father of an MIT alumnus referencing Partito Popolare Italiano
  {
    ?alumnus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AlumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?alumnus <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .
    ?alumnus <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/politicalParty> ?party .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
177,8,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in South Korea.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/location> ?result . },"```sparql
SELECT ?organization ?headquarters WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joo Don-sik""@en .
    OPTIONAL { ?person <http://dbpedia.org/ontology/founder> ?organization . }
    OPTIONAL { ?person <http://dbpedia.org/ontology/member> ?organization . }
    ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
    ?organization <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> .
    OPTIONAL { ?organization <http://dbpedia.org/ontology/headquarters> ?headquarters . }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
328,54,test,"Give me the commander in the force of the person decedent at Budapest and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
SELECT ?person WHERE {
    # Find the commander in the force involved at Budapest
    ?force <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Budapest_offensive_(1945)> .
    ?force <http://dbpedia.org/ontology/commander> ?person .

    # Ensure this person was the leader of the People's Commissariat of Defense
    ?person <http://dbpedia.org/property/officeHolder> <http://dbpedia.org/resource/People%27s_Commissar_for_Defence_of_the_Soviet_Union> .

    # Find awards received by Bruce Fraser, 1st Baron Fraser of North Cape
    ?fraserAward <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
    
    # Ensure this person also received the same awards as Bruce Fraser
    ?person <http://dbpedia.org/property/awards> ?fraserAward .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,56,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Resting place of awardees of Gerald Graham's awards
SELECT ?awardee ?restingPlace WHERE {
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?award .
    ?awardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?awardee != <http://dbpedia.org/resource/Gerald_Graham>)
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}

# Resting place of Simon Cadell
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

# Resting place of the child of James Burton (property developer)
SELECT ?child ?restingPlace WHERE {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    OPTIONAL { ?child <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
783,16,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of Ofori Amponsah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?priscillaBandMember ?commonBandMember WHERE {
  # Step 1: Identify Priscilla Opoku-Kwarteng as an artist and musical artist
  ?priscilla a <http://dbpedia.org/ontology/Artist> ;
             <http://dbpedia.org/ontology/MusicalArtist> ;
             <http://www.w3.org/2000/01/rdf-schema#label> ""Priscilla Opoku-Kwarteng""@en ;
             <http://dbpedia.org/property/birthName> ?birthName .
  FILTER(?birthName = ""Priscilla Opoku-Kwarteng"")

  # Step 2: Find band members associated with Priscilla
  ?priscillaBandMember a <http://dbpedia.org/ontology/MusicalArtist> ;
                       <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://dbpedia.org/property/member> ?priscilla .

  # Step 3: Identify Ofori Amponsah and find his band members
  ?ofori a <http://dbpedia.org/ontology/MusicalArtist> ;
         <http://www.w3.org/2000/01/rdf-schema#label> ""Ofori Amponsah""@en .
  
  ?commonBandMember a <http://dbpedia.org/ontology/MusicalArtist> ;
                    <http://dbpedia.org/ontology/memberOf> ?oforiBand .
  ?oforiBand <http://dbpedia.org/property/member> ?ofori .

  # Step 4: Find common band members
  FILTER(?priscillaBandMember = ?commonBandMember)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
827,19,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchild ?father WHERE {
  # Step 1: Find the child of Grand Duchess Maria Pavlovna who is royalty
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Maria_Pavlovna_of_Russia_(1786–1859)> .
  ?child a <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the spouse of Princess Pauline and their child who is royalty
  ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> .
  ?child2 <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?child2 a <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the father of this child
  ?father <http://dbpedia.org/ontology/birthChild> ?child2 .

  # Ensure the grandchild is the same as the child from step 1
  FILTER(?child = ?grandchild)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
747,46,test,"Give me the band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
# Step 1: Find the writer of ""Apollo"" by Hardwell
SELECT ?writer WHERE {
    ?song <http://dbpedia.org/property/song> ?title .
    ?song <http://dbpedia.org/ontology/writer> ?writer .
    FILTER(CONTAINS(LCASE(?title), ""apollo""))
    FILTER(STRSTARTS(STR(?song), STR(<http://dbpedia.org/resource/Apollo_(Hardwell_song)>)))
}

# Step 2: Find the birth date of an athlete and soccer player decedent from Zolotonosha
SELECT ?birthDate WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .
    ?person <http://dbpedia.org/ontology/sport> ?sport .
    FILTER(CONTAINS(LCASE(STR(?sport)), ""soccer"") || CONTAINS(LCASE(STR(?sport)), ""athlete""))
    ?person <http://dbpedia.org/property/birthDate> ?birthDate .
}

# Step 3: Find a person born on the same birth date
SELECT DISTINCT ?otherPerson WHERE {
    ?otherPerson <http://dbpedia.org/property/birthDate> ?birthDate .
    FILTER(?otherPerson != ?person)
}

# Final step: Get the band of the writer from Step 1
SELECT ?band WHERE {
    ?writer <http://dbpedia.org/ontology/memberOf> ?band .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,61,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?spouse WHERE {
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Seti_I>.
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>;
              <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Battle_of_Perire>.
    ?father <http://dbpedia.org/ontology/father> ?commander.
    ?father <http://dbpedia.org/property/spouse> ?spouse.
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
44,9,test,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche and band member of the band of John Pettibone.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?bandMember WHERE {
    # Find band members of Queensrÿche
    ?queensryche <http://dbpedia.org/ontology/member> ?member1 .
    VALUES ?queensryche { <http://dbpedia.org/resource/Queensrÿche> } .

    # Find the band associated with John Pettibone
    ?pettiboneBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?pettiboneBand <http://dbpedia.org/ontology/member> ?member2 .
    ?pettiboneBand <http://dbpedia.org/property/bandMember> <http://dbpedia.org/resource/John_Pettibone> .

    # Find common band members
    FILTER(?member1 = ?member2)
    BIND(?member1 AS ?bandMember)
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
378,48,test,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
# Part 1: Find the commander's claim to fame in the Great Siege of Gibraltar
SELECT ?commander ?claimToFame WHERE {
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
    OPTIONAL { ?commander <http://dbpedia.org/property/notableworks> ?claimToFame . }
}

# Part 2: Find the wars of Carl Pontus Gahn
SELECT ?person ?war WHERE {
    <http://dbpedia.org/resource/C._P._Gahn> <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn"" .
    OPTIONAL { ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" . }
    OPTIONAL { ?person <http://dbpedia.org/ontology/war> ?war . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
996,17,test,Give me the force of Dagobert Sigmund von Wurmser and entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
SELECT ?force ?awardEntity WHERE {
    # Part 1: Find the military force associated with Dagobert Sigmund von Wurmser
    <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> <http://dbpedia.org/ontology/militaryForce> ?force .

    # Part 2: Find entities related to awards given to natives of Palestine
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Palestine_(region)> .
    ?person <http://dbpedia.org/ontology/award> ?award .
    ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?awardType .
    ?award <http://dbpedia.org/property/recipient> ?awardEntity .
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
9,67,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . }","```sparql
# Step 1: Find John Alderdice's Alma Mater
SELECT ?almaMaterJohn WHERE {
    <http://dbpedia.org/resource/John_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMaterJohn .
}

# Step 2: Find Organisations in Northern Ireland that are Educational Institutions with a Nickname
SELECT DISTINCT ?organisation ?nickname WHERE {
    ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
    ?organisation <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Northern_Ireland> .
    ?organisation <http://dbpedia.org/property/nickname> ?nickname .
}

# Step 3: Find Awardees of Royal Medals
SELECT DISTINCT ?awardee WHERE {
    ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Medal> .
}

# Step 4: Find Alma Mater of the Awardees
SELECT DISTINCT ?almaMaterAwardee WHERE {
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMaterAwardee .
}

# Step 5: Check for Common Alma Mater
SELECT DISTINCT ?commonAlmaMater WHERE {
    VALUES ?johnAlmaMater { ?almaMaterJohn }
    VALUES ?awardeeAlmaMater { ?almaMaterAwardee }
    FILTER(?johnAlmaMater = ?awardeeAlmaMater)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
838,18,test,"Give me the band member of the band, that is a group, of YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
# Step 1: Find members of YU Grupa
SELECT ?member WHERE {
    <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/member> ?member .
}

# Step 2: For each member found in step 1, find other bands they are a part of
SELECT DISTINCT ?otherBand WHERE {
    ?member <http://dbpedia.org/ontology/member> ?otherBand .
    FILTER(?otherBand != <http://dbpedia.org/resource/YU_Grupa>)
}

# Step 3: Identify Žika Jelić and find bands he is a member of
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Žika_Jelić> <http://dbpedia.org/ontology/member> ?band .
}

# Step 4: For each band found in step 3, find its members
SELECT DISTINCT ?member WHERE {
    ?band <http://dbpedia.org/ontology/member> ?member .
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
427,18,test,Give me the party of Giulio Andreotti and party of Romano Prodi and reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?person ?party WHERE {
  VALUES ?person { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/resource/Romano_Prodi> }
  ?person <http://dbpedia.org/ontology/politicalParty> ?party .
  
  OPTIONAL {
    ?person <http://www.w3.org/2004/02/skos/core#related> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,49,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
SELECT ?alterEgoReference ?administrationEntityReference WHERE {
  # Find alter ego of Matthew Burland's fictional character
  ?character <http://dbpedia.org/ontology/persona> <http://dbpedia.org/resource/Matthew_Burland> .
  ?character <http://dbpedia.org/property/alterEgo> ?alterEgo .
  ?alterEgo <http://www.w3.org/2002/07/owl#sameAs> ?alterEgoReference .

  # Find administration entity of a settlement named Green
  ?settlement <http://www.w3.org/2000/01/rdf-schema#label> ""Green""@en .
  ?settlement <http://dbpedia.org/ontology/administration> ?administrationEntity .
  ?administrationEntity <http://www.w3.org/2002/07/owl#sameAs> ?administrationEntityReference
}
```",5,7,6,3,2,3,3,71,0,0,7,0,0.0,0
488,47,test,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Part 1: Birth place of the commander in Boshin War
SELECT ?birthPlace WHERE {
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Part 2: Death place of the father (politician) of Matsudaira Tadamasa's father
SELECT ?deathPlace WHERE {
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?father1 .
    ?father1 <http://dbpedia.org/property/father> ?father2 .
    ?father2 <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    FILTER EXISTS { ?father2 <http://dbpedia.org/ontology/politician> [] }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
492,71,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v4 . ?v7 <http://dbpedia.org/ontology/capital> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v7 . },"```sparql
# Step 1: Find the capital of Khemis Miliana District
SELECT ?capital WHERE {
    ?district <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Khemis_Miliana_District> .
    ?district <http://dbpedia.org/ontology/administrativeCapital> ?capital .
}

# Step 2: Find the person decedent at this capital
SELECT ?personDecedentAtCapital WHERE {
    ?deathEvent <http://dbpedia.org/ontology/deathPlace> ?capital .
    ?deathEvent <http://dbpedia.org/ontology/person> ?personDecedentAtCapital .
}

# Step 3: Find the author of ""French Algeria""
SELECT ?author WHERE {
    ?work <http://purl.org/dc/terms/title> ""French Algeria""@en .
    ?work <http://dbpedia.org/property/author> ?author .
}

# Step 4: Find the person decedent at this work
SELECT ?personDecedentAtWork WHERE {
    ?deathEvent <http://dbpedia.org/ontology/deathPlace> ?work .
    ?deathEvent <http://dbpedia.org/ontology/person> ?personDecedentAtWork .
}

# Step 5: Find the commander in the Battle of Verdun
SELECT ?commanderVerdun WHERE {
    ?battle <http://dbpedia.org/property/commander> ?commanderVerdun .
    ?battle <http://dbpedia.org/resource/Battle_of_Verdun> .
}

# Step 6: Identify the war involving this commander
SELECT ?war WHERE {
    ?conflict <http://dbpedia.org/ontology/participant> ?commanderVerdun .
    ?conflict <http://www.w3.org/2002/07/owl#sameAs> ?war .
}

# Step 7: Find the person decedent associated with this war
SELECT ?personDecedentAtWar WHERE {
    ?deathEvent <http://dbpedia.org/ontology/deathPlace> ?war .
    ?deathEvent <http://dbpedia.org/ontology/person> ?personDecedentAtWar .
}

# Combine results to get the final answer
SELECT DISTINCT ?personDecedentAtCapital ?personDecedentAtWork ?personDecedentAtWar WHERE {
    # Subqueries from above steps
    { SELECT ?capital WHERE {
        ?district <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Khemis_Miliana_District> .
        ?district <http://dbpedia.org/ontology/administrativeCapital> ?capital .
    }}
    
    { SELECT ?personDecedentAtCapital WHERE {
        ?deathEvent <http://dbpedia.org/ontology/deathPlace> ?capital .
        ?deathEvent <http://dbpedia.org/ontology/person> ?personDecedentAtCapital .
    }}

    { SELECT ?author WHERE {
        ?work <http://purl.org/dc/terms/title> ""French Algeria""@en .
        ?work <http://dbpedia.org/property/author> ?author .
    }}
    
    { SELECT ?personDecedentAtWork WHERE {
        ?deathEvent <http://dbpedia.org/ontology/deathPlace> ?work .
        ?deathEvent <http://dbpedia.org/ontology/person> ?personDecedentAtWork .
    }}

    { SELECT ?commanderVerdun WHERE {
        ?battle <http://dbpedia.org/property/commander> ?commanderVerdun .
        ?battle <http://dbpedia.org/resource/B",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
328,43,test,Give me the commander in the force of the person decedent at Budapest and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?commander WHERE {
    ?person <http://dbpedia.org/property/decedentPlace> ""Budapest"" .
    ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> .
    ?person <http://dbpedia.org/ontology/leader> ?force .
    ?force <http://dbpedia.org/ontology/commander> ?commander .
    FILTER EXISTS { 
        ?person <http://dbpedia.org/property/office> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union>
    }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
378,43,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
# Step 1: Find Louis des Balbes de Berton de Crillon's claim to fame
SELECT ?notableWork WHERE {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon> <http://dbpedia.org/ontology/notableworks> ?notableWork .
}

# Step 2: Find military conflicts where he was a commander, related to the Peninsular War
SELECT DISTINCT ?conflict WHERE {
    ?conflict <http://dbpedia.org/property/battleCommander> <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon> .
    ?conflict <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Peninsular_War> .
}

# Step 3: Find connections to Carl Pontus Gahn
SELECT DISTINCT ?conflict WHERE {
    ?conflict <http://dbpedia.org/property/battleCommander> <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon> .
    ?conflict <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Carl_Pontus_Gahn> .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
365,9,test,"Give me the reference to the real name of The Blasters and band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Part 1: Real Name of The Blasters
SELECT ?realName WHERE {
    <http://dbpedia.org/resource/The_Blasters> <http://dbpedia.org/ontology/alias> ?realName .
}

# Part 2: Band of the Professional in Vocalist, Musician, Songwriter
SELECT ?band WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> ;
            <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://dbpedia.org/ontology/Vocalist> ;
            <http://dbpedia.org/ontology/Musician> ;
            <http://dbpedia.org/ontology/Songwriter> .
    ?person <http://dbpedia.org/ontology/band> ?band .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
617,20,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v4 <http://dbpedia.org/property/father> ?v5 . }","```sparql
SELECT ?parentOfRichezasFather WHERE {
    # Step 1: Find Mlada's parent
    <http://dbpedia.org/resource/Mlada_(abbess)> <http://dbpedia.org/ontology/parent> ?mladasParent .
    
    # Step 2: Find the child of Mlada's parent
    ?mladasParent <http://dbpedia.org/ontology/child> ?childOfMladasParent .
    
    # Step 3: Identify Richeza of Poland and find her child
    ?richezaChild <http://dbpedia.org/property/familyName> ""Richeza"" ;
                  <http://dbpedia.org/ontology/parent> ?richezasParent .
    
    # Ensure Richeza is royalty
    ?richezaChild <http://www.w3.org/2000/01/rdf-schema#label> ?richezaLabel .
    FILTER(CONTAINS(LCASE(?richezaLabel), ""royalty""))
    
    # Step 4: Find the father of Richeza, ensuring he is royalty
    ?richezasParent <http://dbpedia.org/property/gender> ""male"" ;
                    <http://www.w3.org/2000/01/rdf-schema#label> ?fatherLabel .
    FILTER(CONTAINS(LCASE(?fatherLabel), ""royalty""))
    
    # Step 5: Find the parent of Richeza's father
    ?richezasParent <http://dbpedia.org/ontology/parent> ?parentOfRichezasFather .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
392,23,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
SELECT ?province ?entity WHERE {
    # Step 1: Find Sebastiano Bianchetti's residence
    ?residence <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Sebastiano_Bianchetti> .
    
    # Step 2: Ensure the residence is a settlement and Italian
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .

    # Step 3: Get the province of the residence
    ?residence <http://dbpedia.org/ontology/province> ?province .

    # Step 4: Identify the region associated with Central European Time
    ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
    
    # Step 5: Determine the country of that region
    ?region <http://dbpedia.org/ontology/country> ?country .

    # Step 6: Find an entity in that region
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    ?entity <http://dbpedia.org/ontology/region> ?region .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,33,test,Give me the entity in Baden-Württemberg and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?entityInBadenWurttemberg ?almaMater WHERE {
    OPTIONAL {
        <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/location> ?location .
        ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Baden-Württemberg""@en .
        ?entityInBadenWurttemberg <http://dbpedia.org/ontology/location> ?location .
    }
    OPTIONAL {
        <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
838,19,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . }","```sparql
SELECT DISTINCT ?bandMember ?otherBand WHERE {
    <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/member> ?bandMember .
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?bandMember <http://dbpedia.org/ontology/member> ?otherBand .
    FILTER(?otherBand != <http://dbpedia.org/resource/YU_Grupa>)
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
492,27,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
SELECT ?person WHERE {
    <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?country .
    ?country <http://dbpedia.org/ontology/capital> ?capital .
    ?person <http://dbpedia.org/ontology/deathPlace> ?capital .
}
```",3,4,4,3,1,3,3,71,122,0,0,1.0,1.0,1.0
328,34,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Step 1: Find the leader of People's Commissariat of Defense of the Soviet Union
SELECT ?leader WHERE {
    <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?leader .
}

# Step 2: Find commanders in Volcano and Ryukyu Islands campaigns
SELECT DISTINCT ?commander WHERE {
    ?battle <http://dbpedia.org/property/battle> ?campaign .
    FILTER(?campaign IN (<http://dbpedia.org/resource/Volcano_Islands_campaign>, <http://dbpedia.org/resource/Ryukyu_Islands_campaign>)).
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 3: Find awards for these commanders
SELECT DISTINCT ?commander ?award WHERE {
    ?commander <http://dbpedia.org/property/battle> ?campaign .
    FILTER(?campaign IN (<http://dbpedia.org/resource/Volcano_Islands_campaign>, <http://dbpedia.org/resource/Ryukyu_Islands_campaign>)).
    ?commander <http://dbpedia.org/property/awards> ?award .
}

# Step 4: Find overlap between leader and awardee
SELECT DISTINCT ?result WHERE {
    { 
        SELECT ?leader WHERE {
            <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?leader .
        }
    } UNION {
        SELECT ?commander WHERE {
            ?commander <http://dbpedia.org/property/battle> ?campaign .
            FILTER(?campaign IN (<http://dbpedia.org/resource/Volcano_Islands_campaign>, <http://dbpedia.org/resource/Ryukyu_Islands_campaign>)).
            ?commander <http://dbpedia.org/property/awards> ?award .
        }
    } 
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
391,58,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
SELECT DISTINCT ?actor WHERE {
  # Step 1: Get works associated with Michael Ballhaus
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/filmography> ?work .
  
  # Step 2: Find actors in those works
  ?work <http://dbpedia.org/ontology/starring> ?actor .

  # Step 3: Check if these actors are natives of Compton, California
  OPTIONAL { ?actor <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Compton,_California> . }

  # Step 4: Identify movies that are a movie, work, and television show
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie110769069> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/CreativeWork4760> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow6964> .

  # Step 5: Find actors who have acted in these movies
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  
  FILTER(?actor != <http://dbpedia.org/resource/Michael_Ballhaus>)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
617,22,test,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?commonChild ?parent WHERE {
    # Find children of Antiochus (son of Antiochus III the Great)
    <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?commonChild .
    
    # Find children of Antiochus III the Great
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?commonChild .

    # Find parents of the common child
    ?commonChild <http://dbpedia.org/ontology/parent> ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
142,9,test,Give me the birthplace of the actor of Papa wa Newscaster and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?actor ?birthPlace WHERE {
    ?movie <http://dbpedia.org/property/starring> ?actor .
    ?movie <http://dbpedia.org/ontology/title> ""Papa wa Newscaster"" .
    
    ?actor <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?regionEntity .
    ?regionEntity <http://dbpedia.org/ontology/timeZone> ?timeZone .
    FILTER(CONTAINS(LCASE(STR(?timeZone)), ""japan standard time""))

    ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
915,20,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
SELECT ?resident WHERE {
    ?parent <http://dbpedia.org/ontology/fictionalCharacter> _:b0 .
    ?parent <http://dbpedia.org/ontology/soapCharacter> _:b1 .
    ?parent <http://dbpedia.org/ontology/child> ?lizzieSpaulding .
    
    ?lizzieSpaulding <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Lizzie_Spaulding> .

    ?parentChild <http://dbpedia.org/ontology/fictionalCharacter> _:b2 .
    ?parentChild <http://dbpedia.org/ontology/soapCharacter> _:b3 .
    ?parentChild <http://dbpedia.org/ontology/child> ?lizzieSpaulding .

    <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/property/director> ?director .

    ?director <http://dbpedia.org/ontology/birthPlace> ?birthplace .
    
    ?birthplace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
    ?settlement a <http://dbpedia.org/class/yago/Settlement108069068> .

    ?resident <http://dbpedia.org/property/resident> ?settlement .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
328,67,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of the person decedent at Budapest.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v3 . },"```sparql
# Step 1: Find awardees of Order of Suvorov
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> .
}

# Step 2: Identify Gustav Jonson's leadership role and associated government agency
SELECT ?leader WHERE {
    ?gustavJonson <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
    ?gustavJonson <http://dbpedia.org/property/politicalParty> ?party.
    ?agency <http://dbpedia.org/ontology/leader> ?leader.
    ?gustavJonson <http://dbpedia.org/ontology/office> ?agency.
}

# Step 3: Find commander in force at Budapest
SELECT ?commander WHERE {
    ?decedent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>.
    ?force <http://dbpedia.org/property/commandedBy> ?commander.
    ?decedent <http://dbpedia.org/property/diedInBattle> <http://dbpedia.org/resource/Budapest>.
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
30,8,test,Give me the native of Paris and professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
SELECT ?birthPlace ?profession WHERE {
    <http://dbpedia.org/resource/%C3%89douard_Alphonse_James_de_Rothschild> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER(?birthPlace = <http://dbpedia.org/resource/Paris>)
    <http://dbpedia.org/resource/%C3%89douard_Alphonse_James_de_Rothschild> <http://dbpedia.org/ontology/profession> ?profession .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
547,57,test,Give me the resting place of James Burton (Egyptologist) and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?entity ?restingPlace WHERE {
  # Resting place of James Burton (Egyptologist)
  { 
    <http://dbpedia.org/resource/James_Burton_(egyptologist)> <http://dbpedia.org/ontology/burial> ?restingPlace .
    BIND(<http://dbpedia.org/resource/James_Burton_(egyptologist)> AS ?entity)
  }
  
  UNION
  
  # Resting place of the actor from a show with Emily Richard
  {
    ?show <http://dbpedia.org/ontology/starring> ?actor .
    ?show <http://dbpedia.org/property/starredBy> <http://dbpedia.org/resource/E._Richard> .
    ?actor <http://dbpedia.org/ontology/burial> ?restingPlace .
    BIND(?actor AS ?entity)
  }
  
  UNION
  
  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    ?person <http://dbpedia.org/ontology/burial> ?restingPlace .
    BIND(?person AS ?entity)
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,71,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v8 . },"```sparql
SELECT ?spouse WHERE {
    # Step 1: Find Antiochus (son of Antiochus III) and his successor who is royalty
    ?antiochus dbpedia-owl:succesor ?successor .
    FILTER(?antiochus = <http://dbpedia.org/resource/Antiochus_I_Soter> && 
           ?successor dbpedia-owl:royalty true)

    # Step 2: Find the child of this successor
    ?successor dbpedia-owl:child ?child .

    # Step 3: Identify the commander in Battle of Panium and their child
    ?battle dbpedia-owl:commander ?commander .
    FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Panium>)
    ?commander dbpedia-owl:child ?commanderChild .

    # Step 4: Find the child of the successor's child who is royalty
    ?child dbpedia-owl:child ?royalGrandchild .
    FILTER(?royalGrandchild dbpedia-owl:royalty true)

    # Step 5: Determine the spouse of the child from step 2
    ?child dbpedia-owl:spouse ?spouse .
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
747,49,test,Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
SELECT ?band WHERE {
  # Find person whose persona is Shèna
  ?person1 <http://dbpedia.org/property/allegedAlterEgo> ""Shèna"" .
  
  # Find Pavlo Khudzik's birth date
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/property/birthDate> ?birthDate .

  # Find person born on the same date as Pavlo Khudzik
  ?person2 <http://dbpedia.org/property/birthDate> ?birthDate .
  
  FILTER(?person1 != ?person2)

  # Get band for the first person
  OPTIONAL { ?person1 <http://dbpedia.org/ontology/memberOf> ?band . }

  # Get band for the second person
  OPTIONAL { ?person2 <http://dbpedia.org/ontology/memberOf> ?band . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
115,9,test,Give me the alma mater of the awardee of National Order of Scientific Merit and alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
SELECT DISTINCT ?almaMater WHERE {
  # Find alma maters for awardees of the National Order of Scientific Merit
  ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> .
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .

  UNION

  # Find alma maters for alumni of the National University of San Marcos
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/National_University_of_San_Marcos> .
  ?alumnus <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
996,20,test,Give me the entity in the award of the native of Palestine (region) and force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
SELECT ?entity WHERE {
    # Step 1: Find the awardee of the elevation of Lac d'Avoriaz
    ?awardee <http://dbpedia.org/property/awards> ?award .
    ?award <http://dbpedia.org/ontology/reason> ""Elevation of Lac d'Avoriaz"" .

    # Step 2: Determine the force associated with that awardee
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/memberOf> ?force . }

    # Step 3: Find an entity in the award received by someone native to Palestine (region)
    ?palestinian <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Palestine_(region)> .
    ?palestinian <http://dbpedia.org/property/awards> ?award2 .
    
    # Find the entity in the award
    ?award2 <http://www.w3.org/2000/01/rdf-schema#label> ?entity .
}
```",6,6,7,3,2,3,2,20,0,0,4,0,0.0,0
820,16,test,Give me the professional in the award of Scott McCloud and child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
# Step 1: Find awards received by Scott McCloud
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?award .
}

# Step 2: Find professionals associated with these awards
SELECT DISTINCT ?professional WHERE {
    ?award <http://dbpedia.org/property/awards> ?professional .
    FILTER(?award IN (SELECT ?award WHERE {
        <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?award .
    }))
}

# Step 3: Find the parent of Jason Schwartzman
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Jason_Schwartzman> <http://dbpedia.org/ontology/child> ?parent .
}

# Step 4: Identify the child of Jason Schwartzman's parent (should be Jason himself)
SELECT DISTINCT ?result WHERE {
    ?parent <http://dbpedia.org/ontology/child> ?result .
    FILTER(?parent IN (SELECT ?parent WHERE {
        <http://dbpedia.org/resource/Jason_Schwartzman> <http://dbpedia.org/ontology/child> ?parent .
    }))
}

# Final Query: Combine results from steps 2 and 4
SELECT DISTINCT ?professional WHERE {
    ?award <http://dbpedia.org/property/awards> ?professional .
    FILTER(?award IN (SELECT ?award WHERE {
        <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?award .
    }))
    ?parent <http://dbpedia.org/ontology/child> ?result .
    FILTER(?parent IN (SELECT ?parent WHERE {
        <http://dbpedia.org/resource/Jason_Schwartzman> <http://dbpedia.org/ontology/child> ?parent .
    }))
    FILTER(?professional = ?result)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
701,35,test,Give me the parent of the child of Nefertari and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?parent WHERE {
    ?nefertariChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?nefertariChild .
    
    ?merneptahFather <http://dbpedia.org/property/spouse> ?spouseOfMerneptahsFather .
    <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?merneptahFather .

    ?parent <http://dbpedia.org/ontology/child> ?nefertariChild .
}
```",4,4,5,2,2,3,3,71,1,0,0,1.0,1.0,1.0
767,46,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of George K. Nash.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
SELECT DISTINCT ?settlement WHERE {
    # Step 1: Get the writer of ""Where It's At"" (Dustin Lynch album)
    <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://purl.org/dc/terms/creator> ?writer .

    # Step 2: Find George K. Nash's alma mater
    <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .

    # Step 3: Get the administration of the alma mater
    ?almaMatterAdmin <http://dbpedia.org/ontology/administration> ?administration .
    FILTER(?almaMatterAdmin = ?almaMater)

    # Step 4: Find settlements in this administration
    ?administration <http://dbpedia.org/ontology/settlement> ?settlement .

    # Step 5: Get the administration of the writer and find common settlements
    ?writerAdministration <http://dbpedia.org/ontology/administration> ?commonAdmin .
    FILTER(?commonAdmin = ?administration)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,61,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
# Part 1: Resting place of actors from a show with Emily Richard
SELECT ?actor ?restingPlace WHERE {
    ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/E._Richard>.
    ?show <http://dbpedia.org/ontology/starring> ?actor.
    OPTIONAL { ?actor <http://dbpedia.org/property/burialPlace> ?restingPlace. }
}

UNION

# Part 2: Resting place of awardees of awards received by Gerald Graham
SELECT ?awardee ?restingPlace WHERE {
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?award.
    ?awardee <http://dbpedia.org/property/awards> ?award.
    OPTIONAL { ?awardee <http://dbpedia.org/property/burialPlace> ?restingPlace. }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
54,67,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?predecessor WHERE {
    # Step 1: Find Thado Minsaw's parent
    ?thadoMinsawParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
    
    # Step 2: Find the child of this parent
    ?child1 <http://dbpedia.org/ontology/parent> ?thadoMinsawParent .
    
    # Step 3: Find Thinkhaya's child
    ?thinkhayaChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
    
    # Step 4: Match the children from steps 2 and 3
    FILTER(?child1 = ?thinkhayaChild)
    
    # Step 5: Find Thihapate's reference
    ?thihapateReference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
    
    # Step 6: Identify Thihapate's child who is an office holder and royalty
    ?child2 <http://dbpedia.org/ontology/parent> ?thihapateReference .
    ?child2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?child2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    
    # Step 7: Find the predecessor of this child
    ?predecessor <http://dbpedia.org/ontology/predecessor> ?child2 .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,24,test,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?bandMember ?associatedArtist WHERE {
    ?bandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Don_Dokken> .
    OPTIONAL { 
        ?bandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Meshuggah> .
    }
    OPTIONAL {
        ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> ;
                          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> ;
                          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
        ?bandMember <http://dbpedia.org/ontology/member> ?associatedArtist .
    }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,56,test,"Give me the actor of Dog Soldiers (film) and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find actors of Dog Soldiers (film)
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/Dog_Soldiers> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 2: Find children of John Devon Roland Pertwee
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Jonathan_Pertwee> <http://dbpedia.org/ontology/child> ?child .
}

# Step 3: Identify the native's residence
SELECT ?settlement WHERE {
    ?politician <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/France> ;
                <http://dbpedia.org/ontology/politicalPartyMember> ?party ;
                <http://dbpedia.org/ontology/nativePlace> ?native .
    ?native <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
    FILTER(CONTAINS(LCASE(?settlementLabel), ""british""))
}

# Step 4: Combine the results
SELECT DISTINCT ?actor WHERE {
    # Actor of Dog Soldiers
    <http://dbpedia.org/resource/Dog_Soldiers> <http://dbpedia.org/ontology/starring> ?actor .
    
    # Child of John Devon Roland Pertwee
    <http://dbpedia.org/resource/Jonathan_Pertwee> <http://dbpedia.org/ontology/child> ?actor .
    
    # Native's residence criteria
    ?politician <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/France> ;
                <http://dbpedia.org/ontology/politicalPartyMember> ?party ;
                <http://dbpedia.org/ontology/nativePlace> ?native .
    ?native <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
    FILTER(CONTAINS(LCASE(?settlementLabel), ""british""))
    
    # Ensure the actor's native place matches
    ?actor <http://dbpedia.org/ontology/nativePlace> ?native .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
547,47,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
# Part 1: Resting place of the actor from a show with Emily Richard
SELECT ?actor ?restingPlace WHERE {
    ?show <http://dbpedia.org/ontology/starring> ?emily .
    ?emily foaf:name ""Emily Richard"" .
    ?show <http://dbpedia.org/ontology/starring> ?actor .
    OPTIONAL { ?actor <http://dbpedia.org/property/burialPlace> ?restingPlace . }
}
UNION
# Part 2: Resting place of the child of James Burton (property developer)
SELECT ?child ?restingPlace WHERE {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    OPTIONAL { ?child <http://dbpedia.org/property/burialPlace> ?restingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,66,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query for Italian People's Party (1994) reference name
SELECT ?partyLabel WHERE {
    <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://www.w3.org/2000/01/rdf-schema#label> ?partyLabel .
}

UNION

# Query for the party of Lamberto Andreotti's father
SELECT ?fatherParty WHERE {
    OPTIONAL { 
        <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
        ?father <http://dbpedia.org/property/party> ?fatherParty .
    }
}

UNION

# Query for the party of Romano Prodi at birth
SELECT ?birthParty WHERE {
    <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    OPTIONAL { 
        ?prodiBirth <http://dbpedia.org/ontology/birthName> ?birthName .
        ?prodiBirth <http://dbpedia.org/property/party> ?birthParty .
        FILTER EXISTS {
            ?prodiBirth <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/OfficeHolder> | <http://dbpedia.org/ontology/Politician>)
        }
    }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
184,51,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?finalParent WHERE {
    # Step 1: Find Archduchess Margaret's parent
    ?margaret <http://dbpedia.org/ontology/birthDate> ""1925-01-01""^^xsd:date .
    ?parentMargaret <http://dbpedia.org/ontology/child> ?margaret .

    # Step 2: Find the child of Archduchess Margaret's parent
    ?grandChildMargaret <http://dbpedia.org/ontology/child> ?parentMargaret .

    # Step 3: Find Archduke Joseph Karl's child
    ?josephKarl <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
    ?childJosephKarl <http://dbpedia.org/ontology/child> ?josephKarl .

    # Step 4: Find the child of Archduke Joseph Karl's child
    ?grandChildJosephKarl <http://dbpedia.org/ontology/child> ?childJosephKarl .

    # Step 5: Find the parent of this last found grandchild
    ?finalParent <http://dbpedia.org/ontology/child> ?grandChildJosephKarl .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
547,50,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
SELECT DISTINCT ?restingPlace WHERE {
  # Part 1: Resting place of awardee of Knight Grand Cross of the Order of St Michael and St George
  { 
    ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    ?person <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
  }
  
  UNION
  
  # Part 2: Resting place of actor in a show with Emily Richard
  {
    ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/E._Richard> .
    ?actor <http://dbpedia.org/ontology/starring> ?show .
    ?actor <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
528,71,test,"Give me the war of the commander in the work of --01-09 and war of the military force of the entity, that is a societal event, in Chile and force of the person born as the birth name of Narciso Campero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v8 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Part 1: War of the Commander in the Work of --01-09
SELECT ?war WHERE {
    ?work <http://dbpedia.org/property/date> ""--01-09"" .
    ?work <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/warCommanded> ?war .
}

# Part 2: War of the Military Force of an Entity in Chile
SELECT ?war WHERE {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""chile"")).
    ?entity a <http://dbpedia.org/ontology/SocietalEvent> .
    ?militaryForce <http://dbpedia.org/ontology/entity> ?entity .
    ?militaryForce <http://dbpedia.org/ontology/war> ?war .
}

# Part 3: Force of the Person Born as Narciso Campero
SELECT ?force WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Narciso Campero"" .
    ?person <http://dbpedia.org/ontology/force> ?force .
}
```",9,10,10,3,3,3,3,71,0,0,2,0,0.0,0
528,67,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09 and war of Irene Morales.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?force ?war1 ?war2 WHERE {
    # Part 1: Find Narciso Campero's birth name and his military force
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName ;
            <http://dbpedia.org/ontology/militaryForce> ?force .

    # Part 2: Find the war of the commander in the work of --01-09
    ?work <http://purl.org/dc/terms/date> ""--01-09""^^xsd:gYearMonth ;
          <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?war1 .

    # Part 3: Find the war of Irene Morales
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war2 .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
994,20,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Part 1: Associated musical artist of S.A. Slayer
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

UNION

# Part 2: Associated musical artist of a band member of Meshuggah who is also a band, group, and organization
SELECT ?member ?associatedArtist WHERE {
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Meshuggah> .
    ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",3,6,4,2,2,3,3,71,0,0,2,0,0.0,0
626,19,test,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
SELECT ?conflict ?commander ?awardee WHERE {
    <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/commandedMilitaryConflict> ?conflict .
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?commander <http://dbpedia.org/ontology/commandedMilitaryConflict> ?conflict .
    
    ?battle <http://dbpedia.org/resource/Battle_of_Borodino> .
    ?force <http://dbpedia.org/ontology/battle> ?battle .
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    
    ?awardee <http://dbpedia.org/property/awards> ?award .
    ?force <http://dbpedia.org/property/awards> ?award .
    
    FILTER(?commander = <http://dbpedia.org/resource/Alexander_I_of_Russia>)
}
```",5,6,6,3,2,3,2,20,0,0,44,0,0.0,0
485,28,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT DISTINCT ?commonEntity WHERE {
  # Joseph Whitaker's birthplace region
  <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?whitakerBirthPlace .
  ?whitakerBirthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?commonEntity .

  # Awardee of Eric Gregory Award who is a writer and poet
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet> .

  # Awardee's birthplace region
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthPlace .
  ?awardeeBirthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?commonEntity .

  # Country associated with Western European Time
  <http://dbpedia.org/resource/Western_European_Time> <http://dbpedia.org/ontology/country> ?wetCountry .
  ?wetCountry <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?commonEntity .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
92,53,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
# Step 1: Find the reference artist of Nevermore (2006 film)
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://dbpedia.org/ontology/reference> ?artist .
}

# Step 2: Find associated musical artists of Jim Sheppard
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}

# Step 3: Find the band of Joseph Michael Furney (born)
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Joe_Lynch_(singer)> <http://dbpedia.org/ontology/band> ?band .
}

# Step 4: Find common band members
SELECT DISTINCT ?commonMember WHERE {
    # Assuming we have identified the artists and bands from above steps as ?artist1, ?associatedArtist, and ?band
    OPTIONAL { ?artist1 <http://dbpedia.org/property/memberOf> ?commonMember . }
    OPTIONAL { ?associatedArtist <http://dbpedia.org/property/memberOf> ?commonMember . }
    OPTIONAL { ?band <http://dbpedia.org/property/memberOf> ?commonMember . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
626,20,test,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814) and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Get commander of Battle of Paris (1814)
SELECT ?commanderParis WHERE {
    <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/battleCommander> ?commanderParis .
}

# Step 2: Get military force and awardee from Battle of Borodino
SELECT ?militaryForceBorodino ?awardee WHERE {
    ?battleBorodino <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> .
    ?battleBorodino <http://dbpedia.org/ontology/militaryUnit> ?militaryForceBorodino .
    ?militaryForceBorodino <http://dbpedia.org/property/awards> ?award .
    ?awardee <http://dbpedia.org/property/awards> ?award .
}

# Step 3: Find a conflict where both commanders served
SELECT DISTINCT ?conflict WHERE {
    ?commanderParis <http://dbpedia.org/ontology/battleCommander> ?conflict .
    ?awardee <http://dbpedia.org/ontology/battleCommander> ?conflict .
}
```",6,7,7,3,2,3,2,20,0,0,62,0,0.0,0
767,48,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
# Step 1: Identify the writer of ""Where It's At"" (Dustin Lynch album)
SELECT ?writer WHERE {
    <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://purl.org/dc/terms/creator> ?writer .
}

# Step 2: Find the settlement in the administration of the writer
SELECT ?settlement WHERE {
    ?writer <http://dbpedia.org/ontology/administrativeUnit> ?settlement .
    FILTER(?writer = ?writerFromStep1)
}

# Step 3: Identify the alter ego of Black Hood
SELECT ?alterEgo WHERE {
    <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?alterEgo .
}

# Step 4: Find the reference to the entity in the administration that matches the alter ego
SELECT ?settlement WHERE {
    ?writer <http://dbpedia.org/ontology/administrativeUnit> ?settlement .
    FILTER(?writer = ?writerFromStep1)
    ?settlement rdfs:label ?alterEgoLabel .
    FILTER(?alterEgoLabel = ?alterEgoFromStep3)
}
```",5,6,6,3,2,3,3,71,0,0,8,0,0.0,0
54,56,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?child ?predecessor WHERE {
    ?thihapate <http://dbpedia.org/ontology/child> ?child .
    FILTER(?thihapate = <http://dbpedia.org/resource/Thihapate_of_Mohnyin>)
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    OPTIONAL {
        ?office <http://dbpedia.org/property/holder> ?child .
        ?office <http://dbpedia.org/property/predecessor> ?predecessor .
    }
}
```",6,8,7,3,3,3,3,71,0,1,1,0.0,0.0,0
747,70,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . },"```sparql
SELECT DISTINCT ?band1 ?band2 WHERE {
  # Part 1: Find the person born as the persona of Shèna and their band
  ?person <http://dbpedia.org/ontology/personalName> ""Shèna"" .
  ?person <http://dbpedia.org/property/band> ?band1 .

  # Part 2: Find the person born on the same date as Pavlo Khudzik and their band
  ?pavloBirthDate <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Pavlo_Khudzik> .
  ?person2 <http://dbpedia.org/property/birthDate> ?pavloBirthDate .
  ?person2 <http://dbpedia.org/property/band> ?band2 .

  # Part 3: Find the writer of the song ""Amba Shepherd"" and their band
  ?song <http://dbpedia.org/ontology/writtenBy> ?writer .
  ?song <http://www.w3.org/2000/01/rdf-schema#label> ""Amba Shepherd""@en .
  ?writer <http://dbpedia.org/property/band> ?band3 .

  # Ensure the bands are distinct
  FILTER(?band1 != ?band2)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,57,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
SELECT ?producer WHERE {
    ?writer <http://dbpedia.org/ontology/writtenWork> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/MusicalArtist> <http://dbpedia.org/ontology/Artist>) .

    ?rapper <http://dbpedia.org/ontology/associatedMusicalArtist> ?writer .
    ?rapper <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    
    ?work <http://dbpedia.org/ontology/creator> ?rapper ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/MusicalWork> <http://dbpedia.org/ontology/Song> <http://dbpedia.org/ontology/Work>) .

    ?work <http://dbpedia.org/property/producer> ?producer .
}
```",6,12,7,3,3,3,3,71,0,0,8,0,0.0,0
528,47,test,Give me the war of the commander in the work of --01-09 and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Part 1: Find the war of the commander in the work related to January 9th
SELECT ?war WHERE {
    ?work <http://dbpedia.org/ontology/date> ""2009-01-09""^^xsd:date .
    ?work <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?war .
}

UNION

# Part 2: Find the war of the military force in the Battle of Pisagua
SELECT ?war WHERE {
    ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> .
    ?militaryForce <http://dbpedia.org/ontology/war> ?war .
}
```",5,5,6,3,2,3,3,71,0,0,8,0,0.0,0
617,59,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
    # Step 1: Find successor of Antiochus II Theos
    <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?successorAntiochusIITheos.
    
    # Step 2: Find child of that successor
    ?successorAntiochusIITheos <http://dbpedia.org/ontology/child> ?childOfSuccessorAntiochusIITheos.
    
    # Step 3: Find successor of Antiochus (son of Antiochus III the Great)
    <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?successorAntiochusSon.
    
    # Step 4: Find child of that successor
    ?successorAntiochusSon <http://dbpedia.org/ontology/child> ?childOfSuccessorAntiochusSon.
    
    # Ensure the children are royalty
    ?childOfSuccessorAntiochusIITheos a <http://dbpedia.org/ontology/Royalty>.
    ?childOfSuccessorAntiochusSon a <http://dbpedia.org/ontology/Royalty>.

    # Step 5: Find spouse of the child from step 2
    ?childOfSuccessorAntiochusIITheos <http://dbpedia.org/property/spouse> ?spouse.
}
```",6,9,7,3,2,3,3,71,0,2,4,0.0,0.0,0
659,54,test,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . }","```sparql
SELECT ?militaryForce ?commanderInForce ?event WHERE {
    # Find Arthur Wellesley's military force during the Napoleonic Wars
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/militaryUnit> ?militaryForce .
    
    # Ensure this military force is involved in the Napoleonic Wars
    ?militaryForce <http://dbpedia.org/property/battle> ?napoleonicWar .
    ?napoleonicWar <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Napoleonic_Wars> .

    # Find the commander in this military force who also commanded in the Napoleonic Wars
    ?militaryForce <http://dbpedia.org/ontology/commander> ?commanderInForce .
    ?commanderInForce <http://dbpedia.org/property/battle> ?napoleonicWarCommand .

    # Find 'Polish Horse' as a military unit and organization, and its associated event
    ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?polishHorse <http://dbpedia.org/property/battle> ?event .

    # Ensure the event is a military conflict
    ?event <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .
    FILTER(STRSTARTS(STR(?militaryConflict), ""http://dbpedia.org/resource/"") && 
           (CONTAINS(LCASE(STR(?militaryConflict)), ""war"") || CONTAINS(LCASE(STR(?militaryConflict)), ""conflict"")))
}
```",6,10,7,3,3,3,3,71,0,0,13,0,0.0,0
767,53,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . },"```sparql
SELECT ?settlement WHERE {
    # Find the writer of ""Where It's At"" (Dustin Lynch album)
    ?album <http://dbpedia.org/property/writer> ?writer .
    FILTER(STR(?album) = ""Where_It's_At_(Dustin_Lynch_album)"")

    # Find Carl L. Nippert's alma mater
    ?nippert <http://dbpedia.org/ontology/almaMater> ?almaMater .

    # Find the alter ego of Black Hood
    ?blackHood <http://dbpedia.org/property/alterEgo> ?alterEgo .

    # Ensure all entities are part of an administration involving a settlement
    ?administration <http://dbpedia.org/ontology/administration> ?settlement .
    FILTER(?writer = ?administration || ?almaMater = ?administration || ?alterEgo = ?administration)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
435,24,test,Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> ?v2 . },"```sparql
# Query to find the work of the author of ""Iceland""
SELECT ?work WHERE {
    ?resource <http://dbpedia.org/ontology/title> ""Iceland""@en .
    ?resource <http://purl.org/dc/terms/creator> ?author .
    ?author <http://www.w3.org/2000/01/rdf-schema#label> ?authorLabel .
    FILTER(LANG(?authorLabel) = 'en')
    OPTIONAL { ?author <http://dbpedia.org/ontology/publication> ?work . }
}

# Query to find the region of the time zone in Bombali Shebora Chiefdom
SELECT ?region WHERE {
    ?chiefdom <http://www.w3.org/2000/01/rdf-schema#label> ""Bombali Shebora Chiefdom""@en .
    ?chiefdom <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://dbpedia.org/property/region> ?region .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,64,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?commander WHERE {
    ?officeHolder <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
    ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?militaryForce <http://dbpedia.org/property/force> ?officeHolder .
    
    ?event <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/MilitaryConflict> .
    ?event <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Battle_of_Leipzig> .

    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPersonnel> .
    ?commander <http://dbpedia.org/property/commanderInBattle> ?militaryForce ;
               <http://dbpedia.org/property/involvement> ?event .
}
```",7,11,8,3,3,3,3,71,0,0,6,0,0.0,0
959,64,test,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?nativePerson WHERE {
    # Step 1: Find the manager of the 1998 Kashima Antlers season
    ?manager <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kashima_Antlers> .
    ?season <http://dbpedia.org/property/season> ""1998"" ;
            <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kashima_Antlers> ;
            <http://dbpedia.org/ontology/manager> ?manager .

    # Step 2: Find the person born in 1958 who is a sports manager and managed the team of the manager from step 1
    ?person <http://dbpedia.org/property/birthYear> ""1958"" ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> ;
            <http://dbpedia.org/ontology/team> ?team .
    ?team <http://dbpedia.org/ontology/manager> ?manager .

    # Step 3: Determine the alma mater of this person
    ?person <http://dbpedia.org/property/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>, <http://dbpedia.org/ontology/University>, <http://dbpedia.org/ontology/EducationalOrganization> ;
               <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .

    # Step 4: Identify someone who is native to Japan and a member of this alma mater
    ?nativePerson <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
                  <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Japan> ;
                  <http://dbpedia.org/ontology/alumniOf> ?almaMater .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
184,66,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
# Step 1: Identify Archduchess Margaret of Austria (born 1925)
SELECT ?margaret WHERE {
    ?margaret <http://dbpedia.org/ontology/birthDate> ""1925-01-01""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?margaret <http://dbpedia.org/ontology/name> ""Margaret of Austria""@en .
}

# Step 2: Find her parent
SELECT ?parent WHERE {
    ?margaret <http://dbpedia.org/ontology/child> ?parent .
}

# Step 3: From that parent, find their child
SELECT ?grandchild WHERE {
    ?parent <http://dbpedia.org/ontology/child> ?grandchild .
}

# Step 4: Identify the native of Budapest who is a child of Archduke Joseph Karl of Austria
SELECT ?budaChild WHERE {
    ?josephKarl <http://dbpedia.org/ontology/child> ?budaChild .
    ?budaChild <http://dbpedia.org/property/nationality> ""Hungarian""^^<http://www.w3.org/2001/XMLSchema#string> .
    ?budaChild <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
}

# Step 5: Find the parent of this individual
SELECT ?parentBuda WHERE {
    ?budaChild <http://dbpedia.org/ontology/child> ?parentBuda .
}

# Step 6: Identify the common parent between the entities found in steps 3 and 5
SELECT DISTINCT ?commonParent WHERE {
    { ?grandchild <http://dbpedia.org/ontology/child> ?commonParent . }
    UNION
    { ?parentBuda <http://dbpedia.org/ontology/child> ?commonParent . }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
92,40,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of Joseph Michael.",SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?bandMember WHERE {
  # Find the musical artist associated with Nevermore (2006 film)
  ?film <http://dbpedia.org/property/reference> ?artist .
  FILTER(STR(?film) = ""Nevermore_(2006_film)"")

  # Find Jim Sheppard's band membership
  OPTIONAL { 
    ?sheppard <http://dbpedia.org/ontology/band> ?bandMember .
    FILTER(STR(?sheppard) = ""Jim_Sheppard_(musician)"")
  }

  # Find Joseph Michael's band membership
  OPTIONAL {
    ?joseph <http://dbpedia.org/ontology/band> ?bandMember .
    FILTER(STR(?joseph) = ""Joseph_Michael"")
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,66,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
# Step 1: Find the manager of the 1998 Kashima Antlers season
SELECT ?manager WHERE {
    ?season <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Kashima_Antlers>;
            <http://dbpedia.org/property/year> ""1998"" .
    ?season <http://dbpedia.org/ontology/coach> ?manager .
}

# Step 2: Find the team managed by this manager
SELECT ?team WHERE {
    ?manager <http://dbpedia.org/ontology/team> ?team .
}

# Step 3: Find the manager of that team
SELECT ?finalManager WHERE {
    ?team <http://dbpedia.org/property/coach> ?finalManager .
}

# Step 4: Identify the alma mater of Eiji Ōtsuka
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater ;
            <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""japanese""))
    FILTER(STRSTARTS(STR(?almaMater), ""http://dbpedia.org/resource/"") &&
           (CONTAINS(STR(?almaMater), ""/university"") ||
            CONTAINS(STR(?almaMater), ""/organization"")))
}

# Step 5: Confirm Yōichi Masuzoe's residence is Japan
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/nationality> ?country .
    FILTER(STRSTARTS(STR(?country), ""http://dbpedia.org/resource/Japan""))
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
427,27,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?party WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?person <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" .
    ?person <http://dbpedia.org/ontology/politicalParty> ?party.
}
```",3,5,4,3,1,3,3,71,0,0,7,0,0.0,0
492,57,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT DISTINCT ?personDecedentCapital ?personDecedentFrenchAlgeria ?warCommander WHERE {
  # Capital of Algeria
  <http://dbpedia.org/resource/Algiers> a dbo:PopulatedPlace ;
    rdfs:label ""capital""@en .

  # Person decedent at capital of Algeria
  ?deathEvent dbo:place <http://dbpedia.org/resource/Algiers> ;
              dbo:deceased ?personDecedentCapital .
  
  # French Algeria period
  ?period dbo:name ""French Algeria"" ;
          dbo:endTime ?endTime .

  # Person decedent at French Algeria
  ?deathEvent2 dbo:place ?location ;
               dbo:deceased ?personDecedentFrenchAlgeria ;
               dbo:time ?deathTime .
  FILTER(?deathTime <= ?endTime) .

  # Commander in Battle of Verdun
  <http://dbpedia.org/resource/Battle_of_Verdun> dbo:commander ?verdunCommander .

  # War involving commander of Battle of Verdun
  ?war dbo:commander ?verdunCommander ;
       a dbo:MilitaryConflict .
  
  BIND(?verdunCommander AS ?warCommander)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,17,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
    # Step 1: Identify Richeza of Poland's father
    <http://dbpedia.org/resource/Richeza_of_Poland> <http://dbpedia.org/ontology/father> ?father .
    
    # Step 2: Find a royalty who is both a child of Doubravka of Bohemia and related to Richeza's father
    ?reference <http://dbpedia.org/ontology/father> ?father .
    ?reference <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Doubravka_of_Bohemia> .

    # Step 3: Find the parent of this referenced royalty
    ?reference <http://dbpedia.org/ontology/parent> ?parent .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
54,63,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find Thinkhaya of Pagan's child
  ?thinkhayasChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .

  # Step 2: Find the predecessor of that child
  ?predecessor <http://dbpedia.org/ontology/successor> ?thinkhayasChild .

  # Step 3: Find Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapatesChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?thihapatesChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                   <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  FILTER(?thihapatesChild = ?predecessor)

  # Step 4: Find Narapati I of Ava's child
  ?narapatisChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> .

  # Step 5: Find the parent of that child
  ?parent <http://dbpedia.org/ontology/child> ?narapatisChild .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,53,test,"Give me the band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Find the band of Amba Shepherd
SELECT ?band1 WHERE {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/memberOf> ?band1 .
}

# Find the person born as Tracey Elizabeth McSween and their band
SELECT ?person2 ?band2 WHERE {
    ?person2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween"" .
    ?person2 <http://dbpedia.org/ontology/memberOf> ?band2 .
}

# Find the athlete and soccer player who died in Zolotonosha, get their birth date
SELECT ?deathDate WHERE {
    ?athlete <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Zolotonosha> ;
             <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
    ?athlete <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Find a person born on that date and their band
SELECT ?person3 ?band3 WHERE {
    ?person3 <http://dbpedia.org/ontology/birthDate> ?deathDate .
    ?person3 <http://dbpedia.org/ontology/memberOf> ?band3 .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
16,41,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
SELECT ?professional WHERE {
    # Step 1: Find Satomi Ishihara's profession
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .
    
    # Step 2: Find Ted Martin McGinley's spouse
    OPTIONAL { 
        ?person1 <http://www.w3.org/2000/01/rdf-schema#label> ""Ted Martin McGinley""@en .
        ?person1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley"" .
        ?person1 <http://dbpedia.org/property/spouse> ?spouse1 .
    }
    
    # Step 3: Find Georgeanne Marie Rice's spouse
    OPTIONAL {
        ?person2 <http://www.w3.org/2000/01/rdf-schema#label> ""Georgeanne Marie Rice""@en .
        ?person2 <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice"" .
        ?person2 <http://dbpedia.org/property/spouse> ?spouse2 .
    }
    
    # Ensure the spouse is common and matches Satomi Ishihara's profession
    FILTER(?spouse1 = ?spouse2)
    FILTER(?profession = ?spouse1)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
404,40,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914) and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Princess Victoria Louise of Prussia""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""Victoria Louise of Prussia""@en .
    ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
    ?person <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914–1987)> .
    ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
92,55,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . }","```sparql
SELECT ?associatedArtist WHERE {
    ?jimSheppard <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
    ?jimSheppard <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

    ?joeDuplantier <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
    ?joeDuplantier <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Nevermore_(band)> .
    ?joeDuplantier <http://dbpedia.org/ontology/memberOf> ?mainBand .

    ?associatedArtist <http://dbpedia.org/ontology/memberOf> ?mainBand .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
488,52,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?birthPlace ?deathPlace ?administration WHERE {
  # Part 1: Birth place of the commander in the war involving Saitō Hajime
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?war <http://dbpedia.org/property/personInvolved> <http://dbpedia.org/resource/Saitō_Hajime> .
  ?war <http://dbpedia.org/property/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Part 2: Death place of the father of Yūki Hideyasu
  <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?father <http://dbpedia.org/property/deathPlace> ?deathPlace .

  # Part 3: Administration of Emperor Go-Yōzei
  <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/administration> ?administration .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
404,63,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
SELECT ?spouse WHERE {
    ?princess <http://www.w3.org/2000/01/rdf-schema#label> ""Princess Victoria Louise of Prussia""@en .
    ?princess <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
    ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
404,34,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Princess Victoria Louise of Prussia""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""Victoria Louise of Prussia""@en .
    ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,51,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
SELECT ?nativeCountry WHERE {
    # Step 1: Find Yōichi Masuzoe's residence country
    <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
    
    # Ensure the residence is a country
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
    FILTER(CONTAINS(LCASE(?countryLabel), ""country""))

    # Step 2: Find the native name of the country
    ?residence <http://dbpedia.org/ontology/nativeNameOfCountry> ?nativeCountry .

    # Step 3: Identify the manager of the 1998 Kashima Antlers season
    OPTIONAL {
        ?kashimaAntlersSeason <http://dbpedia.org/property/teamManager> ?teamManager .
        FILTER(STRSTARTS(STR(?kashimaAntlersSeason), ""http://dbpedia.org/resource/1998_Kashima_Antlers_season""))
    }

    # Step 4: Find the manager of that sports manager
    OPTIONAL {
        ?teamManager <http://dbpedia.org/ontology/manager> ?sportsManager .
        FILTER(STRSTARTS(STR(?teamManager), ""http://dbpedia.org/resource/"") && STRSTARTS(STR(?sportsManager), ""http://dbpedia.org/resource/""))
    }
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
617,65,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?parent WHERE {
    # Step 1: Identify Antiochus (son of Antiochus III the Great)
    <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?child .
    
    # Step 2: Ensure the child is royalty
    ?child <http://www.w3.org/2000/01/rdf-schema#label> ?labelChild .
    FILTER(CONTAINS(LCASE(?labelChild), ""royalty"")) .

    # Step 3: Find the successor of this child and ensure they are royalty
    ?child <http://dbpedia.org/ontology/successor> ?successor .
    ?successor <http://www.w3.org/2000/01/rdf-schema#label> ?labelSuccessor .
    FILTER(CONTAINS(LCASE(?labelSuccessor), ""royalty"")) .

    # Step 4: Find the spouse of the successor
    ?successor <http://dbpedia.org/property/spouse> ?spouse .
    
    # Step 5: Ensure the spouse is royalty
    ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?labelSpouse .
    FILTER(CONTAINS(LCASE(?labelSpouse), ""royalty"")) .

    # Step 6: Identify the child of this spouse
    ?spouse <http://dbpedia.org/ontology/child> ?grandChild .

    # Step 7: Find the parent of this grandChild
    ?grandChild <http://dbpedia.org/ontology/parent> ?parent .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
767,51,test,"Give me the alma mater of the administration of George K. Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?administrationAlmaMater ?fictionalAlterEgo WHERE {
  # Part 1: Alma Mater of George K. Nash's Administration
  ?nash <http://dbpedia.org/ontology/administration> ?administration .
  ?administration <http://dbpedia.org/property/almaMater> ?administrationAlmaMater .

  # Part 2: Alter Ego of Matthew Burland's Fictional Character
  ?burland <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?burland <http://dbpedia.org/property/alterEgo> ?fictionalAlterEgo .

  # Bind George K. Nash and Matthew Burland to their respective resources
  FILTER(?nash = <http://dbpedia.org/resource/George_K._Nash>)
  FILTER(?burland = <http://dbpedia.org/resource/Matthew_Burland>)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
617,16,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
# Step 1: Identify Boleslaus I's royal children
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 2: Identify Richeza of Poland's royal father
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 3: Find the child of the royal child from Step 1
SELECT ?grandchild WHERE {
    ?royalChild <http://dbpedia.org/ontology/child> ?grandchild .
}
```

Note: The above SPARQL queries are structured to be executed sequentially, as each step depends on the results of the previous one. You may need to manually combine these steps or use a tool that supports chaining queries for full automation.",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
16,35,test,Give me the spouse of the person born as Ted Martin McGinley and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
    { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse . }
    UNION
    { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/spouse> ?spouse . }
}
```",4,4,5,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
959,65,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
SELECT ?manager WHERE {
    # Step 1: Identify Takashi Sekizuka's team
    ?team <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Takashi_Sekizuka> .
    
    # Step 2: Find the manager of that team
    ?team <http://dbpedia.org/ontology/teamManager> ?manager .

    # Step 3: Identify Eiji Ōtsuka's alma mater
    ?university <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Eiji_Ōtsuka> .
    
    # Ensure the university is Japanese and an educational institution
    ?university <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
                <http://dbpedia.org/ontology/university> ?true ;
                <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .

    # Step 4: Find a member of that alma mater
    ?member <http://dbpedia.org/property/almaMater> ?university .
    
    # Ensure the manager is also a member of this university
    FILTER(?manager = ?member)

    # Step 5: Identify the leader of the 2010 Japanese House of Councillors election
    ?election <http://dbpedia.org/ontology/electionWinner> ?leader .
    FILTER(STRSTARTS(STR(?election), ""http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election""))

    # Step 6: Determine the native country of that leader's residence
    ?country <http://dbpedia.org/ontology/nationality> ?leader .
    
    # Ensure the manager is from this country
    FILTER(?manager <http://dbpedia.org/property/country> ?country)
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
378,50,test,"Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
# Step 1: Identify the commander in the Great Siege of Gibraltar
SELECT ?commander WHERE {
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> .
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 2: Determine the claim to fame of that commander
SELECT DISTINCT ?claimToFame WHERE {
    ?commander <http://dbpedia.org/property/awards> ?award .
    ?commander <http://dbpedia.org/ontology/notableFor> ?claimToFame .
}

# Step 3 and 4: Find the war related to the Peninsular War
SELECT DISTINCT ?war WHERE {
    ?conflict <http://dbpedia.org/ontology/conflicts> ?peninsularWar .
    ?commander <http://dbpedia.org/ontology/battleCommanded> ?conflict .
    ?peninsularWar <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Peninsular_War> .
    ?conflict <http://dbpedia.org/ontology/conflicts> ?war .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,57,test,"Give me the commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?commander WHERE {
    # Step 1: Identify 'Polish Horse'
    ?polishHorse <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse""@en .
    ?polishHorse <http://dbpedia.org/ontology/militaryUnit> [] .
    ?polishHorse <http://dbpedia.org/ontology/organisation> [] .

    # Step 2: Find the war associated with 'Polish Horse'
    ?war <http://dbpedia.org/property/battle> ?polishHorse .
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
         a <http://dbpedia.org/ontology/Event> .

    # Step 3: Find the commander of the German campaign of 1813
    <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/property/commander> ?commander .

    # Step 4: Identify the force associated with Rutger Jan Schimmelpenninck
    ?force <http://www.w3.org/2000/01/rdf-schema#label> ""Rutger Jan Schimmelpenninck""@en .
    ?force a <http://dbpedia.org/ontology/SocietalEvent> ;
          a <http://dbpedia.org/ontology/Event> ;
          a <http://dbpedia.org/ontology/MilitaryConflict> .

    # Step 5: Ensure the commander is also associated with the war
    ?war <http://dbpedia.org/property/commander> ?commander .
}
```",6,13,7,3,3,3,3,71,0,0,7,0,0.0,0
767,23,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?settlement WHERE {
    <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://dbpedia.org/ontology/writer> ?writer .
    ?administration <http://dbpedia.org/property/administration> ?writer .
    ?administration <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    BIND(?administration AS ?settlement)
}
```",3,4,4,3,1,3,3,71,0,0,66,0,0.0,0
492,25,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?person WHERE {
    # Capital of Algeria (Algiers) is a settlement
    <http://dbpedia.org/resource/Algiers> <http://www.w3.org/2002/07/owl#sameAs> ?capital .
    ?capital <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Algeria> ;
             <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/Settlements100000001> .

    # Person died in Algiers
    ?person <http://dbpedia.org/property/deathPlace> ?capital .
    
    # Person was a commander in the Franco-Hova Wars
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> ;
            <http://dbpedia.org/property/commanded> <http://dbpedia.org/resource/Franco-Hova_Wars> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
294,23,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT DISTINCT ?restingPlace WHERE {
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?politician <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> .
  ?politician <http://dbpedia.org/ontology/burialPlace> ?restingPlace .

  OPTIONAL {
    <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/property/placeOfBirth> ?birthPlace .
    ?entity <http://dbpedia.org/ontology/location> ?birthPlace .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
77,19,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of the awardee of Golden Weapon for Bravery.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
# Step 1: Find the mayor of Warsaw
SELECT ?mayor WHERE {
    ?mayor <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Warsaw> .
    ?mayor <http://dbpedia.org/ontology/jobTitle> <http://dbpedia.org/resource/Mayor> .
}

# Step 2: Find the organisation administered by the mayor
SELECT ?organisation WHERE {
    ?mayor <http://dbpedia.org/ontology/administers> ?organisation .
}

# Step 3: Determine the force associated with this organisation
SELECT ?force WHERE {
    ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?organisation <http://dbpedia.org/ontology/name> ?force .
}

# Step 4: Identify the awardee of the Golden Weapon for Bravery
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> .
}

# Step 5: Find wars involving the awardee
SELECT ?war WHERE {
    ?awardee <http://dbpedia.org/ontology/battle> ?war .
}

# Combine results to get the force and war
SELECT ?force ?war WHERE {
    ?mayor <http://dbpedia.org/ontology/administers> ?organisation .
    ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?organisation <http://dbpedia.org/ontology/name> ?force .
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> .
    ?awardee <http://dbpedia.org/ontology/battle> ?war .
}
```",5,6,6,3,2,3,2,20,0,0,14,0,0.0,0
184,22,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?commonChild ?parent WHERE {
    # Step 1: Identify children of Archduke Joseph Francis of Austria
    <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?childA .
    
    # Step 2: Identify children of Géza von Habsburg
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/child> ?childB .

    # Step 3: Find a common child
    FILTER(?childA = ?childB)
    BIND(?childA AS ?commonChild)

    # Step 4: Determine the parent(s) of this common child
    ?commonChild <http://dbpedia.org/ontology/parent> ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
303,23,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?commanderParty ?arnulfoParty WHERE {
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?commander <http://dbpedia.org/property/politicalParty> ?commanderParty .
  ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .
  ?battle <http://dbpedia.org/ontology/commander> ?commander .

  <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/property/politicalParty> ?arnulfoParty .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,58,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Step 1: Identify educational institutions in Northern Ireland that are also organizations
SELECT ?institution WHERE {
    ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>.
    ?institution <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Northern_Ireland>.
}

# Step 2: Find John Alderdice's alma mater
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/property/almaMater> ?almaMater.
}

# Step 3: Identify awardees of the Royal Medal
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal>.
}

# Step 4: Find overlap between awardees and alumni of the institution from step 1
SELECT DISTINCT ?institution ?almaMater ?awardee WHERE {
    ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>.
    ?institution <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Northern_Ireland>.

    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>.
    ?awardee <http://dbpedia.org/property/almaMater> ?almaMater.
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal>.

    # Ensure the institution is the same as John Alderdice's alma mater
    OPTIONAL { 
        <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/property/almaMater> ?institution.
    }
}

# Step 5: Retrieve the nickname of the institution
SELECT DISTINCT ?nickname WHERE {
    ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>.
    ?institution <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Northern_Ireland>.

    OPTIONAL { 
        <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/property/almaMater> ?institution.
    }

    ?institution <http://dbpedia.org/ontology/nickname> ?nickname.
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,48,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Query for Heather Roy's military unit war
SELECT ?war1 WHERE {
    <http://dbpedia.org/resource/Heather_Roy> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Heather_Roy>.
    ?unit <http://dbpedia.org/property/battle> ?war1.
}

UNION

# Query for Jonathon Band's awarded war
SELECT ?war2 WHERE {
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?award.
    ?otherAwardee <http://dbpedia.org/property/awards> ?award.
    ?otherAwardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?unit2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?otherAwardee.
    ?unit2 <http://dbpedia.org/property/battle> ?war2.
}
```",5,6,6,3,2,3,3,71,0,0,9,0,0.0,0
54,71,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v8 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
# Step 1: Find Thado Minsaw's parent
SELECT ?thadoParent WHERE {
    <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?thadoParent .
}

# Step 2: Find the child of Thado Minsaw's parent
SELECT ?childOfThadoParent WHERE {
    ?thadoParent <http://dbpedia.org/ontology/child> ?childOfThadoParent .
}

# Step 3: Find Thinkhaya of Pagan's father
SELECT ?thinkhayaFather WHERE {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/father> ?thinkhayaFather .
}

# Step 4: Find the child of Thinkhaya's father
SELECT ?childOfThinkhayaFather WHERE {
    ?thinkhayaFather <http://dbpedia.org/ontology/child> ?childOfThinkhayaFather .
}

# Step 5: Find the parent of the child from step 4
SELECT ?parentOfChildOfThinkhayaFather WHERE {
    ?childOfThinkhayaFather <http://dbpedia.org/ontology/father> ?parentOfChildOfThinkhayaFather .
}

# Step 6: Identify Thihapate of Mohnyin's reference
SELECT ?thihapateReference WHERE {
    <http://dbpedia.org/resource/Thihapate_of_Mohnyin> ?property ?thihapateReference .
}

# Step 7: Find the child of Thihapate's reference, ensuring it is an office holder and royalty
SELECT ?childOfThihapate WHERE {
    ?thihapateReference <http://dbpedia.org/ontology/child> ?childOfThihapate .
    ?childOfThihapate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?childOfThihapate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 8: Determine the predecessor of the child identified in step 7
SELECT ?predecessor WHERE {
    ?childOfThihapate <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
959,53,test,"Give me the manager of the team of Takashi Sekizuka and native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?manager WHERE {
    ?person <http://dbpedia.org/property/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear>.
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater.
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>;
               <http://dbpedia.org/ontology/EducationalOrganization>;
               <http://dbpedia.org/ontology/University>.
    ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan>.

    ?team <http://dbpedia.org/ontology/teamMember> <http://dbpedia.org/resource/Takashi_Sekizuka>.
    ?team <http://dbpedia.org/ontology/coach> ?manager.
    ?manager <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Japan>.

}
```",6,10,7,3,3,3,3,71,0,0,3,0,0.0,0
778,18,test,"Give me the author of the work, that is a software, of Bill Joy and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . },"```sparql
SELECT DISTINCT ?author WHERE {
    # Step 1: Find software authored by Bill Joy
    ?software <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Bill_Joy> .
    
    # Step 2: Identify American awardees of the Wolf Prize in Medicine
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AwardRecipient> ;
             <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> ;
             <http://dbpedia.org/ontology/award> ?wolfPrize .
    
    # Step 3: Find entities associated with the award
    ?entity <http://dbpedia.org/ontology/entity> ?wolfPrize .
    
    # Step 4: Match software to entity and find author
    ?software <http://dbpedia.org/ontology/entity> ?entity .
    ?software <http://dbpedia.org/ontology/author> ?author .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
161,51,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
# Step 1: Find Francisco Largo Caballero's military force in relevant events
SELECT ?event ?militaryForce WHERE {
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?commander <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}

UNION

# Step 2: Find the event associated with ""El Director"" and its commander
SELECT ?event ?militaryForce WHERE {
    ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""El Director""@en .
    ?figure <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> ;
               <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}

# Step 3: Find common military forces
SELECT DISTINCT ?commonMilitaryForce WHERE {
    { SELECT ?militaryForce WHERE {
        # Reuse the queries from steps 1 and 2 to get military forces
        # (These would be combined in a real SPARQL query environment)
    } }
    ?militaryForce1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryForce> .
    ?militaryForce2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryForce> .
    FILTER(?militaryForce1 = ?militaryForce2)
    BIND(?militaryForce1 AS ?commonMilitaryForce)
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
92,65,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
# Step 1: Find Joseph Michael Furney and his band association
SELECT ?furney WHERE {
    ?furney <http://dbpedia.org/property/birthName> ""Joseph Michael Furney"" .
    ?furney <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Nevermore_(band)> .
}

# Step 2: Find the reference or artist related to Nevermore
SELECT ?reference WHERE {
    <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/property/reference> ?reference .
}

# Step 3: Identify the actor of ""Return to Nuke 'Em High Volume 1""
SELECT ?actor WHERE {
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    ?movie <http://dbpedia.org/ontology/title> ""Return to Nuke 'Em High Volume 1"" .
}

# Step 4: Find the musical artist associated with this actor
SELECT ?musicalArtist WHERE {
    ?actor <http://dbpedia.org/property/musicalArtist> ?musicalArtist .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,59,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . },"```sparql
SELECT ?person ?band WHERE {
    # Step 1 & 2: Find athlete and soccer player from Zolotonosha and their birth date
    ?athlete <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Zolotonosha>;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>, <http://dbpedia.org/ontology/SoccerPlayer>;
              <http://dbpedia.org/property/birthDate> ?birthDate .

    # Step 3: Find another person born on the same date
    ?person <http://dbpedia.org/property/birthDate> ?birthDate ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .

    # Step 4: Find the writer of ""Amba Shepherd""
    ?work <http://dbpedia.org/property/title> ""Amba Shepherd""@en ;
          <http://dbpedia.org/property/writer> ?writer .

    # Step 5: Find the band associated with this writer
    ?writer <http://dbpedia.org/ontology/band> ?band .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
838,12,val,"Give me the band member of the band, that is a group, of YU Grupa and band of Raša Đelmaš.",SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?member WHERE {
    { <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/member> ?member . }
    UNION
    { <http://dbpedia.org/resource/Rasa_Delmas> <http://dbpedia.org/ontology/member> ?member . }
}
GROUP BY ?member
HAVING (COUNT(DISTINCT ?band) = 2)
```",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
10,14,val,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of Matt Colton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?person WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Luke Francis Vibert""@en .
    ?person a <http://dbpedia.org/ontology/Artist> .
    ?person <http://dbpedia.org/property/birthName> ""Luke Francis Vibert"" .
    ?person <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Matt_Colton> .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
963,11,val,"Give me the administration of Serbian Progressive Party and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
# Query 1: Administration of Serbian Progressive Party
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Serbian_Progressive_Party> <http://dbpedia.org/ontology/administration> ?administration .
}

# Query 2: Entity in the region of Central European Time that is a country
SELECT DISTINCT ?country WHERE {
    ?region <http://www.w3.org/2006/time#during> ?timePeriod .
    ?timePeriod <http://www.w3.org/2006/time#inCalendar> ?calendar .
    ?calendar <http://dbpedia.org/ontology/name> ""Central European Time"" .
    ?country <http://dbpedia.org/ontology/location> ?region .
    ?country a <http://dbpedia.org/class/yago/Country108610460> .
}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,22,val,Give me the force of the person born as Narciso Campero Leyes and war of Irene Morales.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?force ?war WHERE {
    OPTIONAL {
        <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?force .
    }
    OPTIONAL {
        <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/property/battle> ?war .
    }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
294,18,val,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/burial> ?restingPlace .
}

UNION

SELECT ?entity WHERE {
    <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> ?entity .
    FILTER(STRSTARTS(STR(?birthPlace), ""http://dbpedia.org/resource/"") && STRSTARTS(STR(?entity), ""http://dbpedia.org/resource/""))
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
48,11,val,Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
# Query to find the band of the writer(s) of ""Emotion"" by Carly Rae Jepsen
SELECT DISTINCT ?writerBand WHERE {
  ?album <http://purl.org/dc/terms/title> ""Emotion""@en .
  ?album <http://dbpedia.org/ontology/creator> ?writer .
  ?writer <http://dbpedia.org/ontology/band> ?writerBand .
  FILTER(STRSTARTS(STR(?album), STR(<http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)>)))
}

UNION

# Query to find the band of Murda Mook
SELECT DISTINCT ?band WHERE {
  <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/band> ?band .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
404,32,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?spouse WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?person <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
    ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
54,35,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
SELECT ?predecessor WHERE {
    ?soeMinWimalaDewi <http://dbpedia.org/property/father> ?father .
    ?child <http://dbpedia.org/ontology/child> ?father .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?thihapateChild <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
    FILTER(?child = ?thihapateChild)
    ?officeHolderType <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                      <http://dbpedia.org/property/holder> ?child .
    ?officeHolderType <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
626,12,val,Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Query for awardees of awards received by Aleksey Petrovich Yermolov
SELECT ?award ?otherAwardee WHERE {
    <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov>)
}

# Query for commander in Battle of Leipzig
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?commander .
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
392,14,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?region WHERE {
    ?event <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Aguilar de Segarra""@en .
    ?event <http://dbpedia.org/ontology/entity> ?italianEntity .
    ?italianEntity <http://www.w3.org/2000/01/rdf-schema#label> ?italyLabel .
    FILTER(lang(?italyLabel) = ""en"" && regex(str(?italyLabel), ""Italy"", ""i""))
    ?event <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://www.w3.org/2006/time#during> ?region .
}
```",3,4,4,2,2,2,3,28,0,0,513,0,0.0,0
392,19,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?entity WHERE {
    ?country <http://dbpedia.org/ontology/country> ?region .
    ?region rdfs:label ""Central European Time""@en .
    
    ?entity <http://dbpedia.org/ontology/country> ?country .
    ?entity <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Schio> .

    FILTER(LANG(?region) = 'en')
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
9,39,val,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Query 1: Alma Mater of Allen Hill (Scientist)
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Query 2: Nickname of an Organisation and Educational Institution in Northern Ireland
SELECT ?entity ?nickname WHERE {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> ;
            <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Northern_Ireland> .
    OPTIONAL { ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?nickname . }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,30,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
    ?person <http://dbpedia.org/ontology/battleCommanded> <http://dbpedia.org/resource/Franco-Hova_Wars> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,33,val,Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?awardee ?commander WHERE {
    # Part 1: Find awardees of the Order of Suvorov
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> .

    # Part 2: Find commanders in forces involved at Budapest who are decedents
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?force <http://dbpedia.org/property/battle> ?event .
    ?event <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Budapest> .
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
    ?commander <http://dbpedia.org/property/commandedForce> ?force .
    ?commander <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    FILTER EXISTS { ?commander <http://dbpedia.org/ontology/deathDate> ?deathDate } .

    # Combine results
    FILTER(?awardee = ?commander)
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
64,7,val,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica and entity in Serbia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?person ?almaMater WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> .
    ?person <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> .
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
427,28,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994) and party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?prodiParty ?ipepName ?andreottiParty WHERE {
  # Romano Prodi's party
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?prodiParty .
  
  # Italian People's Party (1994) resource and name
  ?ipepResource <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)""@en .
  ?ipepResource rdfs:label ?ipepName .

  # Giulio Andreotti's party
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?andreottiParty .
}
```",4,4,5,2,3,3,3,71,1,9,0,0.1,1.0,0.18181818181818182
801,27,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?writer ?associatedArtist WHERE {
    ?album <http://www.w3.org/2000/01/rdf-schema#label> ""What U See Is What U Get""@en .
    ?album <http://dbpedia.org/ontology/work> ?work .
    ?work <http://purl.org/dc/terms/creator> ?writer .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",3,7,4,3,1,3,3,71,0,0,50,0,0.0,0
328,28,val,"Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
    ?person <http://dbpedia.org/property/leaderOf> <http://dbpedia.org/resource/People's_Commissariat_of_Defence_of_the_Soviet_Union> .
    ?person <http://dbpedia.org/property/awards> ?award .
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?award .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,35,val,Give me the administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for the administration of the father of Emperor Go-Mizunoo
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/administration> ?administration .
}

# Query for the birthplace of commanders in Boshin War
SELECT DISTINCT ?commander ?birthPlace WHERE {
    <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
345,12,val,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
# Step 1: Identify the person born on 1978-09-15 who is both a soccer player and manager
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Soccer_player> .
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Soccer_manager> .
}

# Step 2: Retrieve the organization/team associated with this person
SELECT ?team WHERE {
    ?person <http://dbpedia.org/property/currentclub> ?team .
    FILTER(?person = <URI_OF_PERSON_FROM_STEP_1>)
}

# Step 3: Find the figure known as ""Stolz von Liechtenstein""
SELECT ?stolz WHERE {
    ?stolz <http://www.w3.org/2000/01/rdf-schema#label> ""Stolz von Liechtenstein""@en .
}
```

Note: Replace `<URI_OF_PERSON_FROM_STEP_1>` with the actual URI of the person identified in Step 1 after executing it.",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
488,40,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?birthPlace ?deathPlace ?administration WHERE {
  # Part 1: Birth place of the commander in the specified war
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/birthPlace> ?birthPlace .

  UNION

  # Part 2: Death place of Tokugawa Ieyasu
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  UNION

  # Part 3: Administration of Emperor Go-Yōzei
  <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/property/administration> ?administration .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
360,15,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
SELECT ?album ?writer WHERE {
    ?album <http://dbpedia.org/ontology/writer> ?writer .
    ?album <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Dave_Flett> .
    OPTIONAL { ?album <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Manfred_Mann> . }
    FILTER EXISTS { ?album <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Manfred_Mann> }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
314,12,val,Give me the commander in Spanish Civil War and awardee of 30 and person deceased at Madrid.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?person WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
  ?person <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> .
  ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Madrid> .
  { SELECT ?person (COUNT(?award) AS ?count) WHERE {
    ?person <http://dbpedia.org/property/awards> ?award .
  } GROUP BY ?person HAVING (?count = 30) }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
232,22,val,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of Jon Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?residence ?native WHERE {
    ?sylvie <http://dbpedia.org/ontology/residence> ?residence .
    ?residence a <http://dbpedia.org/ontology/Settlement> ;
               <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .
    
    ?jon <http://dbpedia.org/ontology/child> ?child .

    ?residence <http://dbpedia.org/property/nativePlace> ?native .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
838,13,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?bandMemberBand WHERE {
    ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/%C5%BDika_Jeli%C4%87> .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Band115930069> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalGroup118072786> .
    ?bandMember <http://dbpedia.org/ontology/member> ?band .
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Artist115930069> ;
                <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist118072786> .
    ?bandMemberBand <http://dbpedia.org/ontology/member> ?bandMember .
}
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
16,23,val,Give me the spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?birthName .
    OPTIONAL { 
        <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
    }
}
```",3,3,4,3,1,3,3,71,1,0,0,1.0,1.0,1.0
427,25,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?person ?party WHERE {
  VALUES ?person { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/resource/Giulio_Andreotti> }
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
  ?person <http://dbpedia.org/ontology/politicalParty> ?party.
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
427,43,val,Give me the reference to Partito Popolare Italiano and party of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Reference to Partito Popolare Italiano
SELECT ?partito WHERE {
  ?partito <http://dbpedia.org/ontology/wikiPageWikiLink> <http://dbpedia.org/resource/Partito_Popolare_Italiano>.
}

# Party of Romano Prodi
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/politicalParty> ?party.
}

# Party of the father of an alumnus of MIT
SELECT DISTINCT ?fatherParty WHERE {
  ?alumnus <http://www.w3.org/2000/01/rdf-schema#label> ""Alumnus of Massachusetts Institute of Technology""@en .
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?alumnus <http://dbpedia.org/property/father> ?father .
  ?father <http://dbpedia.org/property/politicalParty> ?fatherParty .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
30,7,val,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder and native of the birthplace of Silvia Cohen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
SELECT ?professional WHERE {
    <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    
    ?professional <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?profession IN (
        <http://dbpedia.org/resource/Category:Financiers>,
        <http://dbpedia.org/resource/Category:Businesspeople>,
        <http://dbpedia.org/resource/Category:Vineyard_owners>,
        <http://dbpedia.org/resource/Category:Art_collectors>,
        <http://dbpedia.org/resource/Category:Horse_breeders>
    ))
    
    ?professional <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
314,16,val,"Give me the person deceased at Madrid and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?person WHERE {
    ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Lisa_Gavrić> .
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?event <http://dbpedia.org/ontology/commander> ?person .
    ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Madrid> .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
994,25,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?associatedArtist ?bandMember WHERE {
    # Find associated musical artists of Red Tide (band)
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
    
    # Find band members of Donald Maynard Dokken
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken"" ;
            <http://dbpedia.org/ontology/memberOfBand> ?band .
    
    # Find if any band member is the same as an associated artist of Red Tide
    ?associatedArtist <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
801,24,val,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
# Find associated musical artists for Chris Taylor
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

UNION

# Find producers of 50 Cent's songs that are both a musical work and a song
SELECT DISTINCT ?producer WHERE {
    ?song <http://dbpedia.org/ontology/lyricist> <http://dbpedia.org/resource/50_Cent> ;
          <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:50_Cent_songs> .
    ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalWork108069068> ;
          <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Songs_written_by_50_Cent> .
    ?song <http://dbpedia.org/ontology/producer> ?producer .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
696,11,val,Give me the landmark at elevation of 50 and birth place of the member of Dropkick Murphys.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
# Query for landmarks at elevation 50
SELECT ?landmark WHERE {
    ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#lat> ?lat .
    ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#long> ?long .
    ?landmark <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#float> .
}

UNION

# Query for birthplace of a member of Dropkick Murphys
SELECT ?birthPlace WHERE {
    ?member <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Dropkick_Murphys> .
    ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,31,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?spouseChild WHERE {
    ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_Theos> .
    ?royalChild <http://dbpedia.org/ontology/child> ?successor .
    FILTER( <http://www.w3.org/2002/07/owl#Thing> <http://dbpedia.org/class/yago/Royalty108069> ) .

    <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/property/spouse> ?spouse .
    
    ?spouseChild <http://dbpedia.org/ontology/child> ?spouse .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
328,30,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> ;
            <http://dbpedia.org/property/leader> ?person ;
            <http://dbpedia.org/property/minister> <http://dbpedia.org/resource/Joseph_Stalin> .
    ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
427,23,val,Give me the reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . },SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto_(politician)> <http://dbpedia.org/ontology/politicalParty> ?result . },3,3,4,3,1,3,3,71,0,0,8,0,0.0,0
328,39,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II).",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?gustavLeader ?agencyLeader WHERE {
    # Step 1: Find Gustav Jonson's leader
    ?gustavLeader <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Gustav_Jonson> .
    
    # Step 2: Identify the government agency associated with this leader
    ?agency <http://dbpedia.org/ontology/governmentAgency> ?gustavLeader .

    # Step 3: Find the commander of the Eastern Front during World War II
    ?easternFrontCommander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
    
    # Ensure the agency is linked to both Gustav Jonson's leader and the Eastern Front commander
    ?agency <http://dbpedia.org/ontology/leader> ?easternFrontCommander .

    # Step 4: Find the leader of this government agency
    ?agencyLeader <http://dbpedia.org/ontology/leader> ?agency .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
232,34,val,Give me the child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?result WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Jon Pertwee""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""John Julian Pertwee""@en .
    ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/London> .
    ?person <http://dbpedia.org/ontology/child> ?result .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,31,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT DISTINCT ?war WHERE {
    # Step 1: Get awards for Jonathon Band
    <http://dbpedia.org/resource/Jonathan_Band> <http://dbpedia.org/property/awards> ?award .

    # Step 2: Find other awardees of those awards
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    
    # Step 3: Filter for entities associated with the Colony of New Zealand
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Category:People_from_the_Colony_of_New_Zealand> .
    ?otherAwardee <http://dbpedia.org/ontology/nationality> ?entity .

    # Step 4: Identify wars involving these entities
    ?entity <http://dbpedia.org/property/wars> ?war .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,24,val,Give me the figure known as QUB and alma mater of the awardee of Royal Medal.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT DISTINCT ?figure ?almaMater WHERE {
    ?figure <http://dbpedia.org/property/nickname> ""QUB"" .
    
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .

    FILTER(?figure = ?awardee)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,38,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
    ?father <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick>.
    ?father <http://dbpedia.org/ontology/child> ?child.
    ?child <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Royalty>.
    ?child <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick>.
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
232,33,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?actor WHERE {
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jon_Pertwee> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Actor115769069> .
    ?child <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?profession IN (<http://dbpedia.org/resource/Actor>, <http://dbpedia.org/resource/Narrator>, <http://dbpedia.org/resource/Producer>)).
    
    ?work <http://dbpedia.org/ontology/actor> ?actor .
    ?work <http://dbpedia.org/ontology/subject> ?child .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER(?type IN (<http://dbpedia.org/class/yago/Film115769069>, <http://dbpedia.org/class/yago/MilitaryConflict115769069>)).
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,40,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of New Zealand Army.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT DISTINCT ?awardee ?war WHERE {
    # Step 1: Find awards for Jonathon Band
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?award .

    # Step 2: Find other awardees of these awards
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    
    # Step 3: Filter by association with Colony of New Zealand and New Zealand Army
    OPTIONAL { ?otherAwardee <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colony_of_New_Zealand> . }
    OPTIONAL { ?otherAwardee <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/New_Zealand_Army> . }

    # Step 4: Find wars associated with these entities
    OPTIONAL { ?otherAwardee <http://dbpedia.org/property/battles> ?battle .
               ?battle <http://dbpedia.org/ontology/war> ?war . }
    
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Jonathon_Band>)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
421,17,val,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
SELECT ?person WHERE {
    ?samir <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER(?samir = <http://dbpedia.org/resource/Samir_Bekrić>)
    
    ?person <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović"" .
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,14,val,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> .
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?child <http://dbpedia.org/property/spouse> ?spouse .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?child <http://dbpedia.org/ontology/father> ?father .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
485,14,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?awardee ?birthPlace WHERE {
  ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award>.
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>.
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>.
  ?awardee <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>.
  ?awardee <http://dbpedia.org/property/birthPlace> ?birthPlace.
}
```",3,5,4,2,2,2,3,28,0,0,5,0,0.0,0
404,18,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?result WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?person <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> .
    ?person <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914-1987)> .
    ?person <http://dbpedia.org/ontology/child> ?result .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,26,val,Give me the alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/governor> ?v1 . }","```sparql
SELECT ?almaMater WHERE {
    ?admin <http://www.w3.org/2000/01/rdf-schema#label> ""George Kilbon Nash""@en .
    ?admin <http://dbpedia.org/ontology/positionHeld> ?position .
    ?position <http://dbpedia.org/property/institution> ?institution .
    ?institution <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,3,4,3,1,3,3,71,0,0,6,0,0.0,0
915,11,val,"Give me the father of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v2 . },"```sparql
SELECT ?father WHERE {
    # Step 1: Get Lizzie Spaulding's father
    <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?father .

    # Step 2: Find Stephen Verona's birthplace that is a settlement
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlement108069068> .
    <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/property/birthPlace> ?birthPlace .

    # Step 3: Ensure the father is a resident of that settlement
    ?father <http://dbpedia.org/ontology/residence> ?residence .
    FILTER(?residence = ?birthPlace)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
617,40,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?spouseOfLaodiceIV ?parentOfNysa WHERE {
    # Step 1: Find Laodice IV's spouse
    <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouseOfLaodiceIV .

    # Step 2: Identify Antiochus II Theos' successor who is royalty and their child who is also royalty
    OPTIONAL {
        ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_Theos> .
        ?successor <http://www.w3.org/2002/07/owl#sameAs> ?royaltySuccessor .
        ?childOfSuccessor <http://dbpedia.org/ontology/parent> ?successor .
        ?childOfSuccessor <http://www.w3.org/2002/07/owl#sameAs> ?royaltyChild .

        # Step 4: Find the child of the child identified in step 2
        ?grandchild <http://dbpedia.org/ontology/parent> ?childOfSuccessor .
    }

    # Step 3: Find the parent of Nysa (wife of Pharnaces I of Pontus)
    <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> <http://dbpedia.org/property/spouse> ?nysaSpouse .
    ?parentOfNysa <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> .

    # Return the spouse of Laodice IV and the parent of Nysa
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
492,32,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Find the decedent at the work of Joseph C. Satterthwaite as US Assistant Secretary of State for African Affairs
SELECT ?decedent WHERE {
    ?work <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/Joseph_C._Satterthwaite> .
    ?work <http://dbpedia.org/ontology/title> ""US Assistant Secretary of State for African Affairs"" .
    ?work <http://dbpedia.org/property/decedent> ?decedent .
}

# Find the commander in a war involving Frédéric-Georges Herr
SELECT ?commander WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?war <http://dbpedia.org/property/commander> ?commander .
    ?war <http://dbpedia.org/property/participant> <http://dbpedia.org/resource/Frédéric-Georges_Herr> .
}

# Find the intersection of both results
SELECT DISTINCT ?person WHERE {
    { 
        ?work <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/Joseph_C._Satterthwaite> .
        ?work <http://dbpedia.org/ontology/title> ""US Assistant Secretary of State for African Affairs"" .
        ?work <http://dbpedia.org/property/decedent> ?person .
    }
    UNION
    {
        ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
        ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
        ?war <http://dbpedia.org/property/commander> ?person .
        ?war <http://dbpedia.org/property/participant> <http://dbpedia.org/resource/Frédéric-Georges_Herr> .
    }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
838,11,val,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of Kerber.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"```sparql
SELECT ?bandMember ?band WHERE {
    ?bandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/YU_Grupa>.
    ?bandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Kerber_(band)>.
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>.
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
    ?bandMember <http://dbpedia.org/ontology/member> ?band.
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
659,27,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?militaryForce WHERE {
    ?event <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
    ?event a <http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/MilitaryConflict>.
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce.
}
```",3,6,4,3,1,3,3,71,0,0,1127,0,0.0,0
767,37,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to .,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
SELECT ?administration ?almaMater WHERE {
    <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/workFor> ?administration .
    ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
994,36,val,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?persona ?bornAsPerson ?bandMember ?associatedArtist WHERE {
  # Find the persona of Don Dokken
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/property/alterEgo> ?persona .
  
  # Find the person born as this musical artist (persona)
  ?bornAsPerson <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
                <http://dbpedia.org/property/birthName> ?persona .
  
  # Find band members and associated artists of S.A. Slayer
  OPTIONAL {
    ?bandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/S._A._Slayer> .
    ?associatedArtist <http://dbpedia.org/property/associatedBand> <http://dbpedia.org/resource/S._A._Slayer> .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,15,val,"Give me the birth place of Novia Indriani Mamuaja and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
# Query 1: Birthplace of Novia Indriani Mamuaja
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Query 2: Entity in the region of the time zone in Salak, North Sumatra
SELECT ?entity WHERE {
    ?location <http://www.w3.org/2006/time#during> ?timeZone .
    ?timeZone <http://dbpedia.org/ontology/location> ?region .
    ?region <http://dbpedia.org/ontology/name> ""Salak, North Sumatra"" .
    ?entity <http://dbpedia.org/ontology/location> ?location .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
659,34,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?person ?commander WHERE {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland>.
    ?person <http://dbpedia.org/ontology/officeHolder> ?office.
    ?militaryForce <http://dbpedia.org/property/commander> ?commander.
    ?militaryForce <http://www.w3.org/2002/07/owl#sameAs> ?person.
    ?militaryForce <http://dbpedia.org/ontology/battle> ?battle.
    ?battle <http://dbpedia.org/ontology/event> ?event.
    FILTER(CONTAINS(LCASE(?event), ""napoleonic wars""))
}
```",4,5,5,3,2,3,3,71,0,0,34,0,0.0,0
184,37,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Archduchess Ilona of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?grandGrandChild WHERE {
    ?parent <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ladislaus_Philipp_of_Austria> .
    ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?parent <http://dbpedia.org/ontology/child> ?child1 .
    ?child1 <http://dbpedia.org/ontology/child> ?child2 .
    ?child2 <http://dbpedia.org/ontology/child> ?grandGrandChild .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
182,17,val,Give me the entity in Sri Lanka and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?work ?entityInSriLanka ?war WHERE {
  <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/ontology/work> ?work .
  OPTIONAL { ?work <http://dbpedia.org/property/country> ?country . FILTER(?country = ""Sri Lanka"") }
  OPTIONAL { ?work <http://dbpedia.org/ontology/battle> ?war . }
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
161,36,val,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
SELECT ?commander WHERE {
    ?elDirector <http://dbpedia.org/ontology/fictionalWork> ?fictionalWork .
    FILTER(STR(?elDirector) = ""El Director"") .

    ?rifWar <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Rif_War> .
    
    ?militaryForce <http://dbpedia.org/ontology/battle> ?rifWar .
    ?militaryForce <http://dbpedia.org/property/commander> ?commander .
}
```",4,5,5,3,2,3,3,71,0,0,12,0,0.0,0
547,33,val,Give me the resting place of the actor of the show with Emily Richard and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
SELECT ?actorRestingPlace ?burialSite WHERE {
  # Part 1: Resting place of the actor from the show with Emily Richard
  ?show dbo:starring <http://dbpedia.org/resource/Emily_Richard> .
  ?show dbo:castMember ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?actorRestingPlace . }

  # Part 2: Resting place of James Burton (Egyptologist)
  <http://dbpedia.org/resource/James_Burton_(Egyptologist)> dbo:burial ?burialSite .

}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
701,40,val,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT DISTINCT ?parentOfHenuttawy ?spouseOfRamessesII ?parentOfChild WHERE {
  # Parent of Henuttawy (19th dynasty)
  <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/parent> ?parentOfHenuttawy .

  # Spouse of Ramesses II
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/property/spouse> ?spouseOfRamessesII .

  # Parent of the child of the spouse of Amun-her-khepeshef
  {
    SELECT DISTINCT ?child WHERE {
      ?spouseOfAmunHerKhepeshef <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
      ?spouseOfAmunHerKhepeshef <http://dbpedia.org/ontology/child> ?child .
    }
  } UNION {
    SELECT DISTINCT ?child WHERE {
      ?amunHerKhepeshef <http://dbpedia.org/property/spouse> ?spouseOfAmunHerKhepeshef .
      ?amunHerKhepeshef <http://dbpedia.org/ontology/child> ?child .
    }
  }

  # Parent of the child found above
  ?child <http://dbpedia.org/ontology/parent> ?parentOfChild .
}
```",5,5,6,3,3,3,3,71,1,14607,0,6.845564074479737e-05,1.0,0.00013690190978164144
994,37,val,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?bandMember ?associatedArtist WHERE {
    # Step 1: Find Fredrik Thordendal's band
    <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/memberOf> ?fredrikBand .
    
    # Step 2: Ensure the band is an organisation and a group
    ?fredrikBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
                 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
    
    # Step 3: Find band members of Don Dokken's band
    ?donDokkenBand <http://dbpedia.org/property/member> ?bandMember .
    FILTER(?donDokkenBand = <http://dbpedia.org/resource/Dokken>) .

    # Step 4: For each band member, find associated musical artists that are bands, groups, and organisations
    ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
    ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
                      <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
421,13,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . }","```sparql
SELECT ?awardee ?bandMember WHERE {
    ?person <http://dbpedia.org/ontology/nativeCountry> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
    ?person <http://dbpedia.org/property/awards> ?award .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?bandMember <http://dbpedia.org/ontology/member> ?person .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
378,38,val,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?greatSiegeCommander ?peninsularWarCommander ?notableWorksGreatSiege ?notableWorksPeninsularWar WHERE {
    ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> .
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?v0 <http://dbpedia.org/property/commander> ?greatSiegeCommander .

    ?v1 <http://dbpedia.org/ontology/battle> ?peninsularWarBattle .
    ?peninsularWarBattle <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Peninsular_War> .
    ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?v1 <http://dbpedia.org/property/commander> ?peninsularWarCommander .

    OPTIONAL { ?greatSiegeCommander <http://dbpedia.org/ontology/notableworks> ?notableWorksGreatSiege . }
    OPTIONAL { ?peninsularWarCommander <http://dbpedia.org/ontology/notableworks> ?notableWorksPeninsularWar . }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
626,13,val,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?commanderInParis ?conflict WHERE {
    <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?commanderInParis .
    ?conflict <http://dbpedia.org/ontology/commander> ?commanderInParis .
    FILTER(?conflict != <http://dbpedia.org/resource/Battle_of_Paris_(1814)>)
}
```",3,4,4,3,1,3,2,20,11,76,353,0.12643678160919541,0.03021978021978022,0.04878048780487805
356,11,val,Give me the player in the successor of 2014 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
    ?season <http://dbpedia.org/ontology/successor> ?successorSeason .
    ?successorSeason <http://www.w3.org/2000/01/rdf-schema#label> ""2015 Sacramento Republic FC season"" .
    
    ?markBriggs <http://dbpedia.org/property/team> ?team .
    ?markBriggs <http://dbpedia.org/resource/Mark_Briggs_(footballer)> .

    ?team <http://dbpedia.org/ontology/player> ?player .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
9,41,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT DISTINCT ?almaMater WHERE {
  # Find the figure known as QUB
  ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""QUB""@en .
  
  # Find the mayor who is a politician and served on the Northern Ireland Forum
  ?mayor <http://dbpedia.org/ontology/politician> true ;
         <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .

  # Get alma mater of this mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  # Find awardees of the Royal Medal
  ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> .

  # Get alma mater of these awardees
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
54,33,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
SELECT ?parent WHERE {
    ?thadoMinsaw <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
    ?thinkhaya <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
    ?thadoMinsaw = ?thinkhaya .
    ?parent <http://dbpedia.org/ontology/child> ?thadoMinsaw .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,34,val,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
SELECT ?person WHERE {
    ?resource <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
    ?resource a <http://dbpedia.org/ontology/Person> .

    ?tedResource <http://dbpedia.org/property/spouse> ?spouse .
    ?tedResource rdfs:label ""Ted McGinley""@en .

    FILTER(?resource = ?spouse)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,14,val,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
SELECT ?team WHERE {
    # Step 1: Identify Gary Williams' birthplace
    <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    
    # Ensure the birthplace is an English settlement
    ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?englishSettlement .
    ?englishSettlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/England> .

    # Step 2: Find individuals who are both soccer players and managers native to that birthplace
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

    # Step 3: Get the teams associated with these individuals
    ?person <http://dbpedia.org/property/team> ?team .
}
```",3,7,4,3,1,3,2,20,0,0,46,0,0.0,0
617,35,val,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?grandparent WHERE {
    ?antiochus <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
    ?antiochus <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/father> ?parent1 .
    ?child <http://dbpedia.org/property/mother> ?parent2 .
    ?grandchild <http://dbpedia.org/ontology/child> ?child .
    ?grandchild <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""royalty"")) .
    ?grandchild <http://dbpedia.org/property/father> ?parent3 .
    ?grandchild <http://dbpedia.org/property/mother> ?parent4 .
    { ?parent1 = ?grandparent } UNION { ?parent2 = ?grandparent }
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
232,39,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?nativeOfBritishSettlement WHERE {
    ?actor <http://dbpedia.org/property/film> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
    ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
    ?actor <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Politician> .
    ?actor <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Office_holder> .
    ?actor <http://dbpedia.org/ontology/native> ?nativePlace .
    
    ?actor <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
    FILTER(CONTAINS(LCASE(?settlementLabel), ""british"") && CONTAINS(LCASE(?settlementLabel), ""settlement"")) .

    ?residence <http://dbpedia.org/ontology/native> ?nativeOfBritishSettlement .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
626,11,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
# Query 1: Find awardees of the Order of St. Andrew including Alexander I of Russia
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew>.
    FILTER(?awardee = <http://dbpedia.org/resource/Alexander_I_of_Russia>)
}

# Query 2: Find military conflicts where Alexander I was a commander
SELECT ?conflict WHERE {
    <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/commander> ?conflict.
}
```",3,4,4,2,2,3,2,20,0,0,9,0,0.0,0
547,22,val,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
SELECT ?person ?burialPlace WHERE {
  { 
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/burialPlace> ?burialPlace .
    BIND(<http://dbpedia.org/resource/James_Burton_(Egyptologist)> AS ?person)
  }
  UNION
  {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    ?awardee <http://dbpedia.org/ontology/burialPlace> ?burialPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
701,42,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?entity WHERE {
    # Parent of Henuttawy (19th dynasty)
    ?henuttawy <http://dbpedia.org/ontology/birthName> ""Henuttawy"" .
    ?henuttawy <http://dbpedia.org/property/dynasty> ""19th dynasty"" .
    ?henuttawy <http://dbpedia.org/ontology/parent> ?entity .

    # Spouse of the father of Merneptah
    ?merneptah <http://dbpedia.org/property/father> ?fatherOfMerneptah .
    ?fatherOfMerneptah <http://dbpedia.org/property/spouse> ?entity .

    # Parent of a child of Nefertari
    ?nefertari <http://dbpedia.org/ontology/birthName> ""Nefertari"" .
    ?childOfNefertari <http://dbpedia.org/ontology/parent> ?nefertari .
    ?childOfNefertari <http://dbpedia.org/ontology/parent> ?entity .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
959,18,val,Give me the member of University of Tsukuba and native of Japan and manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/University_of_Tsukuba> .
    ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Japan> .
    ?person <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,20,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?child <http://dbpedia.org/ontology/birthParent> ?spouse ;
           <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?child <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
232,26,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . }","```sparql
SELECT ?actor WHERE {
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Narrator> .
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Producer> .
    ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?person <http://dbpedia.org/property/claimToFame> ?film .
    ?film <http://dbpedia.org/ontology/starring> ?actor .
}
```",3,5,4,3,1,3,3,71,0,0,3,0,0.0,0
281,21,val,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?awardee ?war WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
    ?awardee <http://dbpedia.org/ontology/militaryService> ?service .
    ?service <http://dbpedia.org/ontology/army> <http://dbpedia.org/resource/New_Zealand_Army> .
    ?awardee <http://dbpedia.org/property/wars> ?war .
}
```",3,3,4,2,2,3,3,71,0,0,9,0,0.0,0
488,41,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?administration ?birthPlace ?deathPlace WHERE {
  # Administration of Emperor Go-Yōzei
  <http://dbpedia.org/resource/Emperor_Go-Yozei> <http://dbpedia.org/ontology/administration> ?administration .

  # Birth place of the commander in Boshin War
  ?commander <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Boshin_War> .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Death place of the father, who is a politician, of Yūki Hideyasu
  <http://dbpedia.org/resource/Yuki_Hideyasu> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
767,31,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert.",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
SELECT DISTINCT ?settlement WHERE {
  # Writer of ""Where It's At""
  <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> dbo:lyricsBy ?writer .
  
  # Alma mater of Carl L. Nippert
  <http://dbpedia.org/resource/C._L._Nippert> dbo:almaMater ?almaMater .

  # Settlement in administration of the writer
  ?writer dbo:administrativePost ?adminWriter .
  ?adminWriter dbp:settlement ?settlement .

  # Settlement in administration of Carl L. Nippert's alma mater
  ?almaMater dbo:administrativePost ?adminAlmaMater .
  ?adminAlmaMater dbp:settlement ?settlement .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
994,34,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandMember ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?bandMember .
    ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
    OPTIONAL { 
        ?associatedArtist <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Watchtower_(band)> .
    }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
251,12,val,Give me the death place of Laura Mancinelli and location of Battle of Marengo and administration of Forza Italia (2013).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
SELECT ?deathPlace ?battleLocation ?administration WHERE {
    OPTIONAL { 
        <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    }
    OPTIONAL {
        <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?battleLocation .
    }
    OPTIONAL {
        <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/property/administration> ?administration .
    }
}
```",3,3,4,1,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
659,33,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
SELECT ?commander ?war WHERE {
    ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?polishHorse <http://dbpedia.org/property/nicknames> ""Polish Horse"".
    
    ?polishHorse <http://dbpedia.org/ontology/commander> ?commander.
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/German_campaign_of_1813>.
    
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?commander <http://dbpedia.org/ontology/battle> ?war.
}
```",4,8,5,3,2,3,3,71,0,0,30,0,0.0,0
547,42,val,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Resting place of the child of James Burton (property developer)
SELECT ?child ?burial WHERE {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    OPTIONAL { ?child <http://dbpedia.org/ontology/burial> ?burial . }
}

# Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?awardee ?burial WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/burial> ?burial . }
}

# Resting place of Simon Cadell
SELECT ?burial WHERE {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/burial> ?burial .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
9,29,val,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT DISTINCT ?almaMater WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  OPTIONAL { 
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }

  # Alma mater of the awardee known as QUB who received the Royal Medal
  OPTIONAL {
    ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""QUB""@en .
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
9,30,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?person ?almaMater WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> 
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> 
  }
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  FILTER(?almaMater = <http://dbpedia.org/resource/Queen's_University_Belfast>)
}

SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Queen's_University_Belfast> <http://www.w3.org/2000/01/rdf-schema#label> ?nickname .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,20,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/property/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/MilitaryConflict> | <http://dbpedia.org/ontology/Event>) .
    ?war <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/decedentAt> <http://dbpedia.org/resource/French_Algeria> .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
9,18,val,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?qub ?almaMaterAlderdice ?almaMaterHill WHERE {
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ""QUB""@en .
  ?entity ?p ?qub .

  OPTIONAL { 
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMaterAlderdice .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMaterHill .
  }
}
```",3,3,4,1,3,3,3,71,1,12,0,0.07692307692307693,1.0,0.14285714285714288
378,29,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
SELECT ?person ?notableWorks WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> 
    <http://dbpedia.org/resource/Carl_Pontus_Gahn>
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/notableworks> ?notableWorks .
  }

  OPTIONAL {
    ?person <http://dbpedia.org/property/battles> ?battle .
    FILTER (
      (?person = <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> && 
       ?battle = <http://dbpedia.org/resource/Peninsular_War>)
      ||
      (?person = <http://dbpedia.org/resource/Carl_Pontus_Gahn> && 
       ?battle IN (<http://dbpedia.org/resource/War1>, <http://dbpedia.org/resource/War2>))  # Replace War1, War2 with actual wars if known
    )
  }
}
```",4,4,5,2,3,3,3,71,0,2,2,0.0,0.0,0
10,15,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",3,4,4,2,2,2,3,28,2,2,0,0.5,1.0,0.6666666666666666
378,39,val,"Give me the war of Joaquín Blake and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?war ?commander ?claimToFame WHERE {
    # Step 1: Find wars associated with Joaquín Blake
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?war .
    
    # Step 2: Find commanders of those wars
    ?war <http://dbpedia.org/property/commander> ?commander .
    
    # Step 3: Get the claim to fame for each commander
    ?commander <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
    
    # Step 4: Filter wars that are also societal events and involve Thomas Trigge
    FILTER EXISTS { 
        ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
        ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
        ?war <http://dbpedia.org/property/personInvolved> <http://dbpedia.org/resource/Thomas_Trigge> .
    }
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
994,18,val,Give me the associated musical artist of Red Tide (band) and band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
# Find associated musical artists of Red Tide (band)
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

# Find a band member who is part of both Don Dokken and S.A. Slayer
SELECT DISTINCT ?member WHERE {
    ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Don_Dokken> .
    ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/S._A._Slayer> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
783,12,val,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?associatedArtist ?bandMember WHERE {
  # Find associated musical artist of Appietus
  <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .

  # Find band member of Priscilla Opoku-Kwarteng
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/ontology/birthDate> ?birthDate .
  FILTER(?birthDate = ""1982-11-07""^^xsd:date) # Assuming the birth date is known
  ?person <http://dbpedia.org/ontology/memberOfBand> ?bandMember .

  # Ensure Priscilla Opoku-Kwarteng matches the artist criteria
  ?person rdfs:label ""Priscilla Opoku-Kwarteng""@en .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
485,19,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query 1: Birthplace of Thomas Warner (poet)
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Query 2: Entity in the region that is a country for Western European Time
SELECT ?country WHERE {
    ?region <http://www.w3.org/2000/01/rdf-schema#label> ""Western European Time""@en .
    ?timeZone <http://dbpedia.org/property/timeZone> ?region .
    ?country <http://dbpedia.org/ontology/country> ?region .
}

# Query 3: Entity in Nottinghamshire
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nottinghamshire> .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
427,37,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
SELECT ?alumnus ?father ?fathersParty ?romanosParty WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?alumnus <http://dbpedia.org/ontology/father> ?father .
  OPTIONAL { ?father <http://dbpedia.org/property/politicalParty> ?fathersParty . }
  
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/politicalParty> ?romanosParty .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
378,24,val,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
SELECT ?war ?fame WHERE {
    OPTIONAL {
        <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> 
            <http://dbpedia.org/ontology/battle> ?battle .
        ?battle <http://dbpedia.org/ontology/conflict> ?war .
        FILTER(CONTAINS(LCASE(STR(?war)), ""peninsular war""))
    }
    
    OPTIONAL {
        <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> 
            <http://dbpedia.org/property/awards> ?fame .
    }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,11,val,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of Mieszko II Lambert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . }","```sparql
SELECT ?grandchild WHERE {
    ?royalChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> .
    ?royalChild <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""king"") || CONTAINS(LCASE(?label), ""queen"") || CONTAINS(LCASE(?label), ""prince"") || CONTAINS(LCASE(?label), ""princess"")) .
    ?royalChild <http://dbpedia.org/ontology/child> ?grandchild .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
659,22,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?event <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
    ?event <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/German_campaign_of_1813>.
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce.
}
```",3,6,4,2,2,3,3,71,0,0,7,0,0.0,0
281,37,val,"Give me the war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?war WHERE {
    ?politician <http://dbpedia.org/ontology/politicalParty> ?party .
    ?election <http://dbpedia.org/property/electionYear> ""1962""^^xsd:gYear .
    ?election <http://dbpedia.org/property/state> <http://dbpedia.org/resource/New_South_Wales> .
    ?politician <http://dbpedia.org/ontology/leaderOf> ?election .
    
    ?politician <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
    FILTER(STRSTARTS(STR(?country), ""http://dbpedia.org/resource/"") && STRLEN(STR(?country)) > 30) .

    ?entity <http://dbpedia.org/ontology/country> ?country .
    
    ?war <http://dbpedia.org/property/foughtBy> <http://dbpedia.org/resource/New_Zealand_Army> ;
         <http://dbpedia.org/property/foughtBy> ?entity .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
378,37,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
# Step 1: Identify military conflicts referencing the Peninsular War
SELECT ?conflict WHERE {
    ?conflict <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Peninsular_War>.
    ?conflict a <http://dbpedia.org/ontology/MilitaryConflict>.
}

# Step 2: Identify commanders of these conflicts
SELECT DISTINCT ?commander WHERE {
    ?conflict <http://dbpedia.org/ontology/commander> ?commander.
    ?conflict <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Peninsular_War>.
}

# Step 3: Determine Louis des Balbes de Berton de Crillon's claim to fame
SELECT ?claimToFame WHERE {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/property/claimToFame> ?claimToFame.
}

# Step 4: Find wars associated with his claim to fame
SELECT DISTINCT ?war WHERE {
    ?war <http://dbpedia.org/ontology/battleOf> ?claimToFame.
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,20,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . }","```sparql
SELECT ?associatedArtist WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?person <http://dbpedia.org/property/birthName> ""Jim Sheppard"" .
    ?person <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nevermore_(band)> .
    ?person <http://dbpedia.org/ontology/associatedBand> ?associatedArtist .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
54,41,val,Give me the parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?commonChild ?parent WHERE {
    # Step 1: Find Narapati I of Ava's child
    <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?narapatiChild .

    # Step 2: Find Soe Min Wimala Dewi's father and his child
    <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/child> ?soeMinChild .

    # Step 3: Find Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor
    <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/ontology/predecessor> ?predecessor .

    # Step 4: Ensure the child from Soe Min Wimala Dewi's father is also Narapati I of Ava's child
    FILTER(?narapatiChild = ?soeMinChild)

    # Step 5: Find the parent of this common child
    ?commonChild <http://dbpedia.org/ontology/parent> ?parent .
    FILTER(?commonChild = ?narapatiChild)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
251,14,val,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Query 1: Location of Battle of Marengo
SELECT ?location WHERE {
    <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?location .
}

# Query 2: Administration of the ruling party in Sicily
SELECT DISTINCT ?party ?administration WHERE {
    ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?party <http://dbpedia.org/property/rulingParty> ?region .
    ?region <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Sicily> .
    OPTIONAL { ?party <http://dbpedia.org/ontology/administration> ?administration . }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
712,13,val,"Give me the capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT ?capital WHERE {
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising>.
    ?militaryForce <http://dbpedia.org/ontology/country> ?country.
    ?country <http://dbpedia.org/property/administrativeCapital> ?capital.
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
9,31,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?allenHillAlmaMater ?mayorAlmaMatter WHERE {
  # Alma mater of Allen Hill (scientist)
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?allenHillAlmaMater .

  # Organizations in Belfast
  ?organisation <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  ?organisation <http://dbpedia.org/property/location> ?location .
  FILTER(CONTAINS(LCASE(?label), ""belfast"") || CONTAINS(LCASE(STR(?location)), ""belfast""))

  # Mayor of the organization
  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mayor> .
  ?mayor <http://dbpedia.org/ontology/politicalParty> ?party .
  FILTER EXISTS { ?organisation <http://dbpedia.org/property/mayor> ?mayor . }

  # Alma mater of the mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMatter .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,33,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?person WHERE {
    # Step 1: Identify the commander of the Battle of Verdun
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Verdun> .
    ?battle <http://dbpedia.org/property/commander> ?commander .

    # Step 2: Find wars where this commander was involved as a commander
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://dbpedia.org/property/commander> ?commander .

    # Step 3: Find individuals who were commanders in this war and decedents at French Algeria
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
    ?person <http://dbpedia.org/property/commander> ?war .
    ?person <http://dbpedia.org/ontology/decedentPlace> <http://dbpedia.org/resource/French_Algeria> .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,36,val,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?party WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Romano Prodi"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?person <http://dbpedia.org/property/politicalParty> ?party .
    FILTER(?party = <http://dbpedia.org/resource/Partito_Popolare_Italiano>)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
778,14,val,"Give me the author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?softwareWork ?author WHERE {
    ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Bill_Joy> .
    ?work <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/SoftwarePiece100000001> .
    ?softwareWork <http://dbpedia.org/property/works> ?work .
    ?softwareWork <http://dbpedia.org/ontology/author> ?author .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
959,29,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
SELECT ?native WHERE {
    ?y <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
    FILTER(CONTAINS(LCASE(?countryLabel), ""country"")) .

    ?y <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
    ?y <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .

    ?native <http://dbpedia.org/ontology/nativeCountry> ?residence .
    FILTER(?y != ?native)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
820,12,val,Give me the professional in  and child of the parent of Jason Schwartzman.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?child ?profession WHERE {
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> .
    ?parent <http://dbpedia.org/ontology/child> ?child .
    OPTIONAL { ?child <http://dbpedia.org/ontology/profession> ?profession . }
}
```",3,3,4,2,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
801,18,val,Give me the professional in  and producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?person WHERE {
  {
    <http://dbpedia.org/resource/Westside_Story_(song)> 
      <http://dbpedia.org/ontology/professional> ?person .
    FILTER EXISTS { ?person <http://dbpedia.org/ontology/producer> ?x }
  } UNION {
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> 
      <http://dbpedia.org/ontology/associatedMusicalArtist> ?person .
  }
}
```",3,3,4,1,3,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
184,20,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
SELECT ?grandchild WHERE {
    ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
    ?parent <http://dbpedia.org/property/children> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
    FILTER(?grandchild = ?parent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,28,val,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Find Soe Min Wimala Dewi's father
SELECT ?father WHERE {
    ?soeMinWimalaDewi <http://dbpedia.org/ontology/father> ?father .
    FILTER(STR(?soeMinWimalaDewi) = ""Soe_Min_Wimala_Dewi"")
}

# Step 2: Find the predecessor of Soe Min Wimala Dewi's father
SELECT ?predecessor WHERE {
    ?father <http://dbpedia.org/ontology/predecessor> ?predecessor .
    # Use the result from step 1 for ?father
}

# Step 3: Find Thado Minsaw of Prome's parent, who is also the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
SELECT ?parent WHERE {
    ?thadoMinsaw <http://dbpedia.org/ontology/father> ?parent .
    FILTER(STR(?thadoMinsaw) = ""Thado_Minsaw_of_Prome"")
    
    ?predecessor <http://dbpedia.org/ontology/predecessor> ?ameittaThiriMahaDhammaDewiOfAva .
    FILTER(STR(?ameittaThiriMahaDhammaDewiOfAva) = ""Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava"")
    
    # Ensure the parent from step 3 is the same as the predecessor found in step 2
    ?parent = ?predecessor
}

# Step 4: Find the child of the identified parent
SELECT ?child WHERE {
    ?parent <http://dbpedia.org/ontology/child> ?child .
    # Use the result from step 3 for ?parent
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
161,21,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
SELECT ?militaryForce WHERE {
    ?event <http://dbpedia.org/ontology/SocietalEvent> _:b0 .
    ?event <http://dbpedia.org/ontology/MilitaryConflict> _:b1 .
    ?event <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Francisco_Franco> .
    ?event <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Biscay_Campaign> .
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
435,13,val,"Give me the region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
# Query for the region of Greenwich Mean Time
SELECT ?region WHERE {
    <http://dbpedia.org/resource/Greenwich_Mean_Time> <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://dbpedia.org/property/country> ?country .
    ?country <http://dbpedia.org/ontology/administrativeTerritory> ?region .
}

# Query for territories administered by Iceland
SELECT ?territory WHERE {
    <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/ontology/administers> ?territory .
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
54,40,val,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
    # Step 1: Find Thinkhaya's child
    ?thinkhayaChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
    
    # Step 2: Use Thinkhaya to find his children
    ?thinkhayaChild <http://dbpedia.org/ontology/child> ?potentialParent .

    # Step 3: Filter based on being a parent of Thado Minsaw and predecessor of Ameitta Thiri Maha Dhamma Dewi
    ?potentialParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
    ?potentialParent <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .

    # Step 4: Find the child of this potential parent
    ?potentialParent <http://dbpedia.org/ontology/child> ?result .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,37,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
    ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .
    ?biscayCommander <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Biscay_Campaign> .
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?event <http://dbpedia.org/property/participant> ?predecessor, ?biscayCommander .
    ?militaryForce <http://dbpedia.org/ontology/militaryForce> ?event .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
421,14,val,Give me the native of the birthplace of Samir Bekrić and band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
SELECT ?native WHERE {
    <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthplace .
    ?native <http://dbpedia.org/ontology/nativeOf> ?birthplace .
    ?native <http://dbpedia.org/property/memberOfBand> <http://dbpedia.org/resource/Senidah> .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
9,25,val,Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?nickname .
}

SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Assuming the SPARQL engine allows for combining results, we can check if there's a match:
SELECT DISTINCT ?figure WHERE {
    VALUES ?figure { 
        (<http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname>) 
        (<http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater>)
    }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,43,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
# Step 1: Identify the parent of Prince George William of Hanover who is royalty.
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/birthParent> ?parent .
    ?parent <http://www.w3.org/2002/07/owl#sameAs> ?royalty .
}

# Step 2: Find the child of that parent who is royalty.
SELECT ?child WHERE {
    ?parent <http://dbpedia.org/property/spouse> ?spouse .
    ?parent <http://dbpedia.org/ontology/birthChild> ?child .
    ?child <http://www.w3.org/2002/07/owl#sameAs> ?royalty .
}

# Step 3: Determine the spouse of Princess Victoria Louise of Prussia.
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/spouse> ?spouse .
}

# Step 4: Check if the spouse from step 3 matches the child identified in step 2.
SELECT ?child WHERE {
    ?parent <http://dbpedia.org/ontology/birthChild> ?child .
    ?child <http://www.w3.org/2002/07/owl#sameAs> ?royalty .
    ?spouse <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/spouse> ?spouse .
    FILTER(?child = ?spouse)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,26,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?nativeCountry WHERE {
    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?leader <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> .
    ?leader <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://dbpedia.org/ontology/nativeCountry> ?nativeCountry .
}
```",3,5,4,3,1,3,3,71,0,0,8419,0,0.0,0
391,42,val,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find actor of The Departed
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 2: Identify Hub City and find native actors
SELECT ?nativeActor WHERE {
    ?city <http://dbpedia.org/property/commonName> ""Hub City"" .
    ?person <http://dbpedia.org/ontology/nationality> ?city ;
            <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
}

# Step 3: Find work with Roz Ryan and common actor
SELECT DISTINCT ?actor WHERE {
    ?work <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> ;
          (<http://dbpedia.org/ontology/starring> | <http://dbpedia.org/ontology/castMember>) ?actor .
    <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
378,22,val,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query 1: Wars of Carl Pontus Gahn
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/war> ?war .
}

# Query 2: Claim to Fame of the Commander in Great Siege of Gibraltar
SELECT ?commander ?claimToFame WHERE {
    ?commander <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> .
    ?commander <http://dbpedia.org/ontology/notableworks> ?claimToFame .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
232,37,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
SELECT ?actor WHERE {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/London>.
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor>;
            <http://dbpedia.org/ontology/narrator> [] .
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Producer>.
    ?claimToFame <http://dbpedia.org/property/claimsToFame> ?film.
    ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>;
          <http://dbpedia.org/ontology/basedOnMilitaryConflict> [] .
    ?claimToFame <http://dbpedia.org/property/claimsToFame> ?person.
    ?film <http://dbpedia.org/ontology/starring> ?actor.
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
959,28,val,"Give me the native of Japan and manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
SELECT ?person WHERE {
    ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ""Eiji Ōtsuka's alma mater""@en .
    ?almaMater <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .

    ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Japan> .
    ?person <http://dbpedia.org/ontology/alumni> ?almaMater .
    ?person <http://dbpedia.org/ontology/jobTitle> ""Manager""@en .
    ?jubiloIwataSeason <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Júbilo_Iwata> .
    ?jubiloIwataSeason <http://dbpedia.org/property/year> ""2013""^^xsd:integer .
    ?jubiloIwataSeason <http://dbpedia.org/ontology/manager> ?person .
}
```",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
232,40,val,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Step 1: Find actor(s) of Dog Soldiers (film)
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 2: Identify Jon Pertwee's birth name and check if he was native of London
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Jon Pertwee"" .
    ?person <http://dbpedia.org/ontology/nativeOf> <http://dbpedia.org/resource/London> .
}

# Step 3: Find the child of Jon Pertwee
SELECT ?child WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Jon Pertwee"" .
    ?person <http://dbpedia.org/ontology/nativeOf> <http://dbpedia.org/resource/London> .
    ?person <http://dbpedia.org/ontology/child> ?child .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
77,11,val,Give me the force of Alexander I of Russia and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
# Part 1: Find the military force associated with Alexander I of Russia
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/militaryForce> ?force .
}

UNION

# Part 2: Find wars involving awardees of the Golden Weapon for Bravery
SELECT DISTINCT ?war WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> .
    ?awardee <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/ontology/war> ?war .
}
```",3,3,4,2,2,3,2,20,0,0,11,0,0.0,0
959,33,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?native WHERE {
    ?person <http://dbpedia.org/property/politicalParty> ?party .
    ?person <http://dbpedia.org/ontology/memberOfParliament> <http://dbpedia.org/resource/Japanese_House_of_Councillors_election,_2010> .
    ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:University_of_Tsukuba_alumni> .
    ?person <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://dbpedia.org/ontology/country> ?country .
    ?country <http://dbpedia.org/ontology/nativeCountry> ?native .
}
```",4,6,5,3,2,3,3,71,0,0,84,0,0.0,0
16,29,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
# Step 1: Get Satomi Ishihara's profession
SELECT ?profession WHERE {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
}

# Step 2: Identify Georgeanne Marie Rice and her spouse relationship with Ted McGinley
SELECT ?rice WHERE {
    ?rice <http://www.w3.org/2000/01/rdf-schema#label> ""Georgeanne Marie Rice""@en .
    ?rice <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
}

# Step 3: Find a professional in the same field as Satomi Ishihara who is Georgeanne Marie Rice and spouse of Ted McGinley
SELECT ?result WHERE {
    ?profession <http://purl.org/dc/terms/subject> ?result .
    ?rice <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
    FILTER(?result = ?rice)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
427,44,val,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
# Query 1: Party of the Father of Lamberto Andreotti
SELECT ?fatherParty WHERE {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/politicalParty> ?fatherParty .
}

# Query 2: Party of Romano Antonio Prodi and Reference to Partito Popolare Italiano
SELECT ?prodiParty WHERE {
    <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
}

SELECT ?reference WHERE {
    ?entity <http://dbpedia.org/property/politicalAffiliation> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/OfficeHolder> <http://dbpedia.org/ontology/Politician>) .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
666,13,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
SELECT ?player WHERE {
    ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
    <http://dbpedia.org/resource/Lenid_Slutskiy> <http://dbpedia.org/ontology/manager> ?manager .

    ?team1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .
    ?team2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> .
    ?manager <http://dbpedia.org/ontology/team> ?team1 .
    ?manager <http://dbpedia.org/ontology/team> ?team2 .

    ?player <http://dbpedia.org/property/player> ?team1 ;
            <http://dbpedia.org/property/player> ?team2 .
}
```",3,6,4,3,1,3,2,20,0,0,28,0,0.0,0
801,43,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
SELECT DISTINCT ?producer WHERE {
    ?chris <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Music_producer> .
    FILTER(?chris = <http://dbpedia.org/resource/Chris_Taylor_(music_producer)>)
    
    ?chris <http://dbpedia.org/ontology/associatedMusicalArtist> ?rapper .
    ?rapper <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    FILTER(?rapper <http://dbpedia.org/resource/Rapper>)  # Assuming there's a specific resource for Rapper

    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
    ?work <http://dbpedia.org/property/artist> ?rapper .

    ?work <http://dbpedia.org/ontology/producer> ?producer .
}
```",5,9,6,3,3,3,3,71,0,0,2,0,0.0,0
767,19,val,"Give me the entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?entity WHERE {
    ?green <http://dbpedia.org/ontology/administrativeUnit> ?entity .
    FILTER(STRSTARTS(STR(?entity), ""http://dbpedia.org/resource/"") && STRLEN(STR(?entity)) > 30) # Ensures it's a settlement

    ?nippert <http://dbpedia.org/property/almaMater> ?entity .

    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(REPLACE(STR(?entity), "" "", ""_"")), ""/"", """"))) AS ?normalizedEntity)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
427,35,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?party WHERE {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?party .
    OPTIONAL { 
        ?party <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> .
    }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,26,val,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?spouse WHERE {
    ?antiochus <http://www.w3.org/2000/01/rdf-schema#label> ""Antiochus (son of Antiochus III the Great)""@en .
    ?antiochus <http://dbpedia.org/ontology/successor> ?successor .
    FILTER(CONTAINS(LCASE(STR(?successor)), ""royalty"")) .
    ?successor <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/spouse> ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
9,19,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?person ?almaMater WHERE {
  { 
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    BIND(<http://dbpedia.org/resource/Allen_Hill_(scientist)> AS ?person)
  }
  UNION
  {
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?mayor <http://dbpedia.org/property/mayorOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
    BIND(?mayor AS ?person)
  }
}
```",3,4,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
281,24,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?entity WHERE {
  # Find Bob Heffron's birthplace country
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?countryResource .
  ?countryResource a <http://dbpedia.org/class/yago/Country108069365> .

  # Find wars involving the New Zealand Army
  <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/property/wars> ?war .
  
  # Look for an entity that is both a country and involved in a war with the New Zealand Army
  ?countryResource <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?entity .
  FILTER(?birthPlace = ?entity || ?war = ?entity)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
994,43,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
# Step 1: Identify Fredrik Thordendal's band that is a band, group, and organization
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/member> ?band .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}

# Step 2: Identify S.A. Slayer's associated musical artist
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
}

# Step 3: Find Don Dokken's band members
SELECT ?member WHERE {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?member .
}

# Step 4: Retrieve associated musical artists for each identified band member from steps 1 and 3
SELECT DISTINCT ?artist WHERE {
    { 
        # For Fredrik Thordendal's band members
        ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
        ?bandMember <http://dbpedia.org/property/member> ?band .
        VALUES (?band) { 
            # Replace with actual band URI from Step 1
        }
    } UNION {
        # For Don Dokken's band members
        ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
        VALUES (?member) { 
            # Replace with actual member URIs from Step 3
        }
    } .
    ?artist <http://dbpedia.org/property/associatedMusicalArtist> ?bandMember .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
701,32,val,Give me the parent of the child of Nefertari and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?commonChild (GROUP_CONCAT(?parent; separator="", "") AS ?parents) WHERE {
    # Step 1: Identify children of Nefertari
    <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?childNefertari.
    
    # Step 2: Identify children of Ramesses II
    <http://dbpedia.org/resource/Ramses_II> <http://dbpedia.org/ontology/child> ?childRamesses.

    # Step 3: Find common child
    FILTER(?childNefertari = ?childRamesses)
    
    # Step 4: Identify parents of the common child
    ?commonChild <http://dbpedia.org/property/parents> ?parent.
    FILTER(?commonChild = ?childNefertari && ?commonChild = ?childRamesses)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
55,18,val,"Give me the band of the reference, that is a band, to Newsted and band member of Metallica.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/band> ?band .
}
```",3,4,4,2,2,2,3,28,0,0,3,0,0.0,0
92,25,val,Give me the band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/memberOf> ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,36,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT DISTINCT ?war WHERE {
    # Find the professional who is an office holder and politician in the New Zealand Army
    ?person <http://dbpedia.org/ontology/profession> ?militaryUnit .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
            <http://dbpedia.org/ontology/politicalPartyMember> ?party .
    ?militaryUnit <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .

    # Find wars associated with this military unit
    ?militaryUnit <http://dbpedia.org/property/battle> ?war .

    # Find wars related to Beauchamp Seymour, 1st Baron Alcester
    OPTIONAL {
        <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/property/battle> ?war .
    }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,39,val,"Give me the actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Find actors of ""The Departed""
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .
}

UNION

# Find movies that are also works and television shows, then their actors
SELECT ?actor WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
767,41,val,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
# Part 1: Alma Mater of George K. Nash's Administration
SELECT ?entity ?almaMater WHERE {
    ?admin <http://dbpedia.org/ontology/administration> ?nashAdmin .
    ?nashAdmin <http://dbpedia.org/property/member> ?entity .
    ?entity <http://dbpedia.org/ontology/almaMater> ?almaMater .
    FILTER(?nashAdmin = <http://dbpedia.org/resource/Administration_of_George_K._Nash>)
}

# Part 2: Entity in Green's Administration That Is a Settlement
SELECT ?settlement WHERE {
    ?admin <http://dbpedia.org/ontology/administration> ?greenAdmin .
    ?greenAdmin <http://dbpedia.org/property/member> ?entity .
    ?entity <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
    FILTER(?greenAdmin = <http://dbpedia.org/resource/Administration_of_Green>)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
659,44,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Identify the societal event and military conflict involving Rutger Jan Schimmelpenninck
SELECT ?event WHERE {
    <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER(?type IN (<http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/MilitaryConflict>))
}

# Step 2: Identify the war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
SELECT ?war WHERE {
    <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?war .
}

# Step 3: Find the commander for the German campaign of 1813
SELECT ?commander WHERE {
    ?campaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?campaign <http://dbpedia.org/property/name> ""German campaign of 1813"" .
    ?campaign <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 4: Determine the military force associated with both Rutger Jan Schimmelpenninck's event and the commander of the German campaign
SELECT DISTINCT ?militaryForce WHERE {
    # Military force for Rutger Jan Schimmelpenninck's event
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce1 .
    
    # Military force for the commander of the German campaign
    ?commander <http://dbpedia.org/property/commandedMilitaryForce> ?militaryForce2 .

    FILTER(?militaryForce1 = ?militaryForce2)
}
```",5,10,6,2,3,3,3,71,0,0,7,0,0.0,0
528,32,val,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?battle1War ?battle2War WHERE {
  # Find the military force and its associated war for Battle of Pisagua
  ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> .
  ?militaryForce <http://dbpedia.org/property/country> ?country1 .
  ?war1 <http://dbpedia.org/ontology/participant> ?country1 .

  # Find the commander and its associated war for Battle of La Rinconada de Ate
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> .
  ?war2 <http://dbpedia.org/ontology/participant> ?country2 .
  ?commander <http://dbpedia.org/property/country> ?country2 .

  BIND(?war1 AS ?battle1War)
  BIND(?war2 AS ?battle2War)
}
```",4,4,5,2,2,3,3,71,0,0,8,0,0.0,0
294,12,val,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?restingPlace WHERE {
    OPTIONAL { 
        <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    }
    OPTIONAL { 
        <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    }
    FILTER EXISTS {
        ?restingPlace <http://www.w3.org/2000/01/rdf-schema#label> ?placeLabel .
        FILTER(CONTAINS(LCASE(?placeLabel), ""nashville, tennessee""))
    }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
48,15,val,"Give me the band of Murda Mook and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?murdaMookBand ?writer ?shellbackWork ?writerBand WHERE {
  # Find the band of Murda Mook
  <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/band> ?murdaMookBand .

  # Find works by Shellback and their writers
  ?work <http://dbpedia.org/property/works> <http://dbpedia.org/resource/Shellback_(record_producer)> .
  ?work <http://dbpedia.org/ontology/writer> ?writer .

  # Find the band of each writer
  ?writer <http://dbpedia.org/ontology/band> ?writerBand .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
547,40,val,Give me the resting place of Simon Cadell and resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Simon_Cadell> AS ?person)
  }
  UNION
  { 
    <http://dbpedia.org/resource/Alan_Cunningham_(actor)> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Alan_Cunningham_(actor)> AS ?person)
  }
  UNION
  {
    ?grandchild <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    ?parent <http://dbpedia.org/ontology/child> ?grandchild .
    <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?parent .
    BIND(?grandchild AS ?person)
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,40,val,Give me the band member of Don Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find band members of Don Dokken
SELECT ?member WHERE {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?member .
}

# Step 2: Find associated musical artists of Red Tide (band)
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/property/associatedActs> ?associatedArtist .
}

# Step 3: Find the associated musical artist of Watchtower
SELECT ?finalAssociatedArtist WHERE {
    ?watchtower <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Watchtower_(band)> .
    ?watchtower <http://dbpedia.org/property/associatedActs> ?finalAssociatedArtist .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,15,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of Alessandro Mangiarratti.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?club ?nickname WHERE {
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>.
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>.
    ?club <http://dbpedia.org/property/teamMember> <http://dbpedia.org/resource/Armando_Heeb>.
    ?club <http://dbpedia.org/property/teamMember> <http://dbpedia.org/resource/Alessandro_Mangiarratti>.
    ?club <http://dbpedia.org/ontology/nickname> ?nickname.
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,21,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
SELECT ?decedent WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/death> ?deathEvent .
    ?deathEvent <http://dbpedia.org/ontology/personDecedent> ?decedent .
  }
  UNION
  {
    ?event <http://dbpedia.org/property/location> ""Algiers"" .
    ?event <http://dbpedia.org/ontology/death> ?deathEvent .
    ?deathEvent <http://dbpedia.org/ontology/personDecedent> ?decedent .
    FILTER EXISTS { 
      ?person <http://dbpedia.org/ontology/jobTitle> ""US Assistant Secretary of State for African Affairs"" ;
               <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Joseph_C._Satterthwaite>
    }
  }
}
```",3,3,4,2,2,3,3,71,0,0,16,0,0.0,0
994,21,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT DISTINCT ?member ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?member .
    ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
    OPTIONAL { 
        ?associatedArtist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Watchtower_(band)> .
    }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
44,7,val,Give me the band member of the band of John Pettibone and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Find band members for bands associated with John Pettibone
  { 
    ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/John_Pettibone> .
    ?band <http://dbpedia.org/ontology/member> ?bandMember .
  }
  
  UNION
  
  # Find band members of Sledgeback
  {
    <http://dbpedia.org/resource/Sledgeback> <http://dbpedia.org/ontology/member> ?bandMember .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
645,11,val,"Give me the alma mater of Sylvia Pankhurst and entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Query for the alma mater of Sylvia Pankhurst
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

UNION

# Query for entities in the residence (country) of James Wilkes Maurice
SELECT ?entity WHERE {
    <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/ontology/residence> ?country .
    ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
712,12,val,Give me the capital of South Russia (1919–1920) and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?capital ?awardee ?restingPlace WHERE {
  # Task 1: Find the capital of South Russia (1919–1920)
  <http://dbpedia.org/resource/South_Russia_(1919%E2%80%931920)> <http://dbpedia.org/ontology/capital> ?capital .

  # Task 2: Find awardees of Hero of the Soviet Union and their resting places
  ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> .
  ?awardee <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
485,17,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in Nottinghamshire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?birthPlace WHERE {
    ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Eric_Gregory_Award> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet> .
    ?person <http://dbpedia.org/property/placeOfBirth> ?birthPlace .
    ?person <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Nottinghamshire> .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
488,44,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of Enomoto Takeaki and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Death place of Yūki Hideyasu's father (politician)
  ?father <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Yūki_Hideyasu> .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?father <http://dbpedia.org/property/deathPlace> ?result .

  UNION

  # Birth place of Enomoto Takeaki
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/property/birthPlace> ?result .

  UNION

  # Administration of Emperor Go-Mizunoo's father
  ?father2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Go-Mizunoo> .
  ?administration <http://dbpedia.org/property/administration> ?result .
  ?father2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?administration .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
303,18,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
SELECT ?party WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?person <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Panama> .
    ?person <http://dbpedia.org/ontology/name> ""Arnulfo Arias Madrid"" .
    ?person <http://dbpedia.org/property/politicalParty> ?party .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,17,val,"Give me the professional in  and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?profession ?band WHERE {
    <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    OPTIONAL { <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://dbpedia.org/ontology/profession> ?profession . }
    OPTIONAL { <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://dbpedia.org/property/bandMember> ?band . }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
92,22,val,Give me the band member of Nevermore and band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
# Query 1: Find band members of Nevermore
SELECT ?member WHERE {
    <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/member> ?member .
}

# Query 2: Find the band associated with Joseph Michael Furney
SELECT ?band WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael Furney""@en .
    ?person <http://dbpedia.org/ontology/band> ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
251,18,val,Give me the administration of Forza Italia (2013) and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
# Query to find the administration of Forza Italia in 2013
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/property/administration> ?administration .
}

# Query to find the death place of the author of The Twelve Abbots of Challant
SELECT ?deathPlace WHERE {
    ?author <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> .
    ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,11,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . }","```sparql
SELECT ?grandChild ?father WHERE {
    # Step 1: Find the royalty child of Maria Pavlovna
    <http://dbpedia.org/resource/Maria_Pavlovna_of_Russia_(1786–1859)> <http://dbpedia.org/ontology/child> ?royaltyChild .
    FILTER( <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>(?royaltyChild) <http://dbpedia.org/ontology/Royalty>) .

    # Step 2: Find the child of that royalty
    ?royaltyChild <http://dbpedia.org/ontology/child> ?grandChild .

    # Step 3: Identify William Ernest's father
    <http://dbpedia.org/resource/Wilhelm_Ernst,_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?father .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
184,43,val,"Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
# Step 1: Find parent of Géza von Habsburg
SELECT ?parentGéza WHERE {
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/parent> ?parentGéza .
}

# Step 2: Find parent of Archduchess Ilona of Austria
SELECT ?parentIlona WHERE {
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/parent> ?parentIlona .
}

# Step 3: Find common royal parent
SELECT DISTINCT ?commonParent WHERE {
    ?parentGéza <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?parentIlona <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    FILTER(?parentGéza = ?parentIlona)
}

# Step 4: Find child of the common parent
SELECT DISTINCT ?child WHERE {
    ?commonParent <http://dbpedia.org/ontology/child> ?child .
}

# Step 5: Find grandchild (child of the child) of the common parent
SELECT DISTINCT ?grandChild WHERE {
    ?child <http://dbpedia.org/ontology/child> ?grandChild .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
488,23,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?birthPlace WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?war <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Saitō_Hajime> .
    ?commander <http://dbpedia.org/property/commander> ?war .
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,6,4,3,1,3,3,71,0,0,17,0,0.0,0
492,39,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
# Step 1: Find the commander in the Franco-Hova Wars
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 2: Determine the capital of Algeria (country of Khemis Miliana District)
SELECT ?capital WHERE {
    <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Algeria> .
    <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
}

# Step 3: Find a person who died at the capital city
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/property/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/2000/01/rdf-schema#label> ?capitalLabel .
    FILTER(?capitalLabel = ""Algiers"") # Assuming Algiers is the capital from Step 2
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,24,val,Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT ?war WHERE {
    ?battle <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> .
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
           <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Narciso_Campero> ;
           <http://dbpedia.org/ontology/battle> ?battle .
    ?force <http://dbpedia.org/ontology/war> ?war .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
712,11,val,Give me the capital of the country of Armed Forces of South Russia and resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?capital ?restingPlace WHERE {
  # Query for the capital of the country associated with Armed Forces of South Russia
  <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .

  # Query for the resting place of Nina Onilova
  <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
281,43,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Step 1: Find the leader of the 1962 NSW election
SELECT ?leader WHERE {
    ?election <http://dbpedia.org/property/election> ""1962 New South Wales state election"" .
    ?election <http://dbpedia.org/ontology/politician> ?leader .
}

# Step 2: Determine the birthplace country of this leader
SELECT ?country WHERE {
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
    FILTER(?country <http://dbpedia.org/resource/Category:Countries>)
}

# Step 3: Identify wars associated with Beauchamp Seymour and the New Zealand Army
SELECT DISTINCT ?war1 ?war2 WHERE {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/war> ?war1 .
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/war> ?war2 .
}

# Step 4: Find a common entity in the birthplace country related to both wars
SELECT DISTINCT ?entity WHERE {
    ?country <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?entity .
    ?entity <http://dbpedia.org/ontology/war> ?war1 .
    ?entity <http://dbpedia.org/ontology/war> ?war2 .
    FILTER(?war1 = ?war2)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
318,7,val,Give me the person born in the founding year of Eel Pie Publishing and professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v2 . },"```sparql
SELECT ?person WHERE {
    <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?foundingYear .
    ?person <http://dbpedia.org/property/birthDate> ?birthDate .
    FILTER(YEAR(?birthDate) = ?foundingYear)
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Composer> .
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
404,39,val,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
SELECT ?parentOfPrinceErnest WHERE {
    ?princeErnest <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?princeErnest <http://dbpedia.org/property/birthYear> ""1914""^^<http://www.w3.org/2001/XMLSchema#gYear> .
    ?princeErnest rdfs:label ""Prince Ernest Augustus of Hanover""@en .

    ?princessVictoriaLouise <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?princessVictoriaLouise rdfs:label ""Princess Victoria Louise of Prussia""@en .
    ?princessVictoriaLouise <http://dbpedia.org/property/spouse> ?spouse .

    ?spouse <http://dbpedia.org/ontology/father> ?fatherOfSpouse .
    ?fatherOfSpouse <http://dbpedia.org/ontology/child> ?parentOfPrinceErnest .

    ?princeErnest <http://dbpedia.org/ontology/parent> ?parentOfPrinceErnest .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
339,12,val,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?child ?father WHERE {
    ?child <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Elena_Vladimirovna_of_Russia>.
    ?child <http://dbpedia.org/ontology/father> ?father.
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/George_I_of_Greece>.
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
328,32,val,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Part 1: Find the commander of the force associated with Ferenc Szálasi
SELECT ?commander WHERE {
    ?force <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Hungary>.
    ?force <http://dbpedia.org/property/ruler> <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi>.
    ?force <http://dbpedia.org/ontology/commander> ?commander.
}

# Part 2: Find awardees of the awards received by Bruce Fraser, 1st Baron Fraser of North Cape
SELECT DISTINCT ?awardee WHERE {
    ?fraser <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
981,13,val,"Give me the entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
SELECT ?entity WHERE {
    <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://dbpedia.org/ontology/entityInRegion> ?region .
    ?region <http://dbpedia.org/ontology/entityInRegion> ?entity .
}
```",3,3,4,3,1,3,2,20,0,0,2949,0,0.0,0
754,14,val,Give me the parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> .
    ?child <http://dbpedia.org/ontology/child> ?parent .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
16,27,val,Give me the person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?alumnus ?birthName WHERE {
    ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Ohio_State_University>.
    ?alumnus <http://dbpedia.org/property/birthName> ?birthName.
}
```",3,3,4,3,1,3,3,71,0,0,90,0,0.0,0
303,19,val,"Give me the entity in Panama and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
# Find Arnulfo Arias's party
SELECT ?ariasParty WHERE {
    <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/memberOf> ?ariasParty .
}

# Find the commander of the United States invasion of Panama and their party
SELECT ?commander, ?commanderParty WHERE {
    ?commander <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .
    ?commander <http://dbpedia.org/ontology/memberOf> ?commanderParty .
}

# Find a common entity in Panama related to both parties
SELECT DISTINCT ?entity WHERE {
    ?ariasParty <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Panama> .
    ?commanderParty <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Panama> .
    ?entity <http://dbpedia.org/ontology/memberOf> ?ariasParty ;
            <http://dbpedia.org/ontology/memberOf> ?commanderParty .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
617,21,val,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
SELECT ?grandchild WHERE {
    # Step 1: Identify Seleucus II Callinicus and his royal children
    ?royalChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
    ?royalChild a <http://dbpedia.org/ontology/Royalty> .

    # Step 2: Find the grandchildren of Seleucus II Callinicus
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?royalChild .

    # Step 3: Identify Nysa and find her child who is a grandchild of Seleucus II Callinicus
    ?nysa <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Wife> ;
          <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Pharnaces_I_of_Pontus> .
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?nysa .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
996,15,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
SELECT ?awardee ?force WHERE {
    # Step 1: Identify Lac d'Avoriaz and its elevation-related award
    <http://dbpedia.org/resource/Lac_d%27Avoriaz> <http://dbpedia.org/ontology/elevation> ?elevation .
    
    # Step 2: Find awardees of the elevation-related award
    ?awardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?award = ?elevation) .

    # Step 3: Check if these awardees are linked to any military force
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/militaryForce> ?force . }
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
92,36,val,Give me the band of the person born as the birth name of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?band WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael""@en .
    ?person <http://dbpedia.org/property/memberOfBand> <http://dbpedia.org/resource/Nevermore_(band)> .
    ?person <http://dbpedia.org/ontology/band> ?band .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,28,val,"Give me the commander in Franco-Hova Wars and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . }","```sparql
SELECT ?person WHERE {
    # Find commanders in Franco-Hova Wars
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Franco-Hova_Wars>.
    ?battle <http://dbpedia.org/ontology/commander> ?person.

    # Find decedents related to Joseph C. Satterthwaite's work
    OPTIONAL {
        ?satterthwaiteWork <http://dbpedia.org/property/death> ?deathEvent.
        ?deathEvent <http://dbpedia.org/ontology/person> ?person.
        ?satterthwaiteWork <http://dbpedia.org/resource/Joseph_C._Satterthwaite>.
    }

    # Find decedents related to Algiers
    OPTIONAL {
        ?algiersEvent <http://dbpedia.org/property/death> ?deathEvent.
        ?deathEvent <http://dbpedia.org/ontology/person> ?person.
        ?algiersEvent <http://dbpedia.org/resource/Algiers>.
    }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
232,21,val,Give me the native of London and child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?child WHERE {
    <http://dbpedia.org/resource/John_Devon_Roland_Pertwee> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/London> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
645,15,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of Sylvia Pankhurst.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?commonEntity WHERE {
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Diamond_Rock> .
    ?sylvia <http://dbpedia.org/property/almaMater> ?almaMater .
    FILTER(?sylvia = <http://dbpedia.org/resource/Sylvia_Pankhurst>) .

    ?commander <http://dbpedia.org/ontology/residence> ?residence1 .
    ?almaMater <http://dbpedia.org/ontology/location> ?residence2 .

    ?residence1 <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel1 .
    ?residence2 <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel2 .

    FILTER((?countryLabel1 = ?countryLabel2) && (STRLEN(?countryLabel1) > 0))

    OPTIONAL { ?residence1 ?commonProperty ?commonEntity . }
    OPTIONAL { ?residence2 ?commonProperty ?commonEntity . }

    FILTER(BOUND(?commonEntity))
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
488,24,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?deathPlace ?administration WHERE {
  # Death place of Yūki Hideyasu's father (politician)
  {
    <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/ontology/father> ?father .
    ?father a <http://dbpedia.org/ontology/Politician> .
    ?father <http://dbpedia.org/property/deathPlace> ?deathPlace .
  }
  
  UNION
  
  # Administration of Emperor Go-Yōzei
  {
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/administration> ?administration .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
435,15,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
SELECT ?work ?administeredTerritory WHERE {
    # Part 1: Find the work or subject of Article 62, Section IV of Constitution of Iceland
    <http://dbpedia.org/resource/Constitution_of_Iceland#Article_62> <http://www.w3.org/2000/01/rdf-schema#comment> ?work .

    # Part 2: Identify territories administered from Reykjavik (Land of fire and ice)
    ?administeredTerritory <http://dbpedia.org/ontology/administrativeUnit> <http://dbpedia.org/resource/Reykjavik> .
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
838,15,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić and band member of Kerber.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?commonMember ?band WHERE {
    ?band1 <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/%C5%BDika_Jeli%C4%87>.
    ?band2 <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Kerber_(band)>.
    ?commonMember <http://dbpedia.org/ontology/member> ?band1;
                  <http://dbpedia.org/ontology/member> ?band2.
    FILTER(?commonMember != <http://dbpedia.org/resource/%C5%BDika_Jeli%C4%87> && ?commonMember != <http://dbpedia.org/resource/Kerber_(band)>)
    ?commonMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>;
                  <http://dbpedia.org/ontology/MusicalArtist>.
    ?commonMember <http://dbpedia.org/ontology/member> ?band.
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,35,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?commanderInMolaEvent ?militaryForceInFrancoEvent WHERE {
  # Find the commander in an event associated with Emilio Mola
  ?event <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://dbpedia.org/ontology/commander> ?commanderInMolaEvent .

  # Find the military force in an event associated with Francisco Franco
  ?conflict <http://dbpedia.org/ontology/battle> ?militaryForceInFrancoEvent .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>, <http://dbpedia.org/ontology/MilitaryConflict> .
  ?conflict <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> .
}
```",4,8,5,2,2,3,3,71,0,0,34,0,0.0,0
421,12,val,Give me the native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović and band member of Senidah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/nativeCountry> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
    ?person <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović"" .
    ?person <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Senidah> .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
391,41,val,"Give me the actor of All About the Andersons and native of the figure known as Hub City and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
# Step 1: Find the actor of ""All About the Andersons""
SELECT ?actor WHERE {
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    ?film <http://purl.org/dc/terms/title> ""All About the Andersons"" .
}

# Step 2: Determine the native city (Hub City) of this actor
SELECT DISTINCT ?nativeCity WHERE {
    ?actor <http://dbpedia.org/property/nationality> ?nationality .
    ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?nativeCity .
}

# Step 3: Find the claim to fame (a work) of Michael Ballhaus and identify its actors
SELECT DISTINCT ?work ?actor WHERE {
    ?ballhaus <http://dbpedia.org/ontology/work> ?work .
    ?work <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Michael_Ballhaus> .
    ?work <http://dbpedia.org/ontology/starring> ?actor .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
115,7,val,Give me the alma mater of the alumnus of National University of San Marcos and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
SELECT ?almaMater WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Alumnus>.
    ?person <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos>.
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Jorge Sotomayor Tello""@en.
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater.
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
303,12,val,Give me the party of Guillermo Endara and party of Arnulfo Arias and entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?endaraParty ?ariasParty ?panamaEntity WHERE {
    <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/politicalParty> ?endaraParty .
    <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/politicalParty> ?ariasParty .
    ?panamaEntity <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Panama> .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
294,14,val,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of the architect of P. D. Houston Jr. House.","SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?person ?name ?restingPlace WHERE {
  { 
    ?person <http://dbpedia.org/property/birthYear> ""1879"" .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    FILTER(CONTAINS(LCASE(?name), ""luke lea"") && CONTAINS(LCASE(?name), ""american politician""))
    OPTIONAL { ?person <http://dbpedia.org/ontology/restingPlace> ?restingPlace . }
  } UNION {
    ?house <http://dbpedia.org/property/architect> ?architect .
    ?house <http://www.w3.org/2000/01/rdf-schema#label> ""P. D. Houston Jr. House"" .
    ?architect <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    OPTIONAL { ?architect <http://dbpedia.org/ontology/restingPlace> ?restingPlace . }
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,27,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?agencyLeader WHERE {
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
    ?office <http://dbpedia.org/ontology/politician> _:politician.
    ?office <http://dbpedia.org/property/holder> <http://dbpedia.org/resource/Gustav_Jonson>.

    ?agency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>.
    ?office <http://dbpedia.org/property/associatedWith> ?agency.

    ?agency <http://dbpedia.org/ontology/leader> ?agencyLeader.
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
778,12,val,"Give me the entity in United States and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?software ?entity WHERE {
    <http://dbpedia.org/resource/Bill_Joy> <http://dbpedia.org/ontology/work> ?software .
    ?software <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .
    ?software <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> .
    ?entity <http://dbpedia.org/ontology/software> ?software .
    ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
161,30,val,"Give me the military force of Rif War and military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT DISTINCT ?militaryForce WHERE {
  # Find military forces involved in the Rif War
  ?rifWar <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War>.
  ?rifWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.

  # Find military forces involved in the Spanish Civil War
  ?civilWar <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War>.
  ?civilWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.

  # Find common military forces
  FILTER(?rifWar = ?civilWar)
  
  # Check if Emilio Mola was a commander of these forces
  ?rifWar <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola>.
}
```",4,5,5,2,3,3,3,71,0,0,11,0,0.0,0
994,30,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?redTideArtist ?dokkenBandMember ?saSlayerArtist WHERE {
  # Associated musical artist of Red Tide (band)
  OPTIONAL { 
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/member> ?redTideArtist .
  }

  # Band member of Donald Maynard Dokken
  OPTIONAL {
    ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken"" .
    ?dokken <http://dbpedia.org/ontology/member> ?dokkenBandMember .
  }

  # Associated musical artist of S.A. Slayer
  OPTIONAL {
    <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/member> ?saSlayerArtist .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
161,22,val,"Give me the military force of Rif War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?militaryForce ?commander WHERE {
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War>.
    ?militaryForce <http://dbpedia.org/ontology/commander> ?commander.
    FILTER(?commander = <http://dbpedia.org/resource/Emilio_Mola>)
}
```",3,4,4,2,2,3,3,71,0,0,12,0,0.0,0
9,20,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?awardeeAlmaMater ?johnAlderdiceAlmaMater WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater .

    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?johnAlderdiceAlmaMater .
}
```",3,3,4,2,2,3,3,71,1,30,0,0.03225806451612903,1.0,0.0625
360,17,val,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to Manfred Mann.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
SELECT ?nativePlace ?manfredMannReference WHERE {
    # Step 1: Identify the death place of Winnie Madikizela-Mandela
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    
    # Step 2: Ensure the death place is a settlement
    ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

    # Step 3: Find the native place of this settlement
    ?deathPlace <http://dbpedia.org/property/nativeName> ?nativePlace .
    
    # Step 4: Identify any reference to Manfred Mann in relation to Winnie Madikizela-Mandela
    OPTIONAL {
        ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> .
        ?reference <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/Manfred_Mann> .
        BIND(<http://dbpedia.org/resource/Manfred_Mann> AS ?manfredMannReference)
    }
}
```",3,4,4,2,2,2,3,28,0,1,1,0.0,0.0,0
378,33,val,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query for Carl Pontus Gahn's wars
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/war> ?war .
}

UNION

# Query for the commander of a conflict related to the Peninsular War and their wars
SELECT ?commanderWar WHERE {
    ?conflict <http://dbpedia.org/property/reference> ""Peninsular War"" ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?conflict <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?commanderWar .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
996,13,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Lac_d%27Avoriaz> <http://dbpedia.org/property/elevation> ?elevation .
    ?award <http://dbpedia.org/ontology/subject> ?elevation .
    ?awardee <http://dbpedia.org/property/awards> ?award .
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?awardee <http://dbpedia.org/ontology/country> ?force .
}
```",3,3,4,3,1,3,2,20,0,0,11,0,0.0,0
281,34,val,Give me the war of the awardee of the award of Jonathon Band and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT DISTINCT ?war WHERE {
    # Step 1: Find awards received by Jonathon Band
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?award .

    # Step 2: Find other awardees of those awards
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    
    # Step 3: Identify wars associated with these awardees
    ?otherAwardee <http://dbpedia.org/ontology/battle> ?war .

    UNION

    # Step 4: Find wars involving the New Zealand Army
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?war .
}
```",4,4,5,3,2,3,3,71,0,0,9,0,0.0,0
55,15,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band of Newsted.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Find the band that produced ""Used to Love Her""
  ?producer <http://dbpedia.org/ontology/member> ?bandMember .
  ?producer <http://dbpedia.org/property/producedAlbums> <http://dbpedia.org/resource/Used_to_Love_Her> .

  UNION

  # Find the band associated with Newsted
  <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/member> ?band .
  ?band <http://dbpedia.org/ontology/member> ?bandMember .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
981,12,val,"Give me the birth place of the person born, that is a beauty queen, as  and entity in Indonesia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/birthName> """"@en . }","```sparql
SELECT ?person ?birthPlace WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
    ?person <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Indonesia> .
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,4,4,2,2,3,2,20,0,0,19,0,0.0,0
534,11,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Query 1: Headquarters of Royal Dublin Society
SELECT ?headquarters WHERE {
    <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?headquarters .
}

UNION

# Query 2: Birthplace of the child who is a politician and an office holder of Desmond FitzGerald
SELECT ?birthPlace WHERE {
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?child <http://dbpedia.org/ontology/officeHolder> ?office .
    <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
161,42,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?commander WHERE {
    # Find the military force commanded by Emilio Mola
    ?militaryForce1 <http://dbpedia.org/ontology/commander> ?commander .
    ?militaryForce1 <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Spanish_Civil_War> .

    # Find the military force associated with Francisco Franco in the Spanish Civil War
    ?militaryForce2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> .
    ?militaryForce2 <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Spanish_Civil_War> .

    # Ensure the commander is common to both forces
    FILTER(?militaryForce1 = ?militaryForce2)
}
```",5,9,6,2,3,3,3,71,0,0,32,0,0.0,0
801,35,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?writer ?associatedArtist WHERE {
    ?writer <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
    ?writer <http://dbpedia.org/ontology/alterEgo> ""The Shadow"" .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",4,6,5,2,2,3,3,71,0,0,22,0,0.0,0
801,32,val,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?professional ?producer WHERE {
  ?entity <http://dbpedia.org/property/alterEgo> ""The Shadow"" .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?professional .

  OPTIONAL {
    ?work <http://dbpedia.org/ontology/work> ?song .
    ?work <http://dbpedia.org/ontology/song> [] .
    ?work <http://dbpedia.org/ontology/musicalWork> [] .
    ?work <http://dbpedia.org/resource/50_Cent> <http://dbpedia.org/property/creator> [] .
    ?work <http://dbpedia.org/property/producer> ?producer .
  }
}
```",4,7,5,2,2,3,3,71,0,0,27,0,0.0,0
534,12,val,Give me the birth place of Garret FitzGerald and headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . },"```sparql
SELECT ?birthPlace ?headquarters WHERE {
    # Query for birthplace of Garret FitzGerald
    <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    
    # Query for headquarters of the owner of RDS Arena
    OPTIONAL {
        <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?owner .
        ?owner <http://dbpedia.org/ontology/headquarter> ?headquarters .
    }
}
```",3,3,4,2,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
392,16,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in Italy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
SELECT ?result WHERE {
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SettlementsInItaly108069068>.
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>.
    ?residence <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Settlements_in_Italy>.
    <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/ontology/residence> ?residence.
    ?residence <http://dbpedia.org/property/province> ?result.
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
421,18,val,Give me the person born as the birth name of Dino Merlin and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Dino Merlin"" .
  ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
488,25,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for the death place of Tokugawa Ieyasu
SELECT ?deathPlace WHERE {
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}

# Query for the administration of the father of Emperor Go-Mizunoo
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/officeHolder> ?administration .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,23,val,Give me the child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?child WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Jon Pertwee"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?person <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
488,18,val,Give me the birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
SELECT ?person ?birthPlace ?deathPlace ?administration WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Enomoto_Takeaki>
    <http://dbpedia.org/resource/Tokugawa_Ieyasu>
    <http://dbpedia.org/resource/Emperor_Go-Yōzei>
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER(?person = <http://dbpedia.org/resource/Enomoto_Takeaki>)
  }

  OPTIONAL {
    ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    FILTER(?person = <http://dbpedia.org/resource/Tokugawa_Ieyasu>)
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/property/reign> ?administration .
    FILTER(?person = <http://dbpedia.org/resource/Emperor_Go-Yōzei>)
  }
}
```",3,3,4,1,3,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
820,13,val,Give me the professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . },"```sparql
SELECT ?award ?professional WHERE {
    <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?award .
    ?professional <http://dbpedia.org/property/awards> ?award .
    FILTER(?professional != <http://dbpedia.org/resource/Scott_McCloud>)
}
```",3,3,4,3,1,3,2,20,540,6112,39110,0.08117859290438965,0.013619167717528373,0.023325126344434365
378,25,val,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
# Query 1: Wars of Joaquín Blake
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?war .
}

# Query 2: Claim to fame of the commander in Great Siege of Gibraltar
SELECT ?commander ?fame WHERE {
    ?battle <http://dbpedia.org/property/commander> ?commander .
    ?battle <http://www.w3.org/2000/01/rdf-schema#label> ""Great Siege of Gibraltar""@en .
    OPTIONAL { ?commander <http://dbpedia.org/ontology/awards> ?fame . }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
281,32,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT DISTINCT ?entity WHERE {
    # Step 1: Identify Bob Heffron's birthplace that is a country
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/property/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ""Australia""^^xsd:string .

    # Step 2: Find individuals awarded Knight Grand Cross of the Order of the Bath
    ?awardee <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Knight Grand Cross of the Order of the Bath"" .

    # Step 3: Determine wars associated with these awardees
    ?awardee <http://dbpedia.org/property/battle> ?battle .
    
    # Step 4: Find entity in Bob Heffron's birthplace related to the war
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    ?entity <http://dbpedia.org/ontology/country> ?birthPlace .
    ?battle <http://dbpedia.org/property/location> ?location .
    FILTER(?location = ?entity)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
492,41,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
SELECT ?conflict WHERE {
    ?herr <http://dbpedia.org/ontology/battle> ?conflict .
    ?herr <http://www.w3.org/2000/01/rdf-schema#label> ""Frédéric-Georges Herr"" .
    
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    
    ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> ;
            <http://dbpedia.org/ontology/battle> ?conflict .
    
    ?satterthwaite <http://dbpedia.org/property/work> ?role .
    ?role <http://www.w3.org/2000/01/rdf-schema#label> ""US Assistant Secretary of State for African Affairs"" ;
          <http://dbpedia.org/ontology/battle> ?conflict .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
232,43,val,"Give me the native of London and child of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
# Step 1: Find Jon Pertwee's child who is native to London
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/London> .
}

# Step 2: Find the claim to fame that is both a film and a military conflict
SELECT DISTINCT ?claimToFame WHERE {
    ?person <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Actor> .
    ?person <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Narrator> .
    ?person <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Producer> .
    ?person <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film98b1e5c0> .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108a8d7f> .
}

# Step 3: Find the actor associated with this claim to fame
SELECT DISTINCT ?actor WHERE {
    ?person <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Actor> .
    ?person <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film98b1e5c0> .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108a8d7f> .
    ?person <http://dbpedia.org/ontology/nationality> ?actor .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
747,19,val,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?person WHERE {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?person <http://dbpedia.org/property/band> <http://dbpedia.org/resource/Amba_Shepherd> .
    FILTER(?person != <http://dbpedia.org/resource/Pavlo_Khudzik>)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,11,val,Give me the spouse of Aristotle Onassis and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?child <http://dbpedia.org/ontology/parent> ?spouse .
    ?tinaChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Tina_Onassis_Niarchos> .
    FILTER(?child = ?tinaChild)
}
```",3,3,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
547,43,val,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/James_Burton_(Egyptologist)> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Alan_Cunningham_(explorer)> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Alan_Cunningham_(explorer)> AS ?person)
  }
  UNION
  {
    ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Emily_Richard> .
    ?actor <http://dbpedia.org/ontology/starring> ?show .
    ?actor <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    BIND(?actor AS ?person)
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
801,21,val,Give me the associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

UNION

SELECT ?profession WHERE {
    ?shadow <http://www.w3.org/2000/01/rdf-schema#label> ""The Shadow""@en .
    ?shadow <http://dbpedia.org/property/profession> ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
435,18,val,Give me the region of Greenwich Mean Time and work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v0 . },"```sparql
# Query for the region associated with Greenwich Mean Time
SELECT ?region WHERE {
    <http://dbpedia.org/resource/Greenwich_Mean_Time> <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://dbpedia.org/property/country> ?country .
    OPTIONAL { ?country <http://www.w3.org/ns/prov#location> ?region . }
}

# Query for the works of the author of ""Iceland""
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Iceland_(book)> <http://purl.org/dc/terms/creator> ?author .
    ?author <http://purl.org/dc/terms/created> ?work .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,20,val,Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> .
}

UNION

SELECT ?commander WHERE {
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?force <http://dbpedia.org/ontology/commander> ?commander.
    ?force <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi>.
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
754,12,val,Give me the parent of the child of Ram Khamhaeng and parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?childOfRamKhamhaeng ?parentOfChild ?parentOfLoeThai WHERE {
    <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?childOfRamKhamhaeng .
    ?childOfRamKhamhaeng <http://dbpedia.org/ontology/parent> ?parentOfChild .

    <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?parentOfLoeThai .
}
```",3,3,4,2,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
994,32,val,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?finalArtist WHERE {
    # Step 1: Find associated musical artist of Watchtower (band)
    ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Watchtower_(band)> .
    
    # Step 2: Identify Meshuggah's band member who is also a band and an organization
    ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> ;
                     <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
                     <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Meshuggah> .
    
    # Step 3: Find associated musical artist of that band member
    ?memberArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?meshuggahMember .
    
    # Step 4: Find the associated musical artist of the result from step 1
    ?finalArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
}
```",4,7,5,2,2,3,3,71,0,0,5,0,0.0,0
391,19,val,Give me the native of the figure known as Hub City and actor of The Departed.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
SELECT ?native WHERE {
    ?actor <http://dbpedia.org/ontology/nickName> ""Hub City""@en .
    ?actor <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/The_Departed> .
    ?actor <http://dbpedia.org/ontology/birthPlace> ?native .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,18,val,Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
    ?biscayCampaign <http://dbpedia.org/ontology/battleCommander> ?commander .
    FILTER(?biscayCampaign = <http://dbpedia.org/resource/Biscay_Campaign>) .

    OPTIONAL { 
        ?spanishCivilWarForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
        ?spanishCivilWarForce <http://dbpedia.org/ontology/militaryConflict> <http://dbpedia.org/resource/Spanish_Civil_War> .
        ?spanishCivilWarForce <http://dbpedia.org/ontology/battleCommander> ?commander .
    }

    OPTIONAL {
        ?rifWarForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
        ?rifWarForce <http://dbpedia.org/ontology/militaryConflict> <http://dbpedia.org/resource/Rif_War> .
        ?rifWarForce <http://dbpedia.org/ontology/battleCommander> ?commander .
    }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
48,13,val,"Give me the band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?band WHERE {
    ?work <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Shellback_(record_producer)> .
    ?work <http://purl.org/dc/terms/creator> ?writer .
    ?writer <http://dbpedia.org/property/band> ?band .
}
```",3,4,4,3,1,3,2,20,0,0,922,0,0.0,0
54,23,val,Give me the child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchild WHERE {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/child> ?grandchild .
}
```",3,3,4,3,1,3,3,71,3,0,0,1.0,1.0,1.0
435,19,val,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
SELECT ?territory WHERE {
    <http://dbpedia.org/resource/Reykjavík> <http://dbpedia.org/ontology/administrativeUnit> ?territory .
}
```",4,7,5,2,3,2,3,28,0,0,1,0,0.0,0
314,14,val,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
SELECT ?award ?otherAwardee WHERE {
    # Find awards for Sergei Makovetsky
    { 
        <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?award .
        ?otherAwardee <http://dbpedia.org/property/awards> ?award .
        FILTER(?otherAwardee != <http://dbpedia.org/resource/Sergei_Makovetsky>)
    }
    
    UNION
    
    # Find awards for individuals deceased in Madrid
    { 
        ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
        ?person <http://dbpedia.org/property/awards> ?award .
        ?otherAwardee <http://dbpedia.org/property/awards> ?award .
        FILTER(?otherAwardee != ?person)
    }
}
```",3,3,4,2,2,2,3,28,1,9546,0,0.00010474494605635278,1.0,0.00020946795140343527
617,15,val,"Give me the parent of Mieszko II Lambert and child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?parentOfMieszko ?royalChild ?childOfMlada WHERE {
    # Step 1: Find the parent of Mieszko II Lambert
    OPTIONAL { <http://dbpedia.org/resource/Mieszko_II_Lambert> <http://dbpedia.org/ontology/father> ?father . BIND(?father AS ?parentOfMieszko) }
    OPTIONAL { <http://dbpedia.org/resource/Mieszko_II_Lambert> <http://dbpedia.org/ontology/mother> ?mother . BIND(?mother AS ?parentOfMieszko) }

    # Step 2: Find the child of that parent who is royalty
    ?parentOfMieszko <http://dbpedia.org/ontology/child> ?royalChild .
    ?royalChild <http://www.w3.org/2000/01/rdf-schema#label> ?labelRoyalChild .
    FILTER(CONTAINS(LCASE(?labelRoyalChild), ""king"") || CONTAINS(LCASE(?labelRoyalChild), ""queen""))

    # Step 3: Find the parent of Mlada (abbess)
    OPTIONAL { <http://dbpedia.org/resource/Mlada_(abbess)> <http://dbpedia.org/ontology/father> ?fatherMlada . BIND(?fatherMlada AS ?parentOfMlada) }
    OPTIONAL { <http://dbpedia.org/resource/Mlada_(abbess)> <http://dbpedia.org/ontology/mother> ?motherMlada . BIND(?motherMlada AS ?parentOfMlada) }

    # Step 4: Find the child of the royal child
    ?royalChild <http://dbpedia.org/ontology/child> ?childOfRoyalChild .
    OPTIONAL { ?childOfRoyalChild <http://dbpedia.org/ontology/father> ?fatherChild . BIND(?fatherChild AS ?childOfMlada) }
    OPTIONAL { ?childOfRoyalChild <http://dbpedia.org/ontology/mother> ?motherChild . BIND(?motherChild AS ?childOfMlada) }

}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,17,val,"Give me the party of Arnulfo Arias and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?party ?country WHERE {
    <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/politicalParty> ?party .
    <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?country .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
392,12,val,Give me the region of Central European Time and entity in Italy and province of Schio.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?region WHERE {
    ?timeZone <http://dbpedia.org/ontology/timeZone> ""Central European Time"" .
    ?region <http://www.w3.org/2006/time#during> ?timeZone .
    OPTIONAL { ?region <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Italy> . }
    OPTIONAL { ?schio <http://dbpedia.org/ontology/province> ?region . 
               FILTER(STR(?schio) = ""Schio"") }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
285,12,val,Give me the spouse of the professional in  and parent of Alexander Onassis.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?spouse WHERE {
    ?parent <http://dbpedia.org/ontology/name> ""Alexander Onassis"" .
    ?parent <http://dbpedia.org/ontology/birthName> ""Alexander Onassis"" .
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Alexander_Onassis> .
    ?parent <http://dbpedia.org/property/spouse> ?spouse .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
492,22,val,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
# Query for persons deceased in French Algeria
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
}

UNION

# Query for persons deceased in Algiers, the capital of Algeria
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
}
```",3,4,4,2,2,3,3,71,0,0,16,0,0.0,0
16,32,val,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of Satomi Ishihara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",4,4,5,2,2,3,3,71,1,0,0,1.0,1.0,1.0
378,35,val,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
# Query 1: Wars associated with Carl Pontus Gahn
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
}

# Query 2: Claim to fame of the commander in Great Siege of Gibraltar
SELECT ?commander ?claimToFame WHERE {
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/claimToFame> ?claimToFame .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
747,40,val,"Give me the band of Amba Shepherd and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?ambaBand ?shenaBand ?personBornOnDecedentsBirthDate WHERE {
    # Find Amba Shepherd's band
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/memberOf> ?ambaBand .

    # Find Shèna's band
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/memberOf> ?shenaBand .

    # Identify the athlete and soccer player who died in Zolotonosha
    ?decedent a <http://dbpedia.org/ontology/Athlete> ;
              a <http://dbpedia.org/ontology/SoccerPlayer> ;
              <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Zolotonosha> .

    # Get the birth date of this decedent
    ?decedent <http://dbpedia.org/property/birthDate> ?birthDate .

    # Find a person born on that same birth date
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
783,14,val,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?bandMember WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>.
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
    ?person <http://dbpedia.org/property/persona> <http://dbpedia.org/resource/Ebony_Reigns>.
    ?person <http://dbpedia.org/ontology/member> ?bandMember.
}
```",3,5,4,3,1,3,2,20,0,0,7,0,0.0,0
161,27,val,"Give me the commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?event ?commander WHERE {
    ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""El Director""@en .
    ?figure <http://dbpedia.org/ontology/event> ?event .
    ?event <http://dbpedia.org/ontology/militaryForce> ?force .
    ?force <http://dbpedia.org/ontology/commander> ?commander .
}
```",3,4,4,3,1,3,3,71,0,0,85,0,0.0,0
427,31,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?giulioParty ?micheleParty WHERE {
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?giulioParty .
    <http://dbpedia.org/resource/Michele_Pinto_(politician)> <http://dbpedia.org/ontology/politicalParty> ?micheleParty .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
54,25,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
# Step 1: Find Thihapate of Mohnyin's child who is an office holder and royalty
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 2: Find the predecessor of this child
SELECT ?predecessor WHERE {
    ?office <http://dbpedia.org/property/holder> ?child .
    ?office <http://dbpedia.org/property/predecessor> ?predecessor .
}

# Step 3: Find Thado Minsaw of Prome's parent
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?parent .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
820,11,val,Give me the child of Jack Schwartzman and professional in the award of Scott McCloud.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
SELECT ?child ?award WHERE {
    <http://dbpedia.org/resource/Jack_Schwartzman> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://purl.org/dc/terms/profession> ?profession .
    
    ?awardee <http://purl.org/dc/terms/profession> ?profession .
    ?awardee <http://dbpedia.org/property/awards> ?award .
    
    <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?award .
    
    FILTER(?child = ?awardee)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,25,val,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?child ?parent WHERE {
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/spouse> ?mother .
    ?antiochus <http://dbpedia.org/ontology/birthParent> ?mother ;
               <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
    ?antiochus <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Laodice_IV> .
    ?child <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,39,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?andreottiParty ?prodisBirthName ?prodisParty WHERE {
    # Get the party of Giulio Andreotti
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?andreottiParty .
    
    # Get Romano Prodi's birth name
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?prodisBirthName .

    # Find the person with that birth name who is an office holder and a politician, then get their party
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?person <http://dbpedia.org/property/birthName> ?prodisBirthName .
    ?person <http://dbpedia.org/ontology/politicalParty> ?prodisParty .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
54,43,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parentOfThado WHERE {
    # Step 1: Find Thado Minsaw's parent
    ?thadoMinsaw <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
    ?thadoMinsaw <http://dbpedia.org/ontology/child> ?parentOfThado .

    # Step 2 & 3: Find Ameitta Thiri Maha Dhamma Dewi's predecessor who is also a child of Thinkhaya
    ?ameittaPredecessor <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/ontology/predecessor> .
    ?ameittaPredecessor <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .

    # Step 4: Ensure the predecessor is Thado Minsaw
    FILTER(?thadoMinsaw = ?ameittaPredecessor)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
184,38,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
SELECT ?parent WHERE {
    # Step 1: Find child of Archduke Joseph Francis of Austria
    ?child1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
    
    # Step 2: Find grandchild of Archduke Joseph Francis (child of the child)
    ?grandchild1 <http://dbpedia.org/ontology/child> ?child1 .

    # Step 3: Find child of Archduke Joseph Karl of Austria
    ?child2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
    
    # Step 4: Find grandchild of Archduke Joseph Karl (child of the child)
    ?grandchild2 <http://dbpedia.org/ontology/child> ?child2 .

    # Step 5: Find parent of both grandchildren
    ?parent <http://dbpedia.org/ontology/child> ?grandchild1 .
    ?parent <http://dbpedia.org/ontology/child> ?grandchild2 .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
528,19,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
    ?pisaguaForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> .
    ?barbosaForce <http://dbpedia.org/ontology/battle> ?barbosaWar .
    ?commonWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Battle> .
    FILTER(?pisaguaForce = ?commonWar || ?barbosaForce = ?commonWar)
    FILTER(?war = ?commonWar)
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
659,30,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813 and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce WHERE {
    ?militaryConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>.
    ?militaryConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?militaryConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.

    ?campaign <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
    ?campaign <http://www.w3.org/2000/01/rdf-schema#label> ""German campaign of 1813""@en.

    ?battle <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
    ?battle <http://www.w3.org/2000/01/rdf-schema#label> ""Battle of Leipzig""@en.

    ?militaryConflict <http://dbpedia.org/ontology/battle> ?campaign.
    ?militaryConflict <http://dbpedia.org/ontology/battle> ?battle.

    ?militaryConflict <http://dbpedia.org/property/militaryForce> ?militaryForce.
}
```",4,7,5,2,3,3,3,71,0,0,6,0,0.0,0
801,31,val,Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?producer WHERE {
    <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .
}

UNION

SELECT ?professionalType WHERE {
    ?shadowAlterEgo <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?professionalType .
    ?trueSelf <http://dbpedia.org/property/alterEgo> ?shadowAlterEgo .
    ?trueSelf rdfs:label ""The Shadow""@en .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
251,15,val,"Give me the death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
SELECT ?deathPlace ?warLocation WHERE {
  # Query for the death place of Laura Mancinelli
  { 
    <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  
  UNION
  
  # Query for the location of wars involving Louis François Félix Musnier
  {
    ?musnier <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?musnier <http://dbpedia.org/resource/Louis_François_Félix_Musnier> .
    ?musnier <http://dbpedia.org/ontology/location> ?warLocation .
  }
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
996,12,val,Give me the entity in the award of Ekrem Akurgal and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?commonEntity WHERE {
    # Find the award associated with Ekrem Akurgal
    <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?award .
    
    # Find the military force associated with Dagobert Sigmund von Wurmser
    <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> <http://dbpedia.org/ontology/militaryForce> ?force .

    # Look for a common entity between the award and the military force
    ?award ?p ?commonEntity .
    ?force ?q ?commonEntity .
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
404,35,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?fatherChild WHERE {
    ?ernestAugustus <http://dbpedia.org/property/father> ?father .
    ?princess <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> ;
              <http://dbpedia.org/property/birthPlace> ""Prussia"" ;
              <http://dbpedia.org/property/spouse> ?spouse .
    FILTER(?princess = <http://dbpedia.org/resource/Victoria_Louise_of_Prussia>)
    ?father <http://dbpedia.org/ontology/child> ?fatherChild .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
92,33,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?person ?artist WHERE {
    ?person <http://dbpedia.org/property/actor> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> .
    ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore_(band)> .
    ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
232,29,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London and child of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
    ?sean a dbo:Person ;
          foaf:name ""Sean Pertwee"" ;
          dbp:parent <http://dbpedia.org/resource/Jon_Pertwee> ;
          dbp:birthPlace <http://dbpedia.org/resource/London> .
    
    ?fame dbo:actor ?sean ;
          a dbo:Film, dbo:MilitaryConflict .

    ?fame dbo:actor ?actor .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
161,34,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
SELECT ?person ?militaryForce WHERE {
    ?person <http://dbpedia.org/property/decedent> <http://dbpedia.org/resource/Francoist_Spain>.
    ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Biscay_Campaign>.
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?person <http://dbpedia.org/property/militaryForce> ?militaryForce.
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
281,39,val,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
SELECT ?entity WHERE {
    ?professional <http://dbpedia.org/ontology/profession> ?militaryUnit .
    ?militaryUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?professional <http://dbpedia.org/ontology/officeHolder> ?office .
    ?professional <http://dbpedia.org/ontology/politician> ?politicianRole .
    ?militaryUnit <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://dbpedia.org/ontology/entity> ?entity .
    FILTER(?entity = <http://dbpedia.org/resource/Colony_of_New_Zealand>)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
77,15,val,Give me the force of Alexander I of Russia and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
SELECT ?force ?war WHERE {
    # Part 1: Force of Alexander I of Russia
    OPTIONAL {
        <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/militaryUnit> ?force .
    }

    # Part 2: War of Awardee of Maxim Grigorievich Vlasov's Award
    ?award <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    ?battle <http://dbpedia.org/ontology/battle> ?otherAwardee .
    ?battle <http://dbpedia.org/ontology/war> ?war .
}
```",4,4,5,3,2,3,2,20,0,0,20,0,0.0,0
184,23,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?parent WHERE {
    ?settlement <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
    ?settlement <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/Landmark100000001> .
    ?settlement <http://dbpedia.org/ontology/settlement> ?native .
    ?native <http://dbpedia.org/ontology/birthPlace> ?settlement .
    ?native <http://dbpedia.org/ontology/familyName> ?parent .
}
```",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
404,28,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
# Find the child of Ernest Augustus, Crown Prince of Hanover who is Prince Ernest Augustus of Hanover (born 1914)
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/2000/01/rdf-schema#label> ""Prince Ernest Augustus of Hanover""@en .
    ?child <http://dbpedia.org/property/birthDate> ?birthDate .
    FILTER(year(?birthDate) = 1914)
}

# Find the spouse of Princess Victoria Louise of Prussia
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/property/spouse> ?spouse .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
487,12,val,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of 2022 Vermont House of Representatives election.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . }","```sparql
SELECT ?administration ?country WHERE {
    # Find administration for Philip Brian Scott
    ?person <http://dbpedia.org/ontology/birthName> ""Philip Brian Scott"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    OPTIONAL { ?person <http://dbpedia.org/property/administration> ?administration . }

    # Find country for 2022 Vermont House of Representatives election
    ?election <http://dbpedia.org/ontology/electionDate> ?date .
    FILTER(YEAR(?date) = 2022)
    ?election <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Vermont""@en .
    ?location <http://dbpedia.org/ontology/country> ?country .

}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
666,12,val,Give me the player in Steve Bruce and figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
    ?team <http://dbpedia.org/property/nickname> ""England"" .
    ?team <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/England_national_beach_soccer_team> .

    ?coach <http://dbpedia.org/ontology/player> ?player .
    ?coach foaf:name ""Steve Bruce"" .

    FILTER EXISTS { ?player <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
994,23,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?primaryArtist ?secondaryArtist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?primaryArtist .
    ?primaryArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?secondaryArtist .
}
```",3,3,4,3,1,3,3,71,16,4,0,0.8,1.0,0.888888888888889
701,33,val,Give me the parent of Meritamen and parent of the child of the child of Seti I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Query 1: Parent of Meritamen
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/child> ?parent .
}

UNION

# Query 2: Parent of the child of the child of Seti I
SELECT ?grandparent WHERE {
    ?childOfSetiI <http://dbpedia.org/ontology/child> ?setiI .
    ?setiI <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
            <http://dbpedia.org/property/name> ""Seti I"" .
    
    ?grandchildOfSetiI <http://dbpedia.org/ontology/child> ?childOfSetiI .
    ?parentOfGrandchild <http://dbpedia.org/ontology/child> ?grandchildOfSetiI .

    BIND(?parentOfGrandchild AS ?grandparent)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
285,13,val,Give me the parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?parent WHERE {
    ?spouse <http://dbpedia.org/property/spouses> <http://dbpedia.org/resource/Aristotle_Onassis> .
    ?child <http://dbpedia.org/ontology/birthParent> ?spouse .
    ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",3,3,4,3,1,3,2,20,0,0,5,0,0.0,0
994,35,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
# Step 1: Identify Donald Maynard Dokken as a musical artist
SELECT ?dokken WHERE {
    ?dokken <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
    ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 2: Find band members of Donald Dokken
SELECT DISTINCT ?bandMember WHERE {
    ?dokken <http://dbpedia.org/property/member> ?bandMember .
    FILTER(?dokken = <http://dbpedia.org/resource/Dokken>)
}

# Step 3: Identify associated musical artists of Watchtower (band)
SELECT DISTINCT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Step 4: Find associated musical artists of those identified in step 3
SELECT DISTINCT ?finalAssociatedArtist WHERE {
    ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalAssociatedArtist .
    VALUES ?artist { 
        # Replace with actual URIs from step 3 results
    }
}
```

Note: The final query requires the actual URIs of associated musical artists from Watchtower, which should be filled in after executing Step 3.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,36,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?finalLeader WHERE {
    ?gustavJonson <http://dbpedia.org/ontology/leader> ?leader .
    FILTER(STRSTARTS(STR(?gustavJonson), ""http://dbpedia.org/resource/Gustav_Jonson""))

    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

    ?agency <http://dbpedia.org/ontology/leader> ?leader .
    ?agency <http://dbpedia.org/ontology/governmentAgency> true .

    ?finalLeader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
    ?finalLeader <http://dbpedia.org/ontology/leader> ?agencyLeader .
    FILTER(?agencyLeader = ?leader)

    ?finalLeader <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
312,7,val,"Give me the entity in Italy and entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?settlement ?region WHERE {
    ?settlement <http://www.w3.org/2000/01/rdf-schema#label> ?labelSettlement .
    ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
    ?settlement <http://dbpedia.org/property/administrativeRegion> ?region .
    ?region <http://www.w3.org/2000/01/rdf-schema#label> ?labelRegion .
    ?region <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
    
    FILTER(CONTAINS(LCASE(?labelSettlement), ""democratic party"") || CONTAINS(LCASE(STR(?settlement)), ""democratic party""))
    FILTER(CONTAINS(LCASE(?labelRegion), ""democratic party"") || CONTAINS(LCASE(STR(?region)), ""democratic party""))
}
```",3,7,4,2,2,2,2,9,0,0,587,0,0.0,0
747,27,val,Give me the band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
SELECT ?band WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Shèna""@en .
    ?person <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/memberOf> ?band .
}
```",3,3,4,3,1,3,3,71,0,0,8,0,0.0,0
391,44,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Identify the movie with Roz Ryan and its actors
SELECT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movies100000000>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Works100000000>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShows100000000>.
    ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan>.
}

SELECT ?actor WHERE {
    VALUES ?movie { ?movie }
    ?movie <http://dbpedia.org/ontology/starring> ?actor.
}

# Step 2: Identify Michael Ballhaus's claim to fame and its actors
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/property/claimToFame> ?work.
}

SELECT ?actor WHERE {
    VALUES ?work { ?work }
    ?work <http://dbpedia.org/ontology/starring> ?actor.
}

# Step 3: Find the actor who is native to Compton, California
SELECT DISTINCT ?actor WHERE {
    # Combine results from both movies
    VALUES ?actor { ?actor1 ?actor2 }

    OPTIONAL {
        ?actor <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Compton,_California>.
    }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,18,val,Give me the native of London and child of Jon Pertwee and actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jon_Pertwee> .
    ?person <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/London> .
    ?person <http://dbpedia.org/ontology/performedIn> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
547,27,val,Give me the resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT DISTINCT ?awardee ?restingPlace WHERE {
    # Find awards associated with Gerald Graham
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?award .
    
    # Find other awardees of the same award
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Gerald_Graham>)
    
    # Get resting place for these awardees
    OPTIONAL { ?otherAwardee <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",3,3,4,3,1,3,3,71,0,0,704,0,0.0,0
16,19,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?spouse WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Ted Martin McGinley"" .
    ?person <http://purl.org/dc/terms/profession> <http://dbpedia.org/resource/Category:American_actresses> .
    ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,15,val,Give me the spouse of Aristotle Onassis and parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?spouse ?child ?parent WHERE {
    <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",4,4,5,3,2,3,2,20,2,8,0,0.2,1.0,0.33333333333333337
696,12,val,Give me the birth place of Tim Brennan and landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
# Query 1: Birthplace of Tim Brennan
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Query 2: Landmark at Elevation of Nie Rongzhen's Award
SELECT DISTINCT ?landmark WHERE {
    # Find awards received by Nie Rongzhen
    <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?award .
    
    # Assume there is a way to relate awards to elevations (this part may need adjustment based on actual DBpedia data)
    OPTIONAL { ?award <http://example.org/elevation> ?elevation . }
    
    # Find landmarks at the same elevation
    ?landmark <http://dbpedia.org/ontology/elevation> ?elevation .
}
```

Note: The second query assumes there is a way to relate awards to elevations, which may not be directly available in DBpedia. Adjustments might be necessary based on actual data availability.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
328,37,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?leader ?commander WHERE {
    ?leader <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union>.
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?commander <http://dbpedia.org/ontology/commander> ?force.
    ?event <http://dbpedia.org/ontology/battle> ?force.
    ?event <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Budapest>.
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,12,val,"Give me the player in 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?result <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
SELECT ?player ?team WHERE {
    ?player <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton>.
    ?player <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/SoccerPlayer> <http://dbpedia.org/ontology/SoccerManager>).
    OPTIONAL { 
        ?player <http://dbpedia.org/property/team> ?team.
        FILTER(CONTAINS(STR(?team), ""Sacramento Republic FC"") && CONTAINS(STR(?team), ""2015""))
    }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
492,18,val,Give me the commander in Franco-Hova Wars and person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
SELECT ?person WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
    ?person <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Franco-Hova_Wars> .
    ?person <http://dbpedia.org/property/deathPlace> ?deathPlace .
    FILTER (
        ?deathPlace = <http://dbpedia.org/resource/French_Algeria> ||
        ?deathPlace = <http://dbpedia.org/resource/Algiers>
    )
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
55,14,val,"Give me the band member of Guns N' Roses and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Guns_N%27_Roses> .
    ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/San_Francisco_Symphony> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?person <http://dbpedia.org/ontology/member> ?band .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
16,30,val,Give me the person born as the birth name of Gigi Rice and professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Gigi Rice"" .
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actress> .
    ?person <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
92,44,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as Joseph Michael Furney and band member of Nevermore.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?sheppardBand ?furneyBand WHERE {
    ?sheppard <http://www.w3.org/2000/01/rdf-schema#label> ""Jim Sheppard""@en .
    ?sheppard <http://dbpedia.org/ontology/band> ?sheppardBand .

    ?furney <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael Furney""@en .
    ?furney <http://dbpedia.org/ontology/memberOf> ?furneyBand .
    FILTER(?furneyBand = <http://dbpedia.org/resource/Nevermore_(band)>)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
404,23,val,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ""Victoria Louise of Prussia"" .
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
161,40,val,"Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?commander ?militaryForceSpanishCivilWar ?militaryForceSocietalEvent WHERE {
    ?biscayCampaign <http://dbpedia.org/ontology/commander> ?commander .
    ?biscayCampaign a <http://dbpedia.org/ontology/MilitaryConflict> .

    ?spanishCivilWar <http://dbpedia.org/ontology/battle> ?militaryForceSpanishCivilWar .
    ?spanishCivilWar a <http://dbpedia.org/resource/Spanish_Civil_War> .

    ?societalEvent a <http://dbpedia.org/ontology/SocialEvent>, <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/MilitaryConflict> .
    ?societalEvent <http://dbpedia.org/ontology/battle> ?militaryForceSocietalEvent .
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> .

    FILTER(?biscayCampaign != ?spanishCivilWar)
    FILTER(?societalEvent != ?spanishCivilWar)
}
```",5,8,6,3,3,3,3,71,0,0,3,0,0.0,0
184,19,val,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
SELECT ?child ?parent WHERE {
    <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/ns/prov#wasDerivedFrom> ?source .
    ?source <http://dbpedia.org/property/birthPlace> ""Budapest"" .
    ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
303,14,val,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?entity WHERE {
    # Determine the country of El Valle de Antón
    <http://dbpedia.org/resource/El_Valle_de_Ant%C3%B3n> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?countryResource .
    ?countryResource <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108069068> .

    # Determine the political party of Guillermo Endara
    <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/politicalParty> ?partyResource .
    
    # Find entities in the same country and party
    ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?countryResource ;
            <http://dbpedia.org/ontology/politicalParty> ?partyResource .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
645,12,val,Give me the alma mater of the child of Richard Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?child ?almaMater WHERE {
    <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .
    OPTIONAL { ?child <http://dbpedia.org/property/almaMater> ?almaMater . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
701,22,val,Give me the spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?spouse WHERE {
    ?parent <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Merneptah>.
    ?parent <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Meritamen>.
    ?parent <http://dbpedia.org/ontology/spouse> ?spouse.
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
492,43,val,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at French Algeria and person decedent at Algiers.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
SELECT ?commander ?war WHERE {
    ?battle <http://dbpedia.org/ontology/battleCommander> ?commander .
    ?battle <http://www.w3.org/2000/01/rdf-schema#label> ""Battle of Verdun"" .

    ?event <http://dbpedia.org/ontology/MilitaryConflict> true .
    ?event <http://dbpedia.org/property/location> ?location .
    FILTER(?location IN (<http://dbpedia.org/resource/French_Algeria>, <http://dbpedia.org/resource/Algiers>)).
    
    ?commander <http://dbpedia.org/ontology/battleCommander> ?battle2 .
    ?battle2 <http://www.w3.org/2000/01/rdf-schema#label> ?warLabel .

    FILTER(?commander = ?battleCommander)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
77,13,val,Give me the war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?award ?otherAwardee ?war WHERE {
    <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    OPTIONAL { ?otherAwardee <http://dbpedia.org/ontology/battle> ?war . }
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov>)
}
```",3,3,4,3,1,3,2,20,436,423,0,0.5075669383003493,1.0,0.6733590733590734
701,44,val,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ramesses_II> .
    ?child <http://dbpedia.org/ontology/mother> ?parent .
    FILTER(?child IN (<http://dbpedia.org/resource/Meritamen>, <http://dbpedia.org/resource/Merneptah>))
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
801,42,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow and producer of Westside Story (song).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?writer ?associatedArtist WHERE {
    ?writer <http://dbpedia.org/ontology/writtenWork> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?writer <http://dbpedia.org/property/profession> ""The Shadow""@en .
    ?writer <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Westside_Story_(song)> .
    ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
328,21,val,"Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
SELECT DISTINCT ?leader ?award ?otherAwardee WHERE {
    # Task 1: Find the leader of People's Commissariat of Defense of the Soviet Union
    <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?leader .

    # Task 2: Find awards received by Bruce Fraser and other awardees
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .

    # Ensure the leader is also an awardee
    FILTER(?leader = ?otherAwardee)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,37,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
SELECT ?actor WHERE {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .
    ?work <http://purl.org/dc/terms/creator> ?spouse .
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    ?film <http://dbpedia.org/property/title> ""All About the Andersons""@en .
    FILTER EXISTS { ?work <http://dbpedia.org/ontology/starring> ?actor }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
365,7,val,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter and reference to The Blasters.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?band WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?person <http://dbpedia.org/property/profession> ?profession .
    FILTER(CONTAINS(LCASE(?profession), ""vocalist"") || CONTAINS(LCASE(?profession), ""musician"") || CONTAINS(LCASE(?profession), ""songwriter""))
    OPTIONAL { ?person <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/The_Blasters> . }
    ?person <http://dbpedia.org/property/band> ?band .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
339,14,val,Give me the father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT ?father WHERE {
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Olga_of_Greece_and_Denmark> .
    ?parent <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/father> ?father .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
360,18,val,Give me the reference to the author of Blinded by the Light and native of Johannesburg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?author ?reference WHERE {
    ?book <http://dbpedia.org/ontology/book> ""Blinded by the Light"" .
    ?book <http://purl.org/dc/terms/creator> ?author .
    ?author <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
    ?author <http://www.w3.org/2002/07/owl#sameAs> ?reference
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,11,val,Give me the figure known as the nickname of FC Vaduz and team of Alessandro Mangiarratti.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
SELECT ?nickname ?team WHERE {
    <http://dbpedia.org/resource/Football_Club_Vaduz> <http://dbpedia.org/property/nickname> ?nickname .
    <http://dbpedia.org/resource/Alessandro_Mangiarratti> <http://dbpedia.org/ontology/team> ?team .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
303,15,val,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of Arnulfo Arias.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?commanderParty ?arnulfoAriasParty WHERE {
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .
  ?commander <http://dbpedia.org/property/politicalParty> ?commanderParty .

  <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/property/politicalParty> ?arnulfoAriasParty .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,18,val,"Give me the actor of The Departed and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
SELECT ?actor WHERE {
    ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Compton,_California> .
    ?actor <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/The_Departed> .
    ?actor <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/All_About_the_Andersons> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
465,7,val,Give me the administration of Czech Pirate Party and death place of the native of Prague.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
# Query for the administration of Czech Pirate Party
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Czech_Pirate_Party> <http://dbpedia.org/ontology/administration> ?administration .
}

UNION

# Query for the death place of a native of Prague
SELECT ?deathPlace WHERE {
    ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Czech_Republic> ;
            <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> .
    ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
92,27,val,Give me the band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?band WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael""@en .
    ?person <http://dbpedia.org/property/birthName> ""Joseph Michael"" .
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
392,18,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
SELECT ?province WHERE {
    ?residence <http://dbpedia.org/ontology/inhabitant> <http://dbpedia.org/resource/Sebastiano_Bianchetti> .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlements100000001> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
    ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
    ?residence <http://dbpedia.org/ontology/locatedInRegion> ?region .
    ?residence <http://dbpedia.org/ontology/province> ?province .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
626,14,val,Give me the awardee of the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?militaryForce ?award ?otherAwardee WHERE {
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> .
    ?battle <http://dbpedia.org/property/military_force> ?militaryForce .
    ?militaryForce <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != ?militaryForce)
}
```",3,3,4,3,1,3,2,20,0,0,7855,0,0.0,0
392,17,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
SELECT ?region WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>.
    ?event <http://dbpedia.org/property/location> ?location.
    FILTER((?location = <http://dbpedia.org/resource/Aguilar_de_Segarra>) || (?location = <http://dbpedia.org/resource/Province_of_Schio>)).
    ?event <http://dbpedia.org/ontology/timeZone> ?timeZone.
    ?timeZone <http://dbpedia.org/property/region> ?region.
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
328,31,val,Give me the commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?commander ?award WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>.
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)>.
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign>.
    ?commander <http://dbpedia.org/property/awards> ?award.
}
```",4,4,5,3,2,3,3,71,0,0,5,0,0.0,0
55,19,val,"Give me the band member of Metallica and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
SELECT ?person WHERE {
    # Find band members of Metallica
    ?metallicaMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Metallica> .
    
    # Find bands associated with Jason Newsted (Newsted)
    ?newstedBand <http://dbpedia.org/property/members> ?person .
    FILTER(?newstedBand = <http://dbpedia.org/resource/Newsted>)
    
    # Find bands produced by Rick Rubin
    ?rubinProducedBand <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Rick_Rubin> .
    ?rubinProducedBandMember <http://dbpedia.org/ontology/member> ?rubinProducedBand .
    
    # Find the intersection of these entities
    FILTER(?metallicaMember = ?person)
    FILTER(?newstedBandMember = ?person)
    FILTER(?rubinProducedBandMember = ?person)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
528,43,val,Give me the war of Irene Morales and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Wars involving Irene Morales
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
}

# Wars involving forces commanded by Narciso Campero
SELECT DISTINCT ?force ?war WHERE {
    ?force <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Narciso_Campero> .
    ?force <http://dbpedia.org/ontology/battle> ?war .
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
184,27,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?grandparent WHERE {
    ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> .
    ?child <http://dbpedia.org/ontology/parent> ?parent .
    ?grandparent <http://dbpedia.org/ontology/parent> ?child .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
281,28,val,Give me the entity in Colony of New Zealand and war of New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Entities related to Colony of New Zealand
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  
  UNION
  
  # Wars involving the New Zealand Army
  ?war <http://dbpedia.org/property/armiesInvolved> <http://dbpedia.org/resource/New_Zealand_Army> .
  ?entity <http://dbpedia.org/ontology/battle> ?war .

  UNION

  # Awardees of Knight Grand Cross of the Order of the Bath
  ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
  ?entity rdfs:label ?awardeeLabel FILTER (lang(?awardeeLabel) = ""en"") .

}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
767,43,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?administration ?almaMater WHERE {
  # For George Kilbon Nash
  OPTIONAL {
    <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/administration> ?administration .
    ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  
  # For an unspecified entity in Baden-Württemberg
  OPTIONAL {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""baden-württemberg"")).
    ?entity <http://dbpedia.org/ontology/administration> ?administration .
    ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
783,15,val,Give me the band member of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . }","```sparql
SELECT ?bandMember ?musicalArtist WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Ebony Reigns""@en .
    ?person <http://dbpedia.org/ontology/member> ?bandMember .

    ?samuel a dbo:Person ;
            <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah"" .

    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> dbo:MusicalArtist .
    ?bandMember <http://dbpedia.org/ontology/member> ?samuel .

    ?bandMember <http://dbpedia.org/property/musicalArtist> ?musicalArtist .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
485,15,val,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
# Query to find the country in the region of Western European Time
SELECT ?country WHERE {
  ?country <http://www.w3.org/2000/01/rdf-schema#label> ""Western European Time""@en .
  ?country <http://dbpedia.org/ontology/country> ?resultCountry .
}

UNION

# Query to find an entity in Nottinghamshire
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nottinghamshire> .
}
```",3,4,4,2,2,2,3,28,0,0,357,0,0.0,0
659,32,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
# Query to find the commander in a war involving 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
SELECT ?war ?commander WHERE {
    <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/ontology/event> ?war .
    FILTER(?war <http://dbpedia.org/ontology/MilitaryConflict>)
    ?battle <http://dbpedia.org/property/commander> ?commander .
}

# Query to find the commander in the force of Arthur Wellesley, 1st Duke of Wellington
SELECT ?force ?commander WHERE {
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/commandedMilitaryUnit> ?unit .
    ?unit <http://dbpedia.org/property/commander> ?commander .
}
```",4,6,5,2,2,3,3,71,0,0,71,0,0.0,0
701,21,val,Give me the spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?spouse ?child WHERE {
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/property/husband> <http://dbpedia.org/resource/Ramesses_II> .
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/birthParent> ?spouse .
    FILTER(?spouse = <http://dbpedia.org/resource/Nefertari>)
  }
}
```

This query first identifies the spouse of Ramesses II, ensuring that the relationship is reciprocal (i.e., Nefertari is also listed as his wife). It then optionally finds any children linked to Nefertari, effectively identifying Ramesses II as both her husband and a parent to their children.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,28,val,Give me the native of the figure known as Hub City and actor of All About the Andersons and actor of The Departed.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?native WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Hub City""@en .
    ?person <http://dbpedia.org/property/filmography> ?film .
    ?film <http://dbpedia.org/ontology/title> ?title .
    FILTER(?title IN (""All About the Andersons"", ""The Departed""))
    ?person <http://dbpedia.org/ontology/nativePlace> ?native .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,38,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander WHERE {
    # Step 1: Identify wars where Frédéric-Georges Herr was a commander
    ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric-Georges_Herr> .
    
    # Step 2: Ensure the war is both a military conflict and an event
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflicts100000000> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    
    # Step 3: Find commanders of these wars
    ?war <http://dbpedia.org/ontology/commander> ?commander .

    # Step 4: Identify the capital of Algeria and find decedents there
    <http://dbpedia.org/resource/Algiers> <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Algeria> .
    
    ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .

    # Step 5: Match the commander with a decedent in Algiers
    FILTER(?commander = ?decedent)
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
427,21,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?party ?reference WHERE {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?party .
    
    OPTIONAL {
        ?party <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> .
        BIND(<http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> AS ?reference)
    }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,20,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
# Query to find the commander in the war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
SELECT ?war ?commander WHERE {
    <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://www.w3.org/2002/07/owl#sameAs> ?war .
    FILTER(STRSTARTS(STR(?war), ""http://dbpedia.org/resource/"") && 
           (CONTAINS(LCASE(STR(?war)), ""event"") || CONTAINS(LCASE(STR(?war)), ""military conflict"")))
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
}

# Query to find the commander in the German campaign of 1813
SELECT ?campaignCommander WHERE {
    <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?campaignCommander .
}
```",3,5,4,2,2,3,3,71,0,0,30,0,0.0,0
294,16,val,"Give me the resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
# Query for the resting place of Luke Lea (American politician, born 1879)
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Luke_Lea_(politician)> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

# Query for entities in the birthplace of Marion James
SELECT ?entity WHERE {
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?birthPlace .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
54,29,val,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?parent WHERE {
    ?individual <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
    ?individual <http://dbpedia.org/ontology/follows> ?narapatiChild .
    ?individual <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
    ?narapatiChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
    ?individual <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
528,25,val,Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
SELECT ?person ?force ?battle WHERE {
  { 
    ?person rdfs:label ""Narciso Campero Leyes""@en .
    ?person <http://dbpedia.org/ontology/militaryForce> ?force .
  }
  UNION
  {
    ?person rdfs:label ""Orozimbo Barbosa""@en .
    ?person <http://dbpedia.org/ontology/battle> ?battle .
  }
}
```",3,3,4,2,2,3,3,71,2,8,0,0.2,1.0,0.33333333333333337
959,42,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of the team of Takashi Sekizuka and native of Japan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?member WHERE {
    # Eiji Ōtsuka's Alma Mater
    ?almaMater <http://dbpedia.org/ontology/nationality> wd:Q30 ;  # Japanese nationality
                 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
                 <http://dbpedia.org/ontology/university> ?university ;
                 <http://dbpedia.org/ontology/educationalInstitution> ?eduInst .
    ?university <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> .
    ?eduInst <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/property/almaMater> ?almaMater .

    # Takashi Sekizuka's Manager
    ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
             <http://dbpedia.org/property/nationality> wd:Q30 ;  # Japanese nationality
             <http://dbpedia.org/ontology/teamManaged> ?team .
    <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/teamManagedBy> ?manager .

    # Common Member
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
            <http://dbpedia.org/property/memberOf> ?almaMater ;
            <http://dbpedia.org/ontology/teamMember> ?team .
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
328,23,val,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?award ?otherAwardee WHERE {
    ?campaign <http://dbpedia.org/ontology/battle> ?battle .
    FILTER(STRSTARTS(STR(?battle), ""Volcano and Ryukyu Islands campaign""))
    
    ?campaign <http://dbpedia.org/ontology/commander> ?commander .
    
    ?commander <http://dbpedia.org/property/awards> ?award .
    
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != ?commander)
}
```",3,3,4,3,1,3,3,71,0,0,13262,0,0.0,0
701,41,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?spouse WHERE {
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II> .
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ramesses_II> .
    ?child <http://dbpedia.org/ontology/birthParent> ?spouse .
    
    OPTIONAL {
        ?nefertariChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nefertari> .
        ?nefertariChild <http://dbpedia.org/ontology/birthParent> ?spouse .
    }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
488,26,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
    ?mat_office_holder <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Matsudaira_Tadamasa> .
    ?mat_office_holder <http://dbpedia.org/property/officeHolder> ""true""^^<http://www.w3.org/2001/XMLSchema#boolean> .

    ?politician <http://dbpedia.org/ontology/father> ?mat_office_holder .
    ?politician <http://dbpedia.org/ontology/politician> ""true""^^<http://www.w3.org/2001/XMLSchema#boolean> .

    ?politician <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
161,26,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?militaryForce WHERE {
    ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/MilitaryConflict> .
    ?predecessor <http://dbpedia.org/ontology/battle> ?event .
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",3,5,4,3,1,3,3,71,0,0,514,0,0.0,0
666,15,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as The Three Lions.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","```sparql
SELECT ?player WHERE {
    ?team <http://dbpedia.org/property/teamManager> <http://dbpedia.org/resource/Lenid_Slutskiy> .
    ?team <http://www.w3.org/2002/07/owl#sameAs> ?club .
    ?club <http://dbpedia.org/ontology/nickname> ""The Three Lions"" .
    ?team <http://dbpedia.org/ontology/player> ?player .
}
```",4,7,5,3,2,3,2,20,0,0,2,0,0.0,0
547,28,val,Give me the resting place of Alan Cunningham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?name ?restingPlace WHERE {
  { 
    OPTIONAL { <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/burialPlace> ?restingPlace . BIND(""Alan Cunningham"" AS ?name) }
    UNION
    { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/burialPlace> ?restingPlace . BIND(""Simon Cadell"" AS ?name) }
  } 
  UNION
  {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    BIND(?child AS ?person)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
16,24,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
SELECT ?profession WHERE {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
}

SELECT ?person WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Georgeanne Marie Rice""@en .
    ?person <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?profession IN (SELECT DISTINCT ?p FROM { 
        SELECT ?p WHERE {
            <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?p .
        }
    }))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
485,16,val,"Give me the entity in United Kingdom and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?ukEntity ?birthRegion WHERE {
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/nationality> ?ukEntity .
    FILTER(STRSTARTS(STR(?ukEntity), ""http://dbpedia.org/resource/United_Kingdom""))

    OPTIONAL { 
        <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
        ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?regionResource .
        ?regionResource a <http://dbpedia.org/class/yago/Region100000001> .
        BIND(?regionResource AS ?birthRegion)
    }
}
```",3,4,4,2,2,2,3,28,0,0,357,0,0.0,0
712,15,val,"Give me the resting place of Nina Onilova and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
# Query for the resting place of Nina Onilova
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

UNION

# Query for the capital of the country of the military force in Vyoshenskaya Uprising
SELECT ?capital WHERE {
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> .
    ?militaryForce <http://dbpedia.org/ontology/country> ?country .
    ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
378,19,val,Give me the war of the person born as Carl Pontus Gahn and war of Joaquín Blake.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
SELECT ?person ?war WHERE {
  { 
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
    BIND(<http://dbpedia.org/resource/Carl_Pontus_Gahn> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?war .
    BIND(<http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> AS ?person)
  }
}
```",3,3,4,2,2,3,3,71,2,11,0,0.15384615384615385,1.0,0.2666666666666667
617,39,val,Give me the spouse of Laodice IV and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?spouse WHERE {
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Panium>.
    ?battle <http://dbpedia.org/ontology/commander> ?commander.
    ?commander <http://dbpedia.org/ontology/child> ?child.
    
    <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/property/spouse> ?spouse.
    
    ?spouse <http://dbpedia.org/ontology/parent> ?child.
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,25,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?commander ?agencyLeader WHERE {
  # Find the commander of the Eastern Front (World War II)
  <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/battleCommander> ?commander .

  # Find a government agency associated with Joseph Stalin and its leader
  ?agency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?agency <http://dbpedia.org/property/minister> <http://dbpedia.org/resource/Joseph_Stalin> .
  ?agency <http://dbpedia.org/ontology/leader> ?agencyLeader .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
827,12,val,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
SELECT ?child ?father WHERE {
    <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/Royalty108069> .
    ?child <http://dbpedia.org/property/father> ?father .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,24,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?commander WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?war <http://dbpedia.org/ontology/battle> ?battle.
    ?battle <http://dbpedia.org/property/commander> ?commander.
    ?commander <http://dbpedia.org/resource/Frédéric-Georges_Herr> .
    ?commander <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers>.
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
179,11,val,Give me the parent of Ubol Ratana and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ubol_Ratana>.
    OPTIONAL { 
        ?person <http://dbpedia.org/property/birthName> ""Sirikit"" .
        FILTER(?parent = ?person)
    }
}
```",3,3,4,2,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
427,40,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?person ?party ?partyName WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Giulio_Andreotti> 
    <http://dbpedia.org/resource/Michele_Pinto_(politician)> 
    <http://dbpedia.org/resource/Romano_Prodi>
  }
  
  ?person <http://dbpedia.org/ontology/politicalParty> ?party .
  OPTIONAL { ?party rdfs:label ?partyName . FILTER (lang(?partyName) = 'en') }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
747,35,val,Give me the person born on the birth date of Pavlo Khudzik and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . }","```sparql
# Query 1: Find a person born on the same date as Pavlo Khudzik
SELECT ?person WHERE {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://www.w3.org/2002/07/owl#sameAs> ?birthDate .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
            <http://dbpedia.org/property/birthDate> ?birthDate .
    FILTER(?person != <http://dbpedia.org/resource/Pavlo_Khudzik>)
}

UNION

# Query 2: Find the band associated with Tracey Elizabeth McSween
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Tracey_Elizabeth_McSween> <http://dbpedia.org/ontology/band> ?band .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
92,43,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of Joseph Michael.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?person ?associatedArtist WHERE {
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    
    ?person <http://dbpedia.org/property/actor> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> .
    ?person <http://dbpedia.org/property/memberOfBand> <http://dbpedia.org/resource/Nevermore_(band)> .

    ?josephMichael <http://dbpedia.org/ontology/bandMember> ?associatedArtist .
    ?josephMichael <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael""@en .
    
    FILTER(?person = ?josephMichael)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
701,24,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?child ?parent WHERE {
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ramesses_II> .
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,23,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. }","```sparql
SELECT ?member WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Person born in 1958""@en .
    ?person <http://dbpedia.org/ontology/birthYear> ""1958""^^xsd:gYear .
    
    ?person <http://dbpedia.org/property/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""japanese"")).
    ?almaMater <http://dbpedia.org/ontology/type> ?type1, ?type2, ?type3 .
    FILTER((?type1 = <http://dbpedia.org/class/yago/Organisation108067069>) && 
           (?type2 = <http://dbpedia.org/class/yago/University118554068>) &&
           (?type3 = <http://dbpedia.org/class/yago/EducationalInstitution107964070>))
    
    ?member <http://dbpedia.org/property/almaMater> ?almaMater .
}
```",3,7,4,3,1,3,3,71,0,0,524,0,0.0,0
251,19,val,"Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v2 <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?administration ?deathPlace ?location WHERE {
  # Administration of Forza Italia (2013)
  <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?administration .

  # Death place of Laura Mancinelli
  <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/property/deathPlace> ?deathPlace .

  # Location of the war involving Louis François Félix Musnier
  ?musnierBattle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Battle> .
  ?musnierBattle <http://dbpedia.org/property/personnel> <http://dbpedia.org/resource/Louis_François_Félix_Musnier> .
  ?musnierBattle <http://dbpedia.org/property/location> ?location .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
547,26,val,Give me the resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?actor ?restingPlace WHERE {
    ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/E._G._Richard>.
    ?show <http://dbpedia.org/ontology/castMember> ?actor.
    ?actor <http://dbpedia.org/ontology/burialPlace> ?restingPlace.
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,13,val,Give me the person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Headquarters_of_House_of_Sombrerete> .
    ?person <http://dbpedia.org/property/awards> ?award .
    FILTER(?award = ""Award_30"")  # Replace ""Award_30"" with the actual DBpedia resource for the award if known
}
```

Note: The placeholder `""Award_30""` should be replaced with the correct DBpedia resource identifier for the specific award referred to by ""30"". If ""30"" refers to an ordinal position, additional logic would be needed to determine which award it corresponds to.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,19,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse ?grandchild WHERE {
    # Step 1: Find Laodice IV's spouse
    <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .

    # Step 2: Find children of Seleucus II Callinicus who are royalty
    ?child <http://dbpedia.org/property/birthName> ?name .
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
    ?child <http://www.w3.org/2002/07/owl#sameAs> ?royalty .

    # Step 3: Find grandchildren of Seleucus II Callinicus who are royalty
    ?grandchild <http://dbpedia.org/ontology/father> ?child .
    ?grandchild <http://www.w3.org/2002/07/owl#sameAs> ?royaltyGrandchild .
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
16,39,val,Give me the person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    ?person <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Ohio_State_University> .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
528,31,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query for societal events in Chile involving military forces and classified as wars
SELECT DISTINCT ?event WHERE {
    ?event <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Chile> .
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    ?militaryForce <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/War> .
}

UNION

# Query for wars involving Orozimbo Barbosa
SELECT DISTINCT ?war WHERE {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/property/battles> ?battle .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/War> .
    ?battle <http://dbpedia.org/ontology/war> ?war .
}
```",4,5,5,3,2,3,3,71,0,0,9,0,0.0,0
659,28,val,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in Battle of Leipzig and military force of Napoleonic Wars.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
SELECT ?commandedForce WHERE {
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/commander> ?commandedForce .
    ?commandedForce <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Battle_of_Leipzig> .
    ?commandedForce <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Napoleonic_Wars> .
}
```",4,4,5,2,3,3,3,71,0,0,5,0,0.0,0
9,22,val,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
SELECT ?almaMater ?nickname WHERE {
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    OPTIONAL { 
        <http://dbpedia.org/resource/Queen's_University_Belfast> <http://www.w3.org/2000/01/rdf-schema#label> ?nickname .
    }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
281,27,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT ?war WHERE {
    ?person <http://dbpedia.org/ontology/profession> ?militaryUnit .
    ?militaryUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?person <http://dbpedia.org/ontology/officeHolder> ?office .
    ?person <http://dbpedia.org/ontology/politician> ?politicianRole .
    ?militaryUnit <http://dbpedia.org/ontology/memberOfMilitaryOrganization> <http://dbpedia.org/resource/New_Zealand_Army> .
    ?militaryUnit <http://dbpedia.org/property/battles> ?war .
}
```",3,6,4,3,1,3,3,71,0,0,14,0,0.0,0
392,13,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?country WHERE {
    ?country <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    ?country <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
    FILTER(LANG(?label) = 'en')
}
```",3,4,4,2,2,2,3,28,28540,21151,247,0.5743494797850718,0.991419738076215,0.7273375977981091
360,12,val,Give me the writer of The Roaring Silence and native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","```sparql
SELECT ?writer WHERE {
    ?album <http://dbpedia.org/ontology/author> ?writer .
    ?album <http://dbpedia.org/property/title> ""The Roaring Silence"" .
    ?writer <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
    OPTIONAL { 
        ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Manfred_Mann> .
        ?writer ?p ?reference .
    }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
161,24,val,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
# Query 1: Find the commander in the Biscay Campaign
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commander .
}

# Query 2: Identify the military force associated with Francisco Largo Caballero that is both a societal event and a military conflict
SELECT ?militaryForce WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?event <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
915,15,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?director ?birthPlace ?resident WHERE {
    # Find the director of Pipe Dreams (1976 film)
    <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?director .
    
    # Find the father of Lizzie Spaulding
    ?father <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Lizzie_Spaulding> .
    
    # Ensure they are the same person
    FILTER(?director = ?father)
    
    # Get the birthplace of this director/father
    ?director <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    
    # Ensure the birthplace is a settlement
    ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
    FILTER(STRSTARTS(STR(?settlement), ""http://dbpedia.org/resource/Settlement:""))
    
    # Find residents of this birthplace
    ?resident <http://dbpedia.org/ontology/resident> ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
528,18,val,Give me the war of Orozimbo Barbosa and force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Wars involving Orozimbo Barbosa
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?war .
}

# Military force associated with Narciso Campero
SELECT ?force WHERE {
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?force <http://dbpedia.org/property/battle> ?battle .
    ?battle <http://dbpedia.org/property/person> <http://dbpedia.org/resource/Narciso_Campero> .
}

# Wars involving Irene Morales
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
}
```",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
547,38,val,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
SELECT ?actorRestingPlace ?awardeeRestingPlace WHERE {
  # Find the actor of ""Enemy at the Door"" and their resting place
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?movie rdfs:label ""Enemy at the Door""@en .
  ?actor <http://dbpedia.org/property/restingPlace> ?actorRestingPlace .

  # Find the awardee of Knight Grand Cross of the Order of St Michael and St George and their resting place
  ?person <http://dbpedia.org/ontology/nationality> ?nationality .
  ?award rdfs:label ""Knight Grand Cross of the Order of St Michael and St George""@en .
  ?person <http://dbpedia.org/property/awards> ?award .
  ?person <http://dbpedia.org/property/restingPlace> ?awardeeRestingPlace .

  # Ensure we are querying English labels
  FILTER(LANG(?movieLabel) = 'en')
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
77,12,val,Give me the force of the mayor of Congress Poland and war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?battle ?militaryForce WHERE {
    <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",3,3,4,2,2,3,2,20,0,0,6,0,0.0,0
404,37,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?grandparent ?royalChild ?parent WHERE {
    # Step 1: Find Prince George William's royal parent
    <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/birthParent> ?parent .
    ?parent a <http://dbpedia.org/ontology/RoyalFamilyMember> .

    # Step 2: Find a royal child of this parent
    ?parent <http://dbpedia.org/ontology/child> ?royalChild .
    ?royalChild a <http://dbpedia.org/ontology/RoyalFamilyMember> .

    # Step 3: Find the parent of this royal child
    ?royalChild <http://dbpedia.org/ontology/birthParent> ?grandparent .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
285,14,val,Give me the spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?professional ?spouse WHERE {
    <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?award .
    ?professional <http://dbpedia.org/property/awards> ?award .
    FILTER(?professional != <http://dbpedia.org/resource/Stan_Lee>)
    OPTIONAL { ?professional <http://dbpedia.org/ontology/spouse> ?spouse }
}
```",3,3,4,3,1,3,2,20,69,6501,4080,0.010502283105022832,0.016630513376717282,0.012874335292471313
659,21,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
SELECT ?militaryForce WHERE {
    ?militaryForce <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/property/name> ?name .
    FILTER(CONTAINS(LCASE(?name), ""napoleonic wars""))
    
    OPTIONAL { 
        ?militaryForce <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
    }
}
```",3,3,4,2,2,3,3,71,0,0,32,0,0.0,0
92,29,val,"Give me the band of Joseph Michael and band member of Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
# Find the band of Joseph Michael
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/ontology/band> ?band .
}

# Check if Jim Sheppard was a member of Nevermore
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Nevermore_(band)> .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Jim Sheppard""@en .
}

# Find associated musical artists of Jim Sheppard
SELECT ?associatedArtist WHERE {
    ?sheppard <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
    ?sheppard <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,19,val,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?battle ?award ?otherAwardee WHERE {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/battle> ?battle .
    FILTER(CONTAINS(LCASE(STR(?battle)), ""eastern front""))
    
    OPTIONAL {
        <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?award .
        ?otherAwardee <http://dbpedia.org/property/awards> ?award .
        FILTER(?otherAwardee != <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>)
    }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
184,31,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?native ?parent WHERE {
    ?landmark <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float>.
    ?landmark <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/Settlement108069068>.
    ?native <http://dbpedia.org/ontology/nativePlace> ?landmark.
    
    ?archduke <http://dbpedia.org/ontology/name> ""Archduke Joseph August of Austria"" .
    ?child <http://dbpedia.org/ontology/father> ?archduke .
    FILTER(?native = ?child)
    
    ?native <http://dbpedia.org/ontology/birthPlace> ?parent.
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
487,14,val,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?administration WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?person <http://dbpedia.org/property/birthName> ""Phil Scott"" .
    ?person <http://dbpedia.org/ontology/administration> ?administration .
}
```",3,4,4,3,1,3,2,20,0,0,14,0,0.0,0
294,17,val,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?architect ?restingPlace WHERE {
    ?house <http://www.w3.org/2000/01/rdf-schema#label> ""P. D. Houston Jr. House""@en .
    ?house <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> .
    ?house <http://dbpedia.org/ontology/architect> ?architect .
    ?architect <http://dbpedia.org/ontology/burial> ?restingPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
547,41,val,Give me the resting place of the child of James Burton (property developer) and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
# Query 1: Find the child of James Burton (property developer)
SELECT ?child WHERE {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
}

# Query 2: Find the resting place of Alan Cunningham
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Alan_Cunningham_(British_officer)> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

# Query 3: Find the actor of ""Enemy at the Door"" and their resting place
SELECT ?actor ?restingPlace WHERE {
    ?movie <http://dbpedia.org/property/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    FILTER(STR(?movie) = ""http://dbpedia.org/resource/Enemy_at_the_Door"")
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
645,14,val,Give me the alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?almaMater WHERE {
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Adela_Pankhurst> .
    ?sibling <http://dbpedia.org/ontology/child> ?parent .
    ?sibling <http://dbpedia.org/property/almaMater> ?almaMater .
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
281,33,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT DISTINCT ?entity WHERE {
    # Leader of the 1962 New South Wales state election
    ?leader <http://dbpedia.org/ontology/politician> _:a .
    ?leader <http://dbpedia.org/property/birthPlace> ?birthPlace1 .
    ?birthPlace1 <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country1 .

    # Beauchamp Seymour, 1st Baron Alcester
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/property/birthPlace> ?birthPlace2 .
    ?birthPlace2 <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country2 .

    # Check if birthplaces are countries
    FILTER((?birthPlace1 = ?country1) || (?birthPlace2 = ?country2))
    
    # Return the country entity
    VALUES ?entity { ?country1 ?country2 }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
981,14,val,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
    ?person <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Kamikaze_Girls_(novel)> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,170,0,0.0,0
801,25,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song).",SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?writer ?associatedArtist WHERE {
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?writer <http://dbpedia.org/property/wrote> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
    ?writer <http://dbpedia.org/property/produced> <http://dbpedia.org/resource/Westside_Story_(song)> .
    ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
747,18,val,Give me the band of Shèna and person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?person ?band WHERE {
  # Find band for Shèna
  OPTIONAL { 
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/band> ?band .
    BIND(<http://dbpedia.org/resource/Shèna> AS ?person)
  }
  
  # Find person born on 1985-04-29 and their band
  OPTIONAL {
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?freebaseResource .
    ?freebaseResource <http://rdf.freebase.com/ns/common.date_of_birth> ""1985-04-29""^^xsd:date .
    ?person <http://dbpedia.org/ontology/band> ?band .
  }
  
  # Find band for Amba Shepherd
  OPTIONAL {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/band> ?band .
    BIND(<http://dbpedia.org/resource/Amba_Shepherd> AS ?person)
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
645,13,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?entity WHERE {
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Battle>.
    ?v0 <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Battle_of_Diamond_Rock>.
    ?v0 <http://dbpedia.org/ontology/commander> ?commander.
    ?commander <http://dbpedia.org/ontology/residenceCountry> ?entity.
}
```",3,4,4,3,1,3,2,20,0,0,42999,0,0.0,0
488,19,val,Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?commanderBirthPlace ?tokugawaDeathPlace WHERE {
  # Query for the birthplace of the commander in the Boshin War
  ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War>.
  ?battle <http://dbpedia.org/ontology/commander> ?commander.
  ?commander <http://dbpedia.org/ontology/birthPlace> ?commanderBirthPlace.

  # Query for the death place of Tokugawa Ieyasu
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?tokugawaDeathPlace.
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,37,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?predecessor WHERE {
    # Step 1: Find the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
    <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/ontology/predecessor> ?predecessor .

    # Step 2: Find the parent of Thado Minsaw of Prome
    ?parent <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
    
    # Step 3: Find the child of that parent
    ?child <http://dbpedia.org/ontology/child> ?parent .

    # Step 4: Find the parent of the child identified in step 3
    ?finalParent <http://dbpedia.org/property/parent> ?child .
    
    FILTER(?predecessor = ?finalParent)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
801,38,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . },"```sparql
SELECT ?writer ?associatedArtist WHERE {
    ?album <http://dbpedia.org/ontology/writer> ?writer .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?album <http://dbpedia.org/ontology/title> ""40 Dayz & 40 Nightz"" .

    OPTIONAL {
        ?work <http://dbpedia.org/property/producer> ?writer .
        ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
        ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
        ?work <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/50_Cent> .
    }

    OPTIONAL {
        ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
    }
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
421,16,val,Give me the band member of Senidah and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?bandMember ?personWithSameBirthName WHERE {
  # Find band members of Senidah
  <http://dbpedia.org/resource/Senidah> <http://dbpedia.org/ontology/member> ?bandMember .

  # Find Dino Merlin's birth name
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?birthName .

  # Find any person with the same birth name as Dino Merlin
  ?personWithSameBirthName <http://dbpedia.org/property/birthName> ?birthName .
  
  FILTER(?bandMember != ?personWithSameBirthName) # Ensure they are not the same entity
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
767,30,val,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?result WHERE {
  # Alma mater of Carl L. Nippert
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result .
  
  UNION
  
  # Entity in Baden-Württemberg
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-Württemberg> .
  BIND(?entity AS ?result)
  
  UNION
  
  # Alter ego of Black Hood
  <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?result .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
754,13,val,Give me the parent of the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?greatGreatGrandparent WHERE {
    ?minLinka <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Linka> .
    ?minLinkaParent <http://dbpedia.org/ontology/child> ?minLinka .
    ?grandparent <http://dbpedia.org/ontology/child> ?minLinkaParent .
    ?greatGrandparent <http://dbpedia.org/ontology/child> ?grandparent .
    ?greatGreatGrandparent <http://dbpedia.org/ontology/child> ?greatGrandparent .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
528,21,val,Give me the war of the military force of Battle of Pisagua and force of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT ?war WHERE {
    ?force1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> .
    ?force2 <http://dbpedia.org/property/militaryForce> <http://dbpedia.org/resource/Narciso_Campero> .
    ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?force1 <http://dbpedia.org/ontology/battle> ?war .
    ?force2 <http://dbpedia.org/ontology/battle> ?war .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
182,18,val,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?nationalityEntity WHERE {
    # Part 1: Find wars associated with Jagath Dias
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?war .
    
    # Part 2: Find the nationality of Tamara Kunanayakam and an entity related to it
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?nationality .
    ?nationalityEntity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), LCASE(STR(?nationality))))
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
184,41,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?grandchild WHERE {
    # Step 1: Find Archduke Joseph Karl's child
    ?child <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
    
    # Step 2: Find the grandchild (child of the above child)
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .

    # Step 3: Ensure this grandchild is a parent of someone native to Budapest
    ?parentOfBudapest <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Budapest> .
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?parentOfBudapest .

    # Step 4: Ensure this grandchild is a parent of Archduchess Ilona
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/birthParent> ?grandchild .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,43,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of Rif War and commander in Biscay Campaign.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
SELECT ?militaryForce WHERE {
    ?successor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .
    ?predecessor <http://dbpedia.org/ontology/successor> ?successor .
    
    ?rifWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?biscayCampaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
                    <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    
    ?rifWar <http://dbpedia.org/property/militaryForce> ?militaryForce .
    ?biscayCampaign <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/property/militaryForce> ?militaryForce .

    FILTER(?predecessor = ?rifWar && ?predecessor = ?biscayCampaign)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
360,16,val,Give me the writer of The Roaring Silence and reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . },"```sparql
SELECT ?writerOfRoaringSilence ?authorOfBlindedByTheLight WHERE {
  # Find the writer of ""The Roaring Silence""
  <http://dbpedia.org/resource/The_Roaring_Silence> <http://purl.org/dc/terms/creator> ?writerOfRoaringSilence .

  # Find the author of ""Blinded by the Light""
  <http://dbpedia.org/resource/Blinded_by_the_Light_(song)> <http://purl.org/dc/terms/creator> ?authorOfBlindedByTheLight .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
9,40,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB.","SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?almaMaterAllenHill ?mayor ?almaMaterMayor WHERE {
  # Alma mater of Allen Hill (scientist)
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMaterAllenHill .

  # Organization in Belfast known as QUB
  ?organization <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University of Belfast""@en .
  FILTER(CONTAINS(LCASE(?organization), ""belfast""))

  # Mayor who is a politician associated with the organization
  ?mayor <http://dbpedia.org/ontology/politicalParty> ?party ;
         <http://dbpedia.org/ontology/officeHolder> ?office .
  ?office <http://dbpedia.org/ontology/holderOf> ?organization .

  # Alma mater of the mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMaterMayor .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
184,30,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
SELECT ?parent WHERE {
    ?individual <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
    ?individual <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
    ?individual <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
    ?individual <http://dbpedia.org/ontology/parent> ?parent .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
281,18,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in Colony of New Zealand and war of New Zealand Army.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . }","```sparql
SELECT ?war ?entity WHERE {
    # Step 1: Find wars associated with Beauchamp Seymour, 1st Baron Alcester
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?war .
    
    # Step 2: Find entities related to both the Colony of New Zealand and a war involving the New Zealand Army
    ?entity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
    ?entity <http://dbpedia.org/ontology/battle> ?nzWar .
    ?nzWar <http://dbpedia.org/property/army> <http://dbpedia.org/resource/New_Zealand_Army> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
747,30,val,Give me the person born on 1985-04-29 and band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
SELECT ?person1985 ?band1985 ?tracey ?bandTracey ?amba ?bandAmba WHERE {
  # Person born on 1985-04-29
  ?person1985 <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^xsd:date .
  OPTIONAL { ?person1985 <http://dbpedia.org/ontology/memberOfBand> ?band1985 . }

  # Tracey Elizabeth McSween and her band
  ?tracey rdfs:label ""Tracey Elizabeth McSween""@en .
  ?tracey <http://dbpedia.org/ontology/memberOfBand> ?bandTracey .

  # Amba Shepherd and her band
  ?amba rdfs:label ""Amba Shepherd""@en .
  ?amba <http://dbpedia.org/ontology/memberOfBand> ?bandAmba .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
184,26,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?grandGrandChild WHERE {
    ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .
    ?parent <http://dbpedia.org/property/royalty> ""true""^^<http://www.w3.org/2001/XMLSchema#boolean> .
    ?child <http://dbpedia.org/ontology/parent> ?parent .
    ?grandChild <http://dbpedia.org/ontology/parent> ?child .
    ?grandGrandChild <http://dbpedia.org/ontology/parent> ?grandChild .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
838,14,val,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?bandMember WHERE {
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/YU_Grupa>.
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup>.
    ?reference <http://dbpedia.org/property/member> ?bandMember.
}
```",3,6,4,3,1,3,2,20,0,0,40,0,0.0,0
356,13,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"```sparql
SELECT ?player WHERE {
    ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> .
    ?predecessor <http://dbpedia.org/ontology/predecessor> ?successor .
    ?successor <http://dbpedia.org/property/player> ?player .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
754,15,val,Give me the parent of the parent of the parent of Min Linka and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?greatGrandparent WHERE {
    ?minLinka <http://www.w3.org/2000/01/rdf-schema#label> ""Min Linka""@en .
    ?mayHninThweDa <http://www.w3.org/2000/01/rdf-schema#label> ""May Hnin Thwe-Da""@en .

    ?minLinkaParent <http://dbpedia.org/ontology/child> ?minLinka .
    ?mayHninThweDaParent <http://dbpedia.org/ontology/child> ?mayHninThweDa .

    ?minLinkaGrandparent <http://dbpedia.org/ontology/child> ?minLinkaParent .
    ?mayHninThweDaGrandparent <http://dbpedia.org/ontology/child> ?mayHninThweDaParent .

    FILTER(?minLinkaGrandparent = ?mayHninThweDaGrandparent)

    ?greatGrandparent <http://dbpedia.org/ontology/child> ?minLinkaGrandparent .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
232,27,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT DISTINCT ?nativePlace WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
  ?person <http://dbpedia.org/ontology/politician> [] .
  ?person <http://dbpedia.org/ontology/officeHolder> [] .
  ?person <http://dbpedia.org/ontology/residence> ?residence .
  ?residence a <http://dbpedia.org/ontology/Settlement> ;
             <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> .
  ?residence <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
}
```

This query aims to find the native places of residences that are settlements in Britain, belonging to politicians who are office holders and natives of France.",3,7,4,3,1,3,3,71,0,0,9121,0,0.0,0
92,19,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/property/musicalArtist> ?artist .
    ?artist <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nevermore> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,38,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
# Step 1: Find the societal event and military conflict for Rutger Jan Schimmelpenninck
SELECT ?event WHERE {
    <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/event> ?event .
    ?event <http://dbpedia.org/ontology/type> ?type1 .
    ?event <http://dbpedia.org/ontology/type> ?type2 .
    FILTER(?type1 = <http://dbpedia.org/resource/Societal_event>)
    FILTER(?type2 = <http://dbpedia.org/resource/Military_conflict>)
}

# Step 2: Find the military force involved in that event
SELECT ?militaryForce WHERE {
    ?event <http://dbpedia.org/ontology/military_force> ?militaryForce .
}

# Step 3: Identify the war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
SELECT ?war WHERE {
    <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?war .
}

# Step 4: Find the commander of that regiment during the identified war
SELECT ?commander WHERE {
    ?regiment <http://dbpedia.org/ontology/commander> ?commander .
    ?regiment <http://dbpedia.org/ontology/battle> ?war .
}
```",4,9,5,2,2,3,3,71,0,0,31,0,0.0,0
617,27,val,Give me the parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?parent WHERE {
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/parent> ?parent .
    FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Panium>)
}
```",3,3,4,3,1,3,3,71,4,0,0,1.0,1.0,1.0
754,11,val,Give me the parent of May Hnin Thwe-Da and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parentThweDa ?grandparentHtapi WHERE {
  # Find the parent of May Hnin Thwe-Da
  ?parentThweDa <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> .

  # Find the parent of May Hnin Htapi
  ?parentHtapi <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Htapi> .
  
  # Find the grandparent (parent of the parent) of May Hnin Htapi
  ?grandparentHtapi <http://dbpedia.org/ontology/child> ?parentHtapi .
}
```",3,3,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
182,14,val,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
    { <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/ontology/battle> ?war . }
    UNION
    { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?war . }
}
GROUP BY ?war
HAVING (COUNT(DISTINCT ?person) = 2)
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
485,18,val,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?commonEntity WHERE {
    # Birthplaces as regions for Joseph Whitaker
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace1 .
    ?birthPlace1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .

    # Birthplaces as regions for Thomas Warner
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace2 .
    ?birthPlace2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .

    # Find common entities within these regions
    ?commonEntity <http://dbpedia.org/ontology/location> ?birthPlace1 .
    ?commonEntity <http://dbpedia.org/ontology/location> ?birthPlace2 .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
767,28,val,"Give me the reference to  and entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?almaMater ?settlement WHERE {
    ?nippert <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?nippert <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
    ?organization <http://dbpedia.org/ontology/administrativeUnit> ?settlement .
    FILTER(?settlement <http://dbpedia.org/ontology/Settlement>)
    
    BIND(<http://dbpedia.org/resource/Carl_L._Nippert> AS ?nippert)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
767,21,val,"Give me the entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?settlement WHERE {
    ?green <http://dbpedia.org/ontology/administrativeUnit> ?settlement .
    ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlements100000051> .
}
```",3,4,4,2,2,3,3,71,0,0,7,0,0.0,0
427,30,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?party WHERE {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?party .
    OPTIONAL { ?party rdfs:label ""Partito Popolare Italiano""@en . }
    OPTIONAL {
        ?andreotti <http://dbpedia.org/ontology/politicalParty> ?party ;
                   rdfs:label ""Giulio Andreotti""@en .
    }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
712,14,val,Give me the resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT DISTINCT ?awardee ?restingPlace WHERE {
    ?show <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Soviet_Union> .
    ?show <http://dbpedia.org/ontology/show> ?award .
    ?award <http://dbpedia.org/property/awardee> ?awardee .
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",3,3,4,3,1,3,2,20,0,0,63,0,0.0,0
528,44,val,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?commander ?war1 ?war2 WHERE {
    ?battle <http://dbpedia.org/property/battle> ""Battle of La Rinconada de Ate"" .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Battle> .
    ?commander <http://dbpedia.org/ontology/commanded> ?battle .
    ?commander <http://dbpedia.org/property/wars> ?war1 .
    
    OPTIONAL {
        ?commander <http://dbpedia.org/property/wars> ?war2 .
        FILTER(?war1 != ?war2)
    }
}

UNION

SELECT ?irene ?war WHERE {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/property/wars> ?war .
    BIND(<http://dbpedia.org/resource/Irene_Morales> AS ?irene)
}

UNION

SELECT ?narciso ?force WHERE {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?unitType .
    FILTER(?unitType = <http://dbpedia.org/ontology/MilitaryUnit>)
    ?narciso <http://dbpedia.org/property/commanded> ?force .
    BIND(<http://dbpedia.org/resource/Narciso_Campero_Leyes> AS ?narciso)
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
963,15,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of Serbian Progressive Party.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Get the country for Herzegovina-Neretva Canton's time zone
  <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://www.w3.org/2006/time#during> ?timeZone .
  ?timeZone <http://dbpedia.org/ontology/country> ?country1 .

  # Get the country for Serbian Progressive Party's administration
  <http://dbpedia.org/resource/Serbian_Progressive_Party> <http://dbpedia.org/property/administration> ?adminCountry .
  ?adminCountry <http://www.w3.org/2006/time#during> ?country2 .

  # Find entities in the region of both countries
  ?entity <http://dbpedia.org/ontology/country> ?region1 .
  ?entity <http://dbpedia.org/ontology/country> ?region2 .
  
  FILTER(?region1 = ?country1 && ?region2 = ?country2)
}
```",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
339,11,val,Give me the child of the child of Christian IX of Denmark and father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchild WHERE {
    ?child <http://dbpedia.org/ontology/birthPlace> ?place .
    <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
    ?grandchild <http://dbpedia.org/property/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/birthName> ""Princess Elizabeth of Greece and Denmark"" .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
391,31,val,"Give me the actor of The Departed and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
# Step 1: Find actors of ""The Departed""
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 2: Filter actors who are natives of Jackson, Tennessee
SELECT DISTINCT ?actor WHERE {
    ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
    ?actor <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jackson,_Tennessee> .
    <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 3: Find the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/property/nicknames> ?nickname .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,39,val,Give me the associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Part 1: Associated Musical Artist of Jim Sheppard
SELECT ?musicalArtist WHERE {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/musicalArtist> ?musicalArtist .
}

UNION

# Part 2: Band of the Person Born as Joseph Michael
SELECT ?band WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Joseph Michael"" .
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,25,val,Give me the alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater ?alterEgo WHERE {
    OPTIONAL { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater . }
    OPTIONAL { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?alterEgo . }
}
```",3,3,4,2,2,3,3,71,2,6,0,0.25,1.0,0.4
801,44,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in  and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Step 1: Identify the musical work by 50 Cent that is a song.
SELECT ?song WHERE {
    ?song <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/50_Cent>;
          <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/MusicalWork108069068>.
}

# Step 2: Determine the producer of this song.
SELECT ?producer WHERE {
    ?song <http://dbpedia.org/ontology/producer> ?producer.
}

# Step 3: Find the writer (musical artist) of ""40 Dayz & 40 Nightz.""
SELECT ?writer WHERE {
    <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> <http://dbpedia.org/ontology/writer> ?writer.
}

# Step 4: Check for professional associations between the producer and the writer.
SELECT DISTINCT ?producer ?writer WHERE {
    ?song <http://dbpedia.org/ontology/producer> ?producer;
          <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/50_Cent>.
    ?album <http://dbpedia.org/ontology/writer> ?writer.
    FILTER(?writer = <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz>)
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
701,43,val,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> .
    ?person <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Meritamen> .
    ?setiChild <http://dbpedia.org/ontology/parent> ?person .
    ?setiChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Seti_I> .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
701,25,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
SELECT ?parentOfHenuttawy ?spouseOfFatherOfMerneptah WHERE {
    # Find the parent of Henuttawy (19th dynasty)
    ?parentOfHenuttawy <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> .

    # Find the father of Merneptah
    ?fatherOfMerneptah <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Merenptah> .
    
    # Find the spouse of the father of Merneptah
    ?fatherOfMerneptah <http://dbpedia.org/ontology/spouse> ?spouseOfFatherOfMerneptah .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
547,19,val,Give me the resting place of the child of James Burton (property developer) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?child ?childRestingPlace ?simonCadellRestingPlace WHERE {
  # Find the child of James Burton (property developer)
  <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
  
  # Get the resting place for each identified child
  OPTIONAL { ?child <http://dbpedia.org/ontology/burialPlace> ?childRestingPlace . }
  
  # Find the resting place of Simon Cadell
  <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/burialPlace> ?simonCadellRestingPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,21,val,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse . }
  UNION
  { <http://dbpedia.org/resource/Georgeanne_Rice> <http://dbpedia.org/ontology/spouse> ?spouse . }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
659,41,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
SELECT ?militaryForce WHERE {
    ?war <http://dbpedia.org/ontology/event> ?event .
    ?war <http://dbpedia.org/ontology/militaryConflict> ?conflict .
    FILTER(?event = <http://dbpedia.org/resource/Napoleonic_Wars> && ?conflict = <http://dbpedia.org/resource/Napoleonic_Wars>)
    
    ?militaryForce <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
    ?militaryForce <http://dbpedia.org/ontology/battle> ?war .

    OPTIONAL {
        ?regiment <http://dbpedia.org/ontology/militaryConflict> ?war .
        FILTER(?regiment = <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)>) 
    }
}
```",5,7,6,2,3,3,3,71,0,0,13,0,0.0,0
54,19,val,Give me the child of the father of Soe Min Wimala Dewi and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?person WHERE {
    ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> .
    ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
    ?person <http://dbpedia.org/ontology/father> ?father .
    ?person <http://dbpedia.org/ontology/child> ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,36,val,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Query to find the spouse of Ted McGinley
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Query to find a person born as the birth name of an alumnus of Ohio State University
SELECT DISTINCT ?person WHERE {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University>.
    ?alumnus <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
820,14,val,Give me the child of the parent of the professional in Actor.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?child WHERE {
    ?actor <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
    ?actor <http://dbpedia.org/ontology/parent> ?parent .
    ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,3,1,3,2,20,0,0,354,0,0.0,0
547,20,val,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?actor ?actorRestingPlace ?burtonRestingPlace WHERE {
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?movie <http://www.w3.org/2000/01/rdf-schema#label> ""Enemy at the Door""@en .
  OPTIONAL { ?actor <http://dbpedia.org/property/placeOfBurial> ?actorRestingPlace . }
  
  <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/property/placeOfBurial> ?burtonRestingPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
528,26,val,Give me the war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
SELECT ?war WHERE {
    ?work <http://dbpedia.org/property/date> ""01-09""^^xsd:date .
    ?work <http://dbpedia.org/ontology/author> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/ontology/war> ?war .
}
```

This query assumes that the work has a date property and an author (or commander) associated with it, and that the commander participated in battles linked to wars. Adjustments may be needed based on actual DBpedia schema details.",3,3,4,3,1,3,3,71,0,0,14,0,0.0,0
767,24,val,Give me the reference to  and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?reference ?almaMater WHERE {
    OPTIONAL { 
        ?administration <http://dbpedia.org/ontology/administration> <http://dbpedia.org/resource/George_K._Nash> .
        ?administration <http://dbpedia.org/ontology/reference> ?reference .
    }
    OPTIONAL {
        <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    }
}
```",3,3,4,2,2,3,3,71,0,1,2,0.0,0.0,0
801,34,val,Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
# Find The Shadow's true self
SELECT ?trueSelf WHERE {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?trueSelf .
}

# Find musical artists associated with Chris Taylor (music producer)
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedBand> ?artist .
}

# Combine results to find professional roles
SELECT DISTINCT ?trueSelf ?artist ?profession WHERE {
    OPTIONAL { 
        ?trueSelf <http://dbpedia.org/ontology/profession> ?profession .
    }
    OPTIONAL {
        ?artist <http://dbpedia.org/ontology/profession> ?profession .
    }
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
666,14,val,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ?v0 . }","```sparql
SELECT ?nickname WHERE {
  ?organisation <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/England>;
                a <http://dbpedia.org/ontology/Organisation>;
                <http://dbpedia.org/ontology/SoccerClub>;
                <http://dbpedia.org/ontology/SportsTeam>.
  OPTIONAL { ?organisation <http://www.w3.org/2000/01/rdf-schema#label> ?nickname. }
}
```",3,6,4,3,1,3,2,20,0,0,12,0,0.0,0
492,23,val,Give me the person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
SELECT ?decedent WHERE {
    ?work <http://purl.org/dc/terms/creator> ?author .
    ?author <http://dbpedia.org/ontology/workplace> ?workplace .
    ?person <http://dbpedia.org/property/deathPlace> ?workplace ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Person100000001> .
    FILTER(?work = <http://dbpedia.org/resource/French_Algeria_(book)>)
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
747,25,val,Give me the band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
SELECT ?person ?band WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Tracy_Bonham> 
    <http://dbpedia.org/resource/Amba_Shepherd>
  }
  ?person <http://dbpedia.org/ontology/band> ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,27,val,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
SELECT ?entity ?nickname WHERE {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
    ?entity <http://dbpedia.org/property/location> ?location .
    ?location <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> .
    OPTIONAL { ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?nickname . }
}
```",3,5,4,3,1,3,3,71,0,32,13,0.0,0.0,0
378,44,val,Give me the war of the commander in Peninsular War and claim to fame of the commander in Great Siege of Gibraltar and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Part 1: War of the Commander in Peninsular War
SELECT ?commander ?otherWar WHERE {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/wars> ?otherWar .
}

# Part 2: Claim to Fame of the Commander in Great Siege of Gibraltar
SELECT ?commander ?claimToFame WHERE {
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/claimsToFame> ?claimToFame .
}

# Part 3: War of Carl Pontus Gahn
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/wars> ?war .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
801,30,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?person ?associatedArtist WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?person <http://dbpedia.org/property/wrote> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
    ?person <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Westside_Story_(song)> .
    ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,20,val,Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Step 1: Get commanders of the Peninsular War
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/battleCommander> ?commander .
}

# Step 2: Find wars commanded by those commanders
SELECT DISTINCT ?war WHERE {
    ?commander <http://dbpedia.org/ontology/battle> ?war .
    FILTER(?commander IN (SELECT ?c WHERE { 
        <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/battleCommander> ?c . 
    }))
}

# Step 3: Get wars commanded by Carl Pontus Gahn
SELECT DISTINCT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
}

# Step 4: Find common wars between commanders of the Peninsular War and Carl Pontus Gahn
SELECT DISTINCT ?commonWar WHERE {
    ?commander <http://dbpedia.org/ontology/battle> ?commonWar .
    FILTER(?commander IN (SELECT ?c WHERE { 
        <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/battleCommander> ?c . 
    }))
    VALUES ?gahnWars {
        (<http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war)
    }
    FILTER(?commonWar IN (SELECT ?w WHERE { ?gahnWars } ))
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
9,44,val,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?university ?nickname WHERE {
    ?university <http://dbpedia.org/ontology/nickname> ?nickname .
    FILTER(?nickname = ""Queen's University Belfast"")
    
    OPTIONAL { 
        ?almaMater <http://dbpedia.org/property/almaMater> ?university .
        ?almaMater rdf:type dbo:Person .
        FILTER(STR(?almaMater) IN (""John Alderdice"", ""Baron Alderdice""))
    }
    
    OPTIONAL {
        ?recipient <http://dbpedia.org/ontology/awards> <http://dbpedia.org/resource/Royal_Medal> .
        ?recipient <http://dbpedia.org/property/almaMater> ?university .
    }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
339,15,val,Give me the father of Princess Elizabeth of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?fatherOfPrincessElizabeth ?predecessorChild ?finalResult WHERE {
    # Step 1: Find father of Princess Elizabeth of Greece and Denmark
    <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/ontology/father> ?fatherOfPrincessElizabeth .

    # Step 2: Find predecessor of Frederick VIII of Denmark
    <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> <http://dbpedia.org/ontology/predecessor> ?predecessor .

    # Step 3: Find child of the predecessor
    ?predecessorChild <http://dbpedia.org/ontology/child> ?predecessor .
    
    # Step 4: Find child of the child from step 3
    ?finalResult <http://dbpedia.org/ontology/child> ?predecessorChild .

    FILTER(?fatherOfPrincessElizabeth = ?finalResult)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
547,39,val,Give me the resting place of Simon Cadell and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query 1: Resting place of Simon Cadell
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/burial> ?restingPlace .
}

UNION

# Query 2: Resting place of awardees of Gerald Graham's awards
SELECT ?awardee ?restingPlace WHERE {
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?award .
    ?awardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?awardee != <http://dbpedia.org/resource/Gerald_Graham>)
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/burial> ?restingPlace . }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
528,36,val,Give me the war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?force WHERE {
  # Part 1: Find the war associated with Irene Morales
  OPTIONAL { 
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
  }
  
  # Part 2: Identify the force of Narciso Campero
  {
    SELECT ?person WHERE {
      ?person <http://dbpedia.org/property/birthName> ""Narciso Campero"" .
    }
    
    OPTIONAL {
      ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
      FILTER(?type IN (<http://dbpedia.org/ontology/MilitaryUnit>, <http://dbpedia.org/ontology/Organisation>)).
      ?person <http://dbpedia.org/property/memberOf> ?force .
    }
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
617,24,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
    ?child <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> .
    ?parent <http://dbpedia.org/ontology/child> ?child .
    FILTER(?parent = <http://dbpedia.org/resource/Antiochus_III_the_Great>) .
    ?child <http://dbpedia.org/property/spouseOrPartner> ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
339,13,val,Give me the child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchild WHERE {
    ?predecessor <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> .
    ?predecessorChild <http://dbpedia.org/ontology/child> ?predecessor .
    ?predecessorChildChild <http://dbpedia.org/ontology/child> ?predecessorChild .
    BIND(?predecessorChildChild AS ?grandchild)
}
```",3,3,4,3,1,3,2,20,0,2,32,0.0,0.0,0
16,20,val,Give me the professional in the profession of Satomi Ishihara and spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?professional WHERE {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .
    ?individual <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
    ?individual <http://dbpedia.org/ontology/profession> ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,18,val,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Laodice_IV>.
  ?person <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Antiochus_III_the_Great>.
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)>
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
996,14,val,Give me the entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
SELECT ?individual ?award ?entity WHERE {
    ?individual <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Palestine_(region)> .
    ?individual <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ?entity .
}
```",3,3,4,3,1,3,2,20,0,0,292,0,0.0,0
391,21,val,Give me the native of the figure known as Hub City and actor of All About the Andersons.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?hubCityNative ?actorNative WHERE {
    ?hubCity <http://www.w3.org/2000/01/rdf-schema#label> ""Hub City""@en .
    ?hubCity <http://dbpedia.org/ontology/nativePlace> ?hubCityNative .

    ?actor <http://dbpedia.org/property/actedIn> <http://dbpedia.org/resource/All_About_the_Andersons> .
    ?actor <http://dbpedia.org/ontology/nativePlace> ?actorNative .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
345,14,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
SELECT ?person ?team WHERE {
    # Get the birthdate of Eiður Guðjohnsen
    <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://www.w3.org/2002/07/owl#sameAs> ?birthDate .

    # Find a person who is both a soccer player and manager, born on the same date as Eiður Guðjohnsen
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .

    # Find the team associated with this person
    ?person <http://dbpedia.org/property/team> ?team .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
9,37,val,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?almaMater WHERE {
    ?award <http://dbpedia.org/ontology/reference> ""Royal Medals"" .
    ?person <http://dbpedia.org/property/awards> ?award .
    ?person <http://xmlns.com/foaf/0.1/knowsAs> ""QUB"" .
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,42,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?person WHERE {
  # Condition 1: Commander in Franco-Hova Wars
  ?person <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Franco-Hova_Wars> .
  
  # Condition 2: Decedent at the capital of Algeria (Algiers)
  ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers> .

  # Condition 3: Decedent at the work location of Joseph C. Satterthwaite
  ?workLocation <http://dbpedia.org/ontology/workLocation> ?satterthwaiteWork .
  ?person <http://dbpedia.org/property/deathPlace> ?workLocation .
  
  # Identify Satterthwaite's work location
  ?satterthwaite <http://dbpedia.org/ontology/jobTitle> ""US Assistant Secretary of State for African Affairs"" ;
                  <http://dbpedia.org/ontology/workLocation> ?satterthwaiteWork .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
617,28,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
SELECT ?spouse ?childOfChild WHERE {
    # Step 1: Find Laodice IV's spouse
    <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .

    # Step 2: Find children of Seleucus II Callinicus who are royalty
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
    ?child a <http://dbpedia.org/ontology/Royalty> .

    # Step 3: Find parent of Nysa (wife of Pharnaces I of Pontus)
    ?nysaParent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> .
    
    # Step 4: Match the child from step 2 with the parent found in step 3
    ?childOfChild <http://dbpedia.org/ontology/parent> ?child .
    FILTER(?nysaParent = ?child)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
534,13,val,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?birthPlace WHERE {
    ?politician <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Essex> .
    ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?child <http://dbpedia.org/ontology/child> ?politician .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,23,val,Give me the parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
    ?child <http://dbpedia.org/ontology/child> ?spouse .
    ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
48,12,val,"Give me the band of Carl Falk and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Find the band of Carl Falk
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/member> ?band .
}

UNION

# Find the actor who is a musical artist in ""Honor Up"" and their band
SELECT ?actorBand WHERE {
    ?movie <http://dbpedia.org/property/starring> ?actor .
    ?movie rdfs:label ""Honor Up""@en .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?actor <http://dbpedia.org/ontology/member> ?actorBand .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
182,15,val,Give me the entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?entity WHERE {
    ?author <http://dbpedia.org/ontology/subject> <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings>.
    ?author <http://dbpedia.org/property/entityInSriLanka> ?sriLankaEntity.
    ?author <http://dbpedia.org/property/war> ?warEntity.
    FILTER(?sriLankaEntity != ?warEntity).
    BIND(CONCAT(STR(?sriLankaEntity), "" "", STR(?warEntity)) AS ?entity)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
528,23,val,"Give me the war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?event ?war WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?event <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Chile>.
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?militaryForce <http://dbpedia.org/ontology/battle> ?war.
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce.
}
```",3,4,4,3,1,3,3,71,0,0,235,0,0.0,0
429,7,val,Give me the administration of the father of Martha Johnson Patterson and country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"```sparql
# Query for the administration of Martha Johnson Patterson's father
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/administration> ?administration .
}

# Query for the country of the 77th Ohio Infantry Regiment
SELECT ?country WHERE {
    <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?country .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
54,34,val,Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
# Step 1: Find Thinkhaya of Pagan's child
SELECT ?thinkhayasChild WHERE {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayasChild .
}

# Assuming the result from step 1 is stored in a variable or known, proceed to step 2

# Step 3: Find the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
SELECT ?predecessor WHERE {
    <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/property/predecessor> ?predecessor .
}

# Assuming the result from step 3 is stored in a variable or known, proceed to step 4

# Step 4: Find the child of Thinkhaya (the father) who matches the predecessor
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result .
    FILTER(?result = ?predecessor)
}
```

Note: This SPARQL script is a conceptual breakdown and assumes that the intermediate results (e.g., Thinkhaya's child, predecessor of Ameitta Thiri Maha Dhamma Dewi) are known or can be programmatically substituted into subsequent queries. In practice, these steps might need to be executed sequentially with manual intervention between steps to substitute actual URIs or values obtained from each query.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
959,20,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?member WHERE {
    <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
    <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/nativeCountry> ?nativeCountry .
    FILTER(?member = <http://dbpedia.org/resource/Yōichi_Masuzoe>)
}
```",3,4,4,2,2,3,3,71,0,0,84,0,0.0,0
435,14,val,Give me the territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
SELECT ?territory ?timeZoneRegion WHERE {
  ?territory <http://dbpedia.org/ontology/administrativeCapital> <http://dbpedia.org/resource/Reykjavík> .
  
  OPTIONAL {
    <http://dbpedia.org/resource/Bombali_Shebora_Chowchiefdom> <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://dbpedia.org/ontology/timeZone/region> ?timeZoneRegion .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
747,21,val,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
# Step 1: Get the birth date of Pavlo Khudzik
SELECT ?birthDate WHERE {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 2: Find persons born on the same date
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER(?birthDate = ""Pavlo_Khudzik_birth_date"") # Replace with actual birth date from step 1
}

# Step 3: Get the band associated with Shèna
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/memberOf> ?band .
}

# Step 4: Find persons born on Pavlo Khudzik's birth date who are members of the same band as Shèna
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER(?birthDate = ""Pavlo_Khudzik_birth_date"") # Replace with actual birth date from step 1
    ?person <http://dbpedia.org/ontology/memberOf> ?band .
    {
        SELECT DISTINCT ?band WHERE {
            <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/memberOf> ?band .
        }
    }
}
```

Note: Replace `""Pavlo_Khudzik_birth_date""` with the actual birth date obtained from Step 1. This query assumes that SPARQL supports subqueries and filtering as shown. Adjustments may be needed based on specific DBpedia query capabilities.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
994,29,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT DISTINCT ?person WHERE {
    # Meshuggah band member
    ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
    ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?meshuggah <http://dbpedia.org/property/member> ?person .

    # Slayer associated musical artist
    ?slayer <http://dbpedia.org/resource/S.A._Slayer> .
    ?slayer <http://dbpedia.org/property/associatedMusicalArtist> ?person .

    # Don Dokken band member
    ?dokken <http://dbpedia.org/resource/Don_Dokken> .
    ?dokken <http://dbpedia.org/property/member> ?person .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
528,29,val,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
# Find wars associated with Irene Morales
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Find the commander of the Battle of La Rinconada de Ate and their associated wars
SELECT ?battleWar WHERE {
    ?commander <http://dbpedia.org/property/commanded> <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> .
    ?commander <http://dbpedia.org/ontology/battle> ?battleWar .
}

UNION

# Find the force of Narciso Campero and their associated wars
SELECT ?forceWar WHERE {
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
           <http://dbpedia.org/property/commandedBy> <http://dbpedia.org/resource/Narciso_Campero> .
    ?force <http://dbpedia.org/ontology/battle> ?forceWar .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
617,23,val,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?grandChild WHERE {
    <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?successor .
    ?successor a <http://dbpedia.org/ontology/Royalty> .
    ?successor <http://dbpedia.org/ontology/child> ?child .
    ?child a <http://dbpedia.org/ontology/Royalty> .
    ?child <http://dbpedia.org/ontology/child> ?grandChild .
}
```",3,5,4,3,1,3,3,71,4,2,1,0.6666666666666666,0.8,0.7272727272727272
54,20,val,Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?thinkhayaChild ?narapatiChild WHERE {
  ?thinkhayaChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  ?narapatiChild <http://dbpedia.org/ontology/birthParent> ?parent .
  FILTER(?parent = ?thinkhayaChild)
  ?narapatiChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,22,val,"Give me the war of the profession, that is a military unit, of Heather Roy and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?war WHERE {
    ?heather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?beauchamp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?heather <http://dbpedia.org/property/person> <http://dbpedia.org/resource/Heather_Roy>.
    ?beauchamp <http://dbpedia.org/property/person> <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester>.
    ?heather <http://dbpedia.org/ontology/battle> ?war.
    ?beauchamp <http://dbpedia.org/ontology/battle> ?war.
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,40,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  ?person a <http://dbpedia.org/class/yago/OfficeHolder108069068> .
  ?person <http://dbpedia.org/property/battleCommanded> <http://dbpedia.org/resource/Battle_of_Leipzig> .
  ?person <http://dbpedia.org/ontology/militaryConflict> <http://dbpedia.org/resource/Napoleonic_Wars> .
}
```",5,6,6,3,3,3,3,71,0,0,5,0,0.0,0
184,40,val,"Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
# Step 1: Find the parent of Archduchess Ilona of Austria
SELECT ?parentIlona WHERE {
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/parent> ?parentIlona .
}

# Step 2: Find the child of Archduke Joseph August of Austria
SELECT ?childJosephAugust WHERE {
    <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?childJosephAugust .
}

# Step 3: Identify the parent of a native from a settlement at 96.0 meters elevation
SELECT DISTINCT ?parentNative WHERE {
    ?settlement <http://dbpedia.org/property/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
    ?native <http://dbpedia.org/ontology/nativePlace> ?settlement .
    ?native <http://dbpedia.org/ontology/parent> ?parentNative .
}

# Step 4: Combine results to find the individual satisfying all conditions
SELECT DISTINCT ?individual WHERE {
    # Parent of Archduchess Ilona
    ?individual <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .
    
    # Child of Archduke Joseph August
    ?individual <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
    
    # Parent of a native from a settlement at 96.0 meters elevation
    ?native <http://dbpedia.org/ontology/nativePlace> ?settlement .
    ?settlement <http://dbpedia.org/property/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
    ?native <http://dbpedia.org/ontology/parent> ?individual .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
378,26,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?commander ?otherWar WHERE {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/property/commanders> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?otherWar .
    FILTER(?otherWar != <http://dbpedia.org/resource/Peninsular_War>)
}
```",3,4,4,3,1,3,3,71,0,0,118,0,0.0,0
767,35,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
# Part 1: Find settlement in administration of Green
SELECT ?settlement WHERE {
    ?green <http://dbpedia.org/ontology/administrativeUnit> ?admin .
    ?admin <http://dbpedia.org/ontology/settlement> ?settlement .
    FILTER(CONTAINS(LCASE(?green), ""green""))
}

# Part 2: Find alter ego of Black Hood
SELECT ?alterEgo WHERE {
    <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?alterEgo .
}

# Combine results to find a reference or connection
SELECT DISTINCT ?settlement ?alterEgo WHERE {
    { 
        ?green <http://dbpedia.org/ontology/administrativeUnit> ?admin .
        ?admin <http://dbpedia.org/ontology/settlement> ?settlement .
        FILTER(CONTAINS(LCASE(?green), ""green""))
    }
    OPTIONAL {
        <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?alterEgo .
    }
}
```",4,5,5,2,2,3,3,71,0,0,7,0,0.0,0
747,38,val,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?writerBand ?tracyBand WHERE {
  # Part 1: Band of the writer of ""Apollo"" by Hardwell
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?writer .
  ?writer <http://dbpedia.org/ontology/band> ?writerBand .

  # Part 2: Band of Tracey Elizabeth McSween (Tracy Morgan)
  OPTIONAL {
    <http://dbpedia.org/resource/Tracy_Morgan> <http://dbpedia.org/ontology/band> ?tracyBand .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
360,19,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of Johannesburg.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
SELECT ?album ?writer WHERE {
    ?album <http://dbpedia.org/ontology/writer> ?writer .
    ?album <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Dave_Flett> .
    ?album <http://dbpedia.org/property/reference> ?reference .
    ?reference rdfs:label ""Manfred Mann""@en .
    ?writer <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Johannesburg> .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
994,42,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Part 1: Find associated musical artists of Red Tide (band)
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

UNION

# Part 2: Find band members of Donald Maynard Dokken
SELECT ?member WHERE {
    ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?dokken <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken"" .
    ?band <http://dbpedia.org/ontology/member> ?dokken .
    ?band <http://dbpedia.org/ontology/member> ?member .
    FILTER(?dokken != ?member)
}

UNION

# Part 3: Find associated musical artists of Watchtower (band)
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

UNION

# Part 4: Find associated musical artists of the artists found in Part 3
SELECT ?subArtist WHERE {
    ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?subArtist .
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
251,13,val,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/place> ?result . },"```sparql
# Query to get the administration of Forza Italia (2013)
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?administration .
}

# Query to get the location of the war involving Louis François Félix Musnier
SELECT DISTINCT ?location WHERE {
    ?battle <http://dbpedia.org/property/personInvolved> <http://dbpedia.org/resource/Louis_François_Félix_Musnier> .
    ?battle <http://dbpedia.org/ontology/location> ?location .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
492,35,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
SELECT ?person WHERE {
  # Part 1: Person decedent at the capital of Algeria
  ?capital <http://www.w3.org/2000/01/rdf-schema#label> ""Algiers""@en .
  ?capital <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Algeria> .
  
  # Part 2: Person decedent at the work of Joseph C. Satterthwaite
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/property/work> ?workPlace .

  # Find person who died in both places
  ?person <http://dbpedia.org/ontology/deathPlace> ?capital .
  ?person <http://dbpedia.org/ontology/deathPlace> ?workPlace .
}
```",4,5,5,2,2,3,3,71,0,0,16,0,0.0,0
161,25,val,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?militaryForce WHERE {
    ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> .
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    OPTIONAL {
        ?militaryForce <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Emilio_Mola> .
    }
}
```",3,4,4,2,2,3,3,71,0,163,32,0.0,0.0,0
801,28,val,Give me the producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?producer ?artist ?shadowAlterEgo WHERE {
  # Producer of Westside Story (song)
  <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .

  # Associated musical artist of Chris Taylor (music producer)
  OPTIONAL { 
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
  }

  # Professional in the alter ego of The Shadow
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?shadowAlterEgo .
  }
}
```",4,4,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
981,11,val,Give me the entity in the region of Time in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?timeEntity ?birthPlace WHERE {
  # Query for entity in the region of ""Time in Indonesia""
  ?timeEntity <http://dbpedia.org/ontology/timeZone> ?tz .
  ?tz rdfs:label ?tzLabel .
  FILTER(CONTAINS(LCASE(?tzLabel), ""indonesia""))

  # Query for birthplace of Novia Indriani Mamuaja
  OPTIONAL {
    <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",3,3,4,2,2,3,2,20,1,972,0,0.0010277492291880781,1.0,0.002053388090349076
232,19,val,Give me the child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?child WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""John Devon Roland Pertwee""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
    ?person <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
    ?person <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,13,val,"Give me the child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandGrandChild WHERE {
    ?parent <http://dbpedia.org/property/parentsOrGuardians> <http://dbpedia.org/resource/Mlada_(abbess)> .
    ?royalChild <http://dbpedia.org/ontology/child> ?parent ;
                 a <http://dbpedia.org/ontology/Royalty> .
    ?grandGrandChild <http://dbpedia.org/ontology/child> ?royalChild .
}
```",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
801,33,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT DISTINCT ?professional ?work ?producer WHERE {
  ?professional a <http://dbpedia.org/ontology/MusicalArtist> ;
                a <http://dbpedia.org/ontology/Rapper> .
  
  ?work a <http://dbpedia.org/ontology/MusicalWork> ;
        a <http://dbpedia.org/ontology/Song> ;
        a <http://dbpedia.org/ontology/Work> ;
        <http://dbpedia.org/property/artist> ?professional .

  OPTIONAL { ?work <http://dbpedia.org/property/producer> ?producer . }
}
```",4,8,5,3,2,3,3,71,0,0,473,0,0.0,0
959,38,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
SELECT ?nativeOfCountry ?teamManager WHERE {
    # Find the residence country of Yōichi Masuzoe
    <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence a <http://dbpedia.org/ontology/Country> .

    # Find the native inhabitants of that country
    ?nativeOfCountry <http://dbpedia.org/ontology/nativeOf> ?residence .

    # Find the team managed by Takashi Sekizuka
    <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/property/teamManaged> ?team .

    # Find the manager of that team
    ?team <http://dbpedia.org/ontology/manager> ?teamManager .
}
```",4,5,5,2,2,3,3,71,0,0,6,0,0.0,0
959,34,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?manager ?university WHERE {
    ?team <http://dbpedia.org/property/teamManager> ?manager .
    ?manager <http://dbpedia.org/ontology/birthYear> ""1958""^^xsd:gyear .
    ?manager <http://dbpedia.org/ontology/almaMater> ?university .
    ?university <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""japan"") && 
           EXISTS { ?university <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/JapaneseOrganizations1000000010> } &&
           EXISTS { ?university <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> } &&
           EXISTS { ?university <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> })
    FILTER(STRSTARTS(STR(?team), ""http://dbpedia.org/resource/2013_Júbilo_Iwata_season""))
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
378,31,val,Give me the war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Query for Joaquín Blake's wars
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Query for the person born as Carl Pontus Gahn's wars
SELECT ?war WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en .
    ?person <http://dbpedia.org/ontology/battle> ?war .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
959,44,val,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
# Step 1: Find the manager of Takashi Sekizuka's team
SELECT ?team WHERE {
    <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team .
}

SELECT ?manager WHERE {
    ?team <http://dbpedia.org/ontology/coach> ?manager .
}

# Step 2: Find the native country of Yōichi Masuzoe
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/nationality> ?country .
}

# Step 3: Find members of University of Tsukuba
SELECT ?member WHERE {
    ?member <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
}

# Final query to find the common entity
SELECT DISTINCT ?manager WHERE {
    # Manager of Takashi Sekizuka's team
    ?team <http://dbpedia.org/ontology/coach> ?manager .
    
    # Team associated with Takashi Sekizuka
    <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team .

    # Native country of Yōichi Masuzoe
    ?country <http://www.w3.org/2000/01/rdf-schema#label> ""Japan"" .
    <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/nationality> ?country .

    # Member of University of Tsukuba
    ?member <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
    
    FILTER(?manager = ?member)
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
182,12,val,Give me the war of Mahesh Senanayake and entity in Sri Lanka and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT DISTINCT ?war WHERE {
  # For Mahesh Senanayake
  OPTIONAL { 
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Sri Lanka"" .
  }
  
  # For Jagath Dias
  OPTIONAL { 
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?war .
  }
}
```",3,3,4,1,3,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
488,27,val,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?administration WHERE {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> .
    ?spouse a <http://dbpedia.org/ontology/Royalty> .
    ?father <http://dbpedia.org/ontology/father> ?spouse .
    ?father <http://dbpedia.org/property/administration> ?administration .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
232,20,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
# Step 1: Find Sean Pertwee's claim to fame (film or military conflict)
SELECT ?fame WHERE {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/film> ?fame .
} UNION
{
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/militaryConflict> ?fame .
}

# Step 2: Find Jon Pertwee's children
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
}

# Step 3: Find which child is an actor in the identified film or military conflict
SELECT DISTINCT ?actor WHERE {
    ?fame <http://dbpedia.org/ontology/film> ?film . # or <http://dbpedia.org/ontology/militaryConflict>
    ?child <http://dbpedia.org/ontology/child> ?actor .
    ?actor <http://dbpedia.org/property/actedIn> ?fame .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
328,26,val,Give me the commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?person ?commander WHERE {
    ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Budapest> .
    OPTIONAL { ?person <http://dbpedia.org/ontology/militaryUnit> ?force . }
    ?force <http://dbpedia.org/ontology/commander> ?commander .
}
```",3,3,4,3,1,3,3,71,0,0,306,0,0.0,0
16,25,val,Give me the professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?profession WHERE {
    ?resource <http://www.w3.org/2000/01/rdf-schema#label> ""Gigi Rice""@en .
    ?resource <http://dbpedia.org/ontology/birthName> ?birthName .
    FILTER(CONTAINS(LCASE(?birthName), LCASE(""Gigi Rice's birth name""))) # Replace with actual birth name if known
    ?resource <http://dbpedia.org/ontology/profession> ?profession .
    VALUES ?profession {<http://dbpedia.org/resource/Category:Actresses> <http://dbpedia.org/resource/Person>}
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,32,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
# Step 1: Find Sean Pertwee's child
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Find Sean Pertwee's claim to fame that is both a film and a military conflict
SELECT DISTINCT ?claimToFame WHERE {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/property/claimsToFame> ?claimToFame .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film98b8a2c0> .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108e6f7d> .
}

# Step 3: Find the actor associated with this claim to fame
SELECT DISTINCT ?actor WHERE {
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film98b8a2c0> .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108e6f7d> .
    ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
767,42,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
SELECT ?entity WHERE {
  # Settlement in the administration of Green
  ?admin <http://dbpedia.org/ontology/administrativeUnit> ?settlement .
  ?settlement <http://www.w3.org/2000/01/rdf-schema#label> ""Green"" .

  # Alter ego of Black Hood
  OPTIONAL { 
    ?blackHood <http://dbpedia.org/property/alterEgo> ?entity .
    ?blackHood <http://www.w3.org/2000/01/rdf-schema#label> ""Black Hood"" .
  }

  # Alma mater of Carl L. Nippert
  OPTIONAL {
    ?nippert <http://dbpedia.org/ontology/almaMater> ?entity .
    ?nippert <http://www.w3.org/2000/01/rdf-schema#label> ""Carl L. Nippert"" .
  }

  # Ensure the entity is a settlement
  ?entity <http://dbpedia.org/ontology/Settlement> .

  FILTER(?settlement = ?entity)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,22,val,Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?band WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Tracey Elizabeth McSween""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""Tracey Elizabeth McSween"" .
    ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?person <http://dbpedia.org/ontology/band> ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,29,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child ?parent WHERE {
    <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?child .
    ?child a <http://dbpedia.org/ontology/Royalty> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?child <http://dbpedia.org/ontology/birthParent> ?parent .
    ?parent rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
    ?parent <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
659,26,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?war ?commander WHERE {
    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?unit <http://dbpedia.org/property/commonName> ""Polish Horse"" .
    ?unit <http://dbpedia.org/ontology/battle> ?war.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?war <http://dbpedia.org/property/commander> ?commander.
}
```",3,7,4,3,1,3,3,71,0,0,130,0,0.0,0
747,31,val,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
# Step 1: Find the athlete and soccer player born in Zolotonosha and associated with Amba Shepherd
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Zolotonosha>.
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>.
    ?person <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer>.
    ?band <http://dbpedia.org/property/member> ?person.
    ?band <http://dbpedia.org/property/name> ""Amba Shepherd"" .
}

# Step 2: Get the birth date of this person
SELECT ?birthDate WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate.
}

# Step 3: Find another person with the same birth date
SELECT DISTINCT ?decedent WHERE {
    ?decedent <http://dbpedia.org/ontology/deathPlace> ?place .
    ?decedent <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER(?person != ?decedent)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,39,val,"Give me the parent of Henuttawy (19th dynasty) and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
# Step 1: Find the parent of Henuttawy (19th dynasty)
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/parent> ?parent .
}

# Step 2: Identify the commander in Battle of Perire who is royalty
SELECT ?commander WHERE {
    ?battle <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Q122> . # Assuming royalty is linked to a specific DBpedia class
}

# Step 3: Find the father of the commander identified in step 2
SELECT ?father WHERE {
    ?commander <http://dbpedia.org/ontology/father> ?father .
}

# Step 4: Find the spouse of the father from step 3
SELECT ?spouse WHERE {
    ?father <http://dbpedia.org/property/spouse> ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
696,15,val,"Give me the landmark at elevation of 50 and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
SELECT DISTINCT ?birthPlace WHERE {
    # Step 1: Identify The Boils as an organization, group, and band
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?band rdfs:label ""The Boils""@en .

    # Step 2: Find members of The Boils
    ?member <http://dbpedia.org/property/memberOf> ?band .
    
    # Step 3: Get birthplace of each member
    ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

    # Step 4: Identify landmarks at elevation of 50 meters
    ?landmark <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Landmark> .
    ?landmark <http://dbpedia.org/property/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#float> .

    # Step 5: Match birthplace with landmark location
    ?birthPlace rdfs:label ?locationLabel .
    ?landmark <http://dbpedia.org/ontology/location> ?location .
    ?location rdfs:label ?locationLabel .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
404,42,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?spouse WHERE {
    ?princess <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
    ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
    
    ?father <http://dbpedia.org/ontology/child> ?princess .
    ?ernestAugustusDuke <http://dbpedia.org/ontology/father> ?father .
    ?ernestAugustusDuke <http://www.w3.org/2000/01/rdf-schema#label> ""Ernest Augustus, Duke of Brunswick"" .

    ?child <http://dbpedia.org/ontology/father> ?ernestAugustusDuke .
    ?child <http://dbpedia.org/property/birthYear> 1914 .
    ?child <http://www.w3.org/2000/01/rdf-schema#label> ""Prince Ernest Augustus of Hanover"" .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
345,13,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
SELECT ?nickname WHERE {
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>.
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>.
    ?v0 <http://dbpedia.org/property/sportsTeam> <http://dbpedia.org/resource/Armando_Heeb>.
    ?v0 <http://dbpedia.org/property/nickname> ?nickname.
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
492,29,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?war ?commander WHERE {
    ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
         <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/property/personsInvolved> <http://dbpedia.org/resource/Frédéric-Georges_Herr> .
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    FILTER(?deathPlace IN (<http://dbpedia.org/resource/Algiers>, <http://dbpedia.org/resource/French_Algeria>))
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
184,29,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
SELECT ?child WHERE {
    ?parent <http://dbpedia.org/ontology/child> ?child .
    FILTER(?parent = <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria>)
    
    ?child <http://dbpedia.org/property/spouseOrPartner> ?spouse1 .
    ?spouse1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> .

    ?child <http://dbpedia.org/property/spouseOrPartner> ?spouse2 .
    ?spouse2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,21,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
SELECT ?figure ?mayor ?almaMater WHERE {
    ?figure <http://dbpedia.org/property/nickname> ""QUB"" .
    
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
           <http://dbpedia.org/ontology/officeHolder> ?office .
           
    ?office <http://dbpedia.org/property/forum> <http://dbpedia.org/resource/Northern_Ireland_Forum> .

    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
778,11,val,Give me the author of Chroot and entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
# Query 1: Find the author of ""Chroot""
SELECT ?author WHERE {
    ?chroot <http://dbpedia.org/ontology/wikiPageWikiLink> <http://dbpedia.org/resource/Category:Unix> .
    ?chroot <http://purl.org/dc/terms/title> ""Chroot""@en .
    ?chroot <http://dbpedia.org/property/author> ?author .
}

# Query 2: Find an entity in the award of Ralph L. Brinster
SELECT DISTINCT ?award ?otherAwardee WHERE {
    <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/ontology/awards> ?award .
    ?otherAwardee <http://dbpedia.org/ontology/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Ralph_L._Brinster>)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
16,40,val,Give me the professional in Actress and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
SELECT ?spouse WHERE {
    ?ted <http://dbpedia.org/ontology/birthName> ""Ted McGinley"" .
    ?rice <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
    ?ted <http://dbpedia.org/property/spouse> ?spouse .
    ?rice <http://dbpedia.org/property/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actress> .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,22,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Dokken> <http://dbpedia.org/ontology/band> ?band .
    OPTIONAL { 
        <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/property/associatedMusicalArtist> ?band .
    }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,39,val,"Give me the commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?commander ?militaryForce WHERE {
    ?battle <http://dbpedia.org/ontology/societalEvent> ?event .
    ?battle <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Battle_of_Leipzig> .
    ?battle <http://dbpedia.org/ontology/event> ?event .
    ?battle <http://dbpedia.org/ontology/militaryConflict> ?conflict .

    OPTIONAL { ?reference <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . }
    
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",4,7,5,3,2,3,3,71,0,0,6,0,0.0,0
959,36,val,"Give me the member of University of Tsukuba and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
SELECT ?managerOfTeam WHERE {
    ?season <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Kashima_Antlers> .
    ?season <http://dbpedia.org/property/year> ""1998""^^<http://www.w3.org/2001/XMLSchema#gYear> .
    ?season <http://dbpedia.org/ontology/coach> ?managerOfKashimaAntlers .
    ?managerOfKashimaAntlers <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Sports_manager> .

    ?team <http://dbpedia.org/property/teamManager> ?managerOfTeam .
    FILTER(?team = ?season)
}

SELECT DISTINCT ?member WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sports_manager> .
    ?person <http://dbpedia.org/property/teamManager> ?managerOfTeam .
    
    ?universityMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/University_of_Tsukuba> .
    ?universityMember = ?person
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,34,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of Joseph Michael.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Find the reference or artist associated with Nevermore (2006 film)
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://dbpedia.org/ontology/reference> ?artist .
}

# Step 2: Identify Joseph Michael's band
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Joseph_Michael_(musician)> <http://dbpedia.org/property/band> ?band .
}

# Step 3: Find the band members of that band
SELECT ?member WHERE {
    ?band <http://dbpedia.org/ontology/member> ?member .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
701,30,val,Give me the parent of Meritamen and spouse of the father of Merneptah and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?person WHERE {
  # Condition 1: Parent of Meritamen
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Meritamen>.

  # Condition 2: Spouse of the father of Merneptah
  ?father <http://dbpedia.org/property/spouse> ?person.
  ?father <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Merenptah>.

  # Condition 3: Parent of Henuttawy (19th dynasty)
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)>.
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,37,val,"Give me the administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?administration ?deathPlace WHERE {
    # Part 1: Administration of Emperor Go-Yōzei
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/administration> ?administration .

    # Part 2: Father of Matsudaira Tadamasa who is an office holder
    OPTIONAL {
        ?officeHolder <http://dbpedia.org/property/father> ?matsudairaTadamasa .
        ?matsudairaTadamasa <http://dbpedia.org/resource/Matsudaira_Tadamasa> .

        # Part 3: Father of the office holder who is a politician
        ?officeHolder <http://dbpedia.org/property/father> ?politician .
        ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

        # Part 4: Death place of the politician
        ?politician <http://dbpedia.org/property/deathPlace> ?deathPlace .
    }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
92,32,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?bandMember WHERE {
    # Find band members of Nevermore who are also artists
    ?bandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore>;
                a <http://dbpedia.org/ontology/MusicalArtist>.

    # Find Jim Sheppard and his associated musical artist
    OPTIONAL {
        ?sheppard <http://www.w3.org/2000/01/rdf-schema#label> ""Jim Sheppard""@en;
                  a <http://dbpedia.org/ontology/MusicalArtist>;
                  <http://dbpedia.org/property/birthName> ""Jim Sheppard""^^<http://www.w3.org/2001/XMLSchema#string>.
        ?sheppard <http://dbpedia.org/ontology/associatedActs> ?bandMember.
    }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
528,39,val,Give me the war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Part 1: Wars of Orozimbo Barbosa
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?war .
}

# Part 2: Force of the person born as Narciso Campero
SELECT ?force WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Narciso Campero"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER(?type IN (<http://dbpedia.org/ontology/MilitaryUnit>, <http://dbpedia.org/ontology/Organisation>)).
    ?person <http://dbpedia.org/property/memberOf> ?force .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
534,15,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
# Part 1: Headquarter of Royal Dublin Society
SELECT ?headquarters WHERE {
    <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarters> ?headquarters .
}

UNION

# Part 2: Birth place of the child who is a politician and office holder, whose parent is native to Essex
SELECT ?birthPlace WHERE {
    ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Essex> .
    ?politician <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?child <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
701,34,val,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
    ?spouse1 <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
    ?child <http://dbpedia.org/ontology/child> ?spouse1 .
    ?parent <http://dbpedia.org/ontology/parent> ?child .
    ?spouse2 <http://dbpedia.org/property/spouse> ?parent .
    ?spouse2 <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ramesses_II> .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
747,29,val,Give me the band of the writer of Apollo (Hardwell song) and person born on 1985-04-29 and band of Shèna.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . }","```sparql
SELECT DISTINCT ?band WHERE {
  # Find the writer of ""Apollo"" by Hardwell and their band
  ?song <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Apollo_(Hardwell_song)> .
  ?song <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/property/band> ?band .

  # Find the person born on April 29, 1985, and their band
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?resource .
  ?resource <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^xsd:date .
  ?person <http://dbpedia.org/property/band> ?band .

  # Find Shèna and her band
  ?sena <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Shèna> .
  ?sena <http://dbpedia.org/property/band> ?band .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
179,14,val,Give me the parent of the child of the parent of Vajiralongkorn.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?grandparent WHERE {
    ?parent <http://dbpedia.org/ontology/spouse> ?vajiralongkornParent .
    ?vajiralongkornParent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> .
    ?parent <http://dbpedia.org/ontology/child> ?grandparent .
}
```",3,3,4,3,1,3,2,20,0,4,3,0.0,0.0,0
9,32,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT DISTINCT ?almaMater WHERE {
  # Find the awardee of the Royal Medal and their alma mater
  ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Find the mayor of Northern Ireland Forum and their alma mater
  OPTIONAL {
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?mayor <http://dbpedia.org/property/politicalRole> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",4,5,5,2,2,3,3,71,1,30,0,0.03225806451612903,1.0,0.0625
747,44,val,Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on 1985-04-29.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person ?band WHERE {
  # Tracey Elizabeth McSween
  { 
    ?person rdfs:label ""Tracey Elizabeth McSween""@en .
    ?person <http://dbpedia.org/ontology/band> ?band .
  }
  
  UNION
  
  # Writer of Apollo (Hardwell song)
  { 
    ?song dbo:lyricsBy ?writer .
    ?song dbo:title ""Apollo"" .
    ?song dbo:artist <http://dbpedia.org/resource/Hardwell> .
    ?writer rdfs:label ?personLabel .
    FILTER(CONTAINS(LCASE(?personLabel), ""apollo hardwell song writer""))
    ?writer <http://dbpedia.org/ontology/band> ?band .
  }
  
  UNION
  
  # Person born on 1985-04-29
  { 
    ?person dbo:birthDate ""1985-04-29""^^xsd:date .
    ?person <http://dbpedia.org/ontology/band> ?band .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
528,33,val,Give me the war of Irene Morales and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
# Part 1: Wars associated with Irene Morales
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/war> ?war .
}

# Part 2: Assuming we identify the correct resource for --01-09, replace `?work` with that resource.
# Wars associated with the commander of a work dated --01-09
SELECT ?commander ?war WHERE {
    ?work <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?war .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
915,13,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . },"```sparql
SELECT ?resident WHERE {
    ?film <http://dbpedia.org/property/film> ""Pipe Dreams (1976 film)"" .
    ?film <http://dbpedia.org/ontology/director> ?director .
    ?director <http://dbpedia.org/ontology/birthPlace> ?birthplace .
    ?birthplace a <http://dbpedia.org/class/yago/Settlement108069068> .
    ?birthplace <http://dbpedia.org/ontology/resident> ?resident .
}
```",3,4,4,3,1,3,2,20,0,0,15,0,0.0,0
498,7,val,"Give me the band of Will Rahmer and band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?willRahmerBand ?solaceOfRequiemBand WHERE {
    # Find the band of Will Rahmer
    OPTIONAL {
        <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/memberOf> ?willRahmerBand .
    }
    
    # Find Solace of Requiem as an organization and a band, then its associated band
    ?solaceOfRequiem <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?solaceOfRequiem <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?solaceOfRequiem <http://dbpedia.org/ontology/memberOf> ?solaceOfRequiemBand .
    
    # Bind Solace of Requiem to its resource
    BIND(<http://dbpedia.org/resource/Solace_of_Requiem> AS ?solaceOfRequiem)
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
392,15,val,"Give me the entity in the region, that is a country, of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?entity WHERE {
    ?country <http://dbpedia.org/ontology/timeZone> ""Central European Time"" .
    <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?province .
    ?province <http://dbpedia.org/ontology/country> ?country .
    ?entity <http://dbpedia.org/ontology/location> ?location .
    FILTER(?location = ?province || ?location = ?country)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
534,14,val,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
SELECT ?headquarter WHERE {
    ?event <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue> ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure> .
    ?event <http://dbpedia.org/property/name> ""2012 Pro12 Grand Final"" .
    ?location <http://dbpedia.org/ontology/owner> ?owner .
    ?owner <http://dbpedia.org/property/headquarters> ?headquarter .
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
488,38,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
# Part 1: Death place of Yūki Hideyasu's father who is a politician
SELECT ?deathPlace WHERE {
    ?yukiHideyasu <http://dbpedia.org/ontology/father> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?father <http://dbpedia.org/property/deathPlace> ?deathPlace .
    FILTER(STRSTARTS(STR(?yukiHideyasu), ""http://dbpedia.org/resource/Yūki_Hideyasu""))
}

# Part 2: Administration of Emperor Go-Mizunoo's father
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/administration> ?administration .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
55,12,val,Give me the band member of Guns N' Roses and band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Guns_N%27_Roses>.
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Metallica>.
  ?person <http://dbpedia.org/property/band> <http://dbpedia.org/resource/Newsted>.
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
10,13,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
SELECT ?associatedArtist WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Matt Colton"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?person <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Luke_Vibert> .
    ?person <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
77,14,val,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?force WHERE {
    ?organisation <http://www.w3.org/2000/01/rdf-schema#label> ""Warsaw""@en .
    ?organisation <http://dbpedia.org/ontology/administrativeUnit> ?territory .
    ?mayor <http://dbpedia.org/property/mayor> ?organisation .
    ?mayor <http://dbpedia.org/ontology/countryForces> ?force .
}
```",3,4,4,3,1,3,2,20,0,0,40,0,0.0,0
963,12,val,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in Serbia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
SELECT ?administration WHERE {
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Sremski Karlovci""@en .
    ?location <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> .
    ?location <http://dbpedia.org/ontology/rulingParty> ?party .
    ?party a <http://dbpedia.org/ontology/PoliticalParty> .
    ?administration <http://dbpedia.org/property/administration> ?party .
}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,34,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and force of Narciso Campero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
SELECT DISTINCT ?societalEventWar ?camperoForceWar WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  ?event <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Chile> .
  ?event <http://dbpedia.org/ontology/battle> ?societalEventWar .
  
  OPTIONAL {
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
                   <http://dbpedia.org/property/person> <http://dbpedia.org/resource/Narciso_Campero> .
    ?militaryForce <http://dbpedia.org/ontology/battle> ?camperoForceWar .
  }
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
404,33,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",4,6,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
391,40,val,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?native WHERE {
    ?actor <http://www.w3.org/2000/01/rdf-schema#label> ""Jack Nicholson""@en .
    ?actor <http://dbpedia.org/property/nicknames> ?nickname .
    FILTER(CONTAINS(LCASE(?nickname), ""jackson, tennessee""))
    ?actor <http://dbpedia.org/ontology/film> ?film .
    VALUES ?film { 
        <http://dbpedia.org/resource/The_Departed> 
        <http://dbpedia.org/resource/All_About_the_Andersons> 
    }
    ?actor <http://dbpedia.org/ontology/nativePlace> ?native .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,41,val,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of Ferenc Szálasi and leader of People's Commissariat of Defense of the Soviet Union.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
SELECT ?award ?otherAwardee WHERE {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>)
}
```",5,5,6,2,3,3,3,71,1,1491,0,0.0006702412868632708,1.0,0.0013395847287340924
281,23,val,Give me the war of the awardee of the award of Jonathon Band.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT DISTINCT ?war WHERE {
    ?award <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Jonathon_Band>.
    ?otherAwardee <http://dbpedia.org/property/awards> ?award.
    ?otherAwardee <http://dbpedia.org/ontology/battleOrWar> ?war.
}
```",3,3,4,3,1,3,3,71,0,0,450,0,0.0,0
963,13,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
SELECT ?entity WHERE {
    <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://www.w3.org/2006/time#during> ?timeZone .
    ?timeZone <http://dbpedia.org/ontology/country> ?country .
    ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
    FILTER(STRSTARTS(STR(?entity), ""http://dbpedia.org/resource/"") && 
           EXISTS { ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> })
}
```",3,4,4,3,1,3,2,20,0,0,173261,0,0.0,0
701,18,val,Give me the spouse of Ramesses II and parent of Henuttawy (19th dynasty) and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
SELECT ?spouse WHERE {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II>.
    ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)>.
    ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Meritamen>.
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
9,42,val,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?almaMater WHERE {
    # Find the mayor of Northern Ireland Forum who is a politician
    ?mayor <http://dbpedia.org/ontology/politician> _:a .
    ?mayor <http://dbpedia.org/property/title> ""Mayor"" .
    ?mayor <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .

    # Find the figure known as the nickname of Queen's University Belfast
    ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast"" .
    ?figure <http://purl.org/dc/terms/nickname> ?nickname .

    # Find Allen Hill's alma mater
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaHill .

    # Ensure the alma mater is common among them
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?figure <http://dbpedia.org/ontology/almaMater> ?almaMater .
    FILTER(?almaMater = ?almaHill)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
547,32,val,Give me the resting place of the actor of Enemy at the Door and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
# Query 1: Resting place of the actor of ""Enemy at the Door""
SELECT ?actor ?restingPlaceActor WHERE {
    ?movie <http://dbpedia.org/property/starring> ?actor .
    ?movie <http://dbpedia.org/ontology/title> ""Enemy at the Door"" .
    OPTIONAL { ?actor <http://dbpedia.org/ontology/burial> ?restingPlaceActor . }
}

# Query 2: Resting place of the child of James Burton (property developer)
SELECT ?child ?restingPlaceChild WHERE {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    OPTIONAL { ?child <http://dbpedia.org/ontology/burial> ?restingPlaceChild . }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
179,15,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of Ubol Ratana.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person ?birthName WHERE {
    ?child <http://dbpedia.org/ontology/birthName> ?givenName .
    ?child <http://xmlns.com/foaf/0.1/familyName> ?familyName .
    BIND(CONCAT(?givenName, "" "", ?familyName) AS ?birthName)
    
    ?child <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Nakkhatra_Mangala> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?child <http://dbpedia.org/property/parent> ?ubolParent .
    
    ?ubolParent <http://dbpedia.org/property/child> <http://dbpedia.org/resource/Ubol_Ratana> .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
184,32,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?grandchild ?parentOfBudapestNative WHERE {
  # Step 1: Find the child of Archduke Joseph Karl
  ?child <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  
  # Step 2: From that child, find their child (the grandchild)
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .

  # Step 3: Check if this grandchild has any children who are natives of Budapest
  ?parentOfBudapestNative <http://dbpedia.org/ontology/nativeCountry> <http://dbpedia.org/resource/Budapest> .
  ?parentOfBudapestNative <http://dbpedia.org/ontology/parent> ?grandchild .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
996,11,val,Give me the force of the awardee of 1778.0 and entity in France.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
SELECT ?awardee ?force WHERE {
    ?awardee <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?year .
    FILTER(YEAR(?year) = 1778)
    ?awardee <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> .
    OPTIONAL { ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> . }
    OPTIONAL { ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> . }
    ?awardee <http://dbpedia.org/property/militaryForce> ?force .
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
915,12,val,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. }","```sparql
SELECT ?father WHERE {
    ?child <http://dbpedia.org/ontology/father> ?father .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
    ?child <http://dbpedia.org/ontology/filmSeries> <http://dbpedia.org/resource/Dickensian> .  # Assuming ""Dickensian"" as a placeholder for the soap series
    ?father <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> .
    ?child <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
404,44,val,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
# Step 1: Get the father of Ernest Augustus, Duke of Brunswick
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?father .
}

# Step 2: Get the spouse of Princess Victoria Louise of Prussia
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/property/spouse> ?spouse .
}

# Step 3: Find the child who is royalty and related to both Ernest Augustus, Duke of Brunswick (through his father) and Princess Victoria Louise of Prussia
SELECT DISTINCT ?child WHERE {
    ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> .
    ?child <http://dbpedia.org/ontology/father> ?father .
    ?child <http://dbpedia.org/ontology/mother> ?spouse .
    ?child <http://www.w3.org/2002/07/owl#sameAs> ?royalty .
}

# Step 4: Get the parent of this royal child
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/father> ?parent .
    UNION
    ?child <http://dbpedia.org/ontology/mother> ?parent .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
391,27,val,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?movie ?actor WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie108069068>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow108069068>.
    ?movie <http://dbpedia.org/ontology/starring> ?actor.
}
```",3,6,4,3,1,3,3,71,0,0,7061,0,0.0,0
963,14,val,"Give me the administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?result <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
SELECT ?administration WHERE {
    ?location <http://dbpedia.org/ontology/postalCode> ""21205"" .
    ?location <http://dbpedia.org/ontology/rulingParty> ?party .
    ?party <http://dbpedia.org/property/administration> ?administration .
}
```",3,4,4,3,1,3,2,20,0,0,86,0,0.0,0
55,16,val,"Give me the band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandMember ?newstedBand WHERE {
  # Find band members of Guns N' Roses
  <http://dbpedia.org/resource/Guns_N%27_Roses> <http://dbpedia.org/ontology/member> ?bandMember .
  
  # Find bands that Newsted is a member of
  OPTIONAL {
    <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/member> ?newstedBand .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,16,val,Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for Sharon Kao's birth name and profession
SELECT ?birthName ?profession WHERE {
    <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
    OPTIONAL { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/profession> ?profession . }
}

# Query for Matt Colton's associated musical artist
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
547,37,val,Give me the resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
# Query 1: Resting place of Alan Cunningham
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

# Query 2: Resting place of actors in shows with Emily Richard
SELECT DISTINCT ?actor ?restingPlace WHERE {
    # Find shows featuring Emily Richard
    ?show <http://dbpedia.org/property/shows> <http://dbpedia.org/resource/Emily_Richard> .

    # Find actors in those shows
    ?show <http://dbpedia.org/ontology/starring> ?actor .

    # Get the resting place of each actor
    OPTIONAL { ?actor <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
92,31,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?musicalArtist ?bandMember WHERE {
  # Part 1: Find the associated musical artist of Jim Sheppard
  <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/property/musicalArtist> ?musicalArtist .

  # Part 2: Find a band member referenced as an artist to ""Nevermore (2006 film)""
  ?bandMember <http://dbpedia.org/ontology/bandMember> ?reference .
  ?reference <http://dbpedia.org/ontology/reference> ?film .
  ?film <http://dbpedia.org/property/name> ""Nevermore (2006 film)""@en .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
356,15,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of Mark Briggs.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
# Step 1: Find the predecessor of the 2015 Sacramento Republic FC season
SELECT ?predecessor WHERE {
    <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?successor .
    ?predecessor <http://dbpedia.org/ontology/successor> ?successor .
    FILTER(STRSTARTS(STR(?predecessor), ""http://dbpedia.org/resource/"") && 
           (STRCONTAINS(STR(?predecessor), ""season"") || STRCONTAINS(STR(?predecessor), ""club_season"")))
}

# Step 2: Find the successor of the predecessor
SELECT ?successorSeason WHERE {
    ?predecessor <http://dbpedia.org/ontology/successor> ?successorSeason .
}

# Step 3: Identify Mark Briggs's team during the 2015 Sacramento Republic FC season
SELECT ?team WHERE {
    ?markBriggs <http://dbpedia.org/property/team> ?team .
    FILTER(STRSTARTS(STR(?markBriggs), ""http://dbpedia.org/resource/"") && 
           STRCONTAINS(STR(?team), ""Sacramento_Republic_FC""))
}

# Step 4: Find players in the successor season
SELECT DISTINCT ?player WHERE {
    ?successorSeason <http://dbpedia.org/ontology/player> ?player .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
92,23,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?bandMember WHERE {
    ?film <http://dbpedia.org/ontology/reference> ?artist .
    FILTER(STR(?film) = ""Nevermore (2006 film)"")
    ?artist <http://dbpedia.org/ontology/member> ?bandMember .
}
```",3,4,4,3,1,3,3,71,0,0,12,0,0.0,0
251,17,val,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
SELECT ?administration ?deathPlace WHERE {
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?party <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Sicily> .
  ?party <http://dbpedia.org/ontology/administration> ?administration .

  <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/property/deathPlace> ?deathPlace .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
427,33,val,Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
SELECT ?alumnus ?father ?party WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?alumnus <http://dbpedia.org/ontology/father> ?father .
  OPTIONAL { ?father <http://dbpedia.org/ontology/politicalParty> ?party . }
  FILTER(?party = <http://dbpedia.org/resource/Partito_Popolare_Italiano>)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
404,36,val,Give me the spouse of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
SELECT ?spouse ?father ?child WHERE {
    <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/child> ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
161,23,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?event <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Francoist_Spain>.
    
    ?decedent <http://dbpedia.org/ontology/deathPlace> ?event.
    
    ?militaryForce <http://dbpedia.org/ontology/battle> ?event.
}
```",3,6,4,3,1,3,3,71,0,0,1073,0,0.0,0
617,36,val,Give me the parent of the child of the commander in Battle of Panium and child of Antiochus III the Great.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?child <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
    ?battle <http://dbpedia.org/ontology/commander> ?child .
    FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Panium>) .
    ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
54,44,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
# Step 1: Find Thihapate of Mohnyin's child who is an office holder and royalty
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 2: Find Narapati I of Ava's child and their parent
SELECT ?parent WHERE {
    ?narapatisChild <http://dbpedia.org/property/parents> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
    ?parent <http://dbpedia.org/ontology/child> ?narapatisChild .
}

# Step 3: Find Thinkhaya of Pagan's child
SELECT ?thinkhayasChild WHERE {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayasChild .
}

# Step 4: Ensure the individual is common across these relationships
SELECT DISTINCT ?individual WHERE {
    { 
        ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
        ?child = ?individual
    }
    UNION
    {
        ?parent <http://dbpedia.org/ontology/child> ?narapatisChild .
        ?narapatisChild = ?individual
    }
    UNION
    {
        ?thinkhayasChild = ?individual
    }
}

# Step 5: Find the predecessor of this individual
SELECT ?predecessor WHERE {
    ?individual <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
10,18,val,Give me the professional in the birth name of Sharon Kao and band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  { 
    <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?person <http://dbpedia.org/ontology/profession> ?result .
  }
  
  UNION
  
  {
    <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/memberOfBand> ?band .
    ?member <http://dbpedia.org/ontology/memberOfBand> ?band .
    ?member <http://www.w3.org/2000/01/rdf-schema#label> ?result .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
16,37,val,Give me the person born as Georgeanne Marie Rice and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
# Step 1: Identify the actor's profession from ""Unnatural""
SELECT ?actor ?profession WHERE {
    <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
}

# Step 2: Find Georgeanne Marie Rice and check her profession
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice"" .
    OPTIONAL { ?person <http://dbpedia.org/ontology/profession> ?matchedProfession . }
    FILTER EXISTS {
        SELECT ?actor ?profession WHERE {
            <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
            ?actor <http://dbpedia.org/ontology/profession> ?profession .
            VALUES ?matchedProfession { ?profession }
        }
    }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,18,val,Give me the band of Joseph Michael and associated musical artist of Jim Sheppard and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?bandJosephMichael ?artistJimSheppard ?memberNevermore WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Joseph_Michael_(musician)> <http://dbpedia.org/ontology/band> ?bandJosephMichael .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Jim_Sheppard_(bassist)> <http://dbpedia.org/property/memberOf> ?artistJimSheppard .
  }
  OPTIONAL {
    ?memberNevermore <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Nevermore> .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
915,14,val,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
    # Step 1: Find Lizzie Spaulding's parent who is a fictional character and a soap character.
    ?parent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Lizzie_Spaulding> .
    ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
    ?parent <http://dbpedia.org/ontology/soapOperaCharacter> ?soaper .

    # Step 2: Find the child of that parent who is also a fictional character and a soap character.
    ?child <http://dbpedia.org/ontology/father> ?parent ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> ;
           <http://dbpedia.org/ontology/soapOperaCharacter> ?soaper .

    # Step 3: Find the father of this identified child.
    ?father <http://dbpedia.org/ontology/father> ?child .
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
303,13,val,"Give me the entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?country ?party WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .
    ?commander <http://dbpedia.org/ontology/country> ?country .
    ?commander <http://dbpedia.org/property/politicalParty> ?party .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
488,33,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki.",SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?deathPlace ?birthPlace WHERE {
  # Find Matsudaira Tadamasa's father (office holder)
  ?mat_office_holder dbo:child <http://dbpedia.org/resource/Matsudaira_Tadamasa> .
  ?mat_office_holder dbo:occupation dbc:Office_holders_of_Japan .

  # Find the politician who is the father of the office holder
  ?politician dbo:child ?mat_office_holder .
  ?politician dbo:occupation dbc:Politicians_of_Japan .

  # Get the death place of this politician
  ?politician dbo:deathPlace ?deathPlace .

  # Get Enomoto Takeaki's birthplace
  <http://dbpedia.org/resource/Enomoto_Takeaki> dbo:birthPlace ?birthPlace .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,26,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
SELECT ?entity WHERE {
    ?election <http://dbpedia.org/ontology/politician> ?leader .
    ?election <http://dbpedia.org/property/electionDate> ""1962""^^xsd:gYear .
    ?election <http://dbpedia.org/property/state> <http://dbpedia.org/resource/New_South_Wales> .
    
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

    ?birthPlace ?property ?entity .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
391,25,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?movie ?actor WHERE {
    # Find the resource for ""The Departed""
    <http://dbpedia.org/resource/The_Departed> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    
    # Get actors from ""The Departed""
    ?theDepartedActor <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/The_Departed> .

    # Find other movies these actors have acted in
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
    ?theDepartedActor <http://dbpedia.org/property/starring> ?movie .

    # Ensure Roz Ryan is associated with the movie
    OPTIONAL { ?movie <http://dbpedia.org/property/castMember> <http://dbpedia.org/resource/Roz_Ryan> } .
    
    FILTER(?movie != <http://dbpedia.org/resource/The_Departed>)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
994,28,val,Give me the associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find associated musical artist of Red Tide (band)
SELECT ?redTideArtist WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?redTideArtist .
}

# Step 2: Find associated musical artist of Watchtower (band)
SELECT ?watchtowerArtist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
}

# Step 3: Find band members of Don Dokken
SELECT ?donDokkenMember WHERE {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/property/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?donDokkenMember .
}

# Step 4: Find common entities among the results
SELECT DISTINCT ?commonArtist WHERE {
    { 
        <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist .
    } UNION {
        <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist .
    }
    ?donDokkenMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    FILTER(?commonArtist = ?donDokkenMember)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
378,27,val,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?war ?commander ?claimToFame WHERE {
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?war <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/claimToFame> ?claimToFame
}
```",3,6,4,3,1,3,3,71,0,0,6,0,0.0,0
182,16,val,Give me the entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
SELECT ?nationality ?war WHERE {
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?nationality .
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/property/battle> ?war .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,13,val,"Give me the child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?grandChild WHERE {
    # Step 1: Find the parent of Charles Alexander
    OPTIONAL { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/father> ?parent . }
    OPTIONAL { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/mother> ?parent . }

    # Step 2: Find the children of that parent who are royalty
    ?parent <http://dbpedia.org/ontology/child> ?royaltyChild .
    FILTER(BOUND(?royaltyChild))
    ?royaltyChild a <http://dbpedia.org/ontology/Royalty> .

    # Step 3: For each child identified as royalty, find their own children
    ?royaltyChild <http://dbpedia.org/ontology/child> ?grandChild .
}
```",3,4,4,3,1,3,2,20,0,0,8,0,0.0,0
492,19,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?person WHERE {
    # Find decedents at work for Joseph C. Satterthwaite
    ?work <http://dbpedia.org/ontology/decedent> ?person .
    ?work <http://dbpedia.org/property/employee> <http://dbpedia.org/resource/Joseph_C._Satterthwaite> .

    # Find commanders in the Franco-Hova Wars
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
    ?commander <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Franco-Hova_Wars> .

    # Find overlap
    FILTER(?person = ?commander)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
696,13,val,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
SELECT ?member ?birthPlace WHERE {
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup>.
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
    ?band rdfs:label ""The Boils""@en.
    
    ?band dbp:member ?member.
    
    ?member dbo:birthPlace ?birthPlace.
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,36,val,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
    ?commander <http://www.w3.org/2000/01/rdf-schema#label> ?labelCommander .
    FILTER(CONTAINS(LCASE(?labelCommander), ""royalty"")) .

    ?parent <http://dbpedia.org/ontology/birthName> ""Meritamen"" .
    
    ?father <http://dbpedia.org/ontology/spouse> ?spouse .
    ?father <http://dbpedia.org/ontology/child> ?commander .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
328,29,val,Give me the commander in the force of Ferenc Szálasi and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi>.
    ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov>.
    ?person <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union>.
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
404,21,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?person <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia"" .
    ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
    ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
666,11,val,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as The Three Lions.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
SELECT ?player WHERE {
    ?manager <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Hull_City_A.F.C.>;
              <http://dbpedia.org/property/seasonsManaged> ?season .
    FILTER(CONTAINS(LCASE(STR(?season)), ""2016–17""))
    
    ?player <http://dbpedia.org/ontology/playerForTeam> ?manager;
            <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/England>;
            <http://dbpedia.org/property/team> <http://dbpedia.org/resource/England_national_football_team> .
}
```",3,4,4,2,2,3,2,20,0,0,2,0,0.0,0
778,13,val,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT DISTINCT ?entity WHERE {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>.
    ?person <http://dbpedia.org/property/awards> ?award .
    ?award <http://dbpedia.org/ontology/recipient> ?person .
    ?award <http://dbpedia.org/ontology/subject> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> .
    ?award <http://dbpedia.org/property/entity> ?entity .
}
```",3,4,4,3,1,3,2,20,0,0,18629,0,0.0,0
161,44,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
SELECT ?emilioCommander ?franciscoCommander ?rifWarCommander WHERE {
    # Find Emilio Mola's military force and its commander
    ?militaryForceEmilio <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?militaryForceEmilio <http://dbpedia.org/property/commander> ?emilioCommander .
    ?militaryForceEmilio <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Emilio_Mola> .

    # Find Francisco Largo Caballero's military force and its commander
    ?militaryForceFrancisco <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>, <http://dbpedia.org/ontology/SocietalEvent> .
    ?militaryForceFrancisco <http://dbpedia.org/property/commander> ?franciscoCommander .
    ?militaryForceFrancisco <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .

    # Find the military force of the Rif War and its commander
    ?rifWarMilitaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?rifWarMilitaryForce <http://dbpedia.org/property/commander> ?rifWarCommander .
    ?rifWarMilitaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> .
}
```",5,8,6,2,3,3,3,71,0,0,11,0,0.0,0
48,14,val,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?band WHERE {
    ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> .
    ?actor <http://dbpedia.org/ontology/starring> ?show ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?band <http://dbpedia.org/ontology/member> ?actor .
}
```",3,4,4,3,1,3,2,20,0,0,36,0,0.0,0
659,25,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
SELECT ?militaryForce WHERE {
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Leipzig> .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?battle <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
    ?battle <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",3,6,4,2,2,3,3,71,0,0,6,0,0.0,0
92,42,val,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
# Step 1: Find an artist referenced by Nevermore
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Nevermore> <http://dbpedia.org/ontology/reference> ?artist .
}

# Step 2: Identify the band associated with Joseph Michael Furney (Geoff Tate)
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Geoff_Tate> <http://dbpedia.org/property/band> ?band .
}

# Step 3: Identify the musical artist associated with Jim Sheppard
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

# Final step: Find common band members among these entities
SELECT DISTINCT ?bandMember WHERE {
    # Assuming we have identified the relevant bands/artists from above steps as ?nevermoreRelatedArtist, ?geoffTateBand, and ?jimSheppardArtist
    OPTIONAL { ?nevermoreRelatedArtist <http://dbpedia.org/ontology/member> ?bandMember . }
    OPTIONAL { ?geoffTateBand <http://dbpedia.org/ontology/member> ?bandMember . }
    OPTIONAL { ?jimSheppardArtist <http://dbpedia.org/ontology/member> ?bandMember . }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,32,val,Give me the person born on the birth date of Pavlo Khudzik and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
# Query to find persons born on the same date as Pavlo Khudzik
SELECT ?person WHERE {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://www.w3.org/2002/07/owl#sameAs> ?birthDate .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER(?person != <http://dbpedia.org/resource/Pavlo_Khudzik>)
}

UNION

# Query to find the band of the writer of ""Apollo"" by Hardwell
SELECT ?band WHERE {
    ?song <http://purl.org/dc/terms/creator> ?writer .
    ?song <http://dbpedia.org/ontology/title> ""Apollo""@en .
    ?song <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Hardwell> .
    ?writer <http://dbpedia.org/ontology/memberOf> ?band .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
232,35,val,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?child WHERE {
    ?person <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee"" .
    ?sylvie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
            <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> ;
            <http://dbpedia.org/property/placeOfBirth> ?settlement .
    FILTER(?settlement <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/British_settlement>) .

    ?person <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/birthPlace> ?settlement .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,29,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?child ?spouse WHERE {
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
    ?child <http://dbpedia.org/ontology/spouse> ?spouse .
    ?nysa <http://dbpedia.org/ontology/birthParent> ?child .
    FILTER(?nysa = <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)>)
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
427,26,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT DISTINCT ?father ?politicalParty WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?alumnus <http://dbpedia.org/ontology/father> ?father .
  OPTIONAL { ?father <http://dbpedia.org/property/politicalParty> ?politicalParty . }
}
```",3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
179,13,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
SELECT ?child ?birthName WHERE {
    <http://dbpedia.org/resource/Nakkhatra_Mangala> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""royalty"")) .
    OPTIONAL { ?child <http://dbpedia.org/property/birthName> ?birthName . }
}
```",3,4,4,3,1,3,2,20,0,0,1,0,0.0,0
378,28,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as Carl Pontus Gahn and war of Joaquín Blake.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
# Query for Louis des Balbes de Berton de Crillon's claim to fame
SELECT ?claimToFame WHERE {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/notableworks> ?claimToFame .
}

# Query for Carl Pontus Gahn's wars
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/wars> ?war .
}

# Query for Joaquín Blake's wars
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/property/wars> ?war .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
783,11,val,Give me the associated musical artist of the band member of Ofori Amponsah and band member of Ebony Reigns.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
SELECT ?bandMember ?associatedArtist WHERE {
    ?bandMember <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Ofori_Amponsah> .
    ?bandMember <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Ebony_Reigns> .
    ?bandMember <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
659,37,val,"Give me the military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
SELECT ?militaryForce ?commander WHERE {
    ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Napoleonic_Wars> .
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    
    ?militaryForce <http://dbpedia.org/property/militaryConflicts> ?event .
    ?militaryForce <http://dbpedia.org/ontology/commander> ?commander .

    OPTIONAL {
        ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
        ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
        ?unit <http://dbpedia.org/property/nicknames> ""Polish Horse"" .

        ?militaryForce2 <http://dbpedia.org/property/militaryUnits> ?unit .
    }
}
```",4,8,5,3,2,3,3,71,0,0,29,0,0.0,0
421,15,val,Give me the band member of the awardee of [[#Awards and nominations and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?bandMember WHERE {
    <http://dbpedia.org/resource/Zdravko_Čolić> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    <http://dbpedia.org/resource/Zdravko_Čolić> <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović"" .
    
    ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> .
    <http://dbpedia.org/resource/Zdravko_Čolić> <http://dbpedia.org/property/awards> ?award .
    
    ?otherAwardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BandMember> ;
                <http://dbpedia.org/ontology/memberOfBand> ?otherAwardee .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
487,15,val,Give me the country of the administration of the person born on 1955-01-26 and administration of Phil Scott.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . }","```sparql
SELECT DISTINCT ?person ?administration ?country WHERE {
  # Find the person born on 1955-01-26
  { 
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    ?person <http://dbpedia.org/property/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  }
  
  UNION
  
  # Find Phil Scott
  {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Phil Scott""@en .
  }

  # Get the administration of each person
  OPTIONAL { 
    ?person <http://dbpedia.org/property/administration> ?administration .
  }
  
  # Find the country associated with each administration
  OPTIONAL {
    ?administration <http://dbpedia.org/ontology/country> ?country .
  }

  FILTER(?administration != UNDEF && ?country != UNDEF)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
404,19,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . }","```sparql
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> <http://dbpedia.org/ontology/parent> ?parent .
    ?parent <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,24,val,Give me the band of the writer of Apollo (Hardwell song) and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  { 
    ?song <http://dbpedia.org/ontology/writer> ?writer .
    ?writer <http://dbpedia.org/property/band> ?band .
    FILTER(STRSTARTS(LCASE(?song), ""apollo (hardwell song)""))
  }
  UNION
  {
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/property/band> ?band .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,18,val,Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?parent WHERE {
    ?thadoMinsaw <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
    ?thadoMinsaw <http://dbpedia.org/ontology/parent> ?parent .

    ?thinkhaya <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
    ?thinkhaya <http://dbpedia.org/ontology/child> ?parent .

    ?ameittaThiri <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
    ?parent <http://dbpedia.org/property/predecessor> ?ameittaThiri .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
427,19,val,Give me the party of Giulio Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?party ?partyName WHERE {
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?party .
    ?party rdfs:label ?partyLabel .
    FILTER(LANG(?partyLabel) = 'en')
    
    OPTIONAL {
        <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> rdfs:label ?partyName .
        FILTER(LANG(?partyName) = 'en')
    }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,37,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v3 . },"```sparql
# Step 1: Identify the song written by Amba Shepherd and its band
SELECT ?song ?band WHERE {
    ?song <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Amba_Shepherd> .
    ?song <http://dbpedia.org/ontology/band> ?band .
}

# Step 2: Find the band associated with Shèna
SELECT ?shenaBand WHERE {
    ?shenaBand <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Shèna> .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
747,36,val,Give me the band of the person born as the persona of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?person1 ?band1 ?person2 ?band2 WHERE {
  # Find the person with persona ""Shèna""
  ?person1 <http://dbpedia.org/ontology/personalName> ""Shèna"" .
  OPTIONAL { ?person1 <http://dbpedia.org/ontology/band> ?band1 . }

  # Find the person born on April 29, 1985
  ?person2 <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?birthDate .
  FILTER (STR(?birthDate) = ""1985-04-29"") .
  OPTIONAL { ?person2 <http://dbpedia.org/ontology/band> ?band2 . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
10,12,val,Give me the professional in  and associated musical artist of Matt Colton and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?profession ?associatedArtist ?band WHERE {
  # Matt Colton's profession and associated musical artist
  OPTIONAL { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/profession> ?profession . }
  OPTIONAL { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/property/musicalArtist> ?associatedArtist . }

  # Luke Vibert's band membership
  OPTIONAL { <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/memberOfBand> ?band . }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
528,28,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT DISTINCT ?war WHERE {
    # Military force involved in the Battle of Pisagua
    ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?force1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> .

    # Military force associated with Orozimbo Barbosa
    ?barbosaForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?barbosaForce <http://dbpedia.org/property/members> <http://dbpedia.org/resource/Orozimbo_Barbosa> .

    # Military force associated with Narciso Campero
    ?camperoForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?camperoForce <http://dbpedia.org/property/members> <http://dbpedia.org/resource/Narciso_Campero> .

    # Find common wars
    ?force1 <http://dbpedia.org/ontology/battle> ?war .
    ?barbosaForce <http://dbpedia.org/ontology/battle> ?war .
    ?camperoForce <http://dbpedia.org/ontology/battle> ?war .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
435,12,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . }","```sparql
# Part 1: Work of Article 62, Section IV of Constitution of Iceland
SELECT ?content WHERE {
    <http://dbpedia.org/resource/Article_62,_Section_IV_of_the_Constitution_of_Iceland> rdfs:comment ?content .
}

UNION

# Part 2: Region of Greenwich Mean Time
SELECT ?region WHERE {
    ?region dbp:timeZone ""GMT"" .
}

UNION

# Part 3: Territory administered from Reykjavík
SELECT ?territory WHERE {
    ?territory <http://dbpedia.org/ontology/administrativeCapital> <http://dbpedia.org/resource/Reykjavík> .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
485,13,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

UNION

SELECT DISTINCT ?country WHERE {
    ?region <http://www.w3.org/2002/07/owl#sameAs> ?country .
    ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Western_European_Time> .
    ?country a <http://dbpedia.org/class/yago/Country108069068> .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
487,11,val,Give me the country of the administration of Patricia McCoy and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
SELECT DISTINCT ?country WHERE {
  OPTIONAL { 
    ?administration <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativePost>;
                   <http://dbpedia.org/property/holder> <http://dbpedia.org/resource/Patricia_McCoy>.
    ?administration <http://dbpedia.org/ontology/administrativeUnit> ?unit.
    ?unit <http://dbpedia.org/ontology/country> ?country.
  }
  
  OPTIONAL { 
    ?administration2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativePost>;
                     <http://dbpedia.org/property/holder> <http://dbpedia.org/resource/Phil_Scott>.
    ?administration2 <http://dbpedia.org/ontology/administrativeUnit> ?unit2.
    ?unit2 <http://dbpedia.org/ontology/country> ?country.
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
959,37,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?native WHERE {
    ?person <http://dbpedia.org/ontology/politicalParty> ?party .
    ?person <http://dbpedia.org/property/birthPlace> ?native .
    ?person <http://dbpedia.org/ontology/residence> ?residence .
    
    FILTER(?residence <http://dbpedia.org/resource/Japan>)  # Assuming the residence is Japan based on context

    ?electionEvent <http://dbpedia.org/ontology/politicalParty> ?party ;
                   <http://dbpedia.org/property/electionDate> ?date .
    FILTER(STRSTARTS(STR(?date), ""2010""))  # Filter for 2010 election
    ?person <http://dbpedia.org/ontology/memberOf> ?electionEvent .

    ?teamSeason <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Júbilo_Iwata> ;
                <http://dbpedia.org/property/seasonStartYear> ""2013""^^xsd:gYear .
    ?person <http://dbpedia.org/ontology/manager> ?teamSeason .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
314,15,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
  
  OPTIONAL { 
    ?deathEvent <http://dbpedia.org/property/deathPlace> ?place .
    ?place <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/House_of_Sombrerete> .
    ?person <http://dbpedia.org/ontology/death> ?deathEvent .
  }
  
  FILTER EXISTS {
    ?deathEvent <http://dbpedia.org/property/deathPlace> ?place .
    ?place <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/House_of_Sombrerete> .
    ?person <http://dbpedia.org/ontology/death> ?deathEvent .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
701,19,val,Give me the parent of the child of Nefertari and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?nefertariParent ?henuttawyParent WHERE {
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Nefertari> .
    ?child <http://dbpedia.org/ontology/parent> ?nefertariParent .

    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/parent> ?henuttawyParent .
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
391,38,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
# Part 1: Find movies that are a movie, work, and television show with Roz Ryan as an actor
SELECT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie105069068>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Work108557470>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow105069068>.
    ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan>.
}

# Part 2: Find the claim to fame of Michael Ballhaus and its actors
SELECT ?work ?actor WHERE {
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/claimToFame> ?work.
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Work108557470>.
    ?work <http://dbpedia.org/ontology/starring> ?actor.
}

# Combine results to find common actors
SELECT DISTINCT ?commonActor WHERE {
    # From Part 1
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie105069068>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Work108557470>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow105069068>.
    ?movie <http://dbpedia.org/ontology/starring> ?commonActor.
    
    # From Part 2
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/claimToFame> ?work.
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Work108557470>.
    ?work <http://dbpedia.org/ontology/starring> ?commonActor.
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
142,7,val,Give me the birthplace of George Tokoro and entity in the region of Japan Standard Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
SELECT ?birthPlace ?region WHERE {
    <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/property/birthPlace> ?birthPlace .
    OPTIONAL { 
        ?birthPlace <http://www.w3.org/2006/time#during> ?timePeriod .
        ?timePeriod <http://dbpedia.org/ontology/timeZone> ?timezone .
        FILTER(CONTAINS(LCASE(STR(?timezone)), ""japan standard time""))
        BIND(""Region: "" || STR(?timezone) AS ?region)
    }
}
```",3,3,4,2,2,2,2,9,0,1,1,0.0,0.0,0
696,14,val,Give me the landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
SELECT ?landmark WHERE {
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Chishui_River> .
    ?commander <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.geonames.org/ontology#elevationInMeters> ?elevation .
    ?landmark <http://www.geonames.org/ontology#elevationInMeters> ?elevation .
}
```",3,3,4,3,1,3,2,20,0,0,1731,0,0.0,0
55,17,val,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?bandMember ?relatedBand WHERE {
    ?newsted <http://dbpedia.org/ontology/member> ?band .
    ?band <http://dbpedia.org/property/band> ?bandName .
    
    ?bandMember <http://dbpedia.org/ontology/member> ?band .
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .

    ?relatedBand <http://dbpedia.org/property/member> ?bandMember .
    ?relatedBand <http://dbpedia.org/ontology/performedAt> <http://dbpedia.org/resource/San_Francisco_Symphony> .
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
54,42,val,"Give me the parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?parentOfThadoMinsaw WHERE {
    ?thadoMinsaw <http://dbpedia.org/ontology/name> ""Thado Minsaw of Prome"" .
    ?thadoMinsaw <http://dbpedia.org/ontology/parent> ?parentOfThadoMinsaw .

    ?soeMinWimalaDewi <http://dbpedia.org/ontology/father> ?fatherOfSoeMinWimalaDewi .
    
    ?thihapate <http://dbpedia.org/ontology/name> ""Thihapate of Mohnyin"" .
    ?thihapate <http://dbpedia.org/ontology/child> ?childOfThihapate .
    ?childOfThihapate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?childOfThihapate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    ?childOfThihapate <http://dbpedia.org/ontology/predecessor> ?predecessor .
    
    FILTER(?parentOfThadoMinsaw = ?fatherOfSoeMinWimalaDewi)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
378,23,val,Give me the war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/war> ?war .
}
```",3,3,4,3,1,3,3,71,0,0,12,0,0.0,0
360,14,val,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer ?nativePlace WHERE {
    ?book <http://purl.org/dc/terms/title> ""The Roaring Silence"" .
    ?book <http://dbpedia.org/ontology/bookAuthor> ?writer .

    OPTIONAL {
        <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
        ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlements100000001> .
        ?deathPlace <http://dbpedia.org/property/nativePlace> ?nativePlace .
    }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,34,val,"Give me the actor of All About the Andersons and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
# Step 1: Find actors of ""All About the Andersons""
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 2: Find the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?nickname .
}

# Step 3: Find the native place associated with the nickname
SELECT ?nativePlace WHERE {
    ?entity <http://dbpedia.org/ontology/nickName> ?nickname .
    ?entity <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
    FILTER(?nickname = ""The Heart of Dixie"") # Assuming this is the known nickname for Jackson, Tennessee
}

# Step 4: Find actors who are natives of that place and starred in ""All About the Andersons""
SELECT DISTINCT ?actor WHERE {
    <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
    ?entity <http://dbpedia.org/ontology/nickName> ""The Heart of Dixie"" .
    ?entity <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,42,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
SELECT ?spouse WHERE {
    { 
        <http://dbpedia.org/resource/Ted_Martin_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
    }
    UNION
    {
        <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/spouse> ?spouse .
    }
}
```",5,5,6,2,3,3,3,71,0,1,1,0.0,0.0,0
314,17,val,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Step 1: Find awards associated with Sergei Makovetsky
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?award .
}

# Step 2: Find other awardees of the same awards
SELECT DISTINCT ?otherAwardee WHERE {
    ?award <http://dbpedia.org/property/awards> ?otherAwardee .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Sergei_Makovetsky>)
}

# Step 3: Identify commanders in the Spanish Civil War
SELECT DISTINCT ?commander WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
    ?commander <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Spanish_Civil_War> .
}

# Step 4: Find overlap between awardees and commanders
SELECT DISTINCT ?commonIndividual WHERE {
    ?award <http://dbpedia.org/property/awards> ?commonIndividual .
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
    ?commander <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/Spanish_Civil_War> .
    FILTER(?commonIndividual = ?commander)
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
360,13,val,"Give me the writer of the work, that is an album, of Dave Flett and native of Johannesburg.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?writer WHERE {
    ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalAlbum> .
    ?album <http://dbpedia.org/property/work> <http://dbpedia.org/resource/Dave_Flett> .
    ?album <http://dbpedia.org/property/writer> ?writer .
    ?writer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Johannesburg> .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,33,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
    ?royalParent <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ladislaus_Philipp_of_Austria> .
    ?royalParent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?royalParent <http://dbpedia.org/ontology/child> ?parentOfGéza .
    ?parentOfGéza <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
    ?parentOfGéza <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
427,32,val,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?father ?party ?reference WHERE {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
    OPTIONAL { ?father <http://dbpedia.org/property/politicalParty> ?party . }
    OPTIONAL { 
        <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> ?p ?reference .
        FILTER(CONTAINS(LCASE(STR(?reference)), ""name""))
    }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
16,31,val,Give me the spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?spouse WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Ted McGinley""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""Edward Joseph McGinley"" .
    ?person <http://purl.org/dc/terms/profession> <http://dbpedia.org/resource/Category:American_actresses> .
    ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
232,28,val,Give me the native of London and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?child WHERE {
    <http://dbpedia.org/resource/John_Devon_Roland_Pertwee> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/London> .
    ?child <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
747,33,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . }","```sparql
SELECT ?band WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?song <http://dbpedia.org/property/writer> ?person ;
          <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Song> .
    ?band <http://dbpedia.org/ontology/performedBy> ?song .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,40,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Step 1: Find the person born in 1958 who is native of Japan
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear>.
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>.
}

# Step 2: Find the alma mater of this person
SELECT ?almaMater WHERE {
    ?person <http://dbpedia.org/property/almaMater> ?almaMater.
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>.
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>.
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization>.
    ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan>.
}

# Step 3: Find the manager of Júbilo Iwata in 2013
SELECT ?manager WHERE {
    ?team <http://dbpedia.org/ontology/teamManager> ?manager.
    ?team <http://dbpedia.org/property/sportTeamSeason> ""2013""^^<http://www.w3.org/2001/XMLSchema#gYear>.
    ?team <http://dbpedia.org/resource/Júbilo_Iwata>.
}

# Step 4: Check if this manager is an alumnus of the alma mater
SELECT ?manager WHERE {
    ?manager <http://dbpedia.org/property/almaMater> ?almaMater.
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
378,34,val,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT DISTINCT ?war WHERE {
  # Find the birth name of Carl Pontus Gahn
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?birthName .

  # Find the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/notableWork> ?claimToFame .

  # Find wars associated with the birth name of Carl Pontus Gahn
  ?person <http://dbpedia.org/property/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/battle> ?war .

  # Find wars associated with the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  ?individual <http://dbpedia.org/ontology/notableWork> ?claimToFame .
  ?individual <http://dbpedia.org/ontology/battle> ?war .

}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
485,12,val,Give me the birth place of Thomas Warner (poet) and entity in Nottinghamshire and entity in United Kingdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?placeLabel .
    FILTER(CONTAINS(LCASE(?placeLabel), ""nottinghamshire""))
    OPTIONAL { ?birthPlace <http://dbpedia.org/property/country> ?country . }
    FILTER(CONTAINS(LCASE(STR(?country)), ""united kingdom""))
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
767,36,val,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
SELECT ?character ?entityInBW ?reference WHERE {
    ?burland <http://dbpedia.org/property/alterEgo> ?character .
    FILTER(?burland = <http://dbpedia.org/resource/Matthew_Burland>) .

    ?character <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
    
    ?entityInBW <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-Württemberg> .
    ?entityInBW <http://dbpedia.org/ontology/wikiPageRedirects> ?character .
}
```",4,5,5,3,2,3,3,71,0,0,7,0,0.0,0
959,19,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
SELECT ?native WHERE {
    ?university <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eiji_Ōtsuka> .
    ?university <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/JapaneseOrganizations100000001> ;
                <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/UniversitiesAndColleges1000000> ;
                <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/EducationalInstitutions1000000> .
    ?native <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> ;
            <http://dbpedia.org/ontology/almaMater> ?university .
}
```",3,7,4,2,2,3,3,71,0,0,84,0,0.0,0
487,13,val,Give me the country of the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT ?person ?country WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/administration> ?admin . }
  OPTIONAL { ?admin <http://dbpedia.org/ontology/country> ?country . }
}
```",3,3,4,3,1,3,2,20,1,5304,0,0.00018850141376060322,1.0,0.0003769317753486619
820,15,val,Give me the professional in the award of the author of Understanding Comics and child of Jack Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Step 1: Find Scott McCloud's DBpedia resource
SELECT ?scott WHERE {
    ?scott <http://dbpedia.org/property/authored> <http://dbpedia.org/resource/Understanding_Comics>.
}

# Step 2: Find children of Jack Schwartzman
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Jack_Schwartzman> <http://dbpedia.org/ontology/child> ?child.
}

# Step 3: Find awards received by Scott McCloud and a child of Jack Schwartzman
SELECT DISTINCT ?award ?professional WHERE {
    VALUES ?person { ?scott ?child }
    
    ?person <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?professional .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
827,15,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
SELECT ?grandfather ?grandsonFather WHERE {
  # Step 1: Identify Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach
  <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Find the children of Charles Alexander's father who are royalty
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?child a <http://dbpedia.org/ontology/Royalty> .

  # Step 3: From those children, find their own children (grandchildren) who are also royalty
  ?grandchild <http://dbpedia.org/ontology/father> ?child .
  ?grandchild a <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Identify William Ernest and determine his father
  OPTIONAL {
    <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/father> ?grandsonFather .
  }

  FILTER(?child = ?grandfather) # Ensure the child of Charles Alexander's father is also his grandfather
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
391,26,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/property/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/work> ?work .
    FILTER(STRSTARTS(STR(?work), ""http://dbpedia.org/resource/"") && NOT EXISTS { ?work a <http://www.w3.org/2002/07/owl#Thing> . FILTER(!STRSTARTS(STR(?work), ""http://dbpedia.org/resource/"")) })
    ?work <http://dbpedia.org/ontology/starring> ?actor .
}
```",3,4,4,3,1,3,3,71,0,0,20,0,0.0,0
659,19,val,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander WHERE {
    # Find commanders in the Battle of Leipzig
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Leipzig> .
    ?battle <http://dbpedia.org/ontology/commander> ?commander .

    # Find commanders under Arthur Wellesley, 1st Duke of Wellington
    OPTIONAL {
        <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/commander> ?commander .
    }

    FILTER EXISTS { ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Leipzig> }
}
```",3,3,4,2,2,3,3,71,0,0,19,0,0.0,0
617,33,val,"Give me the child of Antiochus III the Great and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?childOfAntiochusIII ?successor ?spouse WHERE {
    # Step 1: Identify children of Antiochus III the Great
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?antiochus .
    
    # Step 2: Find successor who is royalty
    ?successor <http://dbpedia.org/ontology/successor> ?antiochus ;
               <http://www.w3.org/2000/01/rdf-schema#label> ?successorLabel .
    FILTER(CONTAINS(LCASE(?successorLabel), ""royalty""))

    # Step 3: Find spouse of the child of this successor
    ?successor <http://dbpedia.org/ontology/child> ?childOfSuccessor ;
               <http://dbpedia.org/property/spouse> ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
617,12,val,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?parent WHERE {
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/mother> ?parent .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
281,29,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Wars of Beauchamp Seymour, 1st Baron Alcester
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Entity in the birthplace of Bob Heffron that is a country
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/property/placeOfBirth> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
    FILTER (STRSTARTS(STR(?country), ""http://dbpedia.org/resource/"") && STRCONTAINS(STR(?country), ""Country""))
}

UNION

# Wars of the New Zealand Army
SELECT ?war WHERE {
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?war .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
959,35,val,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
SELECT ?manager ?member WHERE {
    # Find Takashi Sekizuka's team
    ?team <http://dbpedia.org/ontology/player> <http://dbpedia.org/resource/Takashi_Sekizuka> .
    
    # Get the manager of that team
    ?team <http://dbpedia.org/property/manager> ?manager .

    # Find Eiji Ōtsuka's alma mater
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    
    FILTER(?almaMater <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Japanese_universities_and_colleges>) .
    FILTER(?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/EducationalInstitution100000001>).
    FILTER(?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organizations1000000>).
    FILTER(?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/JapaneseOrganizationsAndAssociations>).

    # Find members of the alma mater
    ?member <http://dbpedia.org/ontology/alumniOf> ?almaMater .
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
55,13,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT ?bandMember WHERE {
  ?producer <http://dbpedia.org/ontology/band> ?band .
  ?band <http://dbpedia.org/property/producedAlbums> <http://dbpedia.org/resource/Used_to_Love_Her> .
  ?metallicaProduction <http://dbpedia.org/ontology/producers> ?producer .
  ?metallicaProduction <http://dbpedia.org/ontology/band> <http://dbpedia.org/resource/Metallica> .
  ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?bandMember <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Metallica> .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
182,13,val,Give me the war of Jagath Dias and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?person ?war WHERE {
    { 
        <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?war .
        BIND(<http://dbpedia.org/resource/Jagath_Dias> AS ?person)
    }
    UNION
    {
        ?author <http://www.w3.org/2000/01/rdf-schema#label> ""Zahran Hashim""@en .
        ?author <http://dbpedia.org/ontology/battle> ?war .
        BIND(?author AS ?person)
    }
}
```",3,3,4,2,2,2,3,28,1,5,0,0.16666666666666666,1.0,0.2857142857142857
435,17,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
# Query for the work of Article 62, Section IV of Constitution of Iceland
SELECT ?content WHERE {
    <http://dbpedia.org/resource/Constitution_of_Iceland> <http://dbpedia.org/ontology/article> ?article .
    ?article <http://dbpedia.org/property/title> ""Article 62"" .
    ?section <http://dbpedia.org/ontology/partOf> ?article ;
             <http://dbpedia.org/property/number> ""IV"" .
    ?section <http://dbpedia.org/ontology/textContent> ?content .
}

# Query for the region of the time zone in Bombali Shebora Chiefdom
SELECT ?region WHERE {
    ?chiefdom <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://dbpedia.org/property/region> ?region .
    FILTER(CONTAINS(LCASE(?chiefdom), ""bombali shebora chiefdom""))
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,34,val,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
SELECT ?parent ?childOfParent ?successor ?childOfSuccessor WHERE {
    # Step 1: Identify Nysa (wife of Pharnaces I of Pontus)
    <http://dbpedia.org/resource/Nysa_(wife_of_Pharmaaces_I_of_Pontus)> <http://dbpedia.org/ontology/parent> ?parent .

    # Step 2: Find the child of this parent who is royalty
    ?parent <http://dbpedia.org/ontology/child> ?childOfParent .
    ?childOfParent <http://www.w3.org/2000/01/rdf-schema#label> ?labelChildOfParent .
    FILTER(CONTAINS(LCASE(?labelChildOfParent), ""royalty""))

    # Step 3: Identify Antiochus II Theos
    <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?successor .

    # Step 4: Ensure the successor is royalty
    ?successor <http://www.w3.org/2000/01/rdf-schema#label> ?labelSuccessor .
    FILTER(CONTAINS(LCASE(?labelSuccessor), ""royalty""))

    # Step 5: Find the child of this successor who is royalty
    ?successor <http://dbpedia.org/ontology/child> ?childOfSuccessor .
    ?childOfSuccessor <http://www.w3.org/2000/01/rdf-schema#label> ?labelChildOfSuccessor .
    FILTER(CONTAINS(LCASE(?labelChildOfSuccessor), ""royalty""))
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
54,39,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . }","```sparql
SELECT ?parent ?predecessor WHERE {
    # Find Thado Minsaw of Prome's parent
    <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?parent .

    # Find the child of Thihapate of Mohnyin who is an office holder and royalty
    ?child <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    # Find the predecessor of that child
    ?child <http://dbpedia.org/property/predecessor> ?predecessor .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
294,19,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Step 1: Identify politicians who received the Distinguished Service Medal (U.S. Army)
SELECT ?politician WHERE {
    ?politician <http://dbpedia.org/ontology/politician> true .
    ?politician <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(United_States_Army)> .
}

# Step 2: Determine the resting places of these politicians
SELECT ?politician ?restingPlace WHERE {
    ?politician <http://dbpedia.org/ontology/politician> true .
    ?politician <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(United_States_Army)> .
    ?politician <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

# Step 3: Find Edwin A. Keeble's resting place
SELECT ?keeblesRestingPlace WHERE {
    <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/burialPlace> ?keeblesRestingPlace .
}

# Step 4: Check if any politician's resting place matches Edwin A. Keeble's and is in Nashville, Tennessee
SELECT DISTINCT ?politician WHERE {
    ?politician <http://dbpedia.org/ontology/politician> true .
    ?politician <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(United_States_Army)> .
    ?politician <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/burialPlace> ?keeblesRestingPlace .
    FILTER(?restingPlace = ?keeblesRestingPlace)
    ?restingPlace <http://www.w3.org/2000/01/rdf-schema#label> ?placeLabel .
    FILTER(CONTAINS(LCASE(?placeLabel), ""nashville, tennessee""))
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,22,val,Give me the reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?alterEgo ?location WHERE {
    ?character <http://www.w3.org/2000/01/rdf-schema#label> ""Black Hood""@en .
    ?character <http://dbpedia.org/property/alterEgo> ?alterEgo .
    OPTIONAL { ?alterEgo <http://dbpedia.org/ontology/location> ?location . }
    FILTER(CONTAINS(LCASE(STR(?location)), ""baden-württemberg""))
}
```",3,3,4,2,2,3,3,71,0,0,7,0,0.0,0
547,24,val,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> AS ?person)
  }
  UNION
  {
    ?actor <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Enemy_at_the_Door> .
    ?actor <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    BIND(?actor AS ?person)
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
391,24,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of All About the Andersons.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . },"```sparql
SELECT ?actor WHERE {
  # Find actors in Michael Ballhaus's claim to fame work
  OPTIONAL {
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/property/claimToFame> ?work .
    ?work <http://dbpedia.org/ontology/starring> ?actor .
  }
  
  # Find actors in ""All About the Andersons""
  OPTIONAL {
    <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor .
  }

  FILTER(?actor != null)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
547,35,val,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for the resting place of awardees of Knight Grand Cross of the Order of St Michael and St George
SELECT ?awardee ?restingPlaceAwardee WHERE {
  ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
  OPTIONAL { ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlaceAwardee . }
}

UNION

# Query for the resting place of children of James Burton (property developer)
SELECT ?child ?restingPlaceChild WHERE {
  <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
  OPTIONAL { ?child <http://dbpedia.org/ontology/burialPlace> ?restingPlaceChild . }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
801,40,val,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
SELECT ?person WHERE {
  # Chris Taylor (music producer) associated musical artist
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  
  # Producer of Westside Story (song)
  <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?person .

  # Professional in the alter ego of The Shadow
  OPTIONAL { 
    ?shadow <http://dbpedia.org/property/alterEgo> ?trueSelf .
    ?trueSelf <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?profession = ""music producer"")
  }

  # Ensure all conditions are met by the same person
  FILTER(?artist = ?person)
}
```",5,5,6,3,3,3,3,71,1,0,0,1.0,1.0,1.0
778,15,val,"Give me the author of Chroot and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
# Step 1: Find American awardees of the Wolf Prize in Medicine
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>.
    ?awardee <http://dbpedia.org/property/awards> ?award.
    ?award <http://dbpedia.org/ontology/prize> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine>.
}

# Step 2: Find entities in the awards of these awardees
SELECT DISTINCT ?entity WHERE {
    ?awardee <http://dbpedia.org/property/awards> ?award.
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ?awardLabel.
    FILTER(CONTAINS(LCASE(?awardLabel), ""wolf prize in medicine"") && CONTAINS(LCASE(?entityLabel), ""united states""))
    ?award <http://dbpedia.org/ontology/entity> ?entity.
}

# Step 3: Find the author of Chroot
SELECT ?author WHERE {
    <http://dbpedia.org/resource/Chroot> <http://purl.org/dc/terms/creator> ?author.
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
92,41,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?bandMember WHERE {
    # Find the resource for Jim Sheppard as an artist
    ?jimSheppard <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?jimSheppard rdfs:label ""Jim Sheppard""@en .

    # Find the resource for Joseph Michael as a band member of Nevermore
    ?josephMichael <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BandMember> .
    ?josephMichael rdfs:label ""Joseph Michael""@en .
    ?josephMichael <http://dbpedia.org/property/band> <http://dbpedia.org/resource/Nevermore_(band)> .

    # Find the band members of Nevermore
    ?nevermoreBandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BandMember> .
    ?nevermoreBandMember <http://dbpedia.org/property/band> <http://dbpedia.org/resource/Nevermore_(band)> .

    # Find common band members
    OPTIONAL { ?jimSheppard <http://dbpedia.org/property/memberOf> ?commonBand . }
    OPTIONAL { ?josephMichael <http://dbpedia.org/property/memberOf> ?commonBand . }

    FILTER(?nevermoreBandMember = ?bandMember)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
959,43,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
# Step 1: Identify the leader of the 2010 Japanese House of Councillors election who is also the manager of the 2013 Júbilo Iwata season.
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/politician> _:a .
    ?person <http://dbpedia.org/property/leaderOf> <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> .
    ?person <http://dbpedia.org/ontology/manages> <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .
}

# Step 2: Find the native country of this person.
SELECT ?nativeCountry WHERE {
    ?person <http://dbpedia.org/property/nationality> ?nativeCountry .
    FILTER(?person = ?commonEntity) # Assuming ?commonEntity is obtained from step 1
}

# Step 3: Identify members of University of Tsukuba whose native country matches the above.
SELECT ?member WHERE {
    ?member <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
    ?member <http://dbpedia.org/property/nationality> ?nativeCountry .
    FILTER(?nativeCountry = ?commonNativeCountry) # Assuming ?commonNativeCountry is obtained from step 2
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,31,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of Red Tide (band).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Step 1: Find associated musical artists of Watchtower
SELECT ?watchtowerArtist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
}

# Step 2: For each artist found in step 1, find their associated musical artists
SELECT DISTINCT ?relatedArtist WHERE {
    ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?relatedArtist .
    FILTER EXISTS { 
        <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
    }
}

# Step 3: Find associated musical artists of Red Tide (band)
SELECT ?redTideArtist WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?redTideArtist .
}

# Combine results from steps 2 and 3
SELECT DISTINCT ?finalResult WHERE {
    { 
        ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?relatedArtist .
        FILTER EXISTS { 
            <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
        }
    } UNION {
        <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalResult .
    }
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
314,19,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . }","```sparql
SELECT ?person WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    
    # Condition 1: Commander in the Spanish Civil War
    ?person <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> .

    # Condition 2: Deceased at the headquarters of House of Sombrerete
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/House_of_Sombrerete#Headquarters> .
    
    # Condition 3: Awardee of ""30""
    ?person <http://dbpedia.org/property/awards> ?award .
    FILTER(CONTAINS(LCASE(STR(?award)), ""30""))
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
294,15,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?awardee ?restingPlace WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> .
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?awardee <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    ?restingPlace <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> ;
                  <http://dbpedia.org/ontology/location> ?location .
    FILTER(CONTAINS(LCASE(?location), ""nashville, tennessee""))
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
294,13,val,"Give me the resting place of Edwin A. Keeble and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query 1: Resting place of Edwin A. Keeble
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/burial> ?restingPlace .
}

# Query 2: Resting place of a politician who received the Distinguished Service Medal (U.S. Army)
SELECT DISTINCT ?awardee ?restingPlace WHERE {
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> .
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/burial> ?restingPlace . }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,28,val,Give me the child of Archduke Joseph August of Austria and parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?person WHERE {
  # Condition 1: Child of Archduke Joseph August of Austria
  <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?person .

  # Condition 2: Parent of Archduchess Ilona of Austria
  ?person <http://dbpedia.org/ontology/spouseOrPartner> ?spouse .
  ?spouse <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .

  # Condition 3: Parent of someone native to Budapest
  ?person <http://dbpedia.org/ontology/spouseOrPartner> ?partner .
  ?partner <http://dbpedia.org/ontology/parent> ?child .
  ?child <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Budapest> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
767,40,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
# Step 1: Find the writer of ""Where It's At"" (Dustin Lynch album)
SELECT ?writer WHERE {
    <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> dbo:lyricsBy ?writer .
}

# Step 2: Find Carl L. Nippert's alma mater
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/C._L._Nippert> foaf:almaMater ?almaMater .
}

# Step 3: Find settlements in the administration of these entities
SELECT DISTINCT ?settlement WHERE {
    VALUES ?entity { ?writer ?almaMater }
    ?entity dbo:administrativeUnit ?adminUnit .
    ?adminUnit dbp:seat ?settlement .
    FILTER EXISTS { ?settlement a dbo:Settlement }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
179,12,val,Give me the parent of the child of Bhumibol Adulyadej and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?child ?parent WHERE {
    <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Sirikit>.
    <http://dbpedia.org/resource/Sirikit> <http://www.w3.org/2000/01/rdf-schema#label> ""Mom Rajawongse Sirikit Kitiyakara""@en.
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Bhumibol_Adulyadej>.
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Sirikit>.
    ?child <http://dbpedia.org/ontology/parent> ?parent.
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
488,34,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
# Query for the administration of Emperor Go-Yōzei
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Emperor_Go-Yozei> <http://dbpedia.org/ontology/administration> ?administration .
}

UNION

# Query for the birthplace of the commander in a war involving Saitō Hajime
SELECT ?birthPlace WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?war <http://dbpedia.org/ontology/event> ?event .
    ?war <http://dbpedia.org/ontology/battleParticipant> <http://dbpedia.org/resource/Saito_Hajime> .
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
488,30,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?deathPlaceTokugawaIeyasu ?administrationFatherGoMizunoo ?birthPlaceEnomotoTakeaki WHERE {
    # Death place of Tokugawa Ieyasu
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlaceTokugawaIeyasu .

    # Administration of the father of Emperor Go-Mizunoo
    OPTIONAL {
        <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?fatherGoMizunoo .
        ?fatherGoMizunoo <http://dbpedia.org/ontology/administration> ?administrationFatherGoMizunoo .
    }

    # Birth place of Enomoto Takeaki
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceEnomotoTakeaki .
}
```",4,4,5,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
184,39,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?parentOfChild WHERE {
    # Step 1: Identify Margaret's parents
    <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://dbpedia.org/ontology/child> ?margaretParent .

    # Step 2: Find the child of Margaret's parent(s)
    ?margaretParent <http://dbpedia.org/ontology/child> ?potentialChild .

    # Step 3: Ensure this potential child is also a child of Archduke Joseph August
    ?potentialChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Joseph_August_of_Austria> .

    # Step 4: Find the parent(s) of this specific individual
    ?potentialChild <http://dbpedia.org/ontology/parent> ?parentOfChild .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,43,val,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
SELECT ?person WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Georgeanne Marie Rice""@en .
    ?person <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
    ?person <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Unnatural_(TV_series)> .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
488,32,val,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query 1: Birth Place of the Commander in Boshin War
SELECT ?birthPlace WHERE {
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
}

# Query 2: Death Place of the Father of Yūki Hideyasu (who is a politician)
SELECT ?deathPlace WHERE {
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?father <http://dbpedia.org/property/father> ?yukiHideyasu .
    ?yukiHideyasu <http://dbpedia.org/resource/Yūki_Hideyasu> .
    ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
617,14,val,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?parent WHERE {
    ?richeza <http://dbpedia.org/property/father> ?father .
    ?richeza a <http://dbpedia.org/ontology/Royalty> .
    ?father a <http://dbpedia.org/ontology/Royalty> .
    ?father <http://dbpedia.org/ontology/mother> ?parent .
    FILTER(STRSTARTS(STR(?richeza), ""http://dbpedia.org/resource/Richeza_of_Poland""))
}
```",3,5,4,3,1,3,2,20,0,0,4,0,0.0,0
435,16,val,Give me the work of the author of Iceland and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/property/author> ?v2 . },"```sparql
SELECT ?author ?work WHERE {
    <http://dbpedia.org/resource/Iceland_and_territory_administered_from_Reykjavik> <http://dbpedia.org/ontology/author> ?author .
    ?author <http://purl.org/dc/terms/creator> ?work .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
182,19,val,Give me the war of Jagath Dias and entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
# Wars involving Jagath Dias
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/war> ?war .
}

# Entity in Sri Lanka related to Jagath Dias and wars
SELECT DISTINCT ?entity WHERE {
    ?entity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Sri_Lanka> .
    OPTIONAL { ?entity <http://dbpedia.org/ontology/war> ?war . }
    FILTER EXISTS { 
        <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/war> ?war .
    }
}

# Wars involving the author of 2019 Sri Lanka Easter bombings
SELECT ?author ?war WHERE {
    ?event <http://dbpedia.org/property/event> <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> .
    ?event <http://dbpedia.org/ontology/agent> ?author .
    ?author <http://dbpedia.org/ontology/war> ?war .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
404,25,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?father ?child WHERE {
    <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/child> ?child .
    FILTER(?child = <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914-1987)>)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,19,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
# Query to find the military force of Francisco Franco during a societal event that is also an event and a military conflict.
SELECT ?militaryForce1 WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?event <http://dbpedia.org/property/personsInvolved> <http://dbpedia.org/resource/Francisco_Franco>.
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce1.
}

# Query to find the military force of the Spanish Civil War
SELECT ?militaryForce2 WHERE {
    <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/militaryForce> ?militaryForce2.
}
```",3,6,4,2,2,3,3,71,0,0,514,0,0.0,0
10,19,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
SELECT ?associatedArtist WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Matt Colton"" .
    ?person <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Luke_Vibert> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,20,val,Give me the alma mater of the administration of George K. Nash and entity in Baden-Württemberg.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
SELECT ?administrationAlmaMater ?entityInBWAlmaMater WHERE {
    # Assuming we have identified George K. Nash's administration as a specific resource
    <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/administration> ?administration .
    
    # Find the alma mater of the administration
    ?administration <http://dbpedia.org/ontology/almaMater> ?administrationAlmaMater .

    # Identify an entity in Baden-Württemberg related to George K. Nash or his administration
    ?entityInBW <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    ?entityInBW <http://dbpedia.org/ontology/location> ?location .
    ?location <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Germany> ;
              <http://dbpedia.org/ontology/administrativeTerritory> <http://dbpedia.org/resource/Baden-Württemberg> .

    # Find the alma mater of this entity
    ?entityInBW <http://dbpedia.org/ontology/almaMater> ?entityInBWAlmaMater .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
783,13,val,Give me the associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?band ?artist WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Samuel Ofori Amponsah""@en .
    OPTIONAL { ?person <http://dbpedia.org/ontology/birthName> ""Samuel Ofori Amponsah"" . }
    ?person <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}
```",3,3,4,3,1,3,2,20,0,0,35,0,0.0,0
54,21,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?predecessor WHERE {
    ?soeMinWimalaDewi <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/child> ?child .
    
    <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/ontology/predecessor> ?predecessor .
    
    FILTER(?child = ?predecessor)
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
184,36,val,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
# Step 1: Find the parent of Géza von Habsburg
SELECT ?parentGéza WHERE {
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/parent> ?parentGéza .
}

UNION

# Step 2: Find the parent of Archduchess Margaret of Austria (born 1925)
SELECT ?parentMargaret WHERE {
    <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://dbpedia.org/ontology/parent> ?parentMargaret .
}

UNION

# Step 3: Find the child of the parent identified in step 2
SELECT ?childOfParentMargaret WHERE {
    ?parentMargaret <http://dbpedia.org/ontology/child> ?childOfParentMargaret .
}

UNION

# Step 4: Find the parent of the child identified in step 3
SELECT ?grandChildParent WHERE {
    ?childOfParentMargaret <http://dbpedia.org/ontology/parent> ?grandChildParent .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
547,31,val,Give me the resting place of Simon Cadell and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
# Query to get the resting place of Simon Cadell
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

UNION

# Query to get the resting place of the child of the child of William Haliburton
SELECT ?grandchildRestingPlace WHERE {
    ?child <http://dbpedia.org/ontology/birthPlace> ?parent . # Assuming parent is William Haliburton
    ?parent <http://dbpedia.org/resource/William_Haliburton> .
    
    ?grandchild <http://dbpedia.org/ontology/birthPlace> ?child .
    
    ?grandchild <http://dbpedia.org/ontology/burialPlace> ?grandchildRestingPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,34,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . }","```sparql
SELECT ?writer ?settlement WHERE {
    <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://dbpedia.org/ontology/writer> ?writer .
    OPTIONAL { ?writer <http://dbpedia.org/ontology/administrativeUnit> ?settlement . }
    FILTER(?settlement != 0) # Ensure that a settlement is found
}
```",4,5,5,3,2,3,3,71,0,0,8,0,0.0,0
391,29,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
# Step 1: Find works by Michael Ballhaus
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/work> ?work .
}

# Step 2: Identify an actor from Compton, California who acted in ""All About the Andersons""
SELECT DISTINCT ?actor WHERE {
    ?actor <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States>.
    ?actor <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California>.
    ?actor <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/All_About_the_Andersons>.
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
801,41,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
# Step 1: Identify the musical work (song) by 50 Cent
SELECT ?song WHERE {
    ?song <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/50_Cent> .
    ?song a <http://dbpedia.org/class/yago/MusicalWork108069068> . # Musical work class
    ?song a <http://dbpedia.org/class/yago/Song104968415> .         # Song subclass
}

# Step 2: Find the producer of this musical work
SELECT DISTINCT ?producer WHERE {
    ?song <http://dbpedia.org/ontology/producer> ?producer .
    ?song <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/50_Cent> .
    ?song a <http://dbpedia.org/class/yago/MusicalWork108069068> .
    ?song a <http://dbpedia.org/class/yago/Song104968415> .
}

# Step 3: Determine the associated musical artist of Chris Taylor (music producer)
SELECT DISTINCT ?associatedArtist WHERE {
    ?work <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
    ?work <http://dbpedia.org/ontology/artist> ?associatedArtist .
}

# Step 4: Identify the professional alter ego of The Shadow
SELECT DISTINCT ?professional WHERE {
    ?person <http://dbpedia.org/property/alterEgo> ""The Shadow""@en .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?person <http://dbpedia.org/ontology/profession> ?professional .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
251,16,val,Give me the location of Battle of Marengo and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for the location of Battle of Marengo
SELECT ?location WHERE {
    <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?location .
}

UNION

# Query for the death place of the author of The Twelve Abbots of Challant
SELECT ?deathPlace WHERE {
    ?author dbo:wikiPageWikiLink <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> ;
            <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
994,26,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?bandMember ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

    ?bandMember <http://dbpedia.org/ontology/memberOf> ?band .
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Band> <http://dbpedia.org/ontology/Organisation>) .

    ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",3,7,4,3,1,3,3,71,0,0,33,0,0.0,0
427,42,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
SELECT ?andreottiParty ?prodiBirthPlace ?italianPeoplePartyName WHERE {
  # Step 1: Find Giulio Andreotti's political party
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?andreottiParty .

  # Step 2: Find Romano Antonio Prodi's birth place (as a proxy for birth details)
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://dbpedia.org/property/birthPlace> ?prodiBirthPlace .
  }

  # Step 3: Reference to the name of Italian People's Party (1994)
  <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://www.w3.org/2000/01/rdf-schema#label> ?italianPeoplePartyName .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
303,16,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?person ?party WHERE {
    VALUES ?person { 
        <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> 
        <http://dbpedia.org/resource/Guillermo_Endara>
    }
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    OPTIONAL { ?person <http://dbpedia.org/ontology/politicalParty> ?party . }
}
```",3,4,4,2,2,2,3,28,0,1,1,0.0,0.0,0
328,18,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> .
  ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
  ?person <http://dbpedia.org/property/battle> ?battle .
  FILTER(CONTAINS(LCASE(STR(?battle)), ""eastern front""))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
421,19,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?band WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Edo Maajka""@en .
    ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Edin Dervišhalidović""@en .
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
626,15,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT DISTINCT ?awardee WHERE {
    # Step 1: Find the commander in Battle of Paris (1814)
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(STR(?battle) = ""Battle_of_Paris_(1814)"")

    # Step 2: Find conflicts where this commander was also a commander
    ?conflict <http://dbpedia.org/ontology/commander> ?commander .

    # Step 3: Find awardees of the Order of St. Andrew who were commanders in any conflict
    ?awardee <http://dbpedia.org/property/awards> ?award .
    FILTER(STR(?award) = ""Order_of_St._Andrew"")
    
    # Ensure they are also commanders in a military conflict
    ?conflict2 <http://dbpedia.org/ontology/commander> ?awardee .

    # Step 4: Find the intersection of awardees and commanders in the same conflict as identified in step 2
    FILTER(?conflict = ?conflict2)
}
```",4,5,5,3,2,3,2,20,0,0,9,0,0.0,0
617,44,val,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?child ?spouse ?parent WHERE {
    # Step 1: Find children of Antiochus III the Great
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
    
    # Step 2: For each child, find their spouse
    OPTIONAL { ?child <http://dbpedia.org/property/spouse> ?spouse . }
    
    # Step 3: For each child, confirm the parent is Antiochus III the Great
    OPTIONAL { ?child <http://dbpedia.org/ontology/birthParent> ?parent . FILTER(?parent = <http://dbpedia.org/resource/Antiochus_III_the_Great>) }
    
    # Step 4: Identify the child of Antiochus (son of Antiochus III the Great) and find their spouse
    OPTIONAL {
        ?antiochusChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> .
        ?antiochusChild <http://dbpedia.org/property/spouse> ?spouseOfAntiochusChild .
    }
}
```",5,5,6,2,3,3,3,71,2,7,0,0.2222222222222222,1.0,0.3636363636363636
959,31,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . }","```sparql
SELECT ?person ?university WHERE {
    ?person <http://dbpedia.org/property/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear>.
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>.
    ?person <http://dbpedia.org/ontology/almaMater> ?university.
    ?university <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>.
    ?university <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>.
    ?university <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization>.
    ?university <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan>.
}
```",4,8,5,3,2,3,3,71,0,0,167,0,0.0,0
314,18,val,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Step 1: Identify Lisa Gavrić's profession that is both an event and a societal event
SELECT ?profession WHERE {
    <http://dbpedia.org/resource/Lisa_Gavrić> <http://purl.org/dc/terms/subject> ?profession .
    ?profession <http://www.w3.org/2000/01/rdf-schema#subClassOf>* <http://dbpedia.org/class/yago/SocialEvent108069068> .
}

# Step 2: Find individuals who have been awarded 30 times in the same profession
SELECT DISTINCT ?awardee WHERE {
    # Assuming we found a specific award related to her profession from step 1
    ?award <http://dbpedia.org/ontology/relatedTo> ?profession .
    
    # Find awardees of this award
    ?awardee <http://dbpedia.org/property/awards> ?award .
    
    # Count the number of times they have received this award and filter for 30
    {
        SELECT ?awardee (COUNT(?award) AS ?count) WHERE {
            ?awardee <http://dbpedia.org/property/awards> ?award .
            ?award <http://dbpedia.org/ontology/relatedTo> ?profession .
        } GROUP BY ?awardee
    } FILTER (?count = 30)
}
```

Note: The above query assumes that we can identify a specific award related to Lisa Gavrić's profession. Adjustments may be needed based on the actual data available in DBpedia.",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
488,43,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?deathPlace ?birthPlace ?administration WHERE {
  # Part 1: Death place of Matsudaira Tadamasa's great-grandfather (politician)
  OPTIONAL {
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/father> ?grandfather .
    ?grandfather <http://dbpedia.org/ontology/father> ?greatGrandfather .
    ?greatGrandfather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?greatGrandfather <http://dbpedia.org/property/deathPlace> ?deathPlace .
  }

  # Part 2: Birth place of Enomoto Takeaki
  OPTIONAL {
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }

  # Part 3: Administration of Emperor Go-Yōzei
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Yozei> <http://dbpedia.org/property/administration> ?administration .
  }
}
```",5,7,6,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
197,7,val,Give me the birthplace of the member of FC Politehnica Timișoara and birthplace of George Lusztig.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?memberBirthplace ?georgeLusztigBirthplace WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> .
  ?member <http://dbpedia.org/ontology/birthPlace> ?memberBirthplace .

  <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?georgeLusztigBirthplace
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
177,7,val,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in the residence of Alexander Gamelin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
SELECT ?headquarter ?residence WHERE {
    <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/headquarter> ?headquarter .
    OPTIONAL {
        <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/ontology/residence> ?residence .
    }
}
```",3,3,4,2,2,2,2,9,1,2,0,0.3333333333333333,1.0,0.5
701,4,train,Give me the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
959,2,train,Give me the manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
    <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/coach> ?manager .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
485,5,train,"Give me the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/property/birthPlace> ?result .
    ?result a <http://dbpedia.org/class/yago/Region108069068> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
339,6,train,Give me the father of Princess Elizabeth of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    OPTIONAL { ?child <http://dbpedia.org/property/father> ?father . }
    FILTER EXISTS {
        ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
        ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/GeorgeIOfGreecePerson100000001> .
    }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
528,13,train,Give me the war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?commander ?war WHERE {
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> .
    ?battle <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?war .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
994,0,train,Give me the associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/musicalArtist> ?associatedArtist .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
48,10,train,"Give me the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?actor WHERE {
    ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> .
    ?show <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",2,3,3,2,1,3,2,20,8,5,0,0.6153846153846154,1.0,0.761904761904762
44,3,train,"Give me the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Queensrÿche> ?associationProperty ?associatedArtist .
    ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
    ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}
```",1,3,2,1,1,2,2,9,0,0,3,0,0.0,0
492,0,train,Give me the person decedent at French Algeria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
}
```",1,1,2,1,1,3,3,71,30,0,0,1.0,1.0,1.0
747,1,train,Give me the band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/band> ?result . },1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
645,10,train,Give me the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?grandchild WHERE {
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Adela_Pankhurst> .
    ?parent <http://dbpedia.org/ontology/child> ?grandchild .
}
```",2,2,3,2,1,3,2,20,3,0,0,1.0,1.0,1.0
617,14,train,Give me the parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> .
    ?child <http://dbpedia.org/ontology/child> ?parent .
}
```",2,2,3,2,1,3,3,71,2,6,0,0.25,1.0,0.4
184,13,train,Give me the child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
SELECT ?grandchild WHERE {
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
    <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
177,3,train,"Give me the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?office WHERE {
    <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/ontology/office> ?office .
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
838,0,train,Give me the band of Raša Đelmaš.,SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/memberOf> ?band .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
161,16,train,"Give me the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?force WHERE {
    ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?eventType .
    FILTER(?eventType IN (<http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/MilitaryConflict>)).
    ?predecessor <http://dbpedia.org/property/battle> ?force .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
487,9,train,Give me the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person ?administration WHERE {
  ?person <http://dbpedia.org/property/birthDate> ""1955-01-26""^^xsd:date .
  OPTIONAL { ?person <http://dbpedia.org/ontology/administration> ?administration . }
}
```",2,2,3,2,1,3,2,20,0,23,3,0.0,0.0,0
488,2,train,Give me the administration of Emperor Go-Yōzei.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
SELECT ?reignStart ?reignEnd WHERE {
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/reignStart> ?reignStart .
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/reignEnd> ?reignEnd .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
487,2,train,Give me the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person a <http://dbpedia.org/ontology/Person> .
}
```",1,1,2,1,1,3,2,20,23,0,0,1.0,1.0,1.0
820,4,train,Who is the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?actor WHERE {
  ?actor <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Actors> .
}
```",1,1,2,1,1,3,2,20,0,0,21580,0,0.0,0
392,9,train,Give me the province of Schio and region of Central European Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?schioProvince (GROUP_CONCAT(?region; SEPARATOR="", "") AS ?cetRegions) WHERE {
  OPTIONAL { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?schioProvince . }
  OPTIONAL {
    ?timeZone <http://www.w3.org/2006/time#hasTimezoneOffset> ?offset .
    FILTER(?offset = ""+01:00""^^xsd:string) # CET offset
    ?region <http://dbpedia.org/ontology/country> ?country .
    ?country <http://www.w3.org/2006/time#during> ?timeZone .
  }
}
```",2,2,3,1,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
981,6,train,Give me the entity in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to find an entity in Indonesia associated with Novia Indriani Mamuaja
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Indonesia""@en .
}

# Query to find the birthplace of Novia Indriani Mamuaja
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
701,3,train,Give me the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
747,6,train,Who is the writer of Apollo (Hardwell song)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
    <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/ontology/writer> ?writer .
}
```",1,1,2,1,1,3,3,71,2,0,1,1.0,0.6666666666666666,0.8
378,17,train,"Who is the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?war ?commander WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?war <http://dbpedia.org/property/battleCommander> ?commander .
    ?trigge <http://dbpedia.org/ontology/foughtInBattle> ?war .
    FILTER(?trigge = <http://dbpedia.org/resource/Thomas_Trigge>)
}
```",2,5,3,2,1,3,3,71,0,0,169,0,0.0,0
696,7,train,Give me the birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?member ?birthPlace WHERE {
    ?member <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Dropkick_Murphys> .
    ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
55,8,train,"Give me the band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?bandMember WHERE {
    ?song <http://dbpedia.org/property/producer> ?producer .
    ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?producer <http://dbpedia.org/ontology/member> ?bandMember .
    FILTER(?song = <http://dbpedia.org/resource/Used_to_Love_Her>)
}
```",2,3,3,2,1,2,3,28,0,0,55,0,0.0,0
318,2,train,Give me the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?result . },SELECT ?foundingYear WHERE { <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/property/foundingYear> ?foundingYear . },1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
197,4,train,Give me the birthplace of Dumitru Nadu and birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?birthplace WHERE {
  { <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?birthplace . BIND(<http://dbpedia.org/resource/Dumitru_Nadu> AS ?person) }
  UNION
  { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?birthplace . BIND(<http://dbpedia.org/resource/George_Lusztig> AS ?person) }
}
```",2,2,3,1,2,2,2,9,1,4,0,0.2,1.0,0.33333333333333337
429,6,train,"Give me the country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
SELECT ?result WHERE {
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition>.
    ?v0 <http://dbpedia.org/ontology/country> ?result.
}
```",2,3,3,2,1,2,2,9,7,0,0,1.0,1.0,1.0
994,15,train,Give me the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    OPTIONAL { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/property/musicalArtist> ?artist . }
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
404,14,train,"Give me the child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,3,0,0,1.0,1.0,1.0
328,2,train,Give me the leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,1,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },1,1,2,1,1,3,3,71,21,0,0,1.0,1.0,1.0
778,9,train,"Give me the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?person ?award WHERE {
    ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States>.
    ?person <http://dbpedia.org/ontology/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine>.
    ?person <http://dbpedia.org/ontology/awards> ?award.
}
```",2,3,3,2,1,3,2,20,0,0,9,0,0.0,0
767,12,train,Give me the alma mater of Carl L. Nippert and reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?almaMater ?reference WHERE {
    <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    OPTIONAL { ?almaMater <http://www.w3.org/2002/07/owl#sameAs> ?reference }
}
```",2,2,3,1,2,3,3,71,2,14,0,0.125,1.0,0.2222222222222222
626,8,train,Give me the awardee of the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?award ?otherAwardee WHERE {
    <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov>)
}
```",2,2,3,2,1,3,2,20,229,6,1,0.9744680851063829,0.9956521739130435,0.9849462365591397
378,13,train,Give me the war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?commander ?otherWar WHERE {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battleCommanded> ?otherWar .
    FILTER(?otherWar != <http://dbpedia.org/resource/Peninsular_War>)
}
```",2,2,3,2,1,3,3,71,0,0,118,0,0.0,0
547,5,train,Give me the show with Emily Richard.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
SELECT ?show WHERE {
    <http://dbpedia.org/resource/Emily_Richard> <http://dbpedia.org/ontology/starring> ?show .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
712,9,train,"Give me the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
SELECT ?result WHERE {
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?v0 <http://dbpedia.org/ontology/country> ?result.
    ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising>.
}
```",2,4,3,2,1,3,2,20,2,0,0,1.0,1.0,1.0
534,1,train,Give me the headquarter of Royal Dublin Society.,SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarters> ?result . },1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
488,14,train,Give me the administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/administration> ?administration .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
356,7,train,Give me the player in the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?successor ?player WHERE {
    <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?successor .
    ?successor <http://dbpedia.org/property/player> ?player .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
356,9,train,"Give me the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"```sparql
# Step 1: Find the predecessor of the 2015 Sacramento Republic FC season
SELECT ?predecessor WHERE {
    <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 2: Find the successor of the predecessor identified in step 1
SELECT ?successor WHERE {
    ?predecessor <http://dbpedia.org/ontology/successor> ?successor .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
712,5,train,Who is the awardee of Hero of the Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> .
}
```",1,1,2,1,1,3,2,20,837,0,0,1.0,1.0,1.0
30,5,train,Give me the native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?native WHERE {
    <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/property/birthPlace> ?birthplace .
    ?native <http://dbpedia.org/ontology/nativeOf> ?birthplace .
}
```",2,2,3,2,1,2,2,9,0,0,11488,0,0.0,0
251,1,train,Give me the administration of Forza Italia (2013).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/property/administration> ?administration .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
179,3,train,Give me the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/ontology/birthName> ?result . },1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
232,4,train,Give me the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
285,2,train,Who is the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?result . },1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
184,5,train,"Give me the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?parent .
    ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
778,10,train,"Give me the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?software WHERE {
    ?author <http://dbpedia.org/property/works> ?work .
    ?work <http://dbpedia.org/ontology/title> ""pushd"" ;
          <http://dbpedia.org/ontology/title> ""popd"" .
    ?software <http://dbpedia.org/ontology/creator> ?author .
    FILTER NOT EXISTS { ?software <http://dbpedia.org/ontology/title> ?title . FILTER(?title IN (""pushd"", ""popd"")) }
}
```",2,3,3,2,1,3,2,20,0,0,5,0,0.0,0
16,0,train,Give me the spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
378,2,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?property ?value WHERE {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> ?property ?value .
    FILTER(?property IN (<http://dbpedia.org/ontology/notableWork>, <http://dbpedia.org/property/awards>, <http://dbpedia.org/ontology/birthPlace>, <http://dbpedia.org/ontology/deathPlace>))
}
```",1,1,2,1,1,3,3,71,0,4,2,0.0,0.0,0
498,2,train,"Give me the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
    ?band <http://dbpedia.org/ontology/name> ""Solace of Requiem"" .
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
391,9,train,"Give me the actor of The Departed and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Compton,_California> .
  FILTER(STRSTARTS(STR(?movie), ""http://dbpedia.org/resource/The_Departed""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,3,train,Give me the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
SELECT ?reference WHERE {
    <http://dbpedia.org/resource/Watchtower> <http://dbpedia.org/ontology/reference> ?reference .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
712,3,train,Give me the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
666,1,train,Give me the figure known as The Three Lions.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
SELECT ?result WHERE {
    ?result <http://dbpedia.org/ontology/nickName> ""The Three Lions""@en .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
64,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/country> ?country .
}
```",1,2,2,1,1,2,2,9,0,0,56,0,0.0,0
10,5,train,Give me the birth name of Sharon Kao.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?result . },1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
404,0,train,Give me the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
801,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
SELECT ?professional WHERE {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?professional .
}
```",2,2,3,2,1,3,3,71,0,3,39640,0.0,0.0,0
485,10,train,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . },"```sparql
SELECT ?awardee ?birthPlace WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> .
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet> .
    ?awardee <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",2,4,3,2,1,2,3,28,5,8,2,0.38461538461538464,0.7142857142857143,0.5
54,12,train,Give me the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?parent WHERE {
    OPTIONAL { 
        <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?parent .
    }
    OPTIONAL { 
        <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/property/predecessor> ?parent .
    }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
666,9,train,"Give me the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?manager WHERE {
    ?team <http://dbpedia.org/property/coachedBy> <http://dbpedia.org/resource/Lenid_Slutskiy> .
    ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .
    ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> .
    ?team <http://dbpedia.org/property/manager> ?manager .
    ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
}
```",2,5,3,2,1,3,2,20,0,0,5,0,0.0,0
435,5,train,Give me the author of Iceland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
    <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?author .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
827,4,train,"Who is the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
54,16,train,Give me the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
SELECT ?parentChild WHERE {
    OPTIONAL { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?parent . }
    UNION
    OPTIONAL { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/mother> ?parent . }
    ?parent <http://dbpedia.org/ontology/child> ?parentChild .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
659,0,train,Give me the commander in German campaign of 1813.,SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,31,0,0,1.0,1.0,1.0
617,7,train,Who is the commander in Battle of Panium?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
801,15,train,Give me the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?alterEgo WHERE {
    <http://dbpedia.org/resource/The_Shadow_(character)> <http://dbpedia.org/property/trueSelf> ?trueSelf .
    ?trueSelf <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
915,1,train,Give me the father of Lizzie Spaulding.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . },1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
783,9,train,Give me the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Samuel_Ofori_Amponsah> <http://dbpedia.org/ontology/memberOf> ?band .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
701,1,train,Give me the parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,10,train,Give me the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
778,5,train,"Give me the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Bill_Joy> <http://dbpedia.org/ontology/software> ?result .
    FILTER(STRSTARTS(STR(?result), ""http://dbpedia.org/resource/"") && 
           EXISTS { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> })
}
```",1,2,2,1,1,3,2,20,0,0,5,0,0.0,0
251,11,train,Give me the death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?deathPlace WHERE {
    ?book <http://purl.org/dc/terms/title> ""The Twelve Abbots of Challant"" .
    ?book <http://dbpedia.org/ontology/author> ?author .
    ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
314,3,train,Give me the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/headquarters> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
391,17,train,"Give me the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/starring> ?v1 . }","```sparql
SELECT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie108069068>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Work108069068>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow108069068>.
}
```",2,5,3,2,1,3,3,71,0,0,1674,0,0.0,0
9,2,train,Give me the figure known as QUB.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nickname> ""QUB"" . }",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
392,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/country> ?country .
}
```",1,2,2,1,1,2,3,28,0,0,56,0,0.0,0
645,6,train,Give me the alma mater of Sylvia Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?almaMater <http://dbpedia.org/property/country> ""United Kingdom"" .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
645,4,train,Give me the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?result . },1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
959,15,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
SELECT ?person ?almaMater WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?person <http://dbpedia.org/property/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> .
    ?person <http://dbpedia.org/property/almaMater> ?almaMater .
    
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
    ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
}
```",2,6,3,2,1,3,3,71,0,0,3,0,0.0,0
303,7,train,Give me the party of Arnulfo Arias and party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?person ?party WHERE {
  { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/politicalParty> ?party . BIND(<http://dbpedia.org/resource/Arnulfo_Arias> AS ?person) }
  UNION
  { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/politicalParty> ?party . BIND(<http://dbpedia.org/resource/Guillermo_Endara> AS ?person) }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
16,10,train,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
    ?person <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,6,train,Give me the administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
SELECT ?administration ?location WHERE {
    OPTIONAL { <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?administration . }
    OPTIONAL { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/property/location> ?location . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
838,1,train,Give me the band member of Kerber.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Kerber_(band)> <http://dbpedia.org/ontology/member> ?result . },1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
747,5,train,"Give me the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
SELECT ?song WHERE {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/work> ?song .
    ?song a <http://dbpedia.org/class/yago/Song108069068> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
339,3,train,Who is the child of Christian IX of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,2,20,4,2,2,0.6666666666666666,0.6666666666666666,0.6666666666666666
303,8,train,"Give me the party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?party WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?commander <http://dbpedia.org/property/politicalParty> ?party .
    ?event <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .
    ?event <http://dbpedia.org/ontology/commander> ?commander .
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
312,0,train,Give me the entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . },"```sparql
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Province_of_Bergamo> .
}
```",1,1,2,1,1,2,2,9,0,16,228,0.0,0.0,0
48,0,train,Give me the band of Carl Falk.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/band> ?result . },1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
487,6,train,Give me the country of 2022 Vermont House of Representatives election and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?country ?administration WHERE {
    <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?country .
    OPTIONAL { 
        <http://dbpedia.org/resource/Phil_Scott_(politician)> <http://dbpedia.org/property/politicalParty> ?administration .
    }
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
547,13,train,Give me the resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
SELECT ?actor ?restingPlace WHERE {
    <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/starring> ?actor .
    OPTIONAL { ?actor <http://dbpedia.org/ontology/burial> ?restingPlace . }
}
```",2,2,3,2,1,3,3,71,0,7,2,0.0,0.0,0
184,2,train,Give me the parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
356,5,train,"Give me the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/nativePlace> ?place .
    ?person <http://dbpedia.org/ontology/soccerPlayer> [] .
    ?person <http://dbpedia.org/ontology/soccerManager> [] .
    FILTER(CONTAINS(LCASE(?place), ""wolverhampton""))
}
```",1,3,2,1,1,3,2,20,0,0,17,0,0.0,0
959,4,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?result .
    ?result <http://www.w3.org/2000/01/rdf-schema#label> ""Japan"" .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
}
```",1,5,2,1,1,3,3,71,0,0,1,0,0.0,0
179,1,train,Give me the parent of Ubol Ratana.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
528,16,train,Give me the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?work ?commander WHERE {
    ?work <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""january 9"")).
    OPTIONAL { ?work <http://dbpedia.org/ontology/commander> ?commander . }
}
```",2,2,3,2,1,3,3,71,0,7,2,0.0,0.0,0
177,6,train,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?organization ?headquarter WHERE {
    <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/ontology/memberOf> ?organization .
    ?organization <http://dbpedia.org/ontology/officeLocation> ?headquarter .
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
528,7,train,Give me the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?result . },1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
16,6,train,Give me the profession of Satomi Ishihara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?result . },1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
617,5,train,"Who is the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
    <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?successor .
    ?successor a <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
161,1,train,Give me the military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?militaryForce WHERE {
  <http://dbpedia.org/resource/Spanish_Civil_War> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Battle>.
  ?battle <http://dbpedia.org/property/belligerents> ?militaryForce.
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
}
```",1,1,2,1,1,3,3,71,0,0,514,0,0.0,0
404,10,train,"Give me the spouse of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
    <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?spouse .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
747,12,train,Give me the band of Shèna and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?person ?band WHERE {
  { 
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/band> ?band .
    BIND(<http://dbpedia.org/resource/Shèna> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/band> ?band .
    BIND(<http://dbpedia.org/resource/Amba_Shepherd> AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,2,train,Give me the person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović"" .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
767,4,train,"Give me the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?admin WHERE {
    ?green <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
    ?green rdfs:label ""Green""@en.
    FILTER(!regex(str(?green), ""disambiguation""))
    ?green <http://dbpedia.org/ontology/administrativeUnit> ?admin.
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
485,8,train,"Give me the entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?country WHERE {
    ?timeZone <http://www.w3.org/2000/01/rdf-schema#label> ""Western European Time""@en .
    ?region <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?region <http://dbpedia.org/ontology/country> ?country .
    FILTER(?country <http://dbpedia.org/resource/Category:Countries>)
}
```",2,3,3,2,1,2,3,28,0,0,46363,0,0.0,0
488,10,train,Give me the administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?administration ?birthPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/reign> ?administration .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
16,15,train,Who is the person born as the birth name of Ted McGinley?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . },SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?result . },2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
197,3,train,Who is the awardee of Leroy P. Steele Prize?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
SELECT ?awardee WHERE {
    <http://dbpedia.org/resource/Leroy_P._Steele_Prize> <http://dbpedia.org/property/awards> ?awardee .
}
```",1,1,2,1,1,2,2,9,0,0,21,0,0.0,0
488,13,train,"Give me the death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?deathPlace WHERE {
    <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/ontology/father> ?father .
    ?father a <http://dbpedia.org/ontology/Politician> .
    ?father <http://dbpedia.org/property/deathPlace> ?deathPlace .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
701,9,train,Give me the parent of Meritamen and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
SELECT ?person ?parent WHERE {
  { 
    <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?parent .
    BIND(<http://dbpedia.org/resource/Meritamen> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/parent> ?parent .
    BIND(<http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,1,3,0,0.25,1.0,0.4
10,8,train,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?associatedArtist WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?person <http://dbpedia.org/property/birthName> ""Matt Colton"" .
    ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
528,8,train,Give me the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,15,train,Give me the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
    ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
    ?child <http://dbpedia.org/ontology/father> ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
360,0,train,Give me the writer of The Roaring Silence.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
    <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/ontology/author> ?writer .
}
```",1,1,2,1,1,2,3,28,0,0,8,0,0.0,0
404,13,train,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
SELECT ?parent WHERE {
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER(?type = <http://dbpedia.org/ontology/Royalty>)
    ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",2,3,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
547,6,train,Give me the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,3,71,7,0,1,1.0,0.875,0.9333333333333333
318,4,train,Give me the person born in 1970 and professional in Composer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthYear> ""1970"" .
  ?person <http://purl.org/dc/terms/profession> <http://dbpedia.org/resource/Category:Composers> .
}
```",2,2,3,1,2,2,2,9,0,0,7,0,0.0,0
626,6,train,Give me the commander in Battle of Leipzig and awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>.
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Leipzig>.
    ?commander <http://dbpedia.org/property/awards> ?award .
    FILTER(?award = <http://dbpedia.org/resource/Order_of_St._Andrew>)
}
```",2,2,3,1,2,3,2,20,0,3,1,0.0,0.0,0
767,13,train,Give me the alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",2,2,3,2,1,3,3,71,0,1,6,0.0,0.0,0
9,13,train,Give me the alma mater of the awardee of Royal Medal.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
    ?awardee <http://dbpedia.org/property/awards> ""Royal Medal""@en .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",2,2,3,2,1,3,3,71,9,34,22,0.20930232558139536,0.2903225806451613,0.24324324324324326
182,1,train,Give me the war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result .
}
```",1,1,2,1,1,2,3,28,5,0,0,1.0,1.0,1.0
801,13,train,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?work ?producer WHERE {
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    ?work <http://dbpedia.org/ontology/musicArtist> <http://dbpedia.org/resource/50_Cent> .
    ?work <http://dbpedia.org/ontology/producer> ?producer .
}
```",2,5,3,2,1,3,3,71,0,0,38,0,0.0,0
534,4,train,"Give me the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
SELECT ?location WHERE {
    <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue> .
    ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/architecturalStructure> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,3,train,"Give me the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108067> .
    BIND(?residence AS ?result)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
747,3,train,"Who is the person decedent, that is an athlete and a soccer player, at Zolotonosha?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?person WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .
}
```",1,3,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
404,9,train,Give me the spouse of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914-1987)> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,12,train,Give me the spouse of Laodice IV and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)>
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
712,10,train,Who is the awardee of the show of Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
SELECT ?show ?award ?awardee WHERE {
    ?show <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Soviet_Union> .
    ?show <http://dbpedia.org/property/awards> ?award .
    ?award <http://dbpedia.org/property/recipient> ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,1209,0,0.0,0
528,12,train,Give me the war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?war .
    OPTIONAL { 
        ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
               <http://dbpedia.org/property/chiefCommander> <http://dbpedia.org/resource/Narciso_Campero> .
        ?force <http://dbpedia.org/ontology/battle> ?war .
    }
}
```",2,2,3,1,2,3,3,71,2,7,0,0.2222222222222222,1.0,0.3636363636363636
30,4,train,"Give me the native of Paris and professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Paris> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Financiers> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Businesspeople> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Vineyard_owners> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Art_collectors> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Horse_breeders_and_trainers> .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
303,0,train,Give me the party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/politicalParty> ?result . },1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
754,5,train,Give me the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
820,1,train,Give me the child of Jack Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Jack_Schwartzman> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
10,1,train,Give me the band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/memberOf> ?result . },1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
959,11,train,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
SELECT ?member WHERE {
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/JapaneseOrganizations100000001> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/UniversitiesAndColleges1000000> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/EducationalInstitutions10000000> .
    ?almaMater <http://dbpedia.org/ontology/member> ?member .
}
```",2,6,3,2,1,3,3,71,0,0,267,0,0.0,0
365,4,train,Give me the reference to The Blasters and band of Phil Alvin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Alvin> <http://dbpedia.org/ontology/band> ?result . FILTER(STRSTARTS(STR(?result), ""http://dbpedia.org/resource/The_Blasters"")) }",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
963,0,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Serbia> .
}
```",1,1,2,1,1,3,2,20,19,403,5409,0.045023696682464455,0.0035003684598378776,0.006495726495726496
994,4,train,Give me the associated musical artist of Watchtower (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?associatedArtist WHERE {
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/member> ?associatedArtist .
}
UNION
SELECT ?associatedArtist WHERE {
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/property/musicalArtist> ?associatedArtist .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
392,11,train,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
SELECT ?province WHERE {
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Italy> .
    ?residence <http://dbpedia.org/ontology/resident> <http://dbpedia.org/resource/Sebastiano_Bianchetti> .
    ?residence <http://dbpedia.org/ontology/province> ?province .
}
```",2,4,3,2,1,2,3,28,0,0,1,0,0.0,0
427,2,train,Give me the party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?result . },1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
92,2,train,Give me the band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael_(musician)> <http://dbpedia.org/ontology/band> ?result . },1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
303,4,train,"Give me the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/El_Valle_de_Ant%C3%B3n> <http://dbpedia.org/ontology/country> ?result .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
64,4,train,Give me the alma mater of Jovan Hristić and entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Jovan_Hristi%C4%87> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Serbia> .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
534,8,train,Give me the headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
SELECT ?owner ?headquarter WHERE {
    <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?owner .
    ?owner <http://dbpedia.org/ontology/headquarters> ?headquarter .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
48,9,train,"Give me the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?work ?writer WHERE {
    <http://dbpedia.org/resource/Shellback_(record_producer)> <http://dbpedia.org/ontology/work> ?work .
    ?work <http://purl.org/dc/terms/creator> ?writer .
}
```",2,3,3,2,1,3,2,20,0,0,1065,0,0.0,0
820,9,train,Give me the award of the author of Understanding Comics.,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Understanding_Comics> <http://purl.org/dc/terms/creator> ?author .
    ?author <http://dbpedia.org/property/awards> ?award .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
281,3,train,Give me the award of Jonathon Band.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?result . },1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
77,6,train,Give me the war of Alexander Chechenskiy and force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?force WHERE {
    OPTIONAL { 
        <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?war .
    }
    OPTIONAL {
        <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/militaryForce> ?force .
    }
}
```",2,2,3,1,2,3,2,20,6,3,0,0.6666666666666666,1.0,0.8
285,7,train,Give me the parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tina_Onassis_Niarchos> .
    ?child <http://dbpedia.org/ontology/child> ?parent .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
64,1,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Serbia> .
}
```",1,1,2,1,1,2,2,9,19,403,5409,0.045023696682464455,0.0035003684598378776,0.006495726495726496
404,8,train,"Who is the father of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?result . }","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?result . }",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
767,16,train,Give me the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/property/governor> ?v1 . }","```sparql
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/administration> ?administration .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
994,2,train,Give me the band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT ?band ?member WHERE {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?member .
    FILTER(?member != <http://dbpedia.org/resource/Don_Dokken>)
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,8,train,Give me the war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
    <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/ontology/battle> ?war .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
294,5,train,"Give me the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlement108069068> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
64,2,train,"Give me the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
}
```",1,2,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
778,4,train,Give me the author of Pushd and popd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
    ?command <http://www.w3.org/2000/01/rdf-schema#label> ""pushd"" .
    ?command <http://www.w3.org/2000/01/rdf-schema#label> ""popd"" .
    ?command <http://dbpedia.org/ontology/creator> ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
16,8,train,Give me the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?result . },1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
996,0,train,Give me the force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> <http://dbpedia.org/ontology/militaryUnit> ?force .
}
UNION
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> <http://dbpedia.org/ontology/memberOf> ?force .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
659,8,train,"Give me the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
SELECT ?force WHERE {
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvent108069068>.
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflicts108069068>.
    ?force <http://dbpedia.org/property/participant> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
}
```",1,4,2,1,1,3,3,71,0,0,2,0,0.0,0
488,1,train,Give me the death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
197,6,train,Give me the birthplace of the awardee of Leroy P. Steele Prize.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
SELECT ?awardee ?birthPlace WHERE {
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Leroy P. Steele Prize""@en .
    ?awardee <http://dbpedia.org/property/awards> ?award .
    ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,2,2,9,4,64,17,0.058823529411764705,0.19047619047619047,0.08988764044943819
378,14,train,Give me the claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?commander ?fame WHERE {
    ?event <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> .
    ?event <http://dbpedia.org/property/commander> ?commander .
    OPTIONAL { ?commander <http://dbpedia.org/property/awards> ?fame . }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
959,17,train,"Give me the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?team WHERE {
    ?season <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kashima_Antlers> .
    ?season <http://dbpedia.org/property/year> ""1998""^^<http://www.w3.org/2001/XMLSchema#gYear> .
    ?season <http://dbpedia.org/ontology/coach> ?manager .
    ?manager <http://dbpedia.org/ontology/sportsManager> true .
    ?manager <http://dbpedia.org/ontology/team> ?team .
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
48,3,train,Give me the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
    <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_song)> <http://dbpedia.org/ontology/writer> ?writer .
}
```",1,1,2,1,1,3,2,20,0,0,48,0,0.0,0
547,3,train,Give me the child of William Haliburton.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""William Haliburton""@en . }",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
959,3,train,Who is the person born in 1958?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> .
}
```",1,1,2,1,1,3,3,71,2515,0,0,1.0,1.0,1.0
778,3,train,Give me the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?result . },1,1,2,1,1,3,2,20,9,0,0,1.0,1.0,1.0
547,4,train,Give me the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
10,11,train,Give me the professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?birthName ?profession WHERE {
    <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
    OPTIONAL { ?birthName <http://dbpedia.org/ontology/profession> ?profession . }
}
```",2,2,3,2,1,2,3,28,0,2,39640,0.0,0.0,0
767,7,train,"Give me the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
SELECT ?result WHERE {
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>.
    ?v0 <http://dbpedia.org/property/alterEgo> <http://dbpedia.org/resource/Matthew_Burland>.
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
285,10,train,Who is the professional in the award of Stan Lee?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?award ?otherAwardee WHERE {
    <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Stan_Lee>)
}
```",2,2,3,2,1,3,2,20,536,5670,39104,0.08636803093780213,0.013521695257315842,0.02338262880076779
701,8,train,Give me the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/ontology/father> ?result . },1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
626,7,train,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?battle ?commander WHERE {
    <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
}
```",2,3,3,2,1,3,2,20,0,0,230,0,0.0,0
915,5,train,"Give me the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Phillip_Spaulding> <http://dbpedia.org/ontology/child> ?result .
    ?result a <http://dbpedia.org/ontology/FictionalCharacter> ;
            a <http://dbpedia.org/ontology/SoapCharacter> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
838,6,train,Give me the band member of Kerber and band of Raša Đelmaš.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?member WHERE {
    ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Kerber_(band)> .
    ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Raša_Đelmaš> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
356,8,train,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
SELECT ?individual ?team WHERE {
    ?individual <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?individual <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
    ?individual <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Wolverhampton> .
    ?individual <http://dbpedia.org/ontology/team> ?team .
}
```",2,4,3,2,1,3,2,20,0,0,46,0,0.0,0
838,7,train,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"```sparql
SELECT ?member ?band WHERE {
    ?member <http://dbpedia.org/property/member> <http://dbpedia.org/resource/YU_Grupa> .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?member <http://dbpedia.org/ontology/band> ?band .
}
```",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
827,9,train,"Who is the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/father> ?parent .
    ?parent <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
778,1,train,Give me the author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/property/author> ?result . },1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
285,5,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No specific query can be constructed due to lack of context.
```",1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
617,10,train,Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
16,11,train,Give me the spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Ted Martin McGinley""@en .
    ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
747,9,train,Give me the person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person ?band WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Amba Shepherd""@en .
    ?person <http://dbpedia.org/property/dateOfBirth> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
    OPTIONAL { ?person <http://dbpedia.org/ontology/band> ?band . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,2,train,Give me the native of Prague.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> .
}
```",1,1,2,1,1,2,2,9,1654,0,0,1.0,1.0,1.0
365,0,train,Give me the band of Phil Alvin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Alvin> <http://dbpedia.org/ontology/band> ?result . },1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,7,train,"Who is the leader, that is an office holder and a politician, of Gustav Jonson?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?leader WHERE {
    <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/leader> ?leader .
    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,12,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
177,4,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in South Korea.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
SELECT ?headquarters WHERE {
    <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism_(South_Korea)> <http://dbpedia.org/ontology/headquarter> ?headquarters .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
161,5,train,Who is the predecessor of Indalecio Prieto?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?result . },1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
915,7,train,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v1 . },"```sparql
SELECT ?resident WHERE {
    <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/property/birthPlace> ?birthplace .
    ?birthplace a <http://dbpedia.org/ontology/Settlement> .
    ?birthplace <http://dbpedia.org/ontology/resident> ?resident .
}
```",2,3,3,2,1,3,2,20,0,0,15,0,0.0,0
339,9,train,Who is the child of the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> <http://dbpedia.org/ontology/predecessor> ?predecessor .
    ?predecessor <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,4,2,2,0.6666666666666666,0.6666666666666666,0.6666666666666666
345,5,train,"Who is the person born, that is a soccer player and a soccer manager, on 1978-09-15?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
  ?person <http://dbpedia.org/property/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> .
}
```",1,3,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
701,13,train,Give me the parent of the child of Ramesses II.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ramesses_II> .
    ?child <http://dbpedia.org/ontology/child> ?parent .
}
```",2,2,3,2,1,3,3,71,0,3,2,0.0,0.0,0
485,1,train,Give me the birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
184,17,train,Give me the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
SELECT ?grandparent ?cousinOrSibling WHERE {
  <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://dbpedia.org/ontology/child> ?grandparent .
  ?grandparent <http://dbpedia.org/ontology/child> ?cousinOrSibling .
  FILTER(?cousinOrSibling != <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)>)
}
```",2,2,3,2,1,3,3,71,1,1,2,0.5,0.3333333333333333,0.4
115,2,train,Who is the alumnus of National University of San Marcos?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
SELECT ?alumnus WHERE {
    <http://dbpedia.org/resource/National_University_of_San_Marcos> <http://dbpedia.org/ontology/alumni> ?alumnus .
}
```",1,1,2,1,1,2,2,9,0,0,74,0,0.0,0
161,17,train,"Give me the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
SELECT ?event WHERE {
    ?resource <http://www.w3.org/2000/01/rdf-schema#label> ""El Director""@en .
    ?resource <http://dbpedia.org/ontology/event> ?event .
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
303,2,train,Give me the party of Arnulfo Arias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/politicalParty> ?result . },1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
314,10,train,Give me the awardee of the award of Sergei Makovetsky.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?award ?otherAwardee WHERE {
    <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Sergei_Makovetsky>)
}
```",2,2,3,2,1,2,3,28,950,1,1,0.9989484752891693,0.9989484752891693,0.9989484752891693
9,6,train,Who is the awardee of Royal Medal?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> .
}
```",1,1,2,1,1,3,3,71,45,0,0,1.0,1.0,1.0
161,13,train,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?militaryForce WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?event <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Francisco_Largo_Caballero>.
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce.
}
```",2,4,3,2,1,3,3,71,0,0,514,0,0.0,0
281,12,train,Give me the war of New Zealand Army and entity in Colony of New Zealand.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
SELECT ?battle WHERE {
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?battle .
    ?entity <http://dbpedia.org/ontology/battle> ?battle .
    FILTER(?entity = <http://dbpedia.org/resource/Colony_of_New_Zealand>)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
701,11,train,Give me the parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?child ?parent WHERE {
    <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",2,2,3,2,1,3,3,71,2,4,0,0.3333333333333333,1.0,0.5
161,4,train,"Give me the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?force WHERE {
    ?force <http://dbpedia.org/ontology/societalEvent> ?event .
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Events118072846> .
    ?force <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Francisco_Franco> .
}
```",1,4,2,1,1,3,3,71,0,0,12,0,0.0,0
488,5,train,"Who is the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?father .
    ?father a <http://dbpedia.org/ontology/OfficeHolder> .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
16,2,train,Give me the person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
328,10,train,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?leader WHERE {
    <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?leader .
    ?leader <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,14,train,"Give me the person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?person WHERE {
    ?capital <http://www.w3.org/2000/01/rdf-schema#label> ""Algiers""@en .
    ?capital <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Algeria> .
    ?capital <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/Settlements1000000InAlgeria> .
    ?person <http://dbpedia.org/property/deathPlace> ?capital .
}
```",2,3,3,2,1,3,3,71,0,0,122,0,0.0,0
404,3,train,Give me the birth name of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/birthName> ?result . },1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,12,train,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/parent> ?parent .
    OPTIONAL { 
        ?parent <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ramesses_II> .
    }
    FILTER EXISTS {
        ?parent <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ramesses_II>
    }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
421,11,train,Give me the person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . },SELECT ?result WHERE { <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?result . },2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
492,12,train,Give me the person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers>.
    ?person <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Franco-Hova_Wars>.
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
783,5,train,"Give me the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
963,5,train,"Give me the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?rulingParty WHERE {
    <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/ontology/rulingParty> ?rulingParty .
    FILTER(?rulingParty <http://dbpedia.org/ontology/POLITICAL_PARTY>)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
285,1,train,Give me the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?result . },1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
487,0,train,Give me the country of 2022 Vermont House of Representatives election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
177,5,train,Give me the entity in the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
SELECT ?residence ?entity WHERE {
    <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence ?property ?entity .
}
```",2,2,3,2,1,2,2,9,74,1794,2991,0.03961456102783726,0.024143556280587276,0.030002027163997566
465,0,train,Give me the death place of Jiřina Štěpničková.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
404,11,train,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia"" .
    <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
328,12,train,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
    ?person <http://dbpedia.org/property/leaderOf> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,5,train,Who is the commander in Battle of Verdun?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,17,0,0,1.0,1.0,1.0
421,5,train,Give me the birth name of Dino Merlin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?result . },1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
996,3,train,Who is the awardee of 1778.0?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?awardee WHERE {
    ?award <http://www.w3.org/2004/02/skos/core#notation> ""1778.0"" .
    ?awardee <http://dbpedia.org/property/awards> ?award .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
801,5,train,"Give me the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?rapper WHERE {
  ?rapper <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?rapper <http://dbpedia.org/property/profession> ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""rapper""))
}
```",1,2,2,1,1,3,3,71,0,0,1363,0,0.0,0
16,16,train,Give me the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
SELECT ?actor ?profession WHERE {
    <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
391,12,train,Give me the actor of All About the Andersons and actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
    { 
        <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/castMember> ?actor .
    }
    UNION
    {
        <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/castMember> ?actor .
    }
}
GROUP BY ?actor
HAVING (COUNT(DISTINCT ?movie) = 2)
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,9,train,Give me the person decedent at French Algeria and commander in Franco-Hova Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
    ?person <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Franco-Hova_Wars> .
    ?person <http://dbpedia.org/ontology/deathPlace> ?place .
    FILTER(CONTAINS(LCASE(STR(?place)), ""algeria""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,7,train,Give me the band member of Senidah and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . }","```sparql
SELECT ?bandMember WHERE {
    <http://dbpedia.org/resource/Senidah> <http://dbpedia.org/ontology/member> ?bandMember .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Edin Dervišhalidović""@en .
    ?person <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović"" .
    FILTER(?bandMember = ?person)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,7,train,Give me the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
285,9,train,Who is the child of the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?spouse ?child WHERE {
    <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/property/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,5,2,0,0.7142857142857143,1.0,0.8333333333333333
547,0,train,Give me the resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/burialPlace> ?result . },1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,14,train,Give me the figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . },SELECT ?result WHERE { <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/property/nickname> ?result . },2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,15,train,"Give me the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?officeHolder ?force WHERE {
    ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?officeHolder <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
    OPTIONAL { ?officeHolder <http://dbpedia.org/property/forces> ?force . }
}
```",2,3,3,2,1,3,3,71,0,1,60,0.0,0.0,0
801,16,train,"Give me the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
SELECT ?rapper ?work WHERE {
    ?rapper <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?rapper <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> .
    ?rapper <http://purl.org/dc/terms/creator> ?work .
    FILTER (
        { ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> }
        ||
        { ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> }
        ||
        { ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> }
    )
}
```",2,6,3,2,1,3,3,71,0,0,2395,0,0.0,0
55,9,train,Give me the band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT ?member WHERE {
    ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Metallica> .
    ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Newsted> .
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
429,0,train,Give me the administration of Andrew Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Andrew_Johnson> <http://dbpedia.org/ontology/office> ?office .
    ?office <http://dbpedia.org/property/administration> ?administration .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
696,4,train,Who is the commander in Battle of Chishui River?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?result . },1,1,2,1,1,3,2,20,24,0,0,1.0,1.0,1.0
182,7,train,Give me the entity in Sri Lanka and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?entity WHERE {
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""sri lanka""))
    BIND(?location AS ?entity)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
197,0,train,Give me the birthplace of Dumitru Nadu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
92,11,train,"Give me the band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?member WHERE {
    <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/member> ?member .
}
```",2,3,3,2,1,3,3,71,0,0,12,0,0.0,0
391,2,train,Give me the actor of All About the Andersons.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,3,71,4,0,1,1.0,0.8,0.888888888888889
626,10,train,Give me the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?militaryForce ?award WHERE {
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino>.
    ?militaryForce <http://dbpedia.org/property/awards> ?award.
}
```",2,2,3,2,1,3,2,20,0,0,53,0,0.0,0
701,5,train,Give me the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
303,9,train,Give me the entity in Panama and party of Arnulfo Arias.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
    <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/memberOf> ?party .
    ?party <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
435,1,train,Give me the region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
SELECT ?region WHERE {
    <http://dbpedia.org/resource/Greenwich_Mean_Time> <http://dbpedia.org/ontology/timeZone> ?region .
}
```",1,1,2,1,1,2,3,28,0,0,2484,0,0.0,0
54,11,train,Give me the child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?fatherChild WHERE {
    ?soeMinWimalaDewi <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/child> ?fatherChild .
}
WHERE {
    VALUES ?soeMinWimalaDewi { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> }
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
9,3,train,"Give me the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast>.
}
```",1,2,2,1,1,3,3,71,57,0,0,1.0,1.0,1.0
492,1,train,Give me the commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
232,12,train,Give me the native of London and actor of Dog Soldiers (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
  ?actor <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/London> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_Kingdom> .
}
```",1,1,2,1,1,3,2,20,87,2691,42912,0.03131749460043196,0.0020233028675085466,0.003801035454485877
488,11,train,Give me the birth place of the commander in Boshin War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>.
    ?commander <http://dbpedia.org/ontology/commander> ?battle.
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War>.
    ?commander <http://dbpedia.org/property/birthPlace> ?birthPlace.
}
```",2,2,3,2,1,3,3,71,0,0,15,0,0.0,0
404,7,train,Who is the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
534,10,train,"Give me the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
SELECT ?owner WHERE {
    ?event <http://dbpedia.org/ontology/location> ?venue .
    ?event rdfs:label ""2012 Pro12 Grand Final""@en .
    ?venue a <http://dbpedia.org/ontology/Organisation> ;
           a <http://dbpedia.org/ontology/Building> .
    ?venue <http://dbpedia.org/property/owner> ?owner .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
232,10,train,Give me the child of Jon Pertwee and native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/nativePlace> ""London"" .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
184,15,train,"Give me the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
SELECT ?landmark ?native WHERE {
    ?landmark <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    ?landmark <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
    ?landmark <http://dbpedia.org/ontology/settlement> ?settlement .
    OPTIONAL { ?native <http://dbpedia.org/property/nativeOf> ?landmark . }
}
```",2,3,3,2,1,3,3,71,0,0,3320,0,0.0,0
747,2,train,Give me the band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/band> ?result . },1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
485,11,train,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?entity WHERE {
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace a <http://dbpedia.org/class/yago/YagoRegion108930885> .
    ?birthPlace <http://www.w3.org/2004/02/skos/core#hasTopConcept> ?entity .
}
```",2,3,3,2,1,2,3,28,0,0,369,0,0.0,0
754,9,train,Give me the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?grandparent WHERE {
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Linka> .
  ?grandparent <http://dbpedia.org/ontology/child> ?parent .
}
```",2,2,3,2,1,3,2,20,3,0,0,1.0,1.0,1.0
177,0,train,Give me the entity in South Korea.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . },"```sparql
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/South_Korea>.
}
```",1,1,2,1,1,2,2,9,239,627,2826,0.2759815242494226,0.07797716150081566,0.12159755787331468
701,0,train,Give me the parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
365,3,train,Give me the real name of The Blasters.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?realName WHERE {
  <http://dbpedia.org/resource/The_Blasters> <http://dbpedia.org/ontology/realName> ?realName .
}
```

This query checks for the existence of a real name associated with ""The Blasters"" by querying their DBpedia resource. If such information is available and has been populated in DBpedia, it will be returned as the result.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
996,2,train,Give me the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d%27Avoriaz> <http://dbpedia.org/ontology/elevation> ?result . },1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
9,8,train,Give me the nickname of Queen's University Belfast.,SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/property/nickname> ?result . },1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
161,10,train,Give me the military force of Rif War and commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
SELECT ?militaryForce ?commander WHERE {
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War>.
    ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Biscay_Campaign>.

    OPTIONAL {
        ?biscayCampaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
        ?biscayCampaign <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Biscay_Campaign>.
        ?biscayCampaign <http://dbpedia.org/ontology/commander> ?commander.
    }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,1,train,Give me the associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
251,0,train,Give me the location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?result . },1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
915,4,train,"Give me the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?parent .
    ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
    ?parent <http://dbpedia.org/property/soapCharacter> ""true""^^<http://www.w3.org/2001/XMLSchema#boolean> .
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
16,13,train,Give me the professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?otherProfessional WHERE {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
    ?otherProfessional <http://purl.org/dc/terms/subject> ?profession .
    FILTER(?otherProfessional != <http://dbpedia.org/resource/Satomi_Ishihara>)
}
```",2,2,3,2,1,3,3,71,13356,1035181,5885,0.012737747928780768,0.6941427160750481,0.02501643600074173
617,2,train,Give me the parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Nysa_(wife_of_Pharma)ces_I_of_Pontus> <http://dbpedia.org/ontology/parent> ?result . },1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
659,5,train,"Give me the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
SELECT ?result WHERE {
    ?result <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse""@en .
    ?result <http://dbpedia.org/ontology/nickname> ""Polish Horse"" .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
391,7,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid query can be generated due to lack of context.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
659,10,train,Give me the military force of Napoleonic Wars and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce ?commander WHERE {
    ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> .
    ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/German_campaign_of_1813> .
    OPTIONAL { ?militaryForce <http://dbpedia.org/property/commander> ?commander . }
}
```",2,2,3,1,2,3,3,71,0,2,6,0.0,0.0,0
179,6,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara and parent of Ubol Ratana.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Mom Rajawongse Sirikit Kitiyakara"" .
    ?person <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ubol_Ratana>.
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,9,train,"Who is the member of the associated musical artist, that is an organisation and a group and a band, of The Boils?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?member WHERE {
    ?artist <http://dbpedia.org/ontology/member> ?member .
    ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
    ?artist <http://dbpedia.org/ontology/band> [] .
    ?artist <http://dbpedia.org/property/associatedBand> <http://dbpedia.org/resource/The_Boils> .
}
```",2,5,3,2,1,3,2,20,0,0,6,0,0.0,0
696,10,train,Give me the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?commander ?award WHERE {
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Chishui_River> .
    ?battle <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/property/awards> ?award .
}
```",2,2,3,2,1,3,2,20,0,0,9,0,0.0,0
492,4,train,"Give me the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/work> ?work .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,6,train,Give me the administration of George K. Nash.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/administration> ?administration .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
747,10,train,Give me the band of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person ?band WHERE {
  { 
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/band> ?band .
    BIND(<http://dbpedia.org/resource/Shèna> AS ?person)
  }
  UNION
  {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
            <http://dbpedia.org/property/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?person <http://dbpedia.org/ontology/band> ?band .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
356,2,train,"Give me the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> 
        <http://dbpedia.org/ontology/predecessor> ?result .
    FILTER(
        (EXISTS { ?result <http://dbpedia.org/ontology/sportsTeamSeason> [] } ||
         EXISTS { ?result <http://dbpedia.org/ontology/soccerClubSeason> [] })
    )
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
177,1,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
SELECT ?headquarters WHERE {
    <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/headquarter> ?headquarters .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
666,5,train,Give me the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?nickname .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
378,5,train,"Give me the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . }","```sparql
SELECT ?relatedConflict WHERE {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/battle> ?relatedConflict .
    ?relatedConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,7,train,"Give me the territory administered from Reykjavík and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
SELECT ?territory ?work WHERE {
  # Part 1: Territory administered from Reykjavík
  <http://dbpedia.org/resource/Reykjavík> <http://dbpedia.org/ontology/administrativeTerritory> ?territory .
  
  # Part 2: Work of Article 62, Section IV of Constitution of Iceland
  OPTIONAL {
    ?constitution <http://dbpedia.org/property/article> ""Article 62"" .
    ?constitution <http://dbpedia.org/property/section> ""Section IV"" .
    ?constitution <http://dbpedia.org/ontology/workExample> ?work .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
626,2,train,Who is the commander in Battle of Paris (1814)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,2,20,11,0,0,1.0,1.0,1.0
528,11,train,Give me the war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?militaryForce ?war WHERE {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/property/foughtBy> ?militaryForce .
    ?militaryForce <http://dbpedia.org/ontology/war> ?war .
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
281,13,train,"Give me the entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",2,3,3,2,1,3,3,71,0,1,1,0.0,0.0,0
783,4,train,Give me the persona of Ebony Reigns.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
SELECT ?persona WHERE {
    <http://dbpedia.org/resource/Ebony_Reigns> <http://dbpedia.org/ontology/alternativeName> ?persona .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
492,15,train,Give me the work of the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?work WHERE {
    ?resource <http://dbpedia.org/property/title> ""French Algeria""@en .
    ?resource <http://dbpedia.org/ontology/author> ?author .
    ?author <http://dbpedia.org/property/writtenWork> ?work .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
378,3,train,Give me the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?result . },1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
435,2,train,"Give me the work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Article_62,_Section_IV_of_the_Constitution_of_Iceland> <http://dbpedia.org/ontology/work> ?work .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
281,14,train,"Give me the war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?unit <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Heather_Roy>.
    ?unit <http://dbpedia.org/ontology/battle> ?war.
}
```",2,3,3,2,1,3,3,71,0,0,14,0,0.0,0
712,4,train,Give me the show of Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
SELECT ?show WHERE {
  ?show <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Soviet_Union> .
}
UNION
SELECT ?show WHERE {
  ?show <http://dbpedia.org/ontology/broadcastBy> <http://dbpedia.org/resource/Soviet_Union> .
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
48,7,train,Give me the band of the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?writer ?band WHERE {
    <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/ontology/writer> ?writer .
    OPTIONAL { ?writer <http://dbpedia.org/property/band> ?band . }
}
```",2,2,3,2,1,3,2,20,0,0,95,0,0.0,0
404,5,train,"Who is the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?parent .
    ?parent a <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
285,0,train,Give me the parent of Alexander Onassis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
281,0,train,"Give me the war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?war .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
281,6,train,"Give me the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?country .
    FILTER(STRSTARTS(STR(?country), ""http://dbpedia.org/resource/Category:""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
754,3,train,Give me the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?result . },1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
429,5,train,Give me the administration of the father of Martha Johnson Patterson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/administration> ?administration .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
48,6,train,Give me the band of Carl Falk and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?person ?band WHERE {
    VALUES ?person { <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/resource/Murda_Mook> }
    ?person <http://dbpedia.org/ontology/memberOf> ?band .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
182,5,train,Give me the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?result . },1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
44,5,train,Give me the band member of the band of John Pettibone.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?bandMember WHERE {
    <http://dbpedia.org/resource/John_Pettibone> <http://dbpedia.org/ontology/memberOf> ?band .
    ?bandMember <http://dbpedia.org/ontology/memberOf> ?band .
    FILTER(?bandMember != <http://dbpedia.org/resource/John_Pettibone>)
}
```",2,2,3,2,1,2,2,9,0,0,2,0,0.0,0
666,10,train,"Give me the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
SELECT ?result WHERE {
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>.
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>.
    ?v0 <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England>.
    ?v0 <http://dbpedia.org/property/nickname> ?result.
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
232,6,train,"Give me the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/film> ?film .
    ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
    BIND(?film AS ?result)
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
820,6,train,Give me the child of Jack Schwartzman and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . }","```sparql
SELECT ?child ?profession WHERE {
    <http://dbpedia.org/resource/Jack_Schwartzman> <http://dbpedia.org/ontology/child> ?child .
    OPTIONAL { ?child <http://dbpedia.org/ontology/profession> ?profession . }
    FILTER(?profession != """")
}
```",2,2,3,1,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
54,0,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
488,16,train,"Who is the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?grandfather WHERE {
    ?officeHolder <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Matsudaira_Tadamasa> .
    ?officeHolder <http://dbpedia.org/ontology/officeHolder> [] .
    ?officeHolder <http://dbpedia.org/ontology/father> ?grandfather .
    ?grandfather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
391,16,train,"Give me the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?spouse ?work WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/property/works> ?work .
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
666,8,train,Give me the figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . },SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?result . },2,2,3,2,1,3,2,20,0,1,5,0.0,0.0,0
617,7,train,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
  <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> <http://dbpedia.org/ontology/child> ?child .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,2,20,3,0,1,1.0,0.75,0.8571428571428571
328,14,train,"Give me the leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/ontology/leader> ?office .
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
    ?office <http://dbpedia.org/ontology/leader> ?result .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
9,15,train,"Who is the mayor, that is a politician, of the entity, that is an organisation, in Belfast?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?mayor WHERE {
    ?organisation <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> .
    ?organisation <http://dbpedia.org/property/mayor> ?mayor .
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",2,4,3,2,1,3,3,71,0,0,13,0,0.0,0
915,10,train,"Give me the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
SELECT ?grandChild WHERE {
    ?parent <http://dbpedia.org/ontology/fictionalCharacter> _:b0 .
    ?parent <http://dbpedia.org/ontology/soapCharacter> _:b1 .
    <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/child> ?parent .

    ?grandChild <http://dbpedia.org/ontology/fictionalCharacter> _:b2 .
    ?grandChild <http://dbpedia.org/ontology/soapCharacter> _:b3 .
    ?parent <http://dbpedia.org/ontology/child> ?grandChild .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
820,2,train,Who is the author of Understanding Comics?,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?result . },1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
981,2,train,"Give me the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?result . }","```sparql
SELECT ?timeZone WHERE {
    <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?timeZone .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
182,9,train,Give me the war of Jagath Dias and entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?battle ?entity WHERE {
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?battle .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
            <http://dbpedia.org/ontology/battle> ?battle ;
            <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sri_Lanka> .
}
```",2,2,3,1,2,2,3,28,1,58,4,0.01694915254237288,0.2,0.03125
184,3,train,"Give me the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?landmark WHERE {
    ?landmark <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
    OPTIONAL { ?landmark <http://www.w3.org/2002/07/owl#sameAs> ?settlement . }
    FILTER EXISTS { ?landmark <http://dbpedia.org/ontology/settlement> ?settlement }
}
```",1,2,2,1,1,3,3,71,0,0,162,0,0.0,0
232,13,train,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?film ?actor WHERE {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/property/awards> ?claimToFame .
    FILTER((<http://www.w3.org/2002/07/owl#Thing> <http://dbpedia.org/ontology/Film>) || (<http://www.w3.org/2002/07/owl#Thing> <http://dbpedia.org/ontology/MilitaryConflict>))
    ?claimToFame <http://dbpedia.org/ontology/film> ?film .
    ?film <http://dbpedia.org/ontology/starring> ?actor .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
498,3,train,"Who is the member, that is an artist, of Mortician (band)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
626,5,train,Give me the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?result . },SELECT ?award WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?award . },1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
392,0,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Italy> .
}
```",1,1,2,1,1,2,3,28,170,1702,12922,0.09081196581196581,0.012985029025358998,0.0227211975407645
328,0,train,Give me the awardee of Order of Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> .
}
```",1,1,2,1,1,3,3,71,22,0,0,1.0,1.0,1.0
487,3,train,Give me the administration of Patricia McCoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Patricia_McCoy> ?roleProperty ?position .
    ?position <http://dbpedia.org/property/administration> ?administration .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
9,7,train,"Give me the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
SELECT ?entity WHERE {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>.
    ?entity <http://dbpedia.org/ontology/location> ?location.
    ?location <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland>.
}
```",1,3,2,1,1,3,3,71,16,12,118,0.5714285714285714,0.11940298507462686,0.19753086419753085
92,16,train,"Give me the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/Return_to_Nuke_%27Em_High_Volume_1> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",2,3,3,2,1,3,3,71,0,0,205,0,0.0,0
30,0,train,Give me the native of Paris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> .
}
```",1,1,2,1,1,2,2,9,4485,0,0,1.0,1.0,1.0
754,4,train,Give me the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> <http://dbpedia.org/ontology/reference> ?result . },1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
981,9,train,"Give me the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/property/timeZone> ?v0 . }","```sparql
SELECT ?timeZone ?region WHERE {
    <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://dbpedia.org/ontology/region> ?region .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
820,3,train,Give me the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?result . },1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
488,6,train,"Who is the father, that is a politician, of Yūki Hideyasu?",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Yuki_Hideyasu> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,11,train,Give me the reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?author WHERE {
    <http://dbpedia.org/resource/Blinded_by_the_Light_(song)> <http://dbpedia.org/ontology/composer> ?author .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
994,14,train,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Dokken> <http://dbpedia.org/ontology/memberOf> ?band .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
421,3,train,Who is the awardee of [[#Awards and nominations?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Some_Award> .
}
```

Note: Replace `<http://dbpedia.org/resource/Some_Award>` with the actual resource identifier of the award or nomination in question.",1,1,2,1,1,2,3,28,0,0,113,0,0.0,0
378,1,train,Give me the war of Joaquín Blake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?result . },1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
617,6,train,Who is the child of Antiochus III the Great?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
696,6,train,Give me the landmark at elevation of 50 and birth place of Tim Brennan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query for landmarks at elevation 50
SELECT ?landmark WHERE {
    ?landmark <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#float> .
}

UNION

# Query for birth place of Tim Brennan
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Tim_Brennan_(American_football)> <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
92,17,train,Give me the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Joseph Michael"" . }",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
16,5,train,Who is the actor of Unnatural (TV series)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
312,6,train,Give me the entity in the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?birthPlaceEntity WHERE {
    <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlaceEntity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?birthPlace .
}
```",2,2,3,2,1,2,2,9,246,99,12846,0.7130434782608696,0.018790100824931256,0.03661531591873186
617,1,train,Give me the parent of Mieszko II Lambert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Mieszko_II_Lambert> <http://www.w3.org/2002/07/owl#sameAs> ?childResource . ?childResource <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
427,11,train,Give me the reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . },SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://dbpedia.org/ontology/reference> ?result . },2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
92,7,train,Give me the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael_(actor)> <http://dbpedia.org/ontology/birthName> ?result . },1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,2,train,Give me the military force of Napoleonic Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
SELECT DISTINCT ?militaryForce WHERE {
    <http://dbpedia.org/resource/Napoleonic_Wars> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/ontology/militaryUnit> ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,1051,0,0.0,0
392,10,train,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/sportEvent> ?event .
    ?event <http://www.w3.org/2006/vcard/ns#adr;type=timeZone> ?timeZone .
    ?timeZone <http://www.w3.org/2006/vcard/ns#adr;type=region> ?result .
}
```",2,3,3,2,1,2,3,28,0,0,49990,0,0.0,0
92,12,train,Give me the associated musical artist of Jim Sheppard and band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?jimSheppardArtist ?josephMichaelBand WHERE {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?jimSheppardArtist .
    <http://dbpedia.org/resource/Joseph_Michael_(musician)> <http://dbpedia.org/ontology/band> ?josephMichaelBand .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
378,11,train,Give me the war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result .
}
```",2,2,3,2,1,3,3,71,12,0,0,1.0,1.0,1.0
54,9,train,Give me the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,11,train,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
    <http://dbpedia.org/resource/Seleucus_II_Callinicus> <http://dbpedia.org/ontology/child> ?child .
    ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,3,71,4,1,1,0.8,0.8,0.8000000000000002
747,0,train,Give me the person born on 1985-04-29.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
}
```",1,1,2,1,1,3,3,71,30,0,0,1.0,1.0,1.0
318,5,train,Give me the person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . },"```sparql
SELECT ?person WHERE {
    <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?foundingYear .
    ?person <http://dbpedia.org/property/birthDate> ?birthDate .
    BIND(YEAR(?birthDate) AS ?birthYear)
    FILTER(?birthYear = ?foundingYear)
}
```",2,2,3,2,1,2,2,9,0,0,2810,0,0.0,0
232,11,train,Give me the child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/John_Pertwee> <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee"" .
    <http://dbpedia.org/resource/John_Pertwee> <http://dbpedia.org/ontology/child> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
547,1,train,Give me the resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/burialPlace> ?result . },1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
378,7,train,"Give me the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER (
        (?type = <http://dbpedia.org/class/yago/MilitaryConflicts1000Through3000AHighlightedEvents> ||
         ?type = <http://dbpedia.org/class/yago/SocietalEvents> ||
         ?type = <http://www.w3.org/2002/07/owl#Thing>)
    )
}
```",1,4,2,1,1,3,3,71,0,0,7,0,0.0,0
754,6,train,Give me the parent of Loe Thai and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?person ?parent WHERE {
  { <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?parent . }
  UNION
  { <http://dbpedia.org/resource/May_Hnin_Thwe-Da> <http://dbpedia.org/ontology/parent> ?parent . }
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
767,14,train,Give me the reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?alterEgo WHERE {
    <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,5,98447,0.0,0.0,0
626,3,train,"Give me the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/battle> ?result .
}
```",1,2,2,1,1,3,2,20,0,0,25,0,0.0,0
996,9,train,Who is the awardee of the elevation of Lac d'Avoriaz?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?awardee WHERE {
    <http://dbpedia.org/resource/Lac_d%27Avoriaz> ?property ?awardee .
    FILTER(?property IN (<http://dbpedia.org/ontology/award>, <http://dbpedia.org/ontology/honoree>, <http://dbpedia.org/ontology/recognition>))
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
827,5,train,"Who is the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894)?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> <http://dbpedia.org/ontology/child> ?child .
  ?child a <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
528,3,train,"Give me the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
SELECT ?event WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?event <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Chile>.
}
```",1,2,2,1,1,3,3,71,0,53,34,0.0,0.0,0
392,5,train,"Give me the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
    BIND(?residence AS ?result)
}
```",1,3,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
801,10,train,Give me the associated musical artist of Chris Taylor (music producer) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }",SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },2,2,3,1,2,3,3,71,4,3,0,0.5714285714285714,1.0,0.7272727272727273
303,10,train,"Give me the entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?entity WHERE {
    <http://dbpedia.org/resource/El_Valle_de_Antón> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?countryResource .
    ?entity <http://dbpedia.org/ontology/country> ?countryResource .
}
```",2,3,3,2,1,2,3,28,0,0,991,0,0.0,0
54,2,train,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/ontology/predecessor> ?result . },1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
747,11,train,Give me the person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
SELECT ?person WHERE {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER(?person != <http://dbpedia.org/resource/Pavlo_Khudzik>)
}
```",2,2,3,2,1,3,3,71,29,0,1,1.0,0.9666666666666667,0.983050847457627
404,16,train,"Who is the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandChild WHERE {
    <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?parent .
    ?parent <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/ontology/Royalty> .
    ?parent <http://dbpedia.org/ontology/child> ?grandChild .
    ?grandChild <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
421,1,train,Give me the native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
}
```",1,1,2,1,1,2,3,28,5399,0,0,1.0,1.0,1.0
498,5,train,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?result WHERE {
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
    ?v0 <http://dbpedia.org/resource/Solace_of_Requiem>.
    ?v0 <http://dbpedia.org/ontology/band> ?result.
}
```",2,4,3,2,1,2,2,9,0,0,11,0,0.0,0
427,17,train,"Who is the person born, that is an office holder and a politician, as the birth name of Romano Prodi?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?person WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?person <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
360,4,train,"Give me the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/property/deathPlace> ?deathPlace .
    ?deathPlace a <http://dbpedia.org/ontology/Settlement> .
}
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
547,11,train,Give me the resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?child ?restingPlace WHERE {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    OPTIONAL { ?child <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",2,2,3,2,1,3,3,71,0,3,2,0.0,0.0,0
617,8,train,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?grandParent WHERE {
    <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?father .
    ?father a <http://dbpedia.org/ontology/Royalty> .
    ?father <http://dbpedia.org/ontology/parent> ?grandParent .
}
```",2,3,3,2,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
391,10,train,"Give me the actor of All About the Andersons and native of Compton, California.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
SELECT ?actor WHERE {
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/property/nationality> ?nationality .
    ?nationality <http://www.w3.org/2000/01/rdf-schema#label> ""United States"" .
    ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ""Compton, California"" .
    FILTER(STRSTARTS(STR(?movie), STR(<http://dbpedia.org/resource/All_About_the_Andersons>)))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,9,train,Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band ?associatedArtist WHERE {
  { 
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedBand> ?associatedArtist .
    BIND(<http://dbpedia.org/resource/Red_Tide_(band)> AS ?band)
  }
  UNION
  {
    <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedBand> ?associatedArtist .
    BIND(<http://dbpedia.org/resource/S.A._Slayer> AS ?band)
  }
}
```",2,2,3,1,2,3,3,71,1,11,0,0.08333333333333333,1.0,0.15384615384615385
547,10,train,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?burialPlace WHERE {
  { 
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/burialPlace> ?burialPlace .
    BIND(<http://dbpedia.org/resource/James_Burton_(Egyptologist)> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Alan_Cunningham_(explorer)> <http://dbpedia.org/ontology/burialPlace> ?burialPlace .
    BIND(<http://dbpedia.org/resource/Alan_Cunningham_(explorer)> AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,4,train,"Give me the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
SELECT ?party WHERE {
    ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>.
    ?party <http://dbpedia.org/property/rulingIn> <http://dbpedia.org/resource/Sicily>.
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
915,0,train,"Give me the resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . }","```sparql
SELECT ?resident WHERE {
    <http://dbpedia.org/resource/Springfield,_Illinois> <http://dbpedia.org/ontology/resident> ?resident .
}
```",1,1,2,1,1,3,2,20,0,0,15,0,0.0,0
294,9,train,"Give me the resting place of Edwin A. Keeble and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    FILTER(CONTAINS(LCASE(STR(?restingPlace)), ""nashville, tennessee""))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
9,5,train,"Give me the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
SELECT ?reference WHERE {
    ?resource <http://dbpedia.org/ontology/reference> ?reference .
    ?reference a <http://dbpedia.org/ontology/Award> .
    FILTER(CONTAINS(LCASE(STR(?resource)), ""royal medals""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
754,1,train,Give me the parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . },SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Thwe-Da> <http://dbpedia.org/ontology/parent> ?result . },1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
77,7,train,Give me the war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
SELECT ?awardee ?war WHERE {
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Golden Weapon for Bravery""@en .
    ?awardee <http://dbpedia.org/property/awards> ?award .
    OPTIONAL { 
        ?awardee <http://dbpedia.org/ontology/battle> ?war .
    }
}
```",2,2,3,2,1,3,2,20,22,10,0,0.6875,1.0,0.8148148148148148
142,3,train,Give me the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
    ?character <http://www.w3.org/2000/01/rdf-schema#label> ""Papa wa Newscaster""@en .
    ?character <http://dbpedia.org/ontology/actor> ?actor .
}
```",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
115,3,train,Who is the awardee of National Order of Scientific Merit?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> .
}
```",1,1,2,1,1,2,2,9,9,0,0,1.0,1.0,1.0
312,4,train,Give me the entity in Italy and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>.
  ?entity <http://dbpedia.org/property/province> <http://dbpedia.org/resource/Province_of_Bergamo>.
}
```",2,2,3,1,2,2,2,9,228,0,0,1.0,1.0,1.0
754,2,train,Give me the parent of Min Linka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/child> ?parent .
}
```",1,1,2,1,1,3,2,20,0,1,2,0.0,0.0,0
365,5,train,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person ?band WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?person <http://dbpedia.org/property/profession> ?profession .
    FILTER (
        CONTAINS(LCASE(?profession), ""vocalist"") ||
        CONTAINS(LCASE(?profession), ""musician"") ||
        CONTAINS(LCASE(?profession), ""songwriter"")
    )
    OPTIONAL { ?person <http://dbpedia.org/property/band> ?band . }
}
```",2,4,3,2,1,2,2,9,0,0,2,0,0.0,0
44,4,train,Give me the band member of Undertow (band) and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
SELECT ?member WHERE {
    { <http://dbpedia.org/resource/Undertow_(band)> <http://dbpedia.org/ontology/member> ?member . }
    UNION
    { <http://dbpedia.org/resource/Sledgeback> <http://dbpedia.org/ontology/member> ?member . }
}
GROUP BY ?member
HAVING (COUNT(DISTINCT ?band) = 2)
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
528,14,train,Give me the force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/property/militaryService> ?force .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
994,8,train,"Who is the person born, that is a musical artist, as Donald Maynard Dokken?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,10,train,Give me the region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
SELECT ?timeZone ?region WHERE {
    <http://dbpedia.org/resource/Bombali_Shebora_Chow.html> <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://www.w3.org/2006/vcard/ns#region> ?region
}
```",2,2,3,2,1,2,3,28,0,0,2484,0,0.0,0
996,4,train,Who is the native of Palestine (region)?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
SELECT ?person WHERE {
    <http://dbpedia.org/resource/Palestine_(region)> <http://dbpedia.org/ontology/nativePlace> ?person .
}
```",1,1,2,1,1,3,2,20,0,0,47,0,0.0,0
365,2,train,"Give me the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  FILTER (
    (?profession = <http://dbpedia.org/resource/Category:Musical_artists> ||
     ?profession = <http://dbpedia.org/resource/Artist_(occupation)>)
  ).
  ?person <http://dbpedia.org/property/role> ""Vocalist, musician, songwriter"" .
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
314,7,train,Give me the person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?person <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Spanish_Civil_War> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
232,7,train,"Give me the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?person WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  OPTIONAL { ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/France> . }
  OPTIONAL { ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . }
  FILTER((BOUND(?nationality) || BOUND(?birthPlace)))
}
```",1,3,2,1,1,3,3,71,0,0,270,0,0.0,0
547,9,train,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/James_Burton_(Egyptologist)> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Simon_Cadell> AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
429,2,train,Who is the father of Martha Johnson Patterson?,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/ontology/father> ?result . },1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,9,train,Give me the awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
    ?person <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
}
```",2,2,3,1,2,3,3,71,0,4,2,0.0,0.0,0
747,15,train,"Give me the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?person ?birthDate WHERE {
    ?person <http://dbpedia.org/ontology/Athlete> _:a .
    ?person <http://dbpedia.org/ontology/SoccerPlayer> _:b .
    ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .
    OPTIONAL { ?person <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?birthInfo . }
    ?birthInfo <http://dbpedia.org/ontology/birthDate> ?birthDate .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
435,6,train,Give me the territory administered from Reykjavík and region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
SELECT ?territory WHERE {
  ?territory <http://dbpedia.org/ontology/administrativeCapital> <http://dbpedia.org/resource/Reykjavík>.
  ?territory <http://dbpedia.org/property/timeZone> ""GMT"" .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
339,2,train,Who is the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . },"```sparql
SELECT ?predecessor WHERE {
    <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
142,2,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_Standard_Time> <http://dbpedia.org/ontology/timeZoneRegion> ?result . },1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
747,16,train,"Who is the writer of the work, that is a song, of Amba Shepherd?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?song ?writer WHERE {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/work> ?song .
    ?song <http://purl.org/dc/terms/creator> ?writer .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
30,6,train,Give me the professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
SELECT ?otherProfessional WHERE {
    <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/ontology/profession> ?profession .
    ?otherProfessional <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?otherProfessional != <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild>)
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
55,0,train,Give me the band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . },"```sparql
SELECT ?member WHERE {
    <http://dbpedia.org/resource/Guns_N%27_Roses> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,2,3,28,0,0,55,0,0.0,0
701,6,train,Give me the child of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
827,7,train,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/property/child> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> .
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
  ?grandchild a <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
528,1,train,Give me the war of Orozimbo Barbosa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/property/wars> ?war .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
487,10,train,"Give me the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Phil Scott"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
303,1,train,Give me the entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Panama>.
}
```",1,1,2,1,1,2,3,28,3,79,988,0.036585365853658534,0.0030272452068617556,0.0055917986952469705
492,8,train,"Give me the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?capital WHERE {
    <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?capital .
    ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
179,7,train,Give me the person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?birthName .
}
```",2,2,3,2,1,3,2,20,0,1,1,0.0,0.0,0
391,5,train,Who is the spouse of Sherry Hormann?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?result . },1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
963,2,train,Give me the time zone of Herzegovina-Neretva Canton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?result . },"```sparql
SELECT ?timeZone WHERE {
    <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/ontology/timeZone> ?timeZone .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
232,14,train,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?native WHERE {
    ?residence <http://dbpedia.org/ontology/resident> <http://dbpedia.org/resource/Sylvie_Bermann> .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlements100000001> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
    ?residence <http://dbpedia.org/ontology/nativePlace> ?native .
}
```",2,4,3,2,1,3,3,71,0,0,9121,0,0.0,0
77,0,train,Give me the war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?war .
}
```",1,1,2,1,1,3,2,20,9,0,0,1.0,1.0,1.0
827,8,train,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
SELECT ?royalChild ?father WHERE {
    <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> <http://dbpedia.org/ontology/child> ?royalChild .
    ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/RoyalFamilyMember108930068> .
    ?royalChild <http://dbpedia.org/property/father> ?father .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,0,train,Give me the alma mater of Vladimir Cerrón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
16,4,train,Who is the person born as Ted Martin McGinley?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Ted Martin McGinley"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
44,2,train,Give me the band of John Pettibone.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },SELECT ?result WHERE { <http://dbpedia.org/resource/John_Pettibone> <http://dbpedia.org/ontology/band> ?result . },1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,7,train,Give me the birth name of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/birthName> ?result . },1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
488,7,train,"Who is the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
701,17,train,"Give me the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
    ?commander <http://dbpedia.org/ontology/father> ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
959,12,train,Give me the manager of 2013 Júbilo Iwata season and native of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?manager WHERE {
  <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/coach> ?manager .
  ?manager <http://dbpedia.org/property/nativeCountry> <http://dbpedia.org/resource/Japan> .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
232,9,train,Give me the actor of Dog Soldiers (film) and child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?actor WHERE {
    ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
    OPTIONAL { 
        ?child <http://dbpedia.org/ontology/child> ?actor .
        FILTER(?child = <http://dbpedia.org/resource/Jon_Pertwee>)
    }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,4,train,"Who is the child, that is a royalty, of Seleucus II Callinicus?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Seleucus_II_Callinicus> <http://dbpedia.org/ontology/child> ?child .
    ?child a <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
294,3,train,"Who is the awardee, that is a politician, of Distinguished Service Medal (U.S. Army)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> .
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,2,3,28,11,0,0,1.0,1.0,1.0
547,16,train,Give me the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?show ?actor WHERE {
    <http://dbpedia.org/resource/Emily_Richard> <http://dbpedia.org/ontology/starring> ?show .
    ?show <http://dbpedia.org/ontology/starring> ?actor .
}
```",2,2,3,2,1,3,3,71,0,0,22,0,0.0,0
659,6,train,"Give me the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}
```",1,3,2,1,1,3,3,71,19,0,0,1.0,1.0,1.0
182,0,train,Give me the war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
54,14,train,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?child ?predecessor WHERE {
    <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    OPTIONAL { ?child <http://dbpedia.org/property/predecessor> ?predecessor . }
}
```",2,4,3,2,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
339,8,train,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?father WHERE {
  ?child <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> .
  ?child <http://dbpedia.org/ontology/father> ?father .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
77,10,train,"Who is the mayor of the territory administered, that is an organisation, from Warsaw?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . },"```sparql
SELECT ?mayor WHERE {
    ?organisation <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Warsaw> .
    ?organisation <http://dbpedia.org/ontology/administrativeUnit> ?territory .
    ?organisation <http://dbpedia.org/ontology/mayor> ?mayor .
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
318,3,train,Give me the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/ontology/profession> ?result . },1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
963,7,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?country WHERE {
    ?country <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Central_European_Time>.
    ?country a <http://dbpedia.org/ontology/Country>.
}
```",2,3,3,2,1,3,2,20,0,0,173261,0,0.0,0
435,4,train,Give me the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Bombali_Shebora_Chow.html> <http://dbpedia.org/ontology/timeZone> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
488,9,train,Give me the death place of Tokugawa Ieyasu and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?tokugawaDeathPlace ?enomotoBirthPlace WHERE {
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?tokugawaDeathPlace .
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/property/birthPlace> ?enomotoBirthPlace .
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
534,7,train,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?child ?birthPlace WHERE {
    <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?child <http://dbpedia.org/property/officeHolder> [] .
    ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
285,4,train,Give me the award of Stan Lee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?result . },SELECT ?award WHERE { <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?award . },1,1,2,1,1,3,2,20,5,0,0,1.0,1.0,1.0
534,2,train,"Who is the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
SELECT ?politician WHERE {
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  OPTIONAL { ?politician <http://dbpedia.org/property/birthPlace> ?birthPlace . }
  OPTIONAL { ?politician <http://dbpedia.org/ontology/nationality> ?nationality . }
  FILTER (
    EXISTS { ?birthPlace rdfs:label ""Essex""@en } ||
    EXISTS { ?nationality rdfs:label ""United Kingdom"" && ?nationality foaf:nativeName ""Essex""@en }
  )
}
```",1,2,2,1,1,3,2,20,0,0,89,0,0.0,0
161,14,train,"Give me the commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
SELECT ?event ?commander WHERE {
    <http://dbpedia.org/resource/Emilio_Mola> <http://dbpedia.org/ontology/battle> ?event .
    ?event <http://dbpedia.org/ontology/commander> ?commander .
}
```",2,3,3,2,1,3,3,71,46,2,39,0.9583333333333334,0.5411764705882353,0.6917293233082706
820,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Placeholder for a complete query once additional details are provided.
```",1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
314,4,train,Give me the award of Sergei Makovetsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?result . },1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
404,17,train,Who is the father of the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/property/father> ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
485,6,train,Give me the entity in United Kingdom and birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?ukEntity ?birthPlace WHERE {
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    OPTIONAL { 
        <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/residence> ?ukEntity .
        FILTER(STRSTARTS(STR(?ukEntity), ""http://dbpedia.org/resource/United_Kingdom""))
    }
}
```",2,2,3,1,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
312,3,train,Give me the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?result . },1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
232,8,train,"Give me the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?residence WHERE {
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    OPTIONAL { ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> . }
}
```",1,3,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
747,4,train,Give me the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?result . },1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
197,1,train,Give me the birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
312,1,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Italy> .
}
```",1,1,2,1,1,2,2,9,170,1702,12922,0.09081196581196581,0.012985029025358998,0.0227211975407645
9,17,train,"Give me the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://dbpedia.org/property/nickname> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
SELECT ?entity ?nickname WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
  ?entity <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Northern Ireland"" .
  OPTIONAL { ?entity <http://xmlns.com/foaf/0.1/nick> ?nickname . }
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
16,17,train,Give me the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?alumnus ?birthName WHERE {
    <http://dbpedia.org/resource/Ohio_State_University> <http://dbpedia.org/ontology/alumni> ?alumnus .
    ?alumnus <http://dbpedia.org/property/birthName> ?birthName .
}
```",2,2,3,2,1,3,3,71,0,0,90,0,0.0,0
429,4,train,Give me the country of 77th Ohio Infantry Regiment and administration of Andrew Johnson.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
SELECT ?entity ?country ?administration WHERE {
  { 
    <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?country .
    BIND(""77th Ohio Infantry Regiment"" AS ?entity)
  }
  UNION
  {
    <http://dbpedia.org/resource/Andrew_Johnson> <http://dbpedia.org/property/administration> ?administration .
    BIND(""Andrew Johnson"" AS ?entity)
  }
}
```",2,2,3,1,2,2,2,9,1,2,0,0.3333333333333333,1.0,0.5
360,2,train,Give me the reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }",SELECT ?result WHERE { <http://dbpedia.org/resource/Manfred_Mann> <http://dbpedia.org/ontology/reference> ?result . },1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
487,5,train,"Give me the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Philip Brian Scott"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
994,6,train,"Give me the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . },"```sparql
SELECT ?member WHERE {
    <http://dbpedia.org/resource/Meshuggah> <http://dbpedia.org/ontology/member> ?member .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
    FILTER(?type1 IN (<http://dbpedia.org/class/yago/Band115930069>, <http://dbpedia.org/class/yago/MusicalGroup117557067>, <http://dbpedia.org/class/yago/Organisation118286008>))
}
```",1,4,2,1,1,3,3,71,0,0,6,0,0.0,0
427,8,train,"Who is the person born, that is an office holder and a politician, as Romano Antonio Prodi?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Romano Antonio Prodi"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,13,train,Give me the band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
    ?song <http://dbpedia.org/property/song> ""Apollo"" .
    ?song <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Hardwell> .
    ?song <http://dbpedia.org/ontology/writer> ?writer .
    ?writer <http://dbpedia.org/ontology/band> ?band .
}
```",2,2,3,2,1,3,3,71,0,0,13,0,0.0,0
626,9,train,"Give me the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?commander ?conflict WHERE {
    <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?conflict .
}
```",2,3,3,2,1,3,2,20,0,0,77,0,0.0,0
754,7,train,Give me the parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?grandparent WHERE {
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Htapi> .
    ?parent <http://dbpedia.org/ontology/child> ?grandparent .
}
```",2,2,3,2,1,3,2,20,0,2,1,0.0,0.0,0
92,8,train,Give me the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Joseph Michael Furney"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,5,train,"Give me the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/band> ?result .
}
```",1,2,2,1,1,3,2,20,0,0,8,0,0.0,0
659,11,train,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander WHERE {
    ?battle <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
}
```",2,2,3,2,1,3,3,71,0,0,175,0,0.0,0
963,8,train,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . },"```sparql
SELECT ?rulingParty ?administration WHERE {
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Sremski Karlovci""@en .
  ?location <http://dbpedia.org/ontology/rulingParty> ?rulingParty .
  ?rulingParty a <http://dbpedia.org/ontology/PoliticalParty> .
  OPTIONAL { ?rulingParty <http://dbpedia.org/property/administration> ?administration . }
}
```",2,3,3,2,1,3,2,20,0,0,86,0,0.0,0
77,5,train,Who is the mayor of Congress Poland?,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?mayor WHERE {
    <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/ontology/mayor> ?mayor .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
54,17,train,"Give me the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,4,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
345,8,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
SELECT ?person ?team WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Soccer_player> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Soccer_manager> .
  OPTIONAL { ?person <http://dbpedia.org/property/team> ?team . }
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
251,9,train,Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?administration .
}

UNION

SELECT ?deathPlace WHERE {
    <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/property/deathPlace> ?deathPlace .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
404,4,train,"Who is the person born, that is a royalty, as Princess Victoria Louise of Prussia?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,3,train,"Give me the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> <http://dbpedia.org/ontology/child> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Royalty108069124> .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
92,5,train,Give me the actor of Return to Nuke 'Em High Volume 1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/Return_to_Nuke_%27Em_High_Volume_1> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,19,0,0.0,0
345,7,train,Give me the figure known as the nickname of FC Vaduz.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v1 . },SELECT ?result WHERE { <http://dbpedia.org/resource/Football_Club_Vaduz> <http://dbpedia.org/property/nickname> ?result . },2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
959,7,train,"Who is the manager, that is a sports manager, of 1998 Kashima Antlers season?",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?manager WHERE {
    ?season <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Kashima_Antlers> .
    ?season <http://dbpedia.org/ontology/sportsManager> ?manager .
    ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
    FILTER(YEAR(?season) = 1998)
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
485,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_Kingdom> .
}
```",1,1,2,1,1,2,3,28,87,2691,42912,0.03131749460043196,0.0020233028675085466,0.003801035454485877
959,14,train,Give me the manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?team ?manager WHERE {
    <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team .
    ?team <http://dbpedia.org/property/manager> ?manager .
}
```",2,2,3,2,1,3,3,71,0,2,10,0.0,0.0,0
701,15,train,Give me the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,6,0,0,1.0,1.0,1.0
963,6,train,Give me the entity in Serbia and administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Serbian_Progressive_Party> <http://dbpedia.org/ontology/administrativeUnit> ?result .
    ?result <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""serbia""))
}
```",2,2,3,1,2,3,2,20,0,0,84,0,0.0,0
528,17,train,Give me the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?result . },2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
659,7,train,Give me the reference to Rutger Jan Schimmelpenninck.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }",SELECT ?result WHERE { <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/reference> ?result . },1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
421,0,train,Give me the band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Senidah> <http://dbpedia.org/ontology/memberOf> ?result . },1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
281,10,train,"Give me the war of New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war WHERE {
    { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?war . }
    UNION
    { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/property/wars> ?war . }
}
```",2,2,3,1,2,3,3,71,1,13,0,0.07142857142857142,1.0,0.13333333333333333
251,7,train,Give me the death place of Laura Mancinelli and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace ?battleLocation WHERE {
    OPTIONAL { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace . }
    OPTIONAL { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/property/location> ?battleLocation . }
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
498,4,train,Give me the band of Malevolent Creation and band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?malevolentCreationBand ?willRahmerBand WHERE {
    <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/band> ?malevolentCreationBand .
    OPTIONAL {
        ?willRahmerResource <http://dbpedia.org/ontology/band> ?willRahmerBand .
        FILTER(STRSTARTS(STR(?willRahmerResource), ""http://dbpedia.org/resource/Will_Rahmer""))
    }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
492,16,train,"Give me the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
    ?commander <http://dbpedia.org/property/commanded> <http://dbpedia.org/resource/Battle_of_Verdun> .
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
    ?commander <http://dbpedia.org/ontology/battle> ?war .
    FILTER(?war != <http://dbpedia.org/resource/Battle_of_Verdun>)
}
```",2,4,3,2,1,3,3,71,0,0,11,0,0.0,0
465,1,train,Give me the administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Czech_Pirate_Party> <http://dbpedia.org/ontology/administration> ?result . },1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
528,0,train,Give me the war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
487,7,train,Give me the country of the administration of Patricia McCoy.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v1 <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Patricia_McCoy> <http://dbpedia.org/ontology/administration> ?administration .
    ?administration <http://dbpedia.org/ontology/country> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
994,12,train,Give me the band member of Don Dokken and associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT ?bandMember WHERE {
  ?donDokken <http://dbpedia.org/ontology/member> ?band .
  ?band <http://dbpedia.org/ontology/member> ?bandMember .
  OPTIONAL { ?bandMember <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Red_Tide_(band)> . }
  FILTER(?donDokken = <http://dbpedia.org/resource/Don_Dokken>)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,3,train,"Give me the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?result WHERE {
  ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?v0 <http://dbpedia.org/property/politicalParty> ?politicalParty.
  ?v0 <http://dbpedia.org/property/leader> ?result.
  ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?v1 <http://dbpedia.org/property/leader> ?result.
  FILTER(?v0 = <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic>)
}
```",1,3,2,1,1,2,2,9,0,0,5,0,0.0,0
659,4,train,"Give me the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> 
        <http://dbpedia.org/ontology/militaryUnit> ?force .
}
UNION
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> 
        <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/property/memberOf> ?force .
}
```",1,1,2,1,1,3,3,71,0,0,52,0,0.0,0
827,1,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/father> ?result . }",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,4,train,Give me the death place of Jiřina Štěpničková and administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace ?administration WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Czech_Pirate_Party> ?adminProperty ?administration .
    FILTER(?adminProperty IN (<http://dbpedia.org/property/president>, <http://dbpedia.org/property/chairman>, <http://dbpedia.org/ontology/memberOf>))
  }
}
```",2,2,3,1,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
492,17,train,"Give me the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital WHERE {
    <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?country .
    ?country (<http://dbpedia.org/ontology/administrativeCapital>|<http://dbpedia.org/ontology/capital>) ?capital .
    FILTER(STRSTARTS(STR(?capital), ""http://dbpedia.org/resource/"") && STRLEN(STR(?capital)) > 30) # Ensures it's a settlement
}
```",2,3,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
427,1,train,Give me the party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?result . },1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
161,12,train,Give me the commander in Biscay Campaign and military force of Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?commander WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Biscay_Campaign>.
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War>.
    ?commander <http://dbpedia.org/ontology/member> ?militaryForce.
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
994,13,train,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?member ?associatedArtist WHERE {
    ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
    ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    FILTER(STR(?meshuggah) = ""http://dbpedia.org/resource/Meshuggah"")
    
    ?member <http://dbpedia.org/property/memberOfBand> ?meshuggah .
    ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",2,5,3,2,1,3,3,71,0,0,33,0,0.0,0
30,1,train,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Financier> .
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Businessman> .
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Vineyard_owner> .
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Art_collector> .
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Racehorse_owner/breeder> .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,0,train,Give me the reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }",SELECT ?result WHERE { <http://dbpedia.org/resource/Partito_Popolare_Italiano> <http://dbpedia.org/ontology/reference> ?result . },1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
404,1,train,Give me the parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
659,13,train,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?war ?commander WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://dbpedia.org/ontology/battleParticipant> <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)>.
    ?war <http://dbpedia.org/property/commander> ?commander.
}
```",2,4,3,2,1,3,3,71,0,0,130,0,0.0,0
498,0,train,Give me the band of Malevolent Creation.,SELECT ?result WHERE { <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?member WHERE {
    <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
996,10,train,Give me the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?person ?award WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    FILTER(CONTAINS(LCASE(?name), ""palestine"")).
    OPTIONAL { ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . }
    OPTIONAL { ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Palestinian_people> . }
    ?person <http://dbpedia.org/property/awards> ?award .
}
```",2,2,3,2,1,3,2,20,0,2,14,0.0,0.0,0
959,10,train,Give me the manager of 2013 Júbilo Iwata season and member of University of Tsukuba.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
SELECT ?person WHERE {
  ?season <http://dbpedia.org/ontology/teamManager> ?person .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  
  FILTER(STRSTARTS(STR(?season), ""http://dbpedia.org/resource/2013_Júbilo_Iwata_season""))

  ?person <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/University_of_Tsukuba> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
92,13,train,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?associatedArtist WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Jim Sheppard""@en .
    ?person a <http://dbpedia.org/ontology/Artist> .
    ?person <http://dbpedia.org/property/birthName> ""Jim Sheppard"" .
    OPTIONAL { ?person <http://dbpedia.org/ontology/associatedBand> ?associatedArtist . }
    OPTIONAL { ?person <http://dbpedia.org/ontology/musicalArtist> ?associatedArtist . }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
197,5,train,Give me the birthplace of the member of FC Politehnica Timișoara.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?member ?birthPlace WHERE {
    ?member <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> .
    ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,2,2,9,171,223,0,0.434010152284264,1.0,0.6053097345132743
981,1,train,Give me the birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
534,6,train,Give me the headquarter of Royal Dublin Society and birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
SELECT ?headquarter ?birthPlace WHERE {
    <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarters> ?headquarter .
    <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
783,0,train,Give me the associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedBand> ?associatedArtist .
}
```",1,1,2,1,1,3,2,20,15,0,0,1.0,1.0,1.0
963,10,train,"Give me the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
SELECT ?rulingParty WHERE {
    ?location <http://dbpedia.org/ontology/postalCode> ""21205"" .
    ?location <http://dbpedia.org/property/rulingParty> ?rulingParty .
    ?rulingParty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
427,15,train,Give me the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto_(politician)> <http://dbpedia.org/ontology/politicalParty> ?result . },2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
981,0,train,Give me the entity in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . },"```sparql
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Indonesia> .
}
```",1,1,2,1,1,3,2,20,71,787,2878,0.08275058275058275,0.024075957951848085,0.03729971105857631
360,6,train,Give me the writer of The Roaring Silence and native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
    ?album <http://dbpedia.org/ontology/author> ?writer .
    ?album <http://purl.org/dc/terms/title> ""The Roaring Silence"" .
    ?writer <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
492,6,train,"Give me the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/ontology/war> ?war .
    ?war a <http://dbpedia.org/class/yago/MilitaryConflict108069068> ;
         a <http://dbpedia.org/class/yago/Event108067968> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
712,0,train,Give me the capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital WHERE {
    <http://dbpedia.org/resource/South_Russia_(1919%E2%80%931920)> <http://dbpedia.org/ontology/capital> ?capital .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
392,4,train,"Give me the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
SELECT ?event ?timeZone WHERE {
    <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/event> ?event .
    ?event a <http://dbpedia.org/ontology/SportsEvent> .
    ?event <http://dbpedia.org/property/timeZone> ?timeZone
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
617,9,train,Give me the spouse of Laodice IV and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?spouse .
}
```",2,2,3,1,2,3,3,71,2,0,1,1.0,0.6666666666666666,0.8
378,6,train,Who is the commander in Peninsular War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,37,0,0,1.0,1.0,1.0
281,4,train,Who is the awardee of Knight Grand Cross of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
}
```",1,1,2,1,1,3,3,71,558,0,0,1.0,1.0,1.0
959,8,train,Give me the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?result .
}
```",1,1,2,1,1,3,3,71,0,3,10,0.0,0.0,0
547,7,train,Give me the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?result . },1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
838,2,train,"Give me the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?band WHERE {
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>.
    ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/%C5%BDika_Jeli%C4%87>.
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
378,0,train,Give me the war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },1,1,2,1,1,3,3,71,12,0,0,1.0,1.0,1.0
547,8,train,Give me the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
}
```",1,1,2,1,1,3,3,71,61,0,0,1.0,1.0,1.0
485,3,train,"Give me the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Western_European_Time> <http://dbpedia.org/ontology/country> ?country .
    FILTER(?country <http://www.w3.org/2002/07/owl#Thing>)
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
778,6,train,Give me the entity in United States and author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> .
    ?entity <http://dbpedia.org/property/authored> <http://dbpedia.org/resource/Chroot> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
617,5,train,"Give me the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
959,5,train,"Who is the leader, that is a politician, of 2010 Japanese House of Councillors election?",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?leader WHERE {
    <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/ontology/leader> ?leader .
    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,3,3,71,0,0,9,0,0.0,0
30,2,train,Give me the birthplace of Silvia Cohen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?result . },1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
77,3,train,Who is the awardee of Golden Weapon for Bravery?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> .
}
```",1,1,2,1,1,3,2,20,10,0,0,1.0,1.0,1.0
232,16,train,"Give me the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?individual ?filmMilitaryConflict WHERE {
    ?individual <http://dbpedia.org/ontology/profession> ?role .
    FILTER(?role IN (<http://dbpedia.org/resource/Actor>, <http://dbpedia.org/resource/Narrator>, <http://dbpedia.org/resource/Producer>)).
    ?individual <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    ?individual <http://dbpedia.org/ontology/notableworks> ?filmMilitaryConflict .
    ?filmMilitaryConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
    ?filmMilitaryConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type2 .
    FILTER(?type1 = <http://dbpedia.org/resource/Film> && ?type2 = <http://dbpedia.org/resource/Military_conflict>)
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
281,7,train,"Who is the professional, that is an office holder and a politician, in New Zealand Army?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/New_Zealand_Army>.
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,17,train,Who is the person born as the persona of Shèna?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
SELECT ?person WHERE {
    ?character <http://dbpedia.org/property/alterEgo> ""Shèna"" .
    ?character <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
    ?person <http://dbpedia.org/ontology/portrayedBy> ?character .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
783,8,train,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Priscilla_Opoku-Kwarteng> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
    <http://dbpedia.org/resource/Priscilla_Opoku-Kwarteng> <http://dbpedia.org/ontology/member> ?band.
}
```",2,4,3,2,1,3,2,20,0,0,7,0,0.0,0
378,9,train,Give me the war of Joaquín Blake and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?person ?battle WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Joaquín_Blake> 
    <http://dbpedia.org/resource/Carl_Pontus_Gahn>
  }
  ?person <http://dbpedia.org/ontology/battle> ?battle .
}
```",2,2,3,1,2,3,3,71,2,21,0,0.08695652173913043,1.0,0.16
391,13,train,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v1 . },"```sparql
SELECT ?work ?actor WHERE {
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?work .
    ?work <http://dbpedia.org/ontology/starring> ?actor .
}
```",2,3,3,2,1,3,3,71,20,4,0,0.8333333333333334,1.0,0.9090909090909091
534,9,train,"Who is the child, that is a politician and an office holder, of the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Essex>.
    ?person <http://dbpedia.org/ontology/politician> [].
    ?person <http://dbpedia.org/ontology/child> ?child.
    ?child <http://dbpedia.org/ontology/politician> [].
    ?child <http://dbpedia.org/ontology/officeHolder> [].
}
```",2,5,3,2,1,3,2,20,0,0,7,0,0.0,0
392,8,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?country WHERE {
    ?country <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?cetResource .
    ?cetResource <http://dbpedia.org/ontology/timeZone> ""Central European Time"" .
    ?country a <http://dbpedia.org/class/yago/Country108069068> .
}
```",2,3,3,2,1,2,3,28,0,0,173261,0,0.0,0
378,16,train,"Who is the commander in the reference, that is a military conflict, to Peninsular War?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
}
```",2,3,3,2,1,3,3,71,37,0,0,1.0,1.0,1.0
435,0,train,Give me the territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
SELECT ?territory WHERE {
    ?territory <http://dbpedia.org/ontology/administrativeCenter> <http://dbpedia.org/resource/Reykjavik> .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
251,10,train,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
SELECT ?party ?administration WHERE {
    ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>.
    ?party <http://dbpedia.org/property/location> ?location.
    ?location <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sicily>.
    OPTIONAL { ?party <http://dbpedia.org/ontology/administration> ?administration. }
}
```",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
294,1,train,Give me the resting place of Edwin A. Keeble.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/burialPlace> ?result . },1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
392,2,train,Give me the province of Schio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . },1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
994,10,train,Give me the band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT ?bandMember WHERE {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?bandMember .
}
UNION
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/musicalArtist> ?associatedArtist .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
528,9,train,Give me the war of Orozimbo Barbosa and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?person ?war WHERE {
  { 
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?war .
    BIND(<http://dbpedia.org/resource/Orozimbo_Barbosa> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
    BIND(<http://dbpedia.org/resource/Irene_Morales> AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,2,13,0,0.13333333333333333,1.0,0.23529411764705882
994,17,train,"Who is the person born, that is a musical artist, as the persona of Don Dokken?",SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?person WHERE {
    ?persona <http://dbpedia.org/ontology/allegedAlterEgo> ?person .
    ?persona rdfs:label ""Don Dokken""@en .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
488,0,train,Give me the birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
391,8,train,"Give me the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>.
    ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan>.
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
294,11,train,"Give me the entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?settlement WHERE {
    <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
    FILTER(STRSTARTS(STR(?settlement), ""http://dbpedia.org/resource/"") && 
           EXISTS { ?settlement a <http://dbpedia.org/class/yago/Settlement_100000000> })
}
```",2,3,3,2,1,2,3,28,0,0,340,0,0.0,0
92,1,train,Give me the associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/musicalArtist> ?associatedArtist .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
92,10,train,Give me the band of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Joseph_Michael_(musician)> <http://dbpedia.org/ontology/band> ?band .
    OPTIONAL { 
        ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Joseph_Michael_(musician)> .
    }
    FILTER(?band = <http://dbpedia.org/resource/Nevermore_(band)>)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
392,1,train,Give me the region of Central European Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/timeZoneRegion> ?result . },1,1,2,1,1,2,3,28,0,0,49990,0,0.0,0
281,11,train,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?awardee ?war WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/battle> ?war . }
}
```",2,2,3,2,1,3,3,71,450,558,0,0.44642857142857145,1.0,0.617283950617284
427,16,train,Who is the father of the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
SELECT ?alumnus ?father WHERE {
    ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?alumnus <http://dbpedia.org/ontology/father> ?father .
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
617,0,train,Give me the child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,3,71,4,2,1,0.6666666666666666,0.8,0.7272727272727272
161,8,train,"Give me the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
SELECT ?event ?force WHERE {
    <http://dbpedia.org/resource/Emilio_Mola> <http://dbpedia.org/property/events> ?event .
    ?event <http://dbpedia.org/ontology/associatedForce> ?force .
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
838,4,train,"Give me the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?result WHERE {
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?result <http://dbpedia.org/ontology/group> [].
    ?result <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/YU_Grupa>.
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
617,3,train,"Who is the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
    <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?successor .
    ?successor a <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
356,4,train,"Give me the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?result .
    ?result <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Category:Populated_places_in_England> .
    ?result <http://dbpedia.org/ontology/Settlement> ?settlement .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
55,5,train,"Give me the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/member> ?band .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
915,2,train,Give me the director of Pipe Dreams (1976 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?result . },"```sparql
SELECT ?director WHERE {
    <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?director .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
488,3,train,"Give me the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflicts1000Through3000Category> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvents1000Through3000Category> .
}
```",1,4,2,1,1,3,3,71,0,0,4,0,0.0,0
9,0,train,"Give me the alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
435,11,train,Give me the work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/ontology/author> ?author .
    ?work <http://purl.org/dc/terms/creator> ?author .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
294,8,train,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?awardee ?restingPlace WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> .
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",2,3,3,2,1,2,3,28,0,11,10,0.0,0.0,0
528,15,train,"Give me the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?event ?militaryForce WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?event <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Chile>.
  OPTIONAL { ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce. }
}
```",2,3,3,2,1,3,3,71,0,35,91,0.0,0.0,0
696,0,train,Give me the birth place of Tim Brennan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan_(footballer)> <http://dbpedia.org/ontology/birthPlace> ?result . },1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
996,1,train,Give me the entity in France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> .
}
```",1,1,2,1,1,3,2,20,0,44301,292,0.0,0.0,0
115,5,train,Give me the alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?alumnus ?almaMater WHERE {
    <http://dbpedia.org/resource/National_University_of_San_Marcos> <http://dbpedia.org/property/alumni> ?alumnus .
    ?alumnus <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",2,2,3,2,1,2,2,9,0,0,49,0,0.0,0
487,8,train,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . }","```sparql
SELECT ?team WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Philip Brian Scott""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""Philip Brian Scott"" .
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Category:English_footballers> .
    ?person <http://dbpedia.org/ontology/team> ?team .
}
```",2,3,3,2,1,3,2,20,0,0,14,0,0.0,0
179,9,train,"Give me the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?child ?birthName WHERE {
    <http://dbpedia.org/resource/Nakkhatra_Mangala> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?child <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
767,3,train,Give me the writer of Where It's At (Dustin Lynch album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
    <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_song)> <http://dbpedia.org/ontology/writer> ?writer .
}
```",1,1,2,1,1,3,3,71,0,0,35,0,0.0,0
427,12,train,Give me the party of Giulio Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?person ?party WHERE {
  { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?party . BIND(<http://dbpedia.org/resource/Giulio_Andreotti> AS ?person) }
  UNION
  { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?party . BIND(<http://dbpedia.org/resource/Romano_Prodi> AS ?person) }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
617,2,train,Give me the parent of Mlada (abbess).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . },"```sparql
SELECT ?parent WHERE {
    OPTIONAL { <http://dbpedia.org/resource/Mlada_(abbess)> <http://dbpedia.org/ontology/father> ?parent . }
    OPTIONAL { <http://dbpedia.org/resource/Mlada_(abbess)> <http://dbpedia.org/ontology/mother> ?parent . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
360,5,train,Give me the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
    <http://dbpedia.org/resource/Blinded_by_the_Light_(novel)> <http://dbpedia.org/ontology/author> ?author .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
161,9,train,Give me the military force of Rif War and military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?rifWarMilitary ?civilWarMilitary WHERE {
    <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?rifWarMilitary .
    <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/militaryForce> ?civilWarMilitary .
}
```",2,2,3,1,2,3,3,71,0,0,34,0,0.0,0
767,2,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }",# No SPARQL query can be constructed due to lack of specificity in the request.,1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
421,9,train,Give me the person born as Edin Dervišhalidović and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Edin Dervišhalidović"" .
  ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
142,4,train,Give me the birthplace of George Tokoro and entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    OPTIONAL { ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?japaneseEntity . }
    FILTER EXISTS {
        ?japaneseEntity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City> .
        ?japaneseEntity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
    }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
617,1,train,Give me the spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
281,8,train,"Give me the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT ?result WHERE {
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?v0 <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Heather_Roy>.
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,7,train,Give me the reference to Manfred Mann and writer of The Roaring Silence.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
SELECT ?writer WHERE {
    <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/ontology/writer> ?writer .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
487,1,train,Give me the administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . },"```sparql
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/ontology/government> ?administration .
}
```

This query assumes there is a direct link from Phil Scott's DBpedia resource to an administration entity through the `<http://dbpedia.org/ontology/government>` property. If this specific property does not exist or does not provide the desired information, alternative approaches might involve querying for his office and then finding related government terms or administrations.",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
184,10,train,Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
SELECT ?person ?parent WHERE {
  { 
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/father|mother> ?parent .
    BIND(<http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/father|mother> ?parent .
    BIND(<http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
294,0,train,"Give me the resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/burialPlace> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
994,11,train,Give me the associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?secondLevelAssociatedArtist WHERE {
    ?firstLevelAssociatedArtist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Watchtower_(band)> .
    ?firstLevelAssociatedArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?secondLevelAssociatedArtist .
}
```",2,2,3,2,1,3,3,71,15,7,1,0.6818181818181818,0.9375,0.7894736842105263
232,15,train,Give me the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . },SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?result . },2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
314,6,train,Give me the person deceased at Madrid and awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
    ?person <http://dbpedia.org/property/awards> ?award .
    FILTER(COUNT(?award) = 30)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
365,1,train,Give me the reference to The Blasters.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
SELECT ?reference WHERE {
    <http://dbpedia.org/resource/The_Blasters> <http://dbpedia.org/ontology/reference> ?reference .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
617,4,train,"Give me the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Richeza_of_Poland> ?property ?result .
    FILTER (
        ?property IN (<http://dbpedia.org/ontology/spouse>, 
                      <http://dbpedia.org/ontology/parent>, 
                      <http://dbpedia.org/ontology/child>)
    )
    ?result <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER (CONTAINS(LCASE(?label), ""royalty""))
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
10,4,train,"Give me the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Luke Francis Vibert"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
767,11,train,"Give me the entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
SELECT ?result WHERE {
    ?green <http://dbpedia.org/ontology/administrativeUnit> ?result .
    ?result a <http://dbpedia.org/ontology/Settlement> .
}
```

Note: Replace `?green` with the actual DBpedia resource identifier for ""Green"" if known.",2,3,3,2,1,3,3,71,0,0,60,0,0.0,0
378,4,train,Who is the person born as Carl Pontus Gahn?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
996,7,train,Give me the force of the awardee of 1778.0.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?awardee ?force WHERE {
    ?award <http://dbpedia.org/property/year> ""1778"" .
    ?award <http://dbpedia.org/property/awards> ?awardee .
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/militaryForce> ?force . }
}
```",2,2,3,2,1,3,2,20,0,0,11,0,0.0,0
360,1,train,Give me the native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Johannesburg> .
}
```",1,1,2,1,1,2,3,28,0,0,1000,0,0.0,0
617,9,train,"Give me the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?royalChild WHERE {
    ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mlada_(abbess)> .
    ?parent <http://dbpedia.org/ontology/child> ?royalChild .
    ?royalChild a <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
92,14,train,Give me the band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
SELECT ?band WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael Furney""@en .
    ?person <http://dbpedia.org/ontology/memberOf> ?band .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,17,train,"Give me the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?force WHERE {
    ?v0 <http://dbpedia.org/ontology/societalEvent> ?force .
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflicts100000000> .
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Events100000000> .
    ?v0 <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
184,6,train,Give me the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
345,0,train,Give me the figure known as Stolz von Liechtenstein.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
55,11,train,"Give me the band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
SELECT ?band WHERE {
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?band <http://dbpedia.org/property/reference> ?reference .
    FILTER(CONTAINS(LCASE(STR(?reference)), ""newsted""))
}
```",2,3,3,2,1,2,3,28,0,0,9,0,0.0,0
701,10,train,Give me the spouse of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Meritamen> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
767,10,train,Give me the entity in Baden-Württemberg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?entity WHERE {
    <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> <http://dbpedia.org/ontology/location> ?entity .
}
```",2,2,3,1,2,3,3,71,0,0,7,0,0.0,0
44,0,train,Give me the band member of Undertow (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . },"```sparql
SELECT ?member WHERE {
    <http://dbpedia.org/resource/Undertow_(band)> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
915,8,train,"Give me the father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . },"```sparql
SELECT ?father WHERE {
    ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Phillip_Spaulding> .
    ?child a <http://dbpedia.org/ontology/FictionalCharacter> .
    ?child <http://dbpedia.org/property/soapCharacter> ""true""^^<http://www.w3.org/2001/XMLSchema#boolean> .
    ?child <http://dbpedia.org/ontology/father> ?father .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
783,10,train,"Give me the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
SELECT ?person WHERE {
    ?ebony <http://dbpedia.org/ontology/person> ?person .
    ?ebony <http://www.w3.org/2000/01/rdf-schema#label> ""Ebony Reigns""@en .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
77,1,train,Give me the force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/militaryUnit> ?force .
} UNION {
    <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/Organisation> ?force .
}
```",1,1,2,1,1,3,2,20,0,0,25,0,0.0,0
115,1,train,Give me the alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . },1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
429,3,train,"Give me the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
SELECT ?militaryForce WHERE {
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?militaryForce <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition>.
}
```",1,2,2,1,1,2,2,9,22,0,0,1.0,1.0,1.0
285,6,train,Give me the parent of Alexander Onassis and spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/child> ?parent .
    OPTIONAL { ?parent <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . }
    FILTER(BOUND(?parent))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
645,8,train,Give me the alma mater of the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?child ?almaMater WHERE {
    <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/almaMater> ?almaMater .
}
```",2,2,3,2,1,3,2,20,1,2,1,0.3333333333333333,0.5,0.4
328,4,train,"Give me the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?result . }","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?result . }",1,1,2,1,1,3,3,71,9,0,0,1.0,1.0,1.0
617,15,train,"Who is the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?successorChild WHERE {
    <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?successor .
    ?successor <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/ontology/Royalty> .
    ?successor <http://dbpedia.org/ontology/child> ?successorChild .
    ?successorChild <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
754,10,train,Give me the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> <http://dbpedia.org/ontology/child> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
356,3,train,Give me the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
    <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?successor .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
996,8,train,Give me the entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?award ?entity WHERE {
    <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?award .
    OPTIONAL { ?award <http://www.w3.org/2000/01/rdf-schema#label> ?entity . }
}
```",2,2,3,2,1,3,2,20,0,10,292,0.0,0.0,0
778,2,train,"Give me the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine>.
    ?awardee <http://www.w3.org/2000/01/rdf-schema#label> ?label.
    FILTER(CONTAINS(LCASE(?label), ""american"")).
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
801,6,train,"Give me the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?work WHERE {
    <http://dbpedia.org/resource/50_Cent> <http://dbpedia.org/ontology/work> ?work .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
}
```",1,4,2,1,1,3,3,71,0,0,58,0,0.0,0
488,15,train,"Who is the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?war ?commander WHERE {
    ?war <http://dbpedia.org/ontology/type> ?type1 .
    ?war <http://dbpedia.org/ontology/type> ?type2 .
    ?war <http://dbpedia.org/ontology/type> ?type3 .
    FILTER(?type1 = dbpedia:MilitaryConflict && 
           ?type2 = dbpedia:Event &&
           ?type3 = dbpedia:SocietalEvent)
    
    ?saito <http://dbpedia.org/property/commander> ?war .
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(?saito = <http://dbpedia.org/resource/Saitō_Hajime>)
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
981,8,train,"Give me the birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> """"@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
SELECT ?birthPlace WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/BeautyQueen108930068>.
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace.
}
```",2,3,3,2,1,3,2,20,0,0,170,0,0.0,0
547,14,train,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?awardee ?burial WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    OPTIONAL { ?awardee <http://dbpedia.org/ontology/burial> ?burial . }
}
```",2,2,3,2,1,3,3,71,0,61,28,0.0,0.0,0
64,6,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?country WHERE {
    ?country <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?cetResource .
    ?cetResource <http://dbpedia.org/ontology/timeZone> ""Central European Time"" .
    ?country a <http://dbpedia.org/class/yago/Country108069068> .
}
```",2,3,3,2,1,2,2,9,0,0,173261,0,0.0,0
666,6,train,Give me the figure known as The Three Lions and player in Steve Bruce.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
SELECT ?figure WHERE {
    ?figure <http://dbpedia.org/property/nickname> ""The Three Lions"" .
    OPTIONAL { 
        ?association <http://dbpedia.org/ontology/player> ?figure .
        ?association <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Steve_Bruce> .
    }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,7,train,Give me the band member of Guns N' Roses and band of Newsted.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?member WHERE {
    ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Guns_N%27_Roses> .
    ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Newsted> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,4,train,Who is the commander in Boshin War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,26,0,0,1.0,1.0,1.0
142,1,train,Give me the birthplace of George Tokoro.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
339,10,train,Who is the child of the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Olga_of_Greece_and_Denmark> <http://dbpedia.org/ontology/parent> ?parent .
    ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
659,3,train,"Give me the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Kingdom_of_Ireland>.
  ?person <http://dbpedia.org/ontology/officeHolder> ?office.
}
```",1,2,2,1,1,3,3,71,0,0,23,0,0.0,0
161,2,train,Give me the commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
435,8,train,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
SELECT ?territory WHERE {
    ?place <http://www.w3.org/2000/01/rdf-schema#label> ""Land of fire and ice""@en .
    ?place <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland> .
    ?place <http://dbpedia.org/ontology/settlementType> ?type .
    FILTER(?type IN (<http://dbpedia.org/class/yago/Settlements1000000InIceland>, <http://dbpedia.org/class/yago/TownsAndVillagesInIceland>)).
    ?place <http://dbpedia.org/property/administrativeTerritory> ?territory .
}
```",2,5,3,2,1,2,3,28,0,0,2,0,0.0,0
54,6,train,Give me the child of Narapati I of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
345,2,train,"Give me the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
SELECT ?player WHERE {
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub> .
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .
    ?player <http://dbpedia.org/property/team> ?club .
    ?player <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Armando_Heeb> .
}
```",1,4,2,1,1,3,2,20,0,0,8,0,0.0,0
314,5,train,"Give me the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?profession WHERE {
    <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/ontology/profession> ?profession .
    ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
}
```",1,3,2,1,1,2,3,28,0,0,2,0,0.0,0
801,2,train,Give me the associated musical artist of Chris Taylor (music producer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },1,1,2,1,1,3,3,71,7,0,0,1.0,1.0,1.0
64,0,train,Give me the alma mater of Jovan Hristić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
339,0,train,Give me the child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,2,20,7,0,0,1.0,1.0,1.0
48,5,train,"Give me the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?person WHERE {
    ?work <http://purl.org/dc/terms/title> ""Honor Up"" .
    ?work <http://dbpedia.org/property/musicalArtist> ?person .
    ?work <http://dbpedia.org/ontology/actor> ?person .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
54,8,train,"Give me the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?result .
    ?result a <http://dbpedia.org/ontology/OfficeHolder> ;
            a <http://dbpedia.org/ontology/Royalty> .
}
```",1,3,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
184,8,train,Give me the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
294,4,train,Who is the architect of P. D. Houston Jr. House?,SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?result . },"```sparql
SELECT ?architect WHERE {
    <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?architect .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
161,15,train,"Give me the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?person ?event WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> .
    ?person <http://dbpedia.org/property/events> ?event .
    FILTER(
        (
            { ?event <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Societal_events> }
            UNION
            { ?event <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Events> }
            UNION
            { ?event <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Military_conflicts> }
        )
    )
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
356,1,train,Give me the team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . },"```sparql
SELECT ?team WHERE {
    <http://dbpedia.org/resource/Mark_Briggs> <http://dbpedia.org/ontology/team> ?team .
}
```",1,1,2,1,1,3,2,20,1,14,4,0.06666666666666667,0.2,0.1
378,15,train,Who is the person born as the birth name of Carl Pontus Gahn?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . },SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?result . },2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
963,4,train,Give me the location for 21205.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
SELECT ?location WHERE {
    ?entity <http://dbpedia.org/ontology/postalCode> ""21205"" .
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?location .
}
```",1,1,2,1,1,3,2,20,0,6,6,0.0,0.0,0
666,0,train,Give me the player in Steve Bruce.,SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
    ?team <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Steve_Bruce> .
    ?team <http://dbpedia.org/ontology/player> ?player .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
30,3,train,Give me the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/%C3%89douard_Alphonse_James_de_Rothschild> <http://dbpedia.org/ontology/profession> ?result . },1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
767,5,train,Give me the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/reference> ?result . },1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
232,3,train,Give me the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?result . },1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
55,10,train,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?bandMember WHERE {
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>.
    ?v0 <http://dbpedia.org/property/associatedWith> <http://dbpedia.org/resource/San_Francisco_Symphony>.
    ?v0 <http://dbpedia.org/ontology/member> ?bandMember.
}
```",2,4,3,2,1,2,3,28,0,0,15,0,0.0,0
696,5,train,Give me the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?result . },1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
701,7,train,"Give me the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://www.w3.org/2002/07/owl#sameAs> ?royaltyResource .
    FILTER EXISTS { ?royaltyResource a <http://dbpedia.org/class/yago/RoyalFamilyMember> }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
314,11,train,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/ontology/event> ?event .
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?event <http://dbpedia.org/property/commander> ?commander .
}
```",2,4,3,2,1,2,3,28,0,0,28,0,0.0,0
281,17,train,"Give me the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?professional ?profession WHERE {
    ?professional <http://dbpedia.org/ontology/officeHolder> [] .
    ?professional <http://dbpedia.org/property/politicalParty> [] .
    ?professional <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
    ?professional <http://dbpedia.org/ontology/profession> ?profession .
    ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
10,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This is a placeholder as the original query lacks sufficient detail.
SELECT ?professional WHERE {
    # Placeholder condition, replace with actual criteria once specified
}
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
645,7,train,"Give me the entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?residence WHERE {
    <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence a <http://dbpedia.org/class/yago/Country108069465> .
}
```",2,3,3,2,1,3,2,20,0,0,42999,0,0.0,0
421,4,train,Give me the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?result . },1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
421,8,train,Give me the band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
SELECT ?bandMember WHERE {
    ?awardee <http://dbpedia.org/property/awards> ?award .
    ?awardee <http://dbpedia.org/ontology/member> ?band .
    ?band <http://dbpedia.org/ontology/member> ?bandMember .
}
```",2,2,3,2,1,2,3,28,0,0,582,0,0.0,0
232,2,train,Give me the native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> .
}
```",1,1,2,1,1,3,3,71,8939,0,0,1.0,1.0,1.0
92,3,train,Give me the name of Nevermore (2006 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://dbpedia.org/ontology/title> ?result . },1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
528,5,train,Give me the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
# Unable to construct a valid SPARQL query due to lack of clarity on the resource identifier ""--01-09"".
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,16,train,"Give me the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?war WHERE {
    ?v0 <http://www.w3.org/2004/02/skos/core#altLabel> ""Polish Horse"" .
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?war <http://dbpedia.org/ontology/battle> ?v0 .
    ?war <http://www.w3.org/2002/07/owl#sameAs> ?v1 .
    ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}
```",2,6,3,2,1,3,3,71,0,0,19,0,0.0,0
328,8,train,"Give me the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/ontology/office> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
427,10,train,Give me the reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
SELECT ?party WHERE {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/member> ?party .
    FILTER(?party = <http://dbpedia.org/resource/Partito_Popolare_Italiano>)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
981,10,train,"Who is the person born, that is a beauty queen, as the author of Kamikaze Girls?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?authorResource .
  ?authorResource <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Kamikaze_Girls> .
}
```",2,3,3,2,1,3,2,20,0,0,120,0,0.0,0
328,1,train,Give me the commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,63,0,0,1.0,1.0,1.0
318,0,train,Give me the person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> .
}
```",1,1,2,1,1,2,2,9,2810,0,0,1.0,1.0,1.0
404,6,train,"Who is the child, that is a royalty, of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
339,7,train,Give me the child of the child of Christian IX of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
SELECT ?grandchild WHERE {
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
    <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,17,0,15,1.0,0.53125,0.6938775510204082
492,2,train,Give me the person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
}
```",1,1,2,1,1,3,3,71,122,0,0,1.0,1.0,1.0
959,9,train,Give me the native of Japan and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
    ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
}
```",2,2,3,1,2,3,3,71,0,0,84,0,0.0,0
48,1,train,Give me the band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/band> ?result . },1,1,2,1,1,3,2,20,0,0,10,0,0.0,0
392,6,train,Give me the region of Central European Time and entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?region WHERE {
    <http://dbpedia.org/resource/Central_European_Time> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region .
    ?region <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
}
```",2,2,3,1,2,2,3,28,0,0,513,0,0.0,0
427,6,train,Who is the father of Lamberto Andreotti?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?result . },1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,14,train,Give me the spouse of the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",2,2,3,2,1,3,3,71,0,1,5,0.0,0.0,0
404,2,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?result . }",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
48,8,train,"Give me the band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
SELECT ?actor ?band WHERE {
    ?movie <http://dbpedia.org/property/starring> ?actor .
    ?movie <http://www.w3.org/2000/01/rdf-schema#label> ""Honor Up""@en .
    ?actor <http://dbpedia.org/ontology/musicalArtist> true .
    OPTIONAL { ?actor <http://dbpedia.org/ontology/band> ?band . }
}
```",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
184,14,train,Give me the parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
SELECT ?child ?parent WHERE {
    <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?parent .
}
```",2,2,3,2,1,3,3,71,0,4,2,0.0,0.0,0
318,6,train,Give me the professional in the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?otherProfessional WHERE {
    <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://purl.org/dc/terms/subject> ?profession .
    ?otherProfessional <http://purl.org/dc/terms/subject> ?profession .
    FILTER(?otherProfessional != <http://dbpedia.org/resource/Robert_Xavier_Rodriguez>)
}
```",2,2,3,2,1,2,2,9,1248,1035822,694,0.00120339032080766,0.6426364572605562,0.002402282168059657
996,5,train,Give me the award of Ekrem Akurgal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?result . },1,1,2,1,1,3,2,20,5,0,0,1.0,1.0,1.0
617,10,train,"Give me the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Richeza_of_Poland> <http://dbpedia.org/property/father> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
281,9,train,"Give me the entity in Colony of New Zealand and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  ?entity <http://dbpedia.org/property/battle> ?battle .
  ?battle <http://dbpedia.org/property/foughtBy> <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
339,5,train,Who is the child of Grand Duchess Elena Vladimirovna of Russia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
801,3,train,Give me the true self of The Shadow.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?trueSelf WHERE {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alternateName> ?trueSelf .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
783,6,train,Give me the band member of Ebony Reigns and associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
SELECT ?bandMember WHERE {
    <http://dbpedia.org/resource/Ebony_Reigns> <http://dbpedia.org/ontology/member> ?bandMember .
}

UNION

SELECT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,1,train,Give me the landmark at elevation of 50.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?landmark WHERE {
    ?landmark <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/ontology/Landmark> .
    ?landmark <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> .
}
```",1,1,2,1,1,3,2,20,0,0,599,0,0.0,0
391,15,train,"Give me the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/property/nickname> ?result . }",2,2,3,2,1,3,3,71,0,1,4,0.0,0.0,0
184,9,train,Give me the child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
44,6,train,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?bandMember WHERE {
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?v0 <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Queensrÿche>.
    ?v0 <http://dbpedia.org/property/member> ?bandMember.
}
```",2,4,3,2,1,2,2,9,0,0,13,0,0.0,0
485,7,train,Give me the entity in United Kingdom and entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
  ?entity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Nottinghamshire> .
}
```",2,2,3,1,2,2,3,28,0,1,357,0.0,0.0,0
747,14,train,Give me the band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
SELECT ?band WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Tracey Elizabeth McSween""@en .
    ?person <http://dbpedia.org/ontology/band> ?band .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
314,8,train,Give me the person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
SELECT ?person WHERE {
    ?headquarters <http://www.w3.org/2000/01/rdf-schema#label> ""House of Sombrerete"" .
    ?headquarters <http://dbpedia.org/ontology/location> ?location .
    ?person <http://dbpedia.org/ontology/deathPlace> ?location .
}
```",2,2,3,2,1,2,3,28,0,0,34,0,0.0,0
328,15,train,Give me the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?commander ?award WHERE {
    <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/awards> ?award .
}
```",2,2,3,2,1,3,3,71,30,6,0,0.8333333333333334,1.0,0.9090909090909091
314,9,train,Give me the commander in Spanish Civil War and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?commander WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>.
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War>.
    { SELECT ?person (COUNT(?award) AS ?awardCount) WHERE {
        ?person <http://dbpedia.org/property/awards> ?award.
      } GROUP BY ?person HAVING (?awardCount = 30)
    }
    FILTER(?commander = ?person)
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
328,6,train,Give me the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Ferenc_Szálasi> <http://dbpedia.org/ontology/militaryForce> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
827,6,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
    <http://dbpedia.org/resource/William_Ernst,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,0,train,Give me the entity in Baden-Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
}
```",1,1,2,1,1,3,3,71,0,0,60,0,0.0,0
161,7,train,Who is the figure known as El Director?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nickName> ""El Director"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
10,3,train,"Give me the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Matt Colton"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
345,10,train,"Who is the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
SELECT ?person WHERE {
    <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://www.w3.org/2000/01/rdf-schema#label> ""Eiður Guðjohnsen""@en .
    <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?birthDate .

    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?person <http://dbpedia.org/ontology/profession> ?profession1 .
    ?person <http://dbpedia.org/ontology/profession> ?profession2 .

    FILTER(?profession1 = <http://dbpedia.org/resource/Soccer_player>)
    FILTER(?profession2 = <http://dbpedia.org/resource/Soccer_manager>)
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
184,1,train,Give me the child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
666,4,train,"Give me the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://xmlns.com/foaf/0.1/name> ""England""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?result WHERE {
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?result <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer>.
    ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/England>.
}
```",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
712,6,train,Give me the resting place of Nina Onilova and capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace ?capital WHERE {
  # Query for Nina Onilova's resting place
  <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
  
  # Query for the capital of South Russia (1919–1920)
  ?southRussia <http://dbpedia.org/property/capital> ?capital .
  FILTER(CONTAINS(LCASE(?southRussia), ""south russia"") && 
         EXISTS { ?southRussia <http://www.w3.org/2002/07/owl#sameAs> ?historicalEntity . 
                  ?historicalEntity <http://dbpedia.org/ontology/timePeriod> ?timePeriod .
                  FILTER(CONTAINS(LCASE(?timePeriod), ""1919-1920"")) } )
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
16,3,train,Give me the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?result . },1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
528,4,train,Give me the military force of Battle of Pisagua.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . },"```sparql
SELECT ?militaryForce WHERE {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/battle> ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
838,9,train,"Give me the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . },"```sparql
SELECT ?bandMember WHERE {
    <http://dbpedia.org/resource/Žika_Jelić> <http://dbpedia.org/ontology/member> ?band .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
    ?bandMember <http://dbpedia.org/ontology/member> ?band .
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> ;
                <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",2,6,3,2,1,3,2,20,0,0,4,0,0.0,0
801,14,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?associatedArtist WHERE {
    ?work <http://dbpedia.org/ontology/writer> ?writer .
    ?work rdfs:label ""40 Dayz & 40 Nightz""@en .
    
    ?writer a <http://dbpedia.org/ontology/MusicalArtist> ;
            a <http://dbpedia.org/ontology/Artist> .

    ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",2,4,3,2,1,3,3,71,0,0,50,0,0.0,0
232,1,train,Give me the actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },SELECT ?actor WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?actor . },1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
92,15,train,"Give me the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://dbpedia.org/ontology/reference> ?artist .
    ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
312,5,train,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v1 . },"```sparql
SELECT ?entity WHERE {
    <http://dbpedia.org/resource/Democratic_Party_(Italy)> <http://dbpedia.org/ontology/administrativeUnit> ?entity .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
    ?entity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Italy> .
    FILTER(?type1 = <http://dbpedia.org/class/yago/Settlement108069068> || 
           ?type1 = <http://dbpedia.org/class/yago/Region108069070> ||
           ?type1 = <http://dbpedia.org/class/yago/State108069071>)
}
```",2,6,3,2,1,2,2,9,0,0,587,0,0.0,0
177,2,train,Give me the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/ontology/residence> ?result . },1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
959,16,train,"Give me the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?leader ?residence WHERE {
    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?leader <http://dbpedia.org/property/battle> <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> .
    ?leader <http://dbpedia.org/ontology/residenceCountry> ?residence .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
182,3,train,Give me the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/perpetrator> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
10,7,train,Give me the professional in  and associated musical artist of Matt Colton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?profession ?artist WHERE {
    <http://dbpedia.org/resource/Matt_Colton> <http://purl.org/dc/terms/occupation> ?profession .
    OPTIONAL { 
        <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
    }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
696,3,train,Who is the member of Dropkick Murphys?,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
SELECT ?member WHERE {
    <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
285,3,train,Who is the child of Tina Onassis Niarchos?,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
617,13,train,Give me the spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?child ?spouse WHERE {
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/spouse> ?spouse .
}
```",2,2,3,2,1,3,3,71,5,2,0,0.7142857142857143,1.0,0.8333333333333333
994,7,train,Give me the persona of Don Dokken.,SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
SELECT ?alias WHERE {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/alsoKnownAs> ?alias .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
754,0,train,Give me the parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
77,2,train,Give me the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?result . },1,1,2,1,1,3,2,20,8,0,0,1.0,1.0,1.0
314,2,train,Give me the commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War>.
}
```",1,1,2,1,1,2,3,28,0,161,28,0.0,0.0,0
959,1,train,Give me the native of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?person WHERE {
  {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>.
  }
  UNION
  {
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan>.
  }
}
```",1,1,2,1,1,3,3,71,8419,841,0,0.9091792656587473,1.0,0.9524294360540754
534,3,train,"Who is the child, that is a politician and an office holder, of Desmond FitzGerald (politician)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/politician> [] .
    ?child <http://dbpedia.org/ontology/officeHolder> [] .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
365,6,train,Give me the reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?realName WHERE {
    <http://dbpedia.org/resource/The_Blasters> <http://dbpedia.org/ontology/realName> ?realName .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
360,3,train,"Give me the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/property/author> ""Dave Flett""@en . }","```sparql
SELECT ?album WHERE {
    <http://dbpedia.org/resource/Dave_Flett> <http://dbpedia.org/property/work> ?album .
    ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalAlbum108930069>.
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
54,7,train,Give me the reference to Thihapate of Mohnyin.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . }","```sparql
SELECT ?reference WHERE {
    <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/reference> ?reference .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
356,10,train,"Give me the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
SELECT ?native WHERE {
    <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2006/vcard/ns#country-name> ""England"" .
    ?birthPlace a <http://dbpedia.org/class/yago/SettlementsInEngland108610> .

    ?native <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/England> ;
            <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?native a <http://dbpedia.org/class/yago/SoccerPlayers> , <http://dbpedia.org/class/yago/SoccerManagers> .
}
```",2,6,3,2,1,3,2,20,0,0,17,0,0.0,0
429,1,train,Give me the country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
48,2,train,"Give me the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Shellback_(record_producer)> <http://dbpedia.org/ontology/work> ?result .
}
```",1,2,2,1,1,3,2,20,0,0,57,0,0.0,0
281,5,train,"Who is the leader, that is a politician, of 1962 New South Wales state election?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?leader WHERE {
    <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/ontology/leader> ?leader .
    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
281,2,train,Give me the war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },1,1,2,1,1,3,3,71,14,0,0,1.0,1.0,1.0
179,4,train,Who is the parent of Vajiralongkorn?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Vajiralongkorn> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
328,16,train,Give me the force of the person decedent at Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?person ?force WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
    OPTIONAL { ?person <http://dbpedia.org/ontology/militaryForce> ?force . }
}
```",2,2,3,2,1,3,3,71,0,1147,23,0.0,0.0,0
64,5,train,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
    ?person <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Sremska_Kamenica> .
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMeter .
}
```",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
767,15,train,"Give me the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?administration WHERE {
    ?album <http://purl.org/dc/terms/title> ""Where It's At""@en .
    ?album <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Dustin_Lynch> .
    ?song <http://dbpedia.org/ontology/lyricsBy> ?writer .
    ?song <http://purl.org/dc/terms/isPartOf> ?album .
    ?settlement <http://dbpedia.org/property/placeOfBirth> ?writer .
    ?settlement <http://dbpedia.org/ontology/administrativeUnit> ?administration .
}
```",2,3,3,2,1,3,3,71,0,0,31,0,0.0,0
251,5,train,Give me the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
    <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/ontology/author> ?author .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
314,1,train,Give me the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?awardee WHERE {
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""30""@en .
    ?awardee <http://dbpedia.org/property/awards> ?award .
}
```",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
184,12,train,Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
SELECT ?person WHERE {
    # Find parent of Archduchess Ilona of Austria
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/parent> ?person .
    
    # Find child of Archduke Joseph August of Austria
    ?person <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
328,5,train,Who is the person decedent at Budapest?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest>.
}
```",1,1,2,1,1,3,3,71,1147,0,0,1.0,1.0,1.0
184,11,train,Give me the parent of the native of Budapest.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?parent WHERE {
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
    ?child <http://dbpedia.org/ontology/child> ?person .
    ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",2,2,3,2,1,3,3,71,0,7,19,0.0,0.0,0
617,8,train,Who is the child of Antiochus (son of Antiochus III the Great)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
492,11,train,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . }","```sparql
SELECT ?decedent WHERE {
    ?satterthwaite <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?satterthwaite <http://dbpedia.org/ontology/title> ""US Assistant Secretary of State for African Affairs""@en .
    ?satterthwaite <http://dbpedia.org/ontology/succeededBy> ?decedent .
    FILTER(STRSTARTS(STR(?satterthwaite), STR(<http://dbpedia.org/resource/Joseph_C._Satterthwaite>)))
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
645,2,train,Give me the commander in Battle of Diamond Rock.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?result . },1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
16,1,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(CONTAINS(LCASE(STR(?profession)), ""actress""))
}
```",1,1,2,1,1,3,3,71,0,8,19241,0.0,0.0,0
498,1,train,Give me the band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/band> ?result . },1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
747,7,train,Give me the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
SELECT ?result WHERE {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ""Shèna""@en .
    ?entity <http://dbpedia.org/ontology/alterEgo> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
915,6,train,"Give me the father of Lizzie Spaulding and resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/residence> ?residence .
    FILTER(CONTAINS(LCASE(STR(?residence)), ""springfield, illinois""))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
161,0,train,Give me the military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?result . },1,1,2,1,1,3,3,71,0,0,56,0,0.0,0
179,2,train,"Who is the child, that is a royalty, of Nakkhatra Mangala?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Nakkhatra_Mangala> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
356,0,train,Give me the player in 2015 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
    <http://dbpedia.org/resource/Sacramento_Republic_FC_season,_2015> <http://dbpedia.org/ontology/team> ?team .
    ?team <http://dbpedia.org/property/player> ?player .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
54,3,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
9,4,train,"Who is the mayor, that is a politician, of Northern Ireland Forum?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?mayor WHERE {
    ?forum <http://www.w3.org/2000/01/rdf-schema#label> ""Northern Ireland Forum""@en .
    ?mayor <http://dbpedia.org/ontology/politician> ?forum .
    OPTIONAL { ?mayor <http://dbpedia.org/ontology/mayorFor> ?forum . }
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
626,4,train,Who is the military force of Battle of Borodino?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
SELECT ?militaryForce WHERE {
    <http://dbpedia.org/resource/Battle_of_Borodino> <http://dbpedia.org/ontology/battle> ?militaryForce .
}
```",1,1,2,1,1,3,2,20,0,0,52,0,0.0,0
10,9,train,Give me the professional in  and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . }","```sparql
SELECT ?profession ?band WHERE {
    <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/profession> ?profession .
    OPTIONAL { 
        <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/memberOfBand> ?band .
    }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
485,4,train,"Who is the awardee, that is a writer and a poet, of Eric Gregory Award?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Eric_Gregory_Award>.
    ?awardee a <http://dbpedia.org/class/yago/YagoWriter108930848> .
    ?awardee a <http://dbpedia.org/class/yago/YagoPoet108931000> .
}
```",1,3,2,1,1,2,3,28,0,0,7,0,0.0,0
783,2,train,Give me the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
182,11,train,Give me the entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?result . },2,2,3,2,1,2,3,28,0,1,62,0.0,0.0,0
488,17,train,"Who is the father of the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/property/spouse> ?spouse .
    ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""royalty"") || CONTAINS(LCASE(?label), ""prince"") || CONTAINS(LCASE(?label), ""king"") || CONTAINS(LCASE(?label), ""queen""))
    ?spouse <http://dbpedia.org/ontology/father> ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
827,0,train,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . }","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . }",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
92,0,train,Give me the band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/member> ?result . },1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
115,6,train,Give me the alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
SELECT ?almaMater WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",2,2,3,2,1,2,2,9,5,0,0,1.0,1.0,1.0
701,2,train,Give me the spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?result . },1,1,2,1,1,3,3,71,0,1,5,0.0,0.0,0
465,6,train,"Give me the administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?administration WHERE {
    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>.
    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?leader <http://dbpedia.org/property/leaderOf> <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic>.
    ?leader <http://dbpedia.org/ontology/administration> ?administration.
}
```",2,4,3,2,1,2,2,9,0,0,50,0,0.0,0
285,8,train,Give me the spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?spouse WHERE {
    <RESOURCE_IDENTIFIER> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```
(Note: Replace `RESOURCE_IDENTIFIER` with the actual DBpedia resource URI of the professional.)",2,2,3,2,1,3,2,20,0,0,4149,0,0.0,0
820,8,train,Give me the child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?grandchild WHERE {
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> .
    ?parent <http://dbpedia.org/ontology/child> ?grandchild .
}
```",2,2,3,2,1,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
778,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> .
}
```",1,1,2,1,1,3,2,20,13008,0,0,1.0,1.0,1.0
161,3,train,Who is the person decedent at Francoist Spain?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> .
}
```",1,1,2,1,1,3,3,71,125,0,0,1.0,1.0,1.0
303,6,train,Give me the entity in Panama and party of Guillermo Endara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
    <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama>.
    <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/property/politicalParty> ?party.
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
547,17,train,Give me the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?award ?otherAwardee WHERE {
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Gerald_Graham>)
}
```",2,2,3,2,1,3,3,71,2074,5,1,0.9975949975949976,0.9995180722891567,0.9985556090515166
959,13,train,"Give me the native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?nativeCountry WHERE {
    <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence a <http://dbpedia.org/ontology/Country> .
    ?residence <http://dbpedia.org/property/nativeCountry> ?nativeCountry .
}
```",2,3,3,2,1,3,3,71,0,0,8419,0,0.0,0
251,3,train,"Give me the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""war"") || CONTAINS(LCASE(?label), ""conflict""))
}
```",1,2,2,1,1,2,3,28,4,0,12,1.0,0.25,0.4
182,10,train,Give me the war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
SELECT ?work ?war WHERE {
    <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/ontology/occupation> ?work .
    OPTIONAL { ?work <http://dbpedia.org/property/battle> ?war . }
}
```",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
55,3,train,"Give me the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer WHERE {
    <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?producer .
    ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
981,5,train,"Who is the person born, that is a beauty queen, as ?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/property/birthName> """"@en . }","```sparql
SELECT ?person ?birthPlace WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>.
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace.
}
```",1,2,2,1,1,3,2,20,116,4401,4,0.025680761567412,0.9666666666666667,0.05003234850118611
485,9,train,Give me the entity in Nottinghamshire and birth place of Thomas Warner (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for the entity in Nottinghamshire associated with Thomas Warner (poet)
SELECT ?entity WHERE {
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> ?p ?o .
    ?o <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?location .
    ?location <http://dbpedia.org/ontology/location> ?place .
    FILTER(CONTAINS(LCASE(STR(?place)), ""nottinghamshire""))
}

# Query for the birth place of Thomas Warner (poet)
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
783,7,train,Give me the associated musical artist of the band member of Ofori Amponsah.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
SELECT ?bandMember ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Ofori_Amponsah> <http://dbpedia.org/ontology/member> ?bandMember .
    ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
251,8,train,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?location WHERE {
    <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?war .
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://dbpedia.org/ontology/location> ?location .
}
```",2,3,3,2,1,2,3,28,0,0,25,0,0.0,0
345,3,train,Give me the nickname of FC Vaduz.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Football_Club_Vaduz> <http://dbpedia.org/property/nickname> ?result . },1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
92,9,train,Give me the band member of Nevermore and associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?bandMember ?associatedArtist WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Jim Sheppard""@en .
    ?person <http://dbpedia.org/ontology/member> ?bandMember .
    FILTER(CONTAINS(LCASE(STR(?bandMember)), ""nevermore""))
    
    OPTIONAL {
        ?person <http://dbpedia.org/ontology/musicalArtist> ?associatedArtist .
    }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
820,10,train,Who is the parent of the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?actor ?parent WHERE {
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Actor108930069>.
    OPTIONAL { ?actor <http://dbpedia.org/ontology/parent> ?parent. }
}
```",2,2,3,2,1,3,2,20,0,0,921,0,0.0,0
626,1,train,Give me the awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew>.
}
```",1,1,2,1,1,3,2,20,33,0,0,1.0,1.0,1.0
161,11,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . },"```sparql
SELECT ?militaryForce WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?event <http://www.w3.org/2002/07/owl#Thing>.
    ?event <http://dbpedia.org/ontology/MilitaryConflict>.
    ?event <http://dbpedia.org/property/personsInvolved> <http://dbpedia.org/resource/Francisco_Franco>.
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce.
}
```",2,5,3,2,1,3,3,71,0,0,545,0,0.0,0
666,3,train,"Give me the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
    <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/sportsManager> ?manager .
    ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
232,5,train,"Give me the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Narrator> .
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Producer> .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
179,0,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
SELECT ?person WHERE {
    <http://dbpedia.org/resource/Mom_Rajawongse_Sirikit_Kitiyakara> <http://dbpedia.org/ontology/birthName> ""Mom Rajawongse Sirikit Kitiyakara"" .
    ?person <http://dbpedia.org/ontology/birthName> ""Mom Rajawongse Sirikit Kitiyakara"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
318,1,train,Give me the professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . },"```sparql
SELECT ?composer WHERE {
    ?composer <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Composers> .
}
```",1,1,2,1,1,2,2,9,0,0,1916,0,0.0,0
838,10,train,"Give me the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?band WHERE {
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/group>.
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/YU_Grupa>.
    ?reference <http://dbpedia.org/ontology/band> ?band.
}
```",2,5,3,2,1,3,2,20,0,0,8,0,0.0,0
9,12,train,Give me the figure known as QUB and alma mater of Allen Hill (scientist).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?figure ?almaMater WHERE {
  # Find the figure known as QUB
  ?figure <http://dbpedia.org/property/nickname> ""QUB"" .
  
  # Find the alma mater of Allen Hill (scientist)
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
9,16,train,"Who is the awardee of the reference, that is an award, to Royal Medals?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . }","```sparql
SELECT ?awardee WHERE {
    <http://dbpedia.org/resource/Royal_Medal> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>.
    ?awardee <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal>.
}
```",2,3,3,2,1,3,3,71,45,0,0,1.0,1.0,1.0
328,11,train,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?award ?otherAwardee WHERE {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>)
}
```",2,2,3,2,1,3,3,71,1483,9,1,0.9939678284182306,0.9993261455525606,0.9966397849462366
915,3,train,"Give me the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?birthplace WHERE {
    <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?birthplace .
    ?birthplace a <http://dbpedia.org/ontology/Settlement> .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
55,4,train,"Give me the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?member WHERE {
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>.
    ?band <http://dbpedia.org/ontology/member> ?member.
    ?member <http://dbpedia.org/property/associatedBand> <http://dbpedia.org/resource/San_Francisco_Symphony>.
}
```",1,3,2,1,1,2,3,28,0,0,3,0,0.0,0
345,1,train,Give me the team of Alessandro Mangiarratti.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Alessandro_Mangiarratti> <http://dbpedia.org/ontology/team> ?result . },1,1,2,1,1,3,2,20,1,7,1,0.125,0.5,0.2
55,6,train,Give me the band member of Metallica and band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Metallica> .
    ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Guns_N%27_Roses> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
827,2,train,"Who is the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/parent> ?result . }",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
547,12,train,Give me the resting place of Simon Cadell and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Simon_Cadell> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Alan_Cunningham_(actor)> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Alan_Cunningham_(actor)> AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
92,4,train,"Give me the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/member> ?member .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    BIND(?member AS ?artist)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
378,12,train,"Give me the war of Joaquín Blake and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?person ?war ?fame WHERE {
  { 
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?war .
    BIND(<http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/property/claimToFame> ?fame .
    BIND(<http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
645,1,train,Give me the alma mater of Sylvia Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
427,3,train,Give me the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalParty> ?result . },1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
498,6,train,"Give me the band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
SELECT ?member ?otherBand WHERE {
    ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Mortician_(band)> .
    ?member a <http://dbpedia.org/ontology/Artist> .
    ?member <http://dbpedia.org/property/band> ?otherBand .
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
44,1,train,Give me the band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Sledgeback> <http://dbpedia.org/ontology/member> ?result . },1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
281,15,train,Who is the awardee of the award of Jonathon Band?,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?award ?otherAwardee WHERE {
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Jonathon_Band>)
}
```",2,2,3,2,1,3,3,71,557,1,1,0.9982078853046595,0.9982078853046595,0.9982078853046595
435,3,train,"Give me the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?settlement WHERE {
  ?settlement <http://www.w3.org/2000/01/rdf-schema#label> ""Land of fire and ice""@en .
  ?settlement <http://dbpedia.org/ontology/settlement> [] .
  ?settlement <http://dbpedia.org/ontology/town> [] .
  ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland> .
}
```",1,4,2,1,1,2,3,28,0,0,1,0,0.0,0
421,10,train,Give me the native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?native WHERE {
    <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/property/birthPlace> ?birthPlace .
    ?native <http://dbpedia.org/ontology/nativeOf> ?birthPlace .
    FILTER(?native != <http://dbpedia.org/resource/Samir_Bekrić>)
}
```",2,2,3,2,1,2,3,28,0,0,5492,0,0.0,0
659,12,train,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Query for military forces involved in the Napoleonic Wars
SELECT ?militaryForce WHERE {
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
  ?militaryForce <http://dbpedia.org/property/battle> ?battle.
  ?battle <http://dbpedia.org/ontology/conflict> <http://dbpedia.org/resource/Napoleonic_Wars>.
}

# Query for commanders in the Battle of Leipzig
SELECT ?commander WHERE {
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
  ?commander <http://dbpedia.org/property/commanded> ?battle.
  ?battle <http://dbpedia.org/ontology/name> ""Battle of Leipzig""@en.
}
```",2,2,3,1,2,3,3,71,0,0,5,0,0.0,0
712,1,train,Give me the resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/burialPlace> ?result . },1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
959,6,train,"Give me the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
    ?country a <http://dbpedia.org/class/yago/Country108067>.
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
712,2,train,"Give me the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
SELECT ?v0 WHERE {
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising>.
}
```",1,3,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
783,3,train,Give me the band member of Ofori Amponsah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
SELECT ?band ?member WHERE {
    <http://dbpedia.org/resource/Ofori_Amponsah> <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
232,17,train,"Give me the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
SELECT ?residence WHERE {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?politicianRole .
    FILTER(CONTAINS(LCASE(STR(?politicianRole)), ""politician"") || CONTAINS(LCASE(STR(?politicianRole)), ""office holder""))
    ?person <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
    FILTER(CONTAINS(LCASE(STR(?settlement)), ""settlement""))
    ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
179,10,train,Who is the child of the parent of Vajiralongkorn?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?parent ?grandChild WHERE {
    <http://dbpedia.org/resource/Vajiralongkorn> <http://dbpedia.org/ontology/father|http://dbpedia.org/ontology/mother> ?parent .
    ?parent <http://dbpedia.org/ontology/child> ?grandChild .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
10,10,train,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://dbpedia.org/ontology/bandMember> ?band .
}
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
783,1,train,Give me the band member of Ebony Reigns.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://dbpedia.org/ontology/memberOf> ?result . },1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
232,0,train,Give me the child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
182,4,train,Give me the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/ontology/work> ?work .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
391,1,train,Give me the actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,3,71,9,0,0,1.0,1.0,1.0
547,2,train,Give me the resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> <http://dbpedia.org/ontology/burialPlace> ?result . },1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
142,5,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
SELECT ?entity WHERE {
    ?entity <http://www.w3.org/2006/time#hasTimezone> <http://dbpedia.org/resource/Japan_Standard_Time>.
}
```",2,2,3,2,1,2,2,9,0,0,8922,0,0.0,0
981,7,train,Give me the entity in the region of Time in Indonesia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?entity WHERE {
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Time in Indonesia""@en .
    ?entity <http://dbpedia.org/ontology/location> ?location .
}
```",2,2,3,2,1,3,2,20,0,0,2949,0,0.0,0
659,9,train,Give me the commander in German campaign of 1813 and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/German_campaign_of_1813> .
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Leipzig> .
}
```",2,2,3,1,2,3,3,71,0,1,16,0.0,0.0,0
465,5,train,Give me the death place of the native of Prague.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
SELECT ?person ?deathPlace WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> .
  OPTIONAL { ?person <http://dbpedia.org/property/deathPlace> ?deathPlace . }
}
```",2,2,3,2,1,2,2,9,162,1786,92,0.08316221765913757,0.6377952755905512,0.14713896457765668
963,9,train,"Give me the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://dbpedia.org/ontology/country> ?country .
    FILTER(?country <http://www.w3.org/2002/07/owl#Thing) # Ensures the result is a country
}
```",2,3,3,2,1,3,2,20,0,0,56,0,0.0,0
801,1,train,Give me the producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
617,16,train,"Who is the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
    ?antiochus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?antiochus <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
    ?antiochus <http://dbpedia.org/ontology/successor> ?successor .
    ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?successor <http://dbpedia.org/ontology/child> ?child .
}
```",2,3,3,2,1,3,3,71,6,2,0,0.75,1.0,0.8571428571428571
820,7,train,Give me the professional in the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?award ?otherProfessional WHERE {
    <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?award .
    ?otherProfessional <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherProfessional != <http://dbpedia.org/resource/Scott_McCloud>)
}
```",2,2,3,2,1,3,2,20,540,6112,39110,0.08117859290438965,0.013619167717528373,0.023325126344434365
617,6,train,Give me the parent of Mieszko II Lambert and child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
SELECT ?person WHERE {
  # Find the parent of Mieszko II Lambert
  <http://dbpedia.org/resource/Mieszko_II_Lambert> <http://dbpedia.org/ontology/parent> ?person .
  
  # Ensure this person is also a child of Doubravka of Bohemia
  ?person <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Doubravka_of_Bohemia> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This query cannot be completed as the question lacks specific information about a domain or field.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
328,13,train,Give me the commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> <http://dbpedia.org/ontology/commander> ?command .
    ?command <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?command <http://dbpedia.org/ontology/member> ?force.
}
```",2,2,3,2,1,3,3,71,0,0,73,0,0.0,0
391,4,train,Give me the figure known as Hub City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
SELECT ?resource WHERE {
    ?resource <http://dbpedia.org/ontology/nickName> ""Hub City"" .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
659,14,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?event ?militaryForce WHERE {
    <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/event> ?event .
    ?event a <http://dbpedia.org/class/yago/SocietalEvent108069068> ;
           a <http://dbpedia.org/class/yago/Events108069068> ;
           a <http://dbpedia.org/class/yago/MilitaryConflicts108069068> .
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",2,5,3,2,1,3,3,71,0,0,1127,0,0.0,0
617,17,train,Who is the child of the commander in Battle of Panium?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,7,0,0,1.0,1.0,1.0
360,8,train,"Give me the writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?album ?writer WHERE {
    <http://dbpedia.org/resource/Dave_Flett> <http://dbpedia.org/ontology/work> ?album .
    ?album <http://dbpedia.org/property/writer> ?writer .
}
```",2,3,3,2,1,2,3,28,0,0,8,0,0.0,0
294,6,train,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?person ?burialPlace WHERE {
    { 
        <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/burialPlace> ?burialPlace .
        BIND(<http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> AS ?person)
    }
    UNION
    {
        <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/burialPlace> ?burialPlace .
        BIND(<http://dbpedia.org/resource/Edwin_A._Keeble> AS ?person)
    }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,0,train,Give me the parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },SELECT ?result WHERE { <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/parent> ?result . },1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
328,3,train,Who is the commander in Volcano and Ryukyu Islands campaign?,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,20,0,0,1.0,1.0,1.0
626,0,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },1,1,2,1,1,3,2,20,21,0,0,1.0,1.0,1.0
838,3,train,"Give me the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?member WHERE {
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>.
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
    ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/YU_Grupa>.
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
747,8,train,Who is the person born as Tracey Elizabeth McSween?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Tracey Elizabeth McSween"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
345,6,train,Give me the figure known as Stolz von Liechtenstein and team of Alessandro Mangiarratti.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . }","```sparql
# Query 1: Find the figure known as ""Stolz von Liechtenstein""
SELECT ?figure WHERE {
    ?figure <http://dbpedia.org/ontology/nickName> ""Stolz von Liechtenstein"" .
}

# Query 2: Find the team of Alessandro Mangiarratti
SELECT ?team WHERE {
    <http://dbpedia.org/resource/Alessandro_Mangiarratti> <http://dbpedia.org/ontology/team> ?team .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,8,train,"Give me the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?writer WHERE {
    ?work <http://purl.org/dc/terms/creator> ?writer .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?work <http://purl.org/dc/terms/title> ""40 Dayz & 40 Nightz"" .
}
```",1,3,2,1,1,3,3,71,0,0,12,0,0.0,0
666,7,train,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?player WHERE {
    ?manager <http://dbpedia.org/ontology/sportsManager> <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.F.C._season> .
    ?team <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Hull_City_A.F.C.> ;
          <http://dbpedia.org/ontology/sportsManager> ?manager .
    ?player <http://dbpedia.org/ontology/memberOfTeam> ?team .
}
```",2,3,3,2,1,3,2,20,0,0,22,0,0.0,0
345,9,train,"Give me the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?club ?nickname WHERE {
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>.
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>.
    ?v0 <http://dbpedia.org/property/sportsTeam> <http://dbpedia.org/resource/Armando_Heeb>.
    ?v0 <http://dbpedia.org/property/nickname> ?nickname.
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
981,4,train,Give me the author of Kamikaze Girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/ontology/author> ?result . },1,1,2,1,1,3,2,20,1,0,2,1.0,0.3333333333333333,0.5
391,6,train,"Give me the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/work> ?result .
}
```",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
9,10,train,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT ?figure ?almaMater WHERE {
  # Find the figure known as QUB
  ?figure <http://dbpedia.org/ontology/nickname> ""QUB"" .
  
  # Find the alma mater of John Alderdice, Baron Alderdice
  OPTIONAL { 
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/property/almaMater> ?almaMater .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
197,2,train,Who is the member of FC Politehnica Timișoara?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . },"```sparql
SELECT ?member WHERE {
    <http://dbpedia.org/resource/FC_Politehnica_Timișoara> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,2,2,9,0,0,572,0,0.0,0
54,5,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
182,6,train,Give me the war of Mahesh Senanayake and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?person ?war WHERE {
  { 
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?war .
    BIND(<http://dbpedia.org/resource/Mahesh_Senanayake> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?war .
    BIND(<http://dbpedia.org/resource/Jagath_Dias> AS ?person)
  }
}
```",2,2,3,1,2,2,3,28,1,7,0,0.125,1.0,0.2222222222222222
778,7,train,Give me the entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
SELECT ?award ?entity WHERE {
    <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?entity .
}
```",2,2,3,2,1,3,2,20,0,25,18629,0.0,0.0,0
179,5,train,Who is the child of Bhumibol Adulyadej?,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
54,13,train,Give me the parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
    ?child <http://dbpedia.org/ontology/child> ?parent .
}
```",2,2,3,2,1,3,3,71,1,3,1,0.25,0.5,0.3333333333333333
303,5,train,"Who is the person born, that is a politician, as Arnulfo Arias Madrid?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Arnulfo Arias Madrid"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
534,5,train,Give me the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?result . },1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
767,1,train,Give me the alma mater of Carl L. Nippert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
963,1,train,Give me the administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
SELECT ?member ?administration WHERE {
    ?member <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Serbian_Progressive_Party> .
    ?member <http://dbpedia.org/property/administration> ?administration .
}
```",1,1,2,1,1,3,2,20,0,0,86,0,0.0,0
345,4,train,Give me the birth date of Eiður Guðjohnsen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?result . },1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
10,6,train,Give me the associated musical artist of Matt Colton and band member of Luke Vibert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
SELECT ?artist WHERE {
    OPTIONAL { 
        <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
    }
    OPTIONAL {
        ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Luke_Vibert> .
        ?band <http://dbpedia.org/ontology/member> ?member .
        ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
    }
}
```",2,2,3,1,2,2,3,28,1,3,0,0.25,1.0,0.4
391,3,train,"Give me the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?result . }","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?result . }",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
696,2,train,"Give me the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?result WHERE {
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup>.
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
    ?v0 <http://dbpedia.org/property/member> <http://dbpedia.org/resource/The_Boils>.
    BIND(?v0 AS ?result)
}
```",1,4,2,1,1,3,2,20,0,0,2,0,0.0,0
994,16,train,"Give me the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?bandMember WHERE {
    ?band <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/ontology/Organization>.
    ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal>.
    ?band <http://www.w3.org/2000/01/rdf-schema#member> ?bandMember.
    ?bandMember <http://www.w3.org/2000/01/rdf-schema#type> ?type.
    FILTER(?type IN (<http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/Organization>, <http://dbpedia.org/ontology/Group>))
}
```",2,6,3,2,1,3,3,71,0,0,6,0,0.0,0
492,3,train,Give me the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
    <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/ontology/author> ?author .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,1,train,Give me the alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
54,4,train,Give me the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?result . },1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
492,13,train,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?war ?commander WHERE {
    <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```",2,4,3,2,1,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
485,2,train,Give me the entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nottinghamshire> .
}
```",1,1,2,1,1,2,3,28,0,101,369,0.0,0.0,0
827,10,train,"Who is the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> .
    ?spouse <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Royalty> .
    ?spouse <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Royalty> .
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
142,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Japan> .
}
```",1,1,2,1,1,2,2,9,401,2973,8515,0.11885002963841138,0.04497532525796321,0.06525630593978844
55,2,train,Give me the band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/memberOf> ?band .
}
```",1,1,2,1,1,2,3,28,0,0,9,0,0.0,0
392,7,train,Give me the province of Schio and entity in Italy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?province WHERE {
    <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?province .
}
```",2,2,3,1,2,2,3,28,1,0,0,1.0,1.0,1.0
427,13,train,Give me the party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?party WHERE {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/politicalParty> ?party .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
294,2,train,"Give me the entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . }","```sparql
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> .
}
```",1,1,2,1,1,2,3,28,340,0,0,1.0,1.0,1.0
303,11,train,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?party WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Arnulfo Arias Madrid""@en .
    ?person a <http://dbpedia.org/ontology/Politician> .
    ?person <http://dbpedia.org/ontology/politicalParty> ?party .
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
767,9,train,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/ns/prov#wasDerivedFrom> ?location .
    ?location <http://dbpedia.org/ontology/location> ?place .
    ?place <http://dbpedia.org/ontology/administrativeTerritory> <http://dbpedia.org/resource/Baden-Württemberg> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
488,8,train,Who is the father of Emperor Go-Mizunoo?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?result . },"SELECT ?father WHERE { 
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?father .
}",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
838,8,train,"Give me the band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?member WHERE {
    <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/member> ?member .
}
```",2,3,3,2,1,3,2,20,0,0,40,0,0.0,0
801,17,train,"Give me the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?writer WHERE {
    ?album <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> .
    ?album <http://dbpedia.org/ontology/writer> ?writer .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",2,6,3,2,1,3,3,71,0,0,12,0,0.0,0
48,4,train,Give me the show with Stacey Dash.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . },"```sparql
SELECT ?show WHERE {
    <http://dbpedia.org/resource/Stacey_Dash> <http://dbpedia.org/ontology/starring> ?show .
}
```",1,1,2,1,1,3,2,20,0,0,18,0,0.0,0
378,10,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?person ?claimToFame ?war WHERE {
  { 
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/notableworks> ?claimToFame .
    BIND(<http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/battles> ?war .
    BIND(<http://dbpedia.org/resource/Carl_Pontus_Gahn> AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,0,2,2,0.0,0.0,0
328,17,train,"Give me the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
    <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/officeHolder> ?office .
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
339,4,train,Who is the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> <http://dbpedia.org/ontology/parent> ?result . },1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
701,16,train,Give me the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
SELECT ?grandchild WHERE {
    <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
996,6,train,Give me the entity in France and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> <http://dbpedia.org/ontology/memberOf> ?force .
    ?force <http://dbpedia.org/property/country> <http://dbpedia.org/resource/France> .
}
```",2,2,3,1,2,3,2,20,0,0,4,0,0.0,0
492,10,train,Give me the person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
}
```",2,2,3,1,2,3,3,71,16,0,0,1.0,1.0,1.0
421,6,train,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
SELECT ?bandMember WHERE {
  ?bandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Senidah>.
  ?bandMember <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia>.
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
487,4,train,Give me the birth name of Phil Scott.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott_(politician)> <http://dbpedia.org/ontology/birthName> ?result . },1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
827,3,train,"Who is the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Maria_Pavlovna_of_Russia_(1786–1859)> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Royalty108069068> .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
435,9,train,"Give me the region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . }","```sparql
SELECT ?gmtRegion ?constitutionWork WHERE {
  # Query for GMT region
  <http://dbpedia.org/resource/Greenwich_Mean_Time> <http://dbpedia.org/ontology/region> ?gmtRegion .
  
  # Assuming there is a specific resource for Article 62, Section IV of the Constitution of Iceland
  OPTIONAL {
    <http://dbpedia.org/resource/Article_62,_Section_IV_of_the_Constitution_of_Iceland> <http://dbpedia.org/ontology/work> ?constitutionWork .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,12,train,Give me the administration of Emperor Go-Yōzei and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
SELECT ?administration ?deathPlace WHERE {
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/reign> ?administration .
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
666,2,train,"Give me the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . },"```sparql
SELECT ?team WHERE {
    <http://dbpedia.org/resource/Leonid_Slutsky> <http://dbpedia.org/ontology/coachedBy> ?team .
    ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SoccerClub108069068> .
    ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SportsTeamSeasons100000001> .
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
767,8,train,Give me the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?result .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
9,9,train,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?person ?almaMater WHERE {
  { 
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    BIND(<http://dbpedia.org/resource/Allen_Hill_(scientist)> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    BIND(<http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
281,1,train,Give me the entity in Colony of New Zealand.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
SELECT ?entity WHERE {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""colony of new zealand""))
}
```",1,1,2,1,1,3,3,71,0,6,1,0.0,0.0,0
179,8,train,Give me the parent of the child of Bhumibol Adulyadej.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bhumibol_Adulyadej> .
    ?child <http://dbpedia.org/ontology/child> ?parent .
}
```",2,2,3,2,1,3,2,20,1,2,2,0.3333333333333333,0.3333333333333333,0.3333333333333333
142,6,train,Give me the birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?actor ?birthPlace WHERE {
    <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,2,2,9,3,2,0,0.6,1.0,0.7499999999999999
778,8,train,"Give me the author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?software WHERE {
    <http://dbpedia.org/resource/Bill_Joy> <http://purl.org/dc/terms/creator> ?software .
    ?software a <http://dbpedia.org/ontology/Software>
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
378,8,train,Who is the commander in Great Siege of Gibraltar?,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?result . },1,1,2,1,1,3,3,71,7,0,0,1.0,1.0,1.0
360,10,train,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?nativePlace WHERE {
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace a <http://dbpedia.org/ontology/Settlement> .
    ?deathPlace <http://dbpedia.org/property/nativePlace> ?nativePlace .
}
```",2,3,3,2,1,2,3,28,0,0,1099,0,0.0,0
391,0,train,"Give me the native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
}
```",1,1,2,1,1,3,3,71,97,0,0,1.0,1.0,1.0
534,0,train,Give me the birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . },1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
528,10,train,Give me the force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Narciso_Campero> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    ?type <http://www.w3.org/2000/01/rdf-schema#subClassOf>* <http://dbpedia.org/ontology/Organisation>.
    ?force <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Narciso_Campero> .
}

SELECT ?war WHERE {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
303,3,train,"Who is the commander, that is a politician, in United States invasion of Panama?",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?commander WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
492,7,train,Give me the country of Khemis Miliana District.,SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
427,9,train,Give me the reference to Partito Popolare Italiano and party of Giulio Andreotti.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?party WHERE {
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/memberOf> ?party .
    FILTER(?party = <http://dbpedia.org/resource/Partito_Popolare_Italiano>)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
9,11,train,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?mayor <http://dbpedia.org/property/mayorOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
427,4,train,Give me the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://dbpedia.org/ontology/name> ?result . },1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,2,train,Give me the entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Sri_Lanka>.
}
```",1,1,2,1,1,2,3,28,0,343,62,0.0,0.0,0
528,2,train,Give me the force of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
645,9,train,"Give me the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?result WHERE {
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Diamond_Rock>.
    ?v0 <http://dbpedia.org/ontology/commander> ?commander.
    ?commander <http://dbpedia.org/ontology/country> ?result.
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
801,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/The_Shadow_(character)> <http://dbpedia.org/property/alterEgo> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
547,15,train,Give me the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?grandchild WHERE {
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
    <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
10,0,train,Give me the associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",1,1,2,1,1,2,3,28,4,0,0,1.0,1.0,1.0
528,6,train,Give me the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
294,7,train,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?entity WHERE {
    <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/location> ?location .
    FILTER(CONTAINS(LCASE(STR(?location)), ""nashville, tennessee""))
    
    <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/burialPlace> ?entity .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
754,8,train,Give me the parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?child ?parent WHERE {
    <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",2,2,3,2,1,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
54,1,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . },1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
360,9,train,Give me the native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
SELECT ?person WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/South_Africa> .
    FILTER(CONTAINS(LCASE(?label), ""johannesburg""))
    
    OPTIONAL {
        ?band <http://dbpedia.org/ontology/member> ?person ;
              <http://www.w3.org/2000/01/rdf-schema#label> ?bandLabel .
        FILTER(CONTAINS(LCASE(?bandLabel), ""manfred mann""))
    }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
645,5,train,Give me the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
161,6,train,"Give me the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?force WHERE {
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?v0 <http://dbpedia.org/property/personsInvolved> <http://dbpedia.org/resource/Francisco_Largo_Caballero>.
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
251,2,train,Give me the death place of Laura Mancinelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
314,0,train,Give me the person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
}
```",1,1,2,1,1,2,3,28,12,1334,8,0.008915304606240713,0.6,0.017569546120058566
391,14,train,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?movie ?actor WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie>.
    ?movie <http://purl.org/dc/dcmitype/Work>.
    ?movie <http://dbpedia.org/ontology/TVSeries>.
    ?movie <http://dbpedia.org/ontology/starring> ?actor.
    ?movie <http://dbpedia.org/property/castMember> <http://dbpedia.org/resource/Roz_Ryan>.
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
712,7,train,Give me the capital of the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?country ?capital WHERE {
    ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?organisation <http://dbpedia.org/ontology/country> ?country.
    ?organisation <http://dbpedia.org/resource/Armed_Forces_of_South_Russia>.
    ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital.
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
312,2,train,"Give me the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"```sparql
SELECT ?result WHERE {
    ?party <http://www.w3.org/2000/01/rdf-schema#label> ""Democratic Party (Italy)""@en .
    ?party <http://dbpedia.org/ontology/politicalOrganization> ?organization .
    ?organization <http://dbpedia.org/ontology/administrativeRegion> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER(?type IN (<http://dbpedia.org/class/yago/Settlements1000000InItaly>, 
                     <http://dbpedia.org/class/yago/RegionsOfItaly>, 
                     <http://dbpedia.org/class/yago/StatesAndTerritoriesOfItaly>)).
    ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
}
```",1,5,2,1,1,2,2,9,0,0,14,0,0.0,0
801,9,train,Give me the producer of Westside Story (song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?producer WHERE {
    <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .
}
```",2,2,3,1,2,3,3,71,2,0,0,1.0,1.0,1.0
404,15,train,"Who is the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Royalty108069068> .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
294,10,train,Give me the resting place of the architect of P. D. Houston Jr. House.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . },"```sparql
SELECT ?architect ?burial WHERE {
    <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?architect .
    OPTIONAL { ?architect <http://dbpedia.org/ontology/burial> ?burial . }
}
```",2,2,3,2,1,2,3,28,0,1,1,0.0,0.0,0
339,1,train,Give me the father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
963,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/country> ?country .
    FILTER(?country <http://www.w3.org/2002/07/owl#Thing>)
}
```",1,2,2,1,1,3,2,20,0,0,56,0,0.0,0
820,5,train,Who is the parent of Jason Schwartzman?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Jason_Schwartzman> <http://dbpedia.org/ontology/child> ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
994,5,train,"Give me the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . },"```sparql
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/property/memberOf> ?band .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,0,train,Give me the child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . },1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
16,9,train,Give me the professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actress> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
915,9,train,"Give me the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
    ?director <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Director> .
    ?director <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> .
    ?director <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,4,train,Give me the alma mater of Vladimir Cerrón and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?person ?almaMater WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Vladimir_Cerrón> 
    <http://dbpedia.org/resource/Jorge_Sotomayor_Tello>
  }
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",2,2,3,1,2,2,2,9,1,4,0,0.2,1.0,0.33333333333333337
184,4,train,Give me the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
}
```",1,1,2,1,1,3,3,71,2751,0,0,1.0,1.0,1.0
801,7,train,"Give me the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?result . },"```sparql
SELECT ?album WHERE {
    ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>.
    ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>.
    ?album <http://dbpedia.org/ontology/title> ""What U See Is What U Get"" .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
427,5,train,Who is the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
SELECT ?alumnus WHERE {
    <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> <http://dbpedia.org/ontology/alumni> ?alumnus .
}
```",1,1,2,1,1,3,3,71,0,0,1559,0,0.0,0
16,12,train,Give me the professional in Actress and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?profession WHERE {
    <http://dbpedia.org/resource/Gina_Rice> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    <http://dbpedia.org/resource/Gina_Rice> <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice"" .
    <http://dbpedia.org/resource/Gina_Rice> <http://dbpedia.org/ontology/profession> ?profession .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
16,14,train,Give me the person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?result . },2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
959,0,train,Give me the member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
SELECT ?member WHERE {
    <http://dbpedia.org/resource/University_of_Tsukuba> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,3,3,71,0,0,267,0,0.0,0
712,8,train,Give me the resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
    ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> .
    OPTIONAL { ?person <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",2,2,3,2,1,3,2,20,0,837,49,0.0,0.0,0
767,17,train,"Give me the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?alterEgo WHERE {
    ?character <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
    ?character <http://dbpedia.org/property/persona> <http://dbpedia.org/resource/Matthew_Burland> .
    ?character <http://dbpedia.org/property/alterEgo> ?alterEgo .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
356,6,train,Give me the player in 2015 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?team WHERE {
    <http://dbpedia.org/resource/Mark_Briggs> <http://dbpedia.org/ontology/team> ?team .
    ?team <http://dbpedia.org/property/sportSeason> ""2015""^^xsd:gYear .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,1,train,Give me the band member of Metallica.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Metallica> <http://dbpedia.org/ontology/member> ?result . },1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
77,8,train,Give me the force of the mayor of Congress Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?force WHERE {
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mayor>.
    ?mayor <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Congress_Poland>.
    ?mayor <http://dbpedia.org/ontology/militaryForce> ?force.
}
```",2,2,3,2,1,3,2,20,0,0,33,0,0.0,0
696,8,train,Give me the landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v0 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?award ?landmark WHERE {
    <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?award .
    OPTIONAL { ?award <http://dbpedia.org/ontology/location> ?location . }
    OPTIONAL { ?location <http://dbpedia.org/ontology/elevation> ?elevation . }
    FILTER(?elevation > 0) # Assuming we are interested in non-zero elevations
    OPTIONAL { ?location <http://dbpedia.org/ontology/landmark> ?landmark . }
}
```",2,2,3,2,1,3,2,20,0,2,599,0.0,0.0,0
427,14,train,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?party WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Romano Antonio Prodi""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""Romano Antonio Prodi"" .
    ?person <http://dbpedia.org/ontology/politicalParty> ?party .
    FILTER EXISTS { ?person <http://dbpedia.org/ontology/officeHolder> [] } .
    FILTER EXISTS { ?person <http://dbpedia.org/ontology/politician> [] }
}
```",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
77,4,train,"Give me the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?organisation ?territory WHERE {
    ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?organisation <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Warsaw> .
    ?organisation <http://dbpedia.org/property/administers> ?territory .
}
```",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
281,16,train,"Give me the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?birthPlace WHERE {
    ?election <http://dbpedia.org/ontology/election> <http://dbpedia.org/resource/New_South_Wales_state_election,_1962> .
    ?election <http://dbpedia.org/ontology/leader> ?politician .
    ?politician a <http://dbpedia.org/ontology/Politician> .
    ?politician <http://dbpedia.org/property/birthPlace> ?birthPlace .
    ?birthPlace a <http://dbpedia.org/ontology/Country> .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
801,12,train,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
    ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicProducer> .
    ?producer <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
    ?producer <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
    ?artist <http://dbpedia.org/property/produced> <http://dbpedia.org/resource/Westside_Story_(song)> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
184,16,train,"Give me the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent ?child WHERE {
    <http://dbpedia.org/resource/Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?parent .
    ?parent a <http://dbpedia.org/ontology/Royalty> .
    ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
391,11,train,Give me the native of the figure known as Hub City.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
SELECT ?result WHERE {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ""Hub City""@en .
    ?entity <http://dbpedia.org/ontology/nativePlace> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,176,0,0.0,0
77,9,train,Who is the awardee of the award of Maxim Grigorievich Vlasov?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?award ?otherAwardee WHERE {
    <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?award .
    ?otherAwardee <http://dbpedia.org/property/awards> ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov>)
}
```",2,2,3,2,1,3,2,20,415,8,1,0.9810874704491725,0.9975961538461539,0.9892729439809297
16,7,train,Who is the alumnus of Ohio State University?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
SELECT ?alumnus WHERE {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University>.
}
```",1,1,2,1,1,3,3,71,0,0,467,0,0.0,0
92,6,train,"Give me the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
981,3,train,Give me the region of Time in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
SELECT ?result WHERE {
    ?time <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?time <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Indonesia>.
    ?time <http://dbpedia.org/ontology/region> ?result.
}
```",1,1,2,1,1,3,2,20,0,5,1,0.0,0.0,0
