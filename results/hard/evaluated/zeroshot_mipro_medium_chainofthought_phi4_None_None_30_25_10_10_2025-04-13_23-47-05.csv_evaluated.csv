id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
392,21,test,"Give me the region of Central European Time and entity in Italy and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?settlement ?province WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti"" .
  
  ?person dbo:birthPlace dbr:Italy .

  ?person dbo:residence ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Italy ;
              dbo:timeZone dbr:Central_European_Time .

  OPTIONAL { ?settlement dbo:administrativeRegion ?province . }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
421,24,test,Give me the person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Get Dino Merlin's birth name
  SELECT DISTINCT ?birthName WHERE {
    dbr:Dino_Merlin dbo:birthName ?birthName .
  } LIMIT 1

  # Get Samir Bekrić's birthplace
  SELECT DISTINCT ?birthPlace WHERE {
    dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .
  } LIMIT 1

  # Find a person with the same birth name and birthplace
  ?person a dbo:Person ;
          dbo:birthName ?birthName ;
          dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
427,55,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiParty ?italianPeopleParty ?andreottiFatherParty WHERE {
  # Romano Antonio Prodi's party affiliation
  dbr:Romano_Antonio_Prodi a dbo:Politician ;
                          dbo:partyAffiliation ?prodiParty .

  # Italian People's Party (1994)
  dbr:Italian_People%27s_Party_(1994) a dbo:PoliticalParty ;
                                      rdfs:label ""Italian People's Party (1994)""@en .

  # Lamberto Andreotti's father and his party affiliation
  dbr:Lamberto_Andreotti dbo:father ?andreottiFather .
  ?andreottiFather dbo:partyAffiliation ?andreottiFatherParty .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
996,19,test,Give me the force of the awardee of 1778.0 and entity in the award of the native of Palestine (region).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?award WHERE {
  ?award a dbo:Award .
  ?award dbo:dateReceived ?date .
  FILTER (YEAR(?date) = 1778)
  
  ?person dbo:nationality dbr:Palestine .
  ?person dbo:receivedAward ?award .
}
```",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
184,64,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Find Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            dbo:birthDate ?dateMargaret .
  FILTER (YEAR(?dateMargaret) = 1925)

  # Step 2: Identify her parent
  ?parentMargaret dbo:child ?margaret .

  # Step 3: Find the child of that parent
  ?grandChildMargaret dbo:parent ?parentMargaret .

  # Step 4: Identify Archduke Joseph August's parent
  ?josephAugust a dbo:Person ;
                dbo:birthDate ?dateJoseph .
  FILTER (YEAR(?dateJoseph) = 1872) # Assuming known birth year for identification

  ?parentJoseph dbo:child ?josephAugust .

  # Step 5: Find the landmark at elevation 96.0
  ?landmark a dbo:Settlement ;
            dbo:elevation ?elevation .
  FILTER (?elevation = ""96.0""^^xsd:float)

  # Step 6: Identify native of that landmark
  ?native dbo:nativeOf ?landmark .

  # Step 7: Find the parent of that native
  ?parentNative dbo:child ?native .

  # Step 8: Determine commonality between parents found in steps 3 and 7
  VALUES ?commonParent { ?grandChildMargaret ?parentNative }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,46,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?author a dbo:Person .
  ?author dbo:work ?work .
  ?work rdfs:label ""French Algeria""@en .

  ?commander a dbo:Person .
  ?commander dbo:militaryConflict ?conflict .
  ?conflict a dbo:MilitaryConflict .

  ?decedent a dbo:Person .
  ?decedent dbo:decedentAtWork dbr:Frédéric-Georges_Herr .
  
  FILTER (?author = ?commander && ?commander = ?decedent)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,20,test,Give me the reference to Partito Popolare Italiano and party of the father of Lamberto Andreotti.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?party WHERE {
  # Find Lamberto Andreotti's father
  dbr:Lamberto_Andreotti dbo:father ?father .
  
  # Get the political party of his father
  ?father dbo:partyAffiliation ?party .

  # Check if this party is Partito Popolare Italiano
  OPTIONAL { ?party rdfs:label ""Partito Popolare Italiano""@en }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,61,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?shenaBand ?ambashepherdWriterBand WHERE {
  # Part 1: Find the band of the person born as ""Shèna""
  ?person a dbo:Person ;
          dbo:birthName ?name .
  FILTER (str(?name) = ""Shèna"")
  OPTIONAL { 
    ?bandMember a dbo:Band ;
                dbo:bandMember ?person .
    ?bandMember rdfs:label ?shenaBand .
  }

  # Part 2: Find the band of the writer of the song ""Amba Shepherd""
  ?song a dbo:Songs ;
        rdfs:label ?title .
  FILTER (str(?title) = ""Amba Shepherd"")
  ?song dbo:writer ?writer .
  
  OPTIONAL { 
    ?bandMember2 a dbo:Band ;
                 dbo:bandMember ?writer .
    ?bandMember2 rdfs:label ?ambashepherdWriterBand .
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
328,44,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Awardee of Order of Suvorov
  ?awardEvent dbo:recipient ?person ;
              dbo:award dbr:Order_of_Suvorov .

  # Commander in the force of Ferenc Szálasi
  ?commanderRole dbo:commanderOf dbr:Ferenc_Sz%C3%A1lasi ;
                 dbo:agent ?person .
  
  # Leader of a government agency under Joseph Stalin
  ?agency a dbo:GovernmentAgency ;
          dbo:leader ?person ;
          dbo:head dbr:Joseph_Stalin .

}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
294,28,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v5 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?architectRestingPlace ?marionBirthplace ?awardeeRestingPlace WHERE {
  # Find the architect of P. D. Houston Jr. House and their resting place
  ?house dbo:architect ?architect .
  FILTER (str(?house) = ""P._D._Houston_Jr._House"")
  OPTIONAL { ?architect dbo:deathPlace ?architectRestingPlace . }

  # Find Marion James' birthplace that is a settlement
  ?marion dbo:birthPlace ?marionBirthplace .
  FILTER (str(?marion) = ""Marion_James"")
  ?marionBirthplace rdf:type dbo:Settlement .

  # Find the politician who received the Distinguished Service Medal and their resting place
  ?awardee dbo:award dbr:Distinguished_Service_Medal_(U.S._Army) .
  FILTER (dbo:Politician(?awardee))
  OPTIONAL { ?awardee dbo:deathPlace ?awardeeRestingPlace . }
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
528,41,test,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT 
  ?pisaguaForce ?pisaguaWar 
  ?rinconadaCommander ?rinconadaWar 
  ?camperoForce 
WHERE {
  # Battle of Pisagua
  dbr:Battle_of_Pisagua a dbo:Battle .
  
  # Military force in the Battle of Pisagua
  ?pisaguaForce dbo:participatedIn dbr:Battle_of_Pisagua .

  # War associated with the Battle of Pisagua
  dbr:Battle_of_Pisagua dbo:war ?pisaguaWar .

  # Commander in the Battle of La Rinconada de Ate
  dbr:Battle_of_La_Rinconada_de_Ate a dbo:Battle .
  ?rinconadaCommander dbo:commander dbr:Battle_of_La_Rinconada_de_Ate .

  # War associated with the commander in the Battle of La Rinconada de Ate
  ?rinconadaWar dbo:war dbr:Battle_of_La_Rinconada_de_Ate .

  # Military force associated with Narciso Campero
  dbr:Narciso_Campero a dbo:Person .
  ?camperoForce dbo:participatedIn ?battleCampero .
  ?battleCampero dbo:commander dbr:Narciso_Campero .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
9,49,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person .
  ?person dbo:positionHeld ?forumPosition .
  ?forumPosition dbo:organization dbr:Northern_Ireland_Forum .
  ?person dbo:almaMater ?almaMater .
  
  OPTIONAL { 
    ?institution a dbo:EducationalInstitution ;
                 dbo:nickname ?nickname .
    FILTER (CONTAINS(LCASE(?nickname), ""northern ireland""))
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,41,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?country WHERE {
  # Find Bob Heffron's birth place
  ?heffron a dbo:Person ;
           foaf:name ""Bob Heffron"" ;
           dbo:birthPlace ?place .
  
  # Ensure the birth place is a country
  ?place rdf:type dbo:Country ;
         rdfs:label ?country .

  # Find individuals with the award and their wars
  ?person a dbo:Person ;
          dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath ;
          dbo:militaryConflict ?conflict .
  
  # Ensure the conflict is related to the New Zealand Army
  ?conflict dbo:participatingMilitaryUnit dbr:New_Zealand_Army .

}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
485,21,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom and birth place of Thomas Warner (poet).",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?whitakerBirthPlace ?warnerBirthPlace WHERE {
  # Joseph Whitaker (naturalist)
  ?whitaker a dbo:Person ;
            rdfs:label ""Joseph Whitaker (naturalist)""@en .
  ?whitaker dbo:birthPlace ?whitakerBirthPlace .

  # Check if birthplace is a region and part of the UK
  ?whitakerBirthPlace a dbo:Region ;
                      dbo:country dbr:United_Kingdom .

  # Thomas Warner (poet)
  ?warner a dbo:Person ;
          rdfs:label ""Thomas Warner (poet)""@en .
  ?warner dbo:birthPlace ?warnerBirthPlace .
}
```",4,5,5,2,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
528,52,test,"Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v5 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Find the Battle of La Rinconada de Ate and its commander
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of La Rinconada de Ate""@en .
  
  OPTIONAL { 
    ?battle dbo:commander ?commander .
  }
  
  # Find Narciso Campero's military involvement
  ?campero a dbo:Person ;
           foaf:name ""Narciso Campero"" ;
           dbo:participatedIn ?militaryForce .

  OPTIONAL {
    ?militaryForce dbo:opposingMilitaryForce ?battle .
  }
  
  # Filter for societal events in Chile (if applicable)
  OPTIONAL {
    ?event a dbo:SocietalEvent ;
           dbo:location dbr:Chile .
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
534,19,test,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician) and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/owner> ?v4 . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Find Desmond FitzGerald's child who is a politician and office holder
  ?child dbo:parent dbr:Desmond_FitzGerald_(politician) .
  ?child a dbo:Politician ;
         dbo:officeHolder ?office .

  # Get the birth place of this child
  ?child dbo:birthPlace ?birthPlace .

  # Find the venue for the 2012 Pro12 Grand Final
  ?event dbo:eventType dbr:Pro12_Grand_Final ;
         dbo:venue ?venue .
  
  FILTER (YEAR(?event) = 2021)

  # Get the owner of this venue and their headquarters
  ?venue dbo:owner ?owner .
  ?owner dbo:headquarters ?headquarters .

}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
391,33,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Sherry Hormann's spouse
  ?spouse a dbo:Person ;
          dbo:spouse dbr:Sherry_Hormann .
  
  # Filter for the spouse who is native to Compton, California
  ?spouse dbo:nativePlace dbr:Compton,_California .

  # Find a notable work (claim to fame) of this person
  ?work dbo:creator ?spouse ;
        a dbo:Film ; # Assuming the claim to fame is a film

  # Identify an actor in that work
  ?work dbo:actor ?actor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
54,54,test,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1 & 2: Find the child of Soe Min Wimala Dewi's father
  ?father a dbo:Person .
  ?father dbo:child ?soeMinWimalaDewi .
  ?soeMinWimalaDewi rdfs:label ""Soe Min Wimala Dewi""@en .
  
  # Step 2 continued: Identify the child of that father
  ?father dbo:child ?childOfFather .

  # Step 3: Find Ameitta Thiri Maha Dhamma Dewi's predecessor
  ?ameittaThiriMahaDhammaDewi a dbo:Person .
  ?ameittaThiriMahaDhammaDewi rdfs:label ""Ameitta Thiri Maha Dhamma Dewi of Ava""@en .
  
  # Assuming there is a property for predecessor, which might not be directly available
  ?predecessor a dbo:Person .
  ?predecessor dbo:succeededBy ?ameittaThiriMahaDhammaDewi .

  # Step 4: Match the child from step 2 with the predecessor from step 3
  FILTER (?childOfFather = ?predecessor)

  # Step 5 & 6: Find Thado Minsaw's parent and their child
  ?thadoMinsawParent a dbo:Person .
  ?thadoMinsawParent dbo:child dbr:Thado_Minsaw_of_Prome .
  
  ?thadoMinsawParent dbo:child ?childOfThadoMinsawParent .

  # Step 7: Match the person from steps 1-4 with the child from step 6
  FILTER (?childOfFather = ?childOfThadoMinsawParent)

  # Return the matched person
  BIND(?childOfFather AS ?person)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
10,27,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalName ?associatedArtist ?bandMember WHERE {
  # Sharon Kao's professional name
  ?sharon a dbo:Person ;
          dbo:birthName ""Sharon Kao"" .
  ?sharon dbo:alias ?professionalName .

  # Matt Colton's associated musical artist
  ?mattColton a dbo:Person ;
              dbr:Matt_Colton .
  ?mattColton dbo:musicalArtist ?associatedArtist .

  # Luke Francis Vibert's band member who is an artist
  ?lukeVibert a dbo:Person ;
              dbo:birthName ""Luke Francis Vibert"" .
  ?bandMember a dbo:Band ;
              dbo:member ?lukeVibert ;
              dbo:musicalArtist ?artist .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
528,65,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleWar ?commanderWork ?narcisoPerson WHERE {
  # Find the war associated with the Battle of Pisagua
  dbr:Battle_of_Pisagua dbo:participatedInWar ?battleWar .

  # Find the commander involved in a work dated 1901-01-09
  ?work dbo:date ""1901-01-09""^^xsd:date .
  ?commander dbo:commander ?work .
  
  # Find the person born as Narciso Campero Leyes
  ?narcisoPerson a dbo:Person ;
                rdfs:label ""Narciso Campero Leyes""@en .

  # Linking the commander to the battle war if needed (optional)
  OPTIONAL { ?commander dbo:participatedInWar ?battleWar }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
492,59,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Person is an author of ""French Algeria""
  ?work dbo:author ?person ;
        rdfs:label ""French Algeria""@en .
  
  # Person was a commander in the Battle of Verdun
  ?war dbo:commanderInWar ?person ;
       rdfs:label ""Battle of Verdun""@en .
  
  # The war is also described as a military conflict and an event
  ?war rdf:type dbo:MilitaryConflict, dbo:Event .

  # Person's death place matches their work
  ?deathPlace dbo:deathPlace ?person .
  FILTER (?work = ?deathPlace)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
488,58,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?birthPlace ?deathPlace WHERE {
  # Tokugawa Masako's spouse
  ?masako a dbo:Person ;
          foaf:name ""Tokugawa Masako"" .
  
  ?spouse dbo:spouse ?masako .

  # Father of the spouse who is royalty
  ?father dbo:child ?spouse ;
          rdf:type dbo:Monarch .

  # Administration held by the royal father
  ?administration dbo:officeHolder ?father .

  # Enomoto Takeaki's birth place
  ?enomoto a dbo:Person ;
           foaf:name ""Enomoto Takeaki"" .
  
  ?enomoto dbo:birthPlace ?birthPlace .

  # Yūki Hideyasu's father who is a politician and his death place
  ?yuki a dbo:Person ;
        foaf:name ""Yūki Hideyasu"" .
  
  ?father2 dbo:child ?yuki ;
           rdf:type dbo:Politician .

  ?father2 dbo:deathPlace ?deathPlace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,56,test,"Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the producer of ""Westside Story (song)""
SELECT ?producer WHERE {
  dbr:Westside_Story_(song) dbo:producer ?producer .
}

# Step 2: Identify the professional in the alter ego of The Shadow
SELECT ?professional WHERE {
  ?shadow a dbo:Person ;
          rdfs:label ""The Shadow""@en ;
          dbo:alterEgo ?professional .
}

# Step 3: Find the associated musical artist of the writer (from step 2)
SELECT ?musicalArtist WHERE {
  ?writer a dbo:Writer ;
          dbo:musicalArtist ?musicalArtist .
  FILTER(?writer = ?professional) # Assuming professional is the writer
}

# Step 4: Identify the album related to ""What U See Is What U Get""
SELECT ?album WHERE {
  dbr:What_U_See_Is_What_U_Get a dbo:MusicalWork ;
                                dbo:work ?album .
}

# Step 5: Find the artist of that album
SELECT ?artist WHERE {
  ?album dbo:artist ?artist .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
232,54,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of London.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Identify John Pertwee
  ?john a dbo:Person ;
        foaf:name ""John Devon Roland Pertwee""@en ;
        dbo:birthPlace dbr:London .

  # Find his child who is an actor, narrator, and producer
  ?child dbo:parent ?john ;
         a dbo:Person ;
         dbo:profession (dbr:Actor|dbr:Narrator|dbr:Producer) .

  # Ensure the claim to fame includes both a film and a military conflict
  ?claimToFame dbo:claimedBy ?child ;
               dbo:subject ?film, ?conflict .
  ?film a dbo:Film .
  ?conflict a dbo:MilitaryConflict .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
184,18,test,Give me the parent of Archduchess Ilona of Austria and parent of Géza von Habsburg and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual ?relation WHERE {
  {
    # Parent of Archduchess Ilona of Austria
    dbr:Ilona_of_Austria dbo:parent ?individual .
    BIND(""Parent"" AS ?relation)
  }
  UNION
  {
    # Parent of Géza von Habsburg
    dbr:Géza_von_Habsburg dbo:parent ?individual .
    BIND(""Parent"" AS ?relation)
  }
  UNION
  {
    # Child of Archduke Joseph August of Austria
    dbr:Joseph_August_of_Austria dbo:child ?individual .
    BIND(""Child"" AS ?relation)
  }
}
```",3,3,4,1,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
994,33,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?meshuggahArtist ?slayerArtist WHERE {
  # Find Fredrik Thordendal's band and its associated musical artist
  ?band a dbo:Band ;
        dbo:member dbr:Fredrik_Thordendal .
  
  OPTIONAL { 
    ?band dbo:associatedMusicalArtist ?meshuggahArtist .
  }
  
  # Find S.A. Slayer's band and its associated musical artist
  ?slayerBand a dbo:Band ;
              dbo:member dbr:S._A._Slayer .
  
  OPTIONAL {
    ?slayerBand dbo:associatedMusicalArtist ?slayerArtist .
  }
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
184,47,test,"Give me the parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfRoyal WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria
  dbr:Archduke_Ladislaus_Philipp_of_Austria a dbo:Person .

  # Step 2: Find his parent
  ?archdukeParent dbo:child dbr:Archduke_Ladislaus_Philipp_of_Austria .
  
  # Step 3: Determine the native of Budapest
  ?archdukeParent dbo:nationality dbr:Budapest .

  # Step 4: Identify the child of this parent
  ?parentChild dbo:child ?archdukeParent .

  # Step 5: Find the grandchild (child of the child)
  ?grandchild dbo:child ?parentChild .

  # Step 6: Check for royalty
  ?grandchild dbo:royalTitle ?title .
  
  # Step 7: Identify the parent of this royal individual
  ?parentOfRoyal dbo:child ?grandchild .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,60,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalPerson WHERE {
  # Step 1: Identify Antiochus II Theos
  ?antiochus a dbo:Monarch ;
             foaf:name ""Antiochus II Theos""@en .

  # Step 2: Find his successor who is royalty
  ?successor dbo:predecessor ?antiochus ;
            a dbo:Monarch .

  # Step 3: Identify the child of the successor who is royalty
  ?royalChild dbo:parent ?successor ;
              a dbo:Monarch .

  # Step 4: Find the commander in Battle of Panium and their parent
  ?battle dbr:Battle_of_Panium .
  ?commander dbo:commanded ?battle ;
             foaf:name ?nameCommander .
  ?parent dbo:child ?commander .

  # Step 5: Determine the ""child of the child"" who is royalty
  ?finalPerson dbo:parent ?royalChild ;
               a dbo:Monarch .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
184,55,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find the child of Archduke Joseph Francis of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Find the parent of this child (likely Archduke Joseph Francis himself)
  ?parent1 dbo:child ?child1 .

  # Find the native of Budapest who is a child of the child of Archduke Joseph Karl
  ?descendant dbo:nativePlace dbr:Budapest .
  ?child2 dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  ?descendant dbo:child ?child2 .

  # Find the parent of this native of Budapest
  ?parent2 dbo:child ?descendant .

  # Ensure both parents are the same entity
  FILTER (?parent1 = ?parent2)
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
92,37,test,"Give me the band of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?associatedArtist WHERE {
  # Find Joseph Michael's band
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael"" .
  ?person dbo:bandMember ?band .

  # Find the actor of Return to Nuke 'Em High Volume 1
  ?actor a dbo:Person ;
         dbo:actor ?movie .
  ?movie rdfs:label ""Return to Nuke' Em High Volume 1""@en .

  # Ensure this person is also an artist and find associated musical artists
  ?artist a dbo:Artist ;
          foaf:name ?name ;
          dbo:birthDate ?date .
  ?artist dbo:actor ?movie .
  
  # Find the associated band members of this artist
  ?artist dbo:associatedBandMember ?associatedArtist .

  # Link Joseph Michael's band to the associated musical artist
  FILTER (?band = ?person)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,69,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?narcisoCampero ?forceOfNarciso ?battleCommander ?chileWar WHERE {
  # Find Narciso Campero by birth name
  ?narcisoCampero a dbo:Person ;
                  dbo:birthName ""Narciso Campero""@en .
  
  OPTIONAL {
    # Find the force associated with Narciso Campero
    ?forceOfNarciso dbo:commander ?narcisoCampero .
  }
  
  OPTIONAL {
    # Find the commander of the Battle of La Rinconada de Ate
    ?battle dbr:Battle_of_La_Rinconada_de_Ate ;
           dbo:commander ?battleCommander .
    
    # Find wars associated with the battle's commander
    ?war dbo:participatedIn ?battle .
  }
  
  OPTIONAL {
    # Find societal events (wars) in Chile
    ?chileWar a dbo:MilitaryConflict ;
              dbo:location dbr:Chile .
  }
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
48,20,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandActor ?bandWriter WHERE {
  # Step 1: Find the show with Stacey Dash as an actor
  ?show a dbo:TVSeries ;
        dbo:actor dbr:Stacey_Dash .

  # Step 2: Find actors in this show who are also musical artists and their bands
  ?actor a dbo:Actor ;
         dbo:actorIn ?show ;
         dbo:musicalArtist ?musicalArtist .
  OPTIONAL { ?musicalArtist dbo:band ?bandActor . }

  # Step 3: Identify works by Shellback as a record producer
  ?work a dbo:Work ;
        dbo:recordProducer dbr:Shellback .

  # Step 4: Find the writer of these works
  ?work dbo:writer ?writer .

  # Step 5: Check if any writers are also musical artists and their bands
  OPTIONAL { ?writer dbo:musicalArtist ?musicalArtistWriter . }
  OPTIONAL { ?musicalArtistWriter dbo:band ?bandWriter . }
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
314,21,test,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić and person deceased at Madrid.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Awardee of an award related to the number 30
  ?award dbo:name ?awardName .
  FILTER (CONTAINS(LCASE(?awardName), ""30"") || CONTAINS(LCASE(?awardName), ""thirty""))
  ?person dbo:award ?award .

  # Commander in profession
  ?person dbo:profession ?profession .
  FILTER (CONTAINS(LCASE(?profession), ""commander""))

  # Event and societal event
  ?event a dbo:Event .
  ?societalEvent a dbo:SocietalEvent .
  ?person dbo:event ?event .
  ?person dbo:societalEvent ?societalEvent .

  # Lisa Gavrić connection (assuming she is an awarder or related)
  OPTIONAL { ?award dbo:awardee dbr:Lisa_Gavrić }

  # Person deceased at Madrid
  ?person dbo:deathPlace dbr:Madrid .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
161,50,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderEvent ?militaryForce ?predecessor WHERE {
  # Find Emilio Mola's commander role in a military force
  ?commanderEvent a dbo:MilitaryCommand .
  ?commanderEvent dbo:commander dbr:Emilio_Mola .
  ?commanderEvent dbo:militaryConflict ?militaryConflict .

  # Ensure the military conflict is also a societal event
  ?militaryConflict a dbo:SocietalEvent ;
                   a dbo:MilitaryConflict .

  # Find the predecessor of Indalecio Prieto
  ?predecessorPosition dbo:positionHolder dbr:Indalecio_Prieto .
  ?predecessorPosition dbo:previousPositionHolder ?predecessor .

  # Link the predecessor to the same military conflict
  ?militaryForce a dbo:MilitaryConflict ;
                 dbo:militaryCommander ?predecessor .
  
  FILTER (?commanderEvent = ?militaryForce)
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
767,66,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?admin a dbo:Administration .
  ?admin dbo:location ?green .
  ?green rdfs:label ""Green""@en .

  ?fictionalCharacter a dbo:FictionalCharacter ;
                     dbo:alterEgo ?matthewBurland .
  ?matthewBurland rdfs:label ""Matthew Burland""@en .

  ?nash a dbo:Person ;
        dbo:almaMater ?university .
  
  ?admin dbo:member ?nash .
  ?settlement a dbo:Settlement ;
              dbo:location ?green .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
182,21,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warJagath ?nationalityTamara ?warMahesh WHERE {
  # Wars involving Jagath Dias
  ?person1 rdfs:label ""Jagath Dias""@en .
  ?person1 dbo:participatedInWar ?warJagath .

  # Nationality of Tamara Kunanayakam
  ?person2 rdfs:label ""Tamara Kunanayakam""@en .
  ?person2 dbo:nationality ?nationalityTamara .

  # Wars involving Mahesh Senanayake
  ?person3 rdfs:label ""Mahesh Senanayake""@en .
  ?person3 dbo:participatedInWar ?warMahesh .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
92,71,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v8 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Identify Joe Satriani as Joseph Michael
  ?satriani a dbo:Person ;
           foaf:name ""Joe Satriani"" ;
           dbo:birthName ""Joseph Michael Satriani"" .

  # Find the actor in ""Return to Nuke 'Em High Volume 1""
  ?film dbr:Return_to_Nuke_'Em_High_Volume_1 ;
        dbo:actor ?actor .

  # Ensure the actor is a band member of Joe Satriani or related to Nevermore
  OPTIONAL { ?actor dbo:bandMember ?satrianiBand . }
  OPTIONAL { ?actor dbo:bandMember dbr:Nevermore_(band) . }

  FILTER EXISTS { ?satrianiBand dbo:member ?actor }
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
92,30,test,Give me the band of the person born as Joseph Michael Furney and band member of Nevermore and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""Joseph Michael Furney""@en .
  
  OPTIONAL { 
    ?person dbo:bandMember dbr:Nevermore . 
  }
  
  OPTIONAL {
    ?person dbo:associatedBandMember ?band .
  }

  OPTIONAL {
    ?sheppard a dbo:Person ;
              dbo:birthName ""Jim Sheppard""@en .
    
    ?sheppard dbo:associatedBandMember ?band .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
55,21,test,"Give me the band member of Metallica and band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?metallicaMember ?gunsNrosesMember ?newstedBand WHERE {
  # Jason Newsted's membership in Metallica
  ?metallicaMember a dbo:Person ;
                   dbo:bandMemberOf dbr:Metallica .

  # Jason Newsted's potential membership in Guns N' Roses
  OPTIONAL { 
    ?gunsNrosesMember a dbo:Person ;
                      dbo:bandMemberOf dbr:Guns_N'_Roses .
  }

  # Band associated with ""Newsted""
  ?newstedBand a dbo:Band ;
               rdfs:label ?label .

  FILTER (CONTAINS(LCASE(?label), ""newsted""))

  # Ensure the person is Jason Newsted
  VALUES ?metallicaMember {
    dbr:Jason_Newsted
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
801,22,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist WHERE {
  ?work a dbo:CreativeWork .
  ?work rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  ?writer dbo:writer ?work .
  ?writer a dbo:Person .

  ?musicalArtist dbo:musicalArtist ?work ;
                 a dbo:MusicalArtist, dbo:Artist .

  FILTER (?writer != ?musicalArtist)
}
```",3,5,4,2,2,3,3,71,0,0,22,0,0.0,0
391,46,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film dbo:filmCinematographer dbr:Michael_Ballhaus .
  ?film dbo:starring ?actor .
  ?actor dbo:nativePlace dbr:Jackson,_Tennessee .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
378,55,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query for the commander in the Peninsular War
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict .
  ?war dbo:name ""Peninsular War""@en .
  ?war dbo:commanderOf ?commander .
}

# Query for the war involving Carl Pontus Gahn
SELECT ?person ?war WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ?date ;
          rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL { ?person dbo:participatedIn ?war . }
}

# Query for the commander in the Great Siege of Gibraltar and their claim to fame
SELECT ?commander ?fame WHERE {
  ?siege a dbo:MilitaryConflict ;
         dbo:name ""Great Siege of Gibraltar""@en ;
         dbo:commanderOf ?commander .
  OPTIONAL { ?commander dbo:famousFor ?fame . }
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
55,26,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify the producer of ""Used to Love Her""
  ?song dbo:title ""Used to Love Her"" .
  ?song dbo:producer ?producer .

  # Step 2: Check if this producer is a band and find its members
  OPTIONAL { ?producer a dbo:Band . }
  OPTIONAL {
    ?bandMember dbo:memberOf ?producer .
  }

  # Step 3: Identify Metallica's band member
  ?metallicaAlbum dbo:title ?title ;
                  dbo:artist dbr:Metallica .
  ?metallicaMember dbo:memberOf dbr:Metallica .

  # Step 4: Reference Newsted and find his associated band
  ?newstedBand dbo:member ?newstedMember .
  ?newstedMember foaf:name ""Jason Newsted"" .

  # Step 5: Find commonality between these entities
  FILTER (?bandMember = ?metallicaMember || ?bandMember = ?newstedMember)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
161,39,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Identify ""El Director""
  ?elDirector a dbo:Person ;
              rdfs:label ""El Director""@en .
  
  # Find the Spanish Civil War event
  ?event a dbo:Event ;
         rdfs:label ""Spanish Civil War""@en .

  # Determine military forces involved in the Spanish Civil War
  ?militaryForce dbo:militaryForceOf ?side ;
                 dbo:participatedIn ?event .

  # Identify which force was commanded by ""El Director""
  ?militaryForce dbo:commander ?elDirector .
  
  # Get the commander of that military force
  OPTIONAL { ?militaryForce dbo:commander ?commander . }
}
```",4,5,5,3,2,3,3,71,0,0,32,0,0.0,0
959,63,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of Yōichi Masuzoe.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Takashi Sekizuka's team manager
  ?teamManager a dbo:Person ;
               dbo:positionTitle ""Manager"" ;
               dbo:memberTeam ?team .
  
  # Team of Takashi Sekizuka
  ?team dbo:member ?takashiSekizuka .
  dbr:Takashi_Sekizuka dbo:birthName ?takashiSekizuka .

  # Alma mater conditions for Yōichi Masuzoe
  ?almaMater a dbo:University ;
             dbo:country dbr:Japan ;
             a dbo:EducationalInstitution, dbo:Organization .
  
  # Yōichi Masuzoe's details
  dbr:Yōichi_Masuzoe dbo:birthDate ?date ;
                     dbo:nationality dbr:Japanese ;
                     dbo:almaMater ?almaMater .
  FILTER (YEAR(?date) = 1958)

  # Manager must be an alumnus of the same alma mater
  ?teamManager dbo:almaMater ?almaMater .

  # Yōichi Masuzoe's residence country
  dbr:Yōichi_Masuzoe dbo:nativeCountry ?country .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
959,49,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerOfManager WHERE {
  # Step 1: Find Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  FILTER (STRSTARTS(STR(?university), ""http://dbpedia.org/resource/"") &&
          EXISTS { ?university a dbo:University } &&
          EXISTS { ?university dbo:country dbr:Japan })

  # Step 2: Find the manager of Kashima Antlers in 1998
  ?kashimaAntlersSeason dbo:manager ?manager .
  FILTER (STRSTARTS(STR(?kashimaAntlersSeason), ""http://dbpedia.org/resource/Kashima_Antlers_season_"") &&
          STRENDS(STR(?kashimaAntlersSeason), ""_1998""))

  # Ensure the manager is a sports manager
  ?manager a dbo:SportsManager .

  # Step 3: Find the team managed by this manager after 1998 Kashima Antlers
  ?team dbo:manager ?manager .
  
  # Step 4: Find the current manager of that team
  ?team dbo:currentManager ?managerOfManager .
}
```",5,10,6,3,2,3,3,71,0,0,2,0,0.0,0
391,32,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find films where Michael Ballhaus was cinematographer
  ?film dbo:filmCinematographer dbr:Michael_Ballhaus .
  
  # Find actors in those films
  ?film dbo:starring ?actor .

  # Ensure the actor is native to Cincinnati, Ohio (Hub City)
  ?actor dbo:nativePlace dbr:Cincinnati,_Ohio .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
54,62,test,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor
  dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava dbo:predecessor ?predecessor .

  # Thado Minsaw of Prome's parent
  dbr:Thado_Minsaw_of_Prome dbo:parent ?thadoParent .

  # Thinkhaya of Pagan's child and its father (Thinkhaya)
  dbr:Thinkhaya_of_Pagan dbo:child ?thinkhayaChild .
  ?thinkhayaChild dbo:father dbr:Thinkhaya_of_Pagan .

  # The person we are looking for
  FILTER (?predecessor = ?thadoParent && ?predecessor = ?thinkhayaChild)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
488,49,test,"Give me the birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Find the commander in the Boshin War
  ?commander a dbo:Person ;
             dbo:memberOf ?boshinWar .
  
  # Identify Tokugawa Masako's spouse
  ?masako dbr:Tokugawa_Masako ;
          dbo:spouse ?spouse .

  # Find the father of the spouse and check if he is royalty
  ?spouse dbo:father ?father .
  ?father a dbo:RoyalFamilyMember ; # Assuming RoyalFamilyMember or similar class exists

  # Get the birth place of the father
  ?father dbo:birthPlace ?birthPlace .
  
  # Ensure the commander is linked to the Boshin War
  FILTER EXISTS { ?boshinWar rdfs:label ""Boshin War""@en }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
747,71,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athlete WHERE {
  # Find the decedent's death date
  ?decedent a dbo:Person ;
            dbo:deathDate ?deathDate .

  # Find the athlete born on the same date as the decedent's death date
  ?athlete a dbo:Person, dbo:SoccerPlayer ;
           dbo:birthDate ?birthDate ;
           dbo:birthPlace dbr:Zolotonosha .
  
  FILTER (?birthDate = ?deathDate)

  # Find the band of the person born as ""Shèna""
  ?shena a dbo:Person ;
         rdfs:label ""Shèna""@en ;
         dbo:band ?band1 .

  # Find the writer of Amba Shepherd's song
  ?song a dbo:Song ;
        dbo:lyricsBy ?writer .
  
  FILTER (str(?song) = str(dbr:Amba_Shepherd_song)) # Assuming there is a specific resource for the song

  # Find the band associated with this writer
  ?writer dbo:band ?band2 .

  # Ensure both bands are found
  VALUES (?band1 ?band2) { (dbr:Band_of_Shèna dbr:Band_of_Writer) }
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
492,63,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify Frédéric-Georges Herr as a person involved in military conflicts
  dbr:Frédéric-Georges_Herr a dbo:Person ;
                            dbo:militaryConflict ?conflict .

  # Find the capital of Algeria (Algiers)
  dbr:Algiers a dbo:Settlement, dbo:CapitalCity ;
             rdfs:label ""Algiers""@en .

  # Identify people who died in Algiers
  ?person a dbo:Person ;
          dbo:deathPlace dbr:Algiers .

  # Connect the military conflict and death place to find the commander
  ?conflict dbo:commander ?commander .
  
  # Ensure the person is related to works of authors of French Algeria
  OPTIONAL {
    ?author a dbo:Writer ;
            dbo:work ?work .
    ?work dbo:subject dbr:French_Algeria .
    ?person dbo:deathPlace ?place .
    FILTER (?place = dbr:Algiers)
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
617,68,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochusIII a dbo:Person ;
                rdfs:label ""Antiochus III the Great""@en .
  
  ?antiochus dbr:Antiochus_IV_Soter ;
             dbo:childOf ?antiochusIII .

  # Child of Antiochus (son of Antiochus III the Great)
  ?grandchild1 dbo:childOf ?antiochus .

  # Grandchild of Antiochus
  ?greatGrandchild1 dbo:childOf ?grandchild1 .

  # Antiochus II Theos and his successor who is royalty
  ?antiochusII a dbo:Person ;
               rdfs:label ""Antiochus_II_theos""@en .
  
  ?successor dbr:Seleucus_II_Callinicus ; # Example successor, adjust as needed
             dbo:childOf ?antiochusII ;
             rdf:type dbo:Monarch .

  # Child of the royal successor of Antiochus II Theos
  ?childSuccessor dbo:childOf ?successor .

  # Spouse relationship
  ?parent dbo:spouse ?childSuccessor .
  
  # Ensure the parent is also a parent of the great-grandchild of Antiochus (son of Antiochus III)
  ?parent dbo:parentOf ?greatGrandchild1 .
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
981,19,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of Time in Indonesia.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:author dbr:Kamikaze_Girls .
  ?person dbo:title ?title .
  FILTER (CONTAINS(LCASE(str(?title)), ""beauty queen"") || CONTAINS(LCASE(str(?title)), ""miss""))
  ?person dbo:birthPlace ?birthPlace .
  
  OPTIONAL {
    ?region a dbo:Region ;
            rdfs:label ""Time""@en .
    ?person dbo:location ?region .
  }
}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
378,60,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?triggeRole ?gahnWar WHERE {
  # Find Thomas Trigge's role in a war
  ?trigge a dbo:MilitaryPerson ;
          dbo:role ?triggeRole .
  
  # Find Carl Pontus Gahn's birth name and the war he was involved in
  ?gahn dbr:Carl_Pontus_Gahn ;
        rdfs:label ""Carl Pontus Gahn""@en ;
        dbo:birthName ?gahnBirthName .
  
  ?war a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent ;
       dbo:participant ?gahn .

  # Ensure the war is common between Trigge and Gahn
  ?triggeRole dbo:relatedToWar ?commonWar .
  FILTER (?commonWar = ?war)
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
9,33,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for alma mater of Royal Medal awardees
SELECT DISTINCT ?awardee ?almaMater WHERE {
  ?awardee dbo:award ?medal .
  ?medal rdfs:label ""Royal Medal""@en .
  OPTIONAL { ?awardee dbo:almaMater ?almaMater . }
}

# Query for alma mater of John Alderdice, Baron Alderdice
SELECT DISTINCT ?person ?almaMater WHERE {
  ?person rdfs:label ""John Alderdice, Baron Alderdice""@en .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,18,test,"Give me the birth place of the person born, that is a beauty queen, as  and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:title ?title .
  FILTER (CONTAINS(LCASE(STR(?title)), ""beauty queen"")).
  
  ?person dbo:birthPlace ?birthPlace .

  OPTIONAL { 
    ?region dbr:Salak .
    ?person dbo:region ?region .
  }
}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
54,49,test,"Give me the child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi a dbo:Person ;
                   dbo:father ?father .

  # Find the child of Soe Min Wimala Dewi's father
  ?father dbo:child ?child1 .

  # Find Thihapate of Mohnyin's child who is an office holder and royalty
  dbr:Thihapate_of_Mohnyin dbo:child ?thihapateChild .
  ?thihapateChild a dbo:OfficeHolder ;
                  a dbo:Royalty .

  # Ensure the child from Soe Min Wimala Dewi's father is the predecessor of Thihapate's child
  FILTER (?child1 = ?thihapateChild)
  
  # Return the child that satisfies both conditions
  BIND(?child1 AS ?child)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,48,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryConflict WHERE {
  ?emilioMola a dbo:Person ;
              rdfs:label ""Emilio Mola""@en .
  
  ?commanderRole dbo:agent ?emilioMola ;
                 dbo:militaryCommanderOf ?militaryForce .

  ?militaryConflict dbo:participatedIn ?militaryForce ;
                    a dbo:MilitaryConflict, dbo:SocietalEvent .

  FILTER (CONTAINS(LCASE(?militaryConflict), ""francoist spain""))
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
303,27,test,"Give me the party of Guillermo Endara and party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?endaraParty ?ariasBirthDate ?valleCountry WHERE {
  # Guillermo Endara's political party
  dbr:Guillermo_Endara a dbo:Person .
  dbr:Guillermo_Endara dbo:politicalParty ?endaraParty .

  # Arnulfo Arias Madrid as a politician and his birth date
  dbr:Arnulfo_Arias_Madrid a dbo:Politician ;
                          dbo:birthDate ?ariasBirthDate .

  # El Valle de Antón's country
  dbr:El_Valle_de_Antón dbo:country ?valleCountry .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
488,45,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?birthPlace ?deathPlace WHERE {
  # Find Tokugawa Masako's spouse who is royalty
  ?spouse a dbo:Person ;
          dbo:spouse dbr:Tokugawa_Masako ;
          rdf:type dbo:Royalty .

  # Find the father of this royal spouse and his administration
  ?father dbo:child ?spouse .
  OPTIONAL { ?father dbo:officeHolder ?administration . }

  # Get the birth place of Enomoto Takeaki
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .

  # Get the death place of Tokugawa Ieyasu
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",5,6,6,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
281,61,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit ?birthPlaceCountry WHERE {
  ?person a dbo:Person .
  ?person dbo:officeHolder true .
  ?person dbo:politician true .
  ?person dbo:memberOf ?nzArmy .
  ?nzArmy a dbo:MilitaryUnit ;
          dbo:militaryBranch dbr:New_Zealand_Army .

  ?person dbo:leaderOf ?election .
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 1962 && CONTAINS(LCASE(STR(?election)), ""new south wales""))

  ?militaryUnit dbo:member ?person .
  
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .

  BIND(?birthPlace AS ?birthPlaceCountry)
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
421,23,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Dino Merlin's birth name
  VALUES (?dinoMerlin) { dbr:Dino_Merlin }
  ?dinoMerlin dbo:birthName ?birthName .

  # Find a person with the same birth name who is a band member
  ?person dbo:birthName ?birthName .
  ?person dbo:bandMember ?band .

  # Check if the band has any awards or nominations
  ?band dbo:award ?award .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
801,19,test,Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?actor WHERE {
  # Query for the producer of ""Westside Story"" (song)
  dbr:Westside_Story_(song) dbo:producer ?producer .

  # Query for the actor who portrayed The Shadow
  dbr:The_Shadow dbo:portrayedBy ?actor .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
994,44,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtistMeshuggah ?associatedArtistSlayer WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  ?dokken a dbo:Person ;
          foaf:name ""Donald Maynard Dokken"" ;
          dbo:musicalArtist true .

  # Step 2: Find band members of Dokken
  ?bandMember dbo:bandMember ?dokken .

  # Step 3: Identify Meshuggah's associated musical artists
  ?meshuggah a dbo:Band ;
             foaf:name ""Meshuggah"" .
  ?associatedArtistMeshuggah dbo:associatedBand ?meshuggah .

  # Step 4: Identify S.A. Slayer's associated musical artists
  ?sASlayer a dbo:Person ;
            foaf:name ""S.A. Slayer"" .
  ?associatedArtistSlayer dbo:associatedBand ?sASlayer .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,36,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Jon Pertwee entity
  dbr:Jon_Pertwee a dbo:Person .
  
  # His child
  ?child dbo:parent dbr:Jon_Pertwee ;
         a dbo:Person .

  # The settlement where the child is native and resides
  ?settlement a dbo:Settlement ;
              dbo:nationality dbr:United_Kingdom ;
              dbo:residence ?child ;
              dbo:birthPlace ?child .
  
  # Politician who is an office holder in France, residing in the same settlement
  ?politician a dbo:Politician , dbo:OfficeHolder ;
              dbo:officeLocation ?settlement ;
              dbo:nationality dbr:France .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
404,64,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  # Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia a dbo:Person ;
    dbo:spouse ?spouse .

  # Spouse's father and his child who is royalty
  ?spouse dbo:father ?father .
  ?father dbo:child ?royaltyChild .
  ?royaltyChild a dbo:Royalty .

  # Check if this royalty child is also the parent of Prince Ernest Augustus of Hanover (born 1914)
  ?royaltyChild dbo:parent dbr:Prince_Ernest_Augustus_of_Hanover_(1914) .

  # Get birth name of Princess Victoria Louise
  dbr:Princess_Victoria_Louise_of_Prussia dbo:birthName ?birthName .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,36,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Compton,_California .

  ?film a dbo:Film ;
        dbo:actor ?person ;
        dbo:televisionSeries ?tvShow .

  FILTER EXISTS { ?tvShow a dbo:TelevisionProgram }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
9,55,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Step 1: Find the person who received the Royal Medal and is associated with Queen's University Belfast
  ?person a dbo:Person ;
          dbo:award dbr:Royal_Medal ;
          dbo:honoraryTitle dbr:Queen's_University_Belfast .

  # Step 2: Identify the alma mater of this person
  ?person dbo:almaMater ?almaMater1 .

  # Step 3: Find a politician who was mayor during the Northern Ireland Forum and their alma mater
  ?mayor a dbo:Person ;
         dbo:occupation dbr:Politician ;
         dbo:officeHolder dbr:Northern_Ireland_Forum_Mayor .
  
  ?mayor dbo:almaMater ?almaMater2 .

  # Step 4: Ensure the alma mater is common
  FILTER (?almaMater1 = ?almaMater2)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
328,40,test,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Joseph Stalin""@en .
  
  OPTIONAL { 
    ?commanderRole dbo:roleName ?roleName .
    ?commanderRole dbo:agent ?person .
    FILTER (CONTAINS(LCASE(?roleName), ""eastern front"") || CONTAINS(LCASE(?roleName), ""people's commissariat of defense""))
  }
  
  OPTIONAL {
    ?award dbo:recipient ?person .
    FILTER (
      CONTAINS(LCASE(STR(?award)), ""volcano campaign"") ||
      CONTAINS(LCASE(STR(?award)), ""ryukyu islands campaign"")
    )
  }
}
```",5,5,6,3,3,3,3,71,0,1,1,0.0,0.0,0
626,16,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?conflict WHERE {
  # Identify Aleksey Petrovich Yermolov
  dbr:Aleksey_Petrovich_Yermolov a dbo:Person ;
    dbo:award ?award ;
    dbo:militaryConflictCommanderOf ?conflict .

  # Ensure the conflict is under Alexander I of Russia
  ?conflict dbo:commander ?commander .
  FILTER (?commander = dbr:Aleksandr_I_of_Russia)
}
```",4,5,5,2,2,3,2,20,0,0,21,0,0.0,0
465,8,test,"Give me the death place of Jiřina Štěpničková and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?leader ?party WHERE {
  # Part 1: Death place of Jiřina Štěpničková
  OPTIONAL {
    dbr:Ji%C5%99ina_%C5%A0t%C4%9Bpnickov%C3%A1 dbo:deathPlace ?deathPlace .
  }
  
  # Part 2: Leader and political party of the Chamber of Deputies of the Czech Republic
  dbr:Czech_Parliament/dbo:chamberOfDeputies ?chamber .
  ?chamber dbo:leader ?leader .
  OPTIONAL {
    ?leader dbo:party ?party .
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
488,65,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Matsudaira Tadamasa's father
SELECT ?father WHERE {
  dbr:Matsudaira_Tadamasa dbo:parent ?father .
}

# Step 2: Find the grandfather (father of Matsudaira Tadamasa's father)
SELECT ?grandfather WHERE {
  ?father dbo:parent ?grandfather .
  FILTER EXISTS { ?grandfather a dbo:Politician . }
}

# Step 3: Find Emperor Go-Mizunoo's father and his administration
SELECT ?emperorFather ?administration WHERE {
  dbr:Emperor_Go-Mizunoo dbo:father ?emperorFather .
  ?emperorFather dbo:administers ?administration .
}

# Step 4: Find the commander in the Boshin War and their birthplace
SELECT ?commander ?birthPlace WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:militaryConflict dbr:Boshin_War .
  ?commander dbo:birthPlace ?birthPlace .
}

# Final step: Get the death place of the grandfather who was a politician
SELECT ?deathPlace WHERE {
  ?grandfather dbo:deathPlace ?deathPlace .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
488,68,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Saitō Hajime's birth place
  ?saitoHajime a dbo:Person ;
               rdfs:label ""Saitō Hajime""@en .
  
  # War that is a military conflict, event, and societal event
  ?war a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent ;
       dbo:commander ?saitoHajime .

  # Saitō Hajime's birth place
  ?saitoHajime dbo:birthPlace ?birthPlace .

  # Matsudaira Tadamasa's father and administration of Emperor Go-Mizunoo
  ?matsudairaTadamasa a dbo:Person ;
                      rdfs:label ""Matsudaira Tadamasa""@en .
  
  ?father a dbo:Person ;
          dbo:child ?matsudairaTadamasa ;
          dbo:administratorOf dbr:Emperor_Go-Mizunoo .

  # Matsudaira Tadamasa's paternal grandfather
  ?grandfather a dbo:Person, dbo:Politician, dbo:OfficeHolder ;
               dbo:parent ?father .
  
  # Death place of the grandfather
  ?grandfather dbo:deathPlace ?deathPlace .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
184,57,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg and parent of the child of Archduke Joseph Francis of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Find the grandparent of Archduke Ladislaus Philipp
  ?grandparent dbo:child ?parent .
  ?parent dbo:child dbr:Archduke_Ladislaus_Philipp_of_Austria .

  # The parent must be royalty and a parent to Géza von Habsburg
  ?parent rdf:type dbo:RoyalFamilyMember .
  ?parent dbo:child dbr:Géza_von_Habsburg .

  # Ensure the individual is also connected through their child to Archduke Joseph Francis
  ?parent dbo:child ?intermediateChild .
  ?intermediateChild dbo:child dbr:Archduke_Joseph_Francis_of_Austria .

  BIND(?parent AS ?individual)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,50,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  # Step 1: Identify Matsudaira Tadamasa's father
  ?matsudairaTadamasa a dbo:Person ;
                      rdfs:label ""Matsudaira Tadamasa""@en .
  
  ?matsudairaFather dbo:father ?matsudairaTadamasa .

  # Step 2: Determine the grandfather on the paternal side of Matsudaira Tadamasa
  ?grandfather1 dbo:father ?matsudairaFather .

  # Step 3: Find the office holder role of this grandfather
  OPTIONAL { ?officeHolderRole dbo:officeHolder ?grandfather1 . }

  # Step 4: Identify Emperor Go-Mizunoo's father and his administrative role
  ?goMizunoo a dbo:Person ;
             rdfs:label ""Emperor Go-Mizunoo""@en .
  
  ?goMizunooFather dbo:father ?goMizunoo .

  OPTIONAL { ?adminRole dbo:administrator ?goMizunooFather . }

  # Step 5: Identify the politician father of Emperor Go-Mizunoo's father
  ?grandfather2 dbo:father ?goMizunooFather .
  
  OPTIONAL { ?politicianRole dbo:politician ?grandfather2 . }

  # Step 6: Find the death place of this politician
  ?deathPlace dbo:deathPlace ?grandfather2 .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,56,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to the name of Italian People's Party (1994).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?prodiParty ?andreottiParty WHERE {
  # Romano Prodi's birth name and party affiliation
  dbr:Romano_Prodi a dbo:Person .
  dbr:Romano_Prodi dbo:birthName ?birthName .
  OPTIONAL { dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty . }

  # Giulio Andreotti's party affiliation
  dbr:Giulio_Andreotti a dbo:Person .
  OPTIONAL { dbr:Giulio_Andreotti dbo:partyAffiliation ?andreottiParty . }

  # Reference to Italian People's Party (1994)
  FILTER EXISTS {
    ?party a dbo:PoliticalParty ;
           rdfs:label ""Italian People's Party (1994)""@en .
  }
}
```",6,8,7,3,3,3,3,71,0,1,1,0.0,0.0,0
232,66,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfResidence WHERE {
  # Step 1: Identify Sean Pertwee
  dbr:Sean_Pertwee a dbo:Person ;
                   dbo:actor ?filmOrConflict .

  # Step 2: Find films and military conflicts associated with him
  ?filmOrConflict rdf:type ?type .
  
  FILTER (?type IN (dbo:Film, dbo:MilitaryConflict))

  # Step 3: Identify the politician/office holder from France who is also an actor
  ?politicianActor a dbo:Person ;
                  dbo:actor ?filmOrConflict ;
                  dbo:nationality dbr:France ;
                  dbo:officeHolder ?office .

  # Step 4: Determine the native place of this person
  ?politicianActor dbo:birthPlace ?nativePlace .

  # Step 5: Find the residence of this politician/actor
  ?politicianActor dbo:residence ?residence .

  # Step 6: Ensure the settlement is British
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Step 7: Identify who is native to this British settlement
  ?nativeOfResidence dbo:nativePlace ?residence .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
378,64,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?triggeFame WHERE {
  # Find Thomas Trigge's notable achievements
  ?trigge a dbo:MilitaryPerson ;
          rdfs:label ""Thomas Trigge""@en .
  
  # Link to Joaquín Blake's war (Peninsular War)
  ?war dbo:name ?warName ;
       dbo:participatedIn ?joaquinBlake .
  ?joaquinBlake rdfs:label ""Joaquín Blake y Jordán""@en .

  # Find Carl Pontus Gahn by birth name
  ?gahn a dbo:Person ;
        dbo:birthName ?birthName .
  FILTER (?birthName = ""Carl Pontus Gahn""@en)

  # Link Thomas Trigge's fame to the war and notable events
  ?trigge dbo:participatedIn ?war .
  ?trigge dbo:notableWork ?triggeFame .

  # Ensure all conditions are met
  FILTER (?warName = ""Peninsular War""@en)
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,48,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?almaMater WHERE {
  ?mayor a dbo:Person ;
         dbo:officeHolderOf dbr:Belfast ;
         dbo:politicalParty ?party .
  
  OPTIONAL { ?mayor dbo:almaMater ?almaMater . }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
528,54,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?militaryForce WHERE {
  # Find the war associated with the Battle of Pisagua
  dbr:Battle_of_Pisagua dbo:participatedIn ?war .

  # Identify the commander involved in a work on January 9th
  ?work dbo:date ""2000-01-09""^^xsd:date .
  ?commander dbo:commanded ?work .

  # Find the military force of Narciso Campero
  dbr:Narciso_Campero dbo:militaryForce ?militaryForce .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
161,46,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryConflictFrancisco ?militaryForceJoseAntonio WHERE {
  # Francisco Largo Caballero's military conflict
  dbr:Francisco_Largo_Caballero dbo:associatedWith ?militaryConflictFrancisco .
  ?militaryConflictFrancisco a dbo:MilitaryConflict ;
                           dbo:socialEvent ?societalEvent .

  # José Antonio Primo de Rivera's military force
  dbr:José_Antonio_Primo_de_Rivera dbo:memberOf ?militaryForceJoseAntonio .
  ?militaryForceJoseAntonio a dbo:MilitaryOrganization ;
                           dbo:event ?event .
  
  FILTER EXISTS { ?societalEvent a dbo:SocietalEvent }
  FILTER EXISTS { ?event a dbo:Event }
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
184,25,test,Give me the child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonIndividual WHERE {
  # Find child of Archduke Joseph August
  ?child a dbo:Person ;
         dbo:parent dbr:Archduke_Joseph_August_of_Austria .
  
  # Find child of Archduke Joseph Francis
  ?grandChild a dbo:Person ;
              dbo:parent ?commonIndividual .
  
  # Ensure the common individual is also a parent to one of these children
  ?child dbr:Archduke_Joseph_Francis_of_Austria ;
         dbo:parent ?commonIndividual .

}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,67,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?campaign a dbo:MilitaryConflict ;
            dbo:participatedIn ?societalEvent ;
            dbo:relatedTo dbr:Rutger_Jan_Schimmelpenninck ;
            dbo:commander ?commander .
  
  ?militaryForce a dbo:MilitaryUnit, dbo:Organisation ;
                 dbo:knownAs ""Polish Horse"" .

  FILTER (STRSTARTS(STR(?campaign), ""German campaign of 1813""))
}
```",7,14,8,3,3,3,3,71,0,0,7,0,0.0,0
16,57,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Ted McGinley's spouse
  dbr:Ted_McGinley dbo:spouse ?spouse .

  # Check if the spouse was born as Gigi Rice
  ?spouse dbo:birthName ""Gigi Rice""@en .

  # Get the actor from the TV series ""Unnatural""
  ?unnaturalActor dbo:actor dbr:Unnatural .
  
  # Ensure the spouse is in the same profession as the actor
  ?spouse rdf:type ?profession .
  ?unnaturalActor rdf:type ?profession .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
492,56,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Death at Khemis Miliana (capital of Khemis Miliana District)
  ?deathPlace1 rdfs:label ""Khemis Miliana""@en ;
              dbo:country dbr:Algeria .
  ?person dbo:deathPlace ?deathPlace1 .

  # Death associated with Joseph C. Satterthwaite's work
  ?workLocation rdfs:label ?satterthwaiteWorkLabel .
  ?satterthwaiteWorkLabel bif:contains ""US Assistant Secretary of State for African Affairs""@en ;
                         dbo:employee dbr:Joseph_C._Satterthwaite .
  ?person dbo:deathPlace ?workLocation .

  # Commander in Franco-Hova Wars
  ?francoHovaWars rdfs:label ""Franco-Hova Wars""@en .
  ?person dbo:occupation ?role .
  ?role rdfs:label ?warRoleLabel .
  FILTER (CONTAINS(LCASE(?warRoleLabel), ""commander"") && CONTAINS(LCASE(?francoHovaWars), ""franchohova wars""))
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,18,test,"Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Nie Rongzhen's award
  dbr:Nie_Rongzhen dbo:award ?award .
  
  # The Boils' birthplace and classification as a band
  dbr:The_Boils a dbo:Band ;
                dbo:birthPlace ?birthPlace .

  # Landmark with elevation at the same location as Nie Rongzhen's award and The Boils' birthplace
  ?landmark a dbo:Landmark ;
            dbo:elevation ?elevation ;
            dbo:location ?award .
  
  FILTER (?birthPlace = ?award)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
328,49,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOfOffice WHERE {
  # Find Gustav Jonson's leadership role in a government agency
  ?gustavJonson a dbo:Politician ;
                dbo:officeHolder ?office .
  ?office dbo:leader ?governmentAgencyLeader .
  ?governmentAgencyLeader a dbo:GovernmentAgency .

  # Identify the leader of this office who is also an office holder and politician
  ?leaderOfOffice a dbo:Politician ;
                  dbo:officeHolder ?officeLeader ;
                  dbo:leader ?governmentAgency .

  # Connect to Bruce Fraser through his award
  ?bruceFraser a dbo:AwardRecipient ;
               dbo:award dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
778,20,test,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v5 <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v5 <http://dbpedia.org/ontology/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?author a dbo:Person .
  ?author dbo:nationality dbr:United_States .
  ?author dbo:award dbr:Wolf_Prize_in_Medicine .
  ?work dbo:software ?software .
  ?software rdfs:label ""Pushd""@en .
  ?software rdfs:label ""Popd""@en .
  ?author dbo:creatorOf ?work .
  
  OPTIONAL { ?author dbo:award ?entity . }
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
427,65,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnusFatherParty ?prodiParty (dbr:Italian_People's_Party_(1994) AS ?ippReference)
WHERE {
  # Find an alumnus of MIT
  ?alumnus dbo:alumnusOf dbr:Massachusetts_Institute_of_Technology .
  
  # Get the father of this alumnus and his party affiliation
  ?father dbo:child ?alumnus .
  ?father dbo:partyAffiliation ?alumnusFatherParty .

  # Find Romano Prodi's political party when he was an office holder and politician
  dbr:Romano_Prodi a dbo:Politician ;
                   dbo:officeHolderOf ?office ;
                   dbo:partyAffiliation ?prodiParty .
  
  # Reference to the Italian People's Party (1994)
  BIND(dbr:Italian_People's_Party_(1994) AS ?ippReference)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,53,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderRole ?militaryConflict WHERE {
  # Identify Emilio Mola and his military command role
  dbr:Emilio_Mola a dbo:Person .
  dbr:Emilio_Mola dbo:militaryCommanderFor ?commanderRole .

  # Find the military conflict related to Francoist Spain and Spanish Civil War
  ?militaryConflict a dbo:MilitaryConflict ;
                   dbo:participatedIn ?event ;
                   rdfs:label ?conflictLabel .
  
  FILTER (CONTAINS(LCASE(?conflictLabel), ""spanish civil war"") || 
          CONTAINS(LCASE(?conflictLabel), ""francoist spain""))

  # Link the commander role to the military conflict
  ?commanderRole dbo:participatedIn ?militaryConflict .
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
645,20,test,"Give me the alma mater of the child of the parent of Adela Pankhurst and entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?country WHERE {
  # Step 1: Find Adela Pankhurst's parent
  ?parent a dbo:Person ;
          dbo:child dbr:Adela_Pankhurst .

  # Step 2: Find the child of that parent (could be another sibling or Adela herself)
  ?child a dbo:Person ;
         dbo:parent ?parent .

  # Step 3: Determine the alma mater of this child
  ?child dbo:almaMater ?almaMater .

  # Step 4: Identify commander in Battle of Diamond Rock
  ?battle dbr:Battle_of_Diamond_Rock ;
          dbo:commander ?commander .

  # Step 5: Find the residence country of this commander
  ?commander dbo:residence ?residence .
  ?residence a dbo:Country ; 
             rdfs:label ?countryLabel .
  
  FILTER (lang(?countryLabel) = 'en')
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
182,25,test,Give me the war of the work of Gotabhaya Rajapaksa and war of the author of 2019 Sri Lanka Easter bombings and entity in Sri Lanka.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gotabhayaWar ?zahranHashim ?sriLankaEntity WHERE {
  # Gotabhaya Rajapaksa's role in the war
  dbr:Gotabhaya_Rajapaksa dbo:role ?gotabhayaRole .
  ?gotabhayaRole dbo:relatedWork ?gotabhayaWar .
  
  # Zahran Hashim as author of the bombings
  dbr:Zahran_Hashim dbo:birthPlace ?zahranBirthPlace .
  FILTER (STRSTARTS(STR(?zahranBirthPlace), ""http://dbpedia.org/resource/Sri_Lanka""))
  
  # Entity in Sri Lanka
  ?sriLankaEntity a dbo:Country ;
                  rdfs:label ""Sri Lanka""@en .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
16,26,test,Give me the professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?profession WHERE {
  ?series a dbo:TVSeries ;
          rdfs:label ""Unnatural (TV series)""@en .
  
  ?series dbo:actor ?actor .

  OPTIONAL { 
    ?actor dbo:profession ?profession .
  }
}
```",3,3,4,3,1,3,3,71,0,0,40872,0,0.0,0
184,44,test,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Archduke Joseph Karl of Austria's child
  ?child1 dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Child of that child (grandchild of Archduke Joseph Karl)
  ?greatGrandchild dbo:parent ?child1 .

  # The person we are looking for is the parent of this great-grandchild
  ?person dbo:child ?greatGrandchild .

  # Ensure this person is also a parent of Géza von Habsburg
  dbr:Géza_von_Habsburg dbo:parent ?person .

  # Ensure this person is a parent of the child of Archduke Joseph Francis
  ?child2 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  ?person dbo:child ?child2 .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
838,16,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?yugrupa a dbo:Band ;
           rdfs:label ""YU Grupa""@en .
  
  ?yugrupa dbo:bandMember ?bandMember .

  ?bandMember a ?type .
  FILTER (
    ?type = dbo:Artist || 
    ?type = dbo:MusicalArtist
  )
}
```",4,7,5,2,2,3,2,20,0,2,5,0.0,0.0,0
427,45,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiBirthName ?andreottiParty WHERE {
  # Romano Prodi's birth name and party affiliation
  OPTIONAL {
    dbr:Romano_Prodi a dbo:Person .
    dbr:Romano_Prodi dbo:birthName ?prodiBirthName .
    OPTIONAL { 
      dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
      FILTER (str(?prodiParty) = str(dbr:Partito_Popolare_Italiano))
    }
  }

  # Giulio Andreotti's party affiliation
  OPTIONAL {
    dbr:Giulio_Andreotti a dbo:Person .
    dbr:Giulio_Andreotti dbo:partyAffiliation ?andreottiParty .
    FILTER (str(?andreottiParty) = str(dbr:Partito_Popolare_Italiano))
  }
}
```",5,7,6,3,3,3,3,71,0,1,1,0.0,0.0,0
994,54,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of Don Dokken.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the associated musical artist of Watchtower
SELECT ?associatedArtist WHERE {
  dbr:Watchtower dbo:associatedBand ?associatedArtist .
}

# Step 2: Identify a band member of this artist who is also a band/group/organization
SELECT ?bandMember WHERE {
  ?artist dbo:associatedBand ?bandMember .
  FILTER EXISTS { ?bandMember a (dbo:Band|dbo:MusicalGroup|dbo:Organization) }
  VALUES ?artist { <INSERT_ASSOCIATED_ARTIST_URI_HERE> } # Replace with actual URI from Step 1
}

# Step 3: Determine the associated musical artist of this band member
SELECT ?finalArtist WHERE {
  ?bandMember dbo:associatedBand ?finalArtist .
  VALUES ?bandMember { <INSERT_BAND_MEMBER_URI_HERE> } # Replace with actual URI from Step 2
}

# Step 4: Find the band that Fredrik Thordendal is part of
SELECT ?thordendalBand WHERE {
  dbr:Fredrik_Thordendal dbo:bandMember ?thordendalBand .
}

# Step 5: Identify a band member of Don Dokken
SELECT ?dokkenBandMember WHERE {
  dbr:Don_Dokken dbo:bandMember ?dokkenBandMember .
}
```

Note: The placeholders `<INSERT_ASSOCIATED_ARTIST_URI_HERE>` and `<INSERT_BAND_MEMBER_URI_HERE>` need to be replaced with actual URIs obtained from the results of previous queries.",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
92,48,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to get artist(s) of the 2006 film ""Nevermore""
SELECT ?artist WHERE {
  ?film a dbo:Film .
  ?film rdfs:label ""Nevermore (2006 film)""@en .
  ?film dbo:starring ?artist .
}

UNION

# Query to find band associated with Joseph Michael Furney
SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael Furney""@en ;
          dbo:birthDate ?date .
  ?person dbo:memberOfBand ?band .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,70,test,"Give me the parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Seti I's lineage
  ?setiI a dbo:Person ;
         foaf:name ""Seti I""@en .
  
  ?child1 dbo:parent ?setiI ;
          a dbo:Person .

  ?grandChild dbo:parent ?child1 ;
              a dbo:Person .

  ?parentOfGrandChild dbo:child ?grandChild ;
                      a dbo:Person .

  # Commander in Battle of Perire
  ?battle dbr:Battle_of_Perire ;
          dbo:commander ?commander .
  
  ?fatherOfCommander dbo:child ?commander ;
                     a dbo:Person .

  ?spouseOfFather dbp:spouse ?fatherOfCommander ;
                  a dbo:Person .

  # Intersection and royalty check
  FILTER (?parentOfGrandChild = ?spouseOfFather)
  FILTER EXISTS { ?person dbo:royalty true . }

  # Parent of Nefertari's child
  ?nefertari dbr:Nefertari ;
             a dbo:Person .
  
  ?childOfNefertari dbo:parent ?nefertari ;
                    a dbo:Person .

  FILTER (?person = ?parentOfGrandChild)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
281,45,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit WHERE {
  ?person a dbo:Person .
  ?person dbo:officeHolder ?office .
  ?person dbo:politician ?politics .
  ?person dbo:memberOf ?unit .
  ?unit a dbo:MilitaryUnit ;
        dbo:member ?militaryMember .
  ?militaryMember dbo:rank ""Beauchamp Seymour, 1st Baron Alcester""^^xsd:string .
  ?unit dbo:partOf dbr:New_Zealand_Army .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
712,19,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?restingPlace WHERE {
  # Find the capital of Ukraine
  ?country a dbo:Country ;
           rdfs:label ""Ukraine""@en .
  ?country dbo:capital ?capital .

  # Find an awardee from the Soviet Union and their resting place
  ?award a dbo:Award ;
         dbo:awardedBy dbr:Soviet_Union .
  ?person dbo:recipient ?award ;
          dbo:deathPlace ?restingPlace .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
959,56,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?manager a dbo:Person .
  ?manager dbo:nationality dbr:Japan .
  ?manager dbo:almaMater ?university .
  ?university dbo:country dbr:Japan ;
              rdf:type dbo:EducationalOrganization, dbo:University .
  
  ?teamManager dbo:teamManager ?manager .
  ?teamManager dbo:season ""1998""^^xsd:string .
  ?teamManager dbo:team dbr:Kashima_Antlers .

  ?eiji dbo:almaMater ?university .
  ?eiji rdfs:label ""Eiji Ōtsuka""@en .
}
```",6,11,7,3,3,3,3,71,0,0,2,0,0.0,0
404,61,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalParent WHERE {
  # Step 1: Prince George William of Hanover
  ?princeGeorge a dbo:Person ;
               rdfs:label ""Prince George William of Hanover""@en .
  
  # Step 2: His parent who is royalty
  ?parent1 dbo:child ?princeGeorge ;
           a dbo:RoyalFamilyMember .

  # Step 3: Child of this royal parent (also royalty)
  ?royalChild dbo:parent ?parent1 ;
              a dbo:RoyalFamilyMember .

  # Step 4: Princess Victoria Louise of Prussia
  ?princessVictoriaLouise a dbo:Person ;
                         rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  # Step 5: Father of her spouse
  ?spouseFather dbo:child ?spouse .

  ?spouse dbo:spouse ?princessVictoriaLouise ;
          dbo:father ?spouseFather .

  # Step 6: Parent (royalty) of this person
  ?parent2 dbo:child ?spouseFather ;
           a dbo:RoyalFamilyMember .

  # Step 7: Child of this royal parent
  ?finalChild dbo:parent ?parent2 ;
              a dbo:RoyalFamilyMember .

  # Step 8: Parent of this child
  ?finalParent dbo:child ?finalChild .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
294,27,test,"Give me the entity in the birth place, that is a settlement, of Marion James and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?result <http://dbpedia.org/ontology/location> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Marion James's birthplace
  ?marion a dbo:Person ;
          foaf:name ""Marion James"" .
  ?marion dbo:birthPlace ?birthPlace .
  
  # Ensure the birth place is a settlement
  ?birthPlace a dbo:Settlement .

  # Architect of P. D. Houston Jr. House and their resting place
  ?house dbr:P._D._Houston_Jr._House ;
         dbo:architect ?architect .
  ?architect dbo:deathPlace ?restingPlaceArchitect .

  # Resting place of Luke Lea (American politician, born 1879)
  ?luke a dbo:Person ;
        foaf:name ""Luke Lea"" ;
        dbo:birthDate ?dateL ;
        dbo:deathPlace ?restingPlaceLuke .
  FILTER(YEAR(?dateL) = 1879)

  # Check if the birth place of Marion James is the same as the resting places
  FILTER (?birthPlace = ?restingPlaceArchitect && ?birthPlace = ?restingPlaceLuke)
  
  BIND(?birthPlace AS ?settlement)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,69,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  # Step 1: Identify Joseph Michael
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael"" ;
          dbo:birthName ""Joseph Michael""@en .
  
  # Step 2: Find associated musical artist
  ?person dbo:bandMember ?band .
  ?band dbo:member ?artist .

  # Step 3: Link to Jim Sheppard and the band
  ?sheppard a dbo:Person ;
            foaf:name ""Jim Sheppard"" ;
            dbo:bandMember ?sameBand .
  
  FILTER (?band = ?sameBand)

  # Step 4: Connect to Nevermore (2006 film)
  ?film a dbo:Film ;
        foaf:name ""Nevermore""@en ;
        dbo:reference ?band .

  FILTER EXISTS { ?film dbr:Nevermore_(2006_film) }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
701,57,test,Give me the spouse of the father of Merneptah and parent of the child of the child of Seti I and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Merneptah
  ?merneptah a dbo:Person ;
             rdfs:label ""Merneptah""@en .
  
  # Find Ramesses II as the father of Merneptah
  ?ramessesII dbo:child ?merneptah ;
             rdfs:label ""Ramesses II""@en .

  # Find the spouse of Ramesses II
  ?ramessesII dbo:spouse ?spouse .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,68,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardWar ?leaderBirthCountryWar ?heatherRoyWar WHERE {
  # Jonathon Band's award and associated war
  ?jonathonBand a dbo:Person ;
                foaf:name ""Jonathon Band"" .
  ?jonathonBand dbo:award ?award .
  ?award dbo:relatedWorkOrEvent ?awardWar .

  # Leader of the 1962 NSW election, their birthplace (a country), and associated war
  ?election dbr:1962_New_South_Wales_state_election ;
           dbo:leader ?leader .
  ?leader a dbo:Politician ;
          dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
  ?birthPlace dbo:relatedWorkOrEvent ?leaderBirthCountryWar .

  # Heather Roy's military unit profession and associated war
  ?heatherRoy a dbo:Person ;
              foaf:name ""Heather Roy"" .
  ?heatherRoy dbo:profession ?militaryUnit .
  ?militaryUnit a dbo:MilitaryUnit ;
                dbo:relatedWorkOrEvent ?heatherRoyWar .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
161,31,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?militaryForce WHERE {
  ?person a dbo:Person .
  
  # Identify persons who died during Francoist Spain
  ?deathEvent dbo:place ?deathPlace .
  ?deathEvent dbo:agent ?person .
  ?deathPlace rdfs:label ""Francoist Spain""@en .

  # Link to military conflict (Spanish Civil War)
  ?militaryConflict a dbo:MilitaryConflict ;
                   dbo:name ""Spanish Civil War""@en .
  
  # Find military forces involved in the Spanish Civil War
  ?force dbo:militaryConflict ?militaryConflict .
  ?person dbo:participatedIn ?force .

  BIND(?force AS ?militaryForce)
}
```",4,7,5,3,2,3,3,71,0,0,514,0,0.0,0
820,19,test,Give me the child of the parent of the professional in Actor and professional in the award of Scott McCloud.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v4 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Scott McCloud's awards
  dbr:Scott_McCloud dbo:award ?award .
  
  # Identify the parent of the award
  ?award dbo:parentAward ?parentAward .

  # Determine the child of this parent award
  ?parentAward dbo:child ?child .
}
```",5,5,6,3,2,3,2,20,0,0,128,0,0.0,0
161,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Find person decedent at Francoist Spain
  ?person a dbo:Person ;
          dbo:deathPlace ?place .
  FILTER (CONTAINS(LCASE(STR(?place)), ""francoist spain""))

  # Find predecessor of Indalecio Prieto
  ?indalecioPrieto a dbo:Person ;
                   rdfs:label ""Indalecio Prieto""@en .
  ?predecessor dbo:predecessor ?indalecioPrieto .

  # Find commander in the force, that is an event, of Emilio Mola
  ?emilioMola a dbo:Person ;
              rdfs:label ""Emilio Mola""@en .
  ?force a dbo:MilitaryConflict ;
         dbo:commander ?emilioMola .

  # Connect military forces to societal events and conflicts
  ?militaryForce a dbo:MilitaryConflict ;
                 dbo:societalEvent ?event1, ?event2 ;
                 dbo:militaryConflict ?conflict1, ?conflict2 .
  
  # Link the entities through their involvement in these forces/events/conflicts
  OPTIONAL { ?person dbo:involvedInMilitaryConflict ?militaryForce . }
  OPTIONAL { ?predecessor dbo:involvedInMilitaryConflict ?militaryForce . }
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
16,50,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find the actor of ""Unnatural (TV series)""
  ?actor a dbo:Actor .
  ?actor dbo:actorIn dbr:Unnatural_(TV_series) .

  # Find person born as Gigi Rice
  ?person foaf:name ""Gigi Rice""@en .
  
  # Ensure they are the same individual
  FILTER (?actor = ?person)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
54,22,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .
  
  # Identify the child of Thihapate and Thinkhaya of Pagan
  ?thinkhaya a dbo:Person ;
             rdfs:label ""Thinkhaya of Pagan""@en .
  ?child dbo:parent ?thihapate, ?thinkhaya ;
         a dbo:Person .

  # Ensure the child is an office holder and royalty
  ?child dbo:royaltyTitle ?title ;
         a dbo:OfficeHolder .

  # Find the predecessor of this child
  ?officeHolderPosition dbo:incumbent ?child .
  ?officeHolderPosition dbo:predecessor ?predecessor .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
492,50,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInVerdun ?conflictOrEvent WHERE {
  # Find the commander in the Battle of Verdun
  ?battle a dbo:MilitaryConflict ;
          dbo:commander ?commanderInVerdun .
  FILTER (STR(?battle) = ""http://dbpedia.org/resource/Battle_of_Verdun"")

  # Find another military conflict or event involving this commander
  ?conflictOrEvent dbo:commander ?commanderInVerdun .

  OPTIONAL {
    # Find a person who died in Algiers, the capital of Algeria
    ?decedent a dbo:Person ;
              dbo:deathPlace dbr:Algiers .
    
    # Check if this decedent is related to the commander (e.g., spouse)
    ?commanderInVerdun dbo:spouse ?decedent .
  }
}
```",5,8,6,3,2,3,3,71,0,180,1,0.0,0.0,0
488,67,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEnomoto ?administrationRoyalty ?deathPlacePolitician WHERE {
  # Enomoto Takeaki's birth place
  dbr:Enomoto_Takeaki a dbo:Person ;
                      dbo:birthPlace ?birthPlaceEnomoto .

  # Tokugawa Masako's spouse's father (royalty) and his administration
  dbr:Tokugawa_Masako dbo:spouse ?spouse .
  ?spouse dbo:father ?fatherRoyalty .
  ?fatherRoyalty a dbo:Monarch ;
                dbo:reign ?administrationRoyalty .

  # Matsudaira Tadamasa's father (office holder and politician) and his death place
  dbr:Matsudaira_Tadamasa dbo:father ?fatherOfficeHolder .
  ?fatherOfficeHolder a dbo:Politician, dbo:OfficeHolder ;
                     dbo:deathPlace ?deathPlacePolitician .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
184,59,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?secondLevelChild WHERE {
  # Archduke Ladislaus Philipp of Austria
  ?archduke a dbo:Person ;
            rdfs:label ""Archduke Ladislaus Philipp of Austria""@en .
  
  # First level child
  ?firstLevelChild dbo:childOf ?archduke .

  # Second level child (grandchild)
  ?secondLevelChild dbo:childOf ?firstLevelChild ;
                   a dbo:Royalty .

  # Parent of the second level child
  ?parent dbo:child ?secondLevelChild .

  # Native place is a settlement with specific elevation
  ?nativePlace geo:elevation ""96.0""^^xsd:float ;
               a dbo:Settlement .
  
  ?parent dbo:nativePlace ?nativePlace .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
617,57,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             foaf:name ""Antiochus""@en ;
             dbo:father dbr:Antiochus_III_the_Great .

  # Find his successor
  ?successor dbo:succededBy ?antiochus .

  # Identify the child of the successor who is royalty
  ?child dbo:childOf ?successor ;
         a dbo:Person, dbo:Royalty .

  # Find the spouse of this royal child
  ?spouse dbo:spouse ?child .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
16,59,test,Give me the spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Ted McGinley by birth name and profession
  ?ted a dbo:Person ;
      dbo:birthName ""Ted McGinley"" ;
      dbo:profession ?profession .

  # Find the actor from Unnatural and their profession
  ?unnaturalActor a dbo:Person ;
                  dbo:title dbr:Unnatural_(TV_series) ;
                  dbo:profession ?actorProfession .

  # Match professions
  FILTER (?profession = ?actorProfession)

  # Get the spouse of Ted McGinley
  ?ted dbo:spouse ?spouse .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
994,53,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Identify Donald Maynard Dokken as a musical artist
  ?dokken a dbo:Person ;
          foaf:name ""Donald Maynard Dokken"" ;
          dbo:musicalArtist ?musicalArtistDokken .

  # Find band members associated with Donald Maynard Dokken
  ?bandMember dbo:bandMemberOf ?musicalArtistDokken .

  # Check if the band member is also associated with Red Tide (band)
  OPTIONAL { 
    ?redTide a dbo:Band ;
             foaf:name ""Red Tide"" .
    ?bandMember dbo:associatedBand ?redTide .
  }

  # Find association through Watchtower
  OPTIONAL {
    ?watchtower a dbo:Band ;
                foaf:name ""Watchtower"" .
    ?associatedArtist dbo:associatedBand ?watchtower .
    ?bandMember dbo:associatedBand ?associatedArtist .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,56,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nevermoreArtist ?sheppardArtist ?josephMichaelBand WHERE {
  # Find the band member of Nevermore who is an artist
  ?member a dbo:Person ;
          dbo:band dbr:Nevermore ;
          dbo:role ?role .
  FILTER (CONTAINS(LCASE(?role), ""artist"") || CONTAINS(LCASE(?role), ""musician""))

  BIND(?member AS ?nevermoreArtist)

  # Find the associated musical artist of Jim Sheppard
  ?sheppard a dbo:Person ;
            foaf:name ""Jim Sheppard"" .
  ?association dbo:associatedBand ?band ;
               dbo:person ?artist .
  FILTER (?sheppard = ?association)
  BIND(?artist AS ?sheppardArtist)

  # Find the band of the person born as Joseph Michael
  ?joseph a dbo:Person ;
          dbo:birthName ""Joseph Michael"" .
  ?josephBandMember dbo:band ?josephMichaelBand ;
                    dbo:person ?joseph .
  
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,19,test,Give me the birth place of the member of Dropkick Murphys and landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query 1: Birth place of a member of Dropkick Murphys
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""Dropkick Murphys""@en .
  ?member dbo:memberOfBand ?band .
  ?member a dbo:Person .
  ?member dbo:birthPlace ?birthPlace .
  ?member foaf:name ?personName .
  FILTER (LANG(?personName) = 'en')
}
LIMIT 1
```

```sparql
# Query 2: Landmark at elevation related to an award of the commander in Battle of Chishui River
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation WHERE {
  ?battle rdfs:label ""Battle of Chishui River""@en .
  ?commander dbo:participatedIn ?battle .
  ?award dbo:recipient ?commander .
  ?landmark dbo:elevation ?elevation .
  ?award dbo:relatedPlace ?landmark .
  FILTER (?elevation > 0) # Assuming we want a positive elevation
}
LIMIT 1
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
345,17,test,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?team WHERE {
  # Find the birth date of Eiður Guðjohnsen
  ?eiður a dbo:Person ;
         dbo:birthDate ?eiðurBirthDate .

  # Identify Stolz von Liechtenstein who is both a soccer player and manager, born on the same date as Eiður Guðjohnsen
  ?person a dbo:Person ;
          rdfs:label ""Stolz von Liechtenstein""@en ;
          dbo:soccerPlayer ?playerRole ;
          dbo:soccerManager ?managerRole ;
          dbo:birthDate ?birthDate .

  # Ensure the birth date matches Eiður Guðjohnsen's
  FILTER (?birthDate = ?eiðurBirthDate)

  # Retrieve the team associated with Stolz von Liechtenstein at birth
  OPTIONAL { ?person dbo:team ?team }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
64,9,test,"Give me the entity in the region, that is a country, of Central European Time and alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .

  ?writer a dbo:Writer ;
          dbo:deathPlace dbr:Sremska_Kamenica ;
          dbo:almaMater ?university .

  ?university dbo:locatedIn ?country .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
9,34,test,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?university WHERE {
  ?mayor a dbo:Person ;
         dbo:positionHeld ?position .
  ?position rdfs:label ""Mayor""@en .
  
  ?organisation dbo:location dbr:Belfast ;
                dbo:head ?mayor .
  
  ?mayor dbo:almaMater ?university .
  
  ?university rdfs:label ?label .
  FILTER (?label = ""Queen's University Belfast"" || ?label = ""QUB"")
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,37,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Seti I and his children
  dbr:Seti_I a dbo:Person .
  ?child dbo:parent dbr:Seti_I ;
         a dbo:Person .

  # Grandchildren of Seti I
  ?grandchild dbo:parent ?child ;
              a dbo:Person .

  # Ramesses II and his spouse
  dbr:Ramesses_II a dbo:Person .
  ?spouse dbo:spouse dbr:Ramesses_II ;
          a dbo:Person .

  # Find the person who is both a grandchild of Seti I and spouse of Ramesses II
  FILTER (?grandchild = ?spouse)
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
356,17,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in 2015 Sacramento Republic FC season.","SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  # Identify Gary Williams
  ?garry a dbo:Person ;
         foaf:name ""Gary Williams"" ;
         dbo:birthDate ?birthDate .
  
  FILTER (YEAR(?birthDate) = 1960)

  # Determine his birthplace and nationality
  ?garry dbo:nationality dbr:England ;
         dbo:birthPlace ?birthPlace .

  # Ensure the birth place is a settlement in England
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:England .

  # Find teams associated with his birthplace
  ?team a dbo:SoccerTeam ;
        dbo:location ?birthPlace .

  # Check if Gary Williams was a player and manager
  OPTIONAL { ?garry dbo:sportCareer ?career . }
  OPTIONAL { ?career dbo:position ""player""@en ; 
             dbo:endDate ?endDate .
            FILTER (?endDate >= ""2015-01-01""^^xsd:date && ?endDate <= ""2015-12-31""^^xsd:date) }

  # Link to Sacramento Republic FC
  ?garry dbo:sportCareer ?sacramentoCareer .
  ?sacramentoCareer dbo:team dbr:Sacramento_Republic_FC ;
                    dbo:startDate ?startDate .
  FILTER (?startDate <= ""2015-01-01""^^xsd:date && (BOUND(?endDate) => ?endDate >= ""2015-01-01""^^xsd:date))
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,38,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForceEmilioMola ?societalEventFranciscoLargoCaballero ?militaryConflictFranciscoLargoCaballero WHERE {
  # Emilio Mola's military force
  OPTIONAL {
    ?event a dbo:MilitaryConflict .
    ?event dbo:commander dbr:Emilio_Mola .
    ?event dbo:militaryForce ?militaryForceEmilioMola .
  }
  
  # Francisco Largo Caballero's societal event and military conflict
  OPTIONAL {
    ?societalEvent a dbo:SocietalEvent ;
                  dbo:participant dbr:Franco_Largo_Caballero .
    ?societalEventFranciscoLargoCaballero ?pSocietalEvent ?oSocietalEvent .
  }
  
  OPTIONAL {
    ?militaryConflict a dbo:MilitaryConflict ;
                      dbo:participant dbr:Franco_Largo_Caballero .
    ?militaryConflictFranciscoLargoCaballero ?pMilitaryConflict ?oMilitaryConflict .
  }
}
```",4,7,5,2,2,3,3,71,0,0,32,0,0.0,0
994,70,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Don Dokken as a musical artist and band member
  dbr:Don_Dokken a dbo:MusicalArtist ;
                 dbo:bandMember ?donBand .

  # Band member of Don Dokken who is also a musical artist
  ?bandMember a dbo:Person, dbo:MusicalArtist ;
              dbo:bandMember ?donBand .

  # Associated with the musical artist linked to Watchtower (band)
  ?watchtowerArtist a dbo:MusicalArtist ;
                    dbo:associatedBand dbr:Watchtower_(band) .
  ?bandMember dbo:associatedBand ?watchtowerArtist .

  # Fredrik Thordendal's band
  dbr:Fredrik_Thordendal a dbo:Person, dbo:MusicalArtist ;
                         dbo:bandMember ?thordendalBand .

  # Band member of the associated musical artist of Watchtower and Fredrik Thordendal's band
  ?associatedArtist a dbo:MusicalArtist ;
                    dbo:associatedBand ?watchtowerArtist .
  ?associatedArtist dbo:associatedBand ?thordendalBand .
  ?bandMember dbo:associatedBand ?associatedArtist .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,38,test,"Give me the parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find Narapati I's child
  ?child dbo:parent dbr:Narapati_I_of_Ava .
  
  # Find Thihapate's child and their predecessor
  ?thihapateChild dbo:parent dbr:Thihapate_of_Mohnyin .
  ?predecessor dbo:successor ?thihapateChild .

  # Ensure the predecessor is an office holder and royalty
  ?predecessor a dbo:OfficeHolder ;
               a dbo:Royalty .

  # The parent of Narapati I's child is Narapati I himself, so we need to find the predecessor of Thihapate's child
  ?parent dbo:child ?thihapateChild .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
404,52,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Ernest Augustus, Crown Prince of Hanover
  dbr:Ernest_Augustus,_Crown_Prince_of_Hanover dbo:child ?child .
  
  # The child is also a parent (of themselves)
  ?child dbo:parent ?child .

  # The child is royalty
  ?child rdf:type dbo:RoyalFamilyMember .

  # Spouse of someone born as Princess Victoria Louise of Prussia
  ?spouse dbo:birthName dbr:Princess_Victoria_Louise_of_Prussia .
  ?child dbo:spouse ?spouse .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,55,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame WHERE {
  # Sean Pertwee and his father
  ?sean a dbo:Person ;
        rdfs:label ""Sean Pertwee""@en ;
        dbo:childOf ?father .
  
  ?father a dbo:Person ;
          rdfs:label ""John Devon Roland Pertwee""@en .

  # Sylvie Bermann's residence
  ?sylvie a dbo:Person ;
          rdfs:label ""Sylvie Bermann""@en ;
          dbo:residence ?settlement .
  
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom .

  # Sean Pertwee's claim to fame
  ?sean dbo:claimToFame ?claimToFame .
  FILTER (
    (EXISTS { ?claimToFame a dbo:Film } || EXISTS { ?claimToFame a dbo:MilitaryConflict })
  )
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
16,52,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person ;
          foaf:name ""Satomi Ishihara"" .
  ?satomi dbo:profession ?profession .

  # Find Ted McGinley's birth name
  ?ted a dbo:Person ;
       foaf:name ""Ted McGinley"" ;
       dbo:birthName ?birthName .

  # Confirm Georgeanne Marie Rice as a person
  ?georgeanne a dbo:Person ;
              foaf:name ""Georgeanne Marie Rice"" .

  # Find the spouse of both Ted McGinley and Georgeanne Marie Rice
  ?spouse a dbo:Person ;
          dbo:spouse ?ted ;
          dbo:spouse ?georgeanne .

  # Check if this person has the same profession as Satomi Ishihara
  ?spouse dbo:profession ?sameProfession .
  
  FILTER (?profession = ?sameProfession)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,52,test,"Give me the figure known as QUB and alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?figure WHERE {
  # Identify QUB as the figure known as QUB
  VALUES ?qub { dbr:Queen's_University_Belfast }

  # Find the alma mater of the awardee of Royal Medal
  ?awardee dbo:award dbr:Royal_Medal .
  ?awardee dbo:almaMater ?qub .

  # Find the alma mater of the mayor, that is a politician, of an organization in Belfast
  ?mayor dbo:positionHeld ?position .
  ?position dbo:organization dbr:Belfast_Organization ; # Replace with actual organization resource if known
             dbo:officeHolder ?mayor ;
             dbo:location dbr:Belfast .
  ?mayor a dbo:Politician .
  ?mayor dbo:almaMater ?qub .

  # Ensure the figure is QUB
  FILTER (?figure = ?qub)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
666,19,test,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?nickname WHERE {
  ?team a dbo:SoccerClub ;
        dbo:nickname ?nickname .
  
  ?season dbo:club ?team ;
          dbo:seasonStartYear ""2016""^^xsd:gYear ;
          dbo:seasonEndYear ""2017""^^xsd:gYear .

  ?manager a dbo:SoccerManager ;
           dbo:managedTeam ?team ;
           dbo:managementPeriod ?period .
  
  FILTER (?period >= ""2016-07-01""^^xsd:date && ?period <= ""2017-06-30""^^xsd:date)
}
```",5,9,6,3,2,3,2,20,0,0,2,0,0.0,0
659,55,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the military conflict involving the regiment
  ?conflict a dbo:MilitaryConflict .
  ?conflict dbo:participatingUnit dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .

  # Find the commander of this conflict
  ?conflict dbo:commander ?commander .

  # Find another event involving Rutger Jan Schimmelpenninck and Arthur Wellesley
  ?event a dbo:MilitaryConflict .
  ?event dbo:participatedIn dbr:Rutger_Jan_Schimmelpenninck ;
         dbo:participatedIn dbr:Arthur_Wellesley,_1st_Duke_of_Wellington .

  # Ensure the same commander is involved in both events
  ?event dbo:commander ?commander .
}
```",6,11,7,2,3,3,3,71,0,0,15,0,0.0,0
488,31,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace WHERE {
  # Find Saitō Hajime's birth place and the war he commanded
  ?saito a dbo:Person ;
         rdfs:label ""Saitō Hajime""@en ;
         dbo:birthPlace ?birthPlace .
  
  ?war a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent ;
       dbo:commander ?saito .

  # Find Tokugawa Ieyasu's death place
  ?ieyasu a dbo:Person ;
          rdfs:label ""Tokugawa Ieyasu""@en ;
          dbo:deathPlace ?deathPlace .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,56,test,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find actors of ""The Departed""
  ?theDeparted a dbo:Film .
  ?theDeparted rdfs:label ""The Departed""@en .
  ?theDeparted dbo:starring ?actor .

  # Find the actor's birthplace as Hub City (e.g., Charleston, South Carolina)
  ?actor dbo:birthPlace dbr:Charleston,_South_Carolina .

  # Ensure the actor is also in a work that is both a movie and a television show
  ?otherWork a dbo:Film .
  ?otherWork dbo:starring ?actor .
  OPTIONAL { ?otherWork dbo:televisionSeries ?tvShow . }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
981,17,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in Indonesia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person .
  
  # Condition for being an author of Kamikaze Girls
  ?work dbo:title ""Kamikaze Girls""@en ;
        dbo:author ?person .

  # Condition for being a beauty queen (assuming there's a property or title)
  ?person dbo:title ?title .
  FILTER regex(?title, ""Beauty Queen"", ""i"") .

  # Connection to Indonesia
  ?person dbo:birthPlace ?place .
  OPTIONAL { ?place rdfs:label ?placeLabel . }
  FILTER(CONTAINS(LCASE(?placeLabel), ""indonesia""))

  # Retrieve birth place
  ?person dbo:birthPlace ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,19,0,0.0,0
55,22,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find the producer of ""Used to Love Her""
  ?song a dbo:Songs .
  ?song dbo:title ""Used to Love Her"" .
  ?song dbo:producer ?producer .

  # Step 2: Check if this producer is a member of any band
  ?producer dbo:bandMember ?producerBand .
  
  # Find other members of the producer's band
  ?producerBand dbo:bandMember ?bandMember1 .

  # Step 3: Identify band members associated with San Francisco Symphony
  ?symphony a dbo:MusicalArtist ;
            rdfs:label ""San Francisco Symphony""@en .
  ?symphony dbo:bandMember ?sfSymphonyMember .

  # Check if these members are part of any other bands or groups
  ?sfSymphonyMember dbo:bandMember ?otherBand .
  
  # Step 4: Find band members of the identified band from step 3
  ?otherBand dbo:bandMember ?bandMember2 .

  # Ensure that we get distinct results for both conditions
  FILTER (?bandMember1 = ?bandMember2)
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
281,60,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war1 ?war2 ?militaryUnit WHERE {
  # Jonathon Band and his award
  dbr:Jonathon_Band a dbo:Person .
  ?award dbo:recipient dbr:Jonathon_Band .
  ?award dbo:relatedWar ?war1 .

  # Profession as an office holder and politician in New Zealand Army
  dbr:Jonathon_Band dbo:profession ?profession .
  FILTER (?profession IN (dbo:OfficeHolder, dbo:Politician)) .
  
  # Military unit related to his profession
  ?militaryUnit a dbo:MilitaryUnit ;
               dbo:militaryBranch dbr:New_Zealand_Army ;
               dbo:member ?professional .

  ?professional a dbo:Person ;
                dbo:profession ?profession .
}
```",6,9,7,3,2,3,3,71,0,0,9,0,0.0,0
184,67,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Archduke Ladislaus Philipp of Austria
  ?ladislaus a dbo:Person ;
            rdfs:label ""Archduke Ladislaus Philipp of Austria""@en .
  
  # Find his parent
  ?parent dbo:child ?ladislaus .

  # Find the child of this parent (Ladislaus's sibling)
  ?sibling dbo:child ?parent .

  # Find the child of this sibling (Ladislaus's niece/nephew)
  ?nieceNephew dbo:child ?sibling .
  
  # Ensure this person is royalty and a parent
  ?nieceNephew rdf:type dbo:Royalty ;
               dbo:hasChild ?someChild .

  # Verify connection to Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            rdfs:label ""Archduchess Margaret of Austria""@en ;
            dbo:birthDate ?dateMargaret .
  FILTER (YEAR(?dateMargaret) = 1925)

  # Ensure the niece/nephew is related to Archduchess Margaret
  ?parent2 dbo:child ?margaret .

  # Verify connection to Géza von Habsburg
  ?geza a dbo:Person ;
        rdfs:label ""Géza von Habsburg""@en .
  
  # Ensure the niece/nephew is related to Géza von Habsburg
  ?parent3 dbo:child ?geza .

  # Check if the same person satisfies both conditions
  FILTER (?nieceNephew = ?parent2 || ?nieceNephew = ?parent3)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,45,test,"Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?thadoMinsaw a dbo:Person ;
                dbo:child dbr:Thinkhaya_of_Pagan ;
                dbo:parent ?parent .
  
  ?officeHolder a dbo:Person ;
               dbo:predecessor ?child ;
               dbo:officeHolder true ;
               dbo:royalty true .

  ?thihapate a dbo:Person ;
             dbo:reference dbr:Thihapate_of_Mohnyin ;
             dbo:parent ?child .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,59,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?almaMater WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1958)
  
  ?person dbo:nationality dbr:Japan .
  
  ?person dbo:residence ?countryResidence .
  ?leader a dbo:Politician ;
          dbo:electedAsLeaderOf dbr:2010_Japanese_House_of_Councillors_election .
  ?leader dbo:residence ?countryResidence .

  ?almaMater a dbo:University ;
             dbo:nationality dbr:Japan ;
             dbo:isOrganisation true ;
             dbo:alumni ?person .
}
```",6,12,7,3,2,3,3,71,0,0,167,0,0.0,0
498,9,test,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem and band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find the band associated with Solace of Requiem
  ?solace a dbo:Band ;
          dbo:member dbr:Solace_of_Requiem .
  
  # Ensure it is also an organization
  ?solace a dbo:Organization .

  # Find members of Mortician (band) who are artists
  ?morticianMember a dbo:Artist ;
                  dbo:member dbr:Mortician_(band) .

  # Identify bands associated with these members
  ?morticianBand a dbo:Band ;
                 dbo:member ?morticianMember .
  
  # Return the band that matches both criteria
  FILTER (?solace = ?morticianBand)
}
```",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
547,62,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace1 ?restingPlace2 ?restingPlace3 WHERE {
  # Resting place of the child of the child of William Haliburton
  OPTIONAL {
    ?grandchild dbo:parent ?child .
    ?child dbo:parent dbr:William_Haliburton .
    ?grandchild dbo:restingPlace ?restingPlace1 .
  }

  # Resting place of Alan Cunningham
  OPTIONAL {
    dbr:Alan_Cunningham dbo:restingPlace ?restingPlace2 .
  }

  # Resting place of the actor of the show with Emily Richard
  OPTIONAL {
    ?show dbo:castMember dbr:Emily_Richard .
    ?actor dbo:actorIn ?show .
    ?actor dbo:restingPlace ?restingPlace3 .
  }
}
```",7,7,8,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
251,26,test,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for administration of Forza Italia in 2013
SELECT ?administration WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  ?member dbo:memberOf ?party ;
          dbo:minister ?ministry .
  ?ministry dbo:startDate ?start ;
            dbo:endDate ?end .
  FILTER (?start <= ""2013-12-31""^^xsd:date && (?end >= ""2013-01-01""^^xsd:date || NOT EXISTS { ?ministry dbo:endDate ?end }))
  BIND(?member AS ?administration)
}

UNION

# Query for location of the war involving Louis François Félix Musnier
SELECT ?location WHERE {
  dbr:Louis_François_Félix_Musnier dbo:militaryConflict ?conflict .
  ?conflict dbo:place ?location .
}

UNION

# Query for death place of the author of ""The Twelve Abbots of Challant""
SELECT ?deathPlace WHERE {
  ?author dbo:work dbr:The_Twelve_Abbots_of_Challant ;
          dbo:deathPlace ?deathPlace .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,28,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?associatedArtist WHERE {
  # Find members of Nevermore who are also artists
  ?band a dbo:Band ;
        dbo:name ""Nevermore""@en .
  
  ?band dbo:bandMember ?member .
  ?member a dbo:Person ;
          dbo:artist ?artist .

  OPTIONAL {
    # Check if Joseph Michael is among the band members
    ?member rdfs:label ""Joseph Michael""@en .
    
    # Find associated artists of Jim Sheppard
    ?sheppard a dbo:Person ;
              rdfs:label ""Jim Sheppard""@en .
              
    ?sheppard dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
488,54,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceOfPoliticianFather ?birthPlaceOfBoshinWarCommander WHERE {
  # Find Matsudaira Tadamasa's fathers
  ?matsudairaTadamasa a dbo:Person ;
                     dbo:father ?officeHolderFather .
  
  ?officeHolderFather dbo:father ?politicianFather .

  # Get the death place of the politician father
  ?politicianFather dbo:deathPlace ?deathPlaceOfPoliticianFather ;
                   a dbo:Politician .

  # Find a commander in the Boshin War and their birthplace
  ?boshinWarCommander a dbo:Person ;
                     dbo:birthPlace ?birthPlaceOfBoshinWarCommander ;
                     dbo:occupation dbr:Boshin_War_commander .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,50,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find Sherry Hormann's spouse
  ?sherryHormann a dbo:Person ;
                 foaf:name ""Sherry Hormann""@en .
  ?sherryHormann dbo:spouse ?spouse .

  # Identify the claim to fame of Sherry Hormann's spouse
  ?spouse dbo:claimToFame ?work1 .

  # Find movies involving Roz Ryan and an actor
  ?movie a dbo:Film ;
         dbo:actor ?actor .
  
  # Ensure the movie is also a work and television show
  ?movie dbo:genre ?genre .
  FILTER (?genre IN (dbr:Television, dbr:Work)) .

  # Find Roz Ryan's involvement in the same movie
  ?rozRyan a dbo:Person ;
           foaf:name ""Roz Ryan""@en .
  ?rozRyan dbo:actor ?movie .

  # Ensure the actor is also linked to Sherry Hormann's spouse's claim to fame
  ?work1 dbo:actor ?actor .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
54,50,test,"Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Find Thado Minsaw of Prome's parent
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw""@en .
  
  ?parent dbr:Prome ;
          dbo:child ?thadoMinsaw .

  # Step 2: Find the child of Thado Minsaw's parent
  ?grandChild dbo:parent ?parent .

  # Step 3: Find predecessor of this grandChild
  ?predecessor dbo:successor ?grandChild ;
              a dbo:OfficeHolder ;
              a dbo:Royalty .

  # Step 4: Identify Thihapate of Mohnyin's parent
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate""@en .
  
  ?parent2 dbr:Mohnyin ;
           dbo:child ?thihapate .

  # Step 5: Check if the predecessor is also an office holder and royalty of Thihapate's parent
  FILTER (?predecessor = ?person)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
251,22,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?warLocation WHERE {
  # Find political party and organization in Sicily
  ?party a dbo:PoliticalParty ;
         dbo:location dbr:Sicily .
  
  OPTIONAL { 
    ?organization a dbo:Organization ;
                  dbo:location dbr:Sicily .
    
    BIND(CONCAT(STR(?party), "" "", STR(?organization)) AS ?administration)
  }
  
  # Find military conflict involving Louis François Félix Musnier
  ?conflict a dbo:MilitaryConflict ;
            dbo:place ?warLocation ;
            dbo:participant ?musnier .

  FILTER (?musnier = dbr:Louis_François_Félix_Musnier)
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
328,65,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of Joseph Stalin and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?award ?office ?commander WHERE {
  # Bruce Fraser's awards
  ?fraser a dbo:Person ;
          foaf:name ""Bruce Fraser, 1st Baron Fraser of North Cape"" ;
          dbo:award ?award .
  
  # Awardee of the award
  ?award dbo:recipient ?awardee .

  # Joseph Stalin's government office
  ?stalin a dbo:Person ;
          foaf:name ""Joseph Stalin"" ;
          dbo:office ?office .
  
  # Commander in force at Budapest
  ?commander a dbo:Person ;
             dbo:commanderOf ?force ;
             dbo:deathPlace dbr:Budapest .

  # Linking the entities
  OPTIONAL { ?fraser dbo:commanderOf ?force }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
251,23,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the location of the war involving Louis François Félix Musnier
SELECT ?warLocation WHERE {
  ?musnier a dbo:Person ;
           rdfs:label ""Louis François Félix Musnier""@en .
  ?musnier dbo:participatedIn ?war .
  ?war dbo:location ?warLocation .
}

UNION

# Query for the death place of the author of ""The Twelve Abbots of Challant""
SELECT ?deathPlace WHERE {
  ?book a dbo:Book ;
        rdfs:label ""The Twelve Abbots of Challant""@en .
  ?book dbo:author ?author .
  ?author dbo:deathPlace ?deathPlace .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
528,66,test,Give me the war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle1Force ?personBirthName ?warForce ?battle2CommanderForce WHERE {
  # Battle of Pisagua forces
  {
    SELECT DISTINCT ?force WHERE {
      ?battle a dbo:Battle .
      ?battle rdfs:label ""Battle of Pisagua""@en .
      ?battle dbo:participatedIn ?event .
      ?event dbo:militaryUnit ?force .
    }
    BIND(?force AS ?battle1Force)
  }

  # Narciso Campero's birth name and associated military force
  {
    SELECT DISTINCT ?birthName ?force WHERE {
      ?person a dbo:Person .
      ?person rdfs:label ""Narciso Campero""@en .
      ?person dbo:birthName ?birthName .
      OPTIONAL { 
        ?person dbo:militaryUnit ?unit .
        ?unit dbo:participatedIn ?event .
        ?event dbo:militaryUnit ?force .
      }
    }
    BIND(?birthName AS ?personBirthName)
    BIND(COALESCE(?force, ""Unknown"") AS ?warForce) # In case no force is found
  }

  # Battle of La Rinconada de Ate commander's military force
  {
    SELECT DISTINCT ?commanderForce WHERE {
      ?battle a dbo:Battle .
      ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
      ?battle dbo:commander ?commander .
      ?commander dbo:militaryUnit ?unit .
      ?unit dbo:participatedIn ?event .
      ?event dbo:militaryUnit ?commanderForce .
    }
    BIND(?commanderForce AS ?battle2CommanderForce)
  }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,66,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeRestingPlace ?childRestingPlace ?actorRestingPlace WHERE {
  # Resting place of the awardee of the award of Gerald Graham
  {
    ?award dbo:recipient ?awardee .
    ?award dbo:name dbr:Gerald_Graham .
    OPTIONAL { ?awardee dbo:restingPlace ?awardeeRestingPlace . }
  }

  # Resting place of the child of James Burton (property developer)
  UNION
  {
    ?jamesBurton a dbo:Person ;
                 foaf:name ""James Burton"" ;
                 dbo:occupation dbr:Property_developer .
    ?child dbo:parent ?jamesBurton ;
           dbo:restingPlace ?childRestingPlace .
  }

  # Resting place of the actor of ""Enemy at the Door""
  UNION
  {
    dbr:Enemy_at_the_Door dbo:actor ?actor .
    OPTIONAL { ?actor dbo:restingPlace ?actorRestingPlace . }
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,68,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfNative WHERE {
  # Find the landmark at elevation 96.0 meters
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""96.0""^^xsd:float .
  
  # Ensure it is part of a settlement
  ?settlement dbo:settlement ?landmark .

  # Find native of this settlement
  ?native dbo:nativePlace ?settlement .

  # Find parent of the native
  ?parentOfNative dbo:child ?native .

  {
    # Archduke Joseph Francis of Austria's child and their parent (a royalty)
    dbr:Archduke_Joseph_Francis_of_Austria dbo:child ?child1 .
    ?parent1 dbo:child ?child1 ;
             a dbo:Royalty .
    
    # Archduke Ladislaus Philipp of Austria's child and their parent (a royalty)
    dbr:Archduke_Ladislaus_Philipp_of_Austria dbo:child ?child2 .
    ?parent2 dbo:child ?child2 ;
             a dbo:Royalty .

    # Ensure the parentOfNative is related to both royalties
    FILTER (?parentOfNative = ?parent1 || ?parentOfNative = ?parent2)
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
767,47,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?settlement WHERE {
  # Find George Kilbon Nash and his role in an administration
  ?nash a dbo:Person ;
        foaf:name ""George Kilbon Nash""@en .
  
  OPTIONAL { 
    ?nash dbo:officeHolder ?administration .
    
    # Find the alma mater of George Kilbon Nash or the administration
    ?nash dbo:almaMater ?almaMater .
    UNION
    ?administration dbo:almaMater ?almaMater .
  }
  
  OPTIONAL {
    # Identify any settlement related to the administration
    ?administration dbo:location ?settlement .
    FILTER (?settlement a dbo:Settlement)
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
92,58,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Find the person with birth name Joseph Michael
  ?person1 a dbo:Person ;
           dbo:birthName ""Joseph Michael""@en .
  
  # Find the musical artist associated with Jim Sheppard
  ?person2 a dbo:Person ;
           dbo:birthName ""Jim Sheppard""@en .
  ?artist dbr:Jim_Sheppard ;
          dbo:musicalArtist ?person2 .

  # Find the band member of Nevermore
  ?bandMember a dbo:Person ;
              dbo:bandMember ?band ;
              dbo:memberOfBand dbr:Nevermore .

  # Link Joseph Michael to Jim Sheppard through their musical artist association
  ?artist dbo:musicalArtist ?person1 .
  
  # Ensure the band member is the same person as Joseph Michael
  FILTER (?bandMember = ?person1)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,22,test,Give me the member of University of Tsukuba and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Condition for being a member of University of Tsukuba
  ?person dbp:almaMater dbr:University_of_Tsukuba .

  # Condition for managing the team of Takashi Sekizuka
  ?team dbo:manager ?person .
  ?team dbo:member dbr:Takashi_Sekizuka .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,52,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Identify Nysa
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  
  # Step 2: Find Nysa's parent
  ?nysa dbo:childOf ?parent .

  # Step 3: Identify Antiochus III the Great and his child who is royalty
  dbr:Antiochus_III_the_Great dbo:child ?antiochusChild .
  ?antiochusChild a dbo:Monarch . # Assuming royalty means being a monarch

  # Step 4: Identify spouse of this royal child
  ?antiochusChild dbo:spouse ?spouse .

  # Step 5: Find parent of this spouse
  ?spouse dbo:childOf ?parent .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
92,52,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist WHERE {
  # Find band members of Nevermore (2006 film)
  ?film a dbo:Film .
  ?film rdfs:label ""Nevermore (2006 film)""@en .
  
  ?bandMember dbo:bandMemberOf ?film .
  ?bandMember a dbo:Person .

  # Ensure the band member is an artist
  ?bandMember dbo:musicalArtist ?artistRole1 .

  # Find musical artists associated with Jim Sheppard and Joseph Michael
  ?person1 rdfs:label ""Jim Sheppard""@en .
  ?person2 rdfs:label ""Joseph Michael""@en .

  ?person1 dbo:musicalArtist ?artistRole2 .
  ?person2 dbo:musicalArtist ?artistRole3 .

  # Ensure the associated artist is the same
  FILTER (?artistRole1 = ?artistRole2 && ?artistRole1 = ?artistRole3)

  # Return the band member and their associated artist role
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,51,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the band of the person born as Shèna
SELECT ?person ?band WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Shèna"" .
  OPTIONAL { ?person dbo:musicalBand ?band . }
}

UNION

# Query for the band of the writer of Apollo (Hardwell song)
SELECT ?writer ?band WHERE {
  dbr:Apollo_(song) dbo:lyricsBy ?writer .
  OPTIONAL { ?writer dbo:musicalBand ?band . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
9,53,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  # Find Queen's University Belfast and its nickname
  VALUES ?queenUniversity { dbr:Queen's_University_Belfast }
  ?queenUniversity dbo:nickname ?nickname .

  # Find Allen Hill's alma mater
  ?allenHill a dbo:Scientist ;
             foaf:almaMater ?university .
  FILTER (?allenHill = dbr:Allen_Hill_(scientist))

  # Find the politician mayor of Belfast and their alma mater
  ?mayor a dbo:Politician, dbo:Mayor ;
         foaf:almaMater ?university .
  ?belfastEntity a dbo:Organisation ;
                 dbo:locationCity dbr:Belfast .
  FILTER (?mayor = ?belfastEntity)

  # Ensure the university is the same for all conditions
  FILTER (?university = ?queenUniversity)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,63,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity WHERE {
  # Amun-her-khepeshef's spouse and their child's parent
  ?amunSpouse a dbo:Person ;
              dbo:spouse dbr:Amun_her_khepeshef .
  ?child1 dbo:parent ?amunParent .
  ?amunSpouse dbo:child ?child1 .

  # Ramesses II's child and their parent
  ?ramessesChild dbo:parent ?ramessesParent .
  dbr:Ramesses_II dbo:child ?ramessesChild .

  # Merneptah's father and his spouse
  ?merneptahFather dbo:child dbr:Merneptah .
  ?merneptahSpouse a dbo:Person ;
                  dbo:spouse ?merneptahFather .

  # Find the common entity
  FILTER (?amunParent = ?ramessesParent && ?amunParent = ?merneptahSpouse)
  BIND(?amunParent AS ?commonEntity)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,58,test,"Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?peninsularWar ?commanderInPeninsularWar ?warOfCarlPontusGahn ?claimToFame WHERE {
  # Find the Peninsular War and its commander
  ?peninsularWar a dbo:War ;
                 rdfs:label ""Peninsular War""@en .
  
  ?commanderInPeninsularWar dbo:commander ?peninsularWar ;
                            rdfs:label ?commanderLabel .

  # Find Thomas Trigge's command in the Peninsular War
  ?trigge dbr:Thomas_Trigge ;
          dbo:commander ?peninsularWar .
  
  # Find Carl Pontus Gahn's war participation and claim to fame
  ?carlPontusGahn dbr:C_P_Gahn ;
                  dbo:participatedIn ?warOfCarlPontusGahn ;
                  dbo:famousFor ?claimToFame .

}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
427,68,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherParty ?michelePintoParty ?prodiParty WHERE {
  # Find the father of an MIT alumnus and his political party
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
  ?father dbo:politicalParty ?fatherParty .

  # Find Michele Pinto's political party
  dbr:Michele_Pinto dbo:politicalParty ?michelePintoParty .

  # Find Romano Antonio Prodi's political party
  dbr:Romano_Antonio_Prodi a dbo:Politician ;
                          dbo:officeHolder true ;
                          dbo:politicalParty ?prodiParty .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
391,61,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find Sherry Hormann's spouse
  dbr:Sherry_Hormann dbo:spouse ?spouse .

  # Get the claim to fame of the spouse
  ?spouse dbo:claimToFame ?work .
  
  # Ensure the work is a movie, work, and television show
  ?work a dbo:Film ;
        a dbo:CreativeWork ;
        a dbo:TelevisionShow .

  # Find an actor in this work
  ?work dbo:actor ?actor .
}
```",6,10,7,3,2,3,3,71,0,0,11,0,0.0,0
528,57,test,Give me the war of the commander in the work of --01-09 and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?ireneMorales ?narcisoCamperoLeyes WHERE {
  # Find the war associated with a commander on a specific date (ambiguous part)
  ?war dbo:militaryCommanderOf ?commander .
  
  # Identify Irene Morales
  ?ireneMorales a dbo:Person ;
                foaf:name ""Irene Morales""@en .

  # Identify Narciso Campero Leyes and his birth details
  ?narcisoCamperoLeyes a dbo:Person ;
                      foaf:name ""Narciso Campero Leyes""@en ;
                      dbo:birthDate ?birthDate .
  
  # Link the commander to Irene Morales (assuming some relationship exists)
  OPTIONAL { ?commander dbo:spouse ?ireneMorales }
  
  # Link Narciso Campero Leyes to a military force or role
  OPTIONAL { ?narcisoCamperoLeyes dbo:militaryCommanderOf ?force }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
48,19,test,"Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerBand ?actorBand WHERE {
  # Part 1: Find the band of the writer of ""Emotion"" by Carly Rae Jepsen
  ?album dbo:title ""Emotion (Carly Rae Jepsen album)"" .
  ?album dbo:artist dbr:Carly_Rae_Jepsen .
  ?song dbo:album ?album .
  ?song dbo:writer ?writer .
  
  OPTIONAL {
    ?writer dbo:bandMember ?writerBand .
  }
  
  # Part 2: Find the band of an actor who is a musical artist in a show with Stacey Dash
  ?show dbo:actor dbr:Stacey_Dash .
  ?actor dbo:actor ?show .
  ?actor a dbo:MusicalArtist .
  
  OPTIONAL {
    ?actor dbo:bandMember ?actorBand .
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
391,65,test,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:genre ?workGenre .
  FILTER (?workGenre IN (dbr:Work, dbr:TelevisionShow))
  
  ?movie dbo:starring ?person .
  ?person a dbo:Actor ;
          rdfs:label ""Roz Ryan""@en .

  ?actor dbo:actor ?movie .
  
  ?spouse a dbo:Person ;
          dbo:spouse dbr:Sherry_Hormann .
  
  ?claimToFame a dbo:Work ;
               dbo:claimToFame ?spouse .
  
  ?actor dbo:claimToFame ?claimToFame .

  ?actor dbo:nativePlace ?hubCity .
  ?hubCity rdfs:label ""Hub City""@en .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
617,66,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Seleucus II Callinicus and his children
  dbr:Seleucus_II_Callinicus a dbo:Person .
  ?child dbo:childOf dbr:Seleucus_II_Callinicus .

  # Children of Seleucus II Callinicus' child (grandchildren)
  ?grandchild dbo:childOf ?child .
  
  # Ensure the grandchild is royalty
  ?grandchild a dbo:Royalty .

  # Commander in Battle of Panium and his child
  ?commanderChild dbo:childOf ?commander .
  ?commander dbr:Battle_of_Panium dbo:commandedBy ?commanderPerson .

  # Antiochus III the Great's child and their spouse
  ?antiochusChild dbo:childOf dbr:Antiochus_III_the_Great .
  ?spouse dbo:spouse ?antiochusChild .

  # Linking conditions
  FILTER (?grandchild = ?commanderChild && ?spouse = ?child)
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
251,21,test,Give me the death place of the author of The Twelve Abbots of Challant and administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceOfAuthor ?administration2013 ?battleLocation WHERE {
  # Death place of the author of ""The Twelve Abbots of Challant""
  ?book a dbo:Book .
  ?book rdfs:label ""The Twelve Abbots of Challant""@en .
  ?book dbo:author ?author .
  ?author dbo:deathPlace ?deathPlaceOfAuthor .

  # Administration of Forza Italia in 2013
  ?person a dbo:Person .
  ?person foaf:name ""Silvio Berlusconi"" .
  ?party a dbo:PoliticalParty .
  ?party rdfs:label ""Forza Italia""@en .
  ?position dbo:officeHolder ?person ;
            dbo:startDate ?start ;
            dbo:endDate ?end .
  FILTER (YEAR(?start) <= 2013 && YEAR(?end) >= 2013)

  # Location of the Battle of Marengo
  ?battle a dbo:MilitaryConflict .
  ?battle rdfs:label ""Battle of Marengo""@en .
  ?battle dbo:location ?battleLocation .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
747,54,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfWriter ?personBornOnSameDate ?bandOfShena WHERE {
  # Find the writer of Amba Shepherd's song and their band
  ?song a dbo:Songs .
  ?song dbo:lyricsBy ?writer .
  ?writer dbo:musicalArtist ?bandOfWriter .
  ?song dbo:artist dbr:Amba_Shepherd .

  # Find the person born on Pavlo Khudzik's birth date
  ?pavlo a dbo:Person ;
         dbo:birthDate ?pavloBirthDate .
  ?personBornOnSameDate a dbo:Person ;
                        dbo:birthDate ?sameBirthDate .
  FILTER (?sameBirthDate = ?pavloBirthDate)

  # Find Shèna's band
  ?shena a dbo:Person ;
         dbo:musicalArtist ?bandOfShena .
  ?shena rdfs:label ""Shèna""@en .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,53,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  # Step 1: Identify Ernest Augustus, Duke of Brunswick
  ?ernestAugustus a dbo:Person ;
                 rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .

  # Step 2: Find his father
  ?father dbo:child ?ernestAugustus .

  # Step 3: Determine the spouse of this person (his father)
  ?spouse dbo:spouse ?father .

  # Step 4 & 5: Identify the child of this spouse who is royalty and matches Princess Victoria Louise of Prussia
  ?princess a dbo:Royalty ;
           rdfs:label ""Princess Victoria Louise of Prussia""@en ;
           dbo:birthName ?birthName ;
           dbo:child ?spouse .

  # Step 6: Verify parentage of Prince Ernest Augustus of Hanover (born 1914)
  ?prince a dbo:Person ;
          rdfs:label ""Prince Ernest Augustus of Hanover""@en ;
          dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1914)

  # Ensure the princess is a parent of this prince
  ?princess dbo:child ?prince .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,55,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Identify Ernest Augustus, Duke of Brunswick
  dbr:Ernest_Augustus,_Duke_of_Brunswick a dbo:Person .

  # Step 2: Find his spouse who is Princess Victoria Louise of Prussia and royalty
  ?spouse dbo:spouse dbr:Ernest_Augustus,_Duke_of_Brunswick .
  ?spouse rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  # Step 3: Determine her father (parent)
  ?father dbo:child ?spouse .

  # Step 4: Identify their child who is royalty
  ?royalChild dbo:child dbr:Ernest_Augustus,_Duke_of_Brunswick ;
              dbo:child ?spouse .
  
  # Ensure the child is royalty (e.g., has a title or similar property)
  OPTIONAL { ?royalChild dbo:title ?title . FILTER EXISTS { ?title } }

  # Step 5: Find the parent of this royal child
  ?parent dbo:child ?royalChild .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
994,61,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Step 1: Identify Don Dokken as a musical artist
  ?dokken a dbo:MusicalArtist ;
          foaf:name ""Don Dokken"" .

  # Step 2: Find band members of Don Dokken
  ?bandMember dbo:bandMember ?dokkenBand ;
              a dbo:Person .

  # Step 3: Identify bands associated with these band members
  ?associatedBand dbo:associatedBand ?bandMember ;
                 a dbo:Band, dbo:Organization, dbo:Group .

  # Step 4: Find Fredrik Thordendal's band
  ?thordendal a dbo:MusicalArtist ;
              foaf:name ""Fredrik Thordendal"" .
  
  ?fredrikBand dbo:bandMember ?thordendal ;
               a dbo:Band, dbo:Organization, dbo:Group .

  # Step 5: Match the associated band of the band member with Fredrik Thordendal's band
  FILTER (?associatedBand = ?fredrikBand)
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
182,26,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warJagathDias ?entityTamaraNationality ?warAuthorEasterBomber WHERE {
  # Part 1: War of Jagath Dias
  OPTIONAL {
    ?person dbr:Jagath_Dias .
    ?person dbo:subject ?warJagathDias .
  }

  # Part 2: Entity in the nationality of Tamara Kunanayakam
  OPTIONAL {
    ?tamara a dbo:Person ;
            dbo:nationality ?nationalityTamara .
    ?entityTamaraNationality dbo:nationality ?nationalityTamara .
  }

  # Part 3: War of the author of 2019 Sri Lanka Easter bombings
  OPTIONAL {
    ?author dbo:subject dbr:2019_Sri_Lanka_Easter_bombings ;
            dbo:subject ?warAuthorEasterBomber .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,62,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?intermediaryChild WHERE {
  # Find children of Ernest Augustus, Crown Prince of Hanover
  ?child dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  
  # Ensure the child is royalty and has their own child (making them a parent)
  ?child a dbo:Royalty .
  ?child dbo:child ?grandChild .

  # Find spouse of someone born as Princess Victoria Louise of Prussia
  ?spouse dbo:spouse ?princessVictoriaLouise .
  ?princessVictoriaLouise dbo:birthName ""Princess Victoria Louise of Prussia"" .

  # Ensure the intermediary child is the spouse we found
  FILTER (?child = ?spouse)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
421,25,test,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Edin Dervišhalidović by birth name
  ?edin a dbo:Person ;
        dbo:birthName ""Edin Dervišhalidović"" .
  
  # Get Samir Bekrić's birthplace
  ?samir a dbo:Person ;
         rdfs:label ""Samir Bekrić""@en ;
         dbo:birthPlace ?birthPlace .

  # Ensure Edin's native place matches Samir's birthplace
  ?edin dbo:nativeName ?nativeName .
  FILTER (CONTAINS(LCASE(?nativeName), LCASE(STR(?birthPlace)))).

  # Find a band that has won awards and check if Edin is a member
  ?band a dbo:Band ;
        dbo:member ?edin ;
        dbo:award ?award .

  # Ensure the award exists
  FILTER EXISTS { ?award a dbo:Award }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,56,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?triggeFame ?blakeWar ?gahnBirthName WHERE {
  # Thomas Trigge's claim to fame in a war
  ?triggeFame dbo:knownFor ?war .
  ?war dbo:participatedIn ?conflict .
  
  # Joaquín Blake's involvement in the same conflict
  ?blakeWar dbo:participatedIn ?conflict .

  # Carl Pontus Gahn's birth name
  ?gahn dbr:Carl_Pontus_Gahn ;
        dbo:birthName ?gahnBirthName .
  
  # Ensure all entities are persons
  ?triggeFame a dbo:Person .
  ?blakeWar a dbo:Person .
  ?conflict a dbo:MilitaryConflict .
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
994,52,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of Don Dokken.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find associated musical artist of Watchtower
SELECT ?watchtowerArtist WHERE {
  dbr:Watchtower a dbo:Band .
  ?bandMember dbo:bandMember dbr:Watchtower .
  ?bandMember a dbo:MusicalArtist .
  BIND(?bandMember AS ?watchtowerArtist)
}

# Step 2: Find associated musical artist of the result from Step 1
SELECT ?secondLevelArtist WHERE {
  ?firstLevelBandMember dbo:bandMember ?secondLevelArtist .
  FILTER (?firstLevelBandMember = ?watchtowerArtist) .
  ?secondLevelArtist a dbo:MusicalArtist .
}

# Step 3: Find band member of Meshuggah who is also part of another band or group
SELECT ?meshuggahBandMember WHERE {
  dbr:Meshuggah a dbo:Band .
  ?bandMember dbo:bandMember dbr:Meshuggah .
  ?bandMember a dbo:MusicalArtist .
  ?otherBand dbo:bandMember ?bandMember .
  FILTER(?otherBand != dbr:Meshuggah)
}

# Step 4: Find band members of Don Dokken
SELECT ?dokkenBandMember WHERE {
  ?bandMember dbo:bandMember ?dokken .
  FILTER(STRSTARTS(STR(?dokken), ""http://dbpedia.org/resource/Don_Dokken"")) .
  ?bandMember a dbo:MusicalArtist .
}

# Final Step: Find the intersection of results
SELECT DISTINCT ?finalResult WHERE {
  VALUES ?artist1 { ?secondLevelArtist }
  VALUES ?artist2 { ?meshuggahBandMember }
  VALUES ?artist3 { ?dokkenBandMember }
  
  FILTER(?artist1 = ?artist2 && ?artist2 = ?artist3)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
747,42,test,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Pavlo Khudzik's birth date
  VALUES (?pavloKhudzik) { dbr:Pavlo_Khudzik }
  ?pavloKhudzik dbo:birthDate ?birthDate .

  # Find Amba Shepherd's band
  VALUES (?ambaShepherd) { dbr:Amba_Shepherd }
  ?ambaShepherd dbo:band ?ambaBand .

  # Find Tracey Elizabeth McSween's band
  VALUES (?traceyMcSween) { dbr:Tracey_Elizabeth_McSween }
  ?traceyMcSween dbo:band ?traceyBand .

  # Find a person born on the same date as Pavlo Khudzik
  ?person a dbo:Person .
  ?person dbo:birthDate ?sameBirthDate .
  FILTER (?sameBirthDate = ?birthDate && ?person != ?pavloKhudzik)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,20,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Bob Heffron's birth place that is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .

  # Beauchamp Seymour, 1st Baron Alcester's war
  dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:participatedInWar ?war .

  # Find the common entity
  ?entity rdfs:label ?birthPlaceLabel .
  FILTER (CONTAINS(LCASE(?birthPlaceLabel), LCASE(str(?birthPlace))))
  
  ?entity rdfs:label ?warLabel .
  FILTER (CONTAINS(LCASE(?warLabel), LCASE(str(?war))))
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,43,test,"Give me the person born on 1985-04-29 and band of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
  
  # Band Shèna
  ?bandShena a dbo:Band ;
             dbo:bandMember ?person .

  # Find the band associated with the writer of Amba Shepherd's song
  ?song dbr:Amba_Shepherd ; 
        a dbo:Song .
  ?song dbo:lyricsBy ?writer .
  ?bandWriter a dbo:Band ;
              dbo:bandMember ?writer .
  
  # Ensure the person is also a member of this band
  ?person dbo:bandMember ?bandWriter .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,27,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerOfManager WHERE {
  # Find the manager of the 1998 Kashima Antlers team
  ?team a dbo:SportsTeam ;
        dbo:season ?season .
  ?season dbo:year ""1998""^^xsd:gYear ;
          dbo:sport dbr:Soccer ;
          dbo:team dbr:Kashima_Antlers .

  ?team dbo:manager ?manager .

  # Find the manager of this manager, ensuring they are a sports manager
  ?managerOfManager a dbo:SportsManager .
  ?manager dbo:managedBy ?managerOfManager .
}
```",3,4,4,3,1,3,3,71,0,0,10,0,0.0,0
488,29,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?administration ?birthPlace WHERE {
  # Find Yūki Hideyasu's father who is a politician
  ?yukiHideyasu a dbo:Person ;
                foaf:name ""Yūki Hideyasu""@en .
  
  ?father dbo:fatherOf ?yukiHideyasu ;
          a dbo:Politician .

  # Get the death place of Yūki Hideyasu's father
  ?father dbo:deathPlace ?deathPlace .

  # Find Emperor Go-Yōzei's administration period
  ?administration dbo:head dbr:Emperor_Go-Yōzei ;
                  dbo:startDate ?startYear ;
                  dbo:endDate ?endYear .
  
  # Check if the father was involved in this administration
  OPTIONAL { ?father dbo:memberOf ?administration . }

  # Find Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
92,68,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band ?associatedArtist WHERE {
  # Find Joseph Michael Furney
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael Furney""@en .
  
  # Find the band associated with him
  ?person dbo:bandMember ?band .

  OPTIONAL {
    # Find any associated musical artist
    ?associatedArtist a dbo:MusicalArtist ;
                     dbo:associatedBandMember ?person .
  }

  # Find actor of ""Return to Nuke 'Em High Volume 1""
  ?actor a dbo:Person ;
         foaf:name ?actorName ;
         dbo:actor ?film .
  
  ?film rdfs:label ""Return to Nuke 'Em High Volume 1""@en .

  # Check if this actor is the same as Joseph Michael Furney
  FILTER (?person = ?actor)

  # Find band member associated with Nevermore (2006 film)
  ?nevermoreFilm rdfs:label ""Nevermore (2006 film)""@en .
  
  ?bandMember a dbo:Person ;
              dbo:bandMember ?referenceBand .

  ?referenceBand rdfs:label ?filmLabel .
  
  FILTER (?filmLabel = ""Nevermore""@en)

  # Check if this band member is the same as Joseph Michael Furney
  FILTER (?person = ?bandMember)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,42,test,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Native of Budapest
  ?person dbo:birthPlace dbr:Budapest .

  # Child of Archduke Joseph August of Austria
  ?archdukeAugust a dbo:Person ;
                  rdfs:label ""Archduke Joseph August of Austria""@en .
  ?person dbo:child ?archdukeAugust .

  # Parent of the child of Archduke Joseph Francis of Austria
  ?archdukeFrancis a dbo:Person ;
                   rdfs:label ""Archduke Joseph Francis of Austria""@en .
  ?childOfFrancis dbo:parent ?person .
  ?archdukeFrancis dbo:child ?childOfFrancis .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
328,38,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in the force of Ferenc Szálasi
  ?szalasiCommander dbo:commanderOf dbr:Ferenc_Szálasi ;
                   dbo:leaderOf ?office .

  # Leader of an office under Joseph Stalin
  ?stalinOffice dbo:leaderOf ?person .
  
  FILTER (?szalasiCommander = ?stalinOffice)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
801,46,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Identify the person 50 Cent
  ?person a dbo:Person ;
          foaf:name ""50 Cent"" .
  
  # Find works associated with 50 Cent
  ?work dbo:musicalWork ?song ;
        dbo:artist ?person .

  # Ensure the work is both a song and a broader musical work
  ?song a dbo:Song .
  ?work a dbo:MusicalWork .

  # Identify the producer of the work
  ?work dbo:producer ?producer .
}
```",5,8,6,3,2,3,3,71,0,0,27,0,0.0,0
232,58,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Sean Pertwee and his claim to fame
  dbr:Sean_Pertwee a dbo:Person ;
                   dbo:child dbr:Jon_Pertwee .
  
  OPTIONAL { 
    ?filmOrConflict dbo:actorIn dbr:Sean_Pertwee .
    ?filmOrConflict a (dbo:Film|dbo:MilitaryConflict) .
    
    # Actor of the film or conflict
    ?actor dbo:actorIn ?filmOrConflict ;
           a dbo:Person .
  }
  
  OPTIONAL {
    # Native place of the actor
    ?actor dbo:nativePlace ?settlement .
    ?settlement a dbo:Settlement ;
                dbo:country dbr:United_Kingdom .
    
    # Politician or office holder from that settlement, native to France
    ?politician dbo:nativePlace ?settlement ;
               a (dbo:Politician|dbo:OfficeHolder) .
    ?politician dbo:country dbr:France .
  }
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
827,17,test,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find children of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach
  dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:child ?child .
  
  # Ensure the child's father is royalty (spouse of Princess Pauline)
  ?spouse a dbo:Person ;
          rdf:type dbo:RoyalFamilyMember ;
          dbo:spouse dbr:Princess_Pauline_of_Saxe-Weimar-Eisenach ;
          dbo:child ?child .
  
  # Ensure the child's father is royalty
  ?child dbo:father ?spouse .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,59,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?officeHolder a dbo:OfficeHolder ;
                dbo:country dbr:Kingdom_of_Ireland ;
                dbo:position ?position .
  
  ?militaryConflict a dbo:MilitaryConflict ;
                    dbo:commander ?commander .

  ?organization a dbo:MilitaryUnit, dbo:Organization ;
                rdfs:label ""Polish Horse""@en .

  ?event dbo:organizer ?organization ;
         dbo:commander ?commander .
  
  FILTER (?officeHolder = ?commander)
}
```",6,11,7,3,2,3,3,71,0,0,71,0,0.0,0
16,63,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person ;
          foaf:name ""Satomi Ishihara"" .
  
  ?satomi dbo:profession ?profession .

  # Find Ted McGinley by birth name
  ?ted a dbo:Person ;
       dbo:birthName ""Ted McGinley"" .

  # Find Gigi Rice by birth name
  ?gigi a dbo:Person ;
        dbo:birthName ""Gigi Rice"" .

  # Find the spouse of Ted McGinley who is also married to Gigi Rice
  ?ted dbo:spouse ?commonSpouse .
  ?gigi dbo:spouse ?commonSpouse .

  # The professional in Satomi Ishihara's profession and spouse of both
  ?professional a dbo:Person ;
                dbo:profession ?profession ;
                dbo:spouse ?commonSpouse .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,46,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Carl Pontus Gahn's war involvement
SELECT ?war WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  ?person dbo:participatedIn ?war .
}

# Query for the Peninsular War commander's war
SELECT ?commanderWar WHERE {
  ?war a dbo:MilitaryConflict ;
       rdfs:label ""Peninsular War""@en .
  ?war dbo:commander ?commander .
  ?commander dbo:participatedIn ?commanderWar .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
356,20,test,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Step 1: Identify the 2015 Sacramento Republic FC season
  ?season a dbo:SoccerClubSeason ;
          dbo:sportTeam dbr:Sacramento_Republic_FC ;
          dbo:year ""2015""^^xsd:gYear .

  # Step 2: Find its predecessor and successor
  ?predecessor dbo:successor ?season .
  ?successor dbo:predecessor ?predecessor .

  # Step 3: Identify Gary Williams' birth place
  dbr:Gary_Williams_(footballer,_born_1960) a dbo:SoccerPlayer ;
      dbo:birthPlace ?birthPlace .
  
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:England .

  # Step 4: Find the team and player/manager
  ?team dbo:sportTeamLocation ?birthPlace .
  ?person a dbo:SoccerPlayer, dbo:SoccerManager ;
          dbo:playsFor ?team .
  
  # Final condition to find the player in the successor of the predecessor season
  ?successor dbo:player ?person .
}
```",6,12,7,3,2,3,2,20,0,0,1,0,0.0,0
645,17,test,Give me the entity in United Kingdom and alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Step 1: Identify Adela Pankhurst
  ?adelapankhurst a dbo:Person ;
                 foaf:name ""Adela Pankhurst""@en .
  
  # Step 2: Find her parent(s)
  ?adelapankhurst dbo:parent ?parent .

  # Step 3: Determine the child of her parent(s) (could be Adela or siblings)
  ?child dbo:parent ?parent ;
         a dbo:Person .

  # Step 4: Find alma mater
  ?child dbo:almaMater ?university .

  # Step 5: Filter by location in United Kingdom
  ?university dbo:location dbr:United_Kingdom .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
696,17,test,Give me the landmark at elevation of the award of the commander in Battle of Chishui River and birth place of Tim Brennan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?recipient ?birthPlace WHERE {
  # Find the award related to the Battle of Chishui River and its recipient
  ?award dbo:relatedEvent dbr:Battle_of_Chishui_River .
  ?award dbo:awardedTo ?recipient .

  # Find Tim Brennan's birthplace
  dbr:Tim_Brennan dbo:birthPlace ?birthPlace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
184,54,test,"Give me the parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of Budapest.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonPerson WHERE {
  # Find the parent of Archduchess Ilona of Austria
  ?ilonaParent a dbo:Person ;
               dbo:child dbr:Archduchess_Ilona_of_Austria .
  
  # Find the grandchild's parent of Archduke Ladislaus Philipp
  ?ladislausChild a dbo:Person ;
                  dbo:parent dbr:Archduke_Ladislaus_Philipp_of_Austria .
  ?grandchild a dbo:Person ;
              dbo:parent ?ladislausChild .
  ?ladislausGrandchildParent a dbo:Person ;
                             dbo:child ?grandchild .

  # Ensure both are royalty
  ?ilonaParent rdf:type dbo:RoyalFamilyMember .
  ?ladislausGrandchildParent rdf:type dbo:RoyalFamilyMember .

  # Find the common person who is also a parent of someone native to Budapest
  ?commonPerson a dbo:Person ;
                rdf:type dbo:RoyalFamilyMember ;
                dbo:parent ?ilonaParent ;
                dbo:parent ?ladislausGrandchildParent .
  
  ?budaNative a dbo:Person ;
              dbo:nationality dbr:Budapest ;
              dbo:parent ?commonPerson .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,63,test,"Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?almaMater ?settlement WHERE {
  # Find the alter ego of Black Hood
  ?blackHood a dbo:Superhero .
  ?blackHood dbo:alterEgo ?alterEgo .

  # Find George K. Nash's alma mater
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Find an entity in the administration that is a settlement
  ?administration dbo:member dbr:George_K._Nash .
  ?settlement a dbo:Settlement ;
              dbo:partOf ?administration .

  # Find the writer of ""Where It's At"" by Dustin Lynch
  dbr:""Where_It's_At_(Dustin_Lynch_song)"" dbo:writer ?writer .

  # Ensure all entities are connected through their respective relationships
  FILTER(?alterEgo = ?settlement && ?almaMater = ?settlement)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,53,test,"Give me the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thado Minsaw of Prome's parent
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw""@en .
  ?parent dbo:child ?thadoMinsaw .

  # Thinkhaya of Pagan and his child
  ?thinkhaya a dbo:Person ;
             rdfs:label ""Thinkhaya of Pagan""@en .
  ?thinkhayaChild dbo:parent ?thinkhaya .

  # Predecessor relationship (assuming a property for predecessor exists)
  ?predecessor dbo:successor ?thinkhayaChild .

  # Thihapate of Mohnyin's office holder and royalty
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .
  ?officeHolder dbo:predecessor ?thihapate ;
                a dbo:OfficeHolder, dbo:Royalty .

  # Combining all conditions
  FILTER (?parent = ?thinkhayaChild && ?person = ?predecessor && ?person = ?officeHolder)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,58,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Identify Francisco Largo Caballero
  VALUES ?francisco { dbr:Francisco_Largo_Caballero }
  
  # Find events or conflicts where he was a commander
  ?event dbo:commander ?commander .
  ?event dbo:participatedIn ?francisco .

  UNION

  # Specifically for the Rif War
  ?rifWar dbo:commander ?commander .
  ?rifWar dbo:participatedIn ?francisco .
  FILTER (STRSTARTS(STR(?rifWar), ""http://dbpedia.org/resource/Rif_War""))

  UNION

  # Any societal event where he was a commander
  ?societalEvent dbo:commander ?commander .
  ?societalEvent dbo:participatedIn ?francisco .
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
9,43,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterJohnAlderdice ?almaMaterCopleyAwardee WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMaterJohnAlderdice .

  # Awardees of the Copley Medal (related to Royal Medals and QUB)
  ?awardee dbo:awardReceived dbr:Copley_Medal .
  
  # Alma mater of the Copley Medal awardee
  ?awardee dbo:almaMater ?almaMaterCopleyAwardee .

  # Filter for recent awardees (assuming a specific year range, e.g., last decade)
  OPTIONAL { 
    ?awardEvent dbo:dateReceived ?date .
    FILTER (YEAR(?date) >= 2013 && YEAR(?date) <= 2023)
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
645,19,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of the parent of Adela Pankhurst.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find James Wilkes Maurice's residence
  dbr:James_Wilkes_Maurice dbo:residence ?residence .
  
  # Ensure the residence is a country
  ?residence a dbo:Country .

  # Find Adela Pankhurst's parent
  dbr:Adela_Pankhurst dbo:parent ?parent .

  # Find the child of that parent (could be Adela or another sibling)
  ?parent dbo:child ?child .

  # Ensure the alma mater of this child is the same as the residence
  ?child dbo:almaMater ?residence .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
617,20,test,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Identify Antiochus III the Great
  dbr:Antiochus_III_the_Great a dbo:Person .

  # Find children of Antiochus III the Great
  ?child dbo:child dbr:Antiochus_III_the_Great .
  
  # For each child, find their spouse
  ?child dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,2,4,0.0,0.0,0
547,29,test,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?restingPlace WHERE {
  # Alan Cunningham
  { 
    ?person a dbo:Person ;
            foaf:name ""Alan Cunningham""@en .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
    BIND(""Alan Cunningham"" AS ?name)
  }

  UNION

  # Actor of ""Enemy at the Door""
  {
    dbr:Enemy_at_the_Door dbo:actor ?actor ;
                          rdfs:label ?filmLabel .
    FILTER (CONTAINS(LCASE(?filmLabel), ""enemy at the door""))
    ?actor a dbo:Person ;
           foaf:name ?actorName .
    OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
    BIND(?actorName AS ?name)
  }

  UNION

  # James Burton (Egyptologist)
  {
    ?person a dbo:Person ;
            foaf:name ""James Burton""@en ;
            dbo:occupation dbr:Egyptology .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
    BIND(""James Burton"" AS ?name)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
994,50,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  dbr:Dokken a dbo:MusicalArtist ;
             dbo:associatedBand ?bandDokken .

  # Step 2: Find bands associated with Fredrik Thordendal
  dbr:Fredrik_Thordendal a dbo:Person ;
                         dbo:member ?bandThordendal .
  
  FILTER (EXISTS { ?bandThordendal a dbo:Band . } &&
          EXISTS { ?bandThordendal a dbo:Organization . } &&
          EXISTS { ?bandThordendal a dbo:Group . })

  # Step 3: Check for common band
  ?commonBand owl:sameAs ?bandDokken ;
             owl:sameAs ?bandThordendal .

  # Step 4: Find associated musical artist of the common band
  ?commonBand dbo:associatedMusicalArtist ?artist .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
488,20,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Enomoto Takeaki's birth place
SELECT ?birthPlace WHERE {
  dbr:Enomoto_Takeaki a dbo:Person .
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
}

UNION

# Query for Yūki Hideyasu's father's death place
SELECT ?deathPlace WHERE {
  dbr:Yuki_Hideyasu dbo:father ?father .
  ?father a dbo:Politician .
  ?father dbo:deathPlace ?deathPlace .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
392,26,test,"Give me the entity in the region, that is a country, of Central European Time and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Find Sebastiano Bianchetti's residence
  dbr:Sebastiano_Bianchetti a dbo:Person .
  dbr:Sebastiano_Bianchetti dbo:residence ?settlement .

  # Ensure the settlement is in Italy and has a province
  ?settlement dbo:country dbr:Italy ;
              a dbo:Settlement ;
              dbo:province ?province .

  # Find the region of the province that uses CET
  ?province dbo:timeZone ?region .
  ?region dbo:timeZone ""Central European Time""^^xsd:string .

  # Identify the country associated with this region
  ?region dbo:country ?country .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,57,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find S.A. Slayer's associated musical artist
SELECT ?sASlayerArtist WHERE {
  ?sA a dbo:Person .
  ?sA rdfs:label ""S.A. Slayer""@en .
  ?sA dbo:associatedMusicalArtist ?sASlayerArtist .
}

# Step 2: Find the band member of S.A. Slayer who is also a band and an organization
SELECT ?bandMember WHERE {
  ?sA a dbo:Person .
  ?sA rdfs:label ""S.A. Slayer""@en .
  ?sA dbo:member ?bandMember .
  ?bandMember a (dbo:Band|dbo:MusicalGroup|dbo:Organization) .
}

# Step 3: Find the organization associated with Fredrik Thordendal
SELECT ?fredrikOrg WHERE {
  ?fredrik a dbo:Person .
  ?fredrik rdfs:label ""Fredrik Thordendal""@en .
  ?fredrik dbo:member ?fredrikOrg .
  ?fredrikOrg a dbo:Organization .
}

# Step 4: Find the band associated with Fredrik Thordendal
SELECT ?band WHERE {
  ?fredrik a dbo:Person .
  ?fredrik rdfs:label ""Fredrik Thordendal""@en .
  ?fredrik dbo:member ?band .
  ?band a (dbo:Band|dbo:MusicalGroup) .
}

# Step 5: Find the band member of this band who is also a band and an organization
SELECT ?dokkenBandMember WHERE {
  ?band a (dbo:Band|dbo:MusicalGroup) .
  ?band dbo:member ?dokkenBandMember .
  ?dokkenBandMember a (dbo:Band|dbo:MusicalGroup|dbo:Organization) .
}

# Step 6: Find the person born as Donald Maynard Dokken
SELECT ?dokken WHERE {
  ?dokken a dbo:Person .
  ?dokken rdfs:label ""Donald Maynard Dokken""@en .
  ?dokken dbo:birthName ""Donald Maynard Dokken"" .
}

# Step 7: Find the associated musical artist of Donald Maynard Dokken
SELECT ?dokkenArtist WHERE {
  ?dokken a dbo:Person .
  ?dokken rdfs:label ""Donald Maynard Dokken""@en .
  ?dokken dbo:associatedMusicalArtist ?dokkenArtist .
}

# Step 8: Find the band member of Donald Maynard Dokken who is also a band and an organization
SELECT ?bandMember WHERE {
  ?dokken a dbo:Person .
  ?dokken rdfs:label ""Donald Maynard Dokken""@en .
  ?dokken dbo:member ?bandMember .
  ?bandMember a (dbo:Band|dbo:MusicalGroup|dbo:Organization) .
}

# Step 9: Find the associated musical artist of this band member
SELECT ?finalArtist WHERE {
  ?bandMember a (dbo:Band|dbo:MusicalGroup|dbo:Organization) .
  ?bandMember dbo:associatedMusicalArtist ?finalArtist .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
838,17,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of Raša Đelmaš.","SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonMember WHERE {
  # Find members of YU Grupa
  ?yuGrupa a dbo:Band ;
           rdfs:label ""YU Grupa""@en .
  
  ?yuGrupa dbo:bandMember ?member1 .

  # Find the band associated with Raša Đelmaš
  ?raša dbr:Raša_Đelmaš ;
        dbo:bandMember ?band2 .

  ?band2 a dbo:Band ;
         rdfs:label ?bandLabel .
  
  # Ensure that the member is part of both bands
  ?band2 dbo:bandMember ?member2 .

  FILTER (?member1 = ?member2)
  
  BIND(?member1 AS ?commonMember)
}
```",4,7,5,3,2,3,2,20,0,0,4,0,0.0,0
994,27,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?person a dbo:Person ;
          foaf:name ""Don Dokken""@en .
  ?band a dbo:Band ;
        dbo:musicalArtist ?person .
  ?bandMember a dbo:MusicalArtist ;
              dbo:bandMember ?band .
  FILTER(?band != dbr:Dokken) # Ensure we don't select Don Dokken himself
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
281,54,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?birthPlaceCountry WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  ?person dbo:participatedInWar ?war .
  ?war dbo:opposingForce dbr:New_Zealand_Army .

  ?electionEvent dbo:leader ?politicianLeader .
  ?electionEvent rdfs:label ""1962 New South Wales state election""@en .
  
  ?politicianLeader a dbo:Politician ;
                   dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
  
  BIND(?birthPlace AS ?birthPlaceCountry)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,26,test,Give me the parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?setiI a dbo:Person ;
         foaf:name ""Seti I""@en .
  
  ?child1 dbo:childOf ?setiI .
  ?grandChild dbo:childOf ?child1 .
  ?greatGrandChild dbo:childOf ?grandChild .

  ?parent dbo:childOf ?greatGrandChild .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
547,54,test,Give me the resting place of the child of James Burton (property developer) and resting place of the actor of the show with Emily Richard and resting place of Alan Cunningham.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace WHERE {
  # Resting place of the child of James Burton (property developer)
  {
    ?child a dbo:Person ;
           dbo:parent dbr:James_Burton_(property_developer) .
    OPTIONAL { ?child dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Resting place of the actor from the show with Emily Richard
  {
    ?show dbo:actor ?actor .
    ?show dbo:castMember dbr:Emily_Richard .
    OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Resting place of Alan Cunningham
  {
    ?alan a dbo:Person ;
          rdfs:label ""Alan Cunningham""@en .
    OPTIONAL { ?alan dbo:deathPlace ?restingPlace . }
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
294,22,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeRestingPlace ?architectRestingPlace WHERE {
  # Find the politician who received the Distinguished Service Medal (U.S. Army)
  ?person a dbo:Person ;
          dbo:award dbr:Distinguished_Service_Medal_(United_States_Army) ;
          dbo:occupation dbr:Politician .
  
  OPTIONAL { ?person dbo:deathPlace ?awardeeRestingPlace . }
  
  # Find the architect of P. D. Houston Jr. House
  ?house a dbo:Building ;
         dbo:architect ?architect .
  FILTER (str(?house) = ""P._D._Houston_Jr._House"")
  
  OPTIONAL { ?architect dbo:deathPlace ?architectRestingPlace . }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
232,47,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Identify John Devon Roland Pertwee
  ?john a dbo:Person ;
        dbo:birthName ""John Devon Roland Pertwee"" .
  
  # Step 2: Find his child who is an actor, narrator, and producer
  ?child dbo:parent ?john ;
         a dbo:Person ;
         dbo:profession ?prof1, ?prof2, ?prof3 .

  FILTER (?prof1 = dbr:Actor || ?prof1 = dbr:Narrator || ?prof1 = dbr:Producer)
  FILTER (?prof2 = dbr:Actor || ?prof2 = dbr:Narrator || ?prof2 = dbr:Producer)
  FILTER (?prof3 = dbr:Actor || ?prof3 = dbr:Narrator || ?prof3 = dbr:Producer)

  # Step 3: Identify the claim to fame involving a film and military conflict
  ?child dbo:claimToFame ?fame .
  
  ?film a dbo:Film ;
        dbo:relatedClaimToFame ?fame .

  ?conflict a dbo:MilitaryConflict ;
            dbo:relatedClaimToFame ?fame .

  # Step 4: Find the actor of the film
  ?film dbo:actor ?actor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,29,test,"Give me the commander in Biscay Campaign and military force of Rif War and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderRole ?rifWarForce ?event WHERE {
  # Identify Francisco Largo Caballero
  VALUES ?francisco { dbr:Francisco_Largo_Caballero }
  
  # Find his role in the Biscay Campaign
  OPTIONAL {
    ?francisco dbo:militaryCommander ?commanderRole .
    ?commanderRole dbo:participatedIn dbr:Biscay_Campaign .
  }

  # Find his involvement in the Rif War
  OPTIONAL {
    ?rifWarForce dbo:participatedIn dbr:Rif_War .
    ?francisco dbo:militaryCommander ?rifWarForce .
  }
  
  # Identify any societal event or military conflict associated with him
  OPTIONAL {
    ?event dbo:participant ?francisco .
    FILTER (STRSTARTS(STR(?event), ""http://dbpedia.org/resource/"") && 
            (CONTAINS(LCASE(STR(?event)), ""conflict"") || CONTAINS(LCASE(STR(?event)), ""societal"")))
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
16,47,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find the actor from ""Unnatural (TV series)""
  ?actor dbo:profession dbr:Actor ;
         dbo:workFeaturedIn dbr:Unnatural_(TV_series) .

  # Find Ted Martin McGinley's spouse
  ?ted a dbo:Person ;
       foaf:name ""Ted Martin McGinley""@en .
  ?ted dbo:spouse ?spouse .

  # Match the profession of the actor with that of the spouse
  ?spouse dbo:profession ?professional .
  
  FILTER (?actor != ?spouse) # Ensure they are not the same person
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,24,test,Give me the party of Romano Prodi and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  VALUES ?person { dbr:Romano_Prodi dbr:Lamberto_Andreotti }
  ?person dbo:party ?party .
}
```",3,3,4,2,2,3,3,71,3,5,0,0.375,1.0,0.5454545454545454
801,45,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in  and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Identify the album
  ?album a dbo:Album ;
         rdfs:label ""What U See Is What U Get""@en .
  
  # Find the writer of the album who is also a musical artist and an artist
  ?writer dbo:writerOf ?album ;
          a dbo:Writer, dbo:MusicalArtist, dbo:Artist .

  # Identify the associated musical artist
  ?associatedArtist dbo:associatedBandMember ?writer ;
                    a dbo:MusicalArtist .

  # Ensure this artist is also a producer of ""Westside Story (song)""
  ?producerAlbum a dbo:Song ;
                 rdfs:label ""Westside Story (song)""@en .
  
  ?associatedArtist dbo:producer ?producerAlbum .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
747,62,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athlete ?writer WHERE {
  # Find athlete who is a soccer player born in Zolotonosha
  ?athlete a dbo:Athlete ;
           dbo:soccerPlayer true ;
           dbo:birthPlace dbr:Zolotonosha ;
           dbo:birthDate ?birthDate .

  # Match birth date with death date of another person (decedent)
  ?decedent dbo:deathDate ?birthDate .

  # Find writer associated with Amba Shepherd and Shèna through their works
  ?work a dbo:Song ;
        dbo:author ?writer .
  
  ?ambashepherdWork a dbo:Song ;
                    dbo:author dbr:Amba_Shepherd ;
                    dbo:bandMember ?ambaband .

  ?shenasWork a dbo:Song ;
              dbo:author dbr:Shèna ;
              dbo:bandMember ?shenaband .
  
  FILTER (?ambaband = ?shenaband)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
328,45,test,"Give me the commander in Eastern Front (World War II) and awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify Gustav Jonson's leadership role
  ?gustavJonson a dbo:Person ;
                dbo:officeHolder ?office ;
                dbo:politician ?politics .

  # Find the commander in Eastern Front during World War II
  ?commander a dbo:Person ;
             dbo:commanderInChief ?easternFront ;
             dbo:awardeeOf dbr:Order_of_Suvorov .

  # Ensure this person is also a leader of a government agency
  ?commander dbo:headOf ?governmentAgency .

  # Link Gustav Jonson's leadership to the commander
  ?office dbo:leader ?commander .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
492,36,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Death place at the capital of Khemis Miliana District, which is a settlement
  ?deathPlace1 dbo:country dbr:Algeria ;
              rdfs:label ""Khemis Miliana""@en ;
              a dbo:Settlement .

  ?person dbo:deathPlace ?deathPlace1 .
  
  # Death place in French Algeria
  ?deathPlace2 rdfs:label ""French Algeria""@en .
  ?person dbo:deathPlace ?deathPlace2 .
}
```",4,5,5,3,2,3,3,71,0,0,16,0,0.0,0
16,18,test,Give me the professional in Actress and spouse of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation dbo:Actress .
  ?person dbo:spouse dbr:Ted_McGinley .
  ?person rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), ""georgeanne marie rice""))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,65,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify Ernest Augustus, Duke of Brunswick's father
  dbr:Ernest_Augustus,_Duke_of_Brunswick a dbo:Person .
  ?father dbo:parent dbr:Ernest_Augustus,_Duke_of_Brunswick .

  # Step 2: Find the spouse of Ernest Augustus's father who is royalty
  ?spouse dbo:spouse ?father ;
          a dbo:Royalty .

  # Step 3: Identify Princess Victoria Louise of Prussia as this spouse
  ?spouse dbr:Princess_Victoria_Louise_of_Prussia .

  # Step 4: Find the child of Princess Victoria Louise who is royalty
  ?child dbo:parent ?spouse ;
         a dbo:Royalty .

  # Step 5: Identify the parent of this child, who must be royalty
  ?grandParent dbo:parent ?child ;
               a dbo:Royalty .

  # Step 6: Locate Prince George William of Hanover and his parent
  dbr:Prince_George_William_of_Hanover a dbo:Person .
  ?parent dbr:Prince_George_William_of_Hanover dbo:parent .

  # Step 7: Ensure the child from step 4 matches the child of the parent from step 6
  FILTER (?grandParent = ?parent)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
959,47,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  # Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  # The university must be Japanese, an organization, a university, and an educational institution
  ?university a dbo:University ;
             a dbo:EducationalOrganization ;
             dbo:country dbr:Japan .

  # Find the politician who led in the 2010 Japanese House of Councillors election
  ?politician dbo:election ?election .
  ?election dbo:date ?date .
  FILTER (YEAR(?date) = 2010 && STRSTARTS(STR(?election), ""Japanese House of Councillors""))

  # The politician's residence is a country
  ?politician dbo:residence ?country .

  # Find the member of the university who is native to this country
  ?member dbo:nativePlace ?country ;
          dbo:almaMater ?university .
}
```",5,11,6,3,2,3,3,71,0,0,84,0,0.0,0
427,63,test,"Give me the party of the father of Lamberto Andreotti and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v6 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherPartyLabel ?michelePintoPartyLabel ?prodiPartyLabel WHERE {
  # Lamberto Andreotti's father and his party
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .
  ?fatherParty rdfs:label ?fatherPartyLabel .

  # Michele Pinto's party
  dbr:Michele_Pinto dbo:partyAffiliation ?michelePintoParty .
  ?michelePintoParty rdfs:label ?michelePintoPartyLabel .

  # Romano Antonio Prodi's party, ensuring he is a politician or office holder
  dbr:Romano_Antonio_Prodi a dbo:Politician ;
                          dbo:partyAffiliation ?prodiParty .
  ?prodiParty rdfs:label ?prodiPartyLabel .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
778,16,test,"Give me the entity in the award of Ralph L. Brinster and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find the award associated with Ralph L. Brinster
  ?person1 a dbo:Person ;
           foaf:name ""Ralph L. Brinster""@en .
  ?person1 dbo:award ?award .

  # Find software authored by Bill Joy
  ?person2 a dbo:Person ;
           foaf:name ""Bill Joy""@en .
  ?work dbo:author ?person2 ;
        rdf:type dbo:Software .

  # Check if the award is related to the software
  ?award dbo:relatedWork ?entity .
  ?entity rdf:type dbo:Software .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
9,66,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Find the mayor who is a politician of Northern Ireland Forum
  ?mayor a dbo:Person ;
         dbo:positionHeld ?forumPosition .
  ?forumPosition dbo:organization dbr:Northern_Ireland_Forum .

  # Ensure the person is also a politician
  ?mayor dbo:almaMater ?almaMater .

  # Find an awardee of the Royal Medal
  ?awardee a dbo:Person ;
           dbo:award dbr:Royal_Medal .
  ?awardee dbo:almaMater ?almaMater .

  # Find a figure known by a nickname
  ?figure a dbo:Person ;
          dbo:nickname ?nickname .
  ?figure dbo:almaMater ?almaMater .

  # Ensure the alma mater is an organization and educational institution in Northern Ireland
  ?almaMater a dbo:EducationalInstitution, dbo:Organization ;
             dbo:location dbr:Northern_Ireland .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
281,66,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Step 1: Find Bob Heffron's birth place that is a country
  ?heffron a dbo:Person ;
           foaf:name ""Bob Heffron"" ;
           dbo:birthPlace ?birthPlace .
  
  FILTER (isBlank(?birthPlace) || ?birthPlace a dbo:Country)

  # Step 2: Determine his profession related to a military unit in the New Zealand Army
  ?heffron dbo:profession ?profession .
  ?profession dbo:militaryUnit ?militaryUnit .
  FILTER (?militaryUnit = dbr:New_Zealand_Army)

  # Step 3: Find office holder or politician related to his profession
  OPTIONAL {
    ?officeHolder a dbo:OfficeHolder ;
                 dbo:positionHeld ?profession .
    ?politician a dbo:Politician ;
                dbo:politicalAffiliation ?militaryUnit .
  }

  # Step 4: Identify awardee of Knight Grand Cross of the Order of the Bath
  OPTIONAL {
    ?awardee dbo:awardReceived dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath ;
            dbo:militaryUnit ?militaryUnit .
  }
  
  # Return the entity that matches all conditions
  VALUES ?entity { ?birthPlace ?profession ?officeHolder ?politician ?awardee }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
747,69,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v7 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athlete WHERE {
  # Find the decedent and their death date
  ?decedent a dbo:Person .
  ?decedent dbo:deathDate ?deathDate .

  # Find the athlete who is also a soccer player, born in Zolotonosha
  ?athlete a dbo:Athlete ;
           dbo:SoccerPlayer true ;
           dbo:birthPlace dbr:Zolotonosha ;
           dbo:birthDate ?birthDate .
  
  FILTER (?birthDate = ?deathDate)

  # Find the person born as ""Shèna"" and their band
  ?shenaPerson a dbo:Person ;
               rdfs:label ""Shèna""@en ;
               dbo:bandMember ?shenaBand .

  # Find the writer of Apollo (Hardwell song) and their band
  ?apolloWriter a dbo:Writer ;
                dbo:wrote dbr:Apollo_(song_by_Hardwell) .
  ?apolloWriter dbo:bandMember ?apolloBand .

  # Ensure the athlete is associated with both bands
  ?athlete dbo:bandMember ?shenaBand, ?apolloBand .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
92,21,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?otherBand WHERE {
  ?person a dbo:Person .
  ?person dbo:bandMember dbr:Nevermore .
  ?person dbo:artist true .
  
  # Find Joseph Michael
  OPTIONAL { ?person foaf:name ""Joseph Michael"" . }
  
  # Find other band of the person
  ?person dbo:band ?otherBand .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
161,70,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Francisco Franco's military command
  ?event1 a dbo:MilitaryConflict ;
          dbo:militaryCommanderOf ?franco .
  
  # Indalecio Prieto's predecessor, Miguel Primo de Rivera
  ?event2 a dbo:SocietalEvent , dbo:MilitaryConflict ;
          dbo:militaryCommanderOf ?miguelPrimoDeRivera .

  # Find commanders related to these events
  ?commander dbo:militaryCommanderOf ?franco .
  ?commander dbo:militaryCommanderOf ?miguelPrimoDeRivera .

  # Ensure the individuals are correctly identified
  ?franco dbr:Francisco_Franco .
  ?miguelPrimoDeRivera dbr:Miguel_Primo_de_Rivera .
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
959,62,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  # Identify the leader of the 2010 Japanese House of Councillors election
  ?leader a dbo:Politician ;
          dbo:nativePlace ?country .

  # Find the person born in 1958 who managed Júbilo Iwata in 2013
  ?person a dbo:Person ;
          dbo:birthDate ?date ;
          dbo:nationality dbr:Japan ;
          dbo:almaMater ?almaMater .
  
  FILTER (YEAR(?date) = 1958)

  # Assuming there's a property or resource for the manager of Júbilo Iwata in 2013
  ?person dbo:managerOfJubiloIwata2013 dbr:True .

  # Ensure alma mater is a Japanese university and educational institution
  ?almaMater a dbo:University ;
             dbo:country dbr:Japan ;
             a dbo:EducationalOrganization .
  
  # Link the person's native country to the leader's native place
  ?person dbo:nativePlace ?country .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
285,18,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find Aristotle Onassis
  dbr:Aristotle_Onassis a dbo:Person ;
                       dbo:spouse ?spouse .

  # Find the children of Aristotle Onassis and his spouse
  ?child dbo:parent ?spouse .
  
  # Find the parents of these children (which are the spouses themselves)
  ?child dbo:parent ?parent .
}
```",5,5,6,3,2,3,2,20,3,1,0,0.75,1.0,0.8571428571428571
827,16,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonPerson WHERE {
  # Find children of Maria Pavlovna
  ?child1 dbo:parent dbr:Maria_Pavlovna_of_Russia ;
          a dbo:Person .
  
  # Find grandchildren (children of her children) who are royalty
  ?grandChild dbo:parent ?child1 ;
              a dbo:Monarch .

  # Find children of Charles Augustus
  ?child2 dbo:parent dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach ;
          a dbo:Person .
  
  # Find fathers of his children who are royalty
  ?father dbo:child ?child2 ;
          a dbo:Monarch .

  # Identify the common person in both paths
  FILTER (?grandChild = ?commonPerson && ?commonPerson = ?father)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
747,39,test,Give me the band of Amba Shepherd and band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Band of Amba Shepherd
SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Amba Shepherd""@en .
  ?person dbo:band ?band .
}

UNION

# Part 2: Band of the person known as Shèna
SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Shèna""@en .
  OPTIONAL { ?person foaf:nick ?realName . }
  ?person dbo:band ?band .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,51,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit WHERE {
  # Identify Bob Heffron
  dbr:Bob_Heffron a dbo:Person ;
                  dbo:birthPlace ?birthPlace .
  
  # Ensure birthplace is a country
  ?birthPlace a dbo:Country .

  # Find military unit associated with him in New Zealand Army
  OPTIONAL { 
    ?militaryUnit dbo:militaryBranch dbr:New_Zealand_Army ;
                  dbo:member dbr:Bob_Heffron .
  }

  # Ensure he was an office holder and politician
  ?officeHolder a dbo:OfficeHolder ;
               dbo:holder dbr:Bob_Heffron .
  
  ?politician a dbo:Politician ;
              dbo:person dbr:Bob_Heffron .

}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
294,25,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace WHERE {
  # Query for the politician with Distinguished Service Medal (U.S. Army)
  {
    ?person a dbo:Person .
    ?person dbo:occupation dbr:Politician .
    ?person dbo:honoraryTitle dbr:Distinguished_Service_Medal_(United_States_Army) .
    ?person dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Query for the architect of P. D. Houston Jr. House
  {
    ?architect a dbo:Person .
    ?house dbo:architect ?architect .
    ?house rdfs:label ""P. D. Houston Jr. House""@en .
    ?architect dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Query for an entity in Nashville, Tennessee
  {
    ?entity a dbo:Place ;
            dbo:location dbr:Nashville,_Tennessee .
    ?entity dbo:deathPlace ?restingPlace .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
378,41,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query 1: War of Carl Pontus Gahn
SELECT ?war WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""Carl Pontus Gahn""@en .
  ?person dbo:participatedInWar ?war .
}

UNION

# Query 2: Commander in the Peninsular War
SELECT ?commander WHERE {
  ?war dbr:Peninsular_War ;
       dbo:commander ?commander .
}

UNION

# Query 3: Claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?fame WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  ?person dbo:famousFor ?fame .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
303,21,test,"Give me the entity in Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  VALUES ?person { 
    dbr:Arnulfo_Arias_Madrid 
    dbr:Guillermo_Endara 
  }
  
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Panama .
  ?person dbo:partyAffiliation ?party .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
701,27,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?commander dbo:participatedInBattle dbr:Battle_of_Perire .
  ?father dbo:child ?commander .
  ?father a dbo:Person .
  ?spouse dbo:spouse ?father .
  ?spouse a dbo:Royalty .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
959,58,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Identify the manager of the 1998 Kashima Antlers season
  dbr:Kashima_Antlers_season_1998 dbo:manager ?teamManager .
  
  # Ensure this person is a sports manager
  ?teamManager a dbo:SportsManager .

  # Check if they were a member of University of Tsukuba
  ?teamManager dbo:almaMater dbr:University_of_Tsukuba .

  # Find Yōichi Masuzoe's native country
  dbr:Yōichi_Masuzoe dbo:nativePlace ?nativePlace .
  ?nativePlace a dbo:Country ;
               rdfs:label ?countryLabel .

  # Ensure the manager shares the same native country as Yōichi Masuzoe
  ?teamManager dbo:nativePlace ?managerNativePlace .
  ?managerNativePlace a dbo:Country ;
                      rdfs:label ?managerCountryLabel .
  
  FILTER (STR(?countryLabel) = STR(?managerCountryLabel))
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
421,20,test,Give me the band member of Senidah and native of the birthplace of Samir Bekrić and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the band member of Senidah
  ?bandMember dbo:bandMember dbr:Senidah .
  
  # Find Samir Bekrić's birthplace
  dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .

  # Find someone native to that birthplace and born as Edin Dervišhalidović
  ?person dbo:nativePlace ?birthPlace .
  ?person foaf:name ""Edin Dervišhalidović""@en .
  
  # Ensure the person is the same across all conditions
  FILTER (?bandMember = ?person)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
767,44,test,Give me the alma mater of the administration of George K. Nash and reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?alterEgo ?entityInBW WHERE {
  # George K. Nash's alma mater
  OPTIONAL {
    ?nash a dbo:Person ;
          foaf:name ""George K. Nash"" ;
          dbo:almaMater ?almaMater .
  }

  # Alter ego of Black Hood
  OPTIONAL {
    ?character a dbo:FictionalCharacter ;
               rdfs:label ""Black Hood""@en ;
               dbo:alterEgo ?alterEgo .
  }

  # Entity in Baden-Württemberg
  OPTIONAL {
    ?entityInBW a dbo:Place ;
                dbo:locationCountry dbr:Germany ;
                dbo:administrativeArea dbr:Baden-Württemberg .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
994,56,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find associated musical artist of Watchtower (band)
SELECT ?watchtowerArtist WHERE {
  dbr:Watchtower dbo:associatedBandOrMusicalArtist ?watchtowerArtist .
}

# Step 2: Find associated musical artist of Red Tide (band)
SELECT ?redTideArtist WHERE {
  dbr:Red_Tide dbo:associatedBandOrMusicalArtist ?redTideArtist .
}

# Step 3: Find common band member between Watchtower and Red Tide artists
SELECT DISTINCT ?commonMember WHERE {
  { ?watchtowerArtist dbo:member ?commonMember . }
  UNION
  { ?redTideArtist dbo:member ?commonMember . }
}

# Step 4: Identify the band associated with Don Dokken as a musical artist
SELECT ?donDokkenBand WHERE {
  dbr:Don_Dokken dbo:associatedBandOrMusicalArtist ?donDokkenBand .
}

# Step 5: Find band members of Don Dokken's band who are also musical artists and born on a specific date
SELECT DISTINCT ?bandMember WHERE {
  ?donDokkenBand dbo:member ?bandMember .
  ?bandMember a dbo:MusicalArtist .
  ?bandMember dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1953 && MONTH(?date) = 12 && DAY(?date) = 29)
}

# Note: The final query would logically combine these steps to find the desired result.
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,64,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceSaito ?deathPlaceIeyasu WHERE {
  # Saitō Hajime's birth place
  dbr:Saitō_Hajime a dbo:Person ;
                   dbo:birthPlace ?birthPlaceSaito .

  # Boshin War as a military conflict and societal event
  dbr:Boshin_War a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .

  # Saitō Hajime's role in the Boshin War
  ?commanderRole a dbo:Commander ;
                 dbo:person ?saitoHajime ;
                 dbo:militaryConflict dbr:Boshin_War .
  FILTER (?saitoHajime = dbr:Saitō_Hajime)

  # Tokugawa Masako's spouse and his father
  dbr:Tokugawa_Masako a dbo:Person ;
                      dbo:spouse ?royaltySpouse .
  ?royaltySpouse a dbo:Royalty ;
                 dbo:father ?fatherOfSpouse .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu a dbo:Person ;
                      dbo:deathPlace ?deathPlaceIeyasu .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
528,51,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?force ?war WHERE {
  # Find the person with birth name Narciso Campero
  ?person a dbo:Person .
  ?person rdfs:label ""Narciso Campero""@en .

  OPTIONAL {
    # Find the force commanded by this person
    ?commanderRole dbo:militaryCommander ?person ;
                  dbo:commandedForce ?force .
  }

  OPTIONAL {
    # Find the war associated with the Battle of La Rinconada de Ate
    dbr:Battle_of_La_Rinconada_de_Ate dbo:partOf ?war .
  }
}
```",5,5,6,3,2,3,3,71,0,1,2,0.0,0.0,0
92,24,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band WHERE {
  VALUES ?person { 
    dbr:Jim_Sheppard 
    dbr:Joseph_Michael_(musician)
  }
  
  ?person a dbo:Person .
  ?person dbo:musicalArtist ?band .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
617,42,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Seleucus II Callinicus and his children
  dbr:Seleucus_II_Callinicus a dbo:Person .
  ?child1 dbo:child dbr:Seleucus_II_Callinicus .
  
  # Child of the child who is royalty
  ?child2 dbo:child ?child1 .
  ?child2 a dbo:Monarch .  # Assuming Monarch indicates royalty

  # Antiochus III the Great and his son Antiochus
  dbr:Antiochus_III_the_Great a dbo:Person .
  ?antiochusChild dbo:child dbr:Antiochus_III_the_Great .

  # The child of Antiochus (son of Antiochus III the Great)
  ?antiochusGrandchild dbo:child ?antiochusChild .

  # Laodice IV
  dbr:Laodice_IV a dbo:Person .

  # Conditions to satisfy the question
  ?childOfChild dbo:spouse dbr:Laodice_IV .
  ?childOfChild dbo:parent ?antiochusGrandchild .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
92,57,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""Joseph Michael Furney"" .
  
  ?person dbo:actorOfFilm dbr:Return_to_Nuke_'Em_High_Volume_1 ;
          dbo:bandMemberOf dbr:Nevermore .

  ?person dbo:associatedBandOrMusicalArtist ?artist .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,35,test,"Give me the band of the person born as Joseph Michael Furney and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael Furney""@en .
  ?person dbo:bandMember ?memberRole .
  ?memberRole dbo:band dbr:Nevermore .
  ?person dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(?occupation), ""music"") || CONTAINS(LCASE(?occupation), ""artist""))
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
345,19,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen and figure known as the nickname of FC Vaduz.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Eiður Guðjohnsen's birth date
SELECT ?birthDate WHERE {
  dbr:Eiður_Guðjohnsen a dbo:Person .
  dbr:Eiður_Guðjohnsen dbo:birthDate ?birthDate .
}

# Step 2: Find a soccer player and manager born on the same date
SELECT DISTINCT ?person ?team WHERE {
  ?person a dbo:Person ;
          dbo:soccerPlayer true ;
          dbo:soccerManager true ;
          dbo:birthDate ?date .

  # Use the birth date from step 1 (replace with actual value after running step 1)
  FILTER (?date = ""1969-09-15""^^xsd:date) 

  OPTIONAL {
    ?person dbo:team ?team .
  }
}

# Step 3: Find FC Vaduz's nickname
SELECT DISTINCT ?nickname WHERE {
  dbr:FC_Vaduz rdfs:label ?nickname .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
801,29,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?work ?profession WHERE {
  # Find Chris Taylor as a music producer
  ?chris a dbo:Person ;
         foaf:name ""Chris Taylor"" ;
         dbo:occupation dbo:MusicProducer .
  
  # Identify the associated musical artist
  ?chris dbo:associatedBandMember ?artist .

  # Find works produced by this artist involving 50 Cent
  ?work dbo:producer ?artist ;
        a dbo:Songs, dbo:MusicalWork ;
        dbo:lyricist dbr:50_Cent .
  
  # Determine the professional field of Chris Taylor
  ?chris dbo:profession ?profession .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
184,69,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Part 1: Archduchess Margaret of Austria's lineage
  ?margaret a dbo:Person ;
            dbo:birthDate ?dateMargaret .
  FILTER (YEAR(?dateMargaret) = 1925)
  
  ?parentMargaret dbo:child ?margaret .
  ?grandChildMargaret dbo:child ?parentMargaret .
  ?greatGrandParentMargaret dbo:parent ?grandChildMargaret .

  # Part 2: Archduke Joseph Karl of Austria's lineage
  ?josephKarl a dbo:Person ;
              dbo:child ?childJosephKarl .
  ?parentChildJosephKarl dbo:parent ?childJosephKarl .

  # Landmark and Settlement Information
  ?landmark a dbo:Settlement ;
            dbo:elevation ?elevation .
  FILTER (STR(?elevation) = ""96.0"")
  
  ?native dbr:birthPlace ?landmark .

  # Combine Results
  VALUES ?commonEntity { ?greatGrandParentMargaret ?parentChildJosephKarl }
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
391,62,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Sherry Hormann's spouse and their claim to fame (a work)
SELECT ?spouse WHERE {
  ?sherry a dbo:Person ;
          foaf:name ""Sherry Hormann""@en .
  ?sherry dbo:spouse ?spouse .
}

# Assuming we manually find that the spouse is known for a specific work, e.g., ""The Lives of Others""
# Step 2: Find an actor from ""All About the Andersons""
SELECT ?actor WHERE {
  ?film a dbo:Film ;
        foaf:name ""All About the Andersons""@en .
  ?film dbo:starring ?actor .
}

# Assuming we manually find that the actor is known for another work, e.g., ""The Lives of Others""

# Step 3: Find the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
  ?place a dbo:Place ;
         foaf:name ""Jackson, Tennessee""@en .
  ?place dbo:nickname ?nickname .
}

# Assuming we manually find that the nickname is ""The City with Soul""

# Step 4: Find the native of this nickname
SELECT ?native WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace dbr:The_City_with_Soul .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,45,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of The Departed.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?movie WHERE {
  ?actor a dbo:Person ;
         dbo:nativePlace dbr:Compton,_California ;
         dbo:actor dbr:The_Departed .
  
  ?actor dbo:actor ?film .
  ?film a dbo:Film ;
        rdfs:label ?label .

  FILTER CONTAINS(LCASE(?label), ""television show"")
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
427,59,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Michele Pinto's party
SELECT ?michelePintoParty WHERE {
  ?person rdfs:label ""Michele Pinto""@en .
  OPTIONAL { ?person dbo:party ?michelePintoParty . }
}

UNION

# Query for the father of an MIT alumnus and his party
SELECT ?fatherParty WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:parent ?father .
  OPTIONAL { ?father dbo:party ?fatherParty . }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
754,18,test,Give me the parent of the parent of the parent of Min Linka and parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Path to find the third ancestor of Min Linka
  ?minLinka a dbo:Person ;
            rdfs:label ""Min Linka""@en .
  
  ?parent1 dbo:child ?minLinka .
  ?parent2 dbo:child ?parent1 .
  ?thirdAncestor dbo:child ?parent2 .

  # Path to find the parent of the child of Ram Khamhaeng
  ?ramKhamhaeng a dbo:Person ;
                rdfs:label ""Ram Khamhaeng""@en .
  
  ?child dbo:parent ?ramKhamhaeng .
  ?parentOfChild dbo:child ?child .

  # Find common entity between the two paths
  VALUES ?commonAncestor { ?thirdAncestor ?parentOfChild }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
378,54,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?carlGahnBirthDate ?crillonClaimToFame ?peninsularWar WHERE {
  # Carl Pontus Gahn's birth date
  dbr:C._P._Gahn a dbo:Person ;
                 dbo:birthDate ?carlGahnBirthDate .

  # Louis des Balbes de Berton de Crillon, 1st Duke of Mahón's claim to fame
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón a dbo:Person ;
                                                           dbo:claimToFame ?crillonClaimToFame .

  # Wars associated with Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  ?war a dbo:MilitaryConflict ;
       dbo:commanderOf dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón .
  
  # Filter for Peninsular War
  OPTIONAL { ?peninsularWar a dbo:MilitaryConflict ;
                           rdfs:label ""Peninsular War""@en }
  
  FILTER (?war = ?peninsularWar)
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
701,65,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Seti I's child (Child A)
  ?childA dbo:parent dbr:Seti_I .
  
  # Child B, who is the child of Child A
  ?childB dbo:parent ?childA .

  # Parent of Child B is Child A
  ?parentOfChildB dbo:child ?childB .
  FILTER (?parentOfChildB = ?childA)

  # Seti I's spouse (Nefertari)
  ?spouse dbo:spouse dbr:Seti_I .
  
  # Father of Merneptah is Seti I
  ?merneptah dbo:father dbr:Seti_I .

  # Parent of Nefertari's child is Seti I
  ?childOfNefertari dbo:parent dbr:Nefertari .
  ?setiIParent dbo:child ?childOfNefertari .
  FILTER (?setiIParent = dbr:Seti_I)

  # Find the common entity that fits all roles
  VALUES ?person {dbr:Seti_I dbr:Nefertari}
  OPTIONAL {
    ?person ?p1 ?parentOfChildB .
    ?person ?p2 ?spouse .
    ?person ?p3 ?setiIParent .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
783,18,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Priscilla Opoku-Kwarteng's band members
  ?priscillaBandMember a dbo:Person .
  ?priscillaBandMember dbo:member ?priscillaBand .
  ?priscillaBand dbr:Priscilla_Opoku-Kwarteng .

  # Samuel Ofori Amponsah's band members
  ?samuelBandMember a dbo:Person .
  ?samuelBandMember dbo:member ?samuelBand .
  ?samuelBand dbr:Samuel_Ofori_Amponsah .

  # Ensure the person is both Priscilla's and Samuel's band member
  FILTER (?priscillaBandMember = ?samuelBandMember)

  # Check if the band member is an Artist and a MusicalArtist
  ?bandMember a dbo:Person .
  ?bandMember dbo:member ?band .
  ?band dbr:Priscilla_Opoku-Kwarteng ;
        dbr:Samuel_Ofori_Amponsah .
  ?bandMember a dbo:Artist, dbo:MusicalArtist .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
959,57,test,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v1 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the politician who led the 2010 Japanese House of Councillors election
  ?politician a dbo:Politician ;
              dbo:electedAsMemberOf ?election .
  
  ?election dbo:date ?date .
  FILTER (YEAR(?date) = 2010 && CONTAINS(LCASE(str(?election)), ""japanese house of councillors""))

  # Find the country where this politician is native
  ?politician dbo:nationalityOrCitizenship ?country .

  # Find a person who is a member of University of Tsukuba and native of that country
  ?person a dbo:Person ;
          dbo:almaMater dbr:University_of_Tsukuba ;
          dbo:nationalityOrCitizenship ?country .

  # Ensure this person manages Takashi Sekizuka's team
  ?person dbo:managerOfTeam dbr:Takashi_Sekizuka .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
328,46,test,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?commander WHERE {
  # Find the awardee of an award related to the Volcano and Ryukyu Islands campaign
  ?award a dbo:Award .
  ?award dbo:recipient ?awardee .
  ?campaign dbo:name ""Volcano and Ryukyu Islands campaign"" ;
            dbo:relatedAward ?award .

  # Find the commander associated with Ferenc Szálasi
  ?szalasi a dbo:Person ;
           foaf:name ""Ferenc Szálasi"" .
  ?commander a dbo:Commander ;
             dbo:commandedBy ?szalasi .
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
404,66,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
            rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  # Her spouse
  ?princess dbo:spouse ?spouse .

  # Father of her spouse
  ?spouse dbo:parent ?father .

  # Child of this father who is also a parent to another royalty
  ?child dbo:parent ?father ;
         dbo:parent ?royaltyParent .

  # Royalty child of Ernest Augustus, Duke of Brunswick
  ?royaltyChild dbo:parent dbr:Ernest_Augustus,_Duke_of_Brunswick .
  
  # Ensure the royalty parent is related to the royalty child
  ?royaltyParent dbo:child ?royaltyChild .

  FILTER (LANG(?princessLabel) = ""en"" && LANG(?spouseLabel) = ""en"")
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,66,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Events involving Francisco Franco
  ?event1 a dbo:MilitaryConflict ;
          dbo:commander ?commander .
  ?event1 dbo:participant dbr:Franco_Francisco .

  # Events involving Largo Caballero
  ?event2 a dbo:MilitaryConflict ;
          dbo:commander ?commander .
  ?event2 dbo:participant dbr:Largo_Caballero_Francisco .

  # Ensure the commander is common to both events
  FILTER (?commander = ?commonCommander)
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
184,21,test,Give me the parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the parent of Archduchess Ilona of Austria
SELECT ?parent WHERE {
  dbr:Archduchess_Ilona_of_Austria a dbo:Person .
  dbr:Archduchess_Ilona_of_Austria dbo:parent ?parent .
}

UNION

# Query for the parent of a notable native of Budapest (e.g., Béla Bartók)
SELECT ?parent WHERE {
  dbr:Béla_Bartók a dbo:Person .
  dbr:Béla_Bartók dbo:nativePlace dbr:Budapest .
  dbr:Béla_Bartók dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,70,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Find the politician who was a leader in the 2010 Japanese House of Councillors election
  ?politician dbo:electedAs dbr:Japanese_House_of_Councillors_election,_2010 .
  
  # This politician is also a manager of the team managed by the sports manager of the 1998 Kashima Antlers season
  ?sportsManager dbo:manager dbr:Kashima_Antlers_season_1998 .
  ?politician dbo:manager ?team .
  ?team dbo:managedBy ?sportsManager .

  # This politician is an alumnus of Eiji Ōtsuka's alma mater
  ?eijiAlmaMater a dbo:University ;
                 dbo:country dbr:Japan ;
                 dbo:alumni ?politician .
  ?eijiAlmaMater dbo:alumni dbr:Eiji_Ōtsuka .

  # Get the native country of this politician's residence
  ?politician dbo:nationality ?nativeCountry .
}
```",8,15,9,3,3,3,3,71,0,0,2,0,0.0,0
547,49,test,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childRestingPlace ?awardeeRestingPlace WHERE {
  # Part 1: Resting place of the child of James Burton (property developer)
  dbr:James_Burton_(property_developer) a dbo:Person .
  ?child dbo:parent dbr:James_Burton_(property_developer) .
  ?child dbo:finalBurial ?childRestingPlace .

  # Part 2: Resting place of the awardee of the award of Gerald Graham
  dbr:Gerald_Graham a dbo:Person .
  ?award dbo:recipient dbr:Gerald_Graham .
  ?awardee dbo:award ?award .
  ?awardee dbo:finalBurial ?awardeeRestingPlace .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
378,66,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?carlWar ?peninsularCommander ?claimToFame WHERE {
  # Find Carl Pontus Gahn's war involvement
  ?carl a dbo:Person ;
        rdfs:label ""Carl Pontus Gahn""@en ;
        dbo:birthDate ?date .
  OPTIONAL { ?carl dbo:militaryConflict ?carlWar . }

  # Find the commander of the Peninsular War and their claim to fame
  ?peninsularWar a dbo:MilitaryConflict ;
                 rdfs:label ""Peninsular War""@en ;
                 dbo:commander ?peninsularCommander .
  OPTIONAL { ?peninsularCommander dbo:claimToFame ?claimToFame . }

  # Filter for events that are both military conflicts and societal events
  FILTER EXISTS {
    ?claimToFame a dbo:MilitaryConflict ;
                a dbo:SocietalEvent .
  }
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,56,test,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?allenHillAlmaMater ?organisationNickname ?mayorAlmaMater WHERE {
  # Allen Hill's alma mater
  OPTIONAL {
    ?allenHill a dbo:Scientist ;
               foaf:name ""Allen Hill"" .
    ?allenHill dbo:almaMater ?allenHillAlmaMater .
  }

  # Organisation and educational institution in Northern Ireland with a nickname
  OPTIONAL {
    ?organisation a dbo:EducationalInstitution, dbo:Organisation ;
                  dbo:location dbr:Northern_Ireland ;
                  rdfs:label ?nickname .
    FILTER (CONTAINS(LCASE(?nickname), ""nickname""))
    BIND(?nickname AS ?organisationNickname)
  }

  # Mayor of the Northern Ireland Forum's alma mater
  OPTIONAL {
    ?mayor a dbo:Politician ;
           foaf:name ?mayorName ;
           dbo:almaMater ?mayorAlmaMater .
    ?forum dbr:Northern_Ireland_Forum ;
           dbo:member ?mayor .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
312,9,test,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy) and entity in the birthplace of Giorgio Grigolli.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Part 1: Entity in administration with multiple roles and political affiliation
  {
    ?entity a dbo:PopulatedPlace ;
           a dbo:Region ;
           a dbo:State .
    OPTIONAL { ?entity dbo:nationality dbr:Italy . }
    OPTIONAL { ?entity dbo:memberOfParty dbr:Democratic_Party_(Italy) . }
  }

  UNION

  # Part 2: Entity in the birthplace of Giorgio Grigolli
  {
    ?grigolli a dbo:Person ;
              dbo:birthPlace ?entity .
    FILTER (str(?grigolli) = ""Giorgio_Grigolli"")
  }
}
```",4,8,5,2,2,2,2,9,0,0,587,0,0.0,0
232,69,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Identify Sean Pertwee's claim to fame (film or military conflict)
  ?claimToFame a dbo:Film || ?claimToFame a dbo:MilitaryConflict .
  ?claimToFame dbo:actor ?actor .

  # Step 2: Find Sean Pertwee
  ?seanPertwee dbr:Sean_Pertwee .
  
  # Step 3: Link Sean Pertwee to Jon Pertwee as his child
  ?seanPertwee dbo:childOf ?jonPertwee .

  # Step 4: Identify Jon Pertwee's birth name and residence
  ?jonPertwee dbr:Jon_Pertwee .
  ?jonPertwee dbo:birthName ?birthName .
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom ;
             dbo:resident ?jonPertwee .

  # Step 5: Identify the native politician from France
  ?politician a dbo:Politician, dbo:OfficeHolder ;
              dbo:nativeOfCountry dbr:France .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
391,70,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v1 <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie dbo:genre ?work .
  ?work rdf:type dbo:Work .
  ?work dbo:isBasedOn ?tvShow .
  ?tvShow rdf:type dbo:TelevisionSeries .

  ?actor dbo:profession dbr:Actor .
  ?actor dbo:actedIn ?movie .

  ?hubCity a dbo:Place ;
           rdfs:label ""Hub City""@en .

  ?actor dbo:nativePlace ?hubCity .

  ?spouse dbo:spouse dbr:Sherry_Hormann .
  ?claimToFame dbo:claimToFame ?spouse .
  ?actor dbo:actedIn ?claimToFame .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
161,28,test,"Give me the military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce1 ?militaryForce2 WHERE {
  # Military forces in the Spanish Civil War
  ?conflict a dbo:MilitaryConflict ;
            rdfs:label ""Spanish Civil War""@en .
  
  ?militaryForce1 dbo:participatedIn ?conflict ;
                  a dbo:MilitaryForce .

  ?militaryForce2 dbo:participatedIn ?conflict ;
                  a dbo:MilitaryForce .

  # Societal event and military conflict of Francisco Franco
  dbr:Francisco_Franco dbo:commander ?campaign .
  
  ?campaign a dbo:MilitaryConflict ;
            rdfs:label ""Biscay Campaign""@en .

  FILTER(?militaryForce1 != ?militaryForce2)
}
```",4,7,5,2,3,3,3,71,0,0,3,0,0.0,0
783,20,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find band members associated with Ebony Reigns
  ?ebony a dbo:Person ;
         foaf:name ""Ebony Reigns"" ;
         dbo:associatedBandMember ?bandMember .
  
  # Ensure the band member is an artist or musical artist
  ?bandMember a (dbo:Artist|dbo:MusicalArtist) .

  # Find band members associated with Samuel Ofori Amponsah
  ?samuel a dbo:Person ;
          foaf:name ""Samuel Ofori Amponsah"" ;
          dbo:associatedBandMember ?bandMember .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
281,64,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?war ?profession WHERE {
  # Find awards of Jonathon Band
  ?person dbr:Jonathon_Band .
  ?person dbo:award ?award .

  # Link awards to wars
  ?award dbo:relatedWar ?war .

  # Identify professions related to military units in New Zealand Army
  ?unit a dbo:MilitaryUnit ;
        dbo:militaryBranch dbr:New_Zealand_Army ;
        dbo:profession ?profession .

  # Ensure the profession is linked to office holders and politicians
  ?profession rdfs:subClassOf* (dbo:OfficeHolder | dbo:Politician) .
  
  # Link military unit to Colony of New Zealand entity
  ?unit dbo:location dbr:Colony_of_New_Zealand .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,50,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?work a dbo:Song ;
        rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  ?writer dbo:writtenWork ?work ;
          a dbo:Writer .

  ?writer a dbo:MusicalArtist, dbo:Artist .

  ?producer dbo:produced ?work ;
            a dbo:Producer .

  ?artist dbo:profession dbr:Rapper ;
          dbo:associatedBandOrMusicalArtist ?writer .
}
```",5,11,6,3,2,3,3,71,0,0,9,0,0.0,0
435,20,test,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Article 62, Section IV of Constitution of Iceland
SELECT ?article WHERE {
  ?constitution a dbo:Constitution .
  ?constitution dbo:country dbr:Iceland .
  ?constitution dbo:text ?text .
  FILTER CONTAINS(LCASE(?text), ""article 62 section iv"")
}

UNION

# Query for territory administered from Reykjavík
SELECT ?territory WHERE {
  ?capital a dbo:Capital ;
           dbo:administrativeTerritory ?territory .
  ?capital rdfs:label ""Reykjavík""@en .
}

UNION

# Query for time zone in Bombali Shebora Chiefdom
SELECT ?timeZone WHERE {
  ?chiefdom a dbo:AdministrativeDivision ;
            dbo:country dbr:Sierre_Leone ;
            dbo:officialName ""Bombali Shebora Chiefdom"" .
  ?chiefdom dbo:timeZone ?timeZone .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
232,64,test,"Give me the actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Identify Jon Pertwee's birth name
  dbr:Jon_Pertwee a dbo:Person ;
                  dbo:birthName ?jonBirthName .

  # Step 2: Find the child of Jon Pertwee
  ?child dbo:parent ?jonPertwee ;
         dbo:birthName ?jonBirthName .
  
  # Step 3: Determine the politician and office holder from France
  ?politician a dbo:Politician, dbo:OfficeHolder ;
              dbo:nativePlace ?settlement ;
              dbo:country dbr:France .

  # Ensure this politician is related as a native to Jon Pertwee's child
  ?child dbo:nativePlace ?settlement .
  
  # Step 4: Identify the settlement and ensure it is British
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom .

  # Step 5: Find the actor of ""Dog Soldiers"" (film) native to this settlement
  ?actor a dbo:Actor ;
         dbo:nativePlace ?settlement ;
         dbo:film dbr:Dog_Soldiers_(2002_film) .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
232,49,test,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""John Devon Roland Pertwee"" .
  
  ?residence a dbo:Settlement ;
             dbo:nationality dbr:United_Kingdom .

  ?native a dbo:Politician, dbo:OfficeHolder ;
          dbo:country dbr:France .

  ?person dbo:child ?child .
  ?person dbo:residence ?residence .
  ?native dbo:residence ?residence .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
701,50,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Seti I's children
  ?childSetiI dbo:child dbr:Seti_I ;
              a dbo:Person .
  
  # Seti I's grandchildren (children of Seti I's children)
  ?grandchildSetiI dbo:child ?childSetiI ;
                   a dbo:Person .

  # Merneptah's father
  ?merneptahFather dbo:child dbr:Merneptah ;
                   a dbo:Person .
  
  # Spouse of Merneptah's father
  ?spouseOfFather dbo:spouse ?merneptahFather ;
                  a dbo:Person .

  # Parent of Seti I's grandchild (either parent)
  ?parent dbo:child ?grandchildSetiI ;
          a dbo:Person .
  
  FILTER(?parent = ?spouseOfFather) 
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,47,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Bruce Fraser's details
  dbr:Bruce_Fraser_1st_Baron_Fraser_of_North_Cape a dbo:Person .
  
  # Awards received by Bruce Fraser
  ?award a dbo:Award ;
         dbo:recipient dbr:Bruce_Fraser_1st_Baron_Fraser_of_North_Cape .

  # Awardees of the same award
  ?awardee dbo:recipient ?award .
  
  # Command position and death at Budapest
  ?force a dbo:MilitaryForce ;
         dbo:commander dbr:Bruce_Fraser_1st_Baron_Fraser_of_North_Cape .
  ?person a dbo:Person ;
          dbo:deathPlace dbr:Budapest ;
          dbo:memberOf ?force .
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
747,66,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song) and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Band of the person born as ""Shèna""
SELECT ?person ?band WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ?name .
  FILTER (str(?name) = ""Shèna"") .
  OPTIONAL { ?person dbo:band ?band }
}

# Part 2: Band of the writer of Apollo (Hardwell song)
SELECT ?writer ?band WHERE {
  dbr:Apollo_(song_by_Hardwell) dbo:songWriter ?writer .
  ?writer a dbo:Person .
  OPTIONAL { ?writer dbo:band ?band }
}

# Part 3: Person born on the same date as Pavlo Khudzik
SELECT ?person ?band WHERE {
  ?pavlo a dbo:Person ;
         dbo:birthDate ?date .
  FILTER (str(?pavlo) = ""Pavlo_Khudzik"") .

  ?person a dbo:Person ;
          dbo:birthDate ?sameDate .
  FILTER (?sameDate = ?date)
  OPTIONAL { ?person dbo:band ?band }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
492,64,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Person who died at the work of the author of ""French Algeria""
  ?work dbo:author dbr:Frédéric_Weisgerber .
  ?deathPlace dbo:location dbr:Khemis_Miliana .
  
  # Person who died in Khemis Miliana, a settlement
  ?person dbo:deathPlace ?deathPlace .
  
  # Person was a commander in the Franco-Hova Wars
  ?person dbo:occupation dbr:Commander_in_the_Franco-Hova_Wars .

  # Ensure the person is linked to both conditions
  ?person dbo:deathPlace ?workDeathPlace .
  FILTER (?workDeathPlace = ?deathPlace)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
184,53,test,"Give me the child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Archduke Joseph August of Austria's child
  ?child a dbo:Person ;
         dbo:parent dbr:Archduke_Joseph_August_of_Austria .

  # This person is also the parent of someone native to a landmark at elevation 96.0
  ?nativePlace a dbo:Settlement ;
               dbo:elevation ""96.0""^^xsd:float .
  ?person dbo:nativePlace ?nativePlace .

  # This person is also the parent of Archduke Joseph Francis's child
  ?child2 a dbo:Person ;
          dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  ?person dbo:child ?child2 .

  # Ensure all conditions are met for the same person
  FILTER (?child = ?person && ?nativePlace = ?person)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
701,31,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?spouse a dbo:Person ;
          dbo:spouse dbr:Amun-her-khepeshef .
  
  ?child dbo:childOf ?spouse ;
         dbo:parent ?parent .

  ?henuttawyParent a dbo:Person ;
                   dbo:parent dbr:Henuttawy ;
                   rdfs:label ""19th dynasty""@en .

  FILTER (?parent = ?henuttawyParent)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,50,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?decedent a dbo:Person .
  ?decedent dbo:deathPlace dbr:Budapest .
  
  ?officeHolder a dbo:OfficeHolder ;
               dbo:headOfState dbr:Joseph_Stalin .

  ?decedent dbo:leader ?officeHolder .
  ?commander dbo:commanderInForce ?decedent .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
179,19,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as the birth name of Sirikit.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalChild WHERE {
  # Step 1: Find Vajiralongkorn's parent (King Bhumibol Adulyadej)
  ?vajiralongkorn a dbo:Person ;
                  rdfs:label ""Vajiralongkorn""@en .
  ?parent dbo:child ?vajiralongkorn .

  # Step 2: Find the child of Vajiralongkorn's parent (Sirindhorn)
  ?sibling dbo:child ?parent .

  # Step 3: Identify Sirikit's birth name
  ?sirikit a dbo:Person ;
           rdfs:label ""Sirikit""@en .
  ?sirikit dbo:birthName ?birthName .

  # Step 4: Find the parent of the person born as Sirikit (King Bhumibol Adulyadej)
  ?parent2 dbo:child ?sirikit .

  # Step 5: Find the child of this parent
  ?finalChild dbo:child ?parent2 .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
77,18,test,Give me the force of the mayor of Congress Poland and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorRole ?vlasovAward ?war WHERE {
  # Find information about the governance structure of Congress Poland
  OPTIONAL {
    ?congressPoland a dbo:AdministrativeRegion .
    ?congressPoland dbo:governedBy ?mayorRole .
    ?mayorRole rdfs:label ?roleLabel .
    FILTER (CONTAINS(LCASE(?roleLabel), ""mayor""))
  }

  # Find information about Maxim Grigorievich Vlasov
  dbr:Maxim_Grigorievich_Vlasov dbo:award ?vlasovAward .
  ?vlasovAward dbo:relatedWar ?war .
}
```",5,5,6,3,2,3,2,20,0,0,24,0,0.0,0
303,20,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara and party of Arnulfo Arias.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Find the country associated with El Valle de Antón
  dbr:El_Valle_de_Antón dbo:location dbr:Panama .
  
  # Find Guillermo Endara's party affiliation
  dbr:Guillermo_Endara dbo:partyAffiliation ?party1 .

  # Find Arnulfo Arias's party affiliation
  dbr:Arnulfo_Arias dbo:partyAffiliation ?party2 .

  # Ensure both are affiliated with the same political party
  FILTER (?party1 = ?party2)

  # The country associated with this political party is Panama
  ?country a dbo:Country .
  ?country dbo:name ""Panama""@en .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
959,24,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Find Yōichi Masuzoe's residence
  ?masuzoe a dbo:Person ;
           foaf:name ""Yōichi Masuzoe"" ;
           dbo:residence ?residence .

  # Check if the residence is in a country
  ?residence dbo:country ?country .
  
  # Find the manager of Júbilo Iwata for the 2013 season
  ?jubiloTeam a dbo:SoccerClub ;
              dbo:season ?season .
  ?season dbo:manager ?manager .
  FILTER (?jubiloTeam = dbr:Júbilo_Iwata && YEAR(?season) = 2013)

  # Get the native country of the manager
  ?manager dbo:nationality ?nativeCountry .
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
617,64,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalPerson WHERE {
  # Step 1: Identify Antiochus II Theos
  ?antiochus2 a dbo:Person ;
              rdfs:label ""Antiochus II Theos""@en .

  # Step 2: Find his successor who is royalty
  ?successor dbo:childOf ?antiochus2 ;
            a dbo:Monarch ;
            rdfs:label ?successorLabel .
  
  # Step 3: Identify spouse of Laodice IV
  ?laodice4 rdfs:label ""Laodice IV""@en .
  ?spouse dbo:spouse ?successor ;
          dbo:spouse ?laodice4 .

  # Step 4: Find parent of child of commander in Battle of Panium
  ?battle a dbo:MilitaryConflict ;
          rdfs:label ""Battle of Panium""@en .
  ?commander dbo:commanderOf ?battle ;
             dbo:child ?child1 .
  ?parent dbo:parent ?child1 .

  # Step 5: Determine the child of the parent who is royalty
  ?finalPerson dbo:child ?parent ;
               a dbo:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
281,59,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?leader a dbo:Politician ;
          dbo:officeHolderOf dbr:1962_New_South_Wales_state_election .
  
  ?awardEvent dbo:recipient dbr:Jonathon_Band ;
              dbo:event dbr:War .

  ?war dbo:awardee dbr:Jonathon_Band ;
       dbo:leader ?leader .

  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
963,20,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> ?v5 . ?v4 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  # Find Herzegovina-Neretva Canton's country using its time zone
  ?canton a dbo:Canton ;
          dbo:timeZone ?timezone .
  FILTER (str(?timezone) = ""Europe/Sarajevo"") # Time zone for Herzegovina-Neretva Canton

  ?country dbo:hasCanton ?canton .

  # Find the political party in administration in location with code 21205
  ?location a dbo:Location ;
            dbo:administeredBy ?party .
  FILTER (str(?location) = ""dbr:Herzegovina-Neretva_Canton"") # Assuming this is how it's represented

  ?party a dbo:PoliticalParty .

  # Additional filter for location code if available
  OPTIONAL { 
    ?location dbo:code ?code .
    FILTER (?code = ""21205"")
  }
}
```",6,8,7,3,2,3,2,20,0,0,84,0,0.0,0
328,42,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in Eastern Front during World War II
  ?person dbo:commanderOfMilitaryConflict dbr:Eastern_Front_(World_War_II) .

  # Leader of an office under Joseph Stalin
  ?office dbo:leader ?person ;
          dbo:headOfGovernmentAgency dbr:Joseph_Stalin .
  
  # Awardee of the award from Bruce Fraser, 1st Baron Fraser of North Cape
  ?person dbo:awardReceived dbr:Award_of_Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
488,66,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?birthPlace ?administration WHERE {
  # Yūki Hideyasu's father who is a politician
  ?yukiHideyasuFather a dbo:Person ;
                     dbo:fatherOf dbr:Yūki_Hideyasu ;
                     dbo:occupation dbr:Politician .
  ?yukiHideyasuFather dbo:deathPlace ?deathPlace .

  # Commander in the Boshin War
  ?boshinCommander a dbo:Person ;
                   dbo:birthPlace ?birthPlace ;
                   dbo:participatedIn dbr:Boshin_War .

  # Tokugawa Masako's spouse who is royalty
  ?tokugawaMasakoSpouse a dbo:Person ;
                        dbo:spouse dbr:Tokugawa_Masako ;
                        dbo:royalty .
  ?tokugawaMasakoSpouseFather a dbo:Person ;
                              dbo:fatherOf ?tokugawaMasakoSpouse ;
                              dbo:administration ?administration .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
10,22,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Identify Matt Colton
  ?colton a dbo:Person ;
          rdfs:label ""Matt Colton""@en .
  
  # Identify Luke Francis Vibert
  ?vibert a dbo:Person ;
          rdfs:label ""Luke Francis Vibert""@en .

  # Find the musical artist associated with Matt Colton
  ?colton dbo:musicalArtist ?artist ;
          dbo:bandMember ?band1 .
  
  # Find the musical artist associated with Luke Francis Vibert
  ?vibert dbo:musicalArtist ?artist ;
          dbo:bandMember ?band2 .

  FILTER (LANG(?coltonLabel) = ""en"" && LANG(?vibertLabel) = ""en"")
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
92,46,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the film resource
  ?film a dbo:Film ;
        rdfs:label ""Nevermore (2006)""@en .
  
  # Identify Jim Sheppard's association with an artist related to this film
  ?sheppard a dbo:Person ;
            foaf:name ""Jim Sheppard""@en ;
            dbo:bandMember ?artist .

  # Ensure the artist is associated with the film
  ?film dbo:soundtrack ?soundtrack .
  ?soundtrack dbo:performer ?artist .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
767,69,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?settlement WHERE {
  # George K. Nash's alma mater
  dbr:George_K._Nash a dbo:Person .
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Entity in his administration that is a settlement
  ?administrationEntity dbo:member dbr:George_K._Nash ;
                       a dbo:Settlement .
  
  # Writer of ""Where It's At"" by Dustin Lynch
  dbr:Where_It's_At_(Dustin_Lynch_album) dbo:writer ?writer .

  # Alter ego of Matthew Burland
  dbr:Matthew_Burland dbo:fictionalCharacter ?alterEgo ;
                      a dbo:FictionalCharacter .
  
  # Linking the entities through common properties or relationships
  OPTIONAL { ?administrationEntity dbo:relatedTo ?writer . }
  OPTIONAL { ?writer dbo:associatedWith ?alterEgo . }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
16,44,test,Give me the person born as the birth name of Gigi Rice and spouse of Ted McGinley and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Find the person with birth name Gigi Rice
  ?person dbo:birthName dbr:Gigi_Rice .

  # Ensure this person is spouse of Ted McGinley
  ?tedMcGinley dbo:spouse ?person ;
              rdfs:label ""Ted McGinley""@en .
  
  # Match the profession with Satomi Ishihara's profession
  ?satomiIshihara dbo:profession ?profession ;
                 rdfs:label ""Satomi Ishihara""@en .
  ?person dbo:profession ?profession .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
488,36,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?administration WHERE {
  # Enomoto Takeaki's birth place
  dbr:Enomoto_Takeaki a dbo:Person ;
                      dbo:birthPlace ?birthPlace .

  # Tokugawa Masako's spouse
  dbr:Tokugawa_Masako a dbo:Person ;
                      dbo:spouse ?spouse .

  # Spouse's father (who is royalty)
  ?spouse dbo:father ?royalFather .
  ?royalFather a dbo:RoyalFamilyMember ; # Assuming this class or similar for royalty
               dbo:administration ?administration .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
161,57,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola and military force of Rif War.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find predecessor of Indalecio Prieto involved in societal event and military conflict
  ?prieto a dbo:Person ;
          rdfs:label ""Indalecio Prieto""@en .
  ?predecessor dbo:predecessor ?prieto ;
               dbo:militaryForce ?militaryForce1 .

  # Ensure the predecessor's force is both a societal event and a military conflict
  ?societalEvent dbo:socialEvent ?militaryForce1 ;
                 rdf:type dbo:SocietalEvent .
  ?conflict dbo:conflict ?militaryForce1 ;
            rdf:type dbo:MilitaryConflict .

  # Find Emilio Mola's commander role in an event that is also a military force
  ?mola a dbo:Person ;
        rdfs:label ""Emilio Mola""@en .
  ?event dbo:militaryForce ?militaryForce2 ;
         dbo:commanderInMilitaryForce ?mola .

  # Ensure the event is a military conflict
  ?conflict2 dbo:conflict ?militaryForce2 ;
             rdf:type dbo:MilitaryConflict .

  # Identify the military force associated with the Rif War
  ?rifWar dbr:Rif_War ;
          dbo:militaryForce ?militaryForce3 .

  # Ensure all forces are the same
  FILTER (?militaryForce1 = ?militaryForce2 && ?militaryForce2 = ?militaryForce3)
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
767,32,test,"Give me the entity in the administration, that is a settlement, of Green and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find George K. Nash's alma mater
  dbr:George_K._Nash dbo:almaMater ?almaMater .
  
  # Find entities that are settlements and connected to the alma mater
  ?entity a dbo:Settlement ;
         dbo:location ?location .
  
  # Ensure the location is related to the alma mater
  ?location dbo:locatedIn ?almaMater .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
391,23,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?entity rdfs:label ""Jackson, Tennessee""@en .
  ?figure dbo:nickName ?entity ;
          a dbo:Person .
  ?figure dbo:nativePlace ?nativePlace .
}
```",3,3,4,3,1,3,3,71,0,0,176,0,0.0,0
404,22,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?father a dbo:Person ;
          dbo:father dbr:Ernest_Augustus,_Duke_of_Brunswick .
  ?spouse a dbo:Person ;
          dbo:spouse ?father .
  ?child a dbo:Person ;
         dbo:parent ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,58,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Lamberto Andreotti's father's party
SELECT ?fatherParty WHERE {
  ?lamberto a dbo:Person ;
            foaf:name ""Lamberto Andreotti"" .
  ?lamberto dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .
}

UNION

# Query for Romano Prodi's birth name and party
SELECT ?birthName, ?prodiParty WHERE {
  ?romano a dbo:Person ;
          foaf:name ""Romano Prodi"" ;
          dbo:birthName ?birthName ;
          dbo:partyAffiliation ?prodiParty .
  FILTER EXISTS { ?romano dbo:officeHolder true . }
  FILTER EXISTS { ?romano dbo:politician true . }
  
  # Ensure reference to Partito Popolare Italiano
  OPTIONAL {
    ?prodiParty rdfs:label ""Partito Popolare Italiano""@it .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,38,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?child dbo:parent dbr:Ramesses_II .
  dbr:Ramesses_II dbo:spouse ?spouse .
}
```",4,4,5,2,2,3,3,71,0,1,2,0.0,0.0,0
281,62,test,"Give me the war of New Zealand Army and war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?awardee ?leader WHERE {
  # Wars involving the New Zealand Army
  ?war a dbo:MilitaryConflict .
  ?war dbo:participatingMilitaryUnit dbr:New_Zealand_Army .

  # Awardee of Jonathon Band's award (assuming an award exists)
  ?award dbo:recipient ?awardee .
  ?award dbo:givenBy dbr:Jonathon_Band .

  # Leader of the 1962 New South Wales state election
  ?election a dbo:Election ;
            dbo:electedOffice dbr:Premier_of_New_South_Wales ;
            dbo:year ""1962""^^xsd:gYear .
  
  ?leader dbo:officeHolder ?election ;
          a dbo:Politician .

  # Leader's birthplace is a country
  ?leader dbo:birthPlace ?country .
  FILTER (isBlank(?country) || ?country a dbo:Country)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,39,test,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v2 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist ?bandMember WHERE {
  # Find associated musical artist of Red Tide (band)
  ?redTide a dbo:Band ;
           dbo:associatedBand ?associatedArtist .

  FILTER(STR(?redTide) = ""Red_Tide_(band)"")

  # Find band member of a person born as a musical artist, persona of Don Dokken
  ?person a dbo:Person ;
          dbo:birthDate ?date ;
          dbo:musicalArtist ?musicalArtist .
  
  FILTER(STR(?musicalArtist) = ""Don_Dokken"")

  ?bandMember a dbo:Band ;
              dbo:bandMember ?person .

  # Check if the associated artist is also a band member
  OPTIONAL { ?associatedArtist dbo:bandMember ?bandMember }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
16,62,test,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?rice a dbo:Person ;
        dbo:birthName ""Georgeanne Marie Rice""@en .
  
  ?ted a dbo:Person ;
       dbo:birthName ?tedBirthName ;
       dbo:profession ?tedProfession .

  ?ted dbr:Unnatural_(TV_series) :actor .

  ?rice dbo:spouse ?person .
  ?person = ?ted .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,49,test,Give me the force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?militaryForceOfPerson ?battle ?forceInBattle WHERE {
  # Find Narciso Campero and his military force
  ?person a dbo:Person ;
          rdfs:label ""Narciso Campero""@en .
  
  OPTIONAL { 
    ?person dbo:militaryForce ?militaryForceOfPerson .
  }
  
  # Find the Battle of Pisagua and its forces
  ?battle a dbo:Event ;
          rdfs:label ""Battle of Pisagua""@en .
  
  OPTIONAL {
    ?battle dbo:participatedIn ?forceInBattle .
  }
}
```",5,5,6,3,2,3,3,71,0,2,3,0.0,0.0,0
747,52,test,"Give me the band of the writer of Apollo (Hardwell song) and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfApolloWriter ?bandOfShena ?athlete WHERE {
  # Find the writer of ""Apollo"" by Hardwell and their band
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ""Apollo""@en .
  ?song dbo:artist dbr:Hardwell .
  
  OPTIONAL { 
    ?writer dbo:band ?bandOfApolloWriter .
  }
  
  # Find Shèna's band
  ?shena a dbo:Person ;
         foaf:name ""Shèna"" .
  
  OPTIONAL {
    ?shena dbo:band ?bandOfShena .
  }

  # Find the birth date of someone who died in Zolotonosha
  ?decedent dbo:deathPlace dbr:Zolotonosha ;
            dbo:birthDate ?birthDate .

  # Find an athlete who is a soccer player and was born on that date
  ?athlete a dbo:Athlete, dbo:SoccerPlayer ;
           dbo:birthDate ?sameBirthDate .
  
  FILTER (?birthDate = ?sameBirthDate)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,70,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit WHERE {
  ?militaryUnit a dbo:MilitaryUnit .
  
  # Find professionals who are office holders and politicians in the New Zealand Army
  ?professional dbo:memberOfMilitaryOrganization ?militaryUnit ;
                a dbo:Politician, dbo:OfficeHolder .

  # Identify the leader of the 1962 NSW state election
  ?leader dbo:officeHolderOf ?election .
  ?election dbr:1962_New_South_Wales_state_election .
  
  # Connect to the birthplace country of this leader
  ?leader dbo:birthPlace ?country .

  # Find the awardee of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:awardee dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  
  # Connect the military unit to the war associated with this awardee
  ?militaryUnit dbo:participatedInWar ?war .
  ?war dbo:awardee ?awardee .

  FILTER (?country a dbo:Country)
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
617,69,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find a child of Antiochus III the Great
  ?child1 dbo:parent dbr:Antiochus_III_the_Great .
  
  # Step 2: Find the grandchild (child of the child)
  ?grandchild1 dbo:parent ?child1 .

  # Step 3: Ensure this grandchild is royalty
  ?grandchild1 dbo:royaltyStatus dbr:Royalty .

  # Step 4: Identify a successor of Antiochus II Theos who is royalty
  ?successor dbo:predecessor dbr:Antiochus_II_Theos .
  ?successor dbo:royaltyStatus dbr:Royalty .

  # Step 5: Find the child of this successor (grandchild of Antiochus II Theos)
  ?grandchild2 dbo:parent ?successor .

  # Step 6: Identify the spouse of the grandchild from step 3
  ?spouse dbo:spouse ?grandchild1 .
  
  # Step 7: Ensure this person is a parent of someone who was a commander in Battle of Panium
  ?commander dbo:parent ?spouse ;
             dbo:occupation dbr:Commander_in_the_Battle_of_Panium .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
801,71,test,"Give me the professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> ?v8 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://dbpedia.org/property/writer> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Step 1: Identify The Shadow's alter ego
  ?shadow a dbo:Character .
  ?shadow dbo:alterEgo ?alterEgo .

  # Step 2: Find the producer of the work associated with this alter ego
  ?work dbo:producer ?producer .
  ?producer a dbo:Person ; 
            dbo:associatedMusicalArtist ?professional .

  # Step 3: Determine the professional as a musical artist, specifically a rapper
  ?professional a dbo:MusicalArtist ;
                rdf:type dbo:Rapper .

  # Step 4: Identify the writer associated with this professional
  ?writer dbo:associatedMusicalArtist ?professional .
  ?writer a dbo:Person ; 
          rdf:type dbo:Writer .

  # Step 5: Find the album ""What U See Is What U Get"" and its song/work
  dbr:What_U_See_Is_What_U_Get dbo:album ?album .
  ?album dbo:song ?song .
  ?song dbo:producer ?professional .
}
```",9,17,10,3,3,3,3,71,0,0,8,0,0.0,0
767,54,test,"Give me the reference to  and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?settlement WHERE {
  ?nash a dbo:Person ;
        foaf:name ""George Kilbon Nash"" ;
        dbo:almaMater ?almaMater .
  
  OPTIONAL {
    ?role dbo:positionHeldBy ?nash ;
          dbo:location ?settlement .
    FILTER (CONTAINS(LCASE(?settlement), ""green""))
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
179,16,test,Give me the parent of the child of Bhumibol Adulyadej and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find a child of Bhumibol Adulyadej
  ?child dbo:childOf dbr:Bhumibol_Adulyadej .
  
  # Identify the parent of this child (should be either Bhumibol or Sirikit)
  ?parent dbo:spouse ?child .

  # Ensure the parent is not Bhumibol Adulyadej
  FILTER (?parent != dbr:Bhumibol_Adulyadej)

  # Find a person whose birth name matches Sirikit's label
  ?person rdfs:label ""Sirikit""@en .
  
  # Match this person with the identified parent
  FILTER (?parent = ?person)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
801,53,test,"Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?alterEgo ?associatedArtist WHERE {
  # Producer of Westside Story (song)
  OPTIONAL {
    ?song a dbo:Songs .
    ?song rdfs:label ""Westside Story (song)""@en .
    ?song dbo:producer ?producer .
  }

  # Alter ego of The Shadow
  OPTIONAL {
    ?shadow dbr:The_Shadow .
    ?shadow dbo:alterEgo ?alterEgo .
  }
  
  # Writer and associated musical artist of ""40 Dayz & 40 Nightz""
  OPTIONAL {
    ?song2 a dbo:Songs .
    ?song2 rdfs:label ""40 Dayz & 40 Nightz""@en .
    ?song2 dbo:lyricsWriter ?writer .
    ?artist a dbo:MusicalArtist ;
            dbo:associatedBandOrMusicalArtist ?writer .
    FILTER EXISTS { ?artist dbo:occupation dbr:Musician . }
    FILTER EXISTS { ?artist dbo:occupation dbr:Artist . }
  }

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,55,test,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Band of the writer of ""Apollo"" by Hardwell
SELECT ?writerBand WHERE {
  ?song dbo:title ""Apollo (Hardwell song)"" .
  ?song dbo:lyricsBy ?writer .
  ?writer a dbo:Person ;
          dbo:band ?writerBand .
}

UNION

# Part 2: Band of Tracey Elizabeth McSween
SELECT ?traceyBand WHERE {
  ?person foaf:name ""Tracey Elizabeth McSween""@en ;
          dbo:birthName ""Tracey Elizabeth McSween"" .
  OPTIONAL { ?person dbo:band ?traceyBand }
}

UNION

# Part 3: Band of a person born on the same date as Pavlo Khudzik
SELECT ?sameBirthDatePersonBand WHERE {
  ?pavlo a dbo:Person ;
         foaf:name ""Pavlo Khudzik""@en ;
         dbo:birthDate ?pavloBirthDate .
  
  ?person a dbo:Person ;
          dbo:birthDate ?date .
  FILTER (?date = ?pavloBirthDate)
  OPTIONAL { ?person dbo:band ?sameBirthDatePersonBand }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,54,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?princeGeorge a dbo:Person ;
               rdfs:label ""Prince George William of Hanover""@en .
  
  # Step 2: Find his parent who is royalty
  ?parent1 dbo:child ?princeGeorge ;
          a dbo:Person .

  # Step 3: Identify spouse of Princess Victoria Louise of Prussia
  ?vlPrincess a dbo:Person ;
             rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  ?spouse dbr:Victoria_Louise_of_Prussia dbo:spouse ?partner ;
         a dbo:Person .

  # Step 4: Find child of Ernest Augustus, Crown Prince of Hanover
  ?ernestAugustus a dbo:Person ;
                 rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .
  
  ?child dbr:Ernest_Augustus_Crown_Prince_of_Hanover dbo:child ?partner ;
                                                  a dbo:Person .

  # Step 5: Find parent of this child who is royalty
  ?parent2 dbo:child ?child ;
           a dbo:Person .

  # Ensure all individuals are royalty by checking their labels or titles
  FILTER (CONTAINS(LCASE(?parent1), ""royalty"") && CONTAINS(LCASE(?spouse), ""royalty"") &&
          CONTAINS(LCASE(?parent2), ""royalty""))
  
  # Final step: Find the parent of the child who is royalty
  ?finalParent dbo:child ?partner ;
              a dbo:Person .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
485,24,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?region WHERE {
  # Find Joseph Whitaker's birthplace that is a region
  OPTIONAL {
    ?whitaker dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:Region .
    FILTER (STR(?whitaker) = ""Joseph_Whitaker_(naturalist)"")
  }
  
  # Find the awardee of Eric Gregory Award who is a writer and poet
  OPTIONAL {
    ?award dbr:Educational_Award <http://dbpedia.org/resource/Eric_Gregory_Award> .
    ?recipient dbo:awardReceived ?award .
    ?recipient rdf:type dbo:Writer ;
               rdf:type dbo:Poet .
    
    # Find the birthplace of this awardee that is a region
    ?recipient dbo:birthPlace ?awardeeBirthPlace .
    ?awardeeBirthPlace rdf:type dbo:Region .
  }
  
  # Return the common regions found in both queries
  FILTER (?region = ?birthPlace || ?region = ?awardeeBirthPlace)
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,18,test,Give me the alma mater of Carl L. Nippert and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?almaMater .

  OPTIONAL { 
    ?almaMater dbo:location dbr:Baden-Württemberg .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
801,23,test,Give me the professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:fictionalAlterEgo ?alterEgo .
  ?alterEgo a dbo:Person .
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
485,26,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find the country associated with Western European Time
  ?wetCountry dbo:timeZone dbr:Western_European_Time .
  
  # Get birthplace of Joseph Whitaker (naturalist)
  ?joseph a dbo:Naturalist ;
          dbo:birthPlace ?region1 .

  # Get birthplace of Thomas Warner (poet)
  ?thomas a dbo:Poet ;
          dbo:birthPlace ?region2 .
  
  # Find the entity that is in the WET country and matches one of the regions
  ?entity dbo:country ?wetCountry ;
          (dbo:location ?region1 | dbo:location ?region2) .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,28,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer WHERE {
  # Find the writer of an album by Dave Flett
  ?album dbo:artist dbr:Dave_Flett ;
         dbo:writer ?writer .

  # Find the author of ""Blinded by the Light""
  ?song dbo:title ""Blinded by the Light"" ;
        dbo:lyricist ?author .
  
  # Ensure the writer and author are the same person
  FILTER (?writer = ?author)

  # Find the death place of Winnie Madikizela-Mandela
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Find someone native to the death place
  ?native dbo:nativePlace ?deathPlace .
  
  # Ensure the writer/author is native to the death place
  FILTER (?writer = ?native)
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
378,62,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?war WHERE {
  # For Carl Pontus Gahn
  OPTIONAL {
    ?person a dbo:Person ;
            dbo:birthName ""Carl Pontus Gahn"" .
    ?commanderOfWar dbo:commander ?person ;
                    a dbo:MilitaryConflict .
    BIND(?commanderOfWar AS ?war)
  }
  
  # For Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  OPTIONAL {
    ?person a dbo:Person ;
            dbo:famousFor dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón .
    ?commanderOfWar dbo:commander ?person ;
                    a dbo:MilitaryConflict .
    BIND(?commanderOfWar AS ?war)
  }
  
  # Filter for Peninsular War
  FILTER (?war = dbr:Peninsular_War)
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
528,20,test,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find wars associated with Irene Morales
  ?irene a dbo:Person ;
         rdfs:label ""Irene Morales""@en .
  ?irene dbo:participatedIn ?war .

  # Find the commander in Battle of La Rinconada de Ate and their associated wars
  ?battle dbr:Battle_of_La_Rinconada_de_Ate ;
          dbo:commander ?commander .
  ?commander a dbo:Person ;
             rdfs:label ?commanderLabel .
  ?commander dbo:participatedIn ?war .

  FILTER (LANG(?commanderLabel) = ""en"")
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
488,61,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace WHERE {
  # Tokugawa Masako's spouse and their father (royalty)
  ?spouse a dbo:Person ;
          dbo:spouse dbr:Tokugawa_Masako .
  ?fatherOfSpouse dbo:child ?spouse ;
                  a dbo:RoyalFamilyMember ;
                  dbo:administration ?administration .

  # Matsudaira Tadamasa's father (office holder, politician) and his death place
  ?matsudairaFather a dbo:Person ;
                    dbo:officeHolder dbr:Matsudaira_Tadamasa ;
                    a dbo:Politician .
  ?matsudairaFather dbo:deathPlace ?deathPlace .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
747,56,test,Give me the band of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of the person born as the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Find Amba Shepherd's band
SELECT ?ambaBand WHERE {
  dbr:Amba_Shepherd a dbo:Person .
  dbr:Amba_Shepherd dbo:band ?ambaBand .
}

# Find person born on the same date as Pavlo Khudzik
SELECT ?personOnPavloDate WHERE {
  dbr:Pavlo_Khudzik a dbo:Person ;
                   dbo:birthDate ?pavloBirthDate .
  ?personOnPavloDate a dbo:Person ;
                     dbo:birthDate ?date .
  FILTER (?date = ?pavloBirthDate)
}

# Find band of the person born on the same date as Shèna
SELECT ?bandOfShenaPersona WHERE {
  dbr:Shèna a dbo:Person ;
            dbo:birthDate ?shenaBirthDate .
  ?personWithShenaDate a dbo:Person ;
                       dbo:birthDate ?date .
  FILTER (?date = ?shenaBirthDate)
  ?personWithShenaDate dbo:band ?bandOfShenaPersona .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
54,36,test,"Give me the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?thinkhayasChild ?thihapatesChild WHERE {
  # Find Thinkhaya of Pagan's child
  ?thinkhayasChild dbo:parent dbr:Thinkhaya_of_Pagan .
  
  # Find Thihapate of Mohnyin and his referenced child who is an office holder and royalty
  ?thihapatesReference rdfs:label ""Thihapate of Mohnyin""@en .
  ?thihapatesChild dbo:parent ?thihapatesReference ;
                   a dbo:Person, dbo:Royalty ;
                   dbo:officeHolder ?office .

  # Ensure the predecessor relationship
  ?thinkhayasChild dbo:predecessor ?thihapatesChild .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,29,test,Give me the party of the father of Lamberto Andreotti and reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?partyAffiliation ?prodiParty WHERE {
  # Find Lamberto Andreotti's father and his party affiliation
  dbr:Lamberto_Andreotti dbo:father ?father .
  OPTIONAL { ?father dbo:partyAffiliation ?partyAffiliation . }
  
  # Reference to Partito Popolare Italiano
  FILTER (?partyAffiliation = dbr:Partito_Popolare_Italiano)
  
  # Find Romano Prodi's party affiliation
  dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,53,test,"Give me the person decedent at the work of the author of French Algeria and commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Death place related to the author of French Algeria and commander in Franco-Hova Wars
  ?deathPlace1 dbo:wikiPageRedirects dbr:General_Richard_D._Cameron ;
              dbo:wikiPageDisambiguates dbr:French_Algeria ;
              dbo:wikiPageDisambiguates dbr:Franco-Hova_Wars .
  
  # Death place related to the capital of Algeria
  ?deathPlace2 a dbo:Settlement ;
               rdfs:label ""Algiers""@en .

  # Person died at both places
  ?person dbo:deathPlace ?deathPlace1, ?deathPlace2 .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
485,25,test,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?birthPlace WHERE {
  ?country a dbo:Country .
  ?timezone dbo:timeZoneName ""Western European Time"" .
  ?country dbo:timeZone ?timezone .

  ?person a dbo:Person ;
          a dbo:Writer ;
          a dbo:Poet ;
          dbo:award dbr:Educational_Awards#Eric_Gregory_Award ;
          dbo:birthPlace ?birthPlace .

  ?birthPlace dbo:locatedIn dbr:Nottinghamshire .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,38,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  ?dokken a dbo:Person ;
          foaf:name ""Donald Maynard Dokken"" ;
          dbo:musicalArtist ?musicalArtist .

  # Step 2: Find band members of Donald Maynard Dokken
  ?bandMember dbo:bandMemberOf ?musicalArtist .

  # Step 3: Determine associated musical artists for each band member
  ?associatedBand a dbo:Band ;
                  dbo:bandMember ?bandMember .
  ?associatedBand dbo:musicalArtist ?associatedArtist .

  # Step 4: Filter by Meshuggah's band members
  ?meshuggahBand a dbo:Band, dbo:Group, dbo:Organization ;
                 foaf:name ""Meshuggah"" .
  ?meshuggahBand dbo:bandMember ?bandMember .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
10,21,test,Give me the associated musical artist of Matt Colton and band member of Luke Vibert and professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Part 1: Associated Musical Artist of Matt Colton
  OPTIONAL {
    ?colton a dbo:Person ;
            foaf:name ""Matt Colton"" .
    ?colton dbo:associatedBand ?artist .
  }
  
  # Part 2: Band Member of Luke Vibert
  OPTIONAL {
    ?vibert a dbo:Person ;
            foaf:name ""Luke Vibert"" .
    ?band dbo:bandMember ?vibert ;
          dbo:bandMember ?member .
    ?member foaf:name ?artistName .
  }
  
  # Part 3: Professional in the Birth Name of Sharon Kao
  OPTIONAL {
    ?sharon a dbo:Person ;
            foaf:name ""Sharon Kao"" .
    ?sharon foaf:birthName ?birthName .
    FILTER(?birthName = ""Sharon Kao"")
    
    ?professional a dbo:Person ;
                  foaf:name ?artistName .
    # Assuming there's some property linking them, e.g., collaboration
    ?collab dbo:associatedBand ?professional .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
488,69,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?administration ?deathPlace WHERE {
  # Saitō Hajime's birth place and military conflict involvement
  ?saito a dbo:Person ;
         foaf:name ""Saitō Hajime"" ;
         dbo:birthPlace ?birthPlace .
  
  ?conflict a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent ;
            dbo:commander ?saito .

  # Tokugawa Masako's spouse's father and his administration
  ?tokugawaMasako a dbo:Person ;
                  foaf:name ""Tokugawa Masako"" .
  
  ?spouse a dbo:Person ;
          dbo:spouse ?tokugawaMasako ;
          dbo:father ?royaltyFather .

  ?administration a dbo:AdministrativePost ;
                  dbo:administrator ?royaltyFather .

  # Yūki Hideyasu's father and his death place
  ?yukiHideyasu a dbo:Person ;
                foaf:name ""Yūki Hideyasu"" .
  
  ?father a dbo:Person ;
          dbo:father ?yukiHideyasu ;
          rdf:type dbo:Politician .

  ?father dbo:deathPlace ?deathPlace .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,68,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan relationships
  ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan .
  ?thinkhayaChild dbo:child ?intermediatePerson .
  
  # Predecessor who is an office holder and royalty
  ?predecessor dbo:successor ?intermediatePerson .
  ?predecessor a dbo:OfficeHolder ;
              a dbo:Royalty .

  # Thihapate of Mohnyin relationships
  ?thihapateChild dbo:parent dbr:Thihapate_of_Mohnyin .
  ?thihapateParent dbo:child ?thihapateChild .
  
  # Thado Minsaw of Prome relationships
  ?thadoMinsawParent dbo:parent dbr:Thado_Minsaw_of_Prome .
  ?thadoMinsawGrandchild dbo:child ?thadoMinsawParent .

  # Find the person who matches all conditions
  FILTER (?predecessor = ?person)
}
```",8,10,9,3,3,3,3,71,0,1,1,0.0,0.0,0
427,48,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of the party of Michele Pinto.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiParty ?pintoParty WHERE {
  # Find the party of Romano Antonio Prodi
  OPTIONAL {
    dbr:Romano_Antonio_Prodi a dbo:Person ;
                             dbo:party ?prodiParty .
  }
  
  # Find the party of Michele Pinto
  OPTIONAL {
    ?michelePinto a dbo:Person ;
                  foaf:name ""Michele Pinto"" ;
                  dbo:party ?pintoParty .
  }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
281,53,test,"Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardWar ?militaryUnitWar WHERE {
  # Find the award Jonathon Band received and its related war
  ?jonathonBand a dbo:Person ;
                foaf:name ""Jonathon Band"" .
  ?award dbo:recipient ?jonathonBand ;
         dbo:relatedEvent ?awardWar .

  # Find Heather Roy's profession as a military unit and its related war
  ?heatherRoy a dbo:Person ;
              foaf:name ""Heather Roy"" .
  ?profession dbo:agent ?heatherRoy ;
              rdf:type dbo:MilitaryUnit .
  ?militaryUnitWar dbo:relatedEvent ?profession .

  # Ensure the wars are the same
  FILTER (?awardWar = ?militaryUnitWar)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,41,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia a dbo:Person ;
    dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover ;
    dbo:child dbr:Ernest_Augustus,_Duke_of_Brunswick .

  # Spouse of Princess Victoria Louise
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,18,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident WHERE {
  # Find the director of ""Pipe Dreams"" (1976 film)
  ?film a dbo:Film .
  ?film dbo:title ""Pipe Dreams (1976 film)""@en .
  ?film dbo:director ?director .

  # Get the birthplace of the director
  ?director dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement
  ?birthPlace a dbo:Settlement .

  # Find Phillip Spaulding's child who is a fictional character and soap character
  ?spaulding a dbo:Person ;
             rdfs:label ""Phillip Spaulding""@en .
  ?child dbo:childOf ?spaulding ;
         a dbo:FictionalCharacter, dbo:SoapCharacter .

  # Find the resident of the birthplace
  ?resident dbo:residence ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
487,17,test,"Give me the country of 2022 Vermont House of Representatives election and administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?administration WHERE {
  # Identify Phil Scott and his birth name as a soccer player
  ?person rdfs:label ""Phil Scott""@en .
  ?person dbo:birthName ?birthName .
  ?birthName rdfs:label ?labelBirthName .
  FILTER regex(?labelBirthName, ""soccer"", ""i"") .

  # Find the country of the Vermont House of Representatives election
  dbr:Vermont_House_of_Representatives dbo:electionCountry ?country .

  # Determine Phil Scott's administrative role
  OPTIONAL {
    ?person dbo:officeHeld ?administration .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
801,62,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v6 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?associatedArtist ?musicalWork WHERE {
  # Step 1: Identify The Shadow's alter ego
  ?shadow a dbo:Person ;
          rdfs:label ""The Shadow""@en .
  ?shadow dbo:alsoKnownAs ?alterEgo .

  # Step 2: Find Chris Taylor's associated musical artist
  ?chrisTaylor a dbo:MusicProducer ;
               foaf:name ""Chris Taylor""@en .
  ?chrisTaylor dbo:associatedMusicalArtist ?associatedArtist .

  # Step 3: Link the two entities through a common musical work
  ?musicalWork a dbo:Songs ;
               dbo:artist ?alterEgo ;
               dbo:producer ?chrisTaylor ;
               dbo:performer ?associatedArtist .
  
  # Ensure one of them is involved as a rapper
  ?associatedArtist rdf:type dbo:Rapper .

}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
9,60,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>

SELECT DISTINCT ?almaMater ?nickname WHERE {
  # Find the organisation in Belfast
  ?organisation a dbo:Organisation ;
                rdfs:label ""Belfast""@en .
  
  # The mayor of this organisation who is also a politician
  ?mayor dbo:mayorOf ?organisation ;
         a dbo:Politician .

  # Alma mater of the mayor
  ?mayor dbo:almaMater ?almaMater .

  # Find an educational institution in Northern Ireland with a nickname
  ?eduInstitution a dbo:EducationalOrganization ;
                  rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""northern ireland""))
  
  OPTIONAL {
    ?eduInstitution skos:altLabel ?nickname .
  }
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
994,58,test,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find S.A. Slayer and its associated musical artist
SELECT ?sASlayer WHERE {
  ?sASlayer a dbo:Band .
  ?sASlayer rdfs:label ""S.A. Slayer""@en .
}

# Step 2: Identify band members born as musical artists
SELECT DISTINCT ?bandMember WHERE {
  ?bandMember dbo:memberOf ?sASlayer .
  ?bandMember a dbo:MusicalArtist .
  ?bandMember dbo:birthDate ?date .
}

# Step 3: Determine Don Dokken's persona
SELECT ?donDokkenPersona WHERE {
  ?donDokkenPersona rdfs:label ""Don Dokken""@en .
  ?donDokkenPersona a dbo:MusicalArtist .
}

# Step 4: Find associated musical artist of the identified band member
SELECT DISTINCT ?associatedArtist WHERE {
  ?bandMember dbo:associatedBand ?associatedArtist .
  FILTER EXISTS { ?bandMember dbo:birthDate ?date }
}

# Step 5: Identify Meshuggah band member who is also a band/group/organization
SELECT DISTINCT ?meshuggahMember WHERE {
  ?meshuggahMember dbo:memberOf dbr:Meshuggah .
  ?meshuggahMember a (dbo:Band|dbo:MusicalGroup|dbo:Organization) .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
994,63,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find a member of Watchtower who is also a musical artist
  ?watchtowerMember dbo:bandMember dbr:Watchtower .
  ?watchtowerMember a dbo:MusicalArtist .

  # Step 2: Find another band or group that this member is part of
  ?watchtowerMember dbo:bandMember ?anotherBand .
  
  # Step 3: Identify the associated musical artist of that band
  ?anotherBandMember dbo:bandMember ?anotherBand .
  ?anotherBandMember a dbo:MusicalArtist .

  # Step 4: Find a member of Meshuggah who is also a band and organization
  ?meshuggahMember dbo:bandMember dbr:Meshuggah .
  ?meshuggahMember a dbo:MusicalArtist .
  
  # Ensure the entity is both a band and an organization
  ?meshuggahMember rdf:type/rdfs:subClassOf*+ (dbo:Band dbo:Organization) .

  # Step 5: Find a band member born as Donald Maynard Dokken
  ?dokkenMember dbo:birthName ""Donald Maynard Dokken"" .
  ?dokkenMember a dbo:MusicalArtist .
  
  # Ensure this person is also a band member
  ?dokkenMember dbo:bandMember ?dokkenBand .

  # Step 6: Connect these relationships to find the final artist
  ?anotherBandMember = ?meshuggahMember .
  ?anotherBandMember = ?dokkenMember .

  # The final associated musical artist we are looking for
  ?finalArtist = ?anotherBandMember .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
391,49,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie a dbo:Movie ;
         a dbo:Work ;
         a dbo:TelevisionShow .
  
  ?movie dbo:actor ?actor .

  ?actor dbo:nativePlace ?hubCity .
  FILTER (str(?hubCity) = ""Hub City"" || str(?hubCity) = ""dbr:Hub_City"")

  OPTIONAL { 
    ?actor dbo:profession dbr:Actor .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
747,67,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Part 1: Band of the person born as the persona of Shèna
  {
    ?person a dbo:Person .
    ?person dbo:birthName ?name .
    FILTER (str(?name) = ""Shèna"")
    ?person dbo:band ?band .
  }
  
  UNION
  
  # Part 2: Band of the writer of the work, that is a song, of Amba Shepherd
  {
    ?song a dbo:Songs .
    ?song dbo:lyricsBy dbr:Amba_Shepherd .
    ?song dbo:composer ?writer .
    ?writer dbo:band ?band .
  }
  
  UNION
  
  # Part 3: Band of the person born on 1985-04-29
  {
    ?person a dbo:Person .
    ?person dbo:birthDate ?date .
    FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
    ?person dbo:band ?band .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,63,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace ?administration WHERE {
  # Saitō Hajime's birth place
  {
    ?saito a dbo:Person ;
           foaf:name ""Saitō Hajime"" ;
           dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Yūki Hideyasu's father's death place
  {
    ?yukiFather a dbo:Politician ;
                foaf:name ?fatherName ;
                dbo:deathPlace ?deathPlace .
    ?yuki a dbo:Person ;
          foaf:name ""Yūki Hideyasu"" ;
          dbo:parent ?yukiFather .
  }
  
  UNION
  
  # Emperor Go-Mizunoo's father's administration
  {
    ?goMizunooFather a dbo:Monarch ;
                     foaf:name ?fatherName ;
                     dbo:reign ?administration .
    ?goMizunoo a dbo:Person ;
               foaf:name ""Emperor Go-Mizunoo"" ;
               dbo:parent ?goMizunooFather .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
994,67,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Fredrik Thordendal and his band Meshuggah
  dbr:Fredrik_Thordendal a dbo:Person .
  ?meshuggahMember dbo:bandMember dbr:Fredrik_Thordendal ;
                   a dbo:Band ;
                   dbo:organization dbr:Meshuggah .

  # Don Dokken's associated musical artist
  dbr:Don_Dokken a dbo:Person .
  ?dokkenArtist dbo:musicalArtist dbr:Don_Dokken ;
                a dbo:MusicalArtist .

  # S.A. Slayer's associated musical artist
  ?slayerArtist dbo:musicalArtist dbr:S._A._Slayer ;
               a dbo:MusicalArtist .
  
  # Linking all together to find the associated artist of Fredrik Thordendal
  ?meshuggahMember dbo:associatedMusicalArtist ?associatedArtist .

  FILTER (?dokkenArtist = dbr:Dokken && ?slayerArtist = dbr:Slayer)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
421,26,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Find Dino Merlin's birth name
  VALUES ?dinoMerlinBirthName { ""Dino Merlin"" } # Assuming we know his birth name is ""Dino Merlin""
  
  # Step 2: Find a person with the same birth name who is a band member
  ?person dbo:birthName ?name .
  FILTER (?name = ?dinoMerlinBirthName)
  
  ?bandMember dbo:member ?person .
  
  # Step 3: Ensure the band has awards or nominations
  ?band dbo:award ?award .
  
  # Step 4: Check if the person is native to SFRY
  ?person dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,68,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Find Carl Pontus Gahn's birth name
  ?gahn a dbo:Person ;
        rdfs:label ""Carl Pontus Gahn""@en ;
        dbo:birthName ?birthName .

  # Identify the commander of the Great Siege of Gibraltar and their claim to fame
  ?commander a dbo:Person ;
             dbo:claimToFame ?siege ;
             rdfs:label ?name .
  
  FILTER regex(?name, ""Great Siege of Gibraltar"", ""i"")

  # Find the war associated with this commander
  ?war a dbo:MilitaryConflict ;
       dbo:commander ?commander .

  # Check if this war is related to the Peninsular War
  OPTIONAL { ?war dbo:partOf dbr:Peninsular_War }
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
360,26,test,"Give me the reference to the author of Blinded by the Light and native of Johannesburg and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Identify Bruce Springsteen as the author of ""Blinded by the Light""
  ?song dbo:lyricsBy dbr:Bruce_Springsteen .
  ?song rdfs:label ""Blinded by the Light""@en .

  # Find a person who is native to Johannesburg
  ?person dbo:nationality dbr:South_Africa ;
          dbo:birthPlace dbr:Johannesburg .

  # Ensure this person wrote an album involving Dave Flett
  ?album dbo:artist ?person ;
         dbo:track ?track .
  ?track dbo:performer dbr:Dave_Flett .

  # Link the author of ""Blinded by the Light"" to the person we are looking for
  FILTER (?song = ?lyricsBySong)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
435,26,test,"Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?author a dbo:Person ;
          dbo:nationality dbr:Iceland ;
          dbo:work ?work .
  
  OPTIONAL { 
    ?region dbo:timeZone dbr:Greenwich_Mean_Time .
    ?author dbo:birthPlace ?region .
  }
  
  OPTIONAL {
    ?territory dbo:country dbr:Iceland .
    ?author dbo:birthPlace ?territory .
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,70,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Italian People's Party (1994)
SELECT ?party WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Italian People's Party""@en .
}

UNION

# Query for the father of an MIT alumnus
SELECT DISTINCT ?fatherParty WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
           dbo:parent ?father .
  ?father dbo:partyAffiliation ?fatherParty .
}

UNION

# Query for the political party associated with Romano Prodi
SELECT DISTINCT ?prodiParty WHERE {
  ?prodi a dbo:Person ;
         foaf:name ""Romano Prodi""@en ;
         dbo:birthName ?birthName .
  OPTIONAL { ?prodi dbo:partyAffiliation ?prodiParty . }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
360,20,test,"Give me the reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and writer of The Roaring Silence.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePerson WHERE {
  # Find Winnie Madikizela-Mandela's death place and ensure it is a settlement
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .

  # Find the native of this settlement
  ?nativePerson dbo:nativeOf ?deathPlace .
  
  # Ensure Manfred Mann wrote ""The Roaring Silence""
  dbr:Manfred_Mann dbo:work dbr:The_Roaring_Silence .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
92,45,test,Give me the band member of Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Jim Sheppard's associated musical artist
SELECT ?artist WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Jim Sheppard"" .
  ?person dbo:musicalArtist ?artist .
}

# Step 2: Find the band of the person born as Joseph Michael
SELECT ?band WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Joseph Michael""@en .
  ?person dbo:member ?band .
}

# Step 3: Find members of Nevermore
SELECT ?nevermoreMember WHERE {
  ?member a dbo:MusicArtist ;
          dbo:bandMemberOf dbr:Nevermore .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,45,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War and military force of Spanish Civil War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?elDirector a dbo:Person ;
              rdfs:label ""El Director""@en .
  
  ?elDirector dbo:participatedIn ?rifWar ;
              dbo:participatedIn ?spanishCivilWar .

  ?rifWar dbr:Rif_War .
  ?spanishCivilWar dbr:Spanish_Civil_War .

  ?rifWar dbo:commander ?commander .
  ?spanishCivilWar dbo:commander ?commander .
}
```",5,6,6,3,3,3,3,71,0,0,11,0,0.0,0
232,44,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Jon Pertwee's child
  ?child dbo:parent dbr:Jon_Pertwee .
  
  # Sylvie Bermann's residence is a British settlement
  ?residence dbo:nativePlace ?sylvieBermann ;
             a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # The child has the same residence as Sylvie Bermann
  ?child dbo:residence ?residence .
  
  # Sean Pertwee's claim to fame is a film related to a military conflict
  ?film dbo:actor ?seanPertwee ;
        dbo:genre dbr:Military_conflict_film .

  # The child is an actor in the same film
  ?child dbo:actor ?film .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
617,37,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfNysa WHERE {
  # Step 1: Identify Nysa and her parent(s)
  ?nysa a dbo:Person ;
        rdfs:label ""Nysa""@en .
  
  OPTIONAL { 
    ?nysa dbo:spouse ?pharnacesI . 
    ?pharnacesI rdfs:label ""Pharnaces I of Pontus""@en .
  }
  
  # Assuming parent information can be inferred through spouse or other relationships
  OPTIONAL {
    ?parentOfNysa dbo:child ?nysa .
  }

  # Step 2: Identify Antiochus (son of Antiochus III the Great) and his successor
  ?antiochusIII a dbo:Person ;
                rdfs:label ""Antiochus III""@en .
  
  OPTIONAL {
    ?antiochusIII dbo:child ?antiochusIV .
    ?antiochusIV rdfs:label ""Antiochus IV""@en .
  }
  
  # Step 3: Identify a child of the successor who is royalty
  ?successorOfAntiochusIV dbo:child ?royalChild ;
                          rdfs:label ?successorLabel .
  
  FILTER regex(?successorLabel, ""Antiochus IV"", ""i"") .

  OPTIONAL {
    ?royalChild a dbo:Person ;
                dbo:spouse ?spouseOfRoyalChild .
    
    # Step 4: Check if the spouse of this royal child is the parent of Nysa
    FILTER (?parentOfNysa = ?spouseOfRoyalChild)
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
54,70,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find the father of Soe Min Wimala Dewi
  ?soeMinWimalaDewi a dbo:Person ;
                   dbo:child ?fatherOfSoeMinWimalaDewi .
  
  # Find the child of this father who is an office holder and royalty
  ?officeHolderRoyalty a dbo:Person, dbo:Royalty ;
                      dbo:child ?soeMinWimalaDewi ;
                      dbo:parent ?fatherOfSoeMinWimalaDewi .
  
  # Find the predecessor of this child's child
  ?officeHolderRoyaltyChild a dbo:Person ;
                           dbo:child ?officeHolderRoyalty .
  ?predecessor a dbo:Person ;
               dbo:successor ?officeHolderRoyaltyChild .
}
```",8,10,9,3,3,3,3,71,0,6,1,0.0,0.0,0
48,17,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of Carl Falk.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?show ?actorBand WHERE {
  # Find the show with Stacey Dash as an actor
  ?show dbo:starring dbr:Stacey_Dash .
  
  # Get actors from that show
  ?show dbo:actor ?actor .

  # Check if any of these actors are also musical artists or bands
  OPTIONAL { 
    ?actor a dbo:MusicalArtist ;
           rdfs:label ?actorBand .
  }

  # Find Carl Falk's band
  dbr:Carl_Falk dbo:bandMember ?falkBand .

  # Filter to find if the actor's band is the same as Carl Falk's band
  FILTER (?actorBand = ?falkBand)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
9,68,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Step 1: Find Queen's University Belfast and its nickname
  VALUES ?queenUni { dbr:Queen's_University_Belfast }
  ?queenUni dbo:nickname ?nickname .

  # Step 2: Identify the mayor of Belfast who is a politician
  ?mayor a dbo:Politician ;
         dbo:officeHolderOf dbr:Belfast_City_Council ;
         dbo:almaMater ?mayorAlmaMater .
  
  # Step 3: Find awardees of Royal Medals and their alma mater
  ?award a dbo:Award ;
         rdfs:label ""Royal Medal""@en .
  ?awardee dbo:recipientOf ?award ;
           dbo:almaMater ?awardeeAlmaMater .

  # Step 4: Ensure the alma mater matches Queen's University Belfast and its nickname
  FILTER (?mayorAlmaMater = ?queenUni && ?awardeeAlmaMater = ?queenUni)
  
  # Step 5: Return the common alma mater which is also the nickname of Queen's University Belfast
  BIND(?mayorAlmaMater AS ?almaMater)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
48,16,test,"Give me the band of the actor, that is a musical artist, of Honor Up and band of the writer of Emotion (Carly Rae Jepsen album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorBand ?writerBand WHERE {
  # Find the actor of ""Honor Up"" who is also a musical artist and their band
  ?person a dbo:Person .
  ?person dbo:actor ?work .
  ?work rdfs:label ""Honor Up""@en .
  OPTIONAL { ?person dbo:musicalArtist true . }
  OPTIONAL {
    ?musicalArtist dbo:bandMember ?band .
    BIND(?band AS ?actorBand)
  }

  # Find the writer of the song ""Emotion"" from Carly Rae Jepsen's album and their band
  ?song dbo:title ""Emotion""@en ;
        dbo:lyricist ?writer .
  ?album dbo:song ?song ;
         rdfs:label ""Emotion (Carly Rae Jepsen album)""@en .
  OPTIONAL {
    ?writer dbo:bandMember ?band .
    BIND(?band AS ?writerBand)
  }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
801,48,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?associatedArtist WHERE {
  # Find The Shadow's alter ego
  ?shadow a dbo:Person ;
          rdfs:label ""The Shadow""@en .
  
  ?alterEgo dbo:alterEgoOf ?shadow ;
            a dbo:Person .

  # Find associated musical artist of the alter ego
  ?alterEgo dbo:associatedMusicalArtist ?professional .

  # Identify DMX as the writer of 40 Dayz & 40 Nightz
  ?album dbo:writer dbr:DMX ;
         rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  # Find associated musical artist of DMX who is both a musician and an artist
  dbr:DMX dbo:associatedMusicalArtist ?artist .
  FILTER (?artist = ?professional)
  FILTER EXISTS { ?artist a dbo:Musician . }
  FILTER EXISTS { ?artist a dbo:Artist . }
}
```",5,7,6,3,2,3,3,71,0,0,22,0,0.0,0
488,57,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?enomotoBirthPlace ?matsumuraDeathPlace ?goMizunooAdmin WHERE {
  # Enomoto Takeaki's birth place
  dbr:Enomoto_Takeaki a dbo:Person ;
                      dbo:birthPlace ?enomotoBirthPlace .

  # Matsudaira Tadamasa's father (office holder)
  dbr:Matsudaira_Tadamasa dbo:father ?matsumuraFather .
  
  # Death place of Matsudaira Tadamasa's grandfather
  ?matsumuraFather dbo:father ?matsumuraGrandfather ;
                   a dbo:Politician .
  ?matsumuraGrandfather dbo:deathPlace ?matsumuraDeathPlace .

  # Emperor Go-Mizunoo's father and his administration
  dbr:Emperor_Go-Mizunoo dbo:father ?goMizunooFather .
  ?goMizunooFather dbo:officeHeld ?administration ;
                   a dbo:OfficeHolder .
  ?administration rdfs:label ?goMizunooAdmin .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
427,50,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherParty ?prodiParty WHERE {
  # Part 1: Find the father of an MIT alumnus and his party
  ?alumnus a dbo:Alumnus ;
           dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
  OPTIONAL { ?father dbo:partyAffiliation ?fatherParty . }

  # Part 2: Find Romano Prodi's party
  dbr:Romano_Prodi a dbo:Politician ;
                   dbo:officeHolder true ;
                   dbo:partyAffiliation ?prodiParty .
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
492,67,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Person died in French Algeria
  ?deathPlace1 dbo:country dbr:French_Algeria ;
              dbo:place dbr:?person .

  # Person died in the capital of Khemis Miliana District
  ?capital dbo:district dbr:Khemis_Miliana_District ;
           dbo:place dbr:?person .
  
  # Person was a commander in a war that includes Battle of Verdun
  ?war dbo:event dbr:Battle_of_Verdun ;
       dbo:commanderInWar ?person .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
701,60,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the spouse of Amun-her-khepeshef.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify the commander in Battle of Perire
  ?commander dbo:participatedInBattle dbr:Battle_of_Perire .
  
  # Step 2: Find the father of the commander
  ?father dbo:child ?commander .

  # Step 3: Find the spouse of the father and ensure they are royalty
  ?spouse dbo:spouse ?father .
  ?spouse a dbo:Royalty .

  # Step 4: Identify Amun-her-khepeshef's spouse and their child
  dbr:Amun-her-khepeshef dbo:spouse ?amunSpouse .
  ?child dbo:parent ?amunSpouse .

  # Step 5: Find the parent of this child (which should be the spouse from step 3)
  ?parent dbo:child ?child .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
747,28,test,Give me the band of Shèna and person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shenaBand ?personBornOnPavloDate ?ambaShepherdBand WHERE {
  # Find Shèna's band
  dbr:Shèna dbo:band ?shenaBand .

  # Get Pavlo Khudzik's birth date
  dbr:Pavlo_Khudzik dbo:birthDate ?pavloBirthDate .

  # Find a person born on the same date as Pavlo Khudzik
  ?personBornOnPavloDate a dbo:Person .
  ?personBornOnPavloDate dbo:birthDate ?date .
  FILTER (?date = ?pavloBirthDate)
  
  # Find Amba Shepherd's band
  dbr:Amba_Shepherd dbo:band ?ambaShepherdBand .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
659,50,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?polishHorse a dbo:MilitaryUnit ;
               rdfs:label ""Polish Horse""@en .
  
  ?schimmelpenninckForce a dbo:MilitaryUnit ;
                         dbo:participatedIn ?event ;
                         rdfs:label ""Rutger Jan Schimmelpenninck""@en .

  ?event a dbo:MilitaryConflict ;
         dbo:commander ?commander .

  ?polishHorse dbo:participatedIn ?event .
}
```",5,12,6,3,2,3,3,71,0,0,31,0,0.0,0
182,27,test,Give me the war of Mahesh Senanayake and war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?maheshWar ?gotabhayaWar ?tamaraNationality WHERE {
  # Mahesh Senanayake's war
  dbr:Mahesh_Senanayake a dbo:Person .
  ?maheshWar dbo:participatedIn dbr:Mahesh_Senanayake .

  # Gotabhaya Rajapaksa's war
  dbr:Gotabhaya_Rajapaksa a dbo:Person .
  ?gotabhayaWar dbo:participatedIn dbr:Gotabhaya_Rajapaksa .

  # Tamara Kunanayakam's nationality
  dbr:Tamara_Kunanayakam a dbo:Person ;
    dbo:nationality ?tamaraNationality .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
701,64,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Parent of Henuttawy (19th dynasty)
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy (19th dynasty)""@en .
  ?henuttawy dbo:parent ?parent1 .

  # Spouse of Amun-her-khepeshef
  ?amun dbr:Amun-her-khepeshef ;
        dbo:spouse ?spouse .

  # Child of the spouse of Amun-her-khepeshef
  ?child dbo:parent ?spouse .

  # Father of the commander in Battle of Perire
  ?commander dbr:Battle_of_Perire ;
             dbo:commander ?commanderPerson .
  ?father dbo:child ?commanderPerson .

  # Spouse of the father of the commander
  ?father dbo:spouse ?parent2 .

  # Ensure both parents are royalty
  FILTER (?parent1 a dbo:RoyalFamily || ?parent1 a dbo:Monarch) .
  FILTER (?parent2 a dbo:RoyalFamily || ?parent2 a dbo:Monarch) .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
232,53,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfResidence WHERE {
  # Find Sylvie Bermann's residence that is a British settlement
  dbr:Sylvie_Bermann dbo:residence ?residence .
  ?residence dbo:nationality dbr:United_Kingdom .
  ?residence a dbo:Settlement .

  # Find an actor from ""Dog Soldiers"" who is also a child of Jon Pertwee
  ?actor dbo:film dbr:Dog_Soldiers_(2002_film) .
  ?actor dbo:child ?childOfPertwee .
  ?childOfPertwee dbo:birthName dbr:Jon_Pertwee .

  # Ensure the actor's residence is the same as Sylvie Bermann's
  ?actor dbo:residence ?residence .

  # Return the native of the settlement
  ?residence dbo:nativeOf ?nativeOfResidence .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
197,8,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of Dumitru Nadu.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthplace WHERE {
  # Leroy P. Steele Prize awardee (assuming Terence Tao)
  VALUES ?awardee { dbr:Terence_Tao }
  
  ?awardee a dbo:Person .
  ?awardee dbo:birthPlace ?birthplace .

  UNION

  # Dumitru Nadu
  ?dumitru a dbo:Person ;
           foaf:name ""Dumitru Nadu"" ;
           dbo:birthPlace ?birthplace .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
747,45,test,Give me the person born on 1985-04-29 and band of Amba Shepherd and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find the person born on 1985-04-29
SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
}

# Query to find Amba Shepherd's band
SELECT ?band WHERE {
  dbr:Amba_Shepherd dbo:member ?band .
}

# Query to identify the persona of Shèna (assuming Shèna is an alias for a known person)
SELECT ?person WHERE {
  ?person rdfs:label ""Shèna""@en .
  FILTER NOT EXISTS { ?person rdfs:label ?otherLabel . FILTER(?otherLabel != ""Shèna"") }
}

# Query to find the band of the person identified as Shèna
SELECT ?band WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Shèna""@en .
  ?person dbo:member ?band .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
963,17,test,"Give me the entity in Serbia and administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?party a dbo:PoliticalParty .
  ?party dbo:country dbr:Serbia .
  
  # Assuming '21205' is an identifier for the ruling status or location
  OPTIONAL { ?party dbo:someProperty ""21205""^^xsd:string . }
}
```

Note: The exact property to use for ""location for 21205"" needs clarification, as it might refer to a specific DBpedia property not directly mentioned here. Adjust `dbo:someProperty` accordingly if more information is available.",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
391,47,test,"Give me the native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Find Sherry Hormann's spouse
  ?sherry a dbo:Person ;
          foaf:name ""Sherry Hormann""@en .
  
  ?spouse dbo:spouse ?sherry .

  # Identify the claim to fame (work) of the spouse
  ?work dbo:creator ?spouse ;
        rdf:type dbo:Film ; # Assuming it's a film, adjust if necessary

  # Find the actor associated with this work
  ?actor dbo:actedIn ?work .

  # Determine the birthplace of the actor
  ?actor dbo:birthPlace ?hubCity .
  
  # Filter for Hub City (assuming we know what Hub City is)
  FILTER(?hubCity = dbr:Hub_City) # Replace with actual DBpedia resource if known

  # Get the native place of the actor
  ?actor dbo:nativeCountry ?native .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,22,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .

  ?event dbo:eventLocation dbr:Aguilar_de_Segarra ;
         a dbo:SportsEvent .

  ?country dbo:sportingEvents ?event .
}
```",4,6,5,2,2,2,3,28,0,0,28787,0,0.0,0
9,35,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation dbr:Northern_Ireland_Forum_Mayor .
  ?person dbo:almaMater ?almaMater .
  
  OPTIONAL { 
    ?university dbo:nickname ""Queen's University Belfast"" .
    FILTER (?almaMater = ?university)
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
488,62,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace WHERE {
  # Saitō Hajime's birth place related to a war
  ?saitoHajime a dbo:Person ;
               dbo:birthPlace ?birthPlace ;
               dbo:commanderOf ?war .
  
  ?war a dbo:MilitaryConflict ;
       dbo:eventCategory [a dbo:SocietalEvent, dbo:Event] .

  # Emperor Go-Yōzei's administration
  ?goYozei a dbo:Person ;
           dbo:administrationPeriod ?period .
  
  # Matsudaira Tadamasa's father
  ?matsudairaTadamasa a dbo:Person ;
                      dbo:father ?father .
  
  ?father a dbo:Politician, dbo:OfficeHolder ;
          dbo:deathPlace ?deathPlace .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
184,50,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalPerson WHERE {
  # Step 1: Find Archduke Joseph Francis's child
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Step 2: Find the parent of that child
  ?parent1 dbo:child ?child1 .

  # Step 3: Find Archduke Ladislaus Philipp's parent
  ?parent2 dbo:child dbr:Archduke_Ladislaus_Philipp_of_Austria .
  
  # Step 4: Find the child of that parent
  ?child2 dbo:parent ?parent2 .

  # Step 5: Find the child of this second child who is royalty
  ?finalPerson dbo:parent ?child2 .
  ?finalPerson a/rdfs:subClassOf* dbo:RoyalPerson .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,49,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Identify Francisco Franco's military force
  ?franco a dbo:Person ;
          rdfs:label ""Francisco Franco""@en .
  
  ?event dbo:militaryConflict ?militaryForce ;
         dbo:societalEvent ?societalEvent ;
         dbo:event ?generalEvent .

  ?franco dbo:commanderInMilitaryForce ?militaryForce .

  # Identify the commander in the event associated with ""El Director""
  ?elDirector a dbo:Person ;
              rdfs:label ""El Director""@en .
  
  ?otherEvent dbo:event ?eventRelatedToElDirector .
  ?otherEvent dbo:commander ?commander .

  FILTER (?franco != ?elDirector)
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
547,70,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v3 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace WHERE {
  # Resting place of the awardee of the award of Gerald Graham
  {
    ?award dbo:recipient ?person .
    ?award dbo:awardedBy dbr:Gerald_Graham .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Resting place of the actor in a show with Emily Richard
  {
    ?show dbo:actor ?actor .
    ?show dbo:castMember dbr:Emily_Richard .
    OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Resting place of the child of James Burton (property developer)
  {
    ?james a dbo:Person ;
           foaf:name ""James Burton"" ;
           dbo:occupation dbr:Property_developer .
    ?child dbo:parent ?james .
    OPTIONAL { ?child dbo:deathPlace ?restingPlace . }
  }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
488,53,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime a dbo:Person ;
                   dbo:birthPlace ?birthPlace .

  # Toyotomi Hideyoshi as the administrator of Emperor Go-Mizunoo's father
  dbr:Toyotomi_Hideyoshi a dbo:Person ;
                         dbo:spouse ?emperorGoMizunooFather .
  
  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu a dbo:Person ;
                      dbo:deathPlace ?deathPlace .

  # Linking the military conflict (e.g., Battle of Sekigahara)
  OPTIONAL {
    ?conflict a dbo:MilitaryConflict ;
              dbo:commander ?saitoHajime .
    ?saitoHajime dbr:Saitō_Hajime .
    
    ?conflict dbo:participant ?toyotomiHideyoshi .
    ?toyotomiHideyoshi dbr:Toyotomi_Hideyoshi .

    ?conflict dbo:participant ?tokugawaIeyasu .
    ?tokugawaIeyasu dbr:Tokugawa_Ieyasu .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
754,17,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of Loe Thai.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent WHERE {
  # Ram Khamhaeng the Great's child
  ?ramKhamhaeng a dbo:Person ;
                rdfs:label ""Ram Khamhaeng the Great""@en .
  
  ?childOfRamKhamhaeng dbo:parent ?ramKhamhaeng ;
                       a dbo:Person .

  # Loe Thai's parent
  ?loeThai a dbo:Person ;
           rdfs:label ""Loe Thai""@en .

  ?parentOfLoeThai dbo:child ?loeThai ;
                   a dbo:Person .

  # Find the common parent
  ?commonParent = ?parentOfLoeThai .
  ?commonParent = ?ramKhamhaeng .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
55,20,test,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find bands Jason Newsted was part of
  ?newstedBand a dbo:MusicalBand ;
               dbo:bandMember dbr:Jason_Newsted .

  # Find members of these bands who are also in other bands
  ?otherBand a dbo:MusicalBand ;
             dbo:bandMember ?bandMember .
  
  # Check if the band member is part of San Francisco Symphony or Guns N' Roses
  OPTIONAL { ?bandMember dbo:performerIn dbr:San_Francisco_Symphony . }
  OPTIONAL { ?bandMember dbo:memberOfBand dbr:Guns_N'_Roses . }

  FILTER EXISTS {
    ?otherBand dbo:bandMember ?bandMember .
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
184,56,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Chain for Archduchess Margaret of Austria
  ?margaret a dbo:Person ;
            dbo:birthDate ?dateMargaret .
  FILTER (YEAR(?dateMargaret) = 1925)
  
  ?parent1 dbo:child ?margaret .
  ?grandChild dbo:parent ?parent1 .

  # Chain for the native of Budapest and child of Archduke Joseph August
  ?josephAugust a dbo:Person ;
                rdfs:label ""Archduke Joseph August of Austria""@en .
  
  ?budaNative dbo:birthPlace dbr:Budapest ;
              dbo:parent ?josephAugust .

  ?parent2 dbo:child ?budaNative .

  # Find the common parent
  FILTER (?grandChild = ?budaNative)
  ?commonParent dbo:child ?grandChild .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,69,test,"Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . ?v7 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?party1 ?party2 ?party3 WHERE {
  # Michele Pinto's party
  ?michele a dbo:Person ;
           foaf:name ""Michele Pinto"" .
  ?michele dbo:partyAffiliation ?party1 .

  # Father of Lamberto Andreotti's party
  ?lamberto a dbo:Person ;
            foaf:name ""Lamberto Andreotti"" .
  ?father dbo:child ?lamberto .
  ?father dbo:partyAffiliation ?party2 .

  # Romano Prodi's birth name and political affiliation
  ?prodi a dbo:Person ;
         dbo:birthName ""Romano Prodi"" ;
         dbo:officeHolder true ;
         dbo:partyAffiliation ?party3 .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
617,41,test,"Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus III the Great
  ?antiochus a dbo:Person ;
             rdfs:label ""Antiochus III the Great""@en .
  
  # His child who is parent of Nysa
  ?child1 dbo:parent ?antiochus ;
          dbo:spouse ?nysa .

  # Nysa, wife of Pharnaces I of Pontus
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  
  # Spouse of the child
  ?child1 dbo:spouse ?spouse .

  # Child of this spouse and child combination
  ?grandchild dbo:parent ?child1 ;
              dbo:parent ?spouse .

  # Ensure grandchild is royalty and child of Seleucus II Callinicus
  ?grandchild a dbo:Royalty ;
             dbo:parent dbr:Seleucus_II_Callinicus .
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
232,42,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Identify Sylvie Bermann's residence
  ?sylvie a dbo:Person ;
          foaf:name ""Sylvie Bermann""@en .
  ?residence dbo:resident ?sylvie ;
             a dbo:Settlement ;
             dbo:nationality dbr:United_Kingdom .

  # Find John Devon Roland Pertwee and his child
  ?john a dbo:Person ;
        foaf:name ""John Devon Roland Pertwee""@en .
  ?child dbo:parent ?john ;
         a dbo:Person .

  # Identify the actor of Dog Soldiers (film)
  ?actor dbo:actorIn dbr:Dog_Soldiers_(2002_film) ;
         a dbo:Person ;
         foaf:name ?name .
  
  FILTER (?child = ?actor)

  # Find the native of the residence
  ?native dbo:nativePlace ?residence ;
          a dbo:Person .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,19,test,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find Lizzie Spaulding's parent who is a fictional character and a soap character
  ?parent a dbo:Person ;
          dbo:child dbr:Lizzie_Spaulding ;
          dbo:spouse ?mother .
  
  # Ensure the parent is a fictional character and a soap character
  ?parent dbo:fictionalWork ?soapOpera .

  # Find Stephen Verona's birthplace which is a settlement
  dbr:Stephen_Verona dbo:birthPlace ?settlement .
  FILTER (isBlank(?settlement) || ?settlement a dbo:Settlement)

  # Ensure the parent resides in the same settlement as Stephen Verona
  ?parent dbo:residence ?settlement .

  # Find the child of this parent who is also a fictional character and a soap character
  ?child a dbo:Person ;
         dbo:parent ?parent ;
         dbo:fictionalWork ?soapOpera2 .

  # Find the father of this child
  ?father a dbo:Person ;
          dbo:spouse ?mother2 ;
          dbo:child ?child .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
427,41,test,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherParty ?italianPeopleParty ?prodiParty WHERE {
  # Find Lamberto Andreotti's father
  dbr:Lamberto_Andreotti dbo:father ?father .
  
  # Get the party of Lamberto Andreotti's father
  ?father dbp:partyAffiliation ?fatherParty .

  # Reference to Italian People's Party (1994)
  dbr:Italian_People%27s_Party_(1994) dbp:name ?italianPeopleParty .

  # Find Romano Prodi's party affiliation
  dbr:Romano_Prodi dbp:partyAffiliation ?prodiParty .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,41,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForceLargoCaballero ?militaryForceFranco ?biscayCampaignCommander WHERE {
  # Military force for Francisco Largo Caballero
  ?militaryForceLargoCaballero a dbo:MilitaryConflict ;
                               dbo:participatedIn dbr:Francisco_Largo_Caballero .
  
  # Military force for Francisco Franco
  ?militaryForceFranco a dbo:MilitaryConflict ;
                      dbo:participatedIn dbr:Francisco_Franco .
  
  # Biscay Campaign commander (Francisco Franco)
  ?biscayCampaignCommander dbo:commanded dbr:Biscay_Campaign ;
                           dbo:participatedIn dbr:Spanish_Civil_War ;
                           rdfs:label ""Francisco Franco""@en .

  FILTER (?militaryForceLargoCaballero = ?militaryForceFranco)
}
```",5,10,6,2,3,3,3,71,0,0,3,0,0.0,0
404,47,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Princess Victoria Louise of Prussia
  VALUES (?princess) { dbr:Princess_Victoria_Louise_of_Prussia }
  
  # Her spouse
  ?princess dbo:spouse ?spouse .
  
  # Their child who is royalty
  ?child dbo:parent ?princess ;
         dbo:parent ?spouse .
         
  # The grandchild, Prince George William of Hanover
  VALUES (?grandchild) { dbr:Prince_George_William_of_Hanover }
  ?grandchild dbo:parent ?child .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
959,55,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Takashi Sekizuka's team manager
  ?team a dbo:SoccerTeam ;
        dbo:coach ?manager .
  ?player dbo:playsFor ?team .
  ?player rdfs:label ""Takashi Sekizuka""@en .

  # Yōichi Masuzoe's residence is a country
  ?residence dbo:nativeOf ?country .
  ?person rdfs:label ""Yōichi Masuzoe""@en ;
          dbo:residence ?residence .
  ?country a dbo:Country .

  # Eiji Ōtsuka's alma mater is a Japanese university
  ?almaMater dbo:alumni ?eiji ;
             a dbo:University, dbo:EducationalOrganization ;
             dbo:location dbr:Japan .
  ?eiji rdfs:label ""Eiji Ōtsuka""@en .

  # Ensure the manager's residence is the country of Yōichi Masuzoe
  ?manager dbo:nativeOf ?country .
}
```",6,11,7,2,3,3,3,71,0,0,2,0,0.0,0
179,17,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Vajiralongkorn""@en .
  ?spouse dbo:spouse ?person ;
          rdfs:label ""Queen Sirikit""@en .
  ?child dbo:child ?spouse ;
         rdfs:label ""Vajiralongkorn""@en .
  ?parent dbo:spouse ?spouse ;
          a dbo:Person .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
303,28,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?arnulfoParty ?panamaCountry ?usCommanderParty WHERE {
  # Arnulfo Arias Madrid's party
  dbr:Arnulfo_Arias_Madrid a dbo:Person .
  OPTIONAL { dbr:Arnulfo_Arias_Madrid dbo:party ?arnulfoParty . }

  # El Valle de Antón is in Panama
  dbr:El_Valle_de_Antón dbo:country ?panamaCountry .

  # Commander of the United States invasion of Panama and their party
  OPTIONAL {
    dbr:United_States_invasion_of_Panama dbo:commander ?usCommander .
    ?usCommander a dbo:Person .
    OPTIONAL { ?usCommander dbo:party ?usCommanderParty . }
  }
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
659,69,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v7 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify the regiment
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .

  # Find the war in which this regiment participated
  ?war a dbo:War ;
      dbo:militaryConflict ?conflict ;
      dbo:member ?regiment .

  # Identify Rutger Jan Schimmelpenninck's role
  dbr:Rutger_Jan_Schimmelpenninck dbo:commanderIn ?force .
  
  # Find the military force related to a societal event and conflict
  ?force a dbo:MilitaryForce ;
        dbo:militaryConflict ?conflict .

  # Identify the commander in the war
  ?war dbo:commander ?commander .

  # Ensure the commander is linked to the Kingdom of Ireland's office holder context
  ?officeHolder a dbo:OfficeHolder ;
               dbo:nativeCountry dbr:Kingdom_of_Ireland .
  
  ?force dbo:commanderIn ?officeHolder .
}
```",8,14,9,3,3,3,3,71,0,0,15,0,0.0,0
281,56,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?professional WHERE {
  ?professional a dbo:Person .
  ?professional dbo:officeHolder ?office .
  ?professional dbo:politician ?politics .
  ?professional dbo:militaryUnit ?unit .
  ?unit dbo:partOf dbr:New_Zealand_Army .
  
  ?professional dbo:nationality dbr:Colony_of_New_Zealand .

  ?professional dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .

  ?war dbo:militaryUnit ?unit .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,24,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find the child who is royalty and related to both Ernest Augustus, Duke of Brunswick and Crown Prince of Hanover
  ?child a dbo:Person .
  ?child dbo:child dbr:Ernest_Augustus,_Duke_of_Brunswick ;
         dbo:child dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  
  # Ensure the child is royalty
  ?child dbo:royaltyStatus ?status .
  FILTER (?status = ""Royal"" || ?status = ""Royalty"") .

  # Find the parent of this royal child
  ?parent dbo:child ?child .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
492,62,test,"Give me the person decedent at Algiers and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Condition for death in Algiers
  ?deathEvent dbo:place ?location .
  ?deathEvent dbo:agent ?person .
  FILTER (str(?location) = ""Algiers"")

  # Association with the work ""French Algeria""
  ?author dbo:work ?work .
  ?work rdfs:label ""French Algeria""@en .
  ?person dbo:spouse|dbo:childOf ?author .

  # Commander in a military conflict and event
  ?conflict dbo:type dbr:Military_conflict .
  ?conflict dbo:event ?event .
  
  # Specifically commander in the Battle of Verdun
  ?battle dbr:Battle_of_Verdun .
  ?person dbo:commander ?battle .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
391,67,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie dbo:workType ?type1 .
  ?movie dbo:televisionSeries ?tvShow .
  
  ?actor a dbo:Actor ;
         dbo:filmProduction ?movie ;
         dbo:nativePlace dbr:Compton,_California .

  ?claimToFame a dbo:Work .
  ?actor dbo:claimToFame ?claimToFame .

  ?spouse a dbo:Person ;
          dbo:spouse dbr:Sherry_Hormann ;
          dbo:work ?claimToFame .

}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
547,51,test,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorRestingPlace ?awardeeRestingPlace WHERE {
  # Part 1: Resting place of the actor in ""Enemy at the Door""
  ?film a dbo:Film ;
        dbo:title ""Enemy at the Door""@en .
  ?film dbo:actor ?actor .
  
  OPTIONAL { 
    ?actor dbo:restingPlace ?actorRestingPlace .
  }

  # Part 2: Resting place of the awardee associated with Gerald Graham
  ?award a dbo:Award ;
         dbo:recipient ?awardee .
  ?award dbo:name ""Gerald Graham""@en .

  OPTIONAL { 
    ?awardee dbo:restingPlace ?awardeeRestingPlace .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
820,20,test,Give me the child of the parent of the professional in Actor and professional in the award of the author of Understanding Comics.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Step 1: Find the author of ""Understanding Comics""
  ?book dbo:author ?author .
  FILTER (str(?book) = str(dbr:Understanding_Comics))

  # Step 2: Find awards related to this author
  ?award dbo:recipient ?professional .
  ?author dbo:receivedAward ?award .

  # Step 3: Ensure the professional is an actor
  ?professional a dbo:Actor .

  # Step 4: Find parents of these professionals
  ?parent dbo:child ?professional .

  # Step 5: Find children of those parents
  ?child dbo:parent ?parent .
}
```",6,6,7,3,2,3,2,20,0,0,128,0,0.0,0
701,54,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Seti I's child (Ramesses II)
  ?setiIChild a dbo:Person ;
              dbo:childOf dbr:Seti_I ;
              rdfs:label ""Ramesses II""@en .

  # Ramesses II's spouse
  ?ramessesSpouse a dbo:Person ;
                  dbo:spouse ?setiIChild .

  # Nefertari's child (Merneptah)
  ?nefertariChild a dbo:Person ;
                  dbo:childOf dbr:Nefertari ;
                  rdfs:label ""Merneptah""@en .

  # Merneptah is the parent of his own children
  ?merneptahParent a dbo:Person ;
                   dbo:parent ?nefertariChild ;
                   rdfs:label ?personLabel .

  FILTER (str(?personLabel) = ""Merneptah"")
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,63,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildRestingPlace ?knightRestingPlace ?actorRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    ?william a dbo:Person ;
             foaf:name ""William Haliburton"" .
    ?williamChild dbo:child ?grandparent .
    ?grandparent dbo:child ?grandchild .
    ?grandchild dbo:finalRestingPlace ?grandchildRestingPlace .
  }
  
  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?knight a dbo:Person ;
            dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    ?knight dbo:finalRestingPlace ?knightRestingPlace .
  }
  
  # Resting place of the actor of Enemy at the Door
  {
    dbr:Enemy_at_the_Door dbo:starring ?actor .
    ?actor a dbo:Person ;
           dbo:finalRestingPlace ?actorRestingPlace .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
659,60,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander a dbo:Person .
  
  # Office holder in Kingdom of Ireland
  ?officeHolderPosition a dbo:Office ;
                       dbo:officeHolder ?commander ;
                       dbo:country dbr:Kingdom_of_Ireland .

  # Military commander related to events involving Rutger Jan Schimmelpenninck
  ?militaryCommander a dbo:MilitaryCommander ;
                    dbo:militaryCommanderOf ?event .
  
  ?event dbo:relatedTo dbr:Rutger_Jan_Schimmelpenninck .

  FILTER (?commander = ?officeHolderPosition && ?commander = ?militaryCommander)
}
```",6,10,7,3,2,3,3,71,0,0,40,0,0.0,0
783,19,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of Ofori Amponsah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find band members associated with Ebony Reigns
  ?ebonyMusicalArtist a dbo:MusicalArtist ;
                     dbo:musicalArtist ?ebonyPerson .
  FILTER (?ebonyPerson = dbr:Ebony_Reigns) .

  OPTIONAL { ?ebonyMusicalArtist dbo:bandMember ?bandMember . }

  # Find band members associated with Ofori Amponsah
  ?oforiMusicalArtist a dbo:MusicalArtist ;
                     dbo:musicalArtist ?oforiPerson .
  FILTER (?oforiPerson = dbr:Ofori_Amponsah) .

  OPTIONAL { ?oforiMusicalArtist dbo:bandMember ?bandMember . }

  # Ensure the band member is common to both
  VALUES ?ebonyPerson { dbr:Ebony_Reigns }
  VALUES ?oforiPerson { dbr:Ofori_Amponsah }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
232,30,test,"Give me the child of Jon Pertwee and actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Jon Pertwee's child who is an actor in ""Dog Soldiers""
  ?child dbo:parent dbr:Jon_Pertwee .
  ?film dbo:starring ?child .
  ?film rdfs:label ""Dog Soldiers""@en .

  # Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:nationality dbr:United_Kingdom ;
                     dbo:birthPlace ?settlement .
  
  # The child must be native to the same settlement and British
  ?child dbo:birthPlace ?settlement .
  ?child dbo:nationality dbr:United_Kingdom .

}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
492,44,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Person died in French Algeria
  ?deathPlace1 dbo:country dbr:French_Algeria ;
              dbo:decedent ?person .

  # Person died in Algiers, the capital of Algeria
  ?capital dbo:capitalOf dbr:Algeria ;
           a dbo:Settlement .
  ?deathPlace2 dbo:location ?capital ;
               dbo:decedent ?person .

  # Person was a commander in a war involving Frédéric-Georges Herr
  ?war dbo:militaryConflict ;
       dbo:commander ?person .
  ?herr dbo:involvedInMilitaryConflicts ?war ;
        rdfs:label ""Frédéric-Georges Herr""@en .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
767,59,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  # Step 1: Identify George Kilbon Nash's administration
  ?administration dbo:positionHeldBy dbr:George_Kilbon_Nash .
  
  # Step 2: Find the alma mater of this administration
  ?administration dbo:almaMater ?almaMater .

  # Step 3: Determine the entity in the administration that is a settlement
  ?administration dbo:location ?settlement .
  FILTER (isBlank(?settlement) || strstarts(str(?settlement), ""http://dbpedia.org/resource/""))

  # Step 4: Link to the writer of ""Where It's At""
  dbr:Where_It%27s_At dbo:lyricsBy ?writer .
  
  # Ensure the settlement is related to the writer
  ?settlement dbo:birthPlace ?writer .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,71,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find the actor of ""Unnatural (TV series)""
  ?actor a dbo:Actor ;
         dbo:actedIn dbr:Unnatural_(TV_series) .
  
  # Get Ted McGinley's birth name and spouse
  ?ted a dbo:Person ;
       foaf:name ""Ted McGinley""@en ;
       dbo:birthName ?tedBirthName .
  ?tedSpouse a dbo:Person ;
             dbo:spouse ?ted .

  # Find an alumnus of Ohio State University by birth name
  ?alumnus a dbo:Person ;
           dbo:almaMater dbr:Ohio_State_University ;
           foaf:name ?birthName .
  
  # Ensure the spouse of Ted McGinley is also the person born with the same name as the alumnus
  FILTER (?tedSpouse = ?alumnus)
  
  # Get the profession of the actor
  ?actor dbo:profession ?professional .
}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
285,19,test,Give me the spouse of the professional in the award of Stan Lee and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find the professional associated with Stan Lee's award
  ?award a dbo:Award .
  ?award dbo:recipient ?stanLeeAwardRecipient .
  ?stanLeeAwardRecipient rdfs:label ""Stan Lee""@en .

  # Find Tina Onassis Niarchos's child
  ?tinaOnassisNiarchos a dbo:Person ;
                      foaf:name ""Tina Onassis Niarchos""@en .
  
  ?child dbo:parent ?tinaOnassisNiarchos ;
         a dbo:Person .

  # Identify the parent of Tina Onassis Niarchos's child
  ?parent dbo:child ?child .

  # Find the spouse of this identified person
  ?person dbo:spouse ?spouse .
  FILTER (?person = ?parent)
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
391,64,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?person a dbo:Person .
  ?person dbo:nativePlace dbr:Jackson,_Tennessee .
  
  # Check for involvement in ""The Departed""
  ?film1 a dbo:Film ;
         dbo:title ""The Departed""@en ;
         dbo:starring ?person .

  # Check for involvement in another work that is both a movie and television show
  ?work a dbo:Film, dbo:TelevisionShow ;
        dbo:starring ?person .
  
  # Return the native place of this person
  ?person dbo:nativePlace ?nativePlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
528,45,test,Give me the war of Orozimbo Barbosa and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOrozimbo ?warIrene ?personNarciso WHERE {
  # Find the war involving Orozimbo Barbosa
  ?warOrozimbo a dbo:Event .
  ?warOrozimbo dbo:participatedIn dbr:Orozimbo_Barbosa .

  # Find the war involving Irene Morales
  ?warIrene a dbo:Event .
  ?warIrene dbo:participatedIn dbr:Irene_Morales .

  # Find the person born as Narciso Campero
  ?personNarciso a dbo:Person .
  ?personNarciso dbo:birthName ""Narciso Campero""^^xsd:string .
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
251,25,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warLocation ?deathPlace WHERE {
  # Find military conflict involving Louis François Félix Musnier in Sicily
  ?musnier a dbo:MilitaryConflict ;
           dbo:placeOfBirth ?location .
  FILTER (CONTAINS(LCASE(STR(?location)), ""sicily"")) .
  
  ?musnier dbo:location ?warLocation .

  # Find death place of Laura Mancinelli
  dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,49,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?militaryUnit WHERE {
  ?person a dbo:Person .
  ?person dbo:officeHolder true .
  ?person dbo:politician true .
  ?person dbo:servedInMilitaryOrganization dbr:New_Zealand_Army .
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  ?militaryUnit a dbo:MilitaryUnit ;
               dbo:militaryUnitOf ?person .
}
```",5,8,6,3,2,3,3,71,0,0,9,0,0.0,0
9,62,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Find the mayor of QUB who is a politician
  ?mayor a dbo:Person ;
         dbo:politicalParty ?party ;  # Assuming politicians have a political party
         dbo:almaMater ?almaMater .
  
  ?organization a dbo:Organization ;
                rdfs:label ""Queen's University Belfast""@en ;
                dbo:location dbr:Belfast .

  ?mayor dbo:mayorFor ?organization .

  # Find the awardee of Royal Medals
  OPTIONAL {
    ?awardee a dbo:Person ;
             dbo:almaMater ?almaMater .
    
    ?award a dbo:Award ;
           rdfs:label ""Royal Medal""@en .
    
    ?awardee dbo:award ?award .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
994,51,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Don Dokken and his associated band members
  ?dokken a dbo:Person ;
          foaf:name ""Don Dokken"" ;
          dbo:associatedBand ?donDokkenBand .
  
  ?donDokkenBand dbo:member ?bandMember .

  # Find Meshuggah and its band members
  dbr:Meshuggah a dbo:Band, dbo:MusicalGroup, dbo:Organization ;
                 dbo:member ?meshuggahBandMember .

  # Check for common band members
  FILTER (?bandMember = ?meshuggahBandMember)
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
528,56,test,Give me the war of Orozimbo Barbosa and war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?orozimboWar ?pisaguaBattle ?narcisoCampero WHERE {
  # Find the war involving Orozimbo Barbosa
  ?orozimboWar a dbo:Battle ;
              dbo:participant ?orozimboBarbosa .
  
  # Find the Battle of Pisagua
  ?pisaguaBattle a dbo:Battle ;
                 rdfs:label ""Battle of Pisagua""@en .

  # Find Narciso Campero by birth name
  ?narcisoCampero a dbo:Person ;
                  foaf:name ""Narciso Campero"" ;
                  dbo:birthName ""Narciso Campero"" .
  
  # Link Narciso Campero to the Battle of Pisagua
  ?pisaguaBattle dbo:participant ?narcisoCampero .

  # Optionally, link Orozimbo Barbosa and Narciso Campero if needed
  OPTIONAL {
    ?orozimboWar dbo:participant ?narcisoCampero .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
55,24,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find bands associated with San Francisco Symphony
  ?symphonyBand a dbo:Band ;
                dbo:associatedBand dbr:San_Francisco_Symphony .

  # Find band members of these bands
  ?member dbo:bandMember ?symphonyBand .

  # Find bands related to Newsted (Jason Newsted)
  ?newstedBand a dbo:Band ;
               dbo:bandMember dbr:Jason_Newsted .

  # Ensure the band member is part of both contexts
  ?member dbo:bandMember ?newstedBand .
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
16,70,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find the actor of ""Unnatural (TV series)""
  ?actor a dbo:Actor ;
         dbo:actedIn dbr:Unnatural_(TV_series) .
  
  # Get Ted Martin McGinley's spouse
  dbr:Ted_McGinley a dbo:Person ;
                   dbo:birthName ""Ted Martin McGinley"" ;
                   dbo:spouse ?tedSpouse .

  # Find the alumnus of Ohio State University by birth name
  ?alumnus a dbo:Person ;
           dbo:almaMater dbr:Ohio_State_University ;
           dbo:birthName ?birthName .
  
  # Ensure the professional is connected to all three entities
  ?professional a dbo:Person ;
                dbo:profession ?actorProfession ;
                dbo:spouse ?tedSpouse ;
                dbo:birthName ?birthName .

  # Filter for profession of actor
  FILTER (?actorProfession = ?actor)
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
404,68,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
            dbo:birthName ""Princess Victoria Louise of Prussia"" .
  
  # Her child, whose parent is Ernest Augustus, Duke of Brunswick
  ?child dbo:parent ?princess ;
         dbo:parent ?dukeErnestAugustus .
  ?dukeErnestAugustus a dbo:Person ;
                     rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .

  # The parent (grandparent) of the child is Prince George William of Hanover
  ?grandparent dbo:child ?dukeErnestAugustus ;
               dbo:child ?someParent .
  ?someParent a dbo:Person ;
              rdfs:label ""Prince George William of Hanover""@en .

  # The person we are interested in, who is royalty and born as Princess Victoria Louise
  ?person a dbo:Person ;
          dbo:birthName ?princessBirthName ;
          dbo:spouse ?spouse .
  
  FILTER (STR(?princessBirthName) = ""Princess Victoria Louise of Prussia"")
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,62,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalPerson WHERE {
  # Step 1: Identify Nysa
  ?nysa a dbo:Person ;
        rdfs:label ""Nysa""@en .
  
  # Step 2: Find Nysa's parent
  ?parent a dbo:Person ;
          dbo:child ?nysa .

  # Step 3: Child of Nysa's child who is royalty
  ?nysasChild a dbo:Person ;
              dbo:child ?nysa .
  ?royalDescendant a dbo:Person, dbo:Royalty ;
                   dbo:child ?nysasChild .

  # Step 4: Successor of Antiochus II Theos who is royalty
  ?antiochusII a dbo:Person ;
               rdfs:label ""Antiochus II Theos""@en .
  ?successor a dbo:Person, dbo:Royalty ;
             dbo:succeededBy ?antiochusII .

  # Step 5: Spouse connection
  ?childOfSuccessor a dbo:Person, dbo:Royalty ;
                    dbo:child ?successor .
  ?finalPerson a dbo:Person ;
               dbo:spouse ?childOfSuccessor .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
659,18,test,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?battleOfLeipzigCommander ?germanCampaign1813Commander WHERE {
  # Identify the military force involved in the Napoleonic Wars
  ?militaryForce a dbo:MilitaryConflict ;
                 rdfs:label ""Napoleonic Wars""@en .
  
  # Find the commander of the Battle of Leipzig
  OPTIONAL {
    ?battleOfLeipzig a dbo:Battle ;
                     dbo:commander ?battleOfLeipzigCommander .
    FILTER(CONTAINS(LCASE(?battleOfLeipzigLabel), ""leipzig""))
  }
  
  # Find the commander of the German Campaign of 1813
  OPTIONAL {
    ?germanCampaign1813 a dbo:MilitaryOperation ;
                        dbo:commander ?germanCampaign1813Commander .
    FILTER(CONTAINS(LCASE(?germanCampaign1813Label), ""german campaign 1813""))
  }
}
```",3,3,4,1,3,3,3,71,0,1,5,0.0,0.0,0
391,69,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find works associated with Michael Ballhaus
  ?work dbo:director dbr:Michael_Ballhaus .
  
  # Find actors involved in these works
  ?work dbo:starring ?actor .
  ?actor a dbo:Person .

  # Identify individuals native to Jackson, Tennessee
  ?person a dbo:Person ;
          dbo:birthPlace dbr:Jackson,_Tennessee .
  
  # Ensure the actor is also associated with the person from Jackson, Tennessee
  OPTIONAL { ?work dbo:starring ?person . }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
959,60,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?teamManager a dbo:Person .
  ?teamManager dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1958)
  
  ?teamManager dbo:managerOfTeam dbr:Kashima_Antlers_1998_season .
  ?teamManager dbo:sportManager true .

  ?subordinateManager a dbo:Person .
  ?subordinateManager dbo:managerOfTeam ?team .
  ?team dbp:season ""1998""^^xsd:string .
  
  ?manager a dbo:Person .
  ?manager dbo:managerOfTeam ?subordinateManager .
  
  ?almaMater a dbo:EducationalOrganization ;
             dbo:country dbr:Japan ;
             rdf:type dbo:University .

  ?person dbo:almaMater ?almaMater .
  ?person = ?teamManager .
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
281,38,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Part 1: Bob Heffron's birth place that is a country
  {
    ?person rdfs:label ""Bob Heffron""@en .
    ?person dbo:birthPlace ?place .
    ?place a dbo:Country .
    BIND(?place AS ?entity)
  }
  
  UNION
  
  # Part 2: Heather Roy's profession related to war (military unit)
  {
    ?person rdfs:label ""Heather Roy""@en .
    ?person dbo:profession ?profession .
    ?profession a dbo:MilitaryUnit .
    BIND(?profession AS ?entity)
  }
}
```",4,6,5,2,2,3,3,71,0,1,1,0.0,0.0,0
404,46,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Find a child of Ernest Augustus who is royalty
  ?child dbo:childOf dbr:Ernest_Augustus,_Duke_of_Brunswick .
  ?child a dbo:Royalty .

  # Step 2: Identify the spouse of this royal child
  ?spouse dbo:spouse ?child .

  # Step 3: Find Princess Victoria Louise of Prussia by birth name
  dbr:Princess_Victoria_Louise_of_Prussia dbo:birthName ?birthName .
  
  # Step 4: Identify a royalty born with that birth name
  ?royalty dbo:birthName ?birthName ;
           a dbo:Royalty .

  # Step 5: Find the parent of this royalty
  ?parent dbo:child ?royalty .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,45,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of Japan and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the manager of Kashima Antlers in 1998
  ?teamManagement a dbo:SportsTeamManager .
  ?teamManagement dbo:managedTeam dbr:Kashima_Antlers .
  ?teamManagement dbo:managementPeriod ?period .
  FILTER (CONTAINS(LCASE(?period), ""1998""))

  # Ensure the manager is a sports manager
  ?manager a dbo:SportsManager .

  # Link the manager to the team management role
  ?teamManagement dbo:agent ?manager .

  # Check if the manager is native to Japan
  ?manager dbo:nationality dbr:Japan .

  # Verify that the manager attended University of Tsukuba
  ?manager dbo:almaMater dbr:University_of_Tsukuba .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
378,40,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query 1: Louis des Balbes de Berton de Crillon's claim to fame
SELECT ?claimToFame WHERE {
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:claimToFame ?claimToFame .
}

# Query 2: Joaquín Blake's associated war
SELECT ?associatedWar WHERE {
  dbr:Joaquín_Blake dbo:associatedWithWar ?associatedWar .
}

# Query 3: Carl Pontus Gahn's birth name
SELECT ?birthName WHERE {
  dbr:Carl_Pontus_Gahn dbo:birthName ?birthName .
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
701,62,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Amun-her-khepeshef and his spouse
  ?amunherkhepeshef a dbo:Person ;
                   rdfs:label ""Amun-her-khepeshef""@en .
  
  ?spouse1 dbo:spouse ?amunherkhepeshef ;
           dbo:spouse ?ramessesII .

  # Step 2: Identify Ramesses II and his spouse
  ?ramessesII a dbo:Person ;
             rdfs:label ""Ramesses II""@en .
  
  # Step 3: Find the child of Amun-her-khepeshef's spouse who is also Ramesses II's spouse
  ?child1 dbo:parent ?spouse1 .

  # Step 4: Identify Seti I and his descendants
  ?setiI a dbo:Person ;
         rdfs:label ""Seti I""@en .
  
  ?child2 dbo:parent ?setiI .
  ?grandchild dbo:parent ?child2 .

  # Step 5: Find the parent of the child of the spouse of Amun-her-khepeshef and Ramesses II
  ?parent1 dbo:parent ?child1 .

  # Step 6: Find the parent of the child of the grandchild of Seti I
  ?parent2 dbo:parent ?grandchild .

  # Step 7: Determine the common ancestor or parent
  FILTER (?parent1 = ?parent2)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
801,67,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?album a dbo:Album .
  ?album rdfs:label ""What U See Is What U Get""@en .
  
  ?professional a dbo:Person ;
                dbo:musicalArtist true ;
                dbo:producer ?album .

  ?writer a dbo:Person ;
          dbo:musicalArtist true ;
          dbo:associatedMusicalArtist ?professional .

  OPTIONAL { ?song dbo:workType dbr:Song ; 
              dbo:work ?album . }
}
```",7,15,8,3,3,3,3,71,0,0,8,0,0.0,0
747,47,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Find Pavlo Khudzik's birth date
  ?pavlo a dbo:Person ;
         foaf:name ""Pavlo Khudzik"" ;
         dbo:birthDate ?khudzikBirthDate .

  # Find any person with the same birth date as Pavlo Khudzik
  ?person a dbo:Person ;
          dbo:birthDate ?date .
  FILTER (?date = ?khudzikBirthDate)

  # Identify songs involving Amba Shepherd
  ?song a dbo:Song ;
        dbo:lyricsWriter ?writer .

  # Find the writer of a song that involves Amba Shepherd
  ?work dbr:Amba_Shepherd ;
        dbo:work ?song .
  
  # Determine the band associated with this writer
  ?band a dbo:Band ;
        dbo:member ?writer .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
77,20,test,"Give me the war of the awardee of the award of Maxim Grigorievich Vlasov and force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?organization WHERE {
  # Part 1: Find Maxim Grigorievich Vlasov's awards
  OPTIONAL {
    dbr:Maxim_Grigorievich_Vlasov dbo:award ?award .
  }
  
  # Part 2: Find the organization related to the mayor of Warsaw
  OPTIONAL {
    ?mayor a dbo:Mayor ;
           dbo:officeLocation dbr:Warsaw .
    ?mayor dbo:force ?organization .
    FILTER EXISTS { ?organization a dbo:Organization }
  }
}
```",6,7,7,3,2,3,2,20,0,8,26,0.0,0.0,0
994,46,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonArtist WHERE {
  # Meshuggah's band members and their associated musical artists
  ?meshuggahMember a dbo:Person ;
                   dbo:bandMember dbr:Meshuggah .
  ?meshuggahMember dbo:associatedMusicalArtist ?artist1 .
  
  # Ensure the artist is a band, group, and organization
  ?artist1 a dbo:Band ;
           a dbo:Group ;
           a dbo:Organization .

  # Watchtower's band members and their associated musical artists
  ?watchtowerMember a dbo:Person ;
                    dbo:bandMember dbr:Watchtower .
  ?watchtowerMember dbo:associatedMusicalArtist ?artist2 .

  # Ensure the artist is a band, group, and organization
  ?artist2 a dbo:Band ;
           a dbo:Group ;
           a dbo:Organization .

  # Find common associated musical artists between Meshuggah's and Watchtower's members
  FILTER (?artist1 = ?commonArtist && ?artist2 = ?commonArtist)
}
```",5,8,6,3,2,3,3,71,0,0,5,0,0.0,0
492,45,test,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in Franco-Hova Wars
  ?role dbo:agent ?person ;
        dbo:roleName ""Commander"" ;
        dbo:relatedEvent dbr:Franco-Hova_Wars .

  # Decedent at the capital of Khemis Miliana District (Khemis Miliana)
  ?deathPlace a dbo:Settlement .
  ?deathPlace rdfs:label ""Khemis Miliana""@en .
  ?person dbo:deathPlace ?deathPlace1 .
  FILTER (?deathPlace = ?deathPlace1)

  # Decedent at French Algeria
  ?algeria dbr:French_Algeria .
  ?person dbo:deathPlace ?deathPlace2 ;
          dbo:deathDate ?date .
  FILTER EXISTS { ?place dbo:partOf ?algeria . ?deathPlace2 dbo:location ?place }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,61,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Archduke Ladislaus Philipp of Austria's lineage
  ?ladislaus a dbo:Person ;
             rdfs:label ""Archduke Ladislaus Philipp of Austria""@en .
  
  ?parentL dbo:child ?ladislaus .
  ?childOfParentL dbo:child ?parentL .
  ?grandChild dbr:RoyalFamilyMember ; 
              dbo:child ?childOfParentL .

  # Archduchess Margaret of Austria's lineage
  ?margaret a dbo:Person ;
            rdfs:label ""Archduchess Margaret of Austria""@en ;
            dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1925)

  ?parentM dbo:child ?margaret .
  ?childOfParentM dbo:child ?parentM .

  # The person we are looking for
  ?person dbr:RoyalFamilyMember ;
          dbo:child ?grandChild ;
          dbo:parent ?childOfParentM .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,49,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Condition for being an alumnus of Ohio State University
  ?person dbo:almaMater dbr:Ohio_State_University .

  # Condition for having a specific birth name (assuming we know the birth name)
  ?person dbo:birthName ?birthName .

  # Condition for being spouse of Ted Martin McGinley
  ?person dbo:spouse dbr:Ted_Martin_McGinley .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,65,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  ?gigi a dbo:Person ;
        rdfs:label ""Gigi Rice""@en .
  
  ?gigi dbo:birthName ?birthName .

  # Find Ted Martin McGinley and his spouse
  ?ted a dbo:Person ;
       rdfs:label ""Ted Martin McGinley""@en .
  
  ?ted dbo:spouse ?spouse .

  # Ensure the spouse is the person we are looking for
  ?person rdfs:label ?birthName .
  FILTER (?person = ?spouse)

  # Find an actor from Unnatural (TV series)
  ?unnatural a dbo:TelevisionSeries ;
             rdfs:label ""Unnatural (TV series)""@en .

  ?unnatural dbo:actor ?actor .
  
  # Ensure the person is also an actor in Unnatural
  FILTER (?person = ?actor)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
16,60,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:almaMater dbr:Ohio_State_University .
  
  ?person dbo:spouse ?spouse .
  
  ?spouse foaf:name ?name .
  FILTER (CONTAINS(LCASE(?name), LCASE(""Ted McGinley"")))
}
```",6,6,7,3,2,3,3,71,1,0,0,1.0,1.0,1.0
547,60,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeRestingPlace ?grandchildRestingPlace WHERE {
  # Part 1: Find the awardee of Gerald Graham's award and their resting place
  ?award a dbo:Award .
  ?award dbo:recipient ?awardee .
  ?gGraham dbr:Gerald_Graham .
  ?gGraham dbo:award ?award .

  OPTIONAL { 
    ?awardee dbo:restingPlace ?awardeeRestingPlace .
  }

  # Part 2: Find the grandchild of William Haliburton and their resting place
  ?parent dbr:William_Haliburton ;
          dbo:child ?child1 .
  
  OPTIONAL {
    ?child1 dbo:child ?grandchild .
    ?grandchild dbo:restingPlace ?grandchildRestingPlace .
  }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
659,49,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Arthur Wellesley, 1st Duke of Wellington's military conflicts
  ?conflict dbo:militaryConflictOf dbr:Arthur_Wellesley,_1st_Duke_of_Wellington .
  
  # Rutger Jan Schimmelpenninck's involvement in societal events or military conflicts
  ?event (dbo:socialEvent|dbo:militaryConflict) ?conflict .
  ?event dbo:referenceTo dbr:Rutger_Jan_Schimmelpenninck .

  # Find the commander associated with these conflicts/events
  ?commander dbo:commanderOf ?conflict .
}
```",5,8,6,3,2,3,3,71,0,0,38,0,0.0,0
547,67,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Resting place of James Burton (Egyptologist)
SELECT ?restingPlace WHERE {
  ?person a dbo:Egyptologist ;
          foaf:name ""James Burton"" .
  ?person dbo:deathPlace ?restingPlace .
}

UNION

# Resting place of the awardee of Gerald Graham's award
SELECT ?awardeeRestingPlace WHERE {
  ?award a dbo:Award ;
         dbo:recipient ?awardee .
  ?awardee foaf:name ""Gerald Graham"" .
  ?awardee dbo:deathPlace ?awardeeRestingPlace .
}

UNION

# Resting place of the actor in a show with Emily Richard
SELECT ?actorRestingPlace WHERE {
  ?show dbo:starring dbr:Emily_Richard ;
        dbo:starring ?actor .
  ?actor dbo:deathPlace ?actorRestingPlace .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
994,62,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Find members of Watchtower
  ?watchtowerMember dbo:memberOf dbr:Watchtower .
  
  # Step 2: Check if the member was also part of Don Dokken
  ?watchtowerMember dbo:memberOf dbr:Don_Dokken .

  # Step 3: Identify other bands or groups this member is associated with
  ?watchtowerMember dbo:memberOf ?associatedArtist .
  
  # Step 4: Ensure these entities are classified as a band, group, and organization
  ?associatedArtist a dbo:Band ;
                   a dbo:MusicalGroup ;
                   a dbo:Organization .

  # Step 5: Find Fredrik Thordendal's band that is an organization
  ?fredrikBand dbo:member dbr:Fredrik_Thordendal .
  ?fredrikBand a dbo:Band ;
               a dbo:MusicalGroup ;
               a dbo:Organization .

  # Ensure the associated artist matches the criteria
  FILTER (?associatedArtist = ?fredrikBand)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,71,test,"Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify Gustav Jonson as an office holder and politician
  ?gustav a dbo:OfficeHolder ;
          dbo:leader ?office .
  
  FILTER (str(?office) = ""Gustav_Jonson"")

  # Find the commander in force at Budapest who is decedent of Gustav Jonson
  ?commander a dbo:Person ;
             dbo:commanderInForce ?force ;
             dbo:decedentOf ?gustav .
  
  FILTER (str(?force) = ""Budapest"")

  # Ensure the commander received the award in the Volcano and Ryukyu Islands campaign
  ?award a dbo:Award ;
         dbo:recipient ?commander ;
         dbo:campaign ?campaign .

  FILTER (str(?campaign) IN (""Volcano_Islands_campaign"", ""Ryukyu_Islands_campaign""))

  # Ensure the commander is also the leader of an office, which is a government agency
  ?commander dbo:leader ?agency .
  
  FILTER (dbo:GovernmentAgency(?agency))
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
391,66,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie a dbo:TelevisionShow .
  ?movie dbo:director dbr:Michael_Ballhaus .
  
  ?work dbo:claimToFame ?movie .
  
  ?actor dbo:actor ?movie .
  ?actor dbo:nativePlace ?hubCity .

  FILTER (str(?hubCity) = ""Hub City"")
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
801,69,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Find the album by title
  ?album a dbo:Album ;
         rdfs:label ""What U See Is What U Get""@en .
  
  # Identify the writer of the album
  ?writer dbo:work ?album ;
          a dbo:Writer .

  # Find the producer who is associated with 50 Cent's work and has an alter ego ""The Shadow""
  ?producer dbo:alterEgo dbr:The_Shadow ;
            dbo:producer ?work .
  
  ?work dbo:artist dbr:50_Cent ;
        a dbo:Songs .

  # Ensure the producer is also linked to the writer of the album
  ?writer dbo:associatedMusicalArtist ?producer .
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
488,21,test,Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for Emperor Go-Yōzei's administration period
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  dbr:Emperor_Go-Yōzei a dbo:Person .
  dbr:Emperor_Go-Yōzei dbo:reign ?administration .
}

# Query for the birthplace of Saigō Takamori
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Saigō_Takamori a dbo:Person .
  dbr:Saigō_Takamori dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
429,9,test,"Give me the country of the military force, that is an organisation, of Camden Expedition and administration of the father of Martha Johnson Patterson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Part 1: Find the military force involved in the Camden Expedition
  ?expedition a dbo:MilitaryExpedition ;
              rdfs:label ""Camden Expedition""@en .
  
  ?force dbo:militaryForceOf ?expedition ;
         a dbo:Organization .

  # Part 2: Identify Martha Johnson Patterson's father and his administration
  dbr:Martha_Johnson_Patterson dbo:father ?father .
  
  ?administration dbo:administrator ?father ;
                  dbo:country ?country .
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
427,53,test,"Give me the reference to the name of the party of Michele Pinto and party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?micheleParty ?giulioParty ?romanoParty WHERE {
  # Michele Pinto's party affiliation
  ?michele a dbo:Person ;
           foaf:name ""Michele Pinto""@en .
  OPTIONAL { ?michele dbp:partyAffiliation ?micheleParty . }

  # Giulio Andreotti's party affiliation
  ?giulio a dbo:Person ;
          foaf:name ""Giulio Andreotti""@en .
  OPTIONAL { ?giulio dbp:partyAffiliation ?giulioParty . }

  # Romano Antonio Prodi's details and party affiliation
  ?romano a dbo:Person, dbo:Politician, dbo:OfficeHolder ;
          foaf:name ""Romano Antonio Prodi""@en ;
          dbo:birthDate ?date .
  OPTIONAL { ?romano dbp:partyAffiliation ?romanoParty . }
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
285,17,test,Give me the spouse of the professional in the award of Stan Lee and parent of Alexander Onassis.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Stan Lee's spouse
  dbr:Stan_Lee a dbo:Person ;
               dbo:spouse ?stanLeeSpouse .

  # Find Alexander Onassis' parent(s)
  dbr:Alexander_Onassis a dbo:Person ;
                       dbo:parent ?onassisParent .

  # Check if the parent of Alexander Onassis is related to an award associated with Stan Lee
  OPTIONAL {
    ?award a dbo:Award .
    ?award dbo:recipient ?onassisParent .
    FILTER EXISTS { 
      ?stanLeeAward a dbo:Award ;
                    dbo:recipient dbr:Stan_Lee .
      ?award dbo:category ?stanLeeAwardCategory .
      ?stanLeeAward dbo:category ?stanLeeAwardCategory .
    }
  }

  # Return Stan Lee's spouse if the conditions are met
  BIND(?stanLeeSpouse AS ?spouse)
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
232,67,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Identify the politician who is a child of Jon Pertwee and from France
  ?politician a dbo:Politician ;
             dbo:officeHolder true ;
             dbo:nativePlace ?settlement ;
             dbo:child dbr:Jon_Pertwee .
  
  FILTER (CONTAINS(LCASE(STR(?politician)), ""france""))

  # Step 2: Find the British settlement where this politician was born
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom .

  # Step 3: Identify the actor, narrator, and producer native to this settlement
  ?actor a dbo:Actor ;
         dbo:narrator true ;
         dbo:producer true ;
         dbo:nativePlace ?settlement .

  # Step 4: Find the film and military conflict associated with this actor's claim to fame
  ?claimToFame dbo:film ?film ;
               dbo:militaryConflict ?conflict .
  
  FILTER (CONTAINS(LCASE(STR(?actor)), ""actor"") && CONTAINS(LCASE(STR(?actor)), ""narrator"") && CONTAINS(LCASE(STR(?actor)), ""producer""))

  # Step 5: Ensure the actor is linked to both a film and military conflict
  ?actor dbo:claimToFame ?claimToFame .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
281,67,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find the leader of the 1962 New South Wales state election
  ?leader a dbo:Politician ;
          dbo:leaderOf dbr:1962_New_South_Wales_state_election .

  # Get the birthplace of this leader, which should be a country
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .

  # Find the military unit associated with this leader in the New Zealand Army
  ?militaryUnit a dbo:MilitaryUnit ;
               dbo:militaryUnitOf dbr:New_Zealand_Army ;
               dbo:leader ?leader .

  # Consider Beauchamp Seymour, 1st Baron Alcester's war involvement
  ?beauchamp a dbo:Person ;
             dbo:name ""Beauchamp Seymour"" ;
             dbo:title ""1st Baron Alcester"" .
  ?beauchamp dbo:war ?war .

  # Connect the military unit to Beauchamp Seymour's war
  ?militaryUnit dbo:war ?war .

  # Return the entity (birthplace) that is a country
  ?entity = ?birthPlace
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
487,16,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of Patricia McCoy.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?philipAdministration ?patriciaCountry WHERE {
  # Identify Philip Brian Scott as a soccer player
  ?philip a dbo:SoccerPlayer ;
          foaf:name ""Philip Brian Scott"" ;
          dbo:birthDate ?date .
  
  # Find his administration role
  ?philip dbo:positionHeld ?philipAdministration .

  # Identify Patricia McCoy and her administration's country
  ?patricia a dbo:Person ;
            foaf:name ""Patricia McCoy"" .
  
  ?patricia dbo:positionHeld ?administration .
  ?administration dbo:country ?patriciaCountry .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
232,50,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Find Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:residence ?residence .
  
  # Ensure the residence is a settlement and British
  ?residence a dbo:Settlement ;
             dbo:nativeCountry dbr:United_Kingdom .

  # Get the native of this residence
  ?native dbo:nativePlace ?residence .

  # Find an actor with claim to fame in both a film and a military conflict
  ?actor a dbo:Actor .
  ?actor dbo:claimToFame ?film .
  ?actor dbo:claimToFame ?conflict .
  
  # Ensure the claim to fame includes a film and a military conflict
  ?film a dbo:Film .
  ?conflict a dbo:MilitaryConflict .

  # Link the actor's native place to Sylvie Bermann's residence
  ?native dbo:nativePlace ?residence .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
281,71,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v8 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardWar ?birthPlaceCountry ?militaryUnitWar WHERE {
  # Jonathon Band's award and associated war
  ?jonathon a dbo:Person ;
            foaf:name ""Jonathon Band"" .
  ?jonathon dbo:award ?award .
  ?award dbo:relatedTo ?awardWar .

  # Leader of the 1962 NSW state election
  ?electionLeader a dbo:Politician ;
                  dbo:electedAsLeaderOf dbr:1962_New_South_Wales_state_election .
  ?electionLeader dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # New Zealand Army professional
  ?professional a dbo:OfficeHolder, dbo:Politician ;
                dbo:profession ?militaryUnit .
  ?militaryUnit rdf:type dbo:MilitaryUnit ;
                dbo:partOf dbr:New_Zealand_Army .
  ?militaryUnit dbo:relatedTo ?militaryUnitWar .

}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
30,9,test,Give me the professional in the profession of Édouard Alphonse James de Rothschild and native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Get Édouard Alphonse James de Rothschild's profession
  SELECT DISTINCT ?profession WHERE {
    dbr:Édouard_Alphonse_James_de_Rothschild dbo:occupation ?profession .
  } LIMIT 1

  # Get Silvia Cohen's birthplace
  SELECT DISTINCT ?birthPlace WHERE {
    dbr:Silvia_Cohen dbo:birthPlace ?birthPlace .
  } LIMIT 1

  # Find individuals with the same profession and birthplace
  ?person a dbo:Person ;
          dbo:occupation ?profession ;
          dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
528,58,test,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battle ?commander ?ireneMoralesWar ?narcisoCamperoForce WHERE {
  # Battle of La Rinconada de Ate and its commander
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of La Rinconada de Ate""@en .
  OPTIONAL { 
    ?battle dbo:commander ?commander .
  }

  # War involving Irene Morales
  ?ireneMoralesWar a dbo:Battle ;
                   dbo:participatedIn ?ireneMorales .
  ?ireneMorales rdfs:label ""Irene Morales""@en .

  # Force or role of Narciso Campero
  ?narcisoCampero a dbo:Person ;
                  dbo:birthName ""Narciso Campero"" .
  OPTIONAL {
    ?narcisoCampero dbo:militaryForce ?narcisoCamperoForce .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
617,45,test,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Laodice IV's spouse
  dbr:Laodice_IV a dbo:Person ;
                 dbo:spouse ?spouse .

  # Laodice IV is a child of Antiochus III the Great
  dbr:Laodice_IV dbo:childOf dbr:Antiochus_III_the_Great .

  # Commander in Battle of Panium and their child
  ?commander a dbo:Person ;
            dbo:parent ?spouse .
  ?commanderChild a dbo:Person ;
                  dbo:parent ?commander .

  FILTER (?spouse != dbr:Laodice_IV) # Ensure spouse is not Laodice IV herself
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,59,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 WHERE {
  # Find Indalecio Prieto's predecessor
  ?prieto a dbo:Person ;
          rdfs:label ""Indalecio Prieto""@en .
  
  ?predecessor dbo:predecessor ?prieto ;
               a dbo:Person .

  # Find the military force associated with the predecessor
  ?militaryForce1 dbo:militaryForce ?predecessor ;
                  a dbo:MilitaryConflict ;
                  dbo:socialEvent ?event1 .

  FILTER EXISTS { ?event1 a dbo:SocietalEvent }

  # Identify person decedent at Francoist Spain
  ?decedent a dbo:Person ;
            dbo:deathPlace dbr:Francoist_Spain ;
            rdfs:label ?name .

  # Find the military force associated with this decedent
  ?militaryForce2 dbo:militaryForce ?decedent ;
                  a dbo:MilitaryConflict ;
                  dbo:event ?event2 .

  FILTER EXISTS { ?event2 a dbo:SocietalEvent }
  FILTER EXISTS { ?event2 a dbo:Event }

}
```",6,11,7,3,2,3,3,71,0,0,514,0,0.0,0
801,70,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Find the album ""What U See Is What U Get""
  ?album a dbo:MusicalWork ;
         rdfs:label ""What U See Is What U Get""@en .
  
  # Identify the writer of the album
  ?writer dbo:work ?album ;
          a dbo:Writer, dbo:MusicalArtist .

  # Find the producer of the album
  ?producer dbo:producedAlbum ?album ;
            a dbo:Person .

  # Identify the professional with alter ego The Shadow
  ?professional a dbo:MusicalArtist, dbo:Rapper ;
                rdfs:label ?shadowLabel .
  
  FILTER(CONTAINS(LCASE(?shadowLabel), ""the shadow""))

  # Link producer to a work that is a song and musical work
  ?producerWork a dbo:Songs, dbo:MusicalWork ;
                dbo:performer ?professional .

  # Find the associated artist of the writer
  ?associatedArtist dbo:spouse ?writer .
}
```",8,16,9,3,3,3,3,71,0,0,8,0,0.0,0
981,20,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:author dbr:Kamikaze_Girls .
  
  # Assuming beauty queen status can be linked through an event or title
  ?event dbo:winner ?person ;
         rdf:type dbo:BeautyPageant .

  # Linking to the region of Salak, North Sumatra via time zone
  ?region dbo:timeZone dbr:Time_zone_in_Salak,_North_Sumatra .
  ?person dbo:nationality ?nation .
  ?nation dbo:locatedIn ?region .

  ?person dbo:birthPlace ?birthPlace .
}
```",6,7,7,3,2,3,2,20,0,0,19,0,0.0,0
666,16,test,"Give me the figure known as the nickname of England national beach soccer team and player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?manager WHERE {
  # Find the nickname of the England national beach soccer team
  ?team a dbo:NationalTeam ;
        rdfs:label ""England national beach soccer team""@en .
  
  OPTIONAL { 
    ?team dbo:nickname ?nickname . 
  }
  
  # Find the manager of Hull City A.F.C. during the 2016–17 season
  ?hullCity a dbo:FootballClub ;
            dbo:manager ?manager .

  FILTER (YEAR(?managerStartDate) <= 2016 && YEAR(?managerEndDate) >= 2017)

  # Check if there is any player who was managed by this manager and has the nickname
  OPTIONAL {
    ?player dbo:playedFor ?hullCity ;
            rdfs:label ?nickname .
  }
  
  FILTER (?nickname != """")
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
427,22,test,"Give me the reference to Partito Popolare Italiano and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  VALUES ?person { dbr:Romano_Prodi }
  
  ?person a dbo:Politician .
  OPTIONAL { ?person dbo:birthDate ?date . FILTER (YEAR(?date) > 0) } # Ensures the person is born
  OPTIONAL { ?person dbo:officeHolder ?office . FILTER EXISTS { ?office a dbo:Office } } # Checks if they hold an office
  
  ?person dbo:partyMembership ?party .
  
  ?party dbr:Partito_Popolare_Italiano ; 
         rdfs:label ?partyLabel .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
528,40,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of Narciso Campero.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?force1 dbo:commander ?orozimboBarbosa .
  ?force2 dbo:commander ?narcisoCampero .
  ?orozimboBarbosa rdfs:label ""Orozimbo Barbosa""@en .
  ?narcisoCampero rdfs:label ""Narciso Campero""@en .
  
  ?force1 dbo:participatedIn ?war .
  ?force2 dbo:participatedIn ?war .

  ?war a dbo:War .
  FILTER (CONTAINS(LCASE(?war), ""chile""))
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
328,63,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ferenc Szálasi's commander in force
  ?szalasiCommander a dbo:Person ;
                    dbo:militaryCommanderOf dbr:Ferenc_Szálasi .

  # Leader of an office (government agency) of Joseph Stalin
  ?stalinLeader a dbo:Person ;
                dbo:leaderOf ?office .
  ?office dbo:head dbr:Joseph_Stalin .

  # Awardee of the commander in Volcano and Ryukyu Islands campaign
  ?campaignCommander a dbo:Person ;
                     dbo:militaryCommanderOf ?volcanoCampaign ;
                     dbo:militaryCommanderOf ?ryukyuCampaign .
  ?volcanoCampaign rdfs:label ""Volcano Islands campaign""@en .
  ?ryukyuCampaign rdfs:label ""Ryukyu Islands campaign""@en .

  # Intersection of all roles
  FILTER (?szalasiCommander = ?stalinLeader && ?szalasiCommander = ?campaignCommander)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,29,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars and commander in German campaign of 1813.",SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander of the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?regiment a dbo:MilitaryUnit ;
            dbo:commander ?person ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  
  # Commander in the German campaign of 1813
  ?campaign a dbo:MilitaryConflict ;
            dbo:participatingMilitaryForce ?force ;
            rdfs:label ""German campaign of 1813""@en .
  ?force dbo:commander ?person .

  # Ensure the person was involved in the Napoleonic Wars
  ?war a dbo:MilitaryConflict ;
       dbo:participatingMilitaryForce ?force ;
       rdfs:label ""Napoleonic Wars""@en .
}
```",4,6,5,2,3,3,3,71,0,0,6,0,0.0,0
659,52,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Office holder in the Kingdom of Ireland
  ?officeHolderPosition rdfs:label ""Kingdom of Ireland""@en ;
                       dbo:officeHolder ?person .

  # Military commander during Napoleonic Wars
  ?militaryCommander rdfs:label ""Napoleonic Wars""@en ;
                    dbo:militaryCommander ?person .
  
  # Commander in the war involving 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en ;
            dbo:commander ?person .
}
```",6,9,7,3,3,3,3,71,0,0,13,0,0.0,0
404,71,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia by her birth name
  ?princess a dbo:Person ;
           dbo:birthName ""Princess Victoria Louise of Prussia"" .

  # Step 2: Find her spouse
  ?princess dbo:spouse ?spouse .

  # Step 3: Identify the father of her spouse
  ?father dbo:child ?spouse .

  # Step 4: Determine a child of this father who is royalty
  ?child dbo:parent ?father ;
         a dbo:Person, dbo:Royalty .

  # Step 5: Ensure this child's parent (who must be royalty) is related to Prince George William of Hanover
  ?grandparent dbo:child ?child .
  ?prince dbr:Prince_George_William_of_Hanover ;
          dbo:child ?grandparent .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
16,55,test,Give me the person born as the birth name of Gigi Rice and professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  ?gigi a dbo:Person ;
        rdfs:label ""Gigi Rice""@en .
  
  # Find the person with that birth name
  ?person dbo:birthName ?gigiBirthName .

  # Ensure this person has the same profession as Satomi Ishihara
  ?satomi a dbo:Person ;
          dbo:profession ?profession .
  ?person dbo:profession ?sameProfession .
  
  FILTER (?sameProfession = ?profession)

  # Check if this person is a spouse of Ted Martin McGinley
  ?ted a dbo:Person ;
       rdfs:label ""Ted Martin McGinley""@en .
  ?ted dbo:spouse ?person .

}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,51,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia's spouse
  ?princess a dbo:Person ;
           rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  ?spouse dbo:spouse ?princess .

  # Step 2: Find the spouse's father
  ?father dbo:child ?spouse .

  # Step 3: Determine the child of this father
  ?child dbo:parent ?father ;
         rdf:type dbo:Person .

  # Step 4: Link to Ernest Augustus, Duke of Brunswick
  ?ernestAugustus a dbo:Person ;
                  rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  
  ?royalChild dbo:child ?ernestAugustus ;
              rdf:type dbo:Royalty .

  # Step 5: Ensure the child is royalty and matches
  FILTER (?child = ?royalChild)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,20,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Francisco Largo Caballero's involvement in a military force
  OPTIONAL {
    dbr:Francisco_Largo_Caballero dbo:member|dbo:commander ?militaryForce .
  }
  
  # Military forces involved in the Rif War
  OPTIONAL {
    ?rifWarEvent dbo:participatedInMilitaryConflict ?rifWar .
    ?rifWar dbo:hasParticipant ?militaryForce .
    
    FILTER (str(?rifWar) = ""Rif_War"")
  }

  # Find common military force
  VALUES ?militaryForce { ?militaryForce }
}
```",3,5,4,2,2,3,3,71,0,0,34,0,0.0,0
281,58,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v5 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit WHERE {
  ?militaryUnit a dbo:MilitaryUnit .
  ?militaryUnit dbo:servedIn ?war .
  
  ?politician a dbo:Politician ;
             dbo:officeHolderOf ?office ;
             dbo:militaryService ?militaryUnit .

  ?bobHeffron a dbo:Person ;
              dbo:birthPlace ?country .
  FILTER (str(?country) = ""Australia"") # Assuming Bob Heffron was born in Australia

  ?beauchampSeymour a dbo:Person ;
                   dbo:militaryService ?militaryUnit .

  ?office dbo:organization dbr:New_Zealand_Army .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
838,20,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify YU Grupa
  ?yuGrupa a dbo:Band ;
           rdfs:label ""YU Grupa""@en .

  # Step 2: Find band members of YU Grupa
  ?yuGrupa dbo:bandMember ?member .
  
  # Step 3: Identify other bands these members belong to
  ?otherBand a dbo:Band ;
             dbo:bandMember ?member .

  # Step 4: Focus on Žika Jelić and his band
  ?zikasBand a dbo:Band ;
             dbo:bandMember ?zikajelic .
  
  ?zikajelic rdfs:label ""Žika Jelić""@en ;
             a (dbo:Artist|dbo:MusicalArtist) .

  # Step 5: Find members of Žika Jelić's band
  ?zikasBand dbo:bandMember ?bandMember .
}
```",6,13,7,3,2,3,2,20,0,0,5,0,0.0,0
92,60,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ?name .
  FILTER (str(?name) = ""Joseph Michael"")
  
  ?person dbo:bandMember ?band .
  
  ?artist a dbo:Artist .
  ?artist dbo:reference dbr:Nevermore_(2006_film) .
  ?band dbo:member ?artist .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
827,20,test,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Identify Princess Pauline's spouse who is a royalty
  dbr:Princess_Pauline_of_Saxe-Weimar-Eisenach dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Person .
  
  # Step 2: Find their child who is also a royalty
  ?spouse dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Person .

  # Step 3: Determine Charles Alexander's parent and their royal child
  dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:parent ?charlesParent .
  ?charlesParent dbo:child ?anotherRoyalChild .
  ?anotherRoyalChild rdf:type dbo:Person .

  # Step 4: Identify the father of the child from step 2
  ?royalChild dbo:father ?father .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
54,46,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?thinkhayasGrandchild WHERE {
  # Find Thinkhaya of Pagan
  ?thinkhaya a dbo:Person ;
             foaf:name ""Thinkhaya""@en .
  
  # Find Thinkhaya's child (Person A)
  ?personA dbo:parent ?thinkhaya .

  # Find Thinkhaya's grandchild
  ?grandchild dbo:parent ?personA .

  # Find Narapati I of Ava
  ?narapatiI a dbo:Person ;
             foaf:name ""Narapati I""@en .
  
  # Check if Narapati I is the same as Thinkhaya's grandchild
  FILTER (?grandchild = ?narapatiI)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,71,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalArtist WHERE {
  # Step 1: Identify Fredrik Thordendal's band (Meshuggah)
  dbr:Fredrik_Thordendal a dbo:Person .
  ?meshuggah dbo:bandMember dbr:Fredrik_Thordendal .

  # Step 2: Meshuggah is both a band and an organization
  ?meshuggah a dbo:Band ;
             a dbo:Organization .

  # Step 3: Find associated musical artist of Watchtower
  ?watchtowerAssociatedArtist dbo:associatedBand dbr:Watchtower .

  # Step 4: Find associated musical artist of the above person
  ?secondLevelAssociatedArtist dbo:associatedBand ?watchtowerAssociatedArtist .

  # Step 5: Identify Don Dokken's persona (Don Dokken himself)
  ?donDokken a dbo:Person ;
             rdfs:label ""Don Dokken""@en .
  ?personaBirthDate dbo:birthDate ?date .
  FILTER (CONTAINS(LCASE(?personaBirthDate), LCASE(""Don Dokken"")))

  # Step 6: Find associated musical artist of Don Dokken's persona
  ?donDokkenAssociatedArtist dbo:associatedBand ?personaBirthDate .

  # Final Step: Find the associated musical artist of Fredrik Thordendal
  ?finalArtist dbo:bandMember ?meshuggah ;
               dbo:associatedBand ?donDokkenAssociatedArtist .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
179,20,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of the parent of Vajiralongkorn.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Vajiralongkorn's parent
  ?vParent a dbo:Person ;
           dbo:child dbr:Vajiralongkorn .

  # Parent of Vajiralongkorn's parent (grandparent)
  ?gParent a dbo:Person ;
           dbo:child ?vParent .

  # Nakkhatra Mangala's child who is royalty
  ?royaltyChild a dbo:Person ;
                dbo:child dbr:Nakkhatra_Mangala ;
                rdf:type dbo:Royalty .

  # Person whose birth name matches their child's name
  ?person a dbo:Person ;
          rdfs:label ?birthName ;
          dbo:parent ?gParent ;
          dbo:child ?royaltyChild .
  
  FILTER (?birthName = ?royaltyChildLabel)
  BIND (rdfs:label(?royaltyChild) AS ?royaltyChildLabel)
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
547,53,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of the child of William Haliburton and resting place of Simon Cadell.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?restingPlace WHERE {
  # Part 1: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  { 
    ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Part 2: Resting place of the child of the child of William Haliburton
  {
    dbr:William_Haliburton dbo:child ?grandparentChild .
    ?grandparentChild dbo:child ?grandchild .
    OPTIONAL { ?grandchild dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Part 3: Resting place of Simon Cadell
  {
    dbr:Simon_Cadell dbo:deathPlace ?restingPlace .
  }
}
```",6,6,7,3,3,3,3,71,0,66,1,0.0,0.0,0
617,48,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparent WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochusIII a dbo:Person ;
                rdfs:label ""Antiochus III the Great""@en .
  
  ?antiochus dbr:Antiochus_IV_Epiphanes ;
            dbo:parent ?antiochusIII .

  # Step 2: Find child of Antiochus (son of Antiochus III)
  ?child a dbo:Person ;
         dbo:parent ?antiochus .
  
  # Step 3: Find grandchild of Antiochus
  ?grandchild a dbo:Person ;
              dbo:parent ?child .

  # Step 4: Identify successor of Antiochus II Theos and their child
  ?antiochusII dbr:Antiochus_II_Theos ;
               rdfs:label ""Antiochus II Theos""@en .
  
  ?successor a dbo:Person ;
             dbo:succeededBy ?antiochusII ;
             dbo:child ?successorChild .

  FILTER EXISTS { ?successor dbo:royaltyStatus ?status . }
  FILTER EXISTS { ?successorChild dbo:royaltyStatus ?status2 . }

  # Step 5: Find parent of the grandchild
  ?grandparent a dbo:Person ;
               dbo:parent ?grandchild .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
659,23,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:positionHeld ?position .
  ?position rdfs:label ?positionLabel .
  FILTER (CONTAINS(LCASE(?positionLabel), ""commander"") && CONTAINS(LCASE(?positionLabel), ""kingdom of ireland""))
}
```",3,4,4,3,1,3,3,71,0,0,269,0,0.0,0
161,61,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find ""El Director""
  ?elDirector a dbo:Person ;
              rdfs:label ""El Director""@en .
  
  # Find the predecessor of Indalecio Prieto
  ?indalecioPrieto a dbo:Person ;
                   rdfs:label ""Indalecio Prieto""@en .
  ?predecessor dbo:predecessor ?indalecioPrieto .

  # Identify military force related to societal event and conflict for predecessor
  ?societalEvent a dbo:SocietalEvent ;
                 dbo:relatedMilitaryConflict ?militaryConflict1 .
  ?militaryConflict1 dbo:force ?militaryForce .
  ?predecessor dbo:involvedIn ?societalEvent .

  # Identify force related to event commanded by ""El Director""
  ?event a dbo:Event ;
         dbo:commanderInForce ?elDirector .
  ?militaryConflict2 dbo:force ?militaryForce .
  ?event dbo:relatedMilitaryConflict ?militaryConflict2 .

}
```",6,9,7,3,2,3,3,71,0,0,32,0,0.0,0
161,60,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryConflict WHERE {
  # Identify ""El Director"" and their role as commander
  ?elDirector a dbo:Person ;
              rdfs:label ""El Director""@en .
  
  ?elDirector dbo:commanderOf ?force .

  # Find the military conflict associated with this force
  ?force dbo:participatedIn ?militaryConflict .

  # Identify the decedent of ""El Director"" during Francoist Spain
  ?decedent dbo:decedent ?elDirector ;
            dbo:placeOfBirth dbr:Francoist_Spain .

  # Ensure the military conflict is also a societal event and an event
  ?militaryConflict a dbo:MilitaryConflict, dbo:Event .
}
```",6,10,7,3,2,3,3,71,0,0,34,0,0.0,0
55,23,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find the band associated with Chris Cornell as a producer
  ?producer a dbo:Person ;
            foaf:name ""Chris Cornell"" .
  
  ?song dbo:title ""Used to Love Her""@en ;
        dbo:composer ?producer .

  ?producer dbo:bandMember ?band1 .

  # Find the band members of this band
  ?band1 dbo:bandMember ?bandMember .

  # Find Jason Newsted's band membership
  ?newsted a dbo:Person ;
           foaf:name ""Jason Newsted"" .
  
  ?newsted dbo:bandMember ?metallica ;
           dbo:reference ?referenceBand .

  # Ensure the reference is also a band
  ?referenceBand a dbo:Band .

  # Find common band members between the two bands
  ?referenceBand dbo:bandMember ?commonBandMember .

  FILTER (?bandMember = ?commonBandMember)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
659,61,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck as a commander in a military conflict
  ?conflict a dbo:MilitaryConflict .
  ?conflict dbo:commander dbr:Rutger_Jan_Schimmelpenninck .

  # The Polish Horse as part of a military unit or organization
  ?polishHorse a dbo:MilitaryUnit ;
               rdfs:label ""Polish Horse""@en .

  # Linking the Polish Horse to the military conflict
  ?conflict dbo:participatingMilitaryUnit ?polishHorse .

  # Finding the larger military force that includes the Polish Horse
  ?militaryForce a dbo:MilitaryOrganization ;
                 dbo:partOf ?conflict .
}
```",6,13,7,3,2,3,3,71,0,0,31,0,0.0,0
328,35,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the office led by Joseph Stalin
  ?office dbo:leader dbr:Joseph_Stalin .
  
  # Find the person who is leader of that office
  ?person dbo:leader ?office .

  # Find the award given by Bruce Fraser, 1st Baron Fraser of North Cape
  ?award dbo:recipient ?fraserAwardee .
  FILTER (str(?fraserAwardee) = ""Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape"")

  # Check if this person is also an awardee
  ?person dbo:award ?award .

}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,51,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of Ferenc Szálasi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonLeader WHERE {
  # Gustav Jonson's leader of office
  ?jonson a dbo:Person ;
          dbo:officeHolder ?jonsonOffice .
  ?jonsonOffice dbo:leaderOf ?jonsonLeader .

  # Ferenc Szálasi's commander in force and its leader
  ?szalasi a dbo:Person ;
           dbo:commanderInForce ?szalasiCommand .
  ?szalasiCommand dbo:head ?szalasiLeader .

  # Check if the leaders are the same
  FILTER (?jonsonLeader = ?szalasiLeader)
  
  BIND(?jonsonLeader AS ?commonLeader)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,54,test,"Give me the band of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?referenceMember ?nevermoreAssociation ?actor ?associatedArtist WHERE {
  # Find Joseph Michael's band
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael"" .
  
  ?person dbo:bandMember ?band .

  # Find another member of the same band who is an artist
  ?referenceMember dbo:bandMember ?band ;
                   a dbo:Artist .

  # Check if this reference member has any association with Nevermore
  OPTIONAL { 
    ?referenceMember dbo:associatedBand dbr:Nevermore .
    BIND(""Yes"" AS ?nevermoreAssociation)
  }
  
  # Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?actor a dbo:Person ;
         foaf:name ?actorName ;
         dbo:birthDate ?date .

  ?film dbo:title ""Return to Nuke 'Em High Volume 1"" .
  ?film dbo:starring ?actor .

  # Find associated musical artist of the actor
  OPTIONAL {
    ?associatedArtist dbo:associatedBandMember ?actor .
    BIND(""Yes"" AS ?associatedArtist)
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,19,test,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?war WHERE {
  ?person a dbo:Person .
  ?person dbo:honoraryTitle ?title .
  FILTER regex(?title, ""Knight Grand Cross of the Order of the Bath"", ""i"") .

  OPTIONAL { 
    ?person dbo:award dbr:Order_of_the_Bath#Knight_Grand_Cross .
  }

  ?war a dbo:MilitaryConflict ;
      dbo:location dbr:Colony_of_New_Zealand .

  ?person dbo:participatedIn ?war .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,68,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Sherry Hormann's spouse and their claim to fame
  dbr:Sherry_Hormann dbo:spouse ?spouse .
  ?spouse dbo:claimToFame ?work .

  # The actor of the work (claim to fame)
  ?work dbo:starring ?actor .

  # The movie involving Roz Ryan
  ?movie dbo:starring dbr:Roz_Ryan ;
         a dbo:Film, dbo:TelevisionShow .

  # Ensure the same actor is in both works
  ?movie dbo:starring ?actor .

  # Actor's birthplace must be Jackson, Tennessee
  ?actor dbo:birthPlace dbr:Jackson,_Tennessee .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
404,70,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalParent WHERE {
  # Step 1: Find Princess Victoria Louise of Prussia's spouse
  ?princessVictoriaLouise a dbo:Person ;
                        rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  ?spouse1 dbo:spouse ?princessVictoriaLouise ;
           rdf:type dbo:Royalty .

  # Step 2: Find the child of this spouse
  ?child1 dbo:parent ?spouse1 ;
          rdf:type dbo:Royalty .

  # Step 3: Find the parent of this child
  ?parent1 dbo:child ?child1 ;
           rdf:type dbo:Royalty .

  # Step 4: Find Prince George William of Hanover's spouse
  ?princeGeorgeWilliam a dbo:Person ;
                      rdfs:label ""Prince George William of Hanover""@en .
  
  ?spouse2 dbo:spouse ?princeGeorgeWilliam ;
           rdf:type dbo:Royalty .

  # Step 5: Find the child of this spouse
  ?child2 dbo:parent ?spouse2 ;
          rdf:type dbo:Royalty .

  # Step 6: Find the parent of this child
  ?finalParent dbo:child ?child2 .
}
```",8,11,9,3,3,3,3,71,0,2,1,0.0,0.0,0
659,45,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck as a commander
  dbr:Rutger_Jan_Schimmelpenninck dbo:commander ?conflict .
  
  # Battle of Leipzig and German campaign of 1813
  VALUES ?conflict { 
    dbr:Battle_of_Leipzig 
    dbr:German_campaign_of_1813 
  }
  
  # Find the military force associated with these conflicts
  ?conflict dbo:militaryForce ?militaryForce .
}
```",5,8,6,3,3,3,3,71,0,0,6,0,0.0,0
161,47,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?francoMilitaryForce ?prietoPredecessorMilitaryForce WHERE {
  # Find Francisco Franco
  ?franco a dbo:Person ;
          foaf:name ""Francisco Franco""@en .

  # Find military force associated with Franco that is both a societal event and a military conflict
  ?francoMilitaryForce dbo:participatedIn ?franco ;
                       a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Find Indalecio Prieto's predecessor
  ?prieto a dbo:Person ;
          foaf:name ""Indalecio Prieto""@en .
  
  ?prietoPredecessor dbo:predecessor ?prieto ;
                     a dbo:Person .

  # Find military force associated with Prieto's predecessor that is both a societal event and a military conflict
  ?prietoPredecessorMilitaryForce dbo:participatedIn ?prietoPredecessor ;
                                  a dbo:MilitaryConflict, dbo:SocietalEvent .
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
232,45,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee and actor of Dog Soldiers (film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Francois_Philippe_Beauvau . # Assuming the politician is François Philippe Beauvau
  ?person dbo:childOf dbr:Jon_Pertwee .
  ?person dbo:actorIn dbr:Dog_Soldiers_(film) .
  
  ?residence dbo:nativePlace ?nativePlace .
  ?residence a dbo:Settlement .
  ?residence dbo:country dbr:United_Kingdom .

  ?person dbo:residence ?residence .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
617,55,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             dbo:childOf dbr:Antiochus_III_the_Great .

  # Child of Antiochus III the Great
  ?child dbr:Antiochus_III_the_Great dbo:child .

  # Spouse of the child of Antiochus III the Great
  ?spouse dbo:spouse ?child ;
         a dbo:Person .

  # Child of the spouse and the child of Antiochus III the Great
  ?grandChild dbo:parent ?spouse, ?child ;
              a dbo:Person .

  # Parent of the grandChild (which is royalty)
  ?parent dbo:child ?grandChild .
  FILTER (?parent a dbo:Royalty) 
}
```",6,7,7,2,3,3,3,71,0,0,2,0,0.0,0
391,43,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify Sherry Hormann's spouse
  ?sherry a dbo:Person ;
          foaf:name ""Sherry Hormann""@en .
  
  ?spouse dbo:spouse ?sherry ;
          a dbo:Person .

  # Step 2: Find the native of Compton, California
  ?nativePlace a dbo:PopulatedPlace ;
               rdfs:label ""Compton, California""@en .
  
  ?person dbo:nativePlace ?nativePlace ;
          a dbo:Person .

  FILTER(?spouse = ?person)

  # Step 3: Determine the claim to fame (work)
  ?claimToFame dbo:actor ?person ;
               a dbo:Film ; # Assuming it's a film, adjust if necessary

  # Step 4: Identify the actor of this work
  ?actor dbo:actor ?claimToFame .

  # Step 5: Verify actor's role in ""All About the Andersons""
  dbr:All_About_the_Andersons dbo:actor ?actor .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,71,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalParent WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            dbo:birthDate ?dateMargaret .
  FILTER (YEAR(?dateMargaret) = 1925)

  # Parent of Archduchess Margaret
  ?parentMargaret dbo:child ?margaret .

  # Child of the parent of Archduchess Margaret
  ?grandchildMargaret dbo:parent ?parentMargaret .

  # Landmark at elevation 96.0 that is a settlement
  ?landmark a dbo:Settlement ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""96.0""^^xsd:float)

  # Native of the landmark
  ?native dbo:nativePlace ?landmark .

  # Parent of the native
  ?parentNative dbo:child ?native .

  # Archduke Ladislaus Philipp of Austria
  ?ladislaus a dbo:Person ;
             rdf:type dbo:Royalty .

  # Royalty parent of Archduke Ladislaus
  ?royaltyParent dbo:child ?ladislaus .

  # Child of the royalty parent
  ?childLadislaus dbo:parent ?royaltyParent .

  # Parent of the child of the royalty parent
  ?finalChildLadislausParent dbo:child ?childLadislaus .

  # Final parent is the common entity from both paths
  VALUES ?finalParent { ?grandchildMargaret ?parentNative ?finalChildLadislausParent }
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
617,18,test,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandfather WHERE {
  # Richeza of Poland, Queen of Hungary's father and grandfather
  ?richeza a dbo:Person ;
           rdfs:label ""Richeza of Poland, Queen of Hungary""@en .
  
  ?richeza dbo:childOf ?father .
  ?father dbo:parent ?grandfather .

  # Ensure the grandfather is royalty
  ?grandfather a dbo:Royalty .

  # Mlada (abbess) and her lineage
  ?mlada a dbo:Person ;
         rdfs:label ""Mlada (abbess)""@en .
  
  ?mlada dbo:childOf ?parent .
  ?parent dbo:parent ?grandparent .
  
  # Ensure the grandparent is royalty
  ?grandparent a dbo:Royalty .

  # Find the child of Mlada's parent who is also royalty
  ?child dbo:childOf ?parent ;
         a dbo:Royalty .

  # Match the grandfather from Richeza's lineage with the grandparent from Mlada's lineage
  FILTER (?grandfather = ?grandparent)
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,47,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the leader of the 1962 New South Wales state election and their birth place
SELECT ?leader ?birthPlace WHERE {
  ?election a dbo:Election .
  ?election dbo:year ""1962""^^xsd:gYear .
  ?election dbo:state dbr:New_South_Wales .
  ?election dbo:candidateForLeader ?leader .
  ?leader dbo:birthPlace ?birthPlace .
}

# Step 2: Check if the birth place is a country
SELECT ?country WHERE {
  VALUES ?birthPlace { <INSERT_BIRTH_PLACE_URI_HERE> }
  ?birthPlace a dbo:Country .
  BIND(?birthPlace AS ?country)
}

# Step 3: Find the awardee of Knight Grand Cross of the Order of the Bath and associated war
SELECT ?awardee ?war WHERE {
  ?awardee dbo:honours dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  ?awardee dbo:associatedWithWar ?war .
}
```

Note: Replace `<INSERT_BIRTH_PLACE_URI_HERE>` with the actual URI obtained from Step 1.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
314,27,test,"Give me the person deceased at Madrid and awardee of the award of Sergei Makovetsky and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Deceased at Madrid
  ?deathEvent dbo:place ?location .
  ?deathEvent dbo:agent ?person .
  FILTER (str(?location) = ""Madrid"")

  # Awardee of Sergei Makovetsky
  ?awardEvent dbo:recipient ?person .
  ?awardEvent dbo:givenBy dbr:Sergei_Makovetsky .

  # Commander in profession
  ?person dbo:militaryRank ?rank .
  FILTER (str(?rank) = ""Commander"")

  # Event and Societal Event related to Lisa Gavrić
  ?event a dbo:Event, dbo:SocietalEvent .
  ?event dbo:agent dbr:Lisa_Gavrić .
  ?event dbo:agent ?person .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
996,16,test,Give me the entity in the award of Ekrem Akurgal and force of the awardee of 1778.0.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee1778 WHERE {
  # Find the award Ekrem Akurgal received
  ?ekremAward a dbo:Award ;
             dbo:recipient dbr:Ekrem_Akurgal .
  
  # Find who received this same award in 1778
  ?awardInstance a dbo:Award ;
                 dbo:recipient ?awardee1778 ;
                 dbo:date ?date .
                 
  FILTER (YEAR(?date) = 1778)
  FILTER (?ekremAward = ?awardInstance)
}
```",4,4,5,2,2,3,2,20,0,0,4,0,0.0,0
701,66,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?commander dbo:participatedInBattle dbr:Battle_of_Perire .
  ?father dbo:child ?commander .
  ?spouse dbo:spouse ?father .
  ?spouse a dbo:Royalty .

  ?ramessesChild dbo:parent dbr:Ramesses_II .
  ?nefertariChild dbo:parent dbr:Nefertari .
  
  FILTER (?spouse = ?ramessesChild || ?spouse = ?nefertariChild)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
378,61,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?role ?conflict WHERE {
  ?trigge a dbo:Person ;
          foaf:name ""Thomas Trigge""@en .
  
  OPTIONAL { 
    ?trigge dbo:participatedIn ?peninsularWar .
    ?peninsularWar rdfs:label ?conflictLabel .
    FILTER (CONTAINS(LCASE(?conflictLabel), ""peninsular war""))
  }
  
  OPTIONAL {
    ?trigge dbo:role ?role .
  }

  OPTIONAL {
    ?trigge dbo:participatedIn ?otherConflict .
    ?otherConflict rdfs:label ?otherConflictLabel .
    FILTER (!CONTAINS(LCASE(?otherConflictLabel), ""peninsular war""))
  }
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
767,52,test,"Give me the alma mater of the administration of George K. Nash and reference to  and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/state> ?v2 . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?settlement WHERE {
  # Step 1: Find George K. Nash's alma mater
  ?nash a dbo:Person ;
        foaf:name ""George K. Nash"" ;
        dbo:almaMater ?almaMater .

  # Step 2: Identify the administration he was part of
  ?administration dbo:member ?nash .
  
  # Step 3: Find a settlement in this administration
  ?settlement dbo:settlement ?administration ;
              a dbo:Settlement .

  # Step 4: Identify the writer of ""Where It's At"" by Dustin Lynch
  ?song dbo:lyricsBy ?writer ;
        foaf:name ""Where It's At (Dustin Lynch song)"" .
  
  # Step 5: Ensure there is a connection between the settlement and the writer
  ?settlement dbo:resident ?writer .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
528,70,test,Give me the war of the commander in the work of --01-09 and force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?force1 ?war 
WHERE {
  # Find the commander involved in an event on January 9th
  ?event dbo:date ?date .
  FILTER (YEAR(?date) = - && MONTH(?date) = 1 && DAY(?date) = 9)
  ?event dbo:commander ?commander .

  # Find the military force associated with Narciso Campero
  ?person dbo:birthName ""Narciso Campero""@en .
  ?person dbo:militaryForce ?force1 .

  # Find the war in which the Battle of Pisagua took place
  dbr:Battle_of_Pisagua dbo:participatedIn ?war .
}
```",8,8,9,3,3,3,3,71,0,0,2,0,0.0,0
404,48,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Princess Victoria Louise of Prussia by her birth name
  ?princess a dbo:Person ;
            dbo:birthName ""Princess Victoria Louise of Prussia""@en .
  
  # Find her father
  ?father dbo:child ?princess .

  # Use the father to identify Ernest Augustus, Duke of Brunswick
  ?ernestAugustus dbo:father ?father ;
                  a dbo:Person ;
                  rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  
  # Find the spouse of Princess Victoria Louise (the royalty)
  ?princess dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,38,test,Give me the spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Antiochus III the Great
  dbr:Antiochus_III_the_Great a dbo:Person .

  # Find one of his children
  ?child dbo:parent dbr:Antiochus_III_the_Great .
  
  # Find the spouse of this child
  ?child dbo:spouse ?spouse .

  # Ensure this spouse is also a parent of Antiochus (another child)
  ?antiochus dbo:parent ?spouse ;
             rdfs:label ""Antiochus""@en .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
528,63,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile and war of the commander in Battle of La Rinconada de Ate.","SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?societalEvent WHERE {
  # Identify Narciso Campero Leyes and his role as a commander in the Battle of La Rinconada de Ate
  ?person dbr:Narciso_Campero_Leyes .
  ?battle dbr:Battle_of_la_Rinconada_de_Ate .
  ?person dbo:commander ?militaryForce .
  ?battle dbo:participatedIn ?societalEvent .

  # Filter societal events to those that are wars in Chile
  ?societalEvent a dbo:SocietalEvent ;
                dbo:country dbr:Chile ;
                rdf:type dbo:War .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
712,18,test,"Give me the resting place of the awardee of Hero of the Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Hero_of_the_Soviet_Union .
  ?person dbo:militaryUnit dbr:Red_Army .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,42,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Part 1: War of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand
  {
    ?person a dbo:Person .
    ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
    ?person dbo:nationality dbr:Colony_of_New_Zealand .
    ?person dbo:war ?war .
  }
  
  UNION
  
  # Part 2: War of the profession, that is a military unit, of Heather Roy
  {
    dbr:Heather_Roy dbo:profession ?militaryUnit .
    ?militaryUnit a dbo:MilitaryUnit .
    ?militaryUnit dbo:war ?war .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
360,27,test,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to the author of Blinded by the Light.",SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer ?blindedByTheLightAuthor WHERE {
  # Find the writer of ""The Roaring Silence""
  ?book dbo:title ""The Roaring Silence"" .
  ?book dbo:author ?writer .

  # Get Winnie Madikizela-Mandela's death place
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find natives of that settlement
  ?native dbo:nativePlace ?deathPlace .

  # Check if the writer is native to the death place
  FILTER (?writer = ?native)

  # Get the author of ""Blinded by the Light""
  ?blindedBook dbo:title ""Blinded by the Light"" .
  ?blindedBook dbo:author ?blindedByTheLightAuthor .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
701,69,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Amun-her-khepeshef's spouse
  ?spouse1 dbo:spouse dbr:Amun-her-khepeshef .
  
  # Child of Amun-her-khepeshef's spouse
  ?child1 dbo:parent ?spouse1 .

  # Parent of that child (likely the spouse itself)
  ?parent1 dbo:child ?child1 .

  # Ramesses II's child
  ?child2 dbo:parent dbr:Ramesses_II .

  # Parent of Ramesses II's child (likely Ramesses II himself)
  ?parent2 dbo:child ?child2 .

  # Commander in Battle of Perire and his father
  ?commander dbo:participatedInBattle dbr:Battle_of_Perire .
  ?father dbo:child ?commander .

  # Spouse of the commander's father
  ?spouse2 dbo:spouse ?father .

  # Ensure the person is royalty and involved in the battle
  ?person a dbo:Royalty ;
          dbo:participatedInBattle dbr:Battle_of_Perire ;
          rdf:type ?parent1, ?parent2, ?spouse2 .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
528,50,test,Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  # Find the war or military conflict associated with a specific date or event
  ?war a dbo:MilitaryConflict .
  ?work dbo:date ?date .
  FILTER (STRSTARTS(STR(?date), ""1909-01""))
  
  # Identify the commander of that war
  ?war dbo:commander ?commander .

  # Find Narciso Campero Leyes and his birth details
  ?person a dbo:Person ;
          rdfs:label ""Narciso Campero Leyes""@en .
  ?person dbo:birthDate ?birthDate .

  # Check if the commander is related to Narciso Campero Leyes
  OPTIONAL { ?commander dbo:spouse ?person . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,51,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person ;
          dbo:profession ?profession .

  # Find an alumnus of Ohio State University and their birth name
  ?alumnus a dbo:Person ;
           dbo:almaMater dbr:Ohio_State_University ;
           dbo:birthName ?birthName .

  # Find the person with the same profession as Satomi Ishihara and matching birth name
  ?person a dbo:Person ;
          dbo:profession ?profession ;
          dbo:birthName ?birthName .
}
```",5,5,6,3,2,3,3,71,0,58,3,0.0,0.0,0
378,63,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Find Carl Pontus Gahn's birth name
  ?gahn a dbo:Person ;
        rdfs:label ""Carl Pontus Gahn""@en ;
        dbo:birthName ?birthName .

  # Find the commander in the Great Siege of Gibraltar and Peninsular War
  ?commander a dbo:Person ;
             dbo:claimToFame ?siegeGibraltar, ?peninsularWar ;
             rdfs:label ?name .
  
  FILTER(?name = ""George Augustus Eliott""@en || ?name = ""Arthur Wellesley""@en)

  # Find the wars associated with this commander
  ?commander dbo:commanderOfMilitaryConflict ?war .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
767,27,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:Matthew_Burland a dbo:Person .
  dbr:Matthew_Burland dbo:alterEgo ?alterEgo .
}
```",3,4,4,3,1,3,3,71,0,0,98447,0,0.0,0
281,30,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and war of the profession, that is a military unit, of Heather Roy and entity in Colony of New Zealand.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war1 ?war2 ?militaryUnit ?entityNZ WHERE {
  # Beauchamp Seymour, 1st Baron Alcester's wars
  ?person a dbo:Person ;
          rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .
  ?person dbo:participatedIn ?war1 .

  # Heather Roy's military unit or profession
  ?heather a dbo:Person ;
           rdfs:label ""Heather Roy""@en .
  OPTIONAL { ?heather dbo:militaryUnit ?militaryUnit . }

  # Entity in the Colony of New Zealand related to military context
  ?entityNZ a dbo:Place ;
            dbo:country dbr:New_Zealand_Colony ;
            (dbo:participatedIn|dbo:militaryUnit) ?war2 .

  FILTER (?war1 != ?war2)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
488,56,test,"Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceYoshinobu ?deathPlaceIeyasu ?adminFatherSpouse WHERE {
  # Birth place of Tokugawa Yoshinobu (commander in Boshin War)
  dbr:Tokugawa_Yoshinobu a dbo:Person ;
    dbo:birthPlace ?birthPlaceYoshinobu .

  # Death place of Tokugawa Ieyasu
  dbr:Tokugawa_Ieyasu a dbo:Person ;
    dbo:deathPlace ?deathPlaceIeyasu .

  # Spouse of Tokugawa Masako and their royal parent's administration
  dbr:Tokugawa_Masako a dbo:Person ;
    dbo:spouse ?spouse .
  
  ?spouse a dbo:Person ;
    dbo:parent ?royalParent .
  
  ?royalParent a dbo:RoyalFamilyMember ; # Assuming royalty is represented by this class
    dbo:administeredRegion ?adminFatherSpouse .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,34,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?decedent WHERE {
  # Find the author of ""French Algeria""
  ?work dbo:title ""French Algeria""@en .
  ?work dbo:author ?author .

  # Find a person who died in Algiers
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Algiers .
  
  BIND(?author AS ?decedent)
}
```",4,4,5,3,2,3,3,71,0,0,16,0,0.0,0
10,26,test,"Give me the band member of Luke Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v4 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist ?professionalName WHERE {
  # Find band members of Luke Vibert
  ?person a dbo:Person ;
          foaf:name ""Luke Vibert"" .
  ?person dbo:bandMember ?bandMember .

  # Find associated musical artist of Matt Colton
  ?colton a dbo:Person ;
          foaf:name ""Matt Colton"" .
  ?colton dbo:associatedBand ?artist .
  ?artist a dbo:MusicalArtist ;
          foaf:name ?associatedArtist .

  # Find professional name of Sharon Kao
  ?kao a dbo:Person ;
       foaf:name ""Sharon Kao"" .
  OPTIONAL { ?kao foaf:alias ?professionalName }
  
  # Linking the information (assuming there's a common link)
  FILTER(?bandMember = ?artist || ?associatedArtist = ?professionalName)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
9,59,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Find the mayor who is a politician in Belfast
  ?mayor a dbo:Mayor ;
         dbo:officeHolderOf ?organization .
  ?organization dbo:location dbr:Belfast .
  ?mayor a dbo:Politician .

  # Find the alma mater of this mayor
  ?mayor dbo:almaMater ?almaMater .

  # Find the awardee of Royal Medals
  ?awardee dbo:awardReceived dbr:Royal_Medals .
  
  # Find the alma mater of this awardee
  ?awardee dbo:almaMater ?almaMater .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
115,8,test,Give me the alma mater of Vladimir Cerrón and alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Vladimir Cerrón's alma mater
SELECT ?almaMaterCerro WHERE {
  dbr:Vladimir_Cerr%C3%B3n a dbo:Person .
  dbr:Vladimir_Cerr%C3%B3n dbo:almaMater ?almaMaterCerro .
}

# Query for the alma mater of an awardee of the National Order of Scientific Merit
SELECT DISTINCT ?awardee ?almaMaterAwardee WHERE {
  ?awardee a dbo:Person .
  ?awardee dbo:awardReceived dbr:National_Order_of_Scientific_Merit .
  ?awardee dbo:almaMater ?almaMaterAwardee .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
232,65,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # John Pertwee's details
  dbr:John_Pertwee a dbo:Person ;
                   dbo:child ?child .

  # Child's professions and claim to fame
  ?child a dbo:Person ;
         dbo:profession ?prof1, ?prof2, ?prof3 ;
         dbo:claimToFame ?fame .
  
  FILTER (?prof1 = dbr:Actor && ?prof2 = dbr:Narrator && ?prof3 = dbr:Producer)
  FILTER (someValuesFrom(dbo:Film) IN(?fame) && someValuesFrom(dbo:MilitaryConflict) IN(?fame))

  # Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:residence ?settlement .
  
  FILTER (?settlement a dbo:Settlement && ?settlement dbo:country dbr:United_Kingdom)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,24,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?sovietLeader ?szalasiCommander WHERE {
  # Find the leader of People's Commissariat of Defense of the Soviet Union
  ?sovietLeader a dbo:Person ;
                dbo:positionHeld ?defensePosition .
  ?defensePosition rdfs:label ""People's Commissar for Defence""@en .

  # Find commander in the force of Ferenc Szálasi
  ?szalasiCommander a dbo:Person ;
                    dbo:spouse ?ferencSzalasi ;
                    dbo:positionHeld ?militaryRole .
  ?ferencSzalasi rdfs:label ""Ferenc Szálasi""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,63,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?figure WHERE {
  # Queen's University Belfast as nickname and alma mater
  ?figure dbo:nickname dbr:Queens_University_Belfast .
  ?figure dbo:almaMater dbr:Queens_University_Belfast .

  # Figure is a politician and mayor of an organization in Belfast
  ?figure a dbo:Politician ;
          dbo:mayorOf ?organization .
  ?organization dbo:location dbr:Belfast .

  # Alma mater of the awardee of Royal Medal
  ?awardee dbo:almaMater ?figure ;
           dbo:award dbr:Royal_Medal .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,57,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29 and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Part 1: Band of Tracey Elizabeth McSween
  {
    ?person a dbo:Person .
    ?person dbo:birthName ""Tracey Elizabeth McSween"" .
    ?person dbo:band ?band .
  }
  
  UNION
  
  # Part 2: Band of the person born on 1985-04-29
  {
    ?person a dbo:Person .
    ?person dbo:birthDate ?date .
    FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
    ?person dbo:band ?band .
  }
  
  UNION
  
  # Part 3: Band of the work written by Amba Shepherd
  {
    ?writer a dbo:Writer .
    ?writer foaf:name ""Amba Shepherd"" .
    ?work dbo:author ?writer ;
          rdf:type dbo:Song .
    ?work dbo:band ?band .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,61,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?gustav a dbo:Person ;
          dbo:officeHolder ?office ;
          dbo:politician ?politics ;
          dbo:deathPlace dbr:Budapest .
  
  ?agency a dbo:GovernmentAgency ;
          dbo:leaderOf ?commander .

  ?commander dbo:militaryCommanderAt ?force ;
             dbo:location dbr:Budapest .

  FILTER (?gustav = ?office || ?gustav = ?politics)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
994,48,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist WHERE {
  # Donald Maynard Dokken as a musical artist
  dbr:Donald_Maynard_Dokken a dbo:MusicalArtist ;
                            dbo:bandMember ?bandMember .

  # Associated musical artists of the band member
  ?bandMember dbo:associatedMusicalArtist ?associatedArtist .

  # Check if any associated artist is linked to Watchtower
  OPTIONAL {
    ?associatedArtist dbo:associatedBand dbr:Watchtower .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,65,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  # Find the nickname of Queen's University Belfast
  ?university a dbo:EducationalInstitution ;
              dbo:nickname ?nickname .

  FILTER (?universe = ""Queen's University Belfast"")

  # Find the person associated with this nickname
  ?person a dbo:Person ;
          rdfs:label ?nickname ;
          dbo:almaMater ?almaMater .

  # Ensure this person has received an award related to Royal Medals
  ?award a dbo:Award ;
         dbo:name ?awardName .
  FILTER CONTAINS(LCASE(?awardName), ""royal medal"")

  ?person dbo:award ?award .

  # Find the mayor of Northern Ireland Forum and their alma mater
  ?mayor a dbo:Person ;
         dbo:occupation dbr:Northern_Ireland_Forum ;
         dbo:almaMater ?sharedAlmaMater .

  FILTER (?almaMater = ?sharedAlmaMater)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,46,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Find Yōichi Masuzoe's residence and alma mater
  dbr:Yōichi_Masuzoe a dbo:Person .
  dbr:Yōichi_Masuzoe dbo:residence ?residence .
  ?residence dbo:nativeCountry ?nativeCountry .
  
  dbr:Yōichi_Masuzoe dbo:almaMater ?almaMater .
  ?almaMater a dbo:EducationalOrganization ;
             dbo:country dbr:Japan .

  # Find the person born in 1958 who attended the same alma mater
  ?person a dbo:Person ;
          dbo:birthDate ?date ;
          dbo:almaMater ?almaMater .
  FILTER (YEAR(?date) = 1958)
}
```",5,10,6,3,2,3,3,71,0,0,167,0,0.0,0
547,68,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v5 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildrenRestingPlace ?actorRestingPlace ?awardeeRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  ?william a dbo:Person ;
           foaf:name ""William Haliburton"" .
  ?child1 dbo:childOf ?william .
  ?grandchild dbo:childOf ?child1 .
  ?grandchild dbo:restingPlace ?grandchildrenRestingPlace .

  # Resting place of the actor of the show with Emily Richard
  ?show dbo:actor ?actor ;
        dbo:starring dbr:Emily_Richard .
  ?actor a dbo:Person ;
         dbo:restingPlace ?actorRestingPlace .

  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?awardee a dbo:Person ;
           dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  ?awardee dbo:restingPlace ?awardeeRestingPlace .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
659,62,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of Napoleonic Wars and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?unit a dbo:MilitaryUnit ;
        rdfs:label ""Polish Horse""@en .
  
  ?war a dbo:MilitaryConflict ;
       rdfs:label ""Napoleonic Wars""@en .

  ?unit dbo:participatedIn ?war .

  ?commander dbo:commanderOf ?unit .

  ?officeHolder a dbo:OfficeHolder ;
                dbo:nativeOfCountry dbr:Kingdom_of_Ireland .
  
  ?commander dbo:servedUnder ?officeHolder .
}
```",7,12,8,3,3,3,3,71,0,0,13,0,0.0,0
54,60,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:father dbr:Thinkhaya_of_Pagan .
  
  # Father of Thinkhaya's child (i.e., Thinkhaya himself)
  ?father dbo:child ?thinkhayaChild .
  
  # Predecessor of the child in office or title
  ?predecessor dbo:successor ?thinkhayaChild .
  
  # Child of predecessor that is an office holder and royalty
  ?child dbo:parent ?predecessor ;
         a dbo:Monarch, dbo:OfficeHolder .

  # Reference to Thihapate of Mohnyin
  ?thihapate dbr:Thihapate_of_Mohnyin .
  
  # Ensure the child is related to Thihapate in some way (e.g., through office or lineage)
  OPTIONAL { ?child dbo:predecessor ?thihapate }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
427,64,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to the name of the party of Michele Pinto and party of Giulio Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?romanoParty ?micheleParty ?giulioParty WHERE {
  # Romano Prodi's birth name and party affiliation
  dbr:Romano_Prodi a dbo:Person .
  OPTIONAL { dbr:Romano_Prodi dbo:birthName ?birthName . }
  OPTIONAL { dbr:Romano_Prodi dbo:partyAffiliation ?romanoParty . }

  # Michele Pinto's party affiliation
  dbr:Michele_Pinto a dbo:Person .
  OPTIONAL { dbr:Michele_Pinto dbo:partyAffiliation ?micheleParty . }

  # Giulio Andreotti's party affiliation
  dbr:Giulio_Andreotti a dbo:Person .
  OPTIONAL { dbr:Giulio_Andreotti dbo:partyAffiliation ?giulioParty . }
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
9,47,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Find the mayor of Northern Ireland Forum and their alma mater
  ?mayor a dbo:Person ;
         dbo:positionHeld dbr:Northern_Ireland_Forum_Mayor ;
         dbo:almaMater ?almaMater .

  UNION

  # Find awardees of Royal Medals and their alma maters
  ?awardee a dbo:Person ;
           dbo:award dbr:Royal_Medals ;
           dbo:almaMater ?almaMater .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
184,63,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the grandchild of Archduke Joseph Karl of Austria
  ?grandchild dbo:parent ?child .
  ?child dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .

  # This person must be a parent of someone native to a landmark settlement at elevation 96.0 meters
  ?nativePlace a dbo:Settlement ;
               dbo:elevation ""96.0""^^xsd:float .
  ?person dbo:nativePlace ?nativePlace .
  
  # This person is also a parent of the child of Archduke Joseph Francis of Austria
  ?childOfJosephFrancis dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  ?person dbo:child ?childOfJosephFrancis .

  # Ensure all conditions are met for the same person
  FILTER (?grandchild = ?person)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
994,65,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalAssociatedArtist WHERE {
  # Fredrik Thordendal's band
  dbr:Fredrik_Thordendal dbo:bandMember ?meshuggah .
  
  # Don Dokken's associated musical artist (Dokken)
  dbr:Don_Dokken dbo:associatedMusicalArtist ?dokkenBand .
  
  # Watchtower's associated musical artist
  dbr:Watchtower dbo:associatedMusicalArtist ?watchtowerInfluencedBand .
  
  # Find a band member of Dokken who is also part of another band (organization)
  ?dokkenMember dbo:bandMember ?dokkenBand ;
                dbo:bandMember ?otherBand .
  
  # Ensure the other band is an organization
  ?otherBand a dbo:Organization .
  
  # Find the associated musical artist of this band member
  ?otherBand dbo:associatedMusicalArtist ?finalAssociatedArtist .
  
  # Ensure the final associated artist is linked to Meshuggah
  ?finalAssociatedArtist dbo:bandMember ?meshuggah .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
492,48,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find the person who is the author of ""French Algeria""
  ?author a dbo:Person ;
          dbo:work ?work .
  ?work rdfs:label ""French Algeria""@en .

  # Find people who died at the work location of this author
  OPTIONAL { 
    ?person a dbo:Person ;
            dbo:deathPlace ?place1 .
    ?place1 rdfs:label ?locationLabel1 .
    FILTER (CONTAINS(LCASE(?locationLabel1), LCASE(STR(?work))))
  }

  # Find people who died in Algiers, the capital of Algeria
  OPTIONAL {
    ?person a dbo:Person ;
            dbo:deathPlace ?place2 .
    ?place2 rdfs:label ""Algiers""@en .
  }
  
  FILTER (BOUND(?place1) || BOUND(?place2))
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
617,51,test,Give me the parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find commander in Battle of Panium
  ?commander a dbo:Person ;
             dbo:participatedInBattle dbr:Battle_of_Panium .
  
  # Find child of the commander
  ?child dbo:childOf ?commander .

  # Find parent of this child (which is the commander)
  ?parent dbo:spouse ?child .

  # Find children of Antiochus III the Great
  ?antiochusChild dbo:childOf dbr:Antiochus_III_the_Great .
  
  # Ensure the spouse of the child of Antiochus III is the same as the parent found above
  FILTER (?parent = ?spouse)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,61,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find an actor of ""Unnatural (TV series)""
  ?actor a dbo:Person ;
         dbo:actor ?unnaturalSeries .
  
  # Ensure the series is ""Unnatural""
  FILTER(STR(?unnaturalSeries) = STR(dbr:Unnatural_(TV_series)))

  # Get the profession of this actor
  ?actor dbo:profession ?professional .

  # Find an alumnus of Ohio State University
  ?alumnus a dbo:Person ;
           dbo:alumnusOf dbr:Ohio_State_University ;
           dbo:birthName ?birthName .

  # Find a person with the same birth name as the alumnus
  ?person a dbo:Person ;
          dbo:birthName ?birthName .
}
```",6,6,7,3,2,3,3,71,0,0,3,0,0.0,0
378,36,test,"Give me the war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commanderClaimToFame WHERE {
  # Find wars Carl Pontus Gahn participated in
  ?person1 a dbo:Person ;
           rdfs:label ""Carl Pontus Gahn""@en .
  ?person1 dbo:participatedIn ?war .

  # Find Thomas Trigge's role as commander and societal event
  ?person2 a dbo:Person ;
           rdfs:label ""Thomas Trigge""@en .
  ?person2 dbo:commanderOf ?war .
  ?war a dbo:MilitaryConflict ;
       dbo:societalEvent ?event .

  # Get the claim to fame of Thomas Trigge
  OPTIONAL { ?person2 dbo:claimToFame ?commanderClaimToFame }
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
801,68,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Step 1: Identify the writer of ""40 Dayz & 40 Nightz""
  ?writer a dbo:Writer .
  ?writer dbo:work dbr:40_Dayz_&_40_Nightz .

  # Step 2: Find if this writer is also a musical artist and an artist
  ?writer a dbo:MusicalArtist .
  
  # Step 3: Identify the producer of ""40 Dayz & 40 Nightz""
  ?producer dbo:producerOf dbr:40_Dayz_&_40_Nightz .

  # Step 4: Check if this producer is a professional musical artist
  ?producer a dbo:MusicalArtist .
  
  # Step 5: Find the alter ego known as The Shadow
  ?producer dbo:alterEgo dbr:The_Shadow .

  # Link back to find the associated musical artist
  ?associatedArtist a dbo:Person ;
                   dbo:work dbr:40_Dayz_&_40_Nightz .
}
```",8,14,9,3,3,3,3,71,0,0,8,0,0.0,0
547,52,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace WHERE {
  # Query for William Haliburton's great-grandchild
  {
    ?greatGrandChild a dbo:Person .
    ?grandChild a dbo:Person ;
                dbo:parent ?greatGrandParent .
    ?child a dbo:Person ;
           dbo:parent ?grandChild .
    ?greatGrandParent a dbo:Person ;
                      dbo:parent ?greatGrandGreatParent .
    ?greatGrandGreatParent dbr:William_Haliburton .
    
    OPTIONAL { ?greatGrandChild dbo:deathPlace ?restingPlace }
  }

  UNION

  # Query for Alan Cunningham
  {
    dbr:Alan_Cunningham a dbo:Person ;
                       dbo:deathPlace ?restingPlace .
  }

  UNION

  # Query for the actor of ""Enemy at the Door""
  {
    ?film dbr:Enemy_at_the_Door ;
          dbo:starring ?actor .
    OPTIONAL { ?actor dbo:deathPlace ?restingPlace }
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
528,35,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate ?battle ?force WHERE {
  # Find Narciso Campero Leyes
  ?person a dbo:Person ;
          rdfs:label ""Narciso Campero Leyes""@en .
  
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  
  # Find Battle of Pisagua and involved forces
  ?battle a dbo:MilitaryConflict ;
          rdfs:label ""Battle of Pisagua""@en .
  
  OPTIONAL {
    ?participation dbo:conflict ?battle ;
                   dbo:agent ?force .
  }
}
```",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
92,70,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v7 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Joseph Michael"" .
  ?person dbo:bandMember ?band .
  FILTER EXISTS { ?band rdfs:label ""Nevermore""@en }
  
  OPTIONAL {
    ?associatedArtist dbo:musicalArtist ?person .
  }

  OPTIONAL {
    ?actor dbo:actor ?film .
    ?film rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
    FILTER (?actor = ?person)
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,62,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find parent of Archduchess Ilona of Austria
SELECT ?parentIlona WHERE {
  ?ilona a dbo:Person ;
         rdfs:label ""Archduchess Ilona of Austria""@en .
  ?ilona dbo:parent ?parentIlona .
}

# Step 2: Find landmark at elevation 96.0 that is a settlement
SELECT ?landmark ?native WHERE {
  ?landmark a dbo:Place ;
            dbo:elevation ?elevation ;
            dbo:nativeOf ?native .
  FILTER (?elevation = ""96.0""^^xsd:float)
}

# Step 3: Find parent of the native from step 2
SELECT ?parentNative WHERE {
  ?native a dbo:Person ;
          dbo:parent ?parentNative .
}

# Step 4: Find royalty parent of Archduke Ladislaus Philipp of Austria and their grandchild
SELECT ?grandchild WHERE {
  ?ladislaus a dbo:Person ;
             rdfs:label ""Archduke Ladislaus Philipp of Austria""@en .
  ?royaltyParent a dbo:Royalty ;
                 dbo:parent ?ladislaus .
  ?childOfRoyalty a dbo:Person ;
                  dbo:parent ?royaltyParent .
  ?grandchild a dbo:Person ;
              dbo:parent ?childOfRoyalty .
}

# Combine results to find the common parent
SELECT DISTINCT ?commonParent WHERE {
  VALUES (?ilonaParent ?nativeParent ?grandchild) {
    (VALUES ?ilonaParent { ?parentIlona } )
    (VALUES ?nativeParent { ?parentNative } )
    (VALUES ?grandchild { ?grandchild } )
  }
  OPTIONAL { ?ilonaParent dbo:parent ?commonParent . }
  OPTIONAL { ?nativeParent dbo:parent ?commonParent . }
  OPTIONAL { ?grandchild dbo:parent ?commonParent . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
303,22,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?country WHERE {
  # Find George H.W. Bush's political party
  ?person a dbo:Person ;
          rdfs:label ""George H. W. Bush""@en .
  OPTIONAL { ?person dbo:partyAffiliation ?party . }
  
  # Ensure the person is associated with the United States invasion of Panama
  ?event dbo:commander ?person ;
         rdfs:label ""United States invasion of Panama""@en .

  # Find the country entity for El Valle de Antón
  ?location a dbo:PopulatedPlace ;
            rdfs:label ""El Valle de Antón""@en .
  ?location dbo:country ?country .
  
  FILTER (?country = dbr:Panama)
}
```",4,6,5,2,2,2,3,28,0,1,2,0.0,0.0,0
547,44,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorRestingPlace ?burtonRestingPlace ?knightRestingPlace WHERE {
  # Actor of ""Enemy at the Door""
  ?film a dbo:Film ;
        dbo:title ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:restingPlace ?actorRestingPlace .

  # James Burton (Egyptologist)
  ?burton a dbo:Egyptologist ;
          foaf:name ""James Burton"" .
  ?burton dbo:restingPlace ?burtonRestingPlace .

  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  ?knight a dbo:Person ;
          dbo:honoursReceived dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  ?knight dbo:restingPlace ?knightRestingPlace .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
492,26,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?conflict WHERE {
  # Find the commander of the Battle of Verdun
  dbr:Battle_of_Verdun dbo:commander ?commander .

  # Identify other military conflicts or events this commander was involved in
  ?conflict rdf:type dbo:MilitaryConflict ;
           rdf:type dbo:Event .
  ?conflict dbo:participatedIn ?commander .
}
```",3,5,4,3,1,3,3,71,0,0,92,0,0.0,0
339,17,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Identify Princess Olga and her parent (likely her father)
  dbr:Princess_Olga_of_Greece_and_Denmark dbo:child ?olga .
  ?parent dbo:child ?olga .

  # Step 2: Find children of this parent
  ?parent dbo:child ?child .

  # Step 3: Identify George I's children
  dbr:George_I_of_Greece dbo:child ?georgeChild .

  # Step 4: Find the overlap (Princess Olga)
  FILTER (?child = ?olga && ?child = ?georgeChild)

  # Step 5: Determine her father
  ?parent a dbo:Person .
  ?parent rdfs:label ?fatherLabel .
  FILTER(CONTAINS(LCASE(?fatherLabel), ""constantine i of greece""))
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
959,21,test,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?almaMater WHERE {
  # Find Eiji Ōtsuka's role as manager of Júbilo Iwata in 2013
  ?manager a dbo:Person ;
           foaf:name ""Eiji Ōtsuka""@en ;
           dbo:position ""Manager""@en ;
           dbo:team dbr:Júbilo_Iwata ;
           dbo:season ""2013""@en .

  # Find Eiji Ōtsuka's alma mater
  ?manager dbo:almaMater ?almaMater .
  
  # Ensure the alma mater is a Japanese university and educational institution
  ?almaMater a dbo:University ;
             dbo:country dbr:Japan ;
             a dbo:EducationalInstitution .
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
427,71,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the father's party of an MIT alumnus
SELECT DISTINCT ?fatherParty WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .
}

# Query for Michele Pinto's party
UNION

SELECT DISTINCT ?michelePintoParty WHERE {
  dbr:Michele_Pinto dbo:partyAffiliation ?michelePintoParty .
}

# Query for Romano Prodi's birth name and party
UNION

SELECT DISTINCT ?prodiBirthName, ?prodiParty WHERE {
  ?prodi a dbo:Politician ;
         foaf:name ""Romano Prodi""@en ;
         dbo:birthName ?prodiBirthName ;
         dbo:partyAffiliation ?prodiParty .
}
```",9,11,10,3,3,3,3,71,0,0,2,0,0.0,0
281,55,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?heatherMilitaryUnit ?knightGrandCrossPerson ?entityInBirthPlace 
WHERE {
  # Heather Roy's military unit
  dbr:Heather_Roy a dbo:Person .
  dbr:Heather_Roy dbo:militaryUnit ?heatherMilitaryUnit .

  # Knight Grand Cross of the Order of the Bath awardees
  ?knightGrandCrossPerson a dbo:Person ;
                         dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  
  # Bob Heffron's birthplace country and related entities
  dbr:Bob_Heffron a dbo:Person ;
                  dbo:birthPlace ?birthPlaceCountry .
  ?entityInBirthPlace dbo:country ?birthPlaceCountry .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
16,46,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  dbr:Satomi_Ishihara a ?profession .

  # Find Ted McGinley's birth name and spouse
  ?ted a dbo:Person ;
      foaf:name ""Ted McGinley"" ;
      dbo:birthName ?birthName .
  
  OPTIONAL { ?ted dbo:spouse ?spouse . }

  FILTER (?birthName = ""Thomas Edward McGinley"")

  # Check if the professional is also Ted McGinley's spouse
  ?professional a ?profession ;
                foaf:name ?name .

  FILTER EXISTS {
    ?ted dbo:spouse ?professional .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
959,50,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Step 1: Find Takashi Sekizuka's team
  ?team dbo:manager ?manager .
  
  # Assuming there is a resource for Takashi Sekizuka, we link him to his team
  ?takashi dbr:Takashi_Sekizuka .
  ?takashi dbo:memberOfTeam ?team .

  # Step 2: Find the leader of the 2010 Japanese House of Councillors election
  ?electionLeader a dbo:Person ;
                  dbo:officeHolder dbr:2010_Japanese_House_of_Councillors_election .
  
  # Step 3: Determine the residence country of this leader
  ?electionLeader dbo:nationality ?country .

  # Step 4: Find if the manager's native country matches the leader's residence country
  ?manager dbo:nationality ?country .
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
161,65,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?emilioMolaCommander ?francoMilitaryForce ?prietoPredecessorMilitaryForce WHERE {
  # Emilio Mola's commander in a force
  ?event1 dbo:militaryConflict ?conflict .
  ?event1 dbo:societalEvent ?societalEvent .
  ?mola dbr:Emilio_Mola .
  ?mola dbo:commander ?emilioMolaCommander .
  ?mola dbo:militaryForce ?force1 .
  ?force1 dbo:event ?event1 .

  # Francisco Franco's military force
  ?franco dbr:Franco_Francisco .
  ?franco dbo:militaryForce ?francoMilitaryForce .
  ?event2 dbo:militaryConflict ?conflict .
  ?event2 dbo:societalEvent ?societalEvent .
  ?francoMilitaryForce dbo:event ?event2 .

  # Indalecio Prieto's predecessor
  ?prieto dbr:Indalecio_Prieto .
  ?predecessor dbo:successor ?prieto .
  ?predecessor dbo:militaryForce ?prietoPredecessorMilitaryForce .
  ?event3 dbo:militaryConflict ?conflict .
  ?event3 dbo:societalEvent ?societalEvent .
  ?prietoPredecessorMilitaryForce dbo:event ?event3
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
492,69,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryConflict WHERE {
  ?herr a dbo:Person ;
        rdfs:label ""Frédéric-Georges Herr""@en .
  
  ?herr dbo:commander ?commander .
  ?commander a dbo:MilitaryConflict .

  ?herr dbo:deathPlace ?deathPlace .

  ?deathPlace rdfs:label ?placeLabel .
  FILTER (
    CONTAINS(LCASE(?placeLabel), ""french algeria"") ||
    CONTAINS(LCASE(?placeLabel), ""khemis miliana district"")
  )
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
54,57,test,"Give me the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan .
  
  # Thado Minsaw's grandparent and their parent (great-grandparent)
  ?thadoParent dbo:child dbr:Thado_Minsaw_of_Prome .
  ?thadoGrandparent dbo:parent ?thadoParent .
  ?thadoGreatGrandparent dbo:parent ?thadoGrandparent .

  # Thihapate of Mohnyin's predecessor and their child
  ?thihapatePredecessor dbo:successor dbr:Thihapate_of_Mohnyin .
  ?predecessorChild dbo:parent ?thihapatePredecessor .
  
  # The person we are looking for
  ?person dbo:child ?thinkhayaChild .
  ?person dbo:parent ?thadoGreatGrandparent .
  ?person dbo:child ?predecessorChild .

  # Ensure the person is an office holder and royalty
  ?person a dbo:OfficeHolder ;
          a dbo:Royalty .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,67,test,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Baden-Württemberg .
  
  OPTIONAL { 
    ?fictionalCharacter dbo:fictionalAlterEgoOf dbr:Matthew_Burland .
    ?entity dbo:relatedFictionalCharacter ?fictionalCharacter .
  }
  
  OPTIONAL {
    ?nash a dbo:Person ;
          foaf:almaMater ?almaMater .
    FILTER (str(?nash) = ""George_Kilbon_Nash"") .
    ?entity dbo:administeredBy ?almaMater .
  }
}
```",7,8,8,3,3,3,3,71,0,201,1,0.0,0.0,0
492,55,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Frédéric-Georges Herr as a commander in a military conflict
  ?conflict a dbo:MilitaryConflict .
  ?conflict dbo:commander ?commander .
  ?commander rdfs:label ""Frédéric-Georges Herr""@en .

  # Joseph C. Satterthwaite's death place (his workplace)
  dbr:Joseph_C._Satterthwaite a dbo:Person ;
    dbo:deathPlace ?workplace .

  # Person who died in the capital of Algeria
  ?person a dbo:Person ;
    dbo:deathPlace dbr:Algiers .
}
```",6,9,7,2,3,3,3,71,0,1,1,0.0,0.0,0
360,24,test,"Give me the reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Find the author of ""Blinded by the Light""
  ?book dbo:title ""Blinded by the Light"" .
  ?book dbo:author ?author .

  # Get the death place of Winnie Madikizela-Mandela
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Check if the author's native place matches the death place
  ?author dbo:nativePlace ?nativePlace .
  FILTER (?nativePlace = ?deathPlace)
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
959,39,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the manager of Kashima Antlers in 1998
  ?team a dbo:SportsTeam ;
        rdfs:label ""Kashima Antlers""@en .
  
  ?season dbo:team ?team ;
          dbo:year ""1998""^^xsd:gYear .

  ?season dbo:manager ?manager .

  # Check if this manager has another manager
  OPTIONAL {
    ?manager dbo:manager ?secondManager .
    
    # Ensure the second manager is a native of Japan
    ?secondManager dbo:nationality dbr:Japan .
  }
  
  FILTER EXISTS { ?manager dbo:manager ?secondManager } .
}
```",4,5,5,3,2,3,3,71,0,0,6,0,0.0,0
339,19,test,Give me the child of the child of Christian IX of Denmark and father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Identify Christian IX of Denmark
  dbr:Christian_IX_of_Denmark a dbo:Person .

  # Step 2: Find his child
  ?childChild dbo:parent dbr:Christian_IX_of_Denmark .
  
  # Step 3: Find the grandchild
  ?grandchild dbo:parent ?childChild .

  # Step 4: Identify Princess Olga of Greece and Denmark
  dbr:Princess_Olga_of_Greece_and_Denmark a dbo:Person .

  # Step 5: Find her parent
  ?olgaParent dbo:child dbr:Princess_Olga_of_Greece_and_Denmark .
  
  # Step 6: Find the child of that parent
  ?matchingChild dbo:parent ?olgaParent .

  # Step 7: Match the grandchild with the child of the parent
  FILTER (?grandchild = ?matchingChild)

  # Step 8: Identify the father of this matching entity
  ?father dbo:spouse ?mother .
  ?father dbo:child ?grandchild .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
55,25,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find band members of the San Francisco Symphony
  ?symphonyBandMember a dbo:Person ;
                     dbo:performerIn dbr:San_Francisco_Symphony .

  # Find band members associated with Newsted (Jason Newsted)
  ?newstedBandMember a dbo:Person ;
                    dbo:bandMember dbr:Metallica ; # Assuming Metallica for Jason Newsted
                    rdfs:label ?personLabel .

  # Find producers of ""Used to Love Her"" and their bands
  ?producer a dbo:Person ;
            dbo:produced dbr:Used_to_Love_Her .
  ?producerBandMember a dbo:Person ;
                      dbo:bandMember ?producerBand ;
                      rdfs:label ?personLabel .

  # Ensure the same person is found in all conditions
  FILTER (?symphonyBandMember = ?newstedBandMember && ?newstedBandMember = ?producerBandMember)
  
  BIND(?newstedBandMember AS ?bandMember)
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
547,58,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorRestingPlace ?jamesBurtonRestingPlace ?awardeeRestingPlace WHERE {
  # Actor of ""Enemy at the Door""
  ?film a dbo:Film ;
        dbo:title ""Enemy at the Door""@en .
  ?actor dbo:actedIn ?film ;
         a dbo:Person .
  OPTIONAL { ?actor dbo:deathPlace ?actorRestingPlace . }

  # James Burton (Egyptologist)
  ?jamesBurton a dbo:Person ;
               foaf:name ""James Burton"" ;
               dbo:occupation dbr:Egyptology .
  OPTIONAL { ?jamesBurton dbo:deathPlace ?jamesBurtonRestingPlace . }

  # Awardee of Gerald Graham's Award
  ?awardee a dbo:Person ;
           dbo:awardReceived ?award .
  ?award dbo:recipient ?awardee ;
         dbo:givenBy dbr:Gerald_Graham .
  OPTIONAL { ?awardee dbo:deathPlace ?awardeeRestingPlace . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,59,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace WHERE {
  # Saitō Hajime's birth place
  dbr:Saitō_Hajime a dbo:Person ;
                   dbo:birthPlace ?birthPlace .

  # The war in which he was a commander
  ?war a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .
  ?war dbo:commander dbr:Saitō_Hajime .

  # Matsudaira Tadamasa's father
  dbr:Matsudaira_Tadamasa dbo:father ?father .
  ?father a dbo:Person ;
          a dbo:Politician, dbo:OfficeHolder ;
          dbo:deathPlace ?deathPlace .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
528,48,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?militaryForce ?event WHERE {
  ?person rdfs:label ""Narciso Campero Leyes""@en .
  OPTIONAL { ?person dbo:militaryForce ?militaryForce . }
  
  OPTIONAL {
    ?militaryForce dbo:participatedIn ?event .
    ?event dbo:location dbr:Chile .
    ?event a dbo:SocietalEvent .
  }

  FILTER (LANG(?person) = ""en"")
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
488,51,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceOfPoliticianFather ?administrationOfSpouseFather WHERE {
  # Part 1: Yūki Hideyasu's father who is a politician
  ?yukiHideyasu dbo:father ?politicianFather .
  ?politicianFather a dbo:Person ;
                   rdf:type dbo:Politician ;
                   dbo:deathPlace ?deathPlaceOfPoliticianFather .

  # Part 2: Tokugawa Masako's spouse and their father in administration
  ?tokugawaMasako dbo:spouse ?spouse .
  ?spouse dbo:father ?administrationFather .
  ?administrationFather a dbo:Person ;
                       rdf:type dbo:Royalty ;
                       dbo:occupation ?adminRole .
  FILTER (CONTAINS(LCASE(str(?adminRole)), ""administration""))
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,57,test,"Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiParty ?fatherParty WHERE {
  # Find Romano Prodi's political party
  dbr:Romano_Prodi a dbo:Person ;
                  dbo:party ?prodiParty .

  # Find Romano Prodi's father and his political party
  OPTIONAL {
    dbr:Romano_Prodi dbo:parent ?father .
    ?father a dbo:Person ;
            dbo:party ?fatherParty .
  }

  # Check if Romano Prodi is an alumnus of MIT or has any connection to MIT alumni
  OPTIONAL {
    dbr:Romano_Prodi dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  }
}
```",6,8,7,3,3,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
498,8,test,"Give me the band of the member, that is an artist, of Mortician (band) and band of Malevolent Creation.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find members of Mortician
  ?member dbo:member dbr:Mortician .
  
  # Check if the member is also an artist in Malevolent Creation
  ?member dbo:artist dbr:Malevolent_Creation .

  # Identify the band(s) this member belongs to
  ?band dbo:member ?member .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
485,23,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?birthRegion WHERE {
  # Find the country in the Western European Time zone
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Western European Time""@en .
  
  ?region dbo:timeZone ?timeZone ;
          a dbo:AdministrativeRegion .

  ?country dbo:administrativeRegion ?region ;
           a dbo:Country .

  # Find the birthplace region of Joseph Whitaker
  dbr:Joseph_Whitaker (dbo:birthPlace) ?birthPlace .
  
  ?birthPlace a dbo:AdministrativeRegion ;
              rdfs:label ?birthRegionLabel .

  FILTER(CONTAINS(LCASE(?birthRegionLabel), LCASE(?birthRegion)))

  # Return the country and birthplace region
  BIND(?country AS ?entityInWET)
}
```",4,6,5,2,2,2,3,28,0,0,357,0,0.0,0
547,30,test,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?restingPlace WHERE {
  # James Burton (Egyptologist)
  { 
    ?person a dbo:Person ;
            rdfs:label ""James Burton (Egyptologist)""@en .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
    BIND(""James Burton (Egyptologist)"" AS ?name)
  } UNION
  # Simon Cadell
  {
    ?person a dbo:Person ;
            rdfs:label ""Simon Cadell""@en .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
    BIND(""Simon Cadell"" AS ?name)
  } UNION
  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person a dbo:Person ;
            dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
    BIND(""Awardee of Knight Grand Cross of the Order of St Michael and St George"" AS ?name)
  }
}
```",4,4,5,2,3,3,3,71,0,4,1,0.0,0.0,0
492,40,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Condition for being an author of French Algeria
  ?authorship dbo:subject dbr:French_Algeria .
  ?authorship dbo:agent ?person .

  # Condition for decedent at Algiers
  ?person dbo:deathPlace dbr:Algiers .

  # Condition for commander in Franco-Hova Wars
  ?commanderRole dbo:roleName ""Commander"" ;
                 dbo:relatedEvent dbr:Franco_Hova_Wars .
  ?commanderRole dbo:agent ?person .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
54,66,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child a dbo:Person ;
         dbo:royalty true ;
         dbo:officeHolder true ;
         dbo:parent dbr:Thihapate_of_Mohnyin .

  # Narapati I of Ava's child
  ?narapatiChild dbo:parent dbr:Narapati_I_of_Ava .

  # Soe Min Wimala Dewi's father and his child
  ?soeMinParent dbo:child dbr:Soe_Min_Wimala_Dewi .
  ?soeMinChild dbo:parent ?soeMinParent .

  # Find the predecessor of Thihapate's child
  ?predecessor dbo:successor ?child .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
92,50,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?furneyArtist ?actorBand WHERE {
  # Find Joseph Michael Furney's associated musical artist
  ?furney a dbo:Person ;
          foaf:name ""Joseph Michael Furney"" .
  OPTIONAL { 
    ?furney dbo:associatedBand ?furneyArtist .
  }

  # Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?film dbr:Return_to_Nuke_'Em_High_Volume_1 ;
        dbo:castMember ?actor .

  # Find the band associated with that actor
  OPTIONAL {
    ?actor dbo:associatedBand ?actorBand .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
54,27,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .

  # Step 2: Find the child of Thihapate
  ?child dbo:parent ?thihapate .

  # Step 3: Check if the child is an office holder and royalty
  ?child a dbo:OfficeHolder, dbo:Royalty .

  # Step 4: Find the predecessor of this child in their role
  ?officeHolderRole a dbo:Position ;
                   dbo:incumbent ?child .
  ?predecessor dbo:positionHeld ?officeHolderRole ;
               dbo:predecessor ?child .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
314,25,test,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/restingPlace> ?v3 . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Condition 1: Awardee of an award received by Sergei Makovetsky
  ?award a dbo:Award .
  ?sergeiMakovetsky dbo:award ?award ;
                   a dbo:Person .
  FILTER (str(?sergeiMakovetsky) = ""Sergei_Makovetsky"") .

  # Condition 2: Commander in the Spanish Civil War
  ?person dbo:militaryCommanderOf dbr:Spanish_Civil_War ;
          a dbo:Person .

  # Condition 3: Deceased at the headquarters of House of Sombrerete
  ?person dbo:deathPlace dbr:Headquarters_of_House_of_Sombrerete .

  # Linking conditions together
  ?person dbo:award ?award .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
767,60,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInAdministration WHERE {
  # Find the writer of ""Where It's At"" album
  ?album dbo:artist ?writer .
  FILTER (str(?album) = ""Where_It's_At_(Dustin_Lynch_album)"")

  # Find the alter ego of Matthew Burland
  ?fictionalCharacter dbo:alterEgoOf ?matthewBurland .
  FILTER (str(?matthewBurland) = ""Matthew_Burland"")

  # Link to a settlement in administration
  ?entityInAdministration dbo:settlement ?settlement .
  ?writer dbo:residence ?settlement .
  ?fictionalCharacter dbo:associatedWith ?settlement .

}
```",6,8,7,3,2,3,3,71,0,0,8,0,0.0,0
547,59,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the resting place of the child of the child of William Haliburton
SELECT DISTINCT ?grandchildRestingPlace WHERE {
  # Find William Haliburton's children
  ?child a dbo:Person ;
         dbo:parent dbr:William_Haliburton .
  
  # For each child, find their children (grandchildren)
  ?grandchild a dbo:Person ;
              dbo:parent ?child .

  # Get the resting place of these grandchildren
  OPTIONAL { ?grandchild dbo:finalRestingPlace ?grandchildRestingPlace }
}

UNION

# Query for the resting place of actors in shows with Emily Richard
SELECT DISTINCT ?actorRestingPlace WHERE {
  # Find shows associated with Emily Richard
  ?show dbo:actor dbr:Emily_Richard .
  
  # For each show, find other actors involved
  ?actor a dbo:Person ;
         dbo:actorIn ?show .

  # Get the resting place of these actors
  OPTIONAL { ?actor dbo:finalRestingPlace ?actorRestingPlace }
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
251,27,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of Battle of Marengo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorDeathPlace ?rulingPartyLocation ?battleLocation WHERE {
  # Find the author of ""The Twelve Abbots of Challant""
  ?book dbo:title ""The Twelve Abbots of Challant""@en .
  ?book dbo:author ?author .

  # Get the death place of the author
  ?author dbo:deathPlace ?authorDeathPlace .

  # Identify the ruling party in Sicily
  ?party a dbo:PoliticalParty ;
         dbo:administrativeArea dbr:Sicily ;
         dbo:location ?rulingPartyLocation .

  # Find the location of the Battle of Marengo
  ?battle dbo:title ""Battle of Marengo""@en .
  ?battle dbo:location ?battleLocation .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
747,20,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band WHERE {
  # Part 1: Find person born on 1985-04-29
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)

  OPTIONAL {
    # Part 2: Find the band of the writer of ""Apollo"" by Hardwell
    dbr:Apollo_(Hardwell_song) dbo:lyricsBy ?writer .
    ?writer dbo:band ?band .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
712,17,test,Give me the capital of South Russia (1919–1920) and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?restingPlace WHERE {
  # Find the capital of South Russia (1919–1920)
  OPTIONAL {
    ?southRussia dbo:capital ?capital .
    FILTER (?southRussia rdfs:label = ""South Russia""@en && 
            EXISTS { ?southRussia dbo:timePeriod ?period . 
                     FILTER (?period >= ""1919-01-01""^^xsd:date && ?period <= ""1920-12-31""^^xsd:date) } )
  }

  # Find the resting place of Yuri Gagarin
  OPTIONAL {
    dbr:Yuri_Gagarin dbo:finalRestingPlace ?restingPlace .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
16,56,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?alumnus a dbo:Person ;
           dbo:almaMater dbr:Ohio_State_University .
  
  ?otherPerson a dbo:Person ;
               dbo:birthName ?birthName .

  ?alumnus dbo:birthName ?birthName .

  ?spouse a dbo:Person ;
          dbo:birthDate ?date ;
          rdfs:label ""Ted Martin McGinley""@en .
          
  ?spouse dbo:profession dbr:Actress .

  ?alumnus dbo:spouse ?spouse .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
959,54,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  # Find Eiji Ōtsuka's alma mater
  ?eiji a dbo:Person ;
        foaf:name ""Eiji Ōtsuka"" ;
        dbo:almaMater ?university .

  # Ensure the university is Japanese and an educational institution
  ?university a dbo:University ;
              dbo:nationality dbr:Japan ;
              rdf:type dbo:EducationalOrganization .

  # Find the leader of the 2010 Japanese House of Councillors election
  ?politician a dbo:Person ;
             foaf:name ?leaderName ;
             dbo:residence ?country .
  
  # Ensure the politician is associated with Japan
  ?country rdfs:label ""Japan""@en .

  # Find the manager of the 2013 Júbilo Iwata season
  ?manager a dbo:Person ;
           foaf:name ?managerName ;
           dbo:managerOf dbr:Júbilo_Iwata_2013_season .

  # Connect the university to both Eiji Ōtsuka and the politician through their country of residence
  ?university dbo:almaMater ?politician .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
801,47,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer WHERE {
  ?work a dbo:Songs .
  ?work dbo:producer ?producer .
  ?producer a dbo:MusicalArtist .
  ?producer rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), ""the shadow""))
}
```",5,9,6,3,2,3,3,71,0,0,473,0,0.0,0
488,70,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?birthPlace ?deathPlace WHERE {
  # Tokugawa Masako's spouse and their father (royalty)
  ?spouse a dbo:Person ;
          dbo:spouse dbr:Tokugawa_Masako .
  ?fatherOfSpouse dbo:child ?spouse ;
                  a dbo:Royalty .
  
  # Administration of the father of the spouse
  ?administration dbo:head ?fatherOfSpouse .

  # Commander in Boshin War and their birthplace
  ?commander dbo:birthPlace ?birthPlace ;
            dbo:occupation dbr:Boshin_War_commander .

  # Matsudaira Tadamasa's father (office holder) and his death place
  ?matsudairaFather a dbo:Person, dbo:Politician ;
                   dbo:child dbr:Matsudaira_Tadamasa .
  ?grandfatherOfMatsudaira a dbo:Person ;
                          dbo:child ?matsudairaFather .
  ?grandfatherOfMatsudaira dbo:deathPlace ?deathPlace .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
285,16,test,Give me the parent of the child of Tina Onassis Niarchos and spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?spouse WHERE {
  # Find Tina Onassis Niarchos
  ?tina a dbo:Person ;
        foaf:name ""Tina Onassis Niarchos""@en .
  
  # Identify her child
  ?child dbo:parent ?tina ;
         a dbo:Person .

  # Determine the other parent of that child
  ?child dbo:parent ?otherParent .
  FILTER (?otherParent != ?tina)

  # Find the spouse of the other parent (assuming they are a professional)
  OPTIONAL {
    ?otherParent dbo:spouse ?spouse .
  }

  BIND(?otherParent AS ?parentOfChild)
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
659,70,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck's military force
  ?schimmelpenninck a dbo:Person ;
                   foaf:name ""Rutger Jan Schimmelpenninck""@en .
  
  ?force1 a dbo:MilitaryConflict ;
          dbo:commanderOf ?schimmelpenninck ;
          rdf:type dbo:SocietalEvent, dbo:Event .

  # Arthur Wellesley's military force
  ?wellesley a dbo:Person ;
             foaf:name ""Arthur Wellesley""@en .
  
  ?force2 a dbo:MilitaryConflict ;
          dbo:commanderOf ?wellesley ;
          rdf:type dbo:Event .

  # Polish Horse as a military unit and organization
  ?polishHorse a dbo:MilitaryUnit, dbo:Organisation ;
               foaf:name ""Polish Horse""@en .
  
  # Linking the forces to the Polish Horse
  ?force1 dbo:militaryForce ?militaryForce .
  ?force2 dbo:militaryForce ?militaryForce .
  ?polishHorse dbo:partOf ?militaryForce .
}
```",8,15,9,3,3,3,3,71,0,0,15,0,0.0,0
328,59,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?person dbo:deathPlace dbr:Budapest .
  ?commander dbo:militaryCommander ?person .
  ?award dbo:recipient ?commander ;
         dbo:campaign [dbo:name ""Volcano and Ryukyu Islands campaign""] .
}
```",6,6,7,3,2,3,3,71,0,0,15,0,0.0,0
54,64,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan's child (Thinkhaya himself)
  dbr:Thinkhaya_of_Pagan dbo:child ?thinkhayasChild .
  
  # Father of the child is Thinkhaya
  ?thinkhayasChild dbo:parent dbr:Thinkhaya_of_Pagan .

  # Predecessor of the child (Thinkhaya's predecessor)
  ?predecessor dbo:successor dbr:Thinkhaya_of_Pagan .
  
  # Thihapate of Mohnyin and parent of Thado Minsaw
  dbr:Thihapate_of_Mohnyin dbo:parent ?thadoMinsawParent .

  # Thado Minsaw of Prome
  ?thadoMinsawParent dbo:child dbr:Thado_Minsaw_of_Prome .
  
  # The person we are looking for is an office holder and royalty
  ?person a dbo:Monarch ;
          dbo:officeHolder true ;
          dbo:predecessor ?predecessor ;
          dbo:parent ?thadoMinsawParent .

}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
232,61,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?person a dbo:Person .
  ?person dbo:actorOf ?film .
  ?film a dbo:Film .
  
  ?person dbo:narratorOf ?narration .
  ?narration a dbo:Narration .

  ?person dbo:producerOf ?production .
  ?production a dbo:Production .

  ?person dbo:claimToFame ?militaryConflict .
  ?militaryConflict a dbo:MilitaryConflict .

  ?person dbo:nationality dbr:France .
  ?person dbo:officeHolder true .

  ?person dbo:residence ?residence .
  ?residence dbo:settlement true .
  ?residence dbo:country dbr:United_Kingdom .

  ?residence dbo:nativeOf ?nativePlace .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
184,45,test,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parentGéza ?siblingMargaret ?childJoseph WHERE {
  # Géza von Habsburg's parent
  dbr:Géza_von_Habsburg dbo:parent ?parentGéza .

  # Archduchess Margaret of Austria's sibling(s)
  ?parentMargaret dbo:child ?margaret .
  ?parentMargaret dbo:child ?siblingMargaret .
  FILTER (?margaret != ?siblingMargaret)
  dbr:Margaret_of_Austria_(1925) dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1925)

  # Archduke Joseph August of Austria's child
  dbr:Joseph_August_of_Austria dbo:child ?childJoseph .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
747,58,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song) and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Find the person born on 1985-04-29
SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
}

# Find the band of the writer of ""Apollo"" by Hardwell
SELECT ?band WHERE {
  dbr:Apollo_(Hardwell_song) dbo:lyricsBy ?writer .
  ?writer dbo:band ?band .
}

# Find the person known as Shèna and their associated band
SELECT ?realPerson ?band WHERE {
  ?realPerson rdfs:label ""Shèna""@en ;
              a dbo:Person .
  OPTIONAL { ?realPerson dbo:band ?band . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,60,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Saitō Hajime's birth place
  dbr:Saitō_Hajime a dbo:Person ;
                   dbo:birthPlace ?birthPlace .

  # War commanded by Saitō Hajime
  ?war dbo:commander dbr:Saitō_Hajime ;
       a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .

  # Tokugawa Masako's spouse and their father
  dbr:Tokugawa_Masako dbo:spouse ?spouse .
  ?spouse dbo:father ?royalFather .

  # Royal status of the spouse's father
  ?royalFather a dbo:Royalty .

  # Administration related to the royal father
  ?administration dbo:administrator ?royalFather ;
                  dbo:place ?birthPlace .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
54,24,test,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Narapati I of Ava's child
  ?child dbo:parent dbr:Narapati_I_of_Ava .
  
  # Parent of Narapati I's child (likely Narapati I himself or another family member)
  ?person dbo:child ?child .

  # Ameitta Thiri Maha Dhamma Dewi of Ava and her predecessor
  ?ameitta dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .
  ?predecessor dbo:successor ?ameitta .

  # The person we are looking for is both the parent of Narapati I's child and Ameitta's predecessor
  FILTER (?person = ?predecessor)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
328,56,test,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in Eastern Front (World War II)
  ?person dbo:militaryCommander ?commandRole .
  ?commandRole dbo:location dbr:Eastern_Front_(World_War_II) .

  # Awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape
  ?person dbo:awardRecipient ?award .
  ?award dbo:recipient dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .

  # Leader of a government agency
  ?person dbo:leaderOfGovernmentAgency ?agency .

  # Office holder and politician of Gustav Jonson (assuming Gustav Jonson is a known political figure)
  ?person dbo:officeHolder ?office .
  ?office dbo:head dbr:Gustav_Jonson .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
534,17,test,"Give me the birth place of Garret FitzGerald and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?v3 . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?headquarter WHERE {
  # Part 1: Garret FitzGerald's birth place
  ?person a dbo:Person ;
          foaf:name ""Garret FitzGerald""@en ;
          dbo:birthPlace ?birthPlace .

  # Part 2: Venue of the 2012 Pro12 Grand Final and its owner's headquarter
  ?event dbo:eventLocation ?venue .
  ?venue a dbo:Venue, dbo:ArchitecturalStructure ;
         rdfs:label ""RDS Arena""@en .
  ?event dbo:date ?date .
  FILTER (YEAR(?date) = 2012 && MONTH(?date) = 5 && DAY(?date) = 19)

  OPTIONAL {
    ?venue dbo:owner ?owner .
    ?owner dbo:headquarters ?headquarter .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,65,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?unit a dbo:MilitaryUnit ;
        rdfs:label ""Polish Horse""@en .
  
  ?conflict a dbo:MilitaryConflict .

  ?unit dbo:commandedBy ?commander .
  ?commander dbo:participatedIn ?conflict .

  ?wellesley dbr:Arthur_Wellesley,_1st_Duke_of_Wellington ;
             dbo:commandedBy ?commander .

  ?schimmelpenninck dbr:Rutger_Jan_Schimmelpenninck ;
                    dbo:participatedIn ?conflict2 .
  
  FILTER (?conflict != ?conflict2)
}
```",7,14,8,3,3,3,3,71,0,0,15,0,0.0,0
994,59,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Fredrik Thordendal's band
  dbr:Fredrik_Thordendal dbo:memberOfBand dbr:Meshuggah .

  # Associated musical artist of Meshuggah (e.g., members)
  ?meshuggahMember dbo:memberOfBand dbr:Meshuggah .
  
  # Reference to Watchtower and associated musical artist
  dbr:Watchtower dbo:bandMember dbr:John_Bush .
  ?anthraxMember dbo:memberOfBand dbr:Anthrax .
  FILTER(?anthraxMember = dbr:John_Bush) .

  # Band and group associated with Meshuggah
  ?subgroup dbo:memberOfBand dbr:Meshuggah .
  FILTER(STRSTARTS(STR(?subgroup), ""http://dbpedia.org/resource/"") && 
         (dbo:band OR dbo:musicalGroup) IN (VALUES ?type) &&
         dbo:organization IN (VALUES ?type)) .

  # Final associated musical artist
  ?finalArtist dbo:memberOfBand ?subgroup .
}
```",6,10,7,3,2,3,3,71,0,0,5,0,0.0,0
712,20,test,"Give me the resting place of the awardee of the show of Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:award ?award .
  ?award dbo:country dbr:Soviet_Union .
  
  ?militaryUnit dbo:militaryOrganizationOfCountry ?country .
  ?capital dbo:country ?country .
  ?militaryUnit dbo:location ?capital .
  
  ?event dbo:name ""Vyoshenskaya Uprising"" .
  ?person dbo:relatedEvent ?event .

  ?person dbo:restingPlace ?restingPlace .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
435,28,test,"Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?work ?region WHERE {
  # Find an Icelandic author
  ?author a dbo:Person ;
          dbo:nationality dbr:Iceland ;
          dbo:work ?work .

  # Get the region of the time zone in Bombali Shebora Chiefdom
  OPTIONAL { 
    ?location dbo:timeZone ?timezone .
    ?timezone dbo:region ?region .
    FILTER (CONTAINS(LCASE(?location), ""bombali shebora chiefdom""))
  }
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
534,18,test,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex and headquarter of the owner of RDS Arena.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Step 1: Identify the native politician of Essex
  ?politician a dbo:Politician ;
             dbo:nationality dbr:Essex .

  # Step 2: Find the owner of RDS Arena and its headquarters
  ?arenaOwner dbo:headquarters ?hq .
  ?arenaOwner dbo:owns dbr:RDS_Arena .

  # Link the politician to the owner (assuming some relationship exists)
  ?politician dbo:nativePlace ?hq .

  # Step 3: Identify the child of this politician who is a politician and office holder
  ?child dbo:parent ?politician ;
         a dbo:Politician, dbo:OfficeHolder .

  # Step 4: Determine the birth place of this child
  ?child dbo:birthPlace ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
339,18,test,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find the spouse of Grand Duchess Elena Vladimirovna of Russia
  dbr:Grand_Duchess_Elena_Vladimirovna_of_Russia dbo:spouse ?spouse .
  
  # Find the child of this spouse (Elena's child)
  ?child dbo:parent ?spouse .
  
  # The father of Elena's child is the spouse
  ?father dbo:spouse ?child .

  # Find the predecessor of Frederick VIII of Denmark, which is Christian IX
  dbr:Fredrick_VIII_of_Denmark dbo:predecessor ?predecessor .
  FILTER(?predecessor = dbr:Christian_IX_of_Denmark)

  # Find the child of Christian IX (Frederick VIII)
  ?grandchild dbo:parent ?predecessor .

  # Find the grandchild of Frederick VIII
  ?greatGrandchild dbo:parent ?grandchild .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
666,20,test,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England and player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?team a dbo:SoccerClub ;
        a dbo:SportsTeam ;
        dbo:country dbr:England .
  
  ?manager a dbo:Person ;
           rdfs:label ""Leonid Slutsky""@en ;
           dbo:manager ?team .

  ?team rdfs:label ?nickname .
}
```",6,12,7,3,2,3,2,20,0,0,2,0,0.0,0
16,67,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find the actor of ""Unnatural (TV series)""
  ?actor a dbo:Person ;
         dbo:actor ?unnaturalSeries .
  FILTER (?unnaturalSeries = dbr:Unnatural_(TV_series)) .

  # Get the profession of this actor
  ?actor dbo:profession ?professional .

  # Find Ted McGinley's spouse
  ?tedMcGinley a dbo:Person ;
               rdfs:label ""Ted McGinley""@en .
  ?tedMcGinley dbo:spouse ?spouse .

  # Find an alumnus of Ohio State University by birth name
  ?alumnus a dbo:Person ;
           dbo:birthName ?birthName ;
           dbo:almaMater dbr:Ohio_State_University .

  # Ensure the professional is also the spouse and has the same birth name as the alumnus
  FILTER (?professional = ?spouse && ?professional = ?actor)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,52,test,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?war (SAMPLE(?fame) AS ?claimToFame) WHERE {
  VALUES ?person { dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón }
  ?person dbo:occupation ?occupation .
  OPTIONAL { ?person dbo:famousFor ?fame . }
  ?person dbo:participatedInWar ?war .
  FILTER(?war = dbr:Peninsular_War)
} GROUP BY ?war

UNION

# Query for Carl Pontus Gahn
SELECT ?war WHERE {
  VALUES ?person { dbr:C_P_Gahn }
  ?person dbo:birthName ?birthName .
  OPTIONAL { ?person dbo:participatedInWar ?war . }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
328,60,test,"Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award .
  ?award dbo:campaign ""Volcano and Ryukyu Islands campaign"" .
  ?award dbo:recipient ?awardee .

  ?office a dbo:GovernmentAgency .
  ?office dbo:leader ?leader .
  
  ?leader a dbo:OfficeHolder ;
          dbo:occupation dbr:Politician .

  ?gustav a dbo:Person ;
          foaf:name ""Gustav Jonson"" .
  ?gustav dbo:leaderOf ?office .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
391,60,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativePlace WHERE {
  ?person a dbo:Person .
  ?person dbo:nativePlace ?place .
  ?place rdfs:label ""Jackson, Tennessee""@en .

  ?movie a dbo:Film ;
         dbo:actor ?person ;
         rdf:type dbo:TelevisionShow .

  OPTIONAL { 
    ?person foaf:name ?nickname .
    FILTER(CONTAINS(LCASE(?nickname), ""jackson""))
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
184,46,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of Archduke Joseph Karl of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find Archduke Joseph Karl of Austria
  ?archduke a dbo:Person ;
            rdfs:label ""Archduke Joseph Karl of Austria""@en .
  
  # Find his child
  ?child dbo:childOf ?archduke .

  # Find the grandchild (child of the child)
  ?grandchild dbo:childOf ?child .

  # Identify settlements at elevation 96.0
  ?settlement a dbo:Settlement ;
              dbo:elevation ""96.0""^^xsd:float .
  
  # Determine natives of these settlements
  ?native dbo:nativePlace ?settlement ;
          dbo:birthPlace ?place .

  # Find the parent of this native
  ?parent dbo:childOf ?native .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,53,test,Give me the spouse of the father of Merneptah and parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Merneptah's father
  ?merneptah a dbo:Person ;
             rdfs:label ""Merneptah""@en .
  
  ?father dbo:child ?merneptah ;
          dbo:parent ?merneptah .

  # Ensure the father is also parent of Henuttawy (19th dynasty)
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy (19th dynasty)""@en .
  
  ?father dbo:child ?henuttawy .

  # Find spouse of Merneptah's father
  ?spouse dbo:spouse ?father .

  # Additional verification with Amun-her-khepeshef
  ?amun a dbo:Person ;
        rdfs:label ""Amun-her-khepeshef""@en .
  
  ?spouse2 dbo:spouse ?amun .
  ?child dbo:parent ?spouse2 .

  # Ensure the father is also parent of this child
  ?father dbo:child ?child .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,46,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?birthPlace WHERE {
  # Find Yūki Hideyasu's father who is a politician and his death place
  ?father a dbo:Person ;
          dbo:child dbr:Yūki_Hideyasu ;
          dbo:spouse ?mother ;
          dbo:occupation dbo:Politician .
  ?father dbo:deathPlace ?deathPlace .

  # Find the war involving Saitō Hajime as a military conflict, event, and societal event
  ?war a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent ;
       dbo:commander dbr:Saitō_Hajime .
  
  # Find the commander's birth place in this war
  ?commander a dbo:Person ;
             dbo:commanderOf ?war ;
             dbo:birthPlace ?birthPlace .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
659,35,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  # Arthur Wellesley's command in a military conflict
  ?commander a dbo:Person ;
             foaf:name ""Arthur Wellesley"" ;
             dbo:commander ?conflict .
  
  # Rutger Jan Schimmelpenninck's involvement in the same context
  ?schimmelpenninck a dbo:Person ;
                    foaf:name ""Rutger Jan Schimmelpenninck"" ;
                    dbo:politicalAffiliation ?affiliation .

  # Linking political affiliation to the conflict
  ?affiliation dbo:relatedEvent ?conflict .
}
```",4,7,5,2,2,3,3,71,0,0,38,0,0.0,0
659,48,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event a dbo:MilitaryConflict .
  ?event dbo:participatedInEvent dbr:Rutger_Jan_Schimmelpenninck .
  
  ?officeHolder a dbo:OfficeHolder ;
               dbo:officeTitle ?title .
  FILTER CONTAINS(LCASE(?title), ""kingdom of ireland"") .

  ?commander a dbo:MilitaryCommander ;
             dbo:militaryForce ?event ;
             dbo:participatedInEvent ?event .
}
```",5,9,6,3,2,3,3,71,0,0,40,0,0.0,0
64,8,test,"Give me the alma mater of Jovan Hristić and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query to find the alma mater of Jovan Hristić
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:Jovan_Hristi? a dbo:Person .
  dbr:Jovan_Hristi? dbo:almaMater ?almaMater .
}

# Query to find a country in the Central European Time region
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ""Europe/Berlin""^^xsd:string .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
232,41,test,"Give me the native of London and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?conflict ?child WHERE {
  # Find Sean Pertwee's film role
  ?person a dbo:Person ;
          foaf:name ""Sean Pertwee""@en .
  
  OPTIONAL { 
    ?person dbo:filmRole ?film .
  }
  
  OPTIONAL { 
    ?person dbo:militaryConflict ?conflict .
  }

  # Find Sean Pertwee's child
  ?child a dbo:Person ;
         foaf:name ""John Devon Roland Pertwee""@en ;
         dbo:parent ?person .

}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
92,62,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  ?person dbo:actor dbr:Return_to_Nuke_'Em_High_Volume_1 .
  ?person dbo:bandMember dbr:Joseph_Michael_(band) .

  # Find the associated musical artist related to Nevermore (2006 film)
  ?film a dbo:Film ;
        rdfs:label ""Nevermore""@en .
  
  ?associatedArtist dbo:reference ?film ;
                    a dbo:MusicalArtist .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,25,test,Give me the native of Japan and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the resource for Takashi Sekizuka
  dbr:Takashi_Sekizuka a dbo:Person .
  
  # Identify the team he manages
  dbr:Takashi_Sekizuka dbo:managerOfTeam ?team .

  # Find the manager of that team who is native to Japan
  ?manager dbo:nationality dbr:Japan ;
           dbo:managerOfTeam ?team .

  # Ensure the manager is a person
  ?manager a dbo:Person .
}
```",3,3,4,2,2,3,3,71,0,0,6,0,0.0,0
427,61,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party1 AS ?romanoProdiParty ?party2 AS ?fatherOfAlumnusParty WHERE {
  # Part 1: Romano Prodi's birth name party
  {
    ?prodi a dbo:Person ;
          dbo:birthName ""Romano Prodi"" ;
          dbo:officeHolder ?_ ;
          dbo:politician ?_ .
    ?prodi dbo:party ?party1 .
  }
  
  UNION
  
  # Part 2: Father of an MIT alumnus's party
  {
    ?alumnus a dbo:Person ;
             dbo:alumnusOf dbr:Massachusetts_Institute_of_Technology .
    ?father dbo:father ?alumnus .
    ?father dbo:party ?party2 .
  }
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
626,18,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonPerson WHERE {
  # Find the award received by Aleksey Petrovich Yermolov
  ?award a dbo:Award ;
         dbo:recipient dbr:Aleksey_Petrovich_Yermolov .
  
  # Find all recipients of that award
  ?person dbo:recipient ?award .

  # Find the commander in the Battle of Paris (1814)
  dbr:Battle_of_Paris_(1814) dbo:commander ?battleCommander .

  # Find a military conflict where this commander was involved as a commander
  ?conflict dbo:commander ?battleCommander ;
            dbo:commander ?commonPerson .
  
  FILTER (?person != ?commonPerson)
}
```",5,6,6,3,2,3,2,20,0,0,23,0,0.0,0
959,48,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of Takashi Sekizuka.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1958)
  
  ?person dbo:managerOf dbr:Takashi_Sekizuka .

  ?almaMater dbo:country dbr:Japan ;
            a dbo:University, dbo:EducationalOrganization .

  ?person dbo:almaMater ?almaMater .
}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
754,20,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of the parent of the parent of Min Linka.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  # Find Ram Khamhaeng's child
  ?child dbo:parent dbr:Ram_Khamhaeng_the_Great .
  
  # The parent of that child is Ram Khamhaeng himself
  ?ramKhamhaeng a dbo:Person ;
                rdfs:label ""Ram Khamhaeng the Great""@en .

  # Find Min Linka's grandparent
  ?minLinkaGrandchild dbo:parent ?minLinkaParent .
  ?minLinkaParent dbo:parent ?minLinkaGrandparent .

  # Find the parent of Min Linka's grandparent
  ?minLinkaGreatGrandparent dbo:parent ?minLinkaGrandparent .

  # The result is the parent of Ram Khamhaeng and the parent of Min Linka's great-grandparent
  FILTER (?ramKhamhaeng = ?result && ?minLinkaGreatGrandparent = ?result)
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
528,62,test,"Give me the force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?conflict ?date WHERE {
  ?person rdfs:label ""Narciso Campero""@en .
  ?person a dbo:Person .

  OPTIONAL { 
    ?person dbo:commander ?conflict .
    ?conflict a dbo:MilitaryConflict ;
             dbo:location dbr:Chile .
  }

  OPTIONAL {
    ?conflict dbo:date ?date .
    FILTER (STRSTARTS(STR(?date), ""01-09""))
  }
}
```",7,8,8,3,3,3,3,71,0,1,2,0.0,0.0,0
767,70,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  # Assuming 'Green' refers to a specific place, e.g., Green, Ohio
  ?administration dbo:location dbr:Green_Ohio .
  
  # Settlement related to the administration
  ?settlement a dbo:Settlement ;
              dbo:partOf ?administration .

  # Fictional character associated with Matthew Burland
  ?fictionalCharacter dbo:alterEgo dbr:Matthew_Burland .

  # Alma mater of someone connected to George Kilbon Nash
  ?person dbo:almaMater ?university .
  ?nashRelatedEntity dbo:relatedTo dbr:George_Kilbon_Nash ;
                    dbo:administrator ?person .

  FILTER (?settlement = ?administration) .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
392,25,test,"Give me the province of Schio and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT 
  ?provinceOfSchio ?regionOfSchio 
  ?timeZoneAguilar ?regionCET 
  ?sportsEvent 
  ?countryInCETRegion 

WHERE {
  # Province of Schio and its region
  dbr:Schio dbo:locatedIn ?provinceOfSchio .
  ?provinceOfSchio dbo:partOf ?regionOfSchio .

  # Time zone for Aguilar de Segarra and corresponding region
  dbr:Aguilar_de_Segarra dbo:timeZone ?timeZoneAguilar .
  FILTER (STR(?timeZoneAguilar) = ""Central European Time"")
  ?placeInCETRegion dbo:timeZone ?timeZoneAguilar .
  ?placeInCETRegion dbo:partOf ?regionCET .

  # Sports event related to Aguilar de Segarra
  OPTIONAL {
    ?sportsEvent dbo:location dbr:Aguilar_de_Segarra .
  }

  # Countries in the CET region
  ?countryInCETRegion a dbo:Country ;
                      dbo:timeZone ?timeZoneAguilar .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,23,test,"Give me the reference to the author of Blinded by the Light and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?albumWriter WHERE {
  # Find the author of ""Blinded by the Light""
  OPTIONAL {
    ?song a dbo:Songs .
    ?song dbo:title ""Blinded by the Light"" .
    ?song dbo:writer ?author .
    FILTER (?author = dbr:Bruce_Springsteen)
  }
  
  # Find the writer of an album associated with Dave Flett
  OPTIONAL {
    ?album a dbo:Album .
    ?album dbo:artist dbr:Dave_Flett .
    ?album dbo:writer ?albumWriter .
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
547,45,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  # For Gerald Graham, assuming he received a specific award (e.g., CBE)
  VALUES ?geraldGraham (dbr:Gerald_Graham_(CBE))
  
  # Query for the resting place of Gerald Graham
  ?geraldGraham dbo:deathPlace ?restingPlace .
  
  UNION
  
  # For James Burton, the Egyptologist
  ?jamesBurton a dbo:Egyptologist ;
               rdfs:label ""James Burton (Egyptologist)""@en ;
               dbo:deathPlace ?restingPlace .
  
  UNION
  
  # For Simon Cadell
  ?simonCadell a dbo:Actor ;
               rdfs:label ""Simon Cadell""@en ;
               dbo:deathPlace ?restingPlace .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
391,51,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor1 ?actor2 WHERE {
  # Find Michael Ballhaus's notable work (filmography)
  dbr:Michael_Ballhaus dbo:filmography ?work .
  
  # Find actors associated with this work
  ?work dbo:starring ?actor1 .

  # Find a movie that is also a television show
  ?movie a dbo:Film ;
         dbo:genre/dbo:subClassOf* dbo:TelevisionShow .

  # Find the professional (actor) involved in this movie/TV show
  ?movie dbo:starring ?actor2 .
}
```",5,9,6,3,2,3,3,71,0,0,11,0,0.0,0
391,59,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Step 1: Identify Sherry Hormann's spouse
  ?sherry a dbo:Person ;
          foaf:name ""Sherry Hormann"" .
  
  ?sherry dbo:spouse ?spouse .

  # Step 2: Determine the claim to fame of the spouse (a work)
  ?work dbo:actor ?spouse ;
        a dbo:Film . # Assuming it's a film; adjust if necessary

  # Step 3: Identify an actor from that work
  ?work dbo:actor ?actor .

  # Step 4: Find the nickname ""Jackson, Tennessee""
  ?actor foaf:name ?name .
  FILTER regex(?name, ""Jackson, Tennessee"", ""i"")

  # Step 5: Determine the native place of the figure
  ?actor dbo:nativePlace ?nativePlace .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,66,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  dbr:Satomi_Ishihara a dbo:Person ;
                      dbo:profession ?profession .

  # Find Ted Martin McGinley's spouse
  dbr:Ted_Martin_McGinley a dbo:Person ;
                          dbo:spouse ?spouse .

  # Find an alumnus of Ohio State University and their birth name
  ?alumnus a dbo:Person ;
           dbo:almaMater dbr:Ohio_State_University ;
           dbo:birthName ?birthName .

  # Ensure the professional is linked to both conditions
  ?professional a dbo:Person ;
                dbo:profession ?profession ;
                dbo:spouse ?spouse .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
421,22,test,Give me the native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativePerson WHERE {
  # Step 1: Find Samir Bekrić's birthplace
  dbr:Samir_Bekrić a dbo:Person ;
                   dbo:birthPlace ?birthPlace .

  # Step 2: Find someone native to that birthplace
  ?nativePerson a dbo:Person ;
                dbo:nativeOf ?birthPlace .

  # Step 3: Identify bands with awards and their members
  ?band a dbo:Band ;
        dbo:award ?award .
  
  ?member a dbo:MusicArtist ;
          dbo:member ?band .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
54,30,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
              foaf:name ""Thihapate of Mohnyin""@en .
  
  # Child of Thihapate who is also parent of Thado Minsaw and child of Thinkhaya
  ?child dbo:parent ?thihapate ;
         dbo:spouse ?thinkhaya ;
         dbo:child ?thadoMinsaw .

  ?thinkhaya foaf:name ""Thinkhaya of Pagan""@en .
  ?thadoMinsaw foaf:name ""Thado Minsaw of Prome""@en .

  # Ensure the child is an office holder and royalty
  ?child a dbo:Monarch ;
         dbo:officeHolder ?office .

  # Find predecessor of this person
  ?predecessor dbo:successor ?child .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,53,test,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?joaquinBlakeWar ?gibraltarCommanderFame ?carlPontusGahnPerson WHERE {
  # Joaquín Blake's war involvement
  ?joaquinBlake a dbo:Person ;
               foaf:name ""Joaquín Blake"" ;
               dbo:participatedIn ?joaquinBlakeWar .

  # Commander in the Great Siege of Gibraltar and their claim to fame
  ?gibraltarCommander a dbo:Person ;
                     foaf:name ?commanderName ;
                     dbo:famousFor ?gibraltarCommanderFame .
  ?siegeEvent a dbo:Event ;
              dbo:participatedIn ?gibraltarCommander ;
              rdfs:label ""Great Siege of Gibraltar""@en .

  # Person born as Carl Pontus Gahn
  ?carlPontusGahn a dbo:Person ;
                  foaf:name ""Carl Pontus Gahn""^^xsd:string ;
                  foaf:nick ?carlPontusGahnPerson .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
801,59,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?person a dbo:Person .
  ?person dbo:musicArtist ?artistRole .
  ?artistRole rdf:type dbo:Rapper .
  ?person dbo:alterEgo dbr:The_Shadow .

  ?work a dbo:Songs_and_Lyrics ;
        a dbo:MusicalWork .

  ?work dbo:producedBy ?producer .
}
```",6,10,7,3,2,3,3,71,0,0,473,0,0.0,0
767,68,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?settlement WHERE {
  # Step 1: Identify the alter ego of Black Hood
  ?blackHood a dbo:Person ;
             rdfs:label ""Black Hood""@en .
  ?blackHood dbo:alias ?alterEgo .

  # Step 2: Find the writer of ""Where It's At"" (Dustin Lynch album)
  ?song dbo:lyricsBy ?writer ;
        rdfs:label ""Where It's At""@en .
  
  # Step 3: Locate the alma mater of George Kilbon Nash
  ?nash a dbo:Person ;
        rdfs:label ""George Kilbon Nash""@en .
  ?nash dbo:almaMater ?university .

  # Step 4: Find a settlement in the administration related to the writer's alma mater
  ?writer dbo:almaMater ?university .
  ?administration dbo:location ?settlement ;
                  dbo:member ?writer ;
                  dbo:member ?nash .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,66,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Identify the album and its associated musical artist
  dbr:What_U_See_Is_What_U_Get a dbo:Album .
  
  ?albumArtist dbo:associatedBandMember dbr:50_Cent ;
              dbo:associatedBandMember dbr:The_Shadow .

  # Find songs from this album that involve 50 Cent and The Shadow
  ?song dbo:album dbr:What_U_See_Is_What_U_Get ;
        dbo:musicalArtist ?albumArtist ;
        a dbo:Song .

  # Determine the producer of these songs
  ?song dbo:producer ?producer .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
378,32,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the Peninsular War commander
SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict .
  ?war dbo:name ""Peninsular War""@en .
  ?war dbo:commander ?commander .
}

UNION

# Query for Carl Pontus Gahn's birth and any associated wars
SELECT ?person ?birthDate ?associatedWar WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Carl Pontus Gahn""@en ;
          dbo:birthDate ?birthDate .

  OPTIONAL {
    ?person dbo:memberOf ?organization .
    ?organization dbo:member ?war .
    ?war a dbo:MilitaryConflict ;
         dbo:name ?associatedWar .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
9,23,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person .
  ?person dbo:positionHeld ?mayorship .
  ?mayorship dbo:officeHolder ?person ;
             dbo:organization ?organization .
  ?organization dbo:location dbr:Belfast .
  ?person dbo:occupation dbo:Politician .
  
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
328,53,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in Eastern Front (World War II)
  ?person dbo:commanderOfMilitaryUnit dbr:Eastern_Front_(World_War_II) .

  # Leader of the office, that is a government agency, of Joseph Stalin
  ?office dbo:leader ?person ;
          dbo:headOfGovernmentAgency dbr:Joseph_Stalin .
  
  # Awardee of the award for Volcano and Ryukyu Islands campaign
  ?award dbo:awardee ?person ;
         dbo:campaign dbr:Volcano_and_Ryukyu_Islands_campaign .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,70,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Person who was a commander in the Battle of Verdun
  ?person dbo:commanderInBattle dbr:Battle_of_Verdun .

  # Decedent at the work location of Joseph C. Satterthwaite
  ?workLocation dbo:employee dbr:Joseph_C._Satterthwaite .
  ?person dbo:deathPlace ?workLocation .

  # Decedent at the capital of Khemis Miliana District
  ?capital a dbo:Settlement ;
           dbo:partOf dbr:Khemis_Miliana_District .
  ?person dbo:deathPlace ?capital .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
184,70,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the child of the child of the parent of Archduke Ladislaus Philipp who is royalty
  ?parent1 a dbo:Person ;
           dbo:child dbr:Archduke_Ladislaus_Philipp_of_Austria .
  ?child1 dbo:childOf ?parent1 ;
          a dbo:Royalty .
  ?grandchild1 dbo:childOf ?child1 .

  # Find the parent of the child of the parent of Archduchess Margaret and native of Budapest
  ?parent2 a dbo:Person ;
           dbo:child dbr:Archduchess_Margaret_of_Austria .
  ?child2 dbo:childOf ?parent2 .
  ?grandparent2 dbo:childOf ?child2 .

  # Ensure the person is a native of Budapest
  ?native a dbo:Person ;
          dbo:nationalityOrCitizenship dbr:Budapest .

  # Combine conditions to find the common individual
  FILTER (?grandchild1 = ?grandparent2 && ?grandparent2 = ?native)
  
  BIND(?grandchild1 AS ?person)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
492,58,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Death in French Algeria
  ?deathPlace1 rdfs:label ""French Algeria""@en ;
              dbo:country dbr:French_Algeria .
  ?person dbo:deathPlace ?deathPlace1 .

  # Death in the capital of Khemis Miliana District
  ?district dbr:Khemis_Miliana_District ;
           dbo:capital ?capitalCity .
  ?capitalCity a dbo:Settlement .
  ?deathPlace2 rdfs:label ?capitalLabel ;
               owl:sameAs ?capitalCity .
  ?person dbo:deathPlace ?deathPlace2 .

  # Commander in the war involving Frédéric-Georges Herr
  ?war dbo:commander ?person ;
       dbo:participant dbr:Frédéric-Georges_Herr .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,50,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Antiochus IV Epiphanes
  dbr:Antiochus_IV_Epiphanes a dbo:Person ;
                             dbo:successor ?successor .

  # Step 2: Find the child of the successor who is royalty
  ?successor dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Royalty .

  # Step 3: Determine the spouse of this royal child
  ?royalChild dbo:spouse ?spouse .

  # Step 4: Identify a child of Antiochus IV Epiphanes and their parent
  dbr:Antiochus_IV_Epiphanes dbo:child ?antiochusChild .
  ?antiochusChild dbo:parent ?parent .

  # Step 5: Match the spouse with this parent
  FILTER (?spouse = ?parent)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
345,18,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15 and figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.","SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?team ?nickname WHERE {
  ?person a dbo:Person .
  ?person dbo:sport ?sport .
  ?person dbo:birthDate ?date .
  ?person dbo:managerTeam ?team .
  ?team a dbo:SoccerClub ;
        a dbo:SportsOrganization .
  
  ?player foaf:nick ?nickname .
  ?player dbo:memberOfTeam ?team .

  FILTER (YEAR(?date) = 1978 && MONTH(?date) = 9 && DAY(?date) = 15)
  FILTER (?sport = dbr:Soccer_player || ?sport = dbr:Soccer_manager)
  
  # Assuming Armando Heeb is a known entity in DBpedia
  ?person foaf:name ""Armando Heeb"" .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
528,59,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  ?war a dbo:War .
  ?war dbo:location dbr:Chile .
  ?war dbo:societalEvent ?event .
  ?war dbo:commander ?commander .
  
  OPTIONAL { 
    ?work dbo:date ?date .
    FILTER (STRSTARTS(STR(?date), ""01-09""))
  }
}
```",6,7,7,3,2,3,3,71,0,0,14,0,0.0,0
281,50,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit ?birthPlaceCountry WHERE {
  # Heather Roy's military unit
  dbr:Heather_Roy dbo:militaryUnit ?militaryUnit .

  # Leader of the 1962 New South Wales state election
  ?election a dbo:Election .
  ?election dbo:state dbr:New_South_Wales .
  ?election dbo:date ""1962-03-05""^^xsd:date .
  ?election dbo:leader ?politician .

  # Politician's birthplace country
  ?politician dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:countryName ?birthPlaceCountry .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,52,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Bob Heffron's birth place
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  
  # Ensure the birth place is a country
  ?birthPlace a dbo:Country .

  # Jonathon Band's award
  dbr:Jonathon_Band dbo:award ?award .

  # Wars related to the awardee of this award
  ?awardee dbo:award ?award .
  ?war dbo:participant ?awardee .
  
  # New Zealand Army involvement in wars
  ?nzWar dbo:participatingArmy dbr:New_Zealand_Army .
  FILTER (?war = ?nzWar)

  # Entity in the birth place that matches the criteria
  ?entity dbo:location ?birthPlace .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,48,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Identify Joseph Stalin's governmental role
  ?stalin a dbo:Person ;
          foaf:name ""Joseph Stalin""@en .
  
  ?office dbo:head ?stalin ;
          a dbo:GovernmentAgency .

  # Find the award related to the Volcano and Ryukyu Islands campaign
  ?award dbo:recipient ?leader ;
         dbo:campaign dbr:Volcano_Islands_campaign ;
         dbo:campaign dbr:Ryukyu_Islands_campaign .
  
  # Ensure the leader is associated with the office
  ?office dbo:head ?leader .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
391,71,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v1 . ?v7 <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v8 <http://dbpedia.org/property/starring> ?result . ?v8 <http://dbpedia.org/property/starring> ?v7 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v4 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  ?sherry a dbo:Person ;
          foaf:name ""Sherry Hormann""@en .
  ?sherry dbo:spouse ?spouse .
}

# Step 2: Determine the claim to fame of Sherry Hormann's spouse
SELECT DISTINCT ?work WHERE {
  ?spouse dbo:claimToFame ?work .
  ?work a dbo:Film ;
        dbo:starring ?actor .
}

# Step 3: Identify the actor in that work
SELECT DISTINCT ?actor WHERE {
  ?work dbo:starring ?actor .
}

# Step 4: Find nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
  dbr:Jackson,_Tennessee dbo:nickname ?nickname .
}

# Step 5: Match the figure to the actor and find native place
SELECT DISTINCT ?nativePlace WHERE {
  ?actor a dbo:Person ;
         foaf:name ?name .
  FILTER (?name = ""Actor Name""@en) # Replace with actual name from previous query
  ?actor dbo:nativePlace ?nativePlace .
}
```

Note: The above SPARQL queries are structured to be executed sequentially. You will need to replace `""Actor Name""` in the final query with the actual actor's name obtained from step 3.",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
659,24,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  
  ?war a dbo:War ;
      rdfs:label ""Napoleonic Wars""@en .

  ?regiment dbo:participatedIn ?war .
  ?regiment dbo:commander ?commander .
}
```",3,5,4,2,2,3,3,71,0,0,29,0,0.0,0
232,62,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Identify Jon Pertwee
  ?jon a dbo:Person ;
       foaf:name ""Jon Pertwee""@en .
  
  # Find his child who is an actor, narrator, and producer from London
  ?child dbo:parent ?jon ;
         dbo:nativePlace dbr:London ;
         dbo:profession ?prof1 , ?prof2 , ?prof3 .
  FILTER (
    (str(?prof1) = ""Actor""@en || str(?prof1) = ""Narrator""@en || str(?prof1) = ""Producer""@en) &&
    (str(?prof2) = ""Actor""@en || str(?prof2) = ""Narrator""@en || str(?prof2) = ""Producer""@en) &&
    (str(?prof3) = ""Actor""@en || str(?prof3) = ""Narrator""@en || str(?prof3) = ""Producer""@en)
  )
  
  # Find the claim to fame involving a film and a military conflict
  ?child dbo:claimToFame ?fame .
  ?fame rdf:type/rdfs:subClassOf* (dbo:Film|dbo:MilitaryConflict) .

  # Identify the actor involved in these aspects
  ?actor dbo:actorIn ?film ;
         dbo:actorIn ?conflict .
  FILTER (?film = ?fame && ?conflict = ?fame)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
659,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?conflict a dbo:MilitaryConflict .
  ?schimmelpenninck a dbo:Person ;
                  foaf:name ""Rutger Jan Schimmelpenninck"" ;
                  dbo:commanderInMilitaryConflict ?conflict .
  
  ?polishHorse a dbo:MilitaryUnit, dbo:Organization ;
               rdfs:label ""Polish Horse""@en .
  ?polishHorse dbo:participatedIn ?conflict .

  ?force a dbo:MilitaryForce ;
         dbo:commander ?schimmelpenninck ;
         dbo:participatedIn ?conflict .

  ?kingdom dbr:Kingdom_of_Ireland ;
           dbo:nativeOfficeHolder ?native .
  
  ?native dbo:commanderOfMilitaryForce ?force .
}
```",9,17,10,3,3,3,3,71,0,0,15,0,0.0,0
427,46,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?micheleParty ?fatherParty WHERE {
  # Find the party of Michele Pinto
  OPTIONAL { 
    ?michele a dbo:Person ;
             foaf:name ""Michele Pinto"" ;
             dbo:party ?micheleParty .
  }
  
  # Find Lamberto Andreotti's father and his party
  ?lamberto a dbo:Person ;
            foaf:name ""Lamberto Andreotti"" ;
            dbo:father ?father .
  OPTIONAL {
    ?father a dbo:Person ;
            foaf:name ?fatherName ;
            dbo:party ?fatherParty .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
161,62,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInBiscay ?militaryForceOfPredecessorEvent ?decedentPerson ?militaryForceOfDecedentEvent WHERE {
  # Find Indalecio Prieto's predecessor
  ?prieto a dbo:Politician ;
          foaf:name ""Indalecio Prieto""@en .
  
  ?predecessor dbo:successor ?prieto ;
               foaf:name ?namePredecessor .

  # Identify societal event and military conflict for the predecessor
  ?event1 dbo:relatedTo ?predecessor ;
          a dbo:SocietalEvent, dbo:MilitaryConflict .

  # Find commander in Biscay Campaign
  ?biscayCampaign dbo:commander ?commanderInBiscay ;
                  a dbo:MilitaryCampaign .
  
  # Identify military force for the predecessor's event
  ?event1 dbo:militaryForce ?militaryForceOfPredecessorEvent .

  # Find person decedent at Francoist Spain
  ?decedentPerson dbo:deathPlace dbr:Francoist_Spain ;
                  foaf:name ?nameDecedent .

  # Identify societal event and military conflict for the decedent
  ?event2 dbo:relatedTo ?decedentPerson ;
          a dbo:SocietalEvent, dbo:MilitaryConflict .

  # Identify military force for the decedent's event
  ?event2 dbo:militaryForce ?militaryForceOfDecedentEvent .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
435,25,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v4 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:Iceland ;
          dbo:residence ?territory .
  
  ?territory a dbo:Settlement, dbo:Town ;
            dbo:administrativeTerritory ?adminRole .

  FILTER EXISTS { 
    ?adminRole dbo:article ""Article 62, Section IV of Constitution of Iceland"" .
  }

  FILTER EXISTS {
    ?region dbo:timeZone dbr:Bombali_Shebora_Cheifdom .
    ?territory dbo:partOf ?region .
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,35,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?heatherRoyProfessionMilitaryUnit ?awardeeMilitaryUnit WHERE {
  # Heather Roy's profession and related military unit
  OPTIONAL {
    ?heatherRoy a dbo:Person ;
               foaf:name ""Heather Roy""@en .
    ?heatherRoy dbo:profession ?profession .
    ?profession dbo:militaryUnit ?heatherRoyProfessionMilitaryUnit .
  }

  # Awardee of Knight Grand Cross of the Order of the Bath and related military unit
  OPTIONAL {
    ?awardee a dbo:Person ;
             dbo:honor dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
    ?awardee dbo:militaryUnit ?awardeeMilitaryUnit .
  }
}
```",4,5,5,2,2,3,3,71,0,0,9,0,0.0,0
281,69,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardWar ?militaryUnit WHERE {
  # Find Jonathon Band's award and associated war
  ?award a dbo:Award ;
         dbo:recipient dbr:Jonathon_Band .
  ?award dbo:war ?awardWar .

  # Find Bob Heffron's birthplace country
  ?heffron dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
  FILTER (str(?birthPlace) = ""dbr:Australia"") # Assuming Bob Heffron was born in Australia

  # Find the military unit related to an office holder/politician in New Zealand Army
  ?profession a dbo:OfficeHolder, dbo:Politician ;
             dbo:militaryUnit ?militaryUnit .
  ?militaryUnit dbo:partOf dbr:New_Zealand_Army .

  # Linking conditions (assuming there's a connection between the award war and military unit)
  ?awardWar dbo:relatedMilitaryUnit ?militaryUnit
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
547,69,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildRestingPlace ?awardeeRestingPlace ?actorRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    ?william a dbo:Person ;
             rdfs:label ""William Haliburton""@en .
    ?williamChild dbo:child ?grandparent .
    ?grandparent dbo:child ?grandchild .
    ?grandchild dbo:finalRestingPlace ?grandchildRestingPlace .
  }
  
  # Resting place of the awardee of the award of Gerald Graham
  {
    ?gerald a dbo:Person ;
            rdfs:label ""Gerald Graham""@en .
    ?geraldAward dbo:award ?award .
    ?award dbo:awardee ?awardee .
    ?awardee dbo:finalRestingPlace ?awardeeRestingPlace .
  }
  
  # Resting place of the actor of Enemy at the Door
  {
    dbr:Enemy_at_the_Door dbo:starring ?actor .
    ?actor dbo:finalRestingPlace ?actorRestingPlace .
  }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
492,65,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person1 ?person2 ?commander WHERE {
  # Person who died at the death place of Joseph C. Satterthwaite
  dbr:Joseph_C._Satterthwaite dbo:deathPlace ?place .
  ?person1 a dbo:Person ;
           dbo:deathPlace ?place .

  # Person who died in Algiers, capital of Algeria
  dbr:Algiers dbo:capitalOf dbr:Algeria ;
              rdf:type dbo:Settlement .
  ?person2 a dbo:Person ;
           dbo:deathPlace dbr:Algiers .

  # Commander in the Battle of Verdun
  dbr:Battle_of_Verdun dbo:commander ?commander .
  ?commander a dbo:Person .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
981,16,test,"Give me the entity in the region of Time in Indonesia and birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?beautyQueen ?birthPlace ?region WHERE {
  ?beautyQueen a dbo:Person .
  ?beautyQueen dbo:title ?title .
  FILTER (CONTAINS(LCASE(STR(?title)), ""miss"") || CONTAINS(LCASE(STR(?title)), ""beauty queen""))
  
  ?beautyQueen dbo:birthPlace ?birthPlace .

  OPTIONAL {
    ?region dbr:Time_in_Indonesia/dbo:location ?place .
    FILTER (CONTAINS(LCASE(STR(?place)), ""time"") && CONTAINS(LCASE(STR(?place)), ""indonesia""))
  }
}
```",4,5,5,2,2,3,2,20,17,4511,2,0.003754416961130742,0.8947368421052632,0.0074774576643941056
391,35,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor a dbo:Person .
  
  # Assuming ""Hub City"" refers to a specific city, replace `dbr:HubCity` with the actual DBpedia resource for that city
  ?actor dbo:nativePlace dbr:HubCity .

  ?movie dbo:starring ?actor ;
         a dbo:Film ;
         dbo:workType ?type .
  
  FILTER (?type IN (dbo:TelevisionShow, dbo:Work)) .

  # Assuming Roz Ryan is represented in DBpedia as `dbr:Roz_Ryan`
  ?movie dbo:starring dbr:Roz_Ryan .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
485,27,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Eric_Gregory_Award .
  ?person dbo:occupation [a dbo:Writer ; a dbo:Poet] .
  ?person dbo:birthPlace ?birthPlace .

  ?whitaker a dbo:Person ;
           foaf:name ""Joseph Whitaker"" ;
           dbo:birthPlace ?regionBirthPlace .

  FILTER (?birthPlace = ?regionBirthPlace)
  
  ?regionBirthPlace a dbo:Region ;
                   dbo:country dbr:United_Kingdom .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
435,23,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of the author of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:Iceland ;
          rdfs:label ""J.R.R. Tolkien""@en .
  
  OPTIONAL { 
    ?work dbo:author ?person ;
          rdfs:label ?title .
    FILTER regex(?title, ""Land of fire and ice"", ""i"")
  }
  
  ?territory dbo:administrativeTerritory ?person .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
378,42,test,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Carl Pontus Gahn
SELECT ?person ?birthDate WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}

UNION

# Query for Joaquín Blake
SELECT ?person ?role ?event WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Joaquín Blake y Joyes""@en .
  OPTIONAL { 
    ?person dbo:role ?role .
    FILTER (CONTAINS(LCASE(STR(?role)), ""commander"") || CONTAINS(LCASE(STR(?role)), ""general""))
  }
  OPTIONAL {
    ?event a dbo:MilitaryConflict ;
           rdfs:label ?eventName .
    ?person dbo:participatedIn ?event .
    FILTER (
      CONTAINS(LCASE(STR(?eventName)), ""great siege of gibraltar"") ||
      CONTAINS(LCASE(STR(?eventName)), ""war"")
    )
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
360,25,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v3 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?album a dbo:Album .
  
  # Dave Flett's association with the album
  ?album dbo:creator ?person1 .
  ?person1 rdfs:label ""Dave Flett""@en .

  # Manfred Mann's association with the album
  OPTIONAL { 
    ?album dbo:member ?person2 .
    ?person2 rdfs:label ""Manfred Mann""@en .
  }

  # Winnie Madikizela-Mandela's death place as a settlement
  ?winnie dbr:Winnie_Madikizela-Mandela .
  ?winnie dbo:deathPlace ?place .
  ?place a dbo:Settlement .

  # Linking the album to the death place of Winnie Madikizela-Mandela
  OPTIONAL {
    ?album dbo:location ?place .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
318,9,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Robert Xavier Rodriguez's profession
  VALUES (?robertProfession) { 
    { dbr:Robert_Xavier_Rodriguez dbo:profession ?robertProfession }
  }

  # Find the founding year of Eel Pie Publishing
  BIND (
    EXTRACT(YEAR FROM ?foundingDate) AS ?foundingYear
  )
  VALUES (?foundingYear) {
    { dbr:Eel_Pie_Publishing dbo:foundingDate ?foundingDate }
  }

  # Find a person with the same profession and born in the founding year of Eel Pie Publishing
  ?person a dbo:Person .
  ?person dbo:profession ?robertProfession .
  ?person dbo:birthDate ?birthDate .
  FILTER (
    EXTRACT(YEAR FROM ?birthDate) = ?foundingYear
  )
}
```",4,4,5,2,2,2,2,9,0,0,7,0,0.0,0
701,55,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find a child of Ramesses II
  ?child dbo:father dbr:Ramesses_II .
  
  # The parent of this child is likely Ramesses II or another entity
  ?child dbo:mother ?mother .

  # Identify Merneptah's father, which should be Ramesses II
  dbr:Merneptah dbo:father dbr:Ramesses_II .

  # Find the spouse of Ramesses II (Merneptah's father)
  ?spouse dbo:spouse dbr:Ramesses_II .
  
  # Identify a child of Nefertari
  ?nChild dbo:mother dbr:Nefertari .
  
  # The parent of this child is likely Nefertari or Ramesses II
  ?nChild dbo:father ?parent .

  # Combine the conditions to find the common entity
  FILTER (?mother = ?spouse && ?parent = ?mother)
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
285,20,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?spouseOfProfessional WHERE {
  # Find spouse of Aristotle Onassis
  ?aristotleOnassis a dbo:Person ;
                   foaf:name ""Aristotle Onassis"" .
  
  ?aristotleOnassis dbo:spouse ?spouse1 .

  # Find child of the spouse (which is also a child of Aristotle Onassis)
  ?child dbo:parent ?spouse1 ;
         dbo:parent ?aristotleOnassis .

  # Parent of this child is Aristotle Onassis
  BIND(?aristotleOnassis AS ?parentOfChild)

  # Find an award associated with Stan Lee
  ?stanLee a dbo:Person ;
           foaf:name ""Stan Lee"" .
  
  ?award dbo:recipient ?stanLee ;
         dbo:profession ?professional .

  # Find spouse of the professional related to the award
  ?professional dbo:spouse ?spouse2 .

  BIND(?spouse2 AS ?spouseOfProfessional)
}
```",6,6,7,3,2,3,2,20,0,0,3,0,0.0,0
487,18,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of the person born on 1955-01-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration1 ?country2 WHERE {
  # Part 1: Find administration of Philip Brian Scott, a soccer player
  ?person rdfs:label ""Philip Brian Scott""@en .
  ?person dbo:soccerPlayer true .
  ?person dbo:administration ?administration1 .

  # Part 2: Find the country of administration for person born on 1955-01-26
  ?person2 a dbo:Person ;
           dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1955 && MONTH(?date) = 1 && DAY(?date) = 26)
  OPTIONAL { ?person2 dbo:administration ?admin2 . }
  ?admin2 dbo:country ?country2
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
465,9,test,"Give me the death place of the native of Prague and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Czech_Republic .
  ?person dbo:birthPlace dbr:Prague .
  
  ?organization a dbo:PoliticalParty, dbo:Organization .
  ?organization dbo:leader ?person .
  ?organization dbo:memberOf dbr:Chamber_of_Deputies_of_the_Czech_Republic .

  ?person dbo:deathPlace ?deathPlace .
}
```",4,6,5,2,2,2,2,9,0,0,8,0,0.0,0
161,69,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Identify military forces related to societal events and conflicts during Francoist Spain
  ?event a dbo:SocietalEvent ;
         dbo:militaryConflict ?conflict .
  
  ?conflict dbo:place ?location .
  FILTER (CONTAINS(LCASE(?location), ""francoist spain""))

  ?militaryForce dbo:participatedInMilitaryConflict ?conflict .

  # Identify Francisco Largo Caballero's involvement
  dbr:Franco_Largo_Caballero a dbo:Person ;
                             dbo:militaryConflict ?conflict .
  
  # Identify the commander in the event known as ""El Director""
  ?event2 a dbo:Event ;
          dbo:commander ?commander .

  FILTER (CONTAINS(LCASE(?event2), ""el director""))

}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
488,28,test,Give me the death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tokugawaDeathPlace ?goYozeiAdministration ?boshinCommanderBirthPlace WHERE {
  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?tokugawaDeathPlace .

  # Emperor Go-Yōzei's administration period
  dbr:Emperor_Go-Yozei dbo:reign ?goYozeiAdministration .

  # Commander in the Boshin War (assuming Ōmura Masujirō as an example)
  dbr:Ōmura_Masujirō dbo:birthPlace ?boshinCommanderBirthPlace .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
701,68,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v5 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Seti I's child
  ?childSetiI dbo:child dbr:Seti_I .
  
  # Step 2: Grandchild of Seti I
  ?grandChildSetiI dbo:child ?childSetiI .

  # Step 3: Merneptah's father
  ?merneptah a dbo:Person ;
             dbo:father ?fatherMerneptah .
  
  # Step 4: Spouse of Merneptah's father
  ?spouseFatherMerneptah dbo:spouse ?fatherMerneptah .

  # Step 5: Amun-her-khepeshef's spouse
  ?amunHerKhepeshef a dbo:Person ;
                    dbo:spouse ?spouseAmunHerKhepeshef .
  
  # Step 6: Child of Amun-her-khepeshef's spouse
  ?childSpouseAmunHerKhepeshef dbo:child ?spouseAmunHerKhepeshef .

  # Step 7: Parent of that child
  ?parent dbo:child ?childSpouseAmunHerKhepeshef .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
754,19,test,Give me the parent of the parent of May Hnin Htapi and parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandparent1 ?parent2 WHERE {
  # Part 1: Parent of the parent of May Hnin Htapi
  OPTIONAL {
    ?mayHninHtapi a dbo:Person ;
                  rdfs:label ""May Hnin Htapi""@en .
    ?mayHninHtapi dbo:parent ?parent1 .
    ?parent1 dbo:parent ?grandparent1 .
  }

  # Part 2: Parent of the child of Ram Khamhaeng the Great
  OPTIONAL {
    ?ramKhamhaeng a dbo:Person ;
                  rdfs:label ""Ram Khamhaeng the Great""@en .
    ?ramKhamhaeng dbo:child ?child1 .
    ?child1 dbo:parent ?parent2 .
  }
}
```",5,5,6,3,2,3,2,20,1,0,0,1.0,1.0,1.0
701,51,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?commander dbo:participatedInBattle dbr:Battle_of_Perire .
  ?father dbo:child ?commander .
  ?father dbo:spouse ?spouse .
  ?spouse a dbo:RoyalFamilyMember .
  
  ?ramessesChild dbo:parent dbr:Ramesses_II .
  ?spouse dbo:child ?ramessesChild .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
747,48,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Find Tracey Elizabeth McSween's death date
  ?tracey a dbo:Person ;
          rdfs:label ""Tracey Elizabeth McSween""@en ;
          dbo:deathDate ?deathDate .

  # Find an athlete who is also a soccer player, born in Zolotonosha with the same birth date as Tracey's death date
  ?athlete a dbo:Athlete, dbo:SoccerPlayer ;
           dbo:birthPlace dbr:Zolotonosha ;
           dbo:birthDate ?birthDate .
  
  FILTER (?deathDate = ?birthDate)

  # Find the band associated with Tracey Elizabeth McSween
  ?tracey dbo:bandMember ?band .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,52,test,"Give me the manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Yōichi Masuzoe's native residence (country)
SELECT ?residence WHERE {
  dbr:Yōichi_Masuzoe dbo:nativePlace ?place .
  ?place a dbo:Country .
  BIND(?place AS ?residence)
}

# Step 2: Identify a person born in 1958 and their alma mater
SELECT DISTINCT ?person ?almaMater WHERE {
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1958)
  ?person dbo:almaMater ?institution .
  ?institution a dbo:University ;
               dbo:country dbr:Japan .
}

# Step 3: Determine the manager of Júbilo Iwata for the 2013 season
SELECT DISTINCT ?manager WHERE {
  dbr:Júbilo_Iwata_2013_season dbo:manager ?manager .
}

# Final Query: Combine information to find the correct manager
SELECT DISTINCT ?manager WHERE {
  # Manager from Yōichi Masuzoe's native country
  ?manager dbo:nationality ?residence .

  # Manager attended alma mater of person born in 1958
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1958)
  ?person dbo:almaMater ?almaMater .
  ?manager dbo:almaMater ?almaMater .

  # Manager of Júbilo Iwata for the 2013 season
  dbr:Júbilo_Iwata_2013_season dbo:manager ?manager .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
16,68,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  ?gigi a dbo:Person ;
        rdfs:label ""Gigi Rice""@en .
  
  # Find Ted McGinley's birth name
  ?ted a dbo:Person ;
       rdfs:label ""Ted McGinley""@en .

  # Get the person born as Gigi Rice's birth name
  ?gigiBirthName dbo:birthName ?gigiLabel .
  ?person1 a dbo:Person ;
           dbo:birthName ?gigiLabel .

  # Get the spouse of the person born as Ted McGinley's birth name
  ?tedBirthName dbo:birthName ?tedLabel .
  ?person2 a dbo:Person ;
           dbo:birthName ?tedLabel .
  
  ?person2 dbo:spouse ?spouse .

  # Ensure this spouse is linked to the actor from ""Unnatural (TV series)""
  ?unnatural dbr:Unnatural_(TV_series) ;
             dbo:actor ?actor .
  
  ?spouse dbo:profession ?actor .
  
  FILTER (?person1 = ?person)
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
328,57,test,"Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Awardee of Order of Suvorov
  ?person dbo:award dbr:Order_of_Suvorov .

  # Commander in the force at Budapest (assuming there's a property for military command)
  ?commanderRole dbo:militaryCommander ?person ;
                 dbo:location dbr:Budapest .
  
  # Leader of an office that is a government agency under Joseph Stalin
  ?office dbo:headOf ?person ;
          dbo:leader dbr:Joseph_Stalin ;
          rdf:type dbo:GovernmentAgency .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
161,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Identify ""El Director""
SELECT ?elDirector WHERE {
  ?elDirector rdfs:label ""El Director""@en .
}

# Step 2: Find the predecessor of Indalecio Prieto
SELECT ?predecessor WHERE {
  ?indalecioPrieto dbo:predecessor ?predecessor .
  ?indalecioPrieto rdfs:label ""Indalecio Prieto""@en .
}

# Step 3: Determine military forces and events for ""El Director""
SELECT ?militaryForce WHERE {
  ?elDirector dbo:commander ?militaryForce .
  ?militaryForce a dbo:MilitaryConflict .
}

# Step 4: Find the decedent at Francoist Spain's military force
SELECT ?decedentMilitaryForce WHERE {
  ?francoistSpain dbo:militaryForce ?decedentMilitaryForce .
  ?decedentMilitaryForce a dbo:SocietalEvent ;
                        a dbo:MilitaryConflict .
}

# Step 5: Find the predecessor of Indalecio Prieto in military forces
SELECT ?predecessorMilitaryForce WHERE {
  ?indalecioPrietoPredecessor dbo:militaryForce ?predecessorMilitaryForce .
  ?predecessorMilitaryForce a dbo:MilitaryConflict ;
                           a dbo:SocietalEvent .
}
```",9,15,10,3,3,3,3,71,0,0,32,0,0.0,0
915,17,test,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Find Lizzie Spaulding's parent
  ?lizzie a dbo:FictionalCharacter ;
          dbo:child ?parent .
  
  FILTER (str(?lizzie) = ""Lizzie_Spaulding"") .

  # Ensure the parent is also a fictional and soap character
  ?parent a dbo:FictionalCharacter ;
          dbo:soapCharacter true .

  # Find the father of Lizzie's parent, who must be a resident of Springfield, Illinois
  ?parent dbo:spouseOrPartner ?grandfather .
  
  FILTER (str(?parent) != str(?grandfather)) . # Ensure it is not the same person

  # The grandfather should also be a fictional and soap character
  ?grandfather a dbo:FictionalCharacter ;
              dbo:soapCharacter true .

  # Check if the grandfather resides in Springfield, Illinois
  ?grandfather dbo:residence dbr:Springfield,_Illinois .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
617,46,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Antiochus III the Great
  ?antiochus3 a dbo:Person ;
              rdfs:label ""Antiochus III the Great""@en .
  
  # Find his child
  ?child dbo:parent ?antiochus3 .

  # Find the grandchild (child of Antiochus III's child)
  ?grandchild dbo:parent ?child .

  # Ensure the grandchild is royalty and successor of Antiochus II Theos
  ?antiochus2 a dbo:Person ;
              rdfs:label ""Antiochus II Theos""@en .
  
  ?grandchild dbo:successor ?antiochus2 ;
              a dbo:Monarch .

  # Find the spouse of the grandchild
  ?spouse dbo:spouse ?grandchild .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
767,38,test,Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  # Find the alter ego of Black Hood
  ?blackHood a dbo:FictionalCharacter ;
             rdfs:label ""Black Hood""@en .
  
  ?alterEgo dbo:alias ?blackHoodAlias .
  FILTER(CONTAINS(LCASE(?blackHoodAlias), ""black hood"")) .

  # Find the alma mater of the alter ego
  ?alterEgo dbo:almaMater ?almaMater1 .

  # Find George K. Nash and his alma mater
  dbr:George_K._Nash a dbo:Person ;
                     dbo:almaMater ?almaMater2 .

  # Check if the alma maters are the same
  FILTER(?almaMater1 = ?almaMater2)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
161,67,test,"Give me the military force of Rif War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?rifWarForce ?rifWarCommander ?predecessor ?societalEvent ?militaryConflict WHERE {
  # Find ""El Director"" and his military force in the Rif War
  ?elDirector a dbo:Person ;
              rdfs:label ""El Director""@en .
  
  ?rifWar a dbo:MilitaryConflict ;
          dbo:participatingMilitaryForce ?rifWarForce ;
          dbo:commander ?rifWarCommander .

  ?rifWarForce dbo:member ?elDirector .

  # Find Indalecio Prieto's predecessor
  ?prieto a dbo:Person ;
          rdfs:label ""Indalecio Prieto""@en .
  
  ?predecessor a dbo:Person ;
               dbo:successor ?prieto ;
               dbo:militaryForce ?militaryForce .

  # Find societal event and military conflict related to predecessor's force
  ?societalEvent a dbo:SocietalEvent ;
                 dbo:relatedMilitaryConflict ?militaryConflict .
  
  ?militaryConflict dbo:participatingMilitaryForce ?militaryForce .
}
```",7,10,8,3,3,3,3,71,0,0,11,0,0.0,0
767,55,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?settlement ?alterEgo WHERE {
  # Alma mater of George K. Nash's administration
  ?administration a dbo:GovernmentAgency ;
                  dbo:member dbr:George_K._Nash .
  ?administration dbo:almaMater ?almaMater .

  # Entity in the administration that is a settlement and related to Green
  ?entityInAdmin a dbo:Settlement ;
                 dbo:memberOf ?administration ;
                 rdfs:label ?settlementLabel .
  FILTER(CONTAINS(LCASE(?settlementLabel), ""green""))

  # Alter ego of Black Hood (assuming it's a fictional character)
  ?fictionalCharacter a dbo:FictionalCharacter ;
                      rdfs:label ""Black Hood"" ;
                      dbo:alterEgo ?alterEgo .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
429,8,test,"Give me the administration of Andrew Johnson and country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationStartYear ?administrationEndYear ?militaryForceCountry WHERE {
  # Andrew Johnson's administration
  VALUES ?andrewJohnson { dbr:Andrew_Johnson }
  
  ?andrewJohnson dbo:presidencyStartYear ?administrationStartYear .
  ?andrewJohnson dbo:presidencyEndYear ?administrationEndYear .

  # Military force in the Camden Expedition
  ?expedition dbo:militaryForce ?militaryForce .
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:country ?militaryForceCountry .

  FILTER (?expedition = dbr:Civil_War_Camden_Expedition)
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
701,48,test,Give me the spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Merneptah's father
  ?merneptah a dbo:Person ;
             rdfs:label ""Merneptah""@en .
  
  ?father dbo:child ?merneptah .

  # Find the spouse of Merneptah's father
  ?spouse dbo:spouse ?father .

  # Find Amun-her-khepeshef and his spouse
  ?amun a dbo:Person ;
        rdfs:label ""Amun-her-khepeshef""@en .
  
  ?amun_spouse dbo:spouse ?amun .

  # Find the child of Amun-her-khepeshef's spouse
  ?child dbo:parent ?amun_spouse .

  # Ensure the parent of this child is the same as the spouse of Merneptah's father
  FILTER (?spouse = ?father)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,55,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  ?dokken a dbo:Person ;
          foaf:name ""Donald Maynard Dokken"" ;
          dbo:musicalArtist ?musicalArtistDokken .

  # Step 2: Find band members of Donald Maynard Dokken
  ?bandMember dbo:bandMember ?musicalArtistDokken .

  # Step 3: Identify Watchtower (band) and its associated musical artists
  dbr:Watchtower a dbo:Band ;
                 dbo:associatedMusicalArtist ?watchtowerArtist .

  # Step 4: Find the associated musical artist of Watchtower's associated artist
  ?watchtowerRelatedArtist dbo:associatedMusicalArtist ?watchtowerArtist .

  # Step 5: Identify Meshuggah as a band, group, and organization
  dbr:Meshuggah a dbo:Band ;
                a dbo:Group ;
                a dbo:Organization .

  # Step 6: Find the band members of Meshuggah
  ?meshuggahMember dbo:bandMember dbr:Meshuggah .

  # Step 7: Find connections between these entities
  ?watchtowerRelatedArtist dbo:associatedMusicalArtist ?meshuggahMember .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
747,26,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Identify the person Amba Shepherd
  dbr:Amba_Shepherd a dbo:Person .
  
  # Find works (songs) written by Amba Shepherd
  ?work dbo:writer dbr:Amba_Shepherd ;
        a dbo:Song .

  # Retrieve the band associated with the song
  ?work dbo:band ?band .
}
```",3,4,4,3,1,3,3,71,0,0,13,0,0.0,0
528,30,test,Give me the war of Irene Morales and force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Irene Morales
  OPTIONAL { 
    dbr:Irene_Morales dbo:participatedIn ?war .
  }
  
  # Narciso Campero Leyes
  OPTIONAL { 
    dbr:Narciso_Campero_Leyes dbo:participatedIn ?war .
  }

  # Orozimbo Barbosa
  OPTIONAL { 
    dbr:Orozimbo_Barbosa dbo:participatedIn ?war .
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
378,30,test,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?carlPontusGahnWar ?commander ?joaquinBlakeWar WHERE {
  # Find the war Carl Pontus Gahn was involved in
  OPTIONAL {
    ?carlPontusGahn a dbo:Person ;
                    foaf:name ""Carl Pontus Gahn"" .
    ?carlPontusGahn dbo:militaryConflict ?carlPontusGahnWar .
  }

  # Find the commander of the Great Siege of Gibraltar
  ?greatSiege dbr:Great_Siege_of_Gibraltar ;
             dbo:commanderOfMilitaryConflicts ?commander .

  # Find the war Joaquín Blake was involved in
  OPTIONAL {
    ?joaquinBlake a dbo:Person ;
                  foaf:name ""Joaquín Blake"" .
    ?joaquinBlake dbo:militaryConflict ?joaquinBlakeWar .
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
16,58,test,Give me the spouse of Ted McGinley and professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Spouse of Ted McGinley
  { 
    ?ted a dbo:Person ;
         rdfs:label ""Ted McGinley""@en .
    ?ted dbo:spouse ?person .
  }
  
  UNION
  
  # Professional in the profession of Satomi Ishihara
  {
    ?satomi a dbo:Person ;
            rdfs:label ""Satomi Ishihara""@en .
    ?satomi dbo:profession ?profession .
    ?person a dbo:Person ;
            dbo:profession ?profession .
  }
  
  UNION
  
  # Person born as the birth name of an alumnus of Ohio State University
  {
    ?alumnus a dbo:Alumnus ;
             dbo:almaMater dbr:Ohio_State_University ;
             dbo:birthName ?name .
    ?person a dbo:Person ;
            rdfs:label ?name .
  }
}
```",6,6,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
404,27,test,Give me the child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Step 2: Find the father of her spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 3: Identify the child of this father
  ?fatherOfSpouse dbo:child ?child .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
281,65,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Find the leader of the 1962 New South Wales state election
  ?leader dbo:officeHolderOf dbr:1962_New_South_Wales_state_election .
  
  # Ensure this leader is a politician and has been awarded Knight Grand Cross of the Order of the Bath
  ?leader a dbo:Politician ;
          dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .

  # Find the birth place country of this leader
  ?leader dbo:birthPlace ?place .
  ?place a dbo:Country ;
         rdfs:label ?country .

  # Heather Roy's profession involves a military unit related to a war
  dbr:Heather_Roy dbo:profession ?militaryUnit .
  ?militaryUnit dbo:partOfWar ?war .
  
  # Ensure the leader is linked through the same war as Heather Roy's military unit
  ?leader dbo:award ?order .
  ?order dbo:awardedFor ?war .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,49,test,"Give me the professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?associatedArtist WHERE {
  # Find The Shadow's alter ego
  ?shadow a dbo:Person ;
          rdfs:label ""The Shadow""@en .
  
  ?alterEgo dbo:alterEgo ?shadow ;
            rdfs:label ?professionalLabel .

  FILTER (lang(?professionalLabel) = 'en')
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?professionalLabel), "" "", ""_""))) AS ?professional)

  # Find the writer associated with The Shadow's alter ego
  ?writer dbo:alterEgo ?shadow ;
          a dbo:Writer .

  # Find the musical artist associated with this writer
  ?associatedArtist dbo:musicalArtist ?writer ;
                    a dbo:MusicalArtist .

  # Identify the album ""What U See Is What U Get""
  ?album a dbo:MusicalWork, dbo:Album ;
         rdfs:label ""What U See Is What U Get""@en .
  
  # Ensure the associated artist is linked to this album
  ?associatedArtist dbo:musicalArtist ?album .

}
```",5,9,6,3,2,3,3,71,0,0,22,0,0.0,0
659,58,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?campaign a dbo:MilitaryConflict .
  ?campaign dbo:name ""German campaign of 1813"" .
  
  ?societalEvent a dbo:SocietalEvent ;
                dbo:reference ?campaign .

  ?conflict a dbo:MilitaryConflict ;
            dbo:reference dbr:Rutger_Jan_Schimmelpenninck ;
            dbo:commanderOf ?regiment .

  ?regiment a dbo:MilitaryUnit ;
            dbo:name ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)"" .
  
  ?campaign dbo:commander ?commander .
}
```",6,11,7,3,3,3,3,71,0,0,7,0,0.0,0
294,26,test,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?keeblesRestingPlace ?marionsBirthSettlement ?awardeesRestingPlace WHERE {
  # Resting place of Edwin A. Keeble
  OPTIONAL { 
    ?edwin a dbo:Person ;
           rdfs:label ""Edwin A. Keeble""@en .
    ?edwin dbo:deathPlace ?keeblesRestingPlace .
  }

  # Entity in the birth place of Marion James that is a settlement
  OPTIONAL {
    ?marion a dbo:Person ;
            rdfs:label ""Marion James""@en .
    ?marion dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:Settlement .
    BIND(?birthPlace AS ?marionsBirthSettlement)
  }

  # Resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army)
  OPTIONAL {
    ?awardee a dbo:Person ;
             dbo:award dbr:Distinguished_Service_Medal_(United_States_Army) .
    ?awardee dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""politician""))
    ?awardee dbo:deathPlace ?awardeesRestingPlace .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
16,22,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseOfTedMcGinley ?personBornAsGigiRice WHERE {
  # Find the spouse of Ted McGinley
  OPTIONAL {
    ?tedMcGinley a dbo:Person ;
                 foaf:name ""Ted McGinley"" .
    ?tedMcGinley dbo:spouse ?spouseOfTedMcGinley .
  }
  
  # Find the person born as Gigi Rice
  OPTIONAL {
    ?personBornAsGigiRice a dbo:Person ;
                          foaf:name ""Gigi Rice""@en .
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
801,61,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?song a dbo:Songs .
  ?song dbo:album ?album .
  ?album rdfs:label ""What U See Is What U Get""@en .
  
  ?artist a dbo:MusicalArtist ;
          dbo:associatedBandMember ?bandMember .

  ?bandMember dbo:associatedMusicalArtist ?writer .
  ?writer a dbo:Writer ;
          dbo:associatedMusicalArtist ?artist .

  ?producer a dbo:Producer ;
            dbo:work ?song .
}
```",6,14,7,3,2,3,3,71,0,0,9,0,0.0,0
182,23,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author ?war WHERE {
  # Step 1: Find an author related to the 2019 Sri Lanka Easter bombings
  ?work dbo:subject dbr:2019_Sri_Lanka_Easter_bombings .
  ?work dbo:author ?author .

  # Step 2: Determine Tamara Kunanayakam's nationality
  dbr:Tamara_Kunanayakam dbo:nationality ?nationalityEntity .

  # Step 3: Find wars related to both the author and the entity from Tamara Kunanayakam's nationality
  OPTIONAL { ?author dbo:relatedTo ?war . }
  OPTIONAL { ?nationalityEntity dbo:relatedTo ?war . }

  FILTER (?war != dbr:None)
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
303,26,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?arnulfoParty ?commanderParty WHERE {
  # Arnulfo Arias Madrid's party
  ?arnulfo a dbo:Person ;
           dbo:birthPlace dbr:Panama ;
           dbo:party ?arnulfoParty .
  FILTER (CONTAINS(LCASE(STR(?arnulfo)), ""arnulfo arias madrid""))

  # Commander in United States invasion of Panama's party
  ?commander a dbo:Person ;
             dbo:occupation dbo:MilitaryCommander ;
             dbo:party ?commanderParty .
  ?invasion dbr:United_States_invasion_of_Panama ;
            dbo:participant ?commander .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
767,62,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  # George F. Kennan's alma mater
  dbr:George_F._Kennan a dbo:Person .
  dbr:George_F._Kennan dbo:almaMater ?almaMater .

  # Dustin Lynch as the writer of ""Where It's At""
  dbr:Dustin_Lynch a dbo:Writer ;
                   dbo:work ?album .
  
  # Album ""Where It's At"" by Dustin Lynch
  ?album rdfs:label ""Where It's At""@en .

  # Settlement related to Dustin Lynch
  ?settlement dbo:location ?location .
  ?location dbo:inhabitant dbr:Dustin_Lynch .

  # Administration entity in the settlement
  ?administration dbo:locatedIn ?settlement .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
801,36,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?album a dbo:MusicalWork ;
         dbo:title ""What U See Is What U Get"" .
  
  ?album dbo:writer ?writer .

  ?writer a dbo:Artist, dbo:MusicalArtist .

  ?writer dbo:associatedBandOrMusicGroup ?artist .
}
```",4,8,5,3,2,3,3,71,0,0,22,0,0.0,0
617,30,test,Give me the child of Antiochus III the Great and spouse of Laodice IV and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Find children of Antiochus III the Great
  ?child dbo:parent dbr:Antiochus_III_the_Great .
  
  # Identify spouse of Laodice IV
  ?spouse dbo:spouse dbr:Laodice_IV .

  # Ensure individual is both a child of Antiochus III and spouse of Laodice IV
  ?individual dbo:parent dbr:Antiochus_III_the_Great .
  ?individual dbo:spouse dbr:Laodice_IV .

  # Check if this individual is also a parent of one of Antiochus's children
  ?antiochusChild dbo:parent ?individual .
  ?antiochusChild dbo:parent dbr:Antiochus_III_the_Great .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,60,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Step 1: Find the musical artist of the album ""What U See Is What U Get""
  ?album a dbo:MusicalAlbum ;
         rdfs:label ""What U See Is What U Get""@en .
  
  ?album dbo:musicalArtist ?artist .

  # Step 2: Check if this artist is also a writer and has an associated musical artist
  OPTIONAL { ?writer dbo:associatedMusicalArtist ?artist . }
  FILTER EXISTS { ?writer a dbo:Writer . }

  # Step 3: Identify The Shadow's alter ego and its professional identity
  ?shadowAlterEgo rdfs:label ""The Shadow""@en ;
                  dbo:alterEgoOf ?trueSelf .
  
  ?trueSelf dbo:professionalIdentity ?artist .

  # Final connection to find the associated musical artist
  ?writer dbo:associatedMusicalArtist ?associatedArtist .
}
```",6,10,7,3,2,3,3,71,0,0,22,0,0.0,0
421,21,test,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Condition 1: Band member of Senidah
  ?bandMemberRelation dbo:member ?person ;
                     dbo:band dbr:Senidah .

  # Condition 2: Native of Socialist Federal Republic of Yugoslavia
  ?person dbo:birthPlace ?place .
  FILTER (str(?place) = ""Socialist_Federal_Republic_of_Yugoslavia"" || 
          str(?place) = ""Yugoslavia"")

  # Condition 3: Born with the birth name Dino Merlin
  ?person foaf:name ?name .
  FILTER (str(?name) = ""Dino Merlin"")
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
48,18,test,"Give me the band of the writer of the work, that is a work, of Shellback (record producer) and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?band2 WHERE {
  # Part 1: Band of the writer of works by Shellback (record producer)
  ?work dbo:recordProducer dbr:Shellback .
  ?writer dbo:work ?work .
  ?writer dbo:band ?band1 .

  # Part 2: Band of the actor who is a musical artist in ""Honor Up""
  ?movie dbo:title ""Honor Up""@en .
  ?actor dbo:actedIn ?movie .
  OPTIONAL { ?actor a dbo:MusicalArtist . }
  ?actor dbo:band ?band2 .

}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
747,64,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shenaBand ?soccerPlayer ?ambasBand WHERE {
  # Find Shena Easton's band
  ?shena a dbo:Person ;
         rdfs:label ""Shena""@en .
  ?shena dbo:musicalBand ?shenaBand .

  # Find the decedent born on the same date as an athlete and soccer player from Zolotonosha
  ?decedent a dbo:Person ;
            dbo:deathPlace dbr:Zolotonosha .
  ?decedent dbo:birthDate ?dateDecedent .
  
  ?soccerPlayer a dbo:Person, dbo:Athlete ;
                dbo:sport dbr:Soccer ;
                dbo:birthDate ?dateSoccer .
  FILTER (?dateDecedent = ?dateSoccer)

  # Find Amba Shepherd's band
  ?ambashepherd a dbo:Person ;
                rdfs:label ""Amba Shepherd""@en .
  ?ambashepherd dbo:musicalBand ?ambasBand .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
54,47,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonPerson WHERE {
  # Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi a dbo:Person ;
                   dbo:child ?child1 .
  ?fatherSoeMinWimalaDewi dbo:child ?child1 ;
                          dbo:spouse ?motherSoeMinWimalaDewi .

  # Find Thado Minsaw of Prome's parent
  ?thadoMinsawOfProme a dbo:Person ;
                      dbo:child ?child2 .
  ?parentThadoMinsawOfProme dbo:child ?child2 ;
                            (dbo:spouse|dbo:father) ?spouseOrFather .

  # Find the child of Soe Min Wimala Dewi's father
  ?fatherSoeMinWimalaDewi dbo:child ?commonPerson .

  # Find the parent of Thado Minsaw of Prome's child
  ?commonPerson dbo:parent ?thadoMinsawOfPromeChild .
}
```",5,5,6,3,2,3,3,71,0,9666,1,0.0,0.0,0
404,60,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childBirthName WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
  
  # Step 2: Find the father of her spouse
  ?spouse dbo:father ?father .

  # Step 3: Identify children of this father who are royalty
  ?child dbo:father ?father ;
         rdf:type dbo:Person ;
         rdfs:label ?childLabel ;
         foaf:name ?childBirthName .
  
  # Ensure the child is royalty
  OPTIONAL { ?child rdf:type dbo:Royalty . }
  
  # Step 4: Match birth name with Princess Victoria Louise of Prussia's birth name
  dbr:Princess_Victoria_Louise_of_Prussia foaf:name ?princessBirthName .
  
  FILTER (?childBirthName = ?princessBirthName)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
197,9,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of the member of FC Politehnica Timișoara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  {
    ?person a dbo:Person .
    ?person dbo:award dbr:Leroy_P._Steele_Prize .
    ?person dbo:birthPlace ?birthPlace .
  }
  UNION
  {
    ?player a dbo:Person .
    ?player dbo:memberOfTeam dbr:FC_Politehnica_Timișoara .
    ?player dbo:birthPlace ?birthPlace .
  }
}
```",4,4,5,2,2,2,2,9,4,159,0,0.024539877300613498,1.0,0.04790419161676646
54,31,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Thinkhaya of Pagan (Thihathu) and his child
  dbr:Thihathu a dbo:Person .
  dbr:Thihathu dbo:child ?child .

  # The child of Thihathu is the parent of Thado Minsaw of Prome
  ?child dbo:parent dbr:Thado_Minsaw_of_Prome .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,26,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  ?person a dbo:Person .
  ?person dbo:award ?award .
  ?award rdfs:label ""Royal Medal""@en .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",3,4,4,3,1,3,3,71,31,96,0,0.2440944881889764,1.0,0.3924050632911393
391,54,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons and native of the figure known as Hub City.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Identify Sherry Hormann's spouse
  ?sherry a dbo:Person ;
          foaf:name ""Sherry Hormann"" .
  
  ?spouse dbo:spouse ?sherry .

  # Step 2: Find the actor of ""All About the Andersons""
  ?film dbo:title ""All About the Andersons""@en ;
        dbo:actor ?actor1 .

  # Step 3: Determine Hub City
  ?hubCity a dbo:Place ;
           foaf:name ""Hub City"" .
  
  # Step 4: Link the actor to Hub City
  ?actor1 dbo:birthPlace ?hubCity .

  # Step 5: Identify the claim to fame of Sherry Hormann's spouse
  ?spouse dbo:film ?claimToFameFilm .

  # Step 6: Find the actor of that work
  ?claimToFameFilm dbo:actor ?actor .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,20,test,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  # Find Eiður Guðjohnsen's birth date
  ?eiður a dbo:SoccerPlayer ;
         dbo:birthDate ?eiðurBirthDate .

  # Find the person born on the same date as Eiður Guðjohnsen
  ?person a dbo:SoccerPlayer, dbo:SoccerManager ;
          dbo:birthDate ?date .
  FILTER (?date = ?eiðurBirthDate)

  # Find Armando Heeb's team
  ?armando a dbo:SoccerPlayer ;
           dbo:team ?team .

  # Ensure the person is part of the same team as Armando Heeb
  ?person dbo:team ?team .

  # Find the sports club that is an organization and a soccer club
  ?team a dbo:SportsClub, dbo:Organization, dbo:SoccerClub .

  # Get the nickname of the player
  ?person dbo:nickname ?nickname .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
617,43,test,"Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Antiochus III the Great
  dbr:Antiochus_III_the_Great a dbo:Person .

  # His child and successor (e.g., Antiochus IV Epiphanes)
  ?successor dbo:childOf dbr:Antiochus_III_the_Great .
  
  # Nysa, wife of Pharnaces I of Pontus
  dbr:Nysa_of_Pontus a dbo:Person ;
                     dbo:spouse dbr:Pharnaces_I_of_Pontus .

  # The child of Antiochus III and parent of Nysa
  ?person dbo:childOf dbr:Antiochus_III_the_Great .
  ?person dbo:parentOf dbr:Nysa_of_Pontus .

  # Spouse of the successor's child
  ?successorChild dbo:childOf ?successor .
  ?spouse dbo:spouse ?successorChild .

  # Ensure royalty status
  ?person a dbo:Royalty ;
          dbo:spouse ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
801,20,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?profession ?producedWork WHERE {
  # Identify 50 Cent as a person and his profession
  dbr:Curtis_Jackson_III a dbo:Person ;
                        dbo:profession ?profession .

  # Find works produced by 50 Cent that are songs or musical works
  OPTIONAL { 
    ?producedWork dbo:producer dbr:Curtis_Jackson_III .
    ?producedWork a ?workType .
    
    FILTER (
      ?workType = dbo:Songs || 
      ?workType = dbo:MusicalWork ||
      ?workType = dbo:Song
    )
  }
}
```",3,6,4,2,2,3,3,71,0,0,27,0,0.0,0
360,21,test,Give me the writer of The Roaring Silence and native of Johannesburg and reference to the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?blindedByTheLightAuthor WHERE {
  # Find the writer of ""The Roaring Silence""
  ?book a dbo:Book .
  ?book rdfs:label ""The Roaring Silence""@en .
  ?book dbo:author ?writer .

  # Ensure the writer is native to Johannesburg
  ?writer dbo:birthPlace dbr:Johannesburg .

  # Find the author of ""Blinded by the Light""
  ?blindedBook a dbo:Book .
  ?blindedBook rdfs:label ""Blinded by the Light""@en .
  ?blindedBook dbo:author ?blindedByTheLightAuthor .

  # Optional: Add any additional filters or conditions if needed
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
801,39,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of Westside Story (song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musicalArtist WHERE {
  # Step 1: Find the writer of the album ""What U See Is What U Get""
  ?album a dbo:Album ;
         rdfs:label ""What U See Is What U Get""@en .
  
  ?writer dbo:writer ?album ;
          a dbo:Writer, dbo:Artist .

  # Step 2: Find the producer of ""Westside Story (song)""
  ?producer dbo:producer dbr:Westside_Story_(song) .

  # Step 3: Find the associated musical artist
  ?musicalArtist dbo:associatedMusicalArtist ?writer ;
                 dbo:associatedMusicalArtist ?producer .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
314,26,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of 30.","SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Deceased at the headquarter of House of Sombrerete
  ?person dbo:deathPlace dbr:Headquarters_of_the_House_of_Sombrerete .

  # Commander in their profession
  ?person dbo:occupation dbr:Commander .

  # Associated with an event and societal event related to Lisa Gavrić
  ?event a dbo:Event .
  ?societalEvent a dbo:SocietalEvent .
  ?event dbo:associatedWith dbr:Lisa_Gavrić .
  ?societalEvent dbo:associatedWith dbr:Lisa_Gavrić .
  ?person dbo:associatedWith ?event .
  ?person dbo:associatedWith ?societalEvent .

  # Awardee of 30
  ?award a dbo:Award .
  ?award dbo:number ""30""^^xsd:int .
  ?person dbo:honoraryTitle ?award .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
281,57,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOfBeauchampSeymour ?birthPlaceCountry ?heatherRoyWar WHERE {
  # Beauchamp Seymour's war
  ?beauchampSeymour a dbo:Person ;
                   foaf:name ""Beauchamp Seymour""@en .
  ?warOfBeauchampSeymour dbo:participant ?beauchampSeymour .

  # Leader of the 1962 New South Wales state election
  ?election dbr:1962_New_South_Wales_state_election ;
           dbo:leader ?leader .
  ?leader a dbo:Politician ;
          dbo:birthPlace ?birthPlace .
  ?birthPlaceCountry a dbo:Country .

  # Heather Roy's military unit war
  ?heatherRoy a dbo:Person ;
              foaf:name ""Heather Roy""@en .
  ?profession dbo:occupation ?militaryUnit .
  ?militaryUnit a dbo:MilitaryUnit ;
                dbo:participatedIn ?heatherRoyWar .

  # Filters to ensure correct relationships
  FILTER (?birthPlace = ?leader)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,63,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativeOfResidence WHERE {
  # Sylvie Bermann's native place of residence
  ?sylvie a dbo:Person ;
          dbo:birthPlace ?residence .
  
  # Ensure the residence is a settlement and British
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Sean Pertwee's claim to fame (film)
  ?sean a dbo:Actor ;
        dbo:filmography ?film .
  
  # Sean Pertwee's claim to fame (military conflict)
  ?sean dbo:militaryConflict ?conflict .

  # Jon Pertwee's birth name
  ?jon a dbo:Person ;
       foaf:name ?birthName .

  # Ensure the child of the person with Jon Pertwee's birth name is Sean Pertwee
  ?child a dbo:Person ;
         foaf:name ?seanName .
  FILTER (?seanName = ""Sean Pertwee"")
  ?jon foaf:parent ?child .

  # Linking all parts together
  FILTER(?sylvie != ?sean && ?sean != ?jon)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
659,63,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the commander of the 1st Light Cavalry Lancers Regiment during a war
  ?regiment a dbo:Regiment ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  
  ?war a dbo:MilitaryConflict .

  ?regiment dbo:participatedIn ?war ;
            dbo:commander ?commander1 .

  # Find Rutger Jan Schimmelpenninck's military force and its commander
  dbr:Rutger_Jan_Schimmelpenninck a dbo:Person ;
                                   dbo:militaryForce ?force .
  
  ?force dbo:participatedIn ?war2 ;
         dbo:commander ?commander2 .

  # Ensure the same commander is linked to both entities
  FILTER (?commander1 = ?commander2)
}
```",7,13,8,3,3,3,3,71,0,0,15,0,0.0,0
232,31,test,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Jon Pertwee's birth name
  ?pertwee a dbo:Person ;
           foaf:name ""Jon Pertwee"" ;
           dbo:birthName ?birthName .

  # Find children of the person with that birth name
  ?child a dbo:Person ;
         dbo:parent ?pertwee ;
         foaf:name ?childName .

  # Find actors in Dog Soldiers (film)
  dbr:Dog_Soldiers_(2002_film) dbo:actor ?actor .
  
  # Check if any actor is Jon Pertwee's child
  FILTER (?actor = ?child)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
528,60,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?militaryForce ?war WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Narciso Campero"" .
  
  OPTIONAL { 
    ?person dbo:militaryService ?militaryForce .
    ?militaryForce dbo:participatedIn ?war .
    ?war dbo:location dbr:Chile .
    FILTER (strstarts(str(?war), ""War""))
  }
}
```",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
232,24,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find Sean Pertwee's films and military conflicts
  ?pertwee a dbo:Person ;
           foaf:name ""Sean Pertwee""@en ;
           dbo:nativePlace dbr:London .

  OPTIONAL { 
    ?film dbo:starring ?pertwee .
    ?film dbo:actor ?actor .
  }
  
  OPTIONAL {
    ?conflict dbo:participant ?pertwee .
    ?conflict dbo:actor ?actor .
  }

  # Ensure the actor is native of London
  ?actor dbo:nativePlace dbr:London .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
659,53,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find a person who was an office holder in the Kingdom of Ireland and involved in military leadership
  ?person dbo:officeHolderOf dbr:Kingdom_of_Ireland .
  ?person dbo:militaryCommanderOf ?battle .

  # Ensure this person commanded at the Battle of Leipzig
  ?battle dbr:Battle_of_Leipzig .

  # Connect to events related to Rutger Jan Schimmelpennink
  ?event dbo:relatedTo dbr:Rutger_Jan_Schimmelpenninck .
  ?person dbo:militaryCommanderOf ?event .

  # Ensure the person is a societal event and military conflict
  ?event rdf:type dbo:SocietalEvent ;
         dbo:isPartOf ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict .
}
```",6,10,7,3,3,3,3,71,0,0,6,0,0.0,0
54,59,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:childOf dbr:Thinkhaya_of_Pagan .
  
  # Thado Minsaw's parent
  ?thadoParent dbo:parentOf dbr:Thado_Minsaw_of_Prome .

  # The person we are looking for is a child of Thinkhaya and a parent of the child of Thado Minsaw's parent
  ?person dbo:childOf dbr:Thinkhaya_of_Pagan .
  ?person dbo:parentOf ?thadoParentChild .
  
  # Ensure that ?thadoParentChild is indeed a child of Thado Minsaw's parent
  ?thadoParent dbo:hasChild ?thadoParentChild .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
10,25,test,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Query for Luke Francis Vibert's band members
  OPTIONAL {
    ?vibert a dbo:Person ;
            foaf:name ""Luke Francis Vibert"" .
    ?vibert dbo:birthDate ?dateVibert .
    ?vibert dbo:bandMemberOf ?bandMember .
  }
  
  # Query for Matt Colton's associated musical artists
  OPTIONAL {
    ?colton a dbo:Person ;
            foaf:name ""Matt Colton"" .
    ?colton dbo:birthDate ?dateColton .
    ?colton dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
801,54,test,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Find the alter ego known as ""The Shadow""
  ?shadow a dbo:Person ;
          rdfs:label ""The Shadow""@en .
  
  # Identify the musical work produced by this person
  ?work dbo:producer ?producer ;
        a dbo:Songs .

  # Check if the producer is associated with Chris Taylor (music producer)
  ?producer dbo:associatedMusicalArtist dbr:Chris_Taylor_(music_producer) ;
            a dbo:MusicalArtist .
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
994,49,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find associated musical artist of Watchtower
  ?watchtower a dbo:Band ;
              dbo:associatedMusicalArtist ?artist1 .
  
  FILTER (str(?watchtower) = ""Watchtower_(band)"")

  # Step 2: Find associated musical artist of the first artist
  ?artist1 dbo:associatedMusicalArtist ?artist2 .

  # Step 3: Identify band member who is a musical artist and born as Don Dokken
  ?dokken a dbo:Person ;
          foaf:name ""Don Dokken"" ;
          dbo:birthDate ?date .
  
  ?bandMember a dbo:BandMember ;
              dbo:associatedMusicalArtist ?artist2 ;
              dbo:bandMemberOf ?band .

  # Ensure the band member is also a musical artist
  ?bandMember a dbo:MusicalArtist .

  # Step 4: Return the final associated musical artist
  BIND(?artist2 AS ?finalArtist)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,28,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v5 . ?v5 <http://dbpedia.org/ontology/province> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  
  # Country in the region of Central European Time
  ?timeZoneRegion a dbo:TimeZone ;
                  dbo:timezoneName ""Central European Time"" .
  ?country dbo:timeZone ?timeZoneRegion .

  # Sports event located in Aguilar de Segarra
  ?sportsEvent a dbo:SportsEvent ;
               dbo:eventLocation dbr:Aguilar_de_Segarra .
  ?country dbo:sportingEvents ?sportsEvent .

  # Sebastiano Bianchetti's residence details
  ?residence a dbo:Residence ;
             dbo:settlement true ;
             dbo:resident dbr:Sebastiano_Bianchetti .
  ?province dbo:residence ?residence .
  ?country dbo:province ?province .
  
  # Sebastiano Bianchetti is Italian
  ?sebastianBianchetti a dbo:Person ;
                       dbo:nationality dbr:Italy .
  FILTER (?sebastianBianchetti = dbr:Sebastiano_Bianchetti)
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
356,18,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  # Find the person native to Wolverhampton who is a soccer player and manager
  ?person dbo:nativePlace dbr:Wolverhampton .
  ?person a dbo:SoccerPlayer ;
          a dbo:SoccerManager .

  # Identify the predecessor season of the 2015 Sacramento Republic FC season
  ?predecessorSeason dbo:successor ?sacramento2015 .
  ?sacramento2015 rdfs:label ""2015 Sacramento Republic FC season""@en .

  # Find the successor of that predecessor season
  ?season dbo:predecessor ?predecessorSeason ;
          a dbo:SoccerClubSeason .

  # Determine the team associated with this person during that season
  ?person dbo:team ?team .
  ?team dbo:season ?season .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
312,8,test,Give me the entity in the birthplace of Giorgio Grigolli and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Entity in the Birthplace of Giorgio Grigolli
SELECT ?entityInBirthplace WHERE {
  ?grigolli a dbo:Person ;
            foaf:name ""Giorgio Grigolli""@en ;
            dbo:birthPlace ?birthPlace .
  
  ?birthPlace dbo:location ?entityInBirthplace .
}

# Part 2: Entity in Province of Bergamo
SELECT ?entityInBergamo WHERE {
  ?bergamo a dbo:Province ;
           foaf:name ""Province of Bergamo""@en .

  ?entityInBergamo dbo:locatedIn ?bergamo .
}
```",3,3,4,2,2,2,2,9,0,0,228,0,0.0,0
314,22,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Find Sergei Makovetsky's award
  ?sergei a dbo:Person ;
          foaf:name ""Sergei Makovetsky""@en .
  ?sergei dbo:award ?award .

  # Find the awardee who received the same award and died at the specified location
  ?awardee a dbo:Person ;
           dbo:award ?award ;
           dbo:deathPlace dbr:House_of_Sombrerete_Headquarters .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
54,51,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin .
  ?child a dbo:Person .
  ?child dbo:officeHolder ?office .
  ?child dbo:royalty ?royalty .

  # Find the predecessor of this person in terms of holding office
  ?predecessor dbo:succeededBy ?child .
  ?predecessor a dbo:Person .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
182,28,test,Give me the war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?gotabhayaWork ?tamaraNationalityEntity ?easterBombingAuthor WHERE {
  # Gotabhaya Rajapaksa's works or related entities
  OPTIONAL {
    ?gotabhaya a dbo:Person .
    ?gotabhaya foaf:name ""Gotabhaya Rajapaksa"" .
    ?gotabhaya dbo:occupation ?work .
    BIND(?work AS ?gotabhayaWork)
  }

  # Tamara Kunanayakam's nationality
  OPTIONAL {
    ?tamara a dbo:Person .
    ?tamara foaf:name ""Tamara Kunanayakam"" .
    ?tamara dbo:nationality ?nationality .
    ?nationality rdfs:label ?tamaraNationalityEntity .
    FILTER(LANG(?tamaraNationalityEntity) = 'en')
  }

  # Author of works related to the 2019 Sri Lanka Easter bombings
  OPTIONAL {
    ?easterEvent a dbo:Event .
    ?easterEvent foaf:name ""2019 Sri Lanka Easter bombings"" .
    ?workRelatedToEvent dbo:subject ?easterEvent .
    ?author dbo:author ?workRelatedToEvent .
    ?author foaf:name ?easterBombingAuthor
  }
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
959,61,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers season
  ?team a dbo:SoccerTeam ;
        dbo:season ?season .
  FILTER (STR(?season) = ""1998 Kashima Antlers"")
  
  ?team dbo:coach ?manager .

  # Step 2: Ensure this person is a sports manager
  ?manager a dbo:SportsManager .

  # Step 3: Find the leader during the 2010 Japanese House of Councillors election and their residence
  ?election dbr:Japanese_House_of_Councillors_election,_2010 ;
           dbo:leader ?leader .
  
  ?leader dbo:residenceCountry ?countryResidence .

  # Step 4: Determine the native country of this leader
  ?leader dbo:nationality ?nativeCountry .

  # Step 5: Find a manager who is native to that country
  ?manager2 a dbo:SportsManager ;
            dbo:nationality ?nativeCountry .
}
```",6,9,7,3,2,3,3,71,0,0,6,0,0.0,0
179,18,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of Bhumibol Adulyadej.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?child a dbo:Person ;
         dbo:parent dbr:Nakkhatra_Mangala ;
         dbo:royalty true .
  
  ?person a dbo:Person ;
          dbo:parent ?child .

  ?grandchild a dbo:Person ;
              dbo:parent ?person ,
                      dbr:Bhumibol_Adulyadej .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
547,36,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the resting place of James Burton (Egyptologist)
SELECT ?restingPlace WHERE {
  ?person a dbo:Person ;
          rdfs:label ""James Burton (Egyptologist)""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}

UNION

# Query for the resting place of the awardee(s) of Gerald Graham's award
SELECT ?awardeeRestingPlace WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Gerald Graham Award""@en .
  ?recipient dbo:award ?award .
  OPTIONAL { ?recipient dbo:deathPlace ?awardeeRestingPlace . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
427,51,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of Lamberto Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiBirthName ?prodiParty ?andreottiFatherParty WHERE {
  # Romano Prodi details
  ?prodi a dbo:Person ;
         foaf:name ""Romano Prodi""@en ;
         dbo:birthName ?prodiBirthName ;
         dbo:partyAffiliation ?prodiParty .
  
  # Lamberto Andreotti's father details
  ?andreottiFather a dbo:Person ;
                  foaf:name ""Giuseppe Andreotti""@it ;
                  dbo:partyAffiliation ?andreottiFatherParty .

  # Ensure Romano Prodi is an office holder and politician
  ?prodi dbo:officeHolderOf ?office .
  ?prodi dbo:occupation dbr:Politician .
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
747,50,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?traceyBand ?songWriterBand WHERE {
  # Part 1: Band of Tracey Elizabeth McSween
  OPTIONAL {
    ?person a dbo:Person ;
            rdfs:label ""Tracey Elizabeth McSween""@en .
    ?person dbo:band ?traceyBand .
  }

  # Part 2: Band of the writer of a song by Amba Shepherd
  OPTIONAL {
    ?song a dbo:Songs ;
          dbo:lyricist ?writer ;
          dbo:work dbr:Amba_Shepherd_song .
    ?writer dbo:band ?songWriterBand .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,28,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Find the mayor of Northern Ireland Forum who is also associated with QUB
  ?mayor a dbo:Person ;
         dbo:politician true ;
         dbo:almaMater ?qubAlmaMater .
  
  ?qubAlmaMater rdfs:label ""Queen's University Belfast""@en .

  # Find Allen Hill's alma mater
  dbr:Allen_Hill dbo:almaMater ?allenHillAlmaMater .

  # Check if there is a common alma mater
  FILTER (?qubAlmaMater = ?allenHillAlmaMater)
  
  BIND(?qubAlmaMater AS ?almaMater)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
9,70,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organisation WHERE {
  ?organisation a dbo:Organisation .
  ?organisation dbo:location dbr:Northern_Ireland .
  ?organisation dbo:nickname ?nickname .

  ?person1 dbo:nickname ?nickname ;
           dbo:almaMater ?organisation ;
           a dbo:Politician .

  ?mayor a dbo:Mayor ;
         dbo:office dbr:Northern_Ireland_Forum ;
         dbo:almaMater ?organisation .
  
  ?awardee dbo:award dbr:Royal_Medals ;
           dbo:almaMater ?organisation .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
184,52,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Archduke Joseph Karl of Austria
  dbr:Archduke_Joseph_Karl_of_Austria a dbo:Person .
  
  # His children (grandparents)
  ?child1 dbo:parent dbr:Archduke_Joseph_Karl_of_Austria ;
          a dbo:Person .

  # Their children (Joseph Karl's grandchildren)
  ?grandchild dbo:parent ?child1 ;
              a dbo:Person .

  # Check if this grandchild is a parent of Archduchess Ilona
  ?grandchild dbo:child dbr:Archduchess_Ilona_of_Austria .

  # Check if the person is native to a landmark with elevation 96.0 and is a settlement
  ?landmark a dbo:Settlement ;
            dbo:elevation ""96.0""^^xsd:float .
  
  ?grandchild dbo:nativePlace ?landmark .

  BIND(?grandchild AS ?person)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
391,52,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of All About the Andersons and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Step 1: Find the person associated with Jackson, Tennessee nickname
  ?person a dbo:Person .
  ?person dbo:nativePlace ?place .
  FILTER (str(?place) = ""Jackson, Tennessee"") .

  # Step 2: Ensure this person acted in ""All About the Andersons""
  ?film a dbo:Film ;
        dbo:title ""All About the Andersons"" ;
        dbo:starring ?person .

  # Step 3: Check if they have a claim to fame involving Michael Ballhaus
  ?work dbo:director dbr:Michael_Ballhaus .
  ?person dbo:filmography ?work .

  # Step 4: Return their native place
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
994,47,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonArtist WHERE {
  # Step 1: Find Watchtower band resource
  ?watchtower a dbo:Band ;
              rdfs:label ""Watchtower (band)""@en .

  # Step 2: Find associated musical artist of Watchtower
  ?watchtower dbo:associatedMusicalArtist ?artist1 .

  # Step 3: Find Fredrik Thordendal's band that is an organization
  ?thordendalBand a dbo:Organization ;
                  dbo:bandMember dbr:Fredrik_Thordendal .

  # Step 4: Find associated musical artist of Fredrik Thordendal's band
  ?thordendalBand dbo:associatedMusicalArtist ?artist2 .

  # Step 5: Determine common associated musical artist
  FILTER (?artist1 = ?artist2)
}
```",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
659,66,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Arthur Wellesley's command role
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:commander ?militaryForce .
  
  # Military conflict involving Rutger Jan Schimmelpenninck
  ?societalEvent a dbo:SocietalEvent ;
                dbo:militaryConflict ?conflict1 .
  dbr:Rutger_Jan_Schimmelpenninck dbo:involvedInMilitaryConflict ?conflict1 .

  # Military conflict involving the 1st Light Cavalry Lancers Regiment
  ?conflict2 a dbo:MilitaryConflict ;
             dbo:militaryUnit dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
  
  # Linking conflicts through common commanders or events
  ?commander dbo:involvedInMilitaryConflict ?conflict1, ?conflict2 .
}
```",7,12,8,3,3,3,3,71,0,0,15,0,0.0,0
547,65,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace WHERE {
  # Part 1: Resting place of the actor from the show with Emily Richard
  {
    ?show dbo:actor ?actor .
    ?actor dbo:birthName ""Emily Richard""@en .
    OPTIONAL { ?actor dbo:finalRestingPlace ?restingPlace . }
  }

  UNION

  # Part 2: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    OPTIONAL { ?person dbo:finalRestingPlace ?restingPlace . }
  }

  UNION

  # Part 3: Resting place of the child of James Burton (property developer)
  {
    ?james a dbo:Person ;
           foaf:name ""James Burton""@en ;
           dbo:occupation dbr:Property_developer .
    ?child dbo:parent ?james .
    OPTIONAL { ?child dbo:finalRestingPlace ?restingPlace . }
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
547,71,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v8 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace WHERE {
  # Part 1: Resting place of the awardee of the award of Gerald Graham
  {
    ?award a dbo:Award .
    ?award dbo:recipient ?person .
    ?geraldGraham dbo:name ""Gerald Graham"" .
    ?geraldGraham dbo:awarded ?award .
    ?person dbo:restingPlace ?restingPlace .
  }
  
  UNION
  
  # Part 2: Resting place of the actor of the show with Emily Richard
  {
    ?show a dbo:TVSeries .
    ?emilyRichard dbo:name ""Emily Richard"" .
    ?emilyRichard dbo:actorIn ?show .
    ?actor dbo:actorIn ?show .
    ?actor dbo:restingPlace ?restingPlace .
  }
  
  UNION
  
  # Part 3: Resting place of the child of the child of William Haliburton
  {
    ?williamHaliburton a dbo:Person ;
                      dbo:name ""William Haliburton"" .
    ?child1 dbo:childOf ?williamHaliburton .
    ?grandChild dbo:childOf ?child1 .
    ?grandChild dbo:restingPlace ?restingPlace .
  }
}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
55,28,test,"Give me the band of the reference, that is a band, to Newsted and band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Jason Newsted's band
  ?newsted a dbo:Person ;
           foaf:name ""Jason Newsted"" .
  ?metallica dbo:member ?newsted .
  
  # John Feldmann and his band
  ?feldmann a dbo:Person ;
            foaf:name ""John Feldmann"" .
  ?goldfinger dbo:bandMember ?feldmann .
  
  # Producer of ""Used to Love Her""
  ?song dbo:title ""Used to Love Her"" ;
        dbo:producer ?feldmann .
  
  # Band member of the San Francisco Symphony
  ?symphonyMember a dbo:Person ;
                  dbo:memberOfBand ?band ;
                  dbo:memberOfOrchestra dbr:San_Francisco_Symphony .

  # Find common band
  VALUES ?commonBand { ?metallica ?goldfinger }
  
  FILTER (?band IN(?commonBand))
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
303,25,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # El Valle de Antón is in Panama
  dbr:El_Valle_de_Antón dbo:locatedInCountry dbr:Panama .

  # Arnulfo Arias was a politician in Panama
  dbr:Arnulfo_Arias a dbo:Politician ;
                   dbo:nationality dbr:Panama .

  # Find the political party of Arnulfo Arias
  ?party dbo:member dbr:Arnulfo_Arias .
  
  # Identify the role of commander in the United States invasion of Panama
  ?commander a dbo:Politician ;
             dbo:role ""Commander""^^xsd:string ;
             dbo:event dbr:United_States_invasion_of_Panama .

  # Link the political party and commander to Arnulfo Arias
  ?party dbo:member ?commander .
  
  # Return the entity (political party or role)
  VALUES ?entity { ?party ?commander }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
404,49,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
           rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  # Step 2: Determine Her Spouse
  ?princess dbo:spouse ?spouse .

  # Step 3: Find the Father of Her Spouse
  ?spouse dbo:father ?father .

  # Step 4: Identify a Child of This Father
  ?child dbo:father ?father ;
         a dbo:Person .

  # Ensure the child is royalty and born as such
  ?child dbo:royaltyStatus ?status .
  FILTER (?status = ""Royal""@en)

  # Bind the result to ?person
  BIND(?child AS ?person)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,62,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?micheleParty ?alumnusFatherParty ?prodiParty WHERE {
  # Michele Pinto's party affiliation
  OPTIONAL { 
    dbr:Michele_Pinto dbo:partyAffiliation ?micheleParty .
  }

  # Alumnus of MIT and their father's party affiliation
  OPTIONAL {
    ?alumnus a dbo:Alumnus ;
             dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
             dbo:father ?father .
    ?father dbo:partyAffiliation ?alumnusFatherParty .
  }

  # Romano Prodi's party affiliation
  OPTIONAL {
    dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
  }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,48,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildRestingPlace ?awardeeRestingPlace WHERE {
  # Part 1: Resting place of the child of the child of William Haliburton
  ?william a dbo:Person ;
           foaf:name ""William Haliburton""@en .
  ?williamChild dbo:child ?grandparentChild .
  ?grandparentChild dbo:child ?grandchild .
  ?grandchild dbo:finalRestingPlace ?grandchildRestingPlace .

  # Part 2: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?awardee a dbo:Person ;
           dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St._George .
  ?awardee dbo:finalRestingPlace ?awardeeRestingPlace .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,38,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Satomi Ishihara's profession
  ?ishihara a dbo:Person ;
            foaf:name ""Satomi Ishihara""@en .
  ?ishihara dbo:profession ?profession .

  # Find Gigi Rice's birth name
  ?rice a dbo:Person ;
        foaf:name ?birthName .
  FILTER (CONTAINS(LCASE(?birthName), LCASE(""Gigi Rice"")))

  # Find the person with both criteria
  ?person a dbo:Person ;
          dbo:profession ?profession ;
          foaf:name ?birthName .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
404,31,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseBirthName WHERE {
  # Find Prince Ernest Augustus of Hanover
  ?person a dbo:Person ;
          rdfs:label ""Prince Ernest Augustus of Hanover""@en ;
          dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1914)

  # Identify his parent(s)
  ?parent dbo:child ?person .

  # Find the spouse of the parent
  ?spouse a dbo:Person ;
          dbo:spouse ?parent .

  # Ensure the spouse is royalty (assuming they have a royal title or similar property)
  OPTIONAL { ?spouse dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }

  # Get the birth name of Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
            rdfs:label ""Victoria Louise of Prussia""@en ;
            dbo:birthName ?spouseBirthName .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,49,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Death at the capital of Khemis Miliana District (Khemis Miliana)
  ?deathPlace1 dbo:capitalOf dbr:Khemis_Miliana_District ;
              rdf:type dbo:Settlement .
  ?person dbo:deathPlace ?deathPlace1 .

  # Death associated with Joseph C. Satterthwaite's work
  ?deathPlace2 dbo:associatedWith dbr:Joseph_C._Satterthwaite ;
               rdf:type dbo:Event .
  ?person dbo:deathPlace ?deathPlace2 .
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
10,20,test,"Give me the professional in  and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find individuals associated with Matt Colton as musical artists
  ?person dbo:associatedMusicalArtist dbr:Matt_Colton .
  
  # Ensure the same individual is a band member of Luke Francis Vibert
  ?bandMemberRelation dbo:bandMember ?person ;
                     dbo:member dbr:Luke_Francis_Vibert .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,66,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ferenc Szálasi's commander in the force
  ?szalasiCommander a dbo:Person ;
                    dbo:commanderOf dbr:Ferenc_Szálasi .

  # Bruce Fraser, 1st Baron Fraser of North Cape's awardee
  ?fraserAward a dbo:Award ;
               dbo:recipient ?person .

  # Gustav Jonson's leader in the office
  ?jonsonOffice a dbo:GovernmentAgency ;
                dbo:leader ?person .
  
  ?person a dbo:Person .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
427,34,test,Give me the party of Romano Prodi and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiParty ?pintoPartyName WHERE {
  # Find the party of Romano Prodi
  OPTIONAL { 
    dbr:Romano_Prodi a dbo:Person .
    dbr:Romano_Prodi dbo:party ?prodiParty .
  }
  
  # Find the name of the party of Michele Pinto
  OPTIONAL {
    dbr:Michele_Pinto a dbo:Person .
    dbr:Michele_Pinto dbo:party ?pintoParty .
    ?pintoParty rdfs:label ?pintoPartyName .
    FILTER (lang(?pintoPartyName) = ""en"")
  }
}
```",4,4,5,3,2,3,3,71,2,7,0,0.2222222222222222,1.0,0.3636363636363636
617,70,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             foaf:name ""Antiochus"" ;
             dbo:father dbr:Antiochus_III_the_Great .

  # Successor to Antiochus
  ?successor dbo:succeededBy ?antiochus .
  
  # Child of the successor who is royalty
  ?child dbo:childOf ?successor ;
         a dbo:Royalty .

  # Spouse of this child
  ?spouse dbo:spouse ?child .

  # Commander in Battle of Panium and their child
  ?commander dbo:commandedBattle dbr:Battle_of_Panium .
  ?commandersChild dbo:childOf ?commander .

  # Parent of the commander's child (linking back to Seleucus II Callinicus)
  ?parent dbo:child ?commandersChild ;
          dbo:father dbr:Seleucus_II_Callinicus .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
184,58,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            rdfs:label ""Archduchess Margaret of Austria""@en ;
            dbo:birthDate ?dateMargaret .
  FILTER (YEAR(?dateMargaret) = 1925)

  # Parent of Archduchess Margaret
  ?parentOfMargaret dbo:child ?margaret .

  # Child of the parent of Archduchess Margaret
  ?grandChildOfMargaret dbo:parent ?parentOfMargaret .

  # Géza von Habsburg
  ?geza a dbo:Person ;
        rdfs:label ""Géza von Habsburg""@en .
  
  # Parent of Géza von Habsburg
  ?parentOfGeza dbo:child ?geza .

  # Archduke Joseph Karl of Austria
  ?josephKarl a dbo:Person ;
              rdfs:label ""Archduke Joseph Karl of Austria""@en .

  # Child of Archduke Joseph Karl
  ?childOfJosephKarl dbo:parent ?josephKarl .

  # Grandchild of Archduke Joseph Karl
  ?grandChildOfJosephKarl dbo:parent ?childOfJosephKarl .

  # Find the common entity
  FILTER (?commonEntity = ?parentOfMargaret && ?commonEntity = ?parentOfGeza)
  FILTER (?commonEntity = ?grandChildOfJosephKarl)

}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,69,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
            rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  # Her spouse
  ?princess dbo:spouse ?spouse .

  # Their child who is parent of Ernest Augustus, Duke of Brunswick
  ?child dbo:parent ?ernestAugustus ;
         dbo:spouse ?spouse .
  ?ernestAugustus rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .

  # Father of her spouse
  ?father a dbo:Person ;
          dbo:child ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,24,test,Give me the parent of Archduchess Ilona of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the parent of Archduchess Ilona of Austria
  ?ilona a dbo:Person ;
         rdfs:label ""Archduchess Ilona of Austria""@en .
  
  ?parent dbo:child ?ilona .

  # Find the child of Archduke Joseph Karl of Austria
  ?josephKarl a dbo:Person ;
              rdfs:label ""Archduke Joseph Karl of Austria""@en .
  
  ?grandChild dbo:child ?josephKarl .
  ?parent2 dbo:child ?grandChild .

  # The person who is both the parent of Ilona and an ancestor of someone related to Joseph Karl
  FILTER (?parent = ?parent2)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
820,17,test,Give me the child of the parent of the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  ?actor a dbo:Person ;
         dbo:profession dbr:Actor .
  
  ?parent dbo:child ?actor .
  
  ?parent dbo:child ?child .
  
  FILTER (?child != ?actor)
}
```",4,4,5,3,2,3,2,20,0,3,128,0.0,0.0,0
767,71,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v8 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?v5 <http://dbpedia.org/property/governor> ?v4 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v7 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  # Step 1: Find Matthew Burland's alter ego (fictional character)
  ?burland a dbo:Person ;
           foaf:name ""Matthew Burland"" .
  ?burland dbo:fictionalCharacter ?alterEgo .

  # Step 2: Find George Kilbon Nash's alma mater
  ?nash a dbo:Person ;
        foaf:name ""George Kilbon Nash"" .
  ?nash dbo:almaMater ?almaMater .

  # Step 3: Identify the writer of ""Where It's At"" by Dustin Lynch
  dbr:Where_It%27s_At_(Dustin_Lynch_album) dbo:writer ?writer .

  # Step 4: Find a settlement in the administration of the writer
  ?admin a dbo:Settlement ;
         dbo:administrator ?writer .
  
  # Combine information to find the alter ego reference
  FILTER (?alterEgo = ?entityInAdmin)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
77,17,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of Alexander Chechenskiy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?organisation WHERE {
  ?mayor a dbo:Mayor .
  ?mayor dbo:positionHeld ?role .
  ?organisation dbo:locatedIn dbr:Warsaw .
  ?mayor dbo:worksFor ?organisation .
  
  OPTIONAL {
    ?chechenskiy a dbo:Person ;
                 foaf:name ""Alexander Chechenskiy"" .
    ?chechenskiy dbo:memberOf ?organisation .
  }
}
```",4,5,5,3,2,3,2,20,0,0,6,0,0.0,0
54,58,test,"Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan .
  
  # Narapati I of Ava's child and their parent
  ?narapatiIChild dbo:parent dbr:Narapati_I_of_Ava .
  ?parentOfNarapatiIChild dbo:child ?narapatiIChild .

  # Thihapate of Mohnyin's predecessor who is also an office holder and royalty
  ?thihapatePredecessor dbo:successor dbr:Thihapate_of_Mohnyin .
  ?thihapatePredecessor a dbo:OfficeHolder ;
                      a dbo:Royalty .

  # The person we are looking for must satisfy all these conditions
  FILTER (?thinkhayaChild = ?parentOfNarapatiIChild && 
          ?thinkhayaChild = ?thihapatePredecessor)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,55,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Identify ""Hub City""
SELECT ?city WHERE {
  ?city a dbo:City .
  ?city rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""hub city""))
}

# Step 2: Find the movie involving Roz Ryan and Michael Ballhaus
SELECT ?movie WHERE {
  ?movie a dbo:Film ;
         dbo:starring ?actor ;
         dbo:director ?director .
  ?director rdfs:label ?dirLabel .
  FILTER (CONTAINS(LCASE(?dirLabel), ""roz ryans"") || CONTAINS(LCASE(?dirLabel), ""michael ballhaus""))
}

# Step 3: Find the actor of this movie
SELECT DISTINCT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor ;
         dbo:birthPlace ?nativeCity .
}

# Final Query to get native city of the actor
SELECT ?nativeCity WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace ?nativeCity .
  ?movie dbo:starring ?actor .
  ?movie dbo:director ?director .
  ?director rdfs:label ?dirLabel .
  FILTER (CONTAINS(LCASE(?dirLabel), ""roz ryans"") || CONTAINS(LCASE(?dirLabel), ""michael ballhaus""))
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
701,28,test,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Parent of Henuttawy (19th dynasty)
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy""@en .
  ?parentParentOfHenuttawy dbo:child ?henuttawy .

  # Spouse of Ramesses II
  ?ramessesII a dbo:Person ;
              rdfs:label ""Ramesses II""@en .
  ?spouseOfRamessesII dbo:spouse ?ramessesII ;
                      rdfs:label ""Nefertari""@en .

  # Parent of the child of Nefertari (which is Ramesses II)
  ?nefertari a dbo:Person ;
             rdfs:label ""Nefertari""@en .
  ?parentOfChild dbr:Nefertari dbo:child ?child .
  
  FILTER (?parentParentOfHenuttawy = ?spouseOfRamessesII && ?parentOfChild = ?ramessesII)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
16,45,test,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfTedMcGinley (GROUP_CONCAT(?actressBirthName; separator="", "") AS ?actressesWithBirthNames) WHERE {
  # Part 1: Find the spouse of Ted McGinley
  dbr:Ted_McGinley a dbo:Person .
  dbr:Ted_McGinley dbo:spouse ?spouseOfTedMcGinley .

  # Part 2: Find actresses who are alumni of Ohio State University and have a birth name
  ?actress a dbo:Actor ;
           dbo:almaMater dbr:Ohio_State_University ;
           rdfs:label ?actressLabel .
  FILTER CONTAINS(LCASE(?actressLabel), ""actress"") # Ensure the person is an actress
  OPTIONAL { ?actress dbo:birthName ?actressBirthName }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,64,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?gustavJonson a dbo:Person ;
                dbo:officeHolder ?office ;
                dbo:politician ?politicalRole ;
                dbo:commanderIn dbr:Eastern_Front_(World_War_II) .
  
  ?gustavJonson dbo:awardReceived dbr:Commander_in_the_Volcano_and_Ryukyu_Islands_campaign .

  ?office a dbo:GovernmentAgency ;
          dbo:leaderOf ?leader .

  FILTER (?gustavJonson = dbr:Gustav_Jonson)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
54,52,test,Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Narapati I of Ava's child
  ?narapatiChild dbo:childOf dbr:Narapati_I_of_Ava .
  
  # Thinkhaya of Pagan's child and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?thinkhayaChild dbo:childOf dbr:Thinkhaya_of_Pagan .
  ?ameittaPredecessor dbo:predecessor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .

  # Find the parent of Narapati I's child (which is Narapati I himself)
  ?narapatiChild dbo:parent ?narapatiParent .
  
  # Find the child of Thinkhaya's child's father and Ameitta Thiri Maha Dhamma Dewi's predecessor
  ?thinkhayaChild dbo:childOf ?thinkhayaFather .
  ?ameittaPredecessor dbo:child ?predecessorChild .

  # The parent we are looking for is the intersection of these relationships
  FILTER (?narapatiParent = ?thinkhayaFather || ?narapatiParent = ?predecessorChild)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,54,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find the alma mater of the awardee of the Royal Medal
SELECT ?awardee ?almaMater WHERE {
  ?awardee a dbo:Person .
  ?awardee dbo:awardReceived dbr:Royal_Medal .
  OPTIONAL { ?awardee dbo:almaMater ?almaMater . }
}

# Query to find the alma mater of the mayor during the Northern Ireland Forum
SELECT ?mayor ?almaMater WHERE {
  ?mayor a dbo:Person ;
         dbo:occupation dbr:Mayor_of_Northern_Ireland .
  OPTIONAL { ?mayor dbo:almaMater ?almaMater . }
  FILTER (YEAR(?termStart) >= 1996 && YEAR(?termEnd) <= 1998)
}

# Query to find a notable figure associated with Queen's University Belfast
SELECT ?figure ?almaMater WHERE {
  ?figure a dbo:Person ;
          dbo:almaMater dbr:Queen's_University_Belfast .
  OPTIONAL { ?figure dbo:almaMater ?almaMater . }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,68,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v5 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Commander in Battle of Verdun
  ?battle a dbo:MilitaryConflict ;
          dbo:militaryCommanderOf ?commander .
  
  FILTER (STR(?battle) = ""Battle_of_Verdun"") .

  # Decedent at the capital of Algeria (Algiers)
  ?commander dbo:deathPlace ?place1 .
  ?place1 rdfs:label ""Algiers""@en .

  # Decedent at a work location related to an author's work on French Algeria
  ?author dbo:nationality dbr:French ;
          dbo:work ?work .
  
  FILTER (CONTAINS(LCASE(STR(?work)), ""french algeria"")) .

  ?commander dbo:deathPlace ?place2 .
  ?place2 rdfs:label ?workLabel .
  FILTER (CONTAINS(LCASE(STR(?workLabel)), LCASE(STR(?work)))) .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
488,55,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?birthPlace ?administration WHERE {
  # Yūki Hideyasu's father who is a politician
  ?yukiHideyasu a dbo:Person ;
                rdfs:label ""Yūki Hideyasu""@en .
  ?father dbo:child ?yukiHideyasu ;
          dbo:spouse ?mother ;
          a dbo:Politician .

  # Death place of Yūki Hideyasu's father
  OPTIONAL { ?father dbo:deathPlace ?deathPlace . }

  # Commander in the Boshin War
  ?commander a dbo:Person ;
             rdfs:label ""Commander in the Boshin War""@en .
  
  # Birth place of the commander
  OPTIONAL { ?commander dbo:birthPlace ?birthPlace . }

  # Emperor Go-Mizunoo's father
  ?goMizunoo a dbo:Person ;
             rdfs:label ""Emperor Go-Mizunoo""@en .
  ?fatherGoMizunoo dbo:child ?goMizunoo .

  # Administration of Emperor Go-Mizunoo's father
  OPTIONAL { ?fatherGoMizunoo dbo:positionHeld ?administration . }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
378,70,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?claimToFame WHERE {
  # Find wars related to Thomas Trigge
  ?triggeWar a dbo:MilitaryConflict .
  ?triggeWar dbo:commander ?commanderTrigge .
  ?commanderTrigge rdfs:label ""Thomas Trigge""@en .

  # Find wars related to Carl Pontus Gahn
  ?gahnWar a dbo:MilitaryConflict .
  ?gahnWar dbo:commander ?commanderGahn .
  ?person dbr:Carl_Pontus_Gahn ;
          dbo:birthDate ?dateGahn .
  
  # Ensure the war is similar or related to Peninsular War
  ?peninsularWar a dbo:MilitaryConflict ;
                 rdfs:label ""Peninsular War""@en .

  # Link wars by similarity or relation (this part may need refinement based on available data)
  FILTER (?triggeWar = ?gahnWar || ?triggeWar = ?peninsularWar || ?gahnWar = ?peninsularWar)

  # Get claim to fame for commanders
  OPTIONAL { ?commanderTrigge dbo:claimToFame ?claimToFameTrigge }
  OPTIONAL { ?commanderGahn dbo:claimToFame ?claimToFameGahn }

  # Return the war and claims to fame
  BIND(CONCAT(STR(?triggeWar), STR(?gahnWar)) AS ?war)
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
617,67,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Identify the commander in Battle of Panium and their child
  ?commander dbo:commanderOf dbr:Battle_of_Panium .
  ?child dbo:child ?commander .

  # Step 2: Find the parent of that child
  ?parent dbo:parent ?child .

  # Step 3: Identify Antiochus (son of Antiochus III the Great) and his successor
  dbr:Antiochus_III_the_Great dbo:son dbr:Antiochus_IV_Epiphanes .
  ?successor dbo:successorOf dbr:Antiochus_IV_Epiphanes .

  # Step 4: Find the child of this successor who is royalty and a child of Antiochus III
  ?royalChild dbo:child ?successor ;
              dbo:child dbr:Antiochus_III_the_Great ;
              a dbo:Royalty .

  # Step 5: Identify the spouse of that royal child
  ?spouse dbo:spouse ?royalChild .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
747,60,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Find the decedent who was an athlete and soccer player born in Zolotonosha
  ?decedent a dbo:SoccerPlayer ;
            dbo:birthPlace dbr:Zolotonosha .

  # Get the birth date of this person
  ?decedent dbo:birthDate ?birthdate .

  # Find Shèna, who shares the same birth date as the decedent
  ?shena a dbo:Person ;
         rdfs:label ""Shèna""@en ;
         dbo:birthDate ?sameBirthdate .
  
  FILTER (?sameBirthdate = ?birthdate)

  # Get the band associated with Shèna
  ?shena dbo:band ?band .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
492,66,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .

  # Death at the capital of Khemis Miliana District
  ?deathPlace1 dbo:type dbr:Settlement ;
              dbo:capitalOf dbr:Khemis_Miliana_District .
  ?person dbo:deathPlace ?deathPlace1 .

  # Death at Joseph C. Satterthwaite's workplace
  ?workplace dbo:positionHeld dbr:Joseph_C._Satterthwaite ;
             dbo:officeHolder ?satterthwaiteRole .
  ?satterthwaiteRole dbo:roleName ""US Assistant Secretary of State for African Affairs"" .
  ?person dbo:deathPlace ?workplace .

  # Commander in the war involving Frédéric-Georges Herr
  ?war a dbo:MilitaryConflict, dbo:Event ;
      dbo:commanderInWar ?person ;
      dbo:participantFrédéric-GeorgesHerr dbr:Frédéric-Georges_Herr .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
778,19,test,"Give me the author of the work, that is a software, of the author of Pushd and popd and entity in the award of Ralph L. Brinster.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the author of ""Pushd"" and ""Popd""
SELECT ?author WHERE {
  ?command a dbo:Software .
  ?command rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""pushd"") || CONTAINS(LCASE(?label), ""popd""))
  ?command dbo:creator ?author .
}

# Step 2: Find the software work by this author
SELECT DISTINCT ?software WHERE {
  ?author a dbo:Person .
  ?software dbo:creator ?author .
  ?software a dbo:Software .
}

# Step 3: Find an entity in the award of Ralph L. Brinster
SELECT DISTINCT ?entity WHERE {
  dbr:Ralph_L._Brinster dbo:award ?award .
  ?award dbo:recipient dbr:Ralph_L._Brinster .
  ?award dbo:organization ?entity .
}

# Combine results to find the author of the software and entity in Ralph L. Brinster's award
SELECT DISTINCT ?softwareAuthor ?entity WHERE {
  # Find the author from Step 1
  ?author a dbo:Person .
  ?command a dbo:Software .
  ?command rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""pushd"") || CONTAINS(LCASE(?label), ""popd""))
  ?command dbo:creator ?author .

  # Find the software from Step 2
  ?software dbo:creator ?author .
  ?software a dbo:Software .

  # Find the entity from Step 3
  dbr:Ralph_L._Brinster dbo:award ?award .
  ?award dbo:recipient dbr:Ralph_L._Brinster .
  ?award dbo:organization ?entity .

  BIND(?author AS ?softwareAuthor)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
360,22,test,"Give me the writer of the work, that is an album, of Dave Flett and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album a dbo:Album .
  ?album dbo:artist dbr:Dave_Flett .
  ?album dbo:writer ?writer .
  
  ?winnieDeathPlace a dbo:Settlement .
  ?winnieDeathPlace dbo:deathPlace dbr:Winnie_Madikizela-Mandela .

  ?writer dbo:nativePlace ?winnieDeathPlace .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
666,18,test,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as the nickname of England national beach soccer team.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Leonid Slutsky as a sports manager of a soccer club
  ?team a dbo:SoccerClub ;
        dbo:sportsManager dbr:Leonid_Slutsky .
  
  # England national beach soccer team by its nickname
  ?beachTeam rdfs:label ""England national beach soccer team""@en ;
             dbo:nickname ?nickname .

  # Link the soccer club to the beach soccer team via nickname
  ?team rdfs:label ?nickname .

  # Find a player in the manager of this team
  ?player dbo:playerInTeam ?team .
}
```",5,8,6,3,2,3,2,20,0,0,2,0,0.0,0
701,20,test,Give me the parent of the child of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Find a child of Ramesses II
  ?child dbo:parent dbr:Ramesses_II .
  
  # Find the parent(s) of Meritamen
  dbr:Merytamen dbo:parent ?meritamenParent .

  # Check if there is any common individual between these two sets
  ?commonParent dbo:child ?child .
  ?commonParent dbo:spouseOrPartner ?meritamenParent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?militaryForce a dbo:MilitaryConflict .
  ?militaryForce a dbo:SocietalEvent .
  
  ?schimmelpenninckCommander dbo:commander ?militaryForce .
  ?schimmelpenninckCommander dbo:officeHolder dbr:Kingdom_of_Ireland .

  ?war a dbo:MilitaryConflict .
  ?war a dbo:Event .
  ?polishHorse a dbo:MilitaryUnit .
  ?polishHorse a dbo:Organization .
  
  ?schimmelpenninckCommander dbo:commander ?war .
  ?war dbo:militaryUnit dbr:Polish_Horse .
}
```",8,16,9,3,3,3,3,71,0,0,15,0,0.0,0
9,45,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterJohn ?almaMaterAllen ?nickname WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  OPTIONAL {
    ?john a dbo:Person ;
          foaf:name ""John Alderdice"" ;
          dbo:almaMater ?almaMaterJohn .
  }
  
  # Alma mater of Allen Hill (scientist)
  OPTIONAL {
    ?allen a dbo:Scientist ;
           foaf:name ""Allen Hill"" ;
           dbo:almaMater ?almaMaterAllen .
  }

  # Nickname of an organization and educational institution in Northern Ireland
  OPTIONAL {
    ?entity a dbo:EducationalOrganization, dbo:Organisation ;
            dbo:country dbr:Northern_Ireland ;
            rdfs:label ?nickname .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
281,25,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit WHERE {
  ?person a dbo:Person ;
          foaf:name ""Heather Roy""@en .
  
  ?person dbo:militaryRole ?role .
  ?role dbo:profession ""Military""@en .

  ?militaryUnit a dbo:MilitaryUnit ;
                dbo:country dbr:Colony_of_New_Zealand ;
                dbo:member ?person .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
182,24,test,Give me the entity in the nationality of Tamara Kunanayakam and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nationality ?war WHERE {
  # Subquery for Tamara Kunanayakam's nationality
  ?tamara a dbo:Person ;
          foaf:name ""Tamara Kunanayakam"" ;
          dbo:nationality ?nationality .

  # Subquery for Gotabhaya Rajapaksa's associated war
  ?gotabhaya a dbo:Person ;
             foaf:name ""Gotabhaya Rajapaksa"" .
  
  OPTIONAL {
    ?gotabhaya dbo:occupation ?occupation .
    ?occupation dbo:relatedWar ?war .
  }
}
```",4,4,5,2,2,2,3,28,0,0,5,0,0.0,0
994,19,test,Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonArtist WHERE {
  # Find members of Watchtower
  ?watchtowerMember a dbo:Band ;
                    dbo:bandMember ?artist1 .
  FILTER (str(?watchtowerMember) = str(dbr:Watchtower_(band)))

  # Find members of Red Tide
  ?redTideMember a dbo:Band ;
                 dbo:bandMember ?artist2 .
  FILTER (str(?redTideMember) = str(dbr:Red_Tide_(band)))

  # Find common artist between the two bands
  FILTER (?artist1 = ?commonArtist && ?artist2 = ?commonArtist)
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
747,41,test,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Get Pavlo Khudzik's birth date
  SELECT ?pavloBirthDate WHERE {
    dbr:Pavlo_Khudzik a dbo:Person .
    dbr:Pavlo_Khudzik dbo:birthDate ?pavloBirthDate .
  } LIMIT 1

  # Step 2: Get Shèna's band
  SELECT ?shenaBand WHERE {
    dbr:Shèna a dbo:MusicalArtist .
    ?bandMember dbo:member ?shenaBand ;
                dbo:artist dbr:Shèna .
  } LIMIT 1

  # Step 3: Get the writer of Apollo (Hardwell song)
  SELECT ?apolloWriter WHERE {
    dbr:Apollo_(song) a dbo:Songs .
    ?lyricsBy dbo:lyricsBy ?apolloWriter .
  } LIMIT 1

  # Final step: Find person born on Pavlo Khudzik's birth date
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (?date = ?pavloBirthDate)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
915,16,test,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident WHERE {
  # Find Stephen Verona's birthplace
  dbr:Stephen_Verona a dbo:Person ;
                     dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement
  ?birthPlace a dbo:Settlement .

  # Find residents of that birthplace
  ?resident dbo:residence ?birthPlace .

  # Find Phillip Spaulding's child who is both a fictional character and a soap character
  dbr:Phillip_Spaulding a dbo:Person ;
                        dbo:child ?child .
  
  ?child a dbo:FictionalCharacter, dbo:SoapCharacter .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
184,49,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Find Archduchess Margaret of Austria
  ?margaret a dbo:Person ;
            rdfs:label ""Archduchess Margaret of Austria""@en ;
            dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1925)

  # Step 2: Find her parent
  ?parent1 dbo:child ?margaret .

  # Step 3: Find the child of her parent
  ?sibling dbo:parent ?parent1 .

  # Step 4: Identify a native of Budapest
  ?budaPerson a dbo:Person ;
              dbo:nativePlace dbr:Budapest .

  # Step 5: Find their parent
  ?parent2 dbo:child ?budaPerson .

  # Step 6: Determine the common ancestor (parent)
  FILTER (?sibling = ?margaret || ?sibling != ?margaret) # Ensure sibling is not Margaret herself
  ?commonParent dbo:child ?sibling .
  ?commonParent dbo:child ?budaPerson .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
994,41,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalBand WHERE {
  # Step 1: Find associated musical artist of Watchtower (band)
  ?watchtower a dbo:Band ;
              rdfs:label ""Watchtower (band)""@en .
  
  ?artist1 dbo:associatedMusicalArtist ?watchtower .

  # Step 2: Find associated musical artist of the first result
  ?artist2 dbo:associatedMusicalArtist ?artist1 .

  # Step 3: Find a band member of Don Dokken who is also an associated musical artist of the second result
  ?donDokken a dbo:Band ;
             rdfs:label ""Don Dokken""@en .
  
  ?bandMember dbo:bandMember ?donDokken ;
              dbo:associatedMusicalArtist ?artist2 .

  # Step 4: Find which band or group this person belongs to, ensuring it's classified as both a band and an organization
  ?finalBand dbo:bandMember ?bandMember ;
             a dbo:Band, dbo:Organization .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
161,56,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director and military force of Spanish Civil War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Identify Francisco Franco as a person
  dbr:Franco_Francisco (a dbo:Person) ;
    dbo:commander ?militaryForce .

  # Ensure the military force is part of a societal event, an event, and a military conflict
  ?militaryForce a dbo:MilitaryConflict ;
                dbo:participatedIn ?event .
  
  # Identify the Spanish Civil War as a military conflict
  dbr:Spanish_Civil_War (a dbo:MilitaryConflict) ;
    dbo:militaryForce ?militaryForce .

  # Ensure El Director is associated with Francisco Franco
  FILTER (?person = dbr:Franco_Francisco)
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
318,8,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find Robert Xavier Rodriguez's profession
  dbr:Robert_Xavier_Rodriguez a dbo:Person ;
                              dbo:profession ?robertProfession .

  # Find other professionals with the same profession born in 1970
  ?professional a dbo:Person ;
                dbo:profession ?robertProfession ;
                dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1970)
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
659,43,test,"Give me the military force of Napoleonic Wars and commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?campaignCommander ?warCommander WHERE {
  # Identify the Napoleonic Wars and German Campaign of 1813
  VALUES (?event) { 
    dbr:Napoleonic_Wars 
    dbr:German_Campaign_of_1813 
  }
  
  # Find commanders involved in these events
  ?campaignCommander dbo:commanded ?unit .
  ?warCommander dbo:commanded ?force .
  
  ?event dbo:participatedIn ?campaignCommander .
  ?event dbo:participatedIn ?warCommander .

  # Identify the Polish Horse as a military unit and organization
  dbr:Polish_Horse a dbo:MilitaryUnit ;
                   dbo:partOf ?militaryForce .

  # Link commanders to the Polish Horse or its associated force
  OPTIONAL { ?campaignCommander dbo:commanded dbr:Polish_Horse . }
  OPTIONAL { ?warCommander dbo:commanded ?force ; 
              dbo:participatedIn dbr:Napoleonic_Wars . }

}
```",5,9,6,3,3,3,3,71,0,0,6,0,0.0,0
963,19,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of Central European Time.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?party a dbo:PoliticalParty .
  ?party dbo:headquartersLocation ?location .
  
  # Assuming we have a way to link locations to postal codes or regions
  ?location dbo:postalCode ""21205""^^xsd:string .

  # Linking the country to Central European Time zone
  ?country dbo:timeZone dbr:Central_European_Time_Zone .
  ?party dbo:country ?country .
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
391,53,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Find the nickname of Jackson, Tennessee
  ?nickname a dbo:Person ;
            dbo:nativePlace dbr:Jackson,_Tennessee .
  
  # Step 2: Identify actor from ""The Departed""
  ?actor a dbo:Person ;
         dbo:actorIn dbr:The_Departed .

  # Step 3: Find common person
  ?person a dbo:Person ;
          rdfs:label ?nicknameLabel ;
          dbo:nativePlace ?nickname .
  
  FILTER (CONTAINS(LCASE(?nicknameLabel), ""nick name of jackson, tennessee""))

  # Ensure the person is also an actor in ""The Departed""
  ?person dbo:actorIn dbr:The_Departed .

  # Step 4: Identify work with Roz Ryan
  ?work a dbo:Film ;
        dbo:starring ?person, dbr:Roz_Ryan .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,70,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # John Pertwee's child who is an actor, narrator, and producer
  ?child dbo:parent dbr:John_Pertwee ;
         a dbo:Person ;
         dbo:profession (dbr:Actor dbr:Narrator dbr:Producer) .

  # This child's claim to fame involving a film and military conflict
  ?fame dbo:involvesFilm ?film ;
        dbo:involvesMilitaryConflict ?conflict .
  
  # The native of this child's residence, which is a British settlement
  ?child dbo:nativePlace ?residence .
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # This person is a politician and office holder from France
  ?native dbo:nativePlace ?residence ;
          a dbo:Person, dbo:Politician ;
          dbo:officeHolder true ;
          dbo:country dbr:France .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
16,69,test,Give me the spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Ted McGinley's birth name and spouse
  ?ted a dbo:Person ;
      rdfs:label ""Ted McGinley""@en ;
      dbo:birthName ?tedBirthName .
  
  OPTIONAL { ?ted dbo:spouse ?spouse1 . }
  
  # Find the alumnus of Ohio State University with their birth name and spouse
  ?alumnus a dbo:Person ;
           dbo:almaMater dbr:Ohio_State_University ;
           dbo:birthName ?alumnusBirthName .
  
  OPTIONAL { ?alumnus dbo:spouse ?spouse2 . }
  
  # Find Satomi Ishihara's profession and spouse
  ?satomi a dbo:Person ;
          rdfs:label ""Satomi Ishihara""@en ;
          dbo:profession ?profession .
  
  OPTIONAL { ?satomi dbo:spouse ?spouse3 . }

  FILTER (?tedBirthName = ?alumnusBirthName)
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
701,45,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen and parent of Henuttawy (19th dynasty).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?commander a dbo:Person ;
             dbo:parent ?meritamen, ?henuttawy ;
             dbo:royalty ""true""^^xsd:boolean .
  
  ?meritamen rdfs:label ""Meritamen""@en .
  ?henuttawy rdfs:label ""Henuttawy""@en .

  ?commander dbo:participatedInBattle dbr:Battle_of_Perire .

  ?father dbo:parent ?commander .
  ?father dbo:spouse ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
232,68,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:nationality dbr:United_Kingdom ;
                     dbo:residence ?settlement .
  
  # Actor details
  ?actor a dbo:Actor ;
         dbo:narrator true ;
         dbo:producer true ;
         dbo:nationality dbr:United_Kingdom ;
         dbo:residence ?settlement ;
         dbo:claimToFame ?fame .

  # Fame involving both film and military conflict
  ?fame a dbo:Film .
  OPTIONAL { ?fame a dbo:MilitaryConflict . }

  # Jon Pertwee as child of the actor
  dbr:Jon_Pertwee dbo:birthName ""Jon Pertwee"" ;
                  dbo:child ?actor .

  FILTER EXISTS { ?fame a dbo:Film }
  FILTER EXISTS { ?fame a dbo:MilitaryConflict }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
378,51,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in Peninsular War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame WHERE {
  ?trigge a dbo:Person ;
          foaf:name ""Thomas Trigge"" .
  
  ?war a dbo:MilitaryConflict ;
       rdfs:label ""Peninsular War""@en .

  ?commanderRole dbo:commander ?trigge ;
                 dbo:militaryConflicts ?war .

  ?trigge dbo:notableFor ?claimToFame .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
528,42,test,Give me the war of Orozimbo Barbosa and force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query 1: War involving Orozimbo Barbosa
SELECT ?war WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Orozimbo Barbosa""@en .
  ?person dbo:militaryConflict ?war .
}

UNION

# Query 2: Military force of Narciso Campero Leyes in a conflict
SELECT ?conflict WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""Narciso Campero Leyes"" .
  ?person dbo:militaryConflict ?conflict .
}

UNION

# Query 3: Military forces involved in the Battle of Pisagua
SELECT ?force WHERE {
  ?battle a dbo:MilitaryEngagement ;
          rdfs:label ""Battle of Pisagua""@en .
  ?battle dbo:participatingMilitaryUnit ?force .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
747,68,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athlete ?traceyBand ?writerBand WHERE {
  # Find the decedent's death date
  ?decedent a dbo:Person ;
            dbo:deathDate ?deathDate .

  # Find the athlete born on the same date as the decedent's death date and in Zolotonosha
  ?athlete a dbo:Person, dbo:Athlete, dbo:SoccerPlayer ;
           dbo:birthDate ?birthDate ;
           dbo:birthPlace dbr:Zolotonosha .
  FILTER (?birthDate = ?deathDate)

  # Find the band of Tracey Elizabeth McSween
  ?tracey a dbo:Person ;
          rdfs:label ""Tracey Elizabeth McSween""@en ;
          dbo:band ?traceyBand .

  # Find the writer of the song ""Amba Shepherd"" and their band
  ?song a dbo:Songs ;
        rdfs:label ""Amba Shepherd""@en .
  ?writer a dbo:Person, dbo:Writer ;
          dbo:work ?song .
  ?writer dbo:band ?writerBand .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
427,47,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fatherParty WHERE {
  ?alumnus dbo:alumnusOf dbr:Massachusetts_Institute_of_Technology .
  ?alumnus foaf:parent ?father .
  ?father dbo:partyAffiliation ?fatherParty .

  OPTIONAL {
    ?italianParty a dbo:PoliticalParty ;
                  rdfs:label ""Italian People's Party (1994)""@en .
    FILTER(?fatherParty = ?italianParty)
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,66,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Don Dokken as a musical artist and band member
  ?dokken a dbo:Person ;
          rdfs:label ""Don Dokken""@en ;
          dbo:musicalArtist ?band1 .
  
  # Watchtower associated musical artists
  dbr:Watchtower dbo:associatedBand ?watchtowerArtist .

  # Meshuggah's band members and their associations
  ?meshuggahMember a dbo:Person ;
                   dbo:bandMember dbr:Meshuggah ;
                   dbo:associatedBand ?meshuggahAssociated .
  
  # Find the intersection of these relationships
  ?person a dbo:Person ;
          dbo:musicalArtist ?band1 ;  # Don Dokken's band member
          dbo:associatedBand ?watchtowerArtist ;  # Watchtower associated artist
          dbo:associatedBand ?meshuggahAssociated .  # Associated with Meshuggah's members

  FILTER (str(?person) != str(?dokken))  # Ensure it's not Don Dokken himself
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
356,16,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of 2014 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?team WHERE {
  ?person a dbo:SoccerPlayer .
  ?person dbo:managerOf ?managedTeam .
  ?person dbo:nationality dbr:Wolverhampton_Wanderers_F.C. .
  ?person dbo:birthPlace dbr:Wolverhampton .
  
  # Find the team they played for after 2014
  ?playerRole a dbo:SoccerPlayer ;
              dbo:team ?team ;
              dbo:playedForTeam ?managedTeam .

  FILTER (YEAR(?date) > 2014)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
92,66,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?jimArtist ?josephBand WHERE {
  # Jim Sheppard's associated musical artist
  OPTIONAL { 
    dbr:Jim_Sheppard dbo:associatedBand ?jimArtist .
  }
  
  # Joseph Michael's birth name and band membership
  OPTIONAL {
    dbr:Joseph_Michael dbo:birthName ?birthName .
    dbr:Joseph_Michael dbo:bandMember ?josephBand .
    
    # Ensure the band is Nevermore
    FILTER (?josephBand = dbr:Nevermore)
  }
}
```",7,9,8,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
701,29,test,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfMeritamen ?spouseOfRamessesII ?childParent WHERE {
  # Parent of Meritamen
  OPTIONAL { 
    dbr:Meritamen dbo:child ?meritamenChild .
    ?meritamenChild dbo:parent ?parentOfMeritamen .
  }

  # Spouse of Ramesses II
  OPTIONAL {
    dbr:Ramesses_II dbo:spouse ?spouseOfRamessesII .
  }
  
  # Parent of the child of Ramesses II
  OPTIONAL {
    dbr:Ramesses_II dbo:child ?ramessesChild .
    ?ramessesChild dbo:parent ?childParent .
  }
}
```",4,4,5,2,3,3,3,71,0,1,1,0.0,0.0,0
617,53,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochus3 a dbo:Person ;
              rdfs:label ""Antiochus III""@en .
  
  # Child of Antiochus
  ?child1 dbo:parent ?antiochus3 .

  # Grandchild of Antiochus
  ?grandchild dbo:parent ?child1 .

  # Successor of Antiochus II Theos
  ?antiochus2 a dbo:Person ;
              rdfs:label ""Antiochus II Theos""@en .
  
  ?successor dbo:parent ?antiochus2 ;
             rdf:type dbo:Monarch .

  # Child of the successor
  ?child2 dbo:parent ?successor ;
          rdf:type dbo:Monarch .

  # Spouse of Laodice IV
  ?laodice4 a dbo:Person ;
            rdfs:label ""Laodice IV""@en .
  
  ?person dbo:spouse ?laodice4 ;
          dbo:parent ?grandchild ;
          dbo:parent ?child2 .

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,33,test,"Give me the military force of Rif War and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Indalecio Prieto's predecessor in a political role
SELECT ?predecessor WHERE {
  ?prieto dbo:office ?office .
  ?prieto rdfs:label ""Indalecio Prieto""@en .
  ?succession dbo:predecessor ?predecessor .
  ?succession dbo:office ?office .
}

# Step 2: Find the military force of the Rif War
SELECT ?rifWarForce WHERE {
  dbr:The_Rif_War dbo:military_force ?rifWarForce .
}

# Step 3 and 4: Find the societal event/military conflict associated with the predecessor and its military force
SELECT ?event ?militaryForce WHERE {
  ?predecessor dbo:office ?office .
  ?conflict dbo:relatedEvent ?event .
  ?conflict dbo:military_force ?militaryForce .
}
```",4,6,5,3,2,3,3,71,0,0,34,0,0.0,0
801,26,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?song a dbo:Song .
  ?song dbo:workType dbr:Rapper .
  ?song dbo:producer ?producer .
}
```",3,7,4,3,1,3,3,71,0,0,956,0,0.0,0
547,46,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the resting place of the child of the child of William Haliburton
SELECT DISTINCT ?grandchildRestingPlace WHERE {
  # Find William Haliburton's children
  ?child a dbo:Person ;
         dbo:parent dbr:William_Haliburton .
  
  # For each child, find their children (grandchildren)
  ?grandchild a dbo:Person ;
              dbo:parent ?child .

  # Get the resting place of these grandchildren
  OPTIONAL { ?grandchild dbo:finalRestingPlace ?grandchildRestingPlace }
}

UNION

# Query for the resting place of actors in ""Enemy at the Door""
SELECT DISTINCT ?actorRestingPlace WHERE {
  # Find the film ""Enemy at the Door""
  dbr:Enemy_at_the_Door a dbo:Film .

  # Find actors associated with this film
  ?filmActor a dbo:FilmActor ;
             dbo:character ?character ;
             dbo:film dbr:Enemy_at_the_Door .
  
  # Get the person (actor) and their resting place
  ?person a dbo:Person ;
          rdfs:label ?actorLabel ;
          dbo:spouse ?filmActor .
  OPTIONAL { ?person dbo:finalRestingPlace ?actorRestingPlace }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
294,24,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?architectRestingPlace ?marionBirthplace WHERE {
  # Part 1: Find the architect of P. D. Houston Jr. House and their resting place
  {
    ?house dbo:architect ?architect .
    FILTER (STR(?house) = ""P._D._Houston_Jr._House"")
    OPTIONAL { ?architect dbo:deathPlace ?architectRestingPlace }
  }

  # Part 2: Find Marion James' birthplace and ensure it is a settlement
  UNION {
    ?marion dbo:birthPlace ?marionBirthplace .
    FILTER (STR(?marion) = ""Marion_James"")
    ?marionBirthplace a dbo:Settlement
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
492,51,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify Frédéric-Georges Herr's involvement in a military conflict
  ?conflict a dbo:MilitaryConflict .
  ?herr dbr:Frédéric-Georges_Herr ;
        dbo:participatedInMilitaryConflicts ?conflict .

  # Find the commander of that conflict
  ?conflict dbo:commander ?commander .

  # Check if the commander died in the capital of Khemis Miliana District
  ?commander dbo:deathPlace ?capital .
  ?capital a dbo:Settlement ;
           dbo:country dbr:Algeria ;
           dbo:district dbr:Khemis_Miliana_District ;
           dbo:capital true .

}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,67,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musicalArtist WHERE {
  # Find Joseph Michael
  ?person a dbo:Person ;
          dbo:birthName ""Joseph Michael""@en .
  
  # Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?actor a dbo:Actor ;
         dbo:actedIn dbr:Return_to_Nuke_'Em_High_Volume_1 .

  # Check if this actor is also a band member of Nevermore
  ?actor dbo:bandMember dbr:Nevermore .
  
  # Find the musical artist associated with Joseph Michael
  ?person dbo:musicalArtist ?musicalArtist ;
          (dbo:bandMember|dbo:member) ?band .

  # Ensure the musical artist is connected to both roles
  OPTIONAL { ?actor dbo:musicalArtist ?musicalArtist }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,48,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace WHERE {
  # For Saitō Hajime's conflict
  OPTIONAL {
    ?battle a dbo:MilitaryConflict ;
           dbo:participatedIn ?saitoHajime .
    ?saitoHajime rdfs:label ""Saitō Hajime""@en .
    ?battle dbo:birthPlace ?birthPlace .
  }
  
  # For Toyotomi Hideyoshi's conflict
  OPTIONAL {
    ?siege a dbo:MilitaryConflict ;
           dbo:administrator ?toyotomiHideyoshi .
    ?toyotomiHideyoshi rdfs:label ""Toyotomi Hideyoshi""@en .
    ?siege dbo:birthPlace ?birthPlace .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
232,59,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Jon Pertwee and his birth name
  dbr:Jon_Pertwee a dbo:Person ;
                  dbo:birthName ?birthName .

  # Find the actor, narrator, and producer with specific claim to fame
  ?person a dbo:Actor ;
          dbo:narrator true ;
          dbo:producer true ;
          dbo:claimToFame ?fame .
  
  FILTER EXISTS { 
    ?fame rdf:type dbo:Film .
  }
  FILTER EXISTS {
    ?fame rdf:type dbo:MilitaryConflict .
  }

  # Find the child of Jon Pertwee who matches the above criteria
  ?child a dbo:Person ;
         dbo:parent dbr:Jon_Pertwee ;
         ?role ?person .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
182,20,test,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake and entity in Sri Lanka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role WHERE {
  VALUES ?individual { 
    dbr:Gotabhaya_Rajapaksa 
    dbr:Mahesh_Senanayake 
  }
  
  ?person a dbo:Person .
  ?person dbo:occupation ?role .
  OPTIONAL { ?person dbo:office ?office . }

  FILTER (?person = ?individual)
  
  # Find connections to wars or military roles
  OPTIONAL {
    ?event dbo:participant ?person .
    ?event rdf:type dbo:MilitaryConflict .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
161,52,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify Francisco Largo Caballero
  ?person a dbo:Person ;
          foaf:name ""Francisco Largo Caballero""@en .

  # Find military conflicts that are societal events linked to him
  ?conflict a dbo:MilitaryConflict, dbo:SocietalEvent ;
            dbo:commander ?person ;
            dbo:militaryForce ?militaryForce .

  # Additional filter for Biscay Campaign and Francoist Spain context
  OPTIONAL {
    ?conflict dbo:name ?name .
    FILTER (
      CONTAINS(LCASE(?name), ""biscay campaign"") ||
      CONTAINS(LCASE(?name), ""francoist spain"")
    )
  }
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
391,20,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?work dbo:director dbr:Michael_Ballhaus .
  ?work dbo:actor ?actor .
  ?actor dbo:nativePlace dbr:Compton,_California .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
345,16,test,"Give me the figure known as the nickname of FC Vaduz and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?team ?nickname WHERE {
  # Find the person who is both a soccer player and manager, born on 1978-09-15
  ?person a dbo:SoccerPlayer ;
          a dbo:SoccerManager ;
          dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1978 && MONTH(?date) = 9 && DAY(?date) = 15)
  
  # Find the team associated with this person
  OPTIONAL { ?person dbo:team ?team . }
  
  # Get the nickname of FC Vaduz
  dbr:FC_Vaduz dbo:nickname ?nickname .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
232,25,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Find Sylvie Bermann's residence that is a settlement in Britain
  ?sylvie a dbo:Person ;
          foaf:name ""Sylvie Bermann""@en .
  ?residence dbo:resident ?sylvie ;
             a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Find the actor of Dog Soldiers (film)
  ?dogSoldiersFilm dbo:title ""Dog Soldiers""@en .
  ?actor dbo:role ?dogSoldiersRole ;
         foaf:name ?actorName .
  ?dogSoldiersRole dbo:workExample ?dogSoldiersFilm .

  # Get the native place of this actor
  ?actor dbo:nativePlace ?native .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
404,50,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandParent WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?princeGeorge a dbo:Person ;
               rdfs:label ""Prince George William of Hanover""@en .
  
  # Step 2: Find his parent who is royalty
  ?parent dbr:Prince_George_William_of_Hanover dbo:child ;
          a dbo:Monarch .

  # Step 3: Identify Ernest Augustus, Duke of Brunswick and his father
  ?ernestAugustus a dbo:Person ;
                 rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  
  ?father dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:child .

  # Step 4: Find the child of Ernest Augustus's father
  ?child ?parentProperty ?father .

  # Step 5: Find the parent (royalty) of this child
  ?grandParent ?parentProperty ?child ;
               a dbo:Monarch .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
16,64,test,Give me the professional in Actress and person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actress WHERE {
  ?actress a dbo:Person .
  ?actress dbo:occupation dbr:Actress .
  
  # Alumnus of Ohio State University
  ?actress dbo:almaMater dbr:Ohio_State_University .

  # Spouse relationship with someone born as Ted McGinley
  ?spouse a dbo:Person ;
          dbo:birthName dbr:Ted_McGinley .
  
  ?actress dbo:spouse ?spouse .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,34,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent1 ?parent2 WHERE {
  # Part 1: Parent of Archduchess Ilona of Austria
  OPTIONAL {
    dbr:Archduchess_Ilona_of_Austria dbo:parent ?parent1 .
  }

  # Part 2: Parent of the native of a landmark at elevation 96.0 that is a settlement
  OPTIONAL {
    ?landmark a dbo:Place ;
              dbo:elevationAboveSeaLevel ?elevation ;
              dbo:settlementType ?settlementType .
    FILTER (?elevation = ""96.0""^^xsd:float && ?settlementType != """")
    
    ?native dbo:nativePlace ?landmark ;
            dbo:parent ?parent2 .
  }
}
```",4,5,5,3,2,3,3,71,2,0,0,1.0,1.0,1.0
617,61,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find the commander in Battle of Panium
  ?commander dbo:participatedInBattle dbr:Battle_of_Panium .
  
  # Identify the child of this commander
  ?child dbo:childOf ?commander .

  # Find Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             rdfs:label ""Antiochus (son of Antiochus III the Great)""@en .
  
  # Identify his successor
  ?successor dbo:succededBy ?antiochus .

  # Find the child of this successor
  ?childOfSuccessor dbo:childOf ?successor .

  # Find the spouse of this child
  ?spouse dbo:spouse ?childOfSuccessor ;
          a dbo:Royalty .

  # Identify the parent of the child of the commander
  ?parent dbo:parentOf ?child .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
659,56,test,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Commander in the Battle of Leipzig
  ?battle a dbo:Battle ;
          dbo:commander ?commander .
  FILTER (STR(?battle) = ""Battle_of_Leipzig"")

  # Commander in Arthur Wellesley's forces
  ?welForce a dbo:MilitaryConflict ;
            dbo:commander ?commander .
  ?welForce dbo:participatedIn dbr:Arthur_Wellesley,1st_Duke_of_Wellington .

  # Societal event and military conflict involving Rutger Jan Schimmelpenninck
  ?event dbo:relatedTo dbr:Rutger_Jan_Schimmelpenninck ;
         a (dbo:SocietalEvent | dbo:Event | dbo:MilitaryConflict) .
  
  # Ensure the commander is related to the event
  ?commander dbo:participatedIn ?event .
}
```",6,9,7,3,3,3,3,71,0,0,6,0,0.0,0
747,34,test,"Give me the band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find the athlete and soccer player who died in Zolotonosha
  ?athlete a dbo:Athlete ;
           a dbo:SoccerPlayer ;
           dbo:deathPlace dbr:Zolotonosha .
  
  # Get their birth date
  ?athlete dbo:birthDate ?date .

  # Find the band associated with Shèna
  ?band dbo:member ?shena .
  ?shena foaf:name ""Shèna"" .
  ?band dbo:member ?bandMember .

  # Ensure the band member was born on the same date as the athlete
  ?bandMember dbo:birthDate ?sameDate .
  FILTER (?date = ?sameDate)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
994,69,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Meshuggah's band members
SELECT ?member WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""Meshuggah""@en .
  ?band dbo:bandMember ?member .
}

# Step 2: Find associated musical artists for each member of Meshuggah
SELECT DISTINCT ?associatedArtist WHERE {
  VALUES ?member { ?meshuggahMember }
  ?member dbo:associatedBand ?associatedArtist .
  ?associatedArtist a dbo:Band .
}

# Step 3: Identify Watchtower's associated musical artist
SELECT DISTINCT ?watchtowerAssociatedArtist WHERE {
  ?band rdfs:label ""Watchtower""@en .
  ?band dbo:associatedBand ?watchtowerAssociatedArtist .
  ?watchtowerAssociatedArtist a dbo:Band .
}

# Step 4: Find associated musical artists of the Watchtower's associated artist
SELECT DISTINCT ?finalAssociatedArtist WHERE {
  VALUES ?watchtowerAssociatedArtist { ?watchtowerMember }
  ?watchtowerAssociatedArtist dbo:associatedBand ?finalAssociatedArtist .
  ?finalAssociatedArtist a dbo:Band .
}

# Step 5: Identify band members where Don Dokken is a persona
SELECT DISTINCT ?bandMember WHERE {
  ?person rdfs:label ""Don Dokken""@en .
  ?person dbo:birthDate ?date .
  ?band dbo:bandMember ?bandMember .
  ?band dbo:associatedBand ?person .
}

# Combine results to get the final answer
SELECT DISTINCT ?resultArtist WHERE {
  VALUES ?meshuggahAssociatedArtist { ?meshuggahResult }
  VALUES ?finalWatchtowerAssociatedArtist { ?watchtowerFinalResult }
  VALUES ?donDokkenBandMember { ?dokkenResult }

  UNION {
    ?resultArtist = ?meshuggahAssociatedArtist .
  }
  UNION {
    ?resultArtist = ?finalWatchtowerAssociatedArtist .
  }
  UNION {
    ?band dbo:bandMember ?donDokkenBandMember .
    ?band dbo:associatedBand ?resultArtist .
  }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
10,28,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v3 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?sharon a dbo:Person ;
          dbo:birthName ?birthName .
  
  ?artist a dbo:Artist ;
          dbo:associatedBandMember dbr:Luke_Francis_Vibert ;
          dbo:associatedArtist dbr:Matt_Colton .

  ?sharon dbo:professional ?professional .
  FILTER (?professional = ?artist)
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
16,48,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Gigi Rice""@en .
  
  ?tedMcGinley a dbo:Person ;
               dbo:birthName ""Ted McGinley""@en .

  ?tedMcGinley dbo:spouse ?person .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
328,52,test,Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ferenc Szálasi's commander
  ?szalasiCommander a dbo:Person ;
                    dbo:commanderOf dbr:Ferenc_Szálasi .

  # Awardee of the Volcano and Ryukyu Islands Campaign
  ?campaignAward a dbo:Award ;
                 dbo:recipient ?person ;
                 dbo:relatedEvent dbr:Volcano_and_Ryukyu_Islands_campaign .

  # Leader of People's Commissariat of Defense of the Soviet Union
  ?sovietLeader a dbo:Person ;
                dbo:position dbr:People's_Commissar_for_Defence_of_the_Soviet_Union ;
                rdfs:label ?personLabel .

  FILTER (str(?szalasiCommander) = str(?campaignAward))
  FILTER (str(?campaignAward) = str(?sovietLeader))
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
314,20,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the award received by Sergei Makovetsky
  ?award dbo:recipient dbr:Sergei_Makovetsky .
  
  # Find a person who is an awardee of that same award
  ?person dbo:award ?award .

  # Ensure this person was deceased in Madrid
  ?person dbo:deathPlace dbr:Madrid .

  # Check if the person was a commander in the Spanish Civil War
  ?person dbo:memberOf dbr:Spanish_Civil_War_Commanders .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
712,16,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?restingPlace WHERE {
  # Part 1: Capital of the country associated with ""Armed Forces of South Russia""
  OPTIONAL {
    ?country a dbo:Country .
    ?country rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""armed forces south russia"") || CONTAINS(LCASE(?label), ""russia""))
    ?country dbo:capital ?capital .
  }

  # Part 2: Resting place of an awardee of Hero of the Soviet Union
  OPTIONAL {
    ?person a dbo:Person ;
            dbo:award dbr:Hero_of_the_Soviet_Union .
    ?person dbo:deathPlace ?restingPlace .
  }
}
```",4,4,5,2,2,3,2,20,1,69,0,0.014285714285714285,1.0,0.028169014084507043
547,25,test,Give me the resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  # Resting place of Simon Cadell
  OPTIONAL {
    VALUES ?person { dbr:Simon_Cadell }
    ?person dbo:deathPlace ?deathPlace .
  }

  # Resting places of awardees of Knight Grand Cross of the Order of St Michael and St George
  OPTIONAL {
    ?awardee dbo:honoursReceived dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    ?awardee dbo:deathPlace ?deathPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
659,31,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Condition for being an office holder in the Kingdom of Ireland
  ?officeHolderPosition a dbo:Office ;
                       dbo:officeHolder ?person ;
                       rdfs:label ""Kingdom of Ireland""@en .
  
  # Condition for being a commander at the Battle of Leipzig
  ?battleEvent a dbo:MilitaryConflict ;
               dbo:militaryCommander ?person ;
               rdfs:label ""Battle of Leipzig""@en .
}
```",4,5,5,3,2,3,3,71,0,0,19,0,0.0,0
328,22,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  
  # Awardee of Order of Suvorov
  ?awardEvent dbo:recipient ?person ;
              dbo:award dbr:Order_of_Suvorov .

  # Leader of a government agency during Joseph Stalin's time
  ?agency dbo:headOfState ?person ;
          dbo:leader ?person .
  
  OPTIONAL {
    ?stalin dbo:officeHolder ?position .
    ?position dbo:heldBy ?person .
    FILTER (CONTAINS(LCASE(?stalin), ""joseph stalin""))
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
339,16,test,Give me the child of the child of Christian IX of Denmark and father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildOfChristianIX ?fatherOfElenaChild WHERE {
  # Christian IX of Denmark
  dbr:Christian_IX_of_Denmark a dbo:Person .

  # Child of Christian IX
  ?childOfChristianIX dbo:spouse|dbo:child dbr:Christian_IX_of_Denmark .
  
  # Grandchild of Christian IX (Child of the child)
  ?grandchildOfChristianIX dbo:child ?childOfChristianIX .

  # Grand Duchess Elena Vladimirovna of Russia
  dbr:Grand_Duchess_Elena_Vladimirovna_of_Russia a dbo:Person .

  # Child of Grand Duchess Elena Vladimirovna
  ?childOfElena dbo:child dbr:Grand_Duchess_Elena_Vladimirovna_of_Russia .
  
  # Father of the child of Grand Duchess Elena Vladimirovna
  ?fatherOfElenaChild dbo:spouse|dbo:child ?childOfElena .

  # Find common person who is both grandchild of Christian IX and father of a child of Elena
  FILTER (?grandchildOfChristianIX = ?fatherOfElenaChild)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
177,9,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in the residence of Alexander Gamelin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://dbpedia.org/ontology/location> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarter WHERE {
  ?person1 foaf:name ""Joo Don-sik""@en .
  ?position dbo:agent ?person1 ;
            dbo:organization ?org .
  ?org dbo:headquarterLocation ?headquarter .

  ?person2 foaf:name ""Alexander Gamelin""@en .
  ?residence dbo:resident ?person2 .
  
  FILTER (?headquarter = ?residence)
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
617,47,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?spouse WHERE {
  # Seleucus II Callinicus and his child
  dbr:Seleucus_II_Callinicus a dbo:Person .
  ?child dbo:child dbr:Seleucus_II_Callinicus .
  
  # Child of the child (grandchild) who is royalty
  ?grandchild dbo:child ?child ;
              a dbo:RoyalFamilyMember .

  # Antiochus III and his successor
  dbr:Antiochus_III_the_Great a dbo:Person .
  ?successor dbo:successorOf dbr:Antiochus_III_the_Great .
  
  # Child of the successor who is royalty
  ?childSuccessor dbo:child ?successor ;
                  a dbo:RoyalFamilyMember .

  # Spouse relationship between grandchild and child of successor
  ?grandchild dbo:spouse ?childSuccessor ;
              dbo:spouse ?spouse .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
492,60,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Death place at the capital of Khemis Miliana District
  ?deathPlace1 dbo:country dbr:Algeria ;
              rdfs:label ""Khemis Miliana""@en ;
              a dbo:Settlement .
  ?person dbo:deathPlace ?deathPlace1 .

  # Death place related to an author's work from French Algeria
  ?author dbo:nationality dbr:French_Algérie ;
          dbo:work ?work .
  ?deathPlace2 dbo:location ?work .
  ?person dbo:deathPlace ?deathPlace2 .
}
```",6,7,7,3,2,3,3,71,0,0,16,0,0.0,0
391,57,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Find Sherry Hormann's spouse
  ?sherry a dbo:Person ;
          foaf:name ""Sherry Hormann"" .
  
  ?sherry dbo:spouse ?spouse .

  # Step 2: Identify the claim to fame of Sherry Hormann's spouse
  ?work dbo:actor ?spouse ;
        a dbo:Film ; # Assuming it is a film, adjust if necessary

  # Step 3: Find an actor from Compton, California in this work
  ?actor dbo:nativePlace dbr:Compton,_California ;
         dbo:actor ?work .

  # Step 4: Identify a movie/work/TV show featuring both Roz Ryan and the identified actor
  ?sharedWork dbo:cast ?actor ;
              dbo:cast dbr:Roz_Ryan .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
767,45,test,"Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find Carl L. Nippert's alma mater
SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carl L. Nippert"" .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query to find an entity in Baden-Württemberg
SELECT ?entity WHERE {
  ?entity dbo:location dbr:Baden-Württemberg .
}

UNION

# Query to find Matthew Burland's fictional alter ego
SELECT ?alterEgo WHERE {
  ?person a dbo:Person ;
          foaf:name ""Matthew Burland"" .
  ?person dbo:alterEgo ?alterEgo .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
92,26,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the movie resource
  dbr:Return_to_Nuke_'Em_High_Volume_1 a dbo:Film .
  
  # Identify actors in this film
  ?filmRole dbo:actor ?person .
  FILTER (strstarts(str(?filmRole), str(dbr:Return_to_Nuke_'Em_High_Volume_1)))

  # Check if the person is also recognized as an artist
  ?person a dbo:Person ;
          dbo:profession ?profession .
  
  # Ensure one of their professions is 'Artist'
  FILTER EXISTS { 
    ?profession rdfs:label ""Artist""@en .
  }
}
```",3,4,4,3,1,3,3,71,0,0,126,0,0.0,0
281,46,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Get Bob Heffron's birth place
  ?bob a dbo:Person ;
       foaf:name ""Bob Heffron"" ;
       dbo:birthPlace ?birthPlace .

  # Ensure the birth place is a country
  ?birthPlace a dbo:Country .

  # Get Jonathon Band's award and associated war
  ?jonathon a dbo:Person ;
            foaf:name ""Jonathon Band"" ;
            dbo:award ?award .
  
  ?award dbo:relatedWar ?war .

  # Find entities in the birth place that are related to the war
  ?entity dbo:location ?birthPlace ;
          dbo:relatedEvent ?war .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,55,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?largoForce ?molaForce ?francoForce WHERE {
  # Francisco Largo Caballero's military force
  ?largoPerson a dbo:Person ;
               foaf:name ""Francisco Largo Caballero""@en .
  ?largoForce dbo:militaryConflict ?largoEvent ;
              a dbo:MilitaryForce, dbo:Event .

  # Emilio Mola's commanded military force
  ?molaPerson a dbo:Person ;
              foaf:name ""Emilio Mola""@en .
  ?molaForce dbo:commander ?molaPerson ;
             a dbo:MilitaryForce, dbo:Event .

  # Francisco Franco's military force
  ?francoPerson a dbo:Person ;
                foaf:name ""Francisco Franco""@en .
  ?francoForce dbo:militaryConflict ?francoEvent ;
               a dbo:MilitaryForce, dbo:Event, dbo:SocietalEvent .
}
```",6,12,7,2,3,3,3,71,0,0,32,0,0.0,0
378,45,test,"Give me the war of Joaquín Blake and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?claimToFame ?event WHERE {
  # Wars involving Joaquín Blake and Carl Pontus Gahn
  { 
    ?war a dbo:MilitaryConflict .
    ?war dbo:participant ?joaquinBlake .
    ?joaquinBlake rdfs:label ""Joaquín Blake""@en .
  } UNION {
    ?war a dbo:MilitaryConflict .
    ?war dbo:participant ?carlPontusGahn .
    ?carlPontusGahn rdfs:label ""Carl Pontus Gahn""@en .
  }

  # Commanders and their claims to fame
  ?war dbo:commander ?commander .
  OPTIONAL { ?commander dbo:claimToFame ?claimToFame . }
  
  # Thomas Trigge's involvement in military conflicts or societal events
  {
    ?event a dbo:MilitaryConflict ;
           dbo:participant dbr:Thomas_Trigge .
  } UNION {
    ?event a dbo:SocietalEvent ;
           dbo:participant dbr:Thomas_Trigge .
  }
}
```",5,8,6,3,3,3,3,71,0,0,2,0,0.0,0
161,32,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?francoForce ?caballeroForce WHERE {
  # Francisco Franco's military force in societal events and military conflicts
  ?francoEvent a dbo:MilitaryConflict ;
               dbo:participatedIn ?francoPerson .
  ?francoPerson rdfs:label ""Francisco Franco""@en .
  ?francoEvent dbo:militaryForce ?francoForce .

  # Francisco Largo Caballero's military force in societal events and military conflicts
  ?caballeroEvent a dbo:MilitaryConflict ;
                  dbo:participatedIn ?caballeroPerson .
  ?caballeroPerson rdfs:label ""Francisco Largo Caballero""@en .
  ?caballeroEvent dbo:militaryForce ?caballeroForce .

  # Ensure the events are societal events
  OPTIONAL { ?francoEvent a dbo:SocietalEvent . }
  OPTIONAL { ?caballeroEvent a dbo:SocietalEvent . }
}
```",4,9,5,2,2,3,3,71,0,0,514,0,0.0,0
617,54,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfNysa ?spouse WHERE {
  # Identify Nysa and her parent(s)
  VALUES ?nysa { dbr:Nysa_of_Pontus }
  ?nysa dbo:spouse dbr:Pharnaces_I_of_Pontus .
  ?nysa dbo:parent ?parentOfNysa .

  # Find Antiochus IV Epiphanes as successor of Antiochus III's son
  VALUES ?antiochusIV { dbr:Antiochus_IV_Epiphanes }
  ?antiochusIV dbo:successorOf dbr:Antiochus_III_the_Great .
  
  # Find child of Antiochus IV who is royalty
  ?childOfAntiochusIV dbo:parent ?antiochusIV ;
                     a dbo:Person, dbo:Royalty .

  # Spouse of this royal child
  ?spouse dbo:spouse ?childOfAntiochusIV .

  # Identify Seleucus II Callinicus' descendant who is royalty
  VALUES ?seleucusII { dbr:Seleucus_II_Callinicus }
  ?descendant dbo:parent ?grandChild ;
              a dbo:Person, dbo:Royalty .
  ?grandChild dbo:parent ?seleucusII .

  # Parent of this royal descendant
  ?parentOfDescendant dbo:child ?descendant .

  # Final connection: parent of Nysa and spouse of the child of successor
  FILTER (?parentOfNysa = ?spouse)
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
617,19,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Boleslaus I, Duke of Bohemia
  dbr:Boleslaus_I,_Duke_of_Bohemia a dbo:Person .
  
  # Find his child who is royalty
  ?child dbo:parent dbr:Boleslaus_I,_Duke_of_Bohemia ;
         a dbo:Royalty .

  # Find the grandchild (child of the royal child)
  ?grandchild dbo:parent ?child .

  # Richeza of Poland's reference
  ?reference rdfs:label ""Richeza of Poland""@en .
  
  # Identify who refers to Richeza as royalty and find their parent
  ?person dbo:spouse ?reference ;
          a dbo:Royalty .
  ?parent dbo:child ?person .

  # Find the father of that person
  ?father dbo:child ?parent .

  # Ensure the grandchild is the same as the child of the father identified above
  FILTER (?grandchild = ?father)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
666,17,test,"Give me the player in Steve Bruce and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  ?team a dbo:SoccerClub .
  ?team rdfs:label ?nickname .
  FILTER (CONTAINS(LCASE(?nickname), ""united"") || CONTAINS(LCASE(?nickname), ""city"") || CONTAINS(LCASE(?nickname), ""pool""))
  
  dbr:Steve_Bruce dbo:manager ?team .

  ?player dbo:playsFor ?team ;
          a dbo:Person .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,37,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the commander of the Battle of Verdun
  ?battle a dbo:MilitaryConflict ;
          dbo:commander ?verdunCommander .
  
  FILTER (STR(?battle) = ""Battle_of_Verdun"") .

  # Ensure this commander is involved in another military conflict or event as a commander
  ?conflict a dbo:MilitaryConflict ;
           dbo:commander ?commander .
  
  # Link the commander to a person who died in Algiers
  ?person a dbo:Person ;
          dbo:deathPlace dbr:Algiers ;
          dbo:commander ?commander .

  # Ensure the commanders are the same entity
  FILTER (?verdunCommander = ?commander)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
9,57,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?nickname WHERE {
  # Find John Alderdice's alma mater
  OPTIONAL {
    ?johnAlderdice a dbo:Person ;
                   foaf:name ""John Alderdice"" ;
                   dbo:almaMater ?almaMater .
  }
  
  # Find the nickname of Queen's University Belfast
  ?queenUni a dbo:EducationalInstitution ;
           foaf:name ""Queen's University Belfast"" ;
           rdfs:label ?nickname .

  # Find notable alumni related to Royal Medals from Queen's University Belfast
  OPTIONAL {
    ?alumnus a dbo:Person ;
             dbo:almaMater dbr:Queen%27s_University_Belfast ;
             dbo:awardReceived ?royalMedal .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,70,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/office> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Find the award associated with Bruce Fraser
  ?award dbo:recipient dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
  
  # Identify the awardee who was a commander in force at Budapest and decedent there
  ?awardee dbo:commanderInForce ?force .
  ?awardee dbo:decedentPlace dbr:Budapest .

  # Ensure this person is linked to a government agency led by Gustav Jonson
  ?agency dbo:leaderOfOffice dbr:Gustav_Jonson .
  ?awardee dbo:officeHolder ?agency .

  # Connect the awardee to the award
  ?award dbo:recipient ?awardee .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
534,20,test,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/headquarter> ?result . ?v4 <http://dbpedia.org/ontology/owner> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarter WHERE {
  # Find the venue of the 2012 Pro12 Grand Final
  ?event a dbo:Event ;
         dbo:location ?venue .
  
  FILTER (str(?event) = ""2012 Pro12 Grand Final"")
  
  # Ensure the venue is an architectural structure
  ?venue a dbo:Venue, dbo:ArchitecturalStructure .

  # Find the owner of the venue
  ?venue dbo:owner ?owner .

  # Get the headquarters of the owner
  ?owner dbo:headquarters ?headquarter .

  # Find the native politician from Essex
  ?politician a dbo:Politician ;
              dbo:nativePlace dbr:Essex .
  
  # Identify their child who is also a politician and office holder
  ?child dbo:parent ?politician ;
         a dbo:Person, dbo:Politician .

  # Determine the birthplace of this child
  ?child dbo:birthPlace ?birthPlace .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
528,64,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war a dbo:War .
  
  # Orozimbo Barbosa as a participant in the war
  ?barbosaParticipant dbo:participant ?war ;
                      rdfs:label ""Orozimbo Barbosa""@en .

  # Participant from Chile involved in the war
  ?chileParticipant dbo:country dbr:Chile ;
                    dbo:participant ?war .
  
  # Narciso Campero as a participant with birth name
  ?camperoParticipant dbo:birthName ""Narciso Campero""@en ;
                      dbo:participant ?war .

  FILTER EXISTS { ?barbosaParticipant }
  FILTER EXISTS { ?chileParticipant }
  FILTER EXISTS { ?camperoParticipant }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
421,27,test,Give me the band member of Senidah and person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find Senidah's band member
  ?bandMember dbo:memberOfBand dbr:Senidah .
  
  # Find Dino Merlin's birth name
  ?dinoMerlin a dbo:Person ;
              dbo:birthName ?birthName .

  # Ensure the band member has the same birth name as Dino Merlin
  ?bandMember dbo:birthName ?birthName .

  # Find Samir Bekrić's birthplace
  ?samirBekric a dbo:Person ;
               dbo:birthPlace ?birthPlace .

  # Ensure the band member is native of Samir Bekrić's birthplace
  ?bandMember dbo:nativeOf ?birthPlace .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,57,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfParent WHERE {
  # Prince George William of Hanover
  ?princeGeorge a dbo:Person ;
                rdfs:label ""Prince George William of Hanover""@en .
  
  # Princess Victoria Louise of Prussia
  ?princessVictoria a dbo:Person ;
                    rdfs:label ""Princess Victoria Louise of Prussia""@en .

  # Their spouse relationship
  ?princeGeorge dbo:spouse ?princessVictoria .
  
  # Find their child who is royalty
  ?child dbo:parent ?princeGeorge ;
         dbo:parent ?princessVictoria ;
         a dbo:Person ;
         rdfs:label ?childLabel .

  FILTER (CONTAINS(LCASE(?childLabel), ""royalty""))

  # Parent of this royal child
  ?parentOfChild dbo:child ?child .
  
  # Ernest Augustus, Duke of Brunswick
  ?ernestAugustus a dbo:Person ;
                  rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .

  # His father
  ?fatherOfErnestAugustus dbo:child ?ernestAugustus .

  # Child of his father
  ?childOfFather dbo:parent ?fatherOfErnestAugustus .
  
  # Parent of this child (final answer)
  ?parentOfParent dbo:child ?childOfFather .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
547,21,test,Give me the resting place of Alan Cunningham and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alanRestingPlace ?childRestingPlace WHERE {
  # Resting place of Alan Cunningham
  OPTIONAL {
    ?alan a dbo:Person ;
          rdfs:label ""Alan Cunningham""@en .
    ?alan dbo:deathPlace ?alanRestingPlace .
  }

  # Resting place of the child of James Burton (property developer)
  OPTIONAL {
    ?james a dbo:Person ;
           rdfs:label ""James Burton (property developer)""@en .
    ?child dbo:parent ?james ;
           dbo:deathPlace ?childRestingPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,33,test,Give me the spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?actor WHERE {
  # Find Ted McGinley's spouse
  dbr:Ted_McGinley dbo:spouse ?spouse .

  # Find the actor in ""Unnatural"" TV series
  dbr:Unnatural_(TV_series) dbo:starring ?actor .
  
  # Ensure that this person is an actor
  ?actor a dbo:Actor .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
696,16,test,Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find an award associated with Nie Rongzhen and its elevation
  ?award dbo:recipient dbr:Nie_Rongzhen .
  OPTIONAL { ?award dbo:elevation ?elevation . }
  
  # Find a member of Dropkick Murphys and their birthplace
  ?member dbo:band dbr:Dropkick_Murphys .
  ?member dbo:birthPlace ?birthPlace .

  # Assuming the landmark is at the intersection of these two locations
  ?landmark dbo:elevation ?elevation .
  FILTER (?birthPlace = ?award)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
767,39,test,"Give me the alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?alterEgo WHERE {
  # Alma mater of Carl L. Nippert
  OPTIONAL {
    ?nippert a dbo:Person ;
            foaf:name ""Carl L. Nippert"" ;
            dbo:almaMater ?almaMater .
  }
  
  # Alter ego of Matthew Burland (assuming he is known as ""The Amazing Puddin'"")
  OPTIONAL {
    ?burland a dbo:Person ;
             foaf:name ""Matthew Burland"" ;
             dbo:fictionalAlterEgo ?alterEgo .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
77,16,test,Give me the force of the mayor of Congress Poland and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find individuals who were mayors of Congress Poland
  ?mayor a dbo:Person ;
         dbo:officeHolder ?office .
  ?office rdfs:label ""Mayor of Congress Poland""@en .

  # Find individuals awarded the Golden Weapon for Bravery during a war
  ?awardee a dbo:Person ;
           dbo:honorAwarded ?award .
  ?award rdfs:label ""Golden Weapon for Bravery""@en .

  # Ensure the same person is both mayor and awardee
  FILTER (?mayor = ?awardee)
}
```",4,4,5,2,2,3,2,20,0,0,13,0,0.0,0
54,55,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapateChild dbo:childOf dbr:Thihapate_of_Mohnyin ;
                  a dbo:Person, dbo:OfficeHolder, dbo:Royalty .

  # Predecessor of this child
  ?predecessor dbo:predecessor ?thihapateChild .

  # Narapati I of Ava's child
  ?narapatiChild dbo:childOf dbr:Narapati_I_of_Ava ;
                 a dbo:Person .

  # Soe Min Wimala Dewi's father
  ?soeminFather dbo:parentOf dbr:Soe_Min_Wimala_Dewi ;
                a dbo:Person .

  # The child must be the child of both Narapati I and Soe Min Wimala Dewi's father
  FILTER (?thihapateChild = ?narapatiChild && ?thihapateChild = ?soeminFather)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
55,27,test,"Give me the band of the reference, that is a band, to Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Find Metallica as the band associated with Jason Newsted
  dbr:Jason_Newsted a dbo:Person .
  ?metallicaBand dbo:musicalArtist dbr:Metallica ;
                 dbo:bandMember dbr:Jason_Newsted .

  # Find members of Metallica who are also part of San Francisco Symphony and Guns N' Roses
  ?member dbo:bandMember ?metallicaBand ;
          dbo:bandMember dbr:Guns_N'_Roses ;
          dbo:bandMember dbr:San_Francisco_Symphony .

  # Return the band associated with Jason Newsted
  ?band dbo:musicalArtist ?metallicaBand .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
492,47,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the military conflict associated with the Battle of Verdun
  dbr:Battle_of_Verdun dbo:partOf ?war .
  
  # Identify commanders involved in that war
  ?commander dbo:commandedMilitaryConflict ?war .

  # Find where Joseph C. Satterthwaite died
  dbr:Joseph_C._Satterthwaite dbo:deathPlace ?deathPlace .

  # Check if any commander was associated with the same place of death during that war
  ?commander dbo:deathPlace ?deathPlace .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
404,67,test,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalPerson WHERE {
  # Step 1: Find Princess Victoria Louise of Prussia's spouse
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Step 2: Find the child of this spouse who is royalty
  ?spouse dbo:child ?royalChild .
  ?royalChild a dbo:Royalty .

  # Step 3: Trace back two generations from Prince George William of Hanover
  dbr:Prince_George_William_of_Hanover dbo:parent ?parent1 .
  ?parent1 a dbo:Royalty .
  ?parent1 dbo:parent ?grandParent .
  ?grandParent a dbo:Royalty .

  # Step 4: Identify the father of Princess Victoria Louise of Prussia's spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 5: Find the child of this father who matches the conditions
  ?fatherOfSpouse dbo:child ?finalPerson .
  
  FILTER (?royalChild = ?finalPerson)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
378,65,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find Carl Pontus Gahn's claim to fame
SELECT ?person ?claimToFame WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:birthDate ?date .
  OPTIONAL { ?person dbo:occupation ?claimToFame . }
}

# Query to find the commander of the Great Siege of Gibraltar and their involvement in wars
SELECT ?commander ?war WHERE {
  dbr:The_Great_Siege_of_Gibraltar dbo:commander ?commander .
  ?commander dbo:participatedInWar ?war .
  FILTER (?war != dbr:The_Peninsular_War)
  
  # Check if the commander was also involved in the Peninsular War
  OPTIONAL { 
    ?commander dbo:participatedInWar dbr:The_Peninsular_War .
  }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
54,32,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Find the father of Soe Min Wimala Dewi
  ?soeMinWimalaDewi a dbo:Person ;
                   dbo:parent ?father .
  
  # The individual we are looking for is the child of this father
  ?individual dbo:parent ?father .

  # Find the children of Narapati I of Ava
  ?narapatiI dbr:Narapati_I_of_Ava ;
            dbo:child ?childOfNarapatiI .
  
  # The individual we are looking for is a parent of this child
  ?individual dbo:parent ?childOfNarapatiI .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
161,64,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Find the military force associated with El Director during the Spanish Civil War
  ?elDirector a dbo:Person ;
              rdfs:label ""El Director""@en .
  
  ?civilWar a dbo:MilitaryConflict ;
            rdfs:label ""Spanish Civil War""@en .

  ?militaryForce dbo:militaryForceOf ?civilWar ;
                 dbo:commander ?commander ;
                 dbo:member ?elDirector .

  # Find the person who died in Francoist Spain
  ?person a dbo:Person ;
          dbo:deathPlace dbr:Francoist_Spain .
  
  ?societalEvent a dbo:SocietalEvent, dbo:MilitaryConflict ;
                dbo:militaryForceOf ?militaryForce ;
                dbo:member ?person .

}
```",7,11,8,3,3,3,3,71,0,0,32,0,0.0,0
92,49,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?bandOfPerson WHERE {
  # Step 1: Find band members of Nevermore who are artists
  ?member a dbo:BandMember ;
          dbo:band dbr:Nevermore ;
          dbo:artist ?artist .

  # Step 2: Find the person born as Joseph Michael
  ?person a dbo:Person ;
          dbo:birthName ""Joseph Michael""^^xsd:string .
  
  # Step 3: Determine the band of this person
  ?person dbo:band ?bandOfPerson .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,59,test,Give me the parent of the child of the child of Seti I and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Seti I's great-grandchild's parent
SELECT ?setiGreatGrandchildParent WHERE {
  ?setiI a dbo:Person ;
         rdfs:label ""Seti I""@en .
  
  ?setiIC1 dbo:child ?setiChild .
  ?setiChild dbo:child ?setiGrandchild .
  ?setiGrandchild dbo:parent ?setiGreatGrandchildParent .

}

# Step 2: Find the parent of Amun-her-khepeshef's spouse's child
SELECT ?amunSpouseChildParent WHERE {
  ?amunHerKhepeshef a dbo:Person ;
                    rdfs:label ""Amun-her-khepeshef""@en .
  
  ?amunHerKhepeshef dbo:spouse ?spouse .
  ?spouse dbo:child ?spouseChild .
  ?spouseChild dbo:parent ?amunSpouseChildParent .

}

# Step 3: Find the common entity
SELECT DISTINCT ?commonEntity WHERE {
  VALUES ?setiGreatGrandchildParent { ?setiGreatGrandchildParent }
  VALUES ?amunSpouseChildParent { ?amunSpouseChildParent }

  FILTER (?setiGreatGrandchildParent = ?amunSpouseChildParent)
  BIND(?setiGreatGrandchildParent AS ?commonEntity)
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
378,47,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carl Pontus Gahn""@en ;
          dbo:birthDate ?date .
  
  ?person dbo:militaryConflict ?war .

  FILTER EXISTS { 
    ?peninsularWar a dbo:MilitaryConflict ;
                   rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""peninsular war"") && CONTAINS(LCASE(STR(?war)), LCASE(STR(?label))))
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
701,71,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Spouse of Amun-her-khepeshef
  ?spouse1 a dbo:Person ;
           dbo:spouse dbr:Amun-her-khepeshef .

  # Child of the spouse of Amun-her-khepeshef
  ?child1 dbo:parent ?spouse1 .

  # Parent of that child
  ?parent1 dbo:child ?child1 .

  # Child of Seti I
  ?child2 dbo:parent dbr:Seti_I .

  # Grandchild of Seti I (Child of the child)
  ?grandchild dbo:parent ?child2 .

  # Parent of that grandchild
  ?parent2 dbo:child ?grandchild .

  # Father of the commander
  ?father a dbo:Person ;
          dbo:spouse ?spouse2 .

  # Spouse of that father
  ?spouse2 a dbo:Person .

  # Commander (related through father)
  ?commander dbo:parent ?father .

  # Find common person fitting all roles and royalty in Battle of Perire
  FILTER (?person = ?parent1 && ?person = ?parent2) .
  
  # Ensure the person is royalty involved in the Battle of Perire
  ?person a dbo:RoyalPerson ;
          dbo:participatedIn dbr:Battle_of_Perire .
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
92,61,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find Joe Satriani's band
SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joe Satriani"" ;
          dbo:birthName ?birthName .
  FILTER (CONTAINS(LCASE(?birthName), ""joseph michael""))
  ?person dbo:memberOfBand ?band .
}

# Query to find the actor in Return to Nuke 'Em High Volume 1 and their associated musical artist
SELECT ?actor ?musicalArtist WHERE {
  ?film a dbo:Film ;
        foaf:name ""Return to Nuke 'Em High Volume 1"" .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:associatedMusicalArtist ?musicalArtist . }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
701,58,test,"Give me the parent of the child of Ramesses II and parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ramesses II is the parent of Meritamen
  dbr:Ramesses_II a dbo:Person ;
                  dbo:child dbr:Merenptah ;
                  dbo:spouse ?spouse .

  # Identify commander in Battle of Perire and his father's spouse
  ?commander dbo:participatedInBattle dbr:Battle_of_Perire .
  ?father dbo:child ?commander .
  ?father dbo:spouse ?mother .

  # Ensure the person is royalty
  FILTER (?person = ?spouse && ?person a dbo:Royalty)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,24,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace WHERE {
  # Part 1: Administration of the ruling party in Sicily
  ?party a dbo:PoliticalParty .
  ?party dbo:headquarters ?location .
  FILTER(CONTAINS(LCASE(STR(?location)), ""sicily"")) .
  OPTIONAL { ?party dbo:leader ?administration . }

  # Part 2: Death place of the author of The Twelve Abbots of Challant
  dbr:The_Twelve_Abbots_of_Challant dbo:author ?author .
  ?author dbo:deathPlace ?deathPlace .

}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
994,45,test,"Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for associated musical artist of Red Tide (band)
SELECT ?associatedArtist WHERE {
  dbr:Red_Tide_(band) dbo:associatedMusicalArtist ?associatedArtist .
}

UNION

# Query for associated musical artist of S.A. Slayer
SELECT ?associatedArtist WHERE {
  dbr:S._A._Slayer dbo:associatedMusicalArtist ?associatedArtist .
}

UNION

# Query for band members of Don Dokken who are also individual artists
SELECT ?bandMember WHERE {
  dbr:Dokken dbo:member ?bandMember .
  ?bandMember a dbo:Person .
  OPTIONAL { ?bandMember dbo:birthDate ?date . }
  FILTER EXISTS { ?bandMember dbo:associatedMusicalArtist ?artistRole . }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
16,54,test,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series) and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse WHERE {
  # Find Ted Martin McGinley and his spouse
  ?person1 a dbo:Person ;
           rdfs:label ""Ted Martin McGinley""@en .
  OPTIONAL { ?person1 dbo:spouse ?spouse . }

  UNION

  # Find the actor from ""Unnatural"" TV series and their spouse
  ?tvSeries dbr:Unnatural ;
            dbo:actor ?actor .
  ?actor a dbo:Person ;
         rdfs:label ?actorLabel .
  OPTIONAL { ?actor dbo:spouse ?spouse . }

  UNION

  # Find Georgeanne Marie Rice and her spouse
  ?person2 a dbo:Person ;
           rdfs:label ""Georgeanne Marie Rice""@en .
  OPTIONAL { ?person2 dbo:spouse ?spouse . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,64,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of Red Tide (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Step 1: Find an associated artist of Watchtower
  ?watchtowerArtist dbo:associatedBand dbr:Watchtower .
  
  # Step 2: Check if this artist is a band member of another band with Don Dokken as persona
  ?bandMemberOfArtist dbo:associatedBand ?dokkenBand .
  ?dokkenBand dbo:leadPerson dbr:Don_Dokken .

  # Ensure the person is also an associated artist of Red Tide
  ?artist dbo:associatedBand dbr:Red_Tide .
  
  # Link all conditions together
  FILTER (?watchtowerArtist = ?bandMemberOfArtist && ?watchtowerArtist = ?artist)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
161,63,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Emilio Mola's military involvement
  ?militaryEvent1 a dbo:MilitaryConflict ;
                  dbo:societalEvent ?societalEvent1 ;
                  dbo:militaryForce ?militaryForce .
  ?emilioMola dbr:Emilio_Mola ;
              dbo:commanderOf ?militaryEvent1 .

  # Francisco Largo Caballero's military involvement
  ?militaryEvent2 a dbo:MilitaryConflict ;
                  dbo:societalEvent ?societalEvent2 ;
                  dbo:militaryForce ?militaryForce .
  ?franciscoLargo dbr:Francisco_Largo_Caballero ;
                  dbo:commanderOf ?militaryEvent2 .

  # Ensure the military force is related to Francoist Spain
  ?societalEvent1 dbo:place ?place1 .
  ?societalEvent2 dbo:place ?place2 .
  FILTER (?place1 = dbr:Francoist_Spain || ?place2 = dbr:Francoist_Spain)
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
54,69,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v4 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Narapati I of Ava's child
  ?narapatiChild dbo:childOf dbr:Narapati_I_of_Ava .
  
  # Thinkhaya of Pagan's child and predecessor
  ?thinkhayaChild dbo:childOf dbr:Thinkhaya_of_Pagan .
  ?predecessor dbo:succeededBy ?thinkhayaChild .

  # Thihapate of Mohnyin reference as office holder and royalty
  ?thihapate dbo:officeHolder true ;
             a dbo:Royalty ;
             rdfs:label ""Thihapate of Mohnyin""@en .
  
  # Find the parent of Narapati I's child whose child is Thihapate
  ?parent dbo:child ?narapatiChild .
  ?narapatiChild dbo:child ?thihapate .

  FILTER (?predecessor = ?thihapate)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
801,65,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Step 1: Identify the writer of ""40 Dayz & 40 Nightz""
  ?writer a dbo:Writer ;
          dbo:work dbr:40_Dayz_&_40_Nightz .

  # Step 2: Find if this writer is also a musical artist and an artist
  ?writer a dbo:MusicalArtist, dbo:Artist .

  # Step 3: Determine the producer of ""40 Dayz & 40 Nightz""
  dbr:40_Dayz_&_40_Nightz dbo:producer ?artist .
  
  # Ensure the producer is a professional musical artist
  ?artist a dbo:MusicalArtist ;
          dbo:profession dbr:Rapper .

  # Step 4: Check if this producer has the alter ego ""The Shadow""
  ?artist dbo:alterEgo dbr:The_Shadow .
}
```",7,13,8,3,3,3,3,71,0,0,8,0,0.0,0
44,8,test,"Give me the band member of Undertow (band) and band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member WHERE {
  # Find members of Undertow
  ?undertow a dbo:Band ;
            rdfs:label ""Undertow (band)""@en .
  
  ?undertowMember dbo:member ?member .

  # Find members of Queensrÿche as both a band and musical artist
  ?queensryche a dbo:MusicalArtist, dbo:Organization ;
               rdfs:label ""Queensrÿche""@en .
  
  ?queensrychemember dbo:bandMember ?member .

  # Ensure the member is common to both bands
  FILTER (?undertowMember != ?queensryche)
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
92,47,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberArtist WHERE {
  # Find band members of Nevermore who are artists
  ?member a dbo:Person ;
          dbo:bandMemberOfBand dbr:Nevermore ;
          dbo:occupation dbr:Musician .
  
  # Find actors in ""Return to Nuke 'Em High Volume 1""
  ?actor a dbo:Person ;
         dbo:actorInFilm dbr:Return_to_Nuke_'Em_High_Volume_1 ;
         dbo:associatedMusicalArtist ?musicalArtist .

  # Ensure the band member is also an associated musical artist of the actor
  FILTER (?member = ?bandMemberArtist || ?musicalArtist = ?bandMemberArtist)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
378,57,test,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in Great Siege of Gibraltar.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOfGahn ?commander ?claimToFame WHERE {
  # Find the war associated with Carl Pontus Gahn
  ?gahn a dbo:Person ;
        foaf:name ""Carl Pontus Gahn"" ;
        dbo:participatedIn ?warOfGahn .

  # Identify the commander related to both Peninsular War and Great Siege of Gibraltar
  ?commander a dbo:Person ;
             dbo:commanderOf dbr:Peninsular_War ;
             dbo:commanderOf dbr:Great_Siege_of_Gibraltar .

  # Determine the claim to fame of this commander in the context of the Great Siege of Gibraltar
  ?commander dbo:famousFor ?claimToFame .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
801,51,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerArtist WHERE {
  # Find the writer of the album ""What U See Is What U Get""
  ?album a dbo:Album ;
         rdfs:label ""What U See Is What U Get""@en .
  
  ?album dbo:writer ?writer .
  ?writer a dbo:Person, dbo:Artist .

  # Find the producer of any work by 50 Cent
  ?work a dbo:MusicalWork, dbo:Song ;
        dbo:artist dbr:50_Cent .
  
  ?work dbo:producer ?producer .
  FILTER (?writer = ?producer)
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
404,58,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?child a dbo:Person .
  ?child dbo:royalty true .
  
  # Ernest Augustus, Duke of Brunswick is the parent of the child
  ?child dbo:childOf dbr:Ernest_Augustus,_Duke_of_Brunswick .

  # The child is the spouse of Princess Victoria Louise of Prussia
  ?child dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .
  
  # The father of the child is also the spouse of Princess Victoria Louise of Prussia
  ?father dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .
  ?child dbo:parent ?father .

  # Find the parent of this child
  ?parent dbo:parentOf ?child .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,29,test,Give me the reference to  and entity in Baden-Württemberg and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nash ?almaMater ?entityInBW WHERE {
  ?nash a dbo:Person ;
        foaf:name ""George K. Nash"" ;
        dbo:almaMater ?almaMater .
  
  OPTIONAL { 
    ?administration dbo:location ?entityInBW .
    FILTER (CONTAINS(LCASE(STR(?entityInBW)), ""baden-württemberg""))
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
232,57,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:residence ?settlement .
  
  # Settlement is British
  ?settlement a dbo:Settlement ;
              dbo:nativeCountry dbr:United_Kingdom .

  # Actor known for a film that is also a military conflict
  ?actor dbo:film ?film .
  ?film a dbo:MilitaryConflict .

  # Professional in Actor, narrator, and producer who is the child of Jon Pertwee
  ?professional a dbo:Actor ;
                dbo:narrator true ;
                dbo:producer true ;
                dbo:child dbr:Jon_Pertwee .
  
  # Linking actor to professional
  ?actor dbr:Claim_to_fame ?film .
  ?film dbo:claimToFame ?professional .

  # Native of the settlement
  ?settlement dbo:native ?native .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
801,64,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musicalArtist WHERE {
  # Step 1: Identify The Shadow's alter ego
  ?shadowAlterEgo a dbo:Person ;
                  rdfs:label ""The Shadow""@en .
  
  # Step 2: Find the producer of Westside Story (song)
  dbr:Westside_Story_(song) dbo:producedBy ?producer .

  # Step 3: Link to a writer
  ?writer a dbo:Writer ;
          dbo:associatedBandMember ?shadowAlterEgo ;
          dbo:associatedBandMember ?producer .
  
  # Step 4: Identify the album ""What U See Is What U Get""
  ?album a dbo:MusicalWork, dbo:Album ;
         rdfs:label ""What U See Is What U Get""@en ;
         dbo:writer ?writer .

  # Step 5: Find the associated musical artist
  ?musicalArtist a dbo:MusicalArtist, dbo:Artist ;
                 dbo:associatedBandMember ?writer .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
281,63,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceCountry ?warOfAward ?militaryUnit WHERE {
  # Bob Heffron's birth place is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
  BIND(?birthPlace AS ?birthPlaceCountry)

  # Jonathon Band's award related to a war
  dbr:Jonathon_Band dbo:award ?award .
  ?award dbo:war ?warOfAward .

  # Heather Roy's profession is a military unit
  dbr:Heather_Roy dbo:profession ?militaryUnit .
  ?militaryUnit rdf:type dbo:MilitaryUnit .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
767,56,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement ?fictionalCharacter ?almaMater WHERE {
  # Find the settlement associated with ""Green""
  ?settlement a dbo:Settlement .
  ?settlement dbo:administrativeUnit dbr:Green .

  # Find the fictional character related to Matthew Burland
  ?fictionalCharacter a dbo:FictionalCharacter ;
                     dbo:alterEgoOf dbr:Matthew_Burland .

  # Find Carl L. Nippert's alma mater
  ?person dbr:Carl_L._Nippert .
  ?person dbo:almaMater ?almaMater .

  # Link the fictional character to the settlement and alma mater
  FILTER (?settlement = ?fictionalCharacter || ?almaMater = ?fictionalCharacter)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
9,61,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Royal_Medals .
  
  ?organisation a dbo:EducationalInstitution ;
                dbo:location dbr:Northern_Ireland .

  ?figure rdfs:label ?nickname .
  ?figure dbo:nickname ?nickname .
  ?figure dbo:almaMater ?almaMater .

  FILTER (CONTAINS(LCASE(?nickname), ""known as""))
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
378,49,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Find Carl Pontus Gahn's birth information and wars he participated in
  ?gahn a dbo:Person ;
        foaf:name ""Carl Pontus Gahn"" ;
        dbo:birthDate ?dateGahn .
  
  ?gahn dbo:participatedIn ?war .

  # Find Thomas Trigge as a commander in the same war
  ?trigge a dbo:Person ;
          foaf:name ""Thomas Trigge"" ;
          dbo:commanderOf ?war .

  # Ensure the war is both a military conflict and an event
  ?war a dbo:MilitaryConflict, dbo:Event .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
996,18,test,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?awardee dbo:award dbr:Lac_d%27Avoriaz_Award .
  ?ekremAward dbo:recipient ?entity .
  FILTER (?ekremAward = dbr:Award_of_Ekrem_Akurgal) .
  ?awardee dbo:force ?force .
}
```",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
328,55,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ferenc Szálasi's military commander
  ?szalasiCommander a dbo:Person ;
                    dbo:militaryCommander dbr:Ferenc_Szálasi .

  # Leader of an office under Joseph Stalin
  ?stalinLeader a dbo:Person ;
                dbo:leaderOf ?office .
  ?office dbo:head dbr:Joseph_Stalin .

  # Awardee of the award related to Bruce Fraser, 1st Baron Fraser of North Cape
  ?fraserAwardee a dbo:Person ;
                 dbo:awardRecipient ?fraserAward .
  ?fraserAward dbo:recipient dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .

  # Find the person who fits all criteria
  VALUES ?person { ?szalasiCommander ?stalinLeader ?fraserAwardee }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
959,32,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  # Find Eiji Ōtsuka's alma mater
  ?eiji a dbo:Person ;
        foaf:name ""Eiji Ōtsuka"" ;
        dbo:almaMater ?almaMater .

  # Ensure the alma mater is Japanese and an organization, university, educational institution
  ?almaMater a dbo:Organisation ;
             dbo:nationality dbr:Japan ;
             rdf:type dbo:University ;
             rdf:type dbo:EducationalInstitution .

  # Find Yōichi Masuzoe's country of residence
  ?yoiichi a dbo:Person ;
           foaf:name ""Yōichi Masuzoe"" ;
           dbo:country ?country .

  # Match the alma mater with the country of residence
  FILTER (?almaMater = ?country)
}
```",4,9,5,2,2,3,3,71,0,0,84,0,0.0,0
232,60,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Jon Pertwee's birth name and residence
  dbr:Jon_Pertwee a dbo:Person ;
                  dbo:birthName ?birthName ;
                  dbo:nativePlace ?residence .

  # Ensure the residence is a settlement in Britain
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Find a French politician who is an office holder
  ?politician a dbo:Politician, dbo:OfficeHolder ;
              dbo:nativePlace ?residence ;
              dbo:country dbr:France .

  # Find the child of Jon Pertwee whose native place matches the settlement
  ?child dbo:birthName ?birthName ;
         dbo:nativePlace ?residence .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
959,41,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Yōichi Masuzoe's residence
  dbr:Yōichi_Masuzoe dbo:residence ?residence .
  
  # Residence is a country
  ?residence a dbo:Country .

  # Native of the residence country
  ?residence dbo:native ?native .

  # Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  # University is Japanese and an organization
  ?university a dbo:University ;
             dbo:country dbr:Japan ;
             a dbo:Organisation .

  # Manager of the 2013 Júbilo Iwata season
  dbr:2013_Júbilo_Iwata_season dbo:manager ?manager .
  
  # Link manager to Yōichi Masuzoe
  FILTER (?manager = dbr:Yōichi_Masuzoe)
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
492,31,test,Give me the commander in Franco-Hova Wars and person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?deceased WHERE {
  # Part 1: Commander in Franco-Hova Wars
  ?commander a dbo:Person .
  ?commander dbo:militaryCommanderOf dbr:Franco-Hova_Wars .

  # Part 2: Person deceased at the work of the author of French Algeria
  ?author a dbo:Writer ;
          dbo:nationality dbr:France ;
          dbo:literaryWork dbr:French_Algeria .
  
  ?deceased a dbo:Person ;
            dbo:deathPlace ?workLocation .

  # Assuming the work location is related to the author's work
  ?workLocation dbo:author ?author .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
378,69,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find Carl Pontus Gahn's birth name and associated war
SELECT ?birthName ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carl Pontus Gahn""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  OPTIONAL { ?person dbo:associatedWithWar ?war . }
}

# Query to find Peninsular War commander and their claim to fame
SELECT ?commander ?claimToFame WHERE {
  ?peninsularWar a dbo:MilitaryConflict ;
                 dbo:name ""Peninsular War""@en .
  ?peninsularWar dbo:commander ?commander .
  OPTIONAL { ?commander dbo:claimToFame ?claimToFame . }
}

# Query to find Thomas Trigge's involvement in events
SELECT ?event WHERE {
  ?trigge a dbo:Person ;
          foaf:name ""Thomas Trigge""@en .
  OPTIONAL { ?trigge dbo:associatedWithEvent ?event . }
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
391,63,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
  dbr:Jackson,_Tennessee dbo:nickname ?nickname .
}

# Step 2: Identify Michael Ballhaus's notable work involving an actor
SELECT DISTINCT ?actor WHERE {
  ?work dbo:director dbr:Michael_Ballhaus ;
        dbo:starring ?actor .
}

# Step 3: Find movies or TV shows featuring Roz Ryan and the common actor
SELECT DISTINCT ?commonActor WHERE {
  ?movie dbo:starring dbr:Roz_Ryan, dbr:Common_Actor .
  ?work dbo:starring ?commonActor .
  FILTER (?actor = ?commonActor)
}

# Step 4: Determine the native place of the identified common actor
SELECT DISTINCT ?nativePlace WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace ?nativePlace ;
          foaf:name ""Common_Actor""@en .
}
```

Note: The above queries assume that DBpedia contains direct links for nicknames, works involving specific directors and actors, and the birthplaces of individuals. Some manual verification or additional data might be needed to fully resolve this query chain.",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
701,56,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of Nefertari and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfHenuttawy ?parentOfNefertariChild WHERE {
  # Find Henuttawy (19th dynasty) and her parent
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy (19th dynasty)""@en .
  ?henuttawy dbo:child ?parentOfHenuttawy .

  # Find Nefertari's child
  ?nefertari a dbo:Person ;
             rdfs:label ""Nefertari""@en .
  ?nefertariChild dbo:child ?nefertari .
  ?nefertariChild dbo:parent ?parentOfNefertariChild .

  # Find the commander in the Battle of Perire and his father
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Perire""@en .
  ?commander dbo:participatedIn ?battle ;
             dbo:father ?fatherOfCommander .

  # Find the spouse of the commander's father
  ?spouseOfFather a dbo:Person ;
                  dbo:spouse ?fatherOfCommander .

  # Ensure the person is royalty
  FILTER (?parentOfHenuttawy = ?parentOfNefertariChild && ?parentOfNefertariChild = ?spouseOfFather)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,67,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  ?politician a dbo:Politician ;
              dbo:electedAsLeaderOf ?election .
  ?election dbo:date ""2010""^^xsd:gYear .

  ?sportsManager a dbo:SportsManager ;
                 dbo:managedTeam dbr:1998_Kashima_Antlers_season .
  
  ?teamManager a dbo:SportsManager ;
               dbo:managedTeam ?team .
  ?team dbo:manager ?sportsManager .

  ?politician dbo:almaMater dbr:University_of_Tsukuba .

  ?politician dbo:residence ?residence .
  ?residence dbo:nativeCountry ?nativeCountry .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
184,60,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Step 1: Find Archduchess Margaret of Austria
  ?margaret a dbo:Person ;
            dbo:birthDate ?dateMargaret .
  FILTER (YEAR(?dateMargaret) = 1925)
  
  # Step 2: Find her parent
  ?parentArchduchess dbo:child ?margaret .

  # Step 3: Find the child of her parent
  ?childParentArchduchess dbo:parent ?parentArchduchess .

  # Step 4: Find the parent of that child
  ?parent1 dbo:parent ?childParentArchduchess .

  # Step 5: Identify the landmark at elevation 96.0
  ?landmark a dbo:Settlement ;
            geo:elevation ?elevation .
  FILTER (?elevation = ""96.0""^^xsd:float)

  # Step 6: Find the native of that landmark
  ?native dbo:nativePlace ?landmark .

  # Step 7: Find the parent of this native
  ?parent2 dbo:child ?native .

}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
747,23,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athlete WHERE {
  # Find the birth date of the decedent
  ?decedent a dbo:Person .
  ?decedent dbo:birthDate ?date .

  # Find an athlete who is also a soccer player, born on the same date and in Zolotonosha
  ?athlete a dbo:Athlete ;
           a dbo:SoccerPlayer ;
           dbo:birthDate ?sameDate ;
           dbo:birthPlace dbr:Zolotonosha .
  
  # Ensure the birth dates match
  FILTER (?date = ?sameDate)
}
```",3,5,4,3,1,3,3,71,0,0,30,0,0.0,0
16,53,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?ted a dbo:Person ;
       dbo:birthName ""Ted McGinley"" ;
       dbo:profession dbr:Actress .
  
  ?ted dbo:spouse ?gigi .

  ?gigi dbo:birthName ""Gigi Rice"" .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,44,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?unit ?country ?war WHERE {
  # Heather Roy's military unit
  dbr:Heather_Roy dbo:militaryUnit ?unit .

  # Bob Heffron's birthplace country
  dbr:Bob_Heffron dbo:birthPlace ?place .
  ?place a dbo:Country .

  BIND(?place AS ?country)

  # Beauchamp Seymour, 1st Baron Alcester's war
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:war ?war .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
294,21,test,"Give me the resting place of Edwin A. Keeble and resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace ?birthEntity WHERE {
  # Resting place of Edwin A. Keeble
  { 
    OPTIONAL {
      ?keebles a dbo:Person ;
               foaf:name ""Edwin A. Keeble"" ;
               dbo:deathPlace ?restingPlace .
      BIND(?keebles AS ?person)
    }
  } UNION
  # Resting place of Luke Lea (American politician, born 1879)
  { 
    OPTIONAL {
      ?leas a dbo:Person ;
            foaf:name ""Luke Lea"" ;
            dbo:birthDate ?date ;
            dbo:nationality dbr:United_States ;
            dbo:deathPlace ?restingPlace .
      FILTER (YEAR(?date) = 1879)
      BIND(?leas AS ?person)
    }
  } UNION
  # Entity in the birth place of Marion James that is a settlement
  { 
    OPTIONAL {
      ?marions a dbo:Person ;
               foaf:name ""Marion James"" ;
               dbo:birthPlace ?place .
      ?place a dbo:Settlement .
      ?entity a dbo:Place ;
              dbo:location ?place .
      BIND(?marions AS ?person)
      BIND(?entity AS ?restingPlace) # Using the same variable for consistency
    }
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,69,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the commander in the force of Ferenc Szálasi
  ?commander a dbo:MilitaryCommander .
  ?commander dbo:commandedBy dbr:Ferenc_Szálasi .

  # Ensure this person is an awardee of the commander award in Volcano and Ryukyu Islands campaign
  ?commander dbo:awardReceived ?award .
  FILTER (
    EXISTS { ?award dbo:campaign dbr:Volcano_Islands_campaign } ||
    EXISTS { ?award dbo:campaign dbr:Ryukyu_Islands_campaign }
  )

  # Find the leader of the office, that is a government agency, of Gustav Jonson
  ?officeLeader dbo:leaderOf ?governmentAgency .
  ?governmentAgency dbo:head dbr:Gustav_Jonson .

  # Ensure all these roles refer to the same person
  FILTER (?commander = ?person && ?officeLeader = ?person)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,32,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Seleucus II Callinicus's children
  ?child1 dbo:parent dbr:Seleucus_II_Callinicus .
  
  # Antiochus III the Great's child and their spouse
  ?child2 dbo:parent dbr:Antiochus_III_the_Great .
  ?spouse dbo:spouse ?child2 .

  # The grandchild of Seleucus II Callinicus who is a royalty and spouse's child
  ?grandchild dbo:parent ?spouse ;
              dbo:parent ?child1 ;
              a dbo:Person .
  
  # Assuming royalty can be identified by specific titles or roles
  OPTIONAL { ?grandchild dbo:title ?title . FILTER regex(?title, ""King|Queen"", ""i"") }
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
392,27,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province ?region ?sportsEvent WHERE {
  # Sebastiano Bianchetti's residence province
  ?person a dbo:Person ;
          rdfs:label ""Sebastiano Bianchetti""@en .
  
  ?residence dbo:resident ?person ;
             dbo:settlement ?settlement ;
             dbo:country dbr:Italy .

  ?settlement dbo:province ?province .

  # Aguilar de Segarra's time zone region and sports event
  ?place a dbo:Place ;
         rdfs:label ""Aguilar de Segarra""@en .
  
  ?timezone dbo:location ?place ;
            dbo:region ?region .

  OPTIONAL {
    ?sportsEvent dbo:location ?place .
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,60,test,"Give me the reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?michelePartyName ?romanoPartyName WHERE {
  # Find Michele Pinto's party
  dbr:Michele_Pinto a dbo:Person .
  dbr:Michele_Pinto dbo:party ?micheleParty .
  ?micheleParty rdfs:label ?michelePartyName .

  # Find Romano Prodi's birth name and ensure he is an office holder and politician
  dbr:Romano_Prodi a dbo:Person ;
                   dbo:birthName ?romanoBirthName ;
                   dbo:party ?romanoParty .
  ?romanoParty rdfs:label ?romanoPartyName .

  # Ensure Romano Prodi is an office holder (assuming dbo:officeHolder or similar)
  OPTIONAL { dbr:Romano_Prodi a dbo:OfficeHolder . }
}
```",6,8,7,3,2,3,3,71,0,7,2,0.0,0.0,0
404,26,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandparent WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?prince a dbo:Person ;
          foaf:name ""Prince George William of Hanover""@en .
  
  # Step 2: Find his parent who is royalty
  ?parent dbo:child ?prince ;
          a dbo:Person ;
          ?royaltyProperty ?royaltyValue .

  FILTER EXISTS { 
    ?parent ?royaltyProperty ?royaltyValue .
  }

  # Step 3: Find the child of this royal parent
  ?child dbo:parent ?parent ;
         a dbo:Person ;
         ?royaltyChildProperty ?royaltyChildValue .

  FILTER EXISTS {
    ?child ?royaltyChildProperty ?royaltyChildValue .
  }
  
  # Step 4: Identify the parent of this child
  ?grandparent dbo:child ?child .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
767,57,test,Give me the entity in Baden-Württemberg and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?location ?alterEgo ?almaMater WHERE {
  ?entity a dbo:Place .
  ?entity dbo:location dbr:Baden-Württemberg .

  OPTIONAL { 
    ?person dbo:alias ?alterEgo .
    FILTER (str(?alterEgo) = ""Black Hood"")
    ?entity dbo:associatedWith ?person .
  }

  OPTIONAL {
    ?admin dbo:almaMater ?almaMater .
    ?admin dbo:relatedTo dbr:George_Kilbon_Nash .
    ?entity dbo:associatedWith ?admin .
  }
}
```",6,6,7,3,3,3,3,71,0,46,1,0.0,0.0,0
994,68,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Fredrik Thordendal and Meshuggah
  dbr:Fredrik_Thordendal a dbo:BandMember ;
                        dbo:band dbr:Meshuggah .
  
  # Meshuggah is both a band and an organization
  dbr:Meshuggah a dbo:MusicalArtist, dbo:Organization .

  # Associated artists with Meshuggah
  ?associatedArtist dbo:associatedBandOrMusicalArtist dbr:Meshuggah .

  UNION

  # Donald Maynard Dokken and Dokken
  dbr:Donald_Maynard_Dokken a dbo:Person ;
                            dbo:musicalArtist dbr:Dokken .
  
  # Dokken is both a band and an organization
  dbr:Dokken a dbo:MusicalArtist, dbo:Organization .

  # Associated artists with Dokken
  ?associatedArtist dbo:associatedBandOrMusicalArtist dbr:Dokken .

  UNION

  # Watchtower as a musical artist
  dbr:Watchtower a dbo:MusicalArtist .

  # Associated artists with Watchtower
  ?associatedArtist dbo:associatedBandOrMusicalArtist dbr:Watchtower .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
391,22,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Compton,_California .

  ?movie dbo:actor ?person ;
         dbo:actor dbr:Roz_Ryan .

}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,46,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Sean Pertwee's films or military conflicts
  OPTIONAL { 
    ?film a dbo:Film ;
          dbo:starring ?actor .
    FILTER (?actor = dbr:Sean_Pertwee)
  }
  
  OPTIONAL {
    ?conflict a dbo:MilitaryConflict ;
              dbo:participant ?actor .
    FILTER (?actor = dbr:Sean_Pertwee)
  }

  # Find Jon Pertwee's birth name
  ?jonPertwee a dbo:Person ;
               rdfs:label ""Jon Pertwee""@en ;
               dbo:birthName ?birthName .

  # Confirm Sean Pertwee is Jon Pertwee's child
  ?jonPertwee dbo:child ?seanPertwee .
  FILTER (?seanPertwee = dbr:Sean_Pertwee)
}
```",5,7,6,3,2,3,3,71,1,0,0,1.0,1.0,1.0
701,67,test,"Give me the parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfMeritamen ?spouseOfFather WHERE {
  # Find Meritamen's parent
  ?meritamen a dbo:Person ;
             rdfs:label ""Meritamen""@en .
  ?meritamen dbo:parent ?parentOfMeritamen .

  # Find the commander in the Battle of Perire who is royalty
  ?battle dbr:Battle_of_Perire ;
         dbo:participant ?commander .
  ?commander a dbo:Person, dbo:Royalty .

  # Find the father (spouse) of the commander
  ?fatherOfCommander dbo:spouse ?commander .
  
  # Ensure the spouse is also royalty
  ?fatherOfCommander a dbo:Royalty .

  # Find Seti I's child and then that child's child
  dbr:Seti_I dbo:child ?setisChild .
  ?setisChild dbo:child ?greatGrandchild .

  # Link the parent of Meritamen to the spouse of the father of the commander
  FILTER (?parentOfMeritamen = ?spouseOfFather)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,42,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck's involvement in a military conflict
  OPTIONAL {
    ?schimmelpenninck a dbo:Person ;
                      foaf:name ""Rutger Jan Schimmelpenninck"" .
    ?conflict dbo:societalEvent ?event ;
              dbo:militaryConflict ?militaryConflict ;
              dbo:commanderOf ?schimmelpenninck .
    ?militaryForce dbo:commanderOf ?schimmelpenninck .
  }

  # Arthur Wellesley's involvement in a military conflict
  OPTIONAL {
    ?welsh dbr:Arthur_Wellesley_1st_Duke_of_Wellington ;
           dbo:commanderOf ?conflict2 .
    ?militaryForce2 dbo:commanderOf ?welsh .
    
    # Ensure the same military force is identified for both commanders
    FILTER (?militaryForce = ?militaryForce2)
  }
}
```",5,8,6,2,3,3,3,71,0,0,6,0,0.0,0
547,23,test,Give me the resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildRestingPlace WHERE {
  # Find William Haliburton's child
  ?child a dbo:Person ;
         dbo:parent dbr:William_Haliburton .

  # Find the grandchild (child of the above child)
  ?grandchild a dbo:Person ;
              dbo:parent ?child .

  # Get the resting place of the grandchild
  ?grandchild dbo:deathPlace ?restingPlace .
  
  BIND(?restingPlace AS ?grandchildRestingPlace)
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,28,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Lisa Gavrić's profession as an event and societal event
  ?lisa a dbo:Person ;
        foaf:name ""Lisa Gavrić"" .
  ?professionEvent a dbo:Event ;
                   dbo:relatedTo ?lisa ;
                   rdf:type dbo:SocietalEvent .

  # Sergei Makovetsky's award
  ?sergei a dbo:Person ;
          foaf:name ""Sergei Makovetsky"" .
  ?award a dbo:Award ;
         dbo:recipient ?sergei .

  # Person deceased at the headquarter of House of Sombrerete
  ?deceased a dbo:Person ;
            dbo:deathPlace dbr:House_of_Sombrerete_Headquarters .

  # Commander in the profession, event, and societal event
  ?person a dbo:Person ;
          dbo:profession ?professionEvent ;
          dbo:award ?award .
  
  FILTER (?deceased = ?person)
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
184,35,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Find the child of Archduke Joseph Francis of Austria
  ?child dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Find the parent of this child
  ?child dbo:parent ?parent1 .

  # Find a person native to Budapest
  ?budaPerson dbo:nativePlace dbr:Budapest .

  # Find the parent of this native
  ?budaPerson dbo:parent ?parent2 .

  # Check if both parents are the same entity
  FILTER (?parent1 = ?parent2)
  
  BIND(?parent1 AS ?commonParent)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
801,55,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the writer of ""40 Dayz & 40 Nightz""
  ?work a dbo:MusicalWork ;
        rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  ?writer dbo:author ?work ;
          a dbo:Person .

  # Ensure this person is also a musical artist and an artist
  ?artist a dbo:Artist, dbo:MusicalArtist ;
          owl:sameAs ?writer .

  # Find the producer of ""50 Cent"" song
  ?song a dbo:Song ;
        rdfs:label ""50 Cent""@en .
  
  ?producer dbo:producer ?song ;
            owl:sameAs ?artist .

  # Check if this person is professionally known as The Shadow
  ?alias rdfs:label ""The Shadow""@en ;
         dbo:professionalAlias ?person .
  
  FILTER (?writer = ?person && ?artist = ?person && ?producer = ?person)
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
488,42,test,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tokugawaDeathPlace ?fatherAdministration ?commanderBirthPlace WHERE {
  # Death place of Tokugawa Ieyasu
  dbr:Tokugawa_Ieyasu a dbo:Person ;
    dbo:deathPlace ?tokugawaDeathPlace .

  # Administration of the father of Emperor Go-Mizunoo
  dbr:Emperor_Go-Mizunoo a dbo:Person ;
    dbo:father ?goMizunooFather .
  ?goMizunooFather dbo:administration ?fatherAdministration .

  # Birth place of the commander in Boshin War
  {
    SELECT DISTINCT ?commander WHERE {
      ?battle dbo:participatedIn ?boshinWar ;
        dbo:commander ?commander .
      FILTER (CONTAINS(LCASE(STR(?boshinWar)), ""boshin war""))
    }
    ?commander dbo:birthPlace ?commanderBirthPlace .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
528,46,test,"Give me the war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?war WHERE {
  # Find the battle and its commander
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of La Rinconada de Ate""@en .
  
  OPTIONAL { 
    ?battle dbo:commander ?commander .
  }
  
  # Find the military force involved in the battle
  ?militaryForce dbo:participatedIn ?battle .

  # Find the war related to this military force and ensure it is a societal event in Chile
  ?war a dbo:MilitaryConflict ;
      dbo:relatedTo ?militaryForce ;
      dbo:location dbr:Chile .
}
```",5,6,6,3,2,3,3,71,0,0,14,0,0.0,0
701,52,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Amun-her-khepeshef
  ?amunherkhepeshef a dbo:Person ;
                    rdfs:label ""Amun-her-khepeshef""@en .

  # Step 2: Find Spouse of Amun-her-khepeshef
  ?spouse1 dbo:spouse ?amunherkhepeshef .
  
  # Step 3: Identify Child of the Spouse
  ?child1 dbo:parent ?spouse1 .

  # Step 4: Determine Parent of This Child (should be Amun-her-khepeshef or their spouse)
  ?parent1 dbo:parent ?child1 ;
           (dbo:spouse|a) ?amunherkhepeshef .
  
  # Step 5: Find Spouse of Ramesses II
  ?ramessesII a dbo:Person ;
              rdfs:label ""Ramesses II""@en .
  ?spouse2 dbo:spouse ?ramessesII .

  # Step 6: Identify Child of Ramesses II's Spouse
  ?child2 dbo:parent ?spouse2 .

  # Step 7: Determine Parent of This Child (should be Ramesses II or their spouse)
  ?parent2 dbo:parent ?child2 ;
           (dbo:spouse|a) ?ramessesII .
  
  # Step 8: Find Common Entity
  FILTER (?parent1 = ?parent2)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,54,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherParty ?italianPeopleParty ?prodiParty WHERE {
  # Find MIT alumni and their fathers
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .

  # Determine the political party of each father
  OPTIONAL { ?father dbo:partyAffiliation ?fatherParty . }

  # Reference to Italian People's Party (1994)
  dbr:Italian_People%27s_Party_(1994) a dbo:PoliticalParty ;
     rdfs:label ""Italian People's Party (1994)""@en .

  # Determine Romano Prodi's party
  dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
  
  # Bind the Italian People's Party to a variable for clarity
  BIND(dbr:Italian_People%27s_Party_(1994) AS ?italianPeopleParty)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
963,16,test,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?administration WHERE {
  # Find the political party in Sremski Karlovci
  ?city a dbo:City ;
        rdfs:label ""Sremski Karlovci""@en .
  
  ?party dbo:head ?administration ;
         dbo:country dbr:Serbia ;
         a dbo:PoliticalParty .

  # Find countries using Central European Time
  ?country dbo:timeZone dbr:Central_European_Time ;
           dbo:rulingParty ?rulingParty .

  FILTER(?city = ?party)
}
```",4,6,5,2,2,3,2,20,0,0,84,0,0.0,0
435,27,test,Give me the territory administered from Reykjavík and work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query 1: Territory administered from Reykjavík
SELECT ?territory WHERE {
  ?territory dbo:capital dbr:Reykjavík .
}

# Query 2: Work of the author of ""Iceland""
SELECT DISTINCT ?author ?work WHERE {
  ?book a dbo:Book ;
        dbo:title ""Iceland""@en .
  ?book dbo:author ?author .
  OPTIONAL { ?author dbo:works ?work }
}

# Query 3: Region of the time zone in Bombali Shebora Chiefdom
SELECT DISTINCT ?region WHERE {
  dbr:Bombali_Shebora_Cheifdom dbo:timeZone ?timezone .
  ?timezone dbo:region ?region .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
184,48,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Step 1: Find the child of Archduke Joseph Francis
  ?child dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Step 2: Find the parent of this child
  ?child dbo:parent ?parent1 .

  # Step 3: Identify a settlement at elevation 96.0 meters
  ?settlement a dbo:Settlement ;
              dbo:elevationAboveSeaLevel ""96.0""^^xsd:float .
  
  # Step 4: Determine who is native to this settlement
  ?native dbo:nativePlace ?settlement .

  # Step 5: Find the parent of this native person
  ?native dbo:parent ?parent2 .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,47,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify Arthur Wellesley, 1st Duke of Wellington
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington a dbo:Person .

  # Find the military conflict involving 'Polish Horse'
  ?conflict a dbo:MilitaryConflict ;
           dbo:militaryUnit dbr:Polish_Horse .

  # Identify the commander in that conflict
  ?commander dbo:commander ?conflict .
  
  # Ensure the commander is also associated with Arthur Wellesley
  ?commander dbo:participatedIn ?conflict .
}
```",5,9,6,3,2,3,3,71,0,0,71,0,0.0,0
534,16,test,"Give me the headquarter of the owner of RDS Arena and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarter ?birthPlace WHERE {
  # Find Desmond FitzGerald and his child who is a politician and office holder
  ?desmond a dbo:Person ;
           foaf:name ""Desmond FitzGerald"" ;
           dbo:child ?child .
  
  ?child a dbo:Politician ;
         dbo:officeHolder true ;
         dbo:birthPlace ?birthPlace .

  # Find RDS Arena and its owner
  dbr:RDS_Arena dbo:location ?arenaLocation .
  ?arenaLocation dbo:owner ?owner .

  # Get the headquarters of the owner
  ?owner dbo:headquarters ?headquarter .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
754,16,test,Give me the parent of the child of Ram Khamhaeng and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild, ?grandparent WHERE {
  # Find the child of Ram Khamhaeng
  ?child dbo:parent dbr:Ram_Khamhaeng .
  
  # Find the parent of this child
  ?child dbo:parent ?parentOfChild .

  # Find the parent of May Hnin Htapi
  ?mayParent dbo:child dbr:May_Hnin_Htapi .
  
  # Find the grandparent (parent of this parent)
  ?mayParent dbo:parent ?grandparent .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
92,64,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Find Joe Satriani's associated band
  dbr:Joe_Satriani a dbo:Person .
  dbr:Joe_Satriani dbo:associatedBand ?band .

  # Connect through Jim Sheppard to Nevermore
  dbr:Jim_Sheppard a dbo:Person .
  dbr:Jim_Sheppard dbo:musicalArtist dbr:Nevermore_(band) .
  
  # Ensure the band is related to Nevermore
  ?band dbo:bandMember dbr:Jim_Sheppard .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,30,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  
  # Native of Compton, California
  ?person dbo:birthPlace dbr:Compton,_California .

  # Actor in ""The Departed""
  ?filmProduction dbo:actor ?person ;
                 rdfs:label ?filmLabel .
  FILTER (CONTAINS(LCASE(?filmLabel), ""the departed""))

  # Co-starred with Roz Ryan
  ?coStarFilm dbo:actor dbr:Roz_Ryan ;
              dbo:actor ?person .

  # Movie that is also a work and television show
  ?workProduction dbo:basedOn ?coStarFilm .
  ?tvShowProduction dbo:basedOn ?coStarFilm .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
92,59,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?film a dbo:Film .
  ?film rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
  
  ?actor a dbo:Person ;
         dbo:actor ?film .

  # Check if this person is also a band member related to ""Nevermore"" (2006 film)
  ?bandMember a dbo:Band ;
              rdfs:label ?bandLabel .
  
  ?referenceFilm a dbo:Film ;
                 rdfs:label ""Nevermore""@en ;
                 dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 2006)

  ?person dbo:bandMember ?bandMember .

  # Ensure the person is both actor and band member
  VALUES ?person { ?actor }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
801,63,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Writer of ""40 Dayz & 40 Nightz""
  ?work1 a dbo:Song ;
         rdfs:label ""40 Dayz & 40 Nightz""@en ;
         dbo:writer ?person .

  # Associated musical artist and artist
  ?person a dbo:MusicalArtist, dbo:Artist .

  # Alter ego of The Shadow
  OPTIONAL { 
    ?alias rdfs:label ""The Shadow""@en .
    ?person dbo:alterEgo ?alias .
  }

  # Producer of 50 Cent's work
  ?work2 a dbo:Song ;
         rdfs:label ?songLabel ;
         dbo:producer ?person .
  
  FILTER regex(?songLabel, ""50 Cent"", ""i"")
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
783,17,test,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Find Appietus as a musical artist
  ?appietus a dbo:MusicalArtist ;
            rdfs:label ""Appietus""@en .
  
  # Look for associated artists or collaborations
  OPTIONAL { 
    ?collaboration dbo:artist ?appietus ;
                   dbo:associatedArtist ?associatedArtist .
  }
  
  # Find band members who are also recognized as both an artist and a musical artist
  OPTIONAL {
    ?bandMember a dbo:Band ;
                dbo:member ?person .
    ?person a dbo:Person, dbo:MusicalArtist, dbo:Artist ;
            rdfs:label ?name .
    
    # Ensure connection to the persona of Ebony Reigns
    FILTER EXISTS { 
      ?ebonyReigns a dbo:Persona ;
                    rdfs:label ""Ebony Reigns""@en .
      ?ebonyReigns dbo:associatedWith ?person .
    }
  }
  
  # Filter out non-matching results
  FILTER (?appietus != ?associatedArtist)
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
9,46,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  # Find the mayor of Belfast who is a politician
  ?mayor a dbo:Politician ;
         dbo:officeHolderOf dbr:Belfast ;
         dbo:almaMater ?almaMater .

  # Find an awardee of the Royal Medal
  ?awardee dbo:award dbr:Royal_Medal ;
          dbo:almaMater ?almaMater .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
9,50,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?almaMater ?nickname WHERE {
  # Find awardees of the Royal Medal
  ?awardee dbo:award ?medal .
  ?medal rdfs:label ""Royal Medal""@en .

  # Get the alma mater of the awardee
  ?awardee dbo:almaMater ?almaMater .

  # Find Queen's University Belfast and its nickname
  ?university a dbo:EducationalInstitution ;
              rdfs:label ""Queen's University Belfast""@en .
  OPTIONAL { ?university dbo:nickname ?nickname . }

  # Check if the alma mater matches Queen's University Belfast
  FILTER (?almaMater = ?university)
}
```",5,6,6,3,2,3,3,71,1,3,0,0.25,1.0,0.4
547,18,test,Give me the resting place of Alan Cunningham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  VALUES ?person { 
    dbr:Alan_Cunningham 
    dbr:James_Burton_(Egyptologist) 
    dbr:Simon_Cadell
  }
  
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  OPTIONAL { ?person dbo:burialPlace ?restingPlace . }

  FILTER (?restingPlace != """")
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
617,49,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Seleucus II Callinicus and his child who is royalty
  dbr:Seleucus_II_Callinicus a dbo:Person .
  ?child dbo:parent dbr:Seleucus_II_Callinicus ;
         a dbo:Royalty .

  # Commander in Battle of Panium and his child
  ?commander dbo:participatedInBattle dbr:Battle_of_Panium .
  ?childOfCommander dbo:parent ?commander .

  # Linking the two parts
  ?childOfChild dbo:parent ?child ;
                dbo:parent ?childOfCommander .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
801,58,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional ?associatedArtist WHERE {
  # Find the album ""What U See Is What U Get""
  ?album a dbo:Album ;
         rdfs:label ""What U See Is What U Get""@en .
  
  # Identify professionals who are both artists and producers of this album
  ?professional dbo:artist ?album ;
                dbo:producer ?album .

  # Ensure the professional is associated with 50 Cent
  ?album dbo:artist dbr:50_Cent .

  # Find associated musical artist of the writer (producer) of the album
  ?writer dbo:associatedBandMember ?associatedArtist .
  FILTER (?professional = ?writer)
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
92,63,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find band members of ""Nevermore (2006 film)"" who are artists
SELECT DISTINCT ?bandMember WHERE {
  dbr:Nevermore_(2006_film) dbo:starring ?actor .
  ?actor a dbo:Person ;
         dbo:profession ?profession .
  FILTER (?profession = dbo:Actor || ?profession = dbo:Singer)
  
  OPTIONAL { ?actor dbo:memberOfBand ?band . }
}

# Step 2: Find Joseph Michael Furney's band
SELECT DISTINCT ?band WHERE {
  dbr:Joseph_Michael_Furney dbo:memberOfBand ?band .
}

# Step 3: Find Jim Sheppard's associated musical artist
SELECT DISTINCT ?artist WHERE {
  dbr:Jim_Sheppard dbo:associatedMusicalArtist ?artist .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
492,52,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify Frédéric-Georges Herr and his involvement in a military conflict
  dbr:Frédéric_Georges_Herr dbo:militaryConflict ?conflict .
  
  # Ensure the conflict is both a military conflict and an event
  ?conflict rdf:type dbo:MilitaryConflict ;
            rdf:type dbo:Event .

  # Find the commander of this conflict
  ?conflict dbo:commander ?commander .

  # Commander must have died at Algiers
  ?commander dbo:deathPlace dbr:Algiers .

  # Ensure the commander is linked to the work of the author of French Algeria
  ?author a dbo:Person ;
          dbo:work dbr:French_Algeria .
  
  ?commander dbo:relatedTo ?author .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
626,17,test,Give me the awardee of the award of the military force of Battle of Borodino and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?borodinoAwardee ?leipzigCommander WHERE {
  # Find the awardee related to the Battle of Borodino
  ?battleBorodino a dbo:MilitaryEngagement ;
                  dbo:participatingMilitaryForce dbr:Russian_Empire .
  ?awardBorodino dbo:recipient ?borodinoAwardee ;
                 dbo:relatedEvent ?battleBorodino .

  # Find the commander related to the Battle of Leipzig
  ?battleLeipzig a dbo:MilitaryEngagement ;
                dbo:commander ?leipzigCommander .
  FILTER (STR(?battleLeipzig) = ""Battle_of_Leipzig"")

}
```",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
701,49,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?commander dbo:battle [dbo:name ""Battle of Perire""] .
  ?father dbo:child ?commander .
  ?father dbo:spouse ?spouse .
  ?spouse a dbo:Royalty .
  
  ?nefertariChild dbo:parent ?spouse .
  ?nefertari dbr:Nefertari .
  ?nefertariChild dbo:parent ?nefertari .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
994,60,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find Don Dokken as a musical artist
  ?donDokken a dbo:Person ;
             foaf:name ""Don Dokken"" ;
             dbo:musicalArtist ?dokkenBand .

  # Get band members of the band associated with Don Dokken
  ?member dbo:bandMemberOf ?dokkenBand .
  
  # Find Watchtower and its associated musical artists
  dbr:Watchtower a dbo:MusicalArtist ;
                 dbo:associatedMusicalArtist ?watchtowerAssociated .

  # Check if any of the band members are also associated with Watchtower
  FILTER (?member = ?watchtowerAssociated)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,28,test,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice and professional in Actress.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person1 ?spouse1 ?person2 ?spouse2 WHERE {
  # Ted Martin McGinley
  ?person1 a dbo:Person ;
           dbo:birthName ""Ted Martin McGinley"" .
  OPTIONAL { ?person1 dbo:spouse ?spouse1 . }

  # Georgeanne Marie Rice, professional in Actress
  ?person2 a dbo:Person ;
           rdfs:label ""Georgeanne Marie Rice""@en ;
           dbo:profession dbr:Actress .
  OPTIONAL { ?person2 dbo:spouse ?spouse2 . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,52,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # The Shadow's alter ego
  VALUES (?shadowAlterEgo) { (dbr:Lamont_Colon) } # Assuming Lamont Colon is the true self of The Shadow

  # Chris Taylor's associated musical artist
  ?artist dbo:associatedMusicalArtist dbr:Chris_Taylor_(musician) .

  # 50 Cent's work produced by the professional
  ?work dbo:producer ?professional ;
        a dbo:SongsBy50Cent ; # Assuming there is a class for songs by 50 Cent

  # Linking all together
  FILTER (?shadowAlterEgo = ?artist || ?artist = ?professional)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
492,54,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Person was a commander in the Battle of Verdun
  ?battleOfVerdun dbo:commander ?person ;
                  rdfs:label ""Battle of Verdun""@en .
  
  # Person died at Algiers
  ?deathEvent dbo:place ?algiers ;
              dbo:agent ?person .
  ?algiers rdfs:label ""Algiers""@en .

  # Connection to Joseph C. Satterthwaite (hypothetical, as specific properties are not known)
  OPTIONAL {
    ?satterthwaiteEvent dbo:agent dbr:Joseph_C._Satterthwaite ;
                        dbo:participant ?person .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,61,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  # Find George Kilbon Nash's administration
  ?nash a dbo:Person ;
        foaf:name ""George Kilbon Nash"" .
  
  OPTIONAL { 
    ?administration dbo:administrator ?nash .
    ?administration dbo:almaMater ?almaMater .
  }
  
  UNION
  
  # Find Matthew Burland's alter ego
  ?burland a dbo:Person ;
           foaf:name ""Matthew Burland"" .
  
  OPTIONAL {
    ?fictionalCharacter dbo:alterEgo ?burland .
    ?realEntity dbo:basedOn ?fictionalCharacter .
    ?realEntity dbo:almaMater ?almaMater .
  }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
365,8,test,Give me the band of Phil Alvin and reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band (GROUP_CONCAT(?alias; separator="", "") AS ?aliases) WHERE {
  ?member dbo:member ?band .
  ?member rdfs:label ""Phil Alvin""@en .
  
  OPTIONAL { 
    ?band dbo:alias ?alias .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
10,24,test,"Give me the professional in the birth name of Sharon Kao and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalName WHERE {
  ?sharonKao a dbo:Person ;
             dbo:birthName ""Sharon Kao"" .
  
  ?lukeVibert a dbo:Person ;
              dbo:artist true ;
              dbo:bandMemberOf ?band .

  ?sharonKao dbo:bandMemberOf ?band .

  ?sharonKao foaf:name ?professionalName .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
617,63,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Step 1: Identify the successor of Antiochus II Theos who is a royalty
  ?successor dbo:successor dbr:Antiochus_II_Theos .
  ?successor a dbo:Royalty .

  # Step 2: Find the child of this successor who is also a royalty
  ?childOfSuccessor dbo:child ?successor .
  ?childOfSuccessor a dbo:Royalty .

  # Step 3: Identify the spouse of the child of Antiochus III the Great
  ?spouse dbo:spouse ?childOfAntiochusIII .
  ?childOfAntiochusIII dbo:child dbr:Antiochus_III_the_Great .

  # Step 4: Find the parent of the child of Antiochus (son of Antiochus III the Great)
  ?parent dbo:parent ?childOfAntiochus .
  ?childOfAntiochus dbo:child dbr:Antiochus_III_the_Great .

  # Final step: Match the spouse from Step 3 with the parent from Step 4
  FILTER (?spouse = ?parent)
  
  # Return the child of the child identified in Step 2
  ?childOfChild dbo:child ?childOfSuccessor .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
963,18,test,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Step 1: Find the time zone of Herzegovina-Neretva Canton
  ?canton a dbo:Canton ;
          dbo:timeZone ?timezone .

  FILTER (str(?canton) = ""Herzegovina-Neretva_Canton"")

  # Step 2: Determine the country for that time zone
  ?country dbo:timeZone ?timezone ;
           a dbo:Country .

  # Step 3: Find the ruling party in Sremski Karlovci
  ?location dbr:Sremski_Karlovci ;
            dbo:rulingParty ?party .
  
  # Step 4: Combine information to find the entity
  ?entity dbo:country ?country ;
          dbo:administrationOf ?party .
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
528,61,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?force ?war WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Narciso Campero""@en .
  OPTIONAL { ?person dbo:commanderOf ?force . }
  OPTIONAL { ?person dbo:participatedInWar ?war . }
}
```",6,6,7,3,2,3,3,71,0,1,2,0.0,0.0,0
404,59,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalParent WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?princeGeorge a dbo:Person ;
               rdfs:label ""Prince George William of Hanover""@en .
  
  # Step 2: Find his Parent (Royalty)
  ?parent a dbo:Person ;
          dbo:royalTitle ?title1 ;
          dbo:child ?princeGeorge .

  FILTER EXISTS { ?title1 rdf:type dbo:RoyalTitle }

  # Step 3: Find the Child of This Parent (Royalty)
  ?child a dbo:Person ;
         dbo:parent ?parent ;
         dbo:royalTitle ?title2 .

  FILTER EXISTS { ?title2 rdf:type dbo:RoyalTitle }

  # Step 4: Identify Princess Victoria Louise of Prussia
  ?princessVictoriaLouise a dbo:Person ;
                         rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  # Find her birth name
  ?princessVictoriaLouise dbo:birthName ?birthName .

  # Step 5: Find the Spouse of the Person Born with This Birth Name
  ?spouse a dbo:Person ;
          dbo:birthName ?birthName ;
          dbo:spouse ?personBornWithBirthName .

  # Step 6: Determine the Parent of this Child (Royalty)
  ?finalParent a dbo:Person ;
               dbo:royalTitle ?title3 ;
               dbo:child ?child .

  FILTER EXISTS { ?title3 rdf:type dbo:RoyalTitle }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
427,38,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?prodiParty WHERE {
  # Find Lamberto Andreotti's father and his party affiliation
  ?lamberto a dbo:Person ;
            foaf:name ""Lamberto Andreotti"" .
  ?lamberto dbo:parent ?father .
  ?father dbo:partyAffiliation ?fatherParty .

  # Find Romano Prodi and his party affiliation
  ?prodi a dbo:Person ;
         foaf:name ""Romano Antonio Prodi"" ;
         dbo:officeHolder true ;
         dbo:politician true .
  ?prodi dbo:partyAffiliation ?prodiParty .
}
```",4,6,5,2,2,3,3,71,0,0,3,0,0.0,0
645,16,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find James Wilkes Maurice's residence
  ?michaelResidence dbo:resident dbr:James_Wilkes_Maurice .
  
  # Find Richard Pankhurst's child's alma mater
  ?childAlmaMater dbo:alumni ?pankhurstChild .
  ?pankhurstChild dbo:parent dbr:Richard_Pankhurst .

  # Ensure the entity is a country and matches both conditions
  ?entity rdf:type dbo:Country .
  FILTER (?michaelResidence = ?entity && ?childAlmaMater = ?entity)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
435,22,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Iceland .
  
  ?territory dbo:settlement true ;
            dbo:town true ;
            dbo:administers ?person .

  OPTIONAL { ?territory rdfs:label ""Land of fire and ice""@en . }
  
  ?timeZone dbo:region ?territory .
  ?timeZone rdfs:label ?tzLabel .
  FILTER (CONTAINS(LCASE(?tzLabel), ""bombali shebora chiefdom""))
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,24,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderRole ?award WHERE {
  # Lisa Gavrić's profession related to being a commander
  dbr:Lisa_Gavrić a dbo:Person .
  dbr:Lisa_Gavrić dbo:profession ?commanderRole .

  # Award received by Lisa Gavrić from Sergei Makovetsky
  OPTIONAL {
    dbr:Lisa_Gavrić dbo:award ?award .
    ?award dbo:recipient dbr:Sergei_Makovetsky .
  }
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
488,71,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT 
  ?administration 
  ?deathPlace 
  ?birthPlace 
WHERE {
  
  # Tokugawa Masako's spouse and their father (royalty)
  dbr:Tokugawa_Masako dbo:spouse ?spouse .
  ?spouse a dbo:Person ;
          dbo:father ?royalFather .
  ?royalFather a dbo:Royalty ;
               dbo:administration ?administration .

  # Matsudaira Tadamasa's father (politician)
  dbr:Matsudaira_Tadamasa dbo:father ?officeHolderFather .
  ?officeHolderFather a dbo:OfficeHolder ;
                     dbo:deathPlace ?deathPlace .
  OPTIONAL { 
    ?officeHolderFather a dbo:Politician .
  }

  # Saitō Hajime's war
  dbr:Saitō_Hajime dbo:militaryConflict ?war .
  ?war a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent ;
       dbo:birthPlace ?birthPlace .

}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
485,22,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Writer ;
          a dbo:Poet ;
          dbo:awardReceived dbr:Erich_Gregory_Award .
  ?person dbo:birthPlace ?birthPlace .
  
  # Filter for the country associated with Western European Time
  ?country dbo:timeZone dbr:Western_European_Time .
  FILTER (str(?country) = str(dbr:Portugal))
}
```",4,7,5,2,2,2,3,28,0,0,5,0,0.0,0
617,56,test,"Give me the parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of Laodice IV.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild ?royalChild WHERE {
  # Part 1: Commander in Battle of Panium and their child's parent
  ?commander a dbo:Person ;
             dbo:participatedInBattle dbr:Battle_of_Panium .
  ?child dbo:child ?commander .
  ?parentOfChild dbo:child ?child .

  # Part 2: Child of Seleucus II Callinicus who is royalty and spouse of Laodice IV
  ?seleucus a dbo:Person ;
            rdfs:label ""Seleucus II Callinicus""@en .
  ?royalChild dbo:child ?seleucus ;
              dbo:spouse dbr:Laodice_IV .
  
  # Assuming royalty can be inferred from titles or roles, but not directly queried
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,20,test,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils and landmark at elevation of the award of the commander in Battle of Chishui River.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?birthPlace WHERE {
  # Identify ""The Boils"" band
  ?band a dbo:Band ;
        rdfs:label ""The Boils""@en .
  
  # Find members of the band
  ?band dbo:member ?member .

  # Get birthplace of the member
  ?member dbo:birthPlace ?birthPlace .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
959,69,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Find Yōichi Masuzoe's residence and its native country
  dbr:Yōichi_Masuzoe dbo:residence ?residence .
  ?residence dbo:nativeOf ?nativeCountry .

  # Identify the person born in 1958 who is a manager of the 1998 Kashima Antlers season
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1958)
  ?person dbo:almaMater ?university .
  ?university rdf:type dbo:University ;
              dbo:country dbr:Japan .

  # Find the manager of the 1998 Kashima Antlers season
  ?manager a dbo:SportsManager ;
           dbo:managedTeam dbr:Kashima_Antlers_1998_season .
  
  # Link the person to the manager role
  ?person dbo:occupation ?managerRole .
  FILTER (?managerRole = ?manager)
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
251,28,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?rulingParty ?warLocation WHERE {
  # Find Louis François Félix Musnier and his death place
  ?musnier a dbo:Person ;
          foaf:name ""Louis François Félix Musnier"" ;
          dbo:deathPlace ?deathPlace .

  # Find the work authored by him
  ?work dbo:author ?musnier ;
        rdfs:label ""The Twelve Abbots of Challant""@en .

  # Find the ruling party in Sicily
  ?party a dbo:PoliticalParty ;
         dbo:location dbr:Sicily ;
         dbo:administration ?rulingParty .

  # Find any military conflict involving him and its location
  ?conflict a dbo:MilitaryConflict ;
            dbo:participant ?musnier ;
            dbo:location ?warLocation .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
747,65,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?person2 ?band2 ?song ?band3 WHERE {
  # Tracey Elizabeth McSween's band
  OPTIONAL {
    ?tracey a dbo:Person ;
            rdfs:label ""Tracey Elizabeth McSween""@en ;
            dbo:birthDate ?date1 ;
            dbo:band ?band1 .
  }

  # Pavlo Khudzik's birth date and another person with the same birth date
  OPTIONAL {
    ?pavlo a dbo:Person ;
           rdfs:label ""Pavlo Khudzik""@en ;
           dbo:birthDate ?date2 .

    ?person2 a dbo:Person ;
             dbo:birthDate ?date2 ;
             dbo:band ?band2 .
  }

  # Amba Shepherd's song and its band
  OPTIONAL {
    ?amba a dbo:Writer ;
          rdfs:label ""Amba Shepherd""@en ;
          dbo:work ?song .

    ?song a dbo:Songs ;
          dbo:band ?band3 .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
294,20,test,"Give me the entity in Nashville, Tennessee and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the architect of P.D. Houston Jr. House
SELECT ?architect ?deathPlace WHERE {
  ?architect a dbo:Architect .
  ?house dbo:architect ?architect .
  ?house rdfs:label ""P. D. Houston Jr. House""@en .
  OPTIONAL { ?architect dbo:deathPlace ?deathPlace . }
  FILTER (CONTAINS(LCASE(STR(?deathPlace)), ""nashville, tennessee""))
}

UNION

# Query for Luke Lea
SELECT ?lukeLea ?deathPlace WHERE {
  ?lukeLea a dbo:Politician ;
           dbo:birthYear ""1879""^^xsd:gYear .
  OPTIONAL { ?lukeLea dbo:deathPlace ?deathPlace . }
  FILTER (CONTAINS(LCASE(STR(?deathPlace)), ""nashville, tennessee""))
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
339,20,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Identify Princess Olga of Greece and Denmark
  dbr:Princess_Olga_of_Greece_and_Denmark a dbo:Person .

  # Step 2: Find Her Parent (Father)
  OPTIONAL { 
    ?olgaParent dbo:child dbr:Princess_Olga_of_Greece_and_Denmark .
    ?olgaParent a dbo:Person .
    ?olgaParent dbo:spouse ?olgaSpouse .
    ?olgaSpouse dbo:parent ?father .
  }

  # Step 4: Identify Frederick VIII of Denmark and His Predecessor
  dbr:Frederick_VIII_of_Denmark a dbo:Person ;
                                  dbo:predecessor ?predecessor .

  # Step 5: Find the Child of the Predecessor (Frederick VII)
  OPTIONAL {
    ?childOfPredecessor dbo:parent ?predecessor .
    ?childOfPredecessor a dbo:Person .
    
    # Step 6: Determine the Parent of This Child
    ?parentOfChild dbo:child ?childOfPredecessor .
    ?parentOfChild a dbo:Person .

    # Step 7: Identify the Father of This Parent
    ?parentOfChild dbo:spouse ?spouseOfParent .
    ?spouseOfParent dbo:parent ?father .
  }
}
```",6,6,7,3,2,3,2,20,0,4,1,0.0,0.0,0
142,8,test,Give me the entity in Japan and birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?birthPlace ?entityInJapan WHERE {
  # Find the actor who played Papa in Newscaster
  ?castMember dbo:character ""Papa""@en .
  ?castMember dbo:movie dbr:Newscaster .
  ?castMember dbo:actor ?actor .

  # Get the birthplace of the actor
  ?actor dbo:birthPlace ?birthPlace .

  # Find any entity related to the actor that is in Japan
  OPTIONAL {
    ?relatedEntity dbo:location ?location .
    ?relatedEntity dbo:person ?actor .
    ?location rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""japan""))
    BIND(?relatedEntity AS ?entityInJapan)
  }
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
820,18,test,Give me the child of the parent of Jason Schwartzman and professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify Jason Schwartzman's parent
  ?parent dbo:child dbr:Jason_Schwartzman .
  
  # Step 2: Find the child of that parent other than Jason Schwartzman
  ?parent dbo:child ?child .
  FILTER (?child != dbr:Jason_Schwartzman)
  
  # Step 3: Identify the author of ""Understanding Comics""
  dbr:Understanding_Comics dbo:author ?author .

  # Step 4: Determine the award related to this author
  ?award dbo:recipient ?author .
  
  # Step 5: Find a professional in that award
  ?professional dbo:profession ?award .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
10,23,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  ?colton a dbo:Person ;
          rdfs:label ""Matt Colton""@en .
  ?kao a dbo:Person ;
       rdfs:label ""Sharon Kao""@en .

  ?colton dbo:associatedMusicalArtist ?artist .
  ?kao dbo:associatedMusicalArtist ?artist .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
391,48,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?person a dbo:Person .
  ?person dbo:nativePlace ?nativePlace .
  
  # Find the movie that is also a work and television show
  ?movie a dbo:Film ;
         dbo:actor ?person, dbr:Roz_Ryan .

  # Ensure the person has a nickname related to Jackson, Tennessee
  OPTIONAL { ?person dbo:nickName ?nickname . FILTER regex(?nickname, ""Jackson, Tennessee"", ""i"") }

  # Filter for Roz Ryan as co-star
  ?movie dbo:actor dbr:Roz_Ryan .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
9,69,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?institution WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland .
  
  ?mayor a dbo:Politician ;
         dbo:almaMater ?institution ;
         dbo:position dbr:Belfast_Mayorship .

  ?organization a dbo:Organization ;
                dbo:headquarterLocation dbr:Belfast .

  ?awardee dbo:award dbr:Royal_Medal ;
           dbo:almaMater ?institution .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
232,51,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfResidence WHERE {
  # Sean Pertwee's claim to fame (film or military conflict)
  ?claimToFame a dbo:Film ; dbo:actor ?seanPertwee .
  UNION
  ?claimToFame a dbo:MilitaryConflict ; dbo:participant ?seanPertwee .

  BIND(dbr:Sean_Pertwee AS ?seanPertwee)

  # Find the native of France who is an actor in this claim to fame and also a politician and office holder
  ?person a dbo:Person ;
          dbo:nationality dbr:France ;
          dbo:actorIn ?claimToFame ;
          dbo:officeHolder ?office .

  # Determine their residence which is a settlement and British
  ?person dbo:residence ?residence .
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Find the native of this residence
  ?nativeOfResidence dbo:nativePlace ?residence .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
378,67,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?claimToFame WHERE {
  VALUES ?individual { dbr:Thomas_Trigge dbr:Carl_Pontus_Gahn }
  
  ?person rdfs:label ?individual .
  OPTIONAL {
    ?person dbo:commanderOf ?war .
    FILTER (?war = dbr:Peninsular_War || EXISTS { ?war dbo:participatedIn ?event . ?event a dbo:MilitaryConflict })
  }
  
  ?person dbo:claimToFame ?claimToFame .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
659,51,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event a dbo:MilitaryConflict .
  ?unit a dbo:MilitaryUnit ;
        dbo:name ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  ?commander a dbo:Person ;
             dbo:commanderOf ?unit ;
             dbo:participatedIn ?event .
  ?schimmelpenninck a dbo:Person ;
                    dbo:name ""Rutger Jan Schimmelpenninck""@en ;
                    dbo:participatedIn ?event .
}
```",5,10,6,3,2,3,3,71,0,0,31,0,0.0,0
959,30,test,Give me the native of Japan and manager of the team of Takashi Sekizuka and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Native of Japan condition
  ?person dbo:nationality dbr:Japan .

  # Manager of the team of Takashi Sekizuka (assuming managerOf is inferred from team affiliation)
  ?team dbo:member dbr:Takashi_Sekizuka .
  ?manager dbo:member ?team .
  
  # Member of University of Tsukuba
  ?person dbo:almaMater dbr:University_of_Tsukuba .

  FILTER (?person = ?manager)
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
421,28,test,Give me the band member of the awardee of [[#Awards and nominations and native of the birthplace of Samir Bekrić and person born as the birth name of Dino Merlin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find Samir Bekrić's birthplace
  dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .

  # Find Dino Merlin's birth name
  dbr:Dino_Merlin dbo:birthName ?birthName .

  # Identify an awardee who is a native of Samir Bekrić's birthplace and born with Dino Merlin's birth name
  ?awardee a dbo:Person ;
          dbo:nationality ?nationality ;
          dbo:birthPlace ?birthPlace ;
          dbo:birthName ?birthName .

  # Ensure the awardee has received an award
  ?award dbo:recipient ?awardee .
  
  # Find a band member of this awardee
  ?bandMember dbo:memberOfBand ?awardee .
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
378,18,test,"Give me the war of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person (GROUP_CONCAT(DISTINCT ?war; separator="", "") AS ?wars) 
WHERE {
  VALUES ?individual { 
    dbr:C._P._Gahn 
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón 
    dbr:Joaquín_Blake
  }
  
  ?person rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), LCASE(str(?individual)))) .

  OPTIONAL {
    ?person dbo:participatedIn ?war .
    ?war a dbo:MilitaryConflict .
  }

  OPTIONAL {
    ?crillon dbo:famousFor ?fame .
    FILTER (?crillon = dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón)
  }
}
GROUP BY ?person
```",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
767,50,test,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of Black Hood.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?almaMater WHERE {
  { 
    # George Kilbon Nash's alma mater
    OPTIONAL {
      ?nash a dbo:Person ;
            foaf:name ""George Kilbon Nash"" .
      ?nash dbo:almaMater ?almaMater .
      BIND(?nash AS ?person)
    }
  } UNION {
    # Alter ego of Black Hood's alma mater
    OPTIONAL {
      ?blackHood a dbo:FictionalCharacter ;
                 foaf:name ""Black Hood"" .
      ?alterEgo dbo:alterEgo ?blackHood ;
                dbo:almaMater ?almaMater .
      BIND(?alterEgo AS ?person)
    }
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,68,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Joseph Stalin's office leadership
  ?officeLeader a dbo:GovernmentAgency ;
                dbo:leader ?person ;
                dbo:headOfOffice dbr:Joseph_Stalin .

  # Award for Volcano and Ryukyu Islands campaign
  ?award a dbo:Award ;
         dbo:recipient ?person ;
         dbo:forCampaign [dbo:name ""Volcano and Ryukyu Islands campaign""] .
  
  # Military operations in Budapest
  ?operation a dbo:MilitaryOperation ;
             dbo:commander ?person ;
             dbo:location dbr:Budapest .

  # Death place is Budapest
  ?person dbo:deathPlace dbr:Budapest .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
92,51,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Joseph Michael"" .
  ?person dbo:musicalArtist ?band .

  OPTIONAL {
    ?sheppard a dbo:Person .
    ?sheppard rdfs:label ""Jim Sheppard""@en .
    ?sheppard dbo:musicalArtist ?band .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,52,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person (GROUP_CONCAT(DISTINCT ?partyLabel; separator="", "") AS ?parties) WHERE {
  VALUES ?individual { 
    dbr:Michele_Pinto 
    dbr:Lamberto_Andreotti#Father 
    dbr:Romano_Prodi
  }
  
  ?individual dbo:party ?party .
  ?party rdfs:label ?partyLabel .
  FILTER (LANG(?partyLabel) = ""en"")

  OPTIONAL {
    ?individual rdfs:label ?personLabel .
    FILTER (LANG(?personLabel) = ""en"")
    BIND(CONCAT(STR(?personLabel), "" ("", STR(?individual), "")"") AS ?person)
  }
}
GROUP BY ?person
```",6,6,7,3,3,3,3,71,0,4,2,0.0,0.0,0
184,65,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonPerson WHERE {
  # Archduke Joseph Francis of Austria's child and their parent
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  ?child1 dbo:parent ?commonPerson .

  # Native of Budapest
  ?native dbo:nativePlace dbr:Budapest .
  ?native dbo:parent ?commonPerson .

  # Archduke Ladislaus Philipp of Austria's parent and their child
  ?parent2 dbo:child dbr:Archduke_Ladislaus_Philipp_of_Austria .
  ?parent2 dbo:child ?sibling .
  ?sibling dbo:child ?grandChild .
  ?grandChild dbo:parent ?commonPerson .

  # Ensure the common person is royalty
  ?commonPerson rdf:type dbo:Royalty .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
9,64,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Step 1: Find the mayor of Belfast who is a politician
  ?mayor a dbo:Mayor ;
         dbo:location dbr:Belfast ;
         dbo:positionTitle ""Mayor"" .
  
  # Ensure the person is also recognized as a politician
  ?mayor dbo:occupation dbo:Politician .

  # Step 2: Find the alma mater of this mayor
  ?mayor dbo:almaMater ?almaMater1 .

  # Step 3: Identify an organisation in Belfast with a nickname and is an educational institution
  ?organisation a dbo:EducationalInstitution ;
                dbo:nickname ?nickname ;
                dbo:location dbr:Belfast .
  
  # Ensure the organisation has an alma mater that matches the mayor's alma mater
  ?organisation dbo:almaMater ?almaMater2 .

  FILTER (?almaMater1 = ?almaMater2)

  # Step 4: Find the alma mater of Allen Hill (scientist)
  dbr:Allen_Hill dbo:occupation dbo:Scientist ;
                 dbo:almaMater ?almaMater3 .

  # Ensure there's a match between the organisation's alma mater and Allen Hill's alma mater
  FILTER (?almaMater2 = ?almaMater3)

}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
487,20,test,"Give me the country of the administration of the person born on 1955-01-26 and administration of the person born, that is a soccer player, as the birth name of Phil Scott.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/country> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person1Country ?person2Country WHERE {
  # Person born on 1955-01-26
  ?person1 a dbo:Person .
  ?person1 dbo:birthDate ?date1 .
  FILTER (YEAR(?date1) = 1955 && MONTH(?date1) = 1 && DAY(?date1) = 26)
  ?person1 dbo:countryOfCitizenship ?person1Country .

  # Soccer player with birth name Phil Scott
  ?person2 a dbo:SoccerPlayer .
  ?person2 foaf:name ""Phil Scott""@en .
  ?person2 dbo:birthName ?name .
  FILTER (STR(?name) = ""Phil Scott"")
  ?person2 dbo:countryOfCitizenship ?person2Country .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
54,61,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Identify Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .
  
  # Step 2: Find Thihapate's child
  ?child dbo:parent ?thihapate .

  # Step 3: Identify the child who is an office holder and royalty
  ?officeHolderChild a dbo:Person ;
                    dbo:isOfficeHolder true ;
                    dbo:royalty true .
  FILTER (?child = ?officeHolderChild)

  # Step 4: Find the predecessor of this child
  ?predecessor dbo:successor ?officeHolderChild .

  # Step 5: Identify Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw of Prome""@en .
  
  # Step 6: Find the parent of Thado's parent
  ?parentOfParent dbo:child ?thadoMinsaw .
  ?grandparent dbo:child ?parentOfParent .

  # Ensure the predecessor is linked as described
  FILTER (?predecessor = ?grandparent)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
92,38,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?musicalArtist WHERE {
  # Find Joe Satriani's band
  OPTIONAL {
    ?satriani a dbo:Person ;
              foaf:name ""Joe Satriani"" .
    ?satriani dbo:band ?band .
  }
  
  # Find Jim Sheppard's musical artist association
  OPTIONAL {
    ?sheppard a dbo:Person ;
              foaf:name ""Jim Sheppard"" .
    ?sheppard dbo:musicalArtist ?musicalArtist .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
827,18,test,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Identify Charles Augustus
  ?charlesAugustus a dbo:Person ;
                  rdfs:label ""Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach""@en ;
                  dbo:birthDate ?date1 .
  FILTER (YEAR(?date1) = 1844 && YEAR(STRDT(?date1, xsd:date)) <= 1894)

  # Step 2: Find his child who is royalty
  ?child a dbo:Person ;
         dbo:child ?charlesAugustus ;
         rdfs:label ?royalChildLabel .
  
  # Step 3: Identify Charles Alexander's parent
  ?charlesAlexander a dbo:Person ;
                    rdfs:label ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en ;
                    dbo:child ?parentOfCharlesAlexander .

  # Step 4: Find the child of that parent who is royalty
  ?royalChild2 a dbo:Person ;
               dbo:child ?parentOfCharlesAlexander ;
               rdfs:label ?royalChildLabel2 .
  
  # Step 5: Determine the father of step 2's child
  ?father a dbo:Person ;
          dbo:spouse ?mother ;
          dbo:child ?child .

  FILTER (CONTAINS(LCASE(?royalChildLabel), ""royalty"") || CONTAINS(LCASE(?royalChildLabel2), ""royalty""))
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
435,21,test,Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?author a dbo:Writer .
  ?author dbo:nationality dbr:Iceland .
  ?author dbo:work ?work .

  ?country dbo:name ""Iceland""@en ;
           dbo:timeZone dbr:Greenwich_Mean_Time .

  ?territory dbo:administrativeCapital dbr:Reykjavík ;
             dbo:administeredBy ?country .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
547,64,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace WHERE {
  # William Haliburton's great-grandchild
  {
    ?greatGrandChild dbo:parent ?grandchild .
    ?grandchild dbo:parent ?child .
    ?child dbo:parent dbr:William_Haliburton .
    ?greatGrandChild dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Gerald Graham's award recipient
  {
    ?awardRecipient dbo:recipientOf ?award .
    ?award dbo:awardee dbr:Gerald_Graham .
    ?awardRecipient dbo:deathPlace ?restingPlace .
  }

  UNION

  # Simon Cadell
  {
    dbr:Simon_Cadell dbo:deathPlace ?restingPlace .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
701,47,test,Give me the parent of the child of the child of Seti I and parent of the child of Nefertari.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Seti I's grandchildren
  ?setiIChild a dbo:Person ;
              dbo:childOf dbr:Seti_I .
  ?grandchildSetiI dbo:childOf ?setiIChild .

  # Parent of Seti I's grandchild
  ?parentGrandchildSetiI dbo:spouse ?setiIChild ;
                         dbo:parent ?grandchildSetiI .

  # Nefertari's children
  ?nefertariChild a dbo:Person ;
                  dbo:childOf dbr:Nefertari .
  
  # Parent of Nefertari's child
  ?parentChildNefertari dbo:spouse dbr:Nefertari ;
                       dbo:parent ?nefertariChild .

  # Common parent
  FILTER (?parentGrandchildSetiI = ?parentChildNefertari)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
161,54,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Francisco Franco's role in the Biscay Campaign
SELECT ?francoCommander ?militaryForce WHERE {
  ?francoCommander a dbo:Person ;
                  rdfs:label ""Francisco Franco""@en .
  ?biscayCampaign dbo:societalEvent true ;
                  dbo:militaryConflict true ;
                  dbo:commander ?francoCommander .
  ?francoCommander dbo:militaryForce ?militaryForce .
}

# Query for Indalecio Prieto's predecessor and their military force
SELECT ?predecessor ?predecessorMilitaryForce WHERE {
  ?indalecioPrieto a dbo:Person ;
                   rdfs:label ""Indalecio Prieto""@en .
  ?predecessor dbo:societalEvent true ;
               dbo:militaryConflict true ;
               dbo:successor ?indalecioPrieto .
  ?predecessor dbo:militaryForce ?predecessorMilitaryForce .
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
701,46,test,Give me the parent of the child of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Ramesses II's child
  ?child1 dbo:parent dbr:Ramesses_II .
  
  # Parent of Ramesses II's child (could be Ramesses II or another parent)
  ?parent1 dbo:child ?child1 .

  # Amun-her-khepeshef's spouse
  ?spouse a dbo:Person ;
          dbo:spouse dbr:Amun-her-khepeshef .
  
  # Child of Amun-her-khepeshef's spouse
  ?child2 dbo:parent ?spouse .

  # Parent of the child of Amun-her-khepeshef's spouse (could be the spouse or another parent)
  ?parent2 dbo:child ?child2 .

  # Find common parent between the two sets
  FILTER (?parent1 = ?commonParent || ?parent2 = ?commonParent)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
232,52,test,"Give me the native of London and child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Jon Pertwee by his birth name
  ?jon a dbo:Person ;
       dbo:birthName ""Jon Pertwee""@en .
  
  # Identify Sean Pertwee's claim to fame (film and military conflict)
  ?sean a dbo:Person ;
        rdfs:label ""Sean Pertwee""@en ;
        dbo:claimToFame ?fame .
  FILTER EXISTS { ?fame rdf:type dbo:Film . }
  FILTER EXISTS { ?fame rdf:type dbo:MilitaryConflict . }

  # Find Jon Pertwee's child who is native to London
  ?child a dbo:Person ;
         dbo:nativePlace dbr:London ;
         dbo:parent ?jon .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,37,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist ?work WHERE {
  # Find Chris Taylor the music producer
  ?chris a dbo:Person ;
         foaf:name ""Chris Taylor"" ;
         dbo:profession dbo:MusicProducer .

  # Identify associated musical artists (producers)
  ?chris dbo:associatedMusicalArtist ?artist .
  
  # Ensure the artist is also a rapper
  ?artist dbo:profession dbo:Rapper .

  # Find works produced by this artist that are both songs and musical works
  ?work dbo:producer ?artist ;
        a dbo:Songs ;
        a dbo:MusicalWork .

}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
778,17,test,"Give me the entity in United States and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author WHERE {
  ?work1 a dbo:Software .
  ?work2 a dbo:Software .
  
  ?work1 dbo:title ""pushd""@en .
  ?work2 dbo:title ""popd""@en .

  ?work1 dbo:author ?author .
  ?work2 dbo:author ?author .

  ?author dbo:nationality dbr:United_States .
  
  FILTER EXISTS { 
    ?otherWork a dbo:Software ;
               NOT (dbo:title IN (""pushd"", ""popd"")) ;
               dbo:author ?author .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,24,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Arnulfo Arias Madrid"" ;
          dbo:politician true .
  ?person dbo:partyAffiliation ?party .

  OPTIONAL { 
    ?location a dbo:Place ;
              rdfs:label ""El Valle de Antón""@en ;
              dbo:country ?country .
    FILTER EXISTS { ?country a dbo:Country }
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
378,59,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find Carl Pontus Gahn's birth name
  VALUES (?carl) { dbr:C_P_Gahn }
  ?carl dbo:birthName ?birthName .

  # Identify commanders from the Peninsular War
  ?peninsularWar a dbo:MilitaryConflict ;
                 rdfs:label ""Peninsular War""@en .
  ?peninsularWar dbo:commander ?commander .

  # Find other wars involving these commanders
  ?otherWar a dbo:MilitaryConflict ;
            dbo:commander ?commander .

  # Check if any of these wars are associated with Carl Pontus Gahn's birth name
  OPTIONAL {
    ?otherWar dbo:personInvolved ?person .
    ?person dbo:birthName ?birthName .
  }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
232,71,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/property/residence> ?v8 . ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v4 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Jon Pertwee by birth name
  ?jon a dbo:Person ;
       dbo:birthName ""Jon Pertwee"" .
  
  # Identify his claim to fame as a film and military conflict
  ?film a dbo:Film, dbo:MilitaryConflict ;
        dbo:actor ?jon .
  
  # Find Jon's residence which is a settlement in Britain
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom ;
             dbo:nativePlace ?jon .
  
  # Identify a politician from France native to this place
  ?politician a dbo:Politician, dbo:OfficeHolder ;
              dbo:nativePlace ?residence ;
              dbo:country dbr:France .
  
  # Find the child of Jon Pertwee
  ?child dbo:parent ?jon .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
356,19,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in the successor of 2014 Sacramento Republic FC season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/manager> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  # Identify Gary Williams (footballer, born 1960)
  ?garry a dbo:Person ;
         foaf:name ""Gary Williams"" ;
         dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1960)

  # Determine his birthplace
  ?garry dbo:nationality dbr:England ;
         dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement in England
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:England .

  # Find teams associated with Gary Williams' birthplace
  ?team dbo:location ?birthPlace .
  
  # Identify players in the successor of 2014 Sacramento Republic FC season (2015)
  ?player dbo:soccerTeam ?sacramentoTeam ;
          dbo:memberOfTeam ?sacramentoTeam .

  # Ensure the team is Sacramento Republic FC for the 2015 season
  ?sacramentoTeam foaf:name ""Sacramento Republic FC"" .
  
  FILTER(YEAR(?season) = 2015)

  # Find a connection between Gary Williams' birthplace and any player from the 2015 Sacramento Republic FC team
  ?player dbo:birthPlace ?birthPlace .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
528,53,test,"Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?narcisoBirthDate ?orozimboWars ?chileWar WHERE {
  # Find Narciso Campero Leyes' birth date
  ?narciso a dbo:Person ;
           rdfs:label ""Narciso Campero Leyes""@en .
  ?narciso dbo:birthDate ?narcisoBirthDate .

  # Find Orozimbo Barbosa's wars
  ?orozimbo a dbo:Person ;
            rdfs:label ""Orozimbo Barbosa""@en .
  ?orozimbo dbo:militaryConflict ?orozimboWars .

  # Find societal events (wars) in Chile involving military forces
  ?chileWar a dbo:MilitaryConflict ;
            dbo:location dbr:Chile ;
            dbo:participatingMilitaryForce ?force .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
9,38,test,Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person dbo:award dbr:Royal_Medal .
  ?person rdfs:label ?nickname .
  FILTER(CONTAINS(LCASE(?nickname), ""nickname of queens university belfast""))
  ?person dbo:almaMater ?almaMater .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
487,19,test,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott and country of the administration of Patricia McCoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?result <http://dbpedia.org/property/governor> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?administrationCountry WHERE {
  # Find Phil Scott who is a soccer player
  ?philScott a dbo:SoccerPlayer ;
             foaf:name ""Phil Scott""@en .
  
  # Find Patricia McCoy's administration role
  ?patriciaMcCoy a dbo:OfficeHolder ;
                 foaf:name ""Patricia McCoy""@en ;
                 dbo:officeHeld ?administration .

  # Get the country of Patricia McCoy's administration
  ?administration dbo:country ?administrationCountry .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
404,56,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse ?princessFather WHERE {
  # Prince Ernest Augustus of Hanover
  ?person a dbo:Person ;
          rdfs:label ""Prince Ernest Augustus of Hanover""@en ;
          dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1914)

  # Find his parent
  ?parent dbo:child ?person .

  # Find his spouse who is royalty and married to Princess Victoria Louise of Prussia
  ?spouse a dbo:Person, dbo:Royalty ;
          rdfs:label ""Princess Victoria Louise of Prussia""@en ;
          dbo:spouse ?person .
  
  # Find the father of Princess Victoria Louise of Prussia
  ?princessFather dbo:child ?spouse .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,20,test,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleLocation ?rulingParty ?partyAdmin ?deathPlace WHERE {
  # Location of Battle of Marengo
  dbr:Battle_of_Marengo dbo:location ?battleLocation .

  # Administration of the ruling party in Sicily
  ?party a dbo:PoliticalParty ;
         dbo:headquarters ?partyAdmin ;
         dbo:member ?currentLeader .
  
  ?currentLeader dbo:officeHolderOf dbr:Sicily .
  
  # Death place of Laura Mancinelli
  dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,27,test,Give me the force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?occupation ?award WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Narciso Campero""@en .
  OPTIONAL { ?person dbo:occupation ?occupation . }
  OPTIONAL { ?person dbo:award ?award . }
}
```",3,3,4,3,1,3,3,71,0,1,4,0.0,0.0,0
328,58,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Awardee of Order of Suvorov
  ?person dbo:award dbr:Order_of_Suvorov .

  # Commander in the force of Ferenc Szálasi
  ?commanderRole dbo:leader ?ferencSzalasi .
  ?ferencSzalasi a dbo:Person ;
                 foaf:name ""Ferenc Szálasi""@en .
  ?person ?roleProperty ?commanderRole .

  # Leader of an office that is a government agency, linked to Gustav Jonson
  ?office dbo:leader ?person .
  ?office a dbo:GovernmentAgency .
  ?gustavJonson dbo:position ?office ;
                a dbo:Politician ;
                foaf:name ""Gustav Jonson""@en .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,30,test,"Give me the spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find the spouse of Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Identify the father of Ernest Augustus, Duke of Brunswick
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:child ?father .
  
  # Find the child of that father who is a parent of Prince Ernest Augustus of Hanover (born 1914)
  ?parent dbo:child dbr:Prince_Ernest_Augustus_of_Hanover_(1914) .
  ?father dbo:child ?parent .

  FILTER (?spouse = ?parent)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
54,48,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan's child (Person A)
  ?thinkhaya a dbo:Person ;
             foaf:name ""Thinkhaya of Pagan"" .
  
  ?childA dbo:parent ?thinkhaya .

  # Person B is the grandchild of Thinkhaya
  ?grandchildB dbo:parent ?childA .

  # Predecessor of Person B in royal line is Person A
  ?predecessor dbo:parent ?grandchildB .
  
  FILTER (?predecessor = ?childA)

  # Ensure Person A is an office holder and royalty related to Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             foaf:name ""Thihapate of Mohnyin"" .

  ?personA dbo:officeHolder ?office .
  ?personA a dbo:Royalty .
  
  # Ensure Person A is the child of Thihapate
  ?personA dbo:parent ?thihapate .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
392,24,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?sebastianoProvince ?sportsEventRegion WHERE {
  # Sebastiano Bianchetti's province of residence
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@en .
  ?residence dbo:resident ?person ;
             a dbo:Settlement ;
             dbo:country dbr:Italy .
  ?residence dbo:province ?sebastianoProvince .

  # Aguilar de Segarra's region of time zone (sports event)
  ?place a dbo:Place ;
         foaf:name ""Aguilar de Segarra""@en .
  ?place dbo:timeZone ?timeZone .
  ?event dbo:location ?place ;
         a dbo:SportsEvent .
  ?event dbo:region ?sportsEventRegion
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,23,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Deceased at the headquarter of House of Sombrerete
  ?person dbo:deathPlace dbr:Headquarters_of_the_House_of_Sombrerete .

  # Commander in their profession
  ?person dbo:profession dbr:Commander .

  # Associated with an event involving Lisa Gavrić
  ?event a dbo:Event .
  ?event dbo:societalEvent true .
  ?event dbo:associatedWith dbr:Lisa_Gavrić .
  ?person dbo:associatedWith ?event .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,51,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person .
  ?person dbo:honoraryTitle dbr:Royal_Medal .
  ?person dbo:nickName ?nickname .
  ?person dbo:almaMater ?almaMater .
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland .
  ?almaMater dbo:type ?type .
  FILTER (?type = dbo:University || ?type = dbo:College) .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
617,58,test,Give me the child of Antiochus III the Great and spouse of the child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Antiochus III the Great
  dbr:Antiochus_III_the_Great a dbo:Person .

  # His child
  ?child dbo:parent dbr:Antiochus_III_the_Great .
  
  # Spouse of his child
  ?spouse dbo:spouse ?child .

  # Commander in Battle of Panium and their child's parent
  dbr:Battle_of_Panium dbo:commander ?commander .
  ?commanderChild dbo:parent ?commander .
  ?commanderChild dbo:parent ?spouse .
}
```",6,6,7,3,3,3,3,71,2,0,0,1.0,1.0,1.0
767,65,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  # Find the administrative entity related to Green
  ?green a dbo:Settlement ;
         rdfs:label ""Green""@en .
  
  # Administrative unit of Green
  ?adminUnit dbo:administrativeUnit ?green .

  # Settlement in this administration
  ?settlement a dbo:Settlement ;
              dbo:administrativeUnit ?adminUnit .

  # Alter ego of Black Hood
  ?blackHood dbr:Black_Hood ;
             dbo:alias ?alterEgo .
  
  # Alma mater related to George Kilbon Nash's administration
  ?nashPerson rdfs:label ""George Kilbon Nash""@en .
  ?adminPerson dbo:worksFor ?nashPerson .
  ?almaMater dbo:alumni ?adminPerson .

  # Linking the alma mater to the settlement
  ?settlement dbo:location ?almaMater .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
182,22,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author1War ?author2War WHERE {
  # Find the author of a work related to the 2019 Sri Lanka Easter bombings
  ?work dbo:subject dbr:2019_Sri_Lanka_Easter_bombings .
  ?work dbo:author ?author1 .

  # Find works associated with Gotabhaya Rajapaksa
  ?work2 dbo:author dbr:Gotabhaya_Rajapaksa .
  
  # Find wars related to the author of the first work
  ?author1 dbo:subject ?war1 .
  ?war1 a dbo:War .

  # Find wars related to Gotabhaya Rajapaksa's works
  ?work2 dbo:subject ?war2 .
  ?war2 a dbo:War .

  BIND(?war1 AS ?author1War)
  BIND(?war2 AS ?author2War)
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,46,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander1 ?commander2 WHERE {
  # Part 1: Commander of the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?unit a dbo:MilitaryUnit ;
        rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  
  ?conflict a dbo:MilitaryConflict .

  ?commander1 a dbo:Person ;
              dbo:commander ?unit ;
              dbo:militaryConflict ?conflict .

  # Part 2: Native office holder commander in the Kingdom of Ireland
  ?officeHolder a dbo:OfficeHolder ;
                dbo:nationality dbr:Kingdom_of_Ireland ;
                dbo:commander ?force .
  
  ?commander2 a dbo:Person ;
              rdfs:label ?officeHolderLabel .

  FILTER (CONTAINS(LCASE(?officeHolderLabel), ""kingdom of ireland""))
}
```",5,8,6,3,2,3,3,71,0,0,71,0,0.0,0
485,20,test,"Give me the entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:residence dbr:Nottinghamshire .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:United_Kingdom .
  ?person dbo:award dbr:Erich_Gregory_Award .
  ?person dbo:occupation [ a dbo:Writer ; dbo:Poet ] .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,68,test,"Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce ?war WHERE {
  # Find Narciso Campero Leyes and his military force
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero Leyes"" ;
          dbo:militaryForce ?militaryForce .
  
  # Find the commander involved in an event on January 9th
  ?event dbo:date ?date ;
         dbo:commander ?commander .
  FILTER (YEAR(?date) = - && MONTH(?date) = 1 && DAY(?date) = 9)
  
  # Find wars involving a military force related to Chile
  ?war a dbo:MilitaryConflict ;
       dbo:militaryForce ?militaryForce ;
       dbo:location dbr:Chile .
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
547,34,test,Give me the resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alanCunninghamRestingPlace ?grandchildRestingPlace WHERE {
  # Resting place of Alan Cunningham
  OPTIONAL {
    dbr:Alan_Cunningham a dbo:Person .
    dbr:Alan_Cunningham dbo:finalBurial ?alanCunninghamRestingPlace .
  }

  # Resting place of the grandchild of William Haliburton
  OPTIONAL {
    dbr:William_Haliburton a dbo:Person .
    dbr:William_Haliburton dbo:child ?child1 .
    ?child1 dbo:child ?grandchild .
    ?grandchild dbo:finalBurial ?grandchildRestingPlace .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,58,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash and entity in Baden-Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fictionalCharacter ?almaMater ?entityInBadenWurttemberg WHERE {
  # Find Matthew Burland's fictional character
  ?person dbr:Matthew_Burland .
  ?person dbo:fictionalCharacter ?fictionalCharacter .

  # Find George K. Nash's alma mater
  ?nash dbr:George_K._Nash .
  ?nash dbo:almaMater ?almaMater .

  # Find an entity in Baden-Württemberg
  ?entityInBadenWurttemberg a dbo:Place ;
                           dbo:location dbr:Baden-Württemberg .

  # Link the fictional character to the alma mater and entity in Baden-Württemberg
  OPTIONAL { ?fictionalCharacter dbo:associatedWith ?almaMater }
  OPTIONAL { ?fictionalCharacter dbo:relatedTo ?entityInBadenWurttemberg }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,20,test,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region WHERE {
  # Find the time zone for Aguilar de Segarra
  ?aguilar a dbo:Place ;
           rdfs:label ""Aguilar de Segarra""@en .
  ?aguilar dbo:timeZone ?tz1 .

  # Find the time zone for Italy
  ?italy a dbo:Country ;
         rdfs:label ""Italy""@en .
  ?italy dbo:timeZone ?tz2 .

  # Find the time zone for Province of Schio
  ?schio a dbo:Province ;
         rdfs:label ""Schio""@en .
  ?schio dbo:timeZone ?tz3 .

  # Ensure all time zones are the same region
  FILTER (?tz1 = ?tz2 && ?tz2 = ?tz3)

  # Find sports events in these regions
  ?event a dbo:SportEvent ;
         dbo:location ?region .
  
  # Ensure the region is associated with the common time zone
  ?region dbo:timeZone ?commonTz .
  FILTER (?commonTz = ?tz1)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
547,55,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?restingPlace WHERE {
  # Part 1: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  { 
    ?person a dbo:Person .
    ?award dbo:recipient ?person ;
           rdfs:label ""Knight Grand Cross of the Order of St Michael and St George""@en .
    OPTIONAL { ?person dbo:restingPlace ?restingPlace . }
  }

  UNION

  # Part 2: Resting place of the child of James Burton (property developer)
  {
    ?child a dbo:Person ;
           dbo:parent dbr:James_Burton_(property_developer) .
    OPTIONAL { ?child dbo:restingPlace ?restingPlace . }
  }

  UNION

  # Part 3: Resting place of the actor of ""Enemy at the Door""
  {
    ?film a dbo:Film ;
          rdfs:label ""Enemy at the Door""@en .
    ?actor a dbo:Person ;
           dbo:actedIn ?film .
    OPTIONAL { ?actor dbo:restingPlace ?restingPlace . }
  }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
232,48,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Jon Pertwee's birth name and residence
  ?jon a dbo:Person ;
       rdfs:label ""Jon Pertwee""@en ;
       dbo:birthName ?birthName ;
       dbo:residence ?residence .

  # Ensure the residence is a settlement in Britain
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Find Sylvie Bermann's native place
  ?sylvie a dbo:Person ;
          rdfs:label ""Sylvie Bermann""@en ;
          dbo:nativePlace ?nativePlace .

  # Ensure the native place is a settlement in Britain
  ?nativePlace a dbo:Settlement ;
               dbo:country dbr:United_Kingdom .

  # Find Jon Pertwee's child who matches the criteria
  ?jon dbo:child ?child .
  
  FILTER (?residence = ?nativePlace)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
488,39,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace WHERE {
  # Find Tokugawa Masako's spouse
  ?masako a dbo:Person ;
          foaf:name ""Tokugawa Masako""@en .
  
  ?masako dbo:spouse ?spouse .

  # Determine the father of the spouse and check if he is royalty
  ?spouse dbo:father ?royalFather .
  ?royalFather a dbo:Royalty .

  # Get the administration associated with the royal father
  OPTIONAL { ?royalFather dbo:administers ?administration . }

  # Find Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
9,71,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v7 <http://dbpedia.org/property/nickname> ?v8 . ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v8 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organisation WHERE {
  ?organisation a dbo:EducationalInstitution ;
                dbo:location dbr:Northern_Ireland .
  
  ?mayor a dbo:Person ;
         dbo:almaMater ?organisation ;
         dbo:position dbr:Belfast_Mayorship .

  ?awardee a dbo:Person ;
           dbo:almaMater ?organisation ;
           dbo:award dbr:Royal_Medals .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
427,49,test,"Give me the reference to the name of Italian People's Party (1994) and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?italianPeopleParty ?party WHERE {
  # Identify Italian People's Party (1994)
  VALUES ?italianPeopleParty { dbr:Italian_People%27s_Party_(1994) }
  
  # Find Romano Prodi
  ?prodi a dbo:Person ;
         foaf:name ""Romano Prodi""@en ;
         dbo:birthName ?birthName .
         
  # Ensure he is an office holder and politician
  ?prodi dbo:officeHolder ?office ;
         dbo:partyAffiliation ?party .

  # Filter to ensure the party affiliation matches Italian People's Party (1994)
  FILTER (?party = ?italianPeopleParty)

  # Return the birth name of Romano Prodi and his party affiliation
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
747,63,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?band2 ?band3 WHERE {
  # Find band associated with Tracey Elizabeth McSween
  ?person1 a dbo:Person ;
           dbo:birthName ""Tracey Elizabeth McSween"" .
  OPTIONAL { ?person1 dbo:member ?band1 . }

  # Find writer of Apollo (Hardwell song) and their band
  ?song dbr:Apollo_(Hardwell_song) ;
        dbo:lyricsBy ?writer .
  ?writer a dbo:Writer ;
          dbo:member ?band2 .

  # Find athlete, soccer player who died in Zolotonosha and their birth date
  ?decedent a dbo:Athlete, dbo:SoccerPlayer ;
            dbo:deathPlace dbr:Zolotonosha .
  ?decedent dbo:birthDate ?date .
  
  # Find person born on the same date as the decedent
  ?person3 a dbo:Person ;
           dbo:birthDate ?sameDate .
  FILTER (?sameDate = ?date)
  OPTIONAL { ?person3 dbo:member ?band3 . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
328,62,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in force at Budapest
  ?commanderInForcePosition a dbo:CommanderInForce ;
                           dbo:place ?buda . 
  FILTER (str(?buda) = ""Budapest"") .
  ?person dbo:position ?commanderInForcePosition .

  # Awardee of the award for Volcano and Ryukyu Islands campaign
  ?award a dbo:Award ;
        dbo:name ?awardName .
  FILTER (CONTAINS(LCASE(str(?awardName)), ""volcano"") && CONTAINS(LCASE(str(?awardName)), ""ryukyu islands"")) .
  ?person dbo:awardReceived ?award .

  # Leader of People's Commissariat of Defense of the Soviet Union
  ?leadershipPosition a dbo:Leadership ;
                      dbo:organization dbr:People%27s_Commissariat_of_Defense_of_the_Soviet_Union .
  ?person dbo:position ?leadershipPosition .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,37,test,Give me the war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  ?war a dbo:War .
  ?war dbo:commander ?commander .
  
  OPTIONAL { 
    ?commander dbo:spouse dbr:Narciso_Campero . 
    # Alternatively, use other properties if available:
    # ?commander dbo:occupation dbr:Narciso_Campero .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
378,71,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/commander> ?v8 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v7 . ?v8 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find the person Carl Pontus Gahn and his birth name
  ?gahn a dbo:Person ;
        rdfs:label ""Carl Pontus Gahn""@en ;
        dbo:birthName ?birthName .

  # Find wars associated with Thomas Trigge as a commander
  ?trigge a dbo:Person ;
          rdfs:label ""Thomas Trigge""@en ;
          dbo:claimToFame ?commanderRole .
  
  ?commanderRole dbo:commanderOf ?war1 .
  FILTER (isLiteral(?commanderRole) && contains(str(?commanderRole), ""commander""))

  # Ensure the war is a military conflict and societal event
  ?war1 a dbo:MilitaryConflict ;
        dbo:societalEvent ?societalEvent .

  # Find wars associated with Thomas Trigge in reference to Peninsular War
  ?peninsularWar dbr:Peninsular_War ;
                 dbo:commanderOf ?trigge .
  
  # Link the war of interest to the Peninsular War through Thomas Trigge
  ?war2 dbo:commanderOf ?trigge .

  FILTER (?war1 = ?war2)
}
```",9,13,10,3,3,3,3,71,0,0,2,0,0.0,0
528,38,test,Give me the war of the commander in Battle of La Rinconada de Ate and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?force WHERE {
  # Find the commander of the Battle of La Rinconada de Ate
  ?battle a dbo:MilitaryConflict .
  ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
  
  ?battle dbo:commanderOfMilitaryConflict ?commander .

  OPTIONAL {
    ?commander dbo:militaryForce ?force .
  }

  # Find information about Narciso Campero Leyes
  ?person a dbo:Person ;
          rdfs:label ""Narciso Campero Leyes""@en ;
          dbo:birthName ""Narciso Campero Leyes"" .

  OPTIONAL {
    ?person dbo:militaryForce ?force .
  }

  FILTER (?commander = ?person)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
404,45,test,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?child WHERE {
  # Step 1: Identify Prince Ernest Augustus of Hanover
  ?prince a dbo:Person ;
          rdfs:label ""Prince Ernest Augustus of Hanover""@en ;
          dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1914)

  # Step 2: Find his parent
  ?parent dbo:child ?prince .

  # Step 3: Identify Princess Victoria Louise of Prussia and her spouse
  ?vl a dbo:Person ;
      rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?vl dbo:spouse ?spouse .

  # Step 4: Find the father of the spouse
  ?father dbo:child ?spouse .

  # Step 5: Identify the child of this father
  ?child dbo:parent ?father .

  # Ensure the child is also the spouse of Princess Victoria Louise
  FILTER (?child = ?spouse)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
659,36,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in German campaign of 1813.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify Rutger Jan Schimmelpenninck as a commander in the German campaign of 1813
  ?campaign dbo:commander dbr:Rutger_Jan_Schimmelpenninck .
  
  # Ensure the campaign is part of the German campaign of 1813
  ?campaign dbo:participatedIn dbr:German_campaign_of_1813 .

  # Find the military force associated with this campaign
  ?campaign dbo:militaryForce ?militaryForce .

  # Ensure the campaign is classified as a societal event, an event, and a military conflict
  ?campaign rdf:type dbo:SocietalEvent .
  ?campaign rdf:type dbo:Event .
  ?campaign rdf:type dbo:MilitaryConflict .
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
488,22,test,Give me the administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherAdministration ?enomotoBirthPlace WHERE {
  # Part 1: Administration of the father of Emperor Go-Mizunoo
  OPTIONAL {
    dbr:Emperor_Go-Mizunoo dbo:father ?father .
    ?father dbo:office ?administration .
    BIND(?administration AS ?fatherAdministration)
  }
  
  # Part 2: Birth place of Enomoto Takeaki
  dbr:Enomoto_Takeaki dbo:birthPlace ?enomotoBirthPlace .
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
9,36,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?institution (SAMPLE(?label) AS ?nickname) WHERE {
  ?institution a dbo:EducationalInstitution ;
               a dbo:Organisation ;
               dbo:location dbr:Northern_Ireland .
  ?almaMater dbo:almaMater ?institution .
  ?almaMater rdfs:label ""John Alderdice""@en .
  OPTIONAL { ?institution rdfs:label ?label . FILTER (lang(?label) = 'en') }
}
GROUP BY ?institution
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,61,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the capital of Khemis Miliana District
  ?district a dbo:District ;
            dbo:capital ?capital .
  
  FILTER (STR(?district) = ""Khemis_Miliana_District"")

  # Ensure the capital is a settlement
  ?capital a dbo:Settlement .

  # Identify persons who died in this capital
  ?person a dbo:Person ;
          dbo:deathPlace ?capital .

  # Find wars that include the Battle of Verdun
  ?war a dbo:MilitaryConflict, dbo:Event ;
       dbo:commander ?person .
  
  # Ensure the war includes the Battle of Verdun
  ?war dbo:partOf ?battle .
  FILTER (STR(?battle) = ""Battle_of_Verdun"")
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
54,26,test,Give me the parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandGrandParent WHERE {
  # Step 1: Identify Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw""@en .
  
  # Step 2: Find the parent of Thado Minsaw
  ?parentOfThado dbo:child ?thadoMinsaw .

  # Step 3: Identify the child of this parent (grandchild of Thado Minsaw)
  ?childOfParent dbo:child ?parentOfThado .

  # Step 4: Find the parent of this child
  ?grandGrandParent dbo:child ?childOfParent .
}
```",3,3,4,3,1,3,3,71,0,2,2,0.0,0.0,0
959,71,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/manager> ?v7 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the leader of the 2010 Japanese House of Councillors election who is a politician
  ?leader a dbo:Politician ;
          dbo:electedAsMemberOf ?election .
  
  FILTER (?election = dbr:2010_Japanese_House_of_Councillors_election)

  # The person's native place should be the residence country of this leader
  ?person dbo:nativePlace ?residenceCountry .
  ?leader dbo:residence ?residence .

  FILTER (?residenceCountry = ?residence)
  
  # Person born in 1958
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1958)

  # Alma mater conditions
  ?almaMater a dbo:University ;
             dbo:country dbr:Japan ;
             dbo:isOrganisation true ;
             dbo:isEducationalInstitution true .

  ?person dbo:almaMater ?almaMater .

  # Manager of the team whose manager was responsible for the 1998 Kashima Antlers season
  ?teamManager a dbo:SportsManager ;
               dbo:managedTeam ?team .
  
  ?team dbo:season ?season .
  FILTER (?season = dbr:1998_Kashima_Antlers_season)

  ?person dbo:managerOfTeam ?team .

}
```",9,16,10,3,3,3,3,71,0,0,3,0,0.0,0
959,68,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find Takashi Sekizuka's team manager
  ?teamManager dbo:memberTeam ?takashiSekizukaTeam .
  
  # Ensure the manager is an alumnus of a Japanese university
  ?manager dbo:almaMater ?university .
  ?university a dbo:University ;
              dbo:country dbr:Japan .

  # The person was born in 1958
  ?manager dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1958)

  # Ensure the manager's nationality matches the leader's country of residence from the 2010 election
  ?leader a dbo:Politician ;
          dbo:electedDuring dbr:2010_Japanese_House_of_Councillors_election .
  ?country dbr:Japan ; # Assuming Japan for simplicity, adjust based on actual data
            dbo:residenceCountry ?leader .

  ?manager dbo:nationality ?country .

  # Link the manager to Takashi Sekizuka's team
  ?teamManager dbo:memberTeam ?takashiSekizukaTeam .
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
232,38,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Sean Pertwee's claim to fame (films and military conflicts)
  ?film a dbo:Film ;
        dbo:starring ?actor .
  FILTER EXISTS { ?film dbo:starring dbr:Sean_Pertwee }
  
  OPTIONAL {
    ?conflict a dbo:MilitaryConflict ;
              dbo:participant ?actor .
    FILTER EXISTS { ?conflict dbo:participant dbr:Sean_Pertwee }
  }

  # Sylvie Bermann's native place (British settlement)
  ?settlement a dbo:Settlement ;
              dbo:nativePlace dbr:Sylvie_Bermann ;
              dbo:country dbr:United_Kingdom .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
378,21,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war WHERE {
  VALUES ?person { 
    dbr:C._P._Gahn 
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón
  }
  
  OPTIONAL {
    ?person dbo:associatedWithWar ?war .
  }

  FILTER (?person = dbr:C._P._Gahn || ?person = dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón)
}
```",3,3,4,2,2,3,3,71,0,2,2,0.0,0.0,0
54,65,test,"Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Identify Soe Min Wimala Dewi's father
  ?father dbo:child dbr:Soe_Min_Wimala_Dewi .
  
  # Step 2: Find the child of Soe Min Wimala Dewi's father
  ?childFather dbo:parent ?father .

  # Step 3: Identify Thado Minsaw of Prome's parent
  ?thadoParent dbo:child dbr:Thado_Minsaw_of_Prome .
  
  # Step 4: Find the child of Thado Minsaw of Prome's parent
  ?childThadoParent dbo:parent ?thadoParent .

  # Step 5: Identify the predecessor of the child found in step 4
  ?predecessor dbo:successor ?childThadoParent .
  
  # Step 6: Ensure the person is an office holder and royalty, related to Thihapate of Mohnyin
  ?person dbo:officeHolder ?predecessor ;
          a dbo:Royalty ;
          dbo:relatedTo dbr:Thihapate_of_Mohnyin .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
645,18,test,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find the commander in Battle of Diamond Rock
  ?commander a dbo:Person ;
             dbo:commanderOf dbr:Battle_of_Diamond_Rock .

  # Find Richard Pankhurst's child
  ?child dbo:parent dbr:Richard_Pankhurst ;
         a dbo:Person .

  # Alma mater of the child
  ?almaMater dbo:alumni ?child ;
             a dbo:EducationalInstitution .

  # Residence (country) of the alma mater
  ?entity dbo:residence ?almaMater .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
767,64,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Writer of ""Where It's At"" (Dustin Lynch album)
  ?album dbo:artist dbr:Dustin_Lynch ;
         rdfs:label ""Where It's At""@en .
  
  # Alma mater of Carl L. Nippert
  ?nippert a dbo:Person ;
           foaf:name ""Carl L. Nippert"" ;
           dbo:almaMater ?almaMater .

  # Alter ego of the persona, fictional character of Matthew Burland
  ?burland a dbo:Person ;
           foaf:name ""Matthew Burland"" ;
           dbo:fictionalCharacter ?fictionalCharacter .
  
  # Entity in administration and is a settlement
  ?entity dbo:settlement true ;
          dbo:administrator ?writer ;
          dbo:administrator ?almaMater ;
          dbo:administrator ?fictionalCharacter .

  FILTER (STRSTARTS(STR(?album), ""http://dbpedia.org/resource/"") &&
          STRSTARTS(STR(?nippert), ""http://dbpedia.org/resource/"") &&
          STRSTARTS(STR(?burland), ""http://dbpedia.org/resource/""))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
528,55,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find the birth date of Narciso Campero Leyes
SELECT ?person ?birthDate WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Narciso Campero Leyes""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}

# Query for Battle of Pisagua
SELECT ?militaryForce ?commander WHERE {
  dbr:Battle_of_Pisagua dbo:militaryForce ?militaryForce ;
                        dbo:commanderOfMilitaryForce ?commander .
}

# Query for Battle of La Rinconada de Ate
SELECT ?militaryForce ?commander WHERE {
  dbr:Battle_of_La_Rinconada_de_Ate dbo:militaryForce ?militaryForce ;
                                     dbo:commanderOfMilitaryForce ?commander .
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
427,67,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?romanoParty ?fatherParty WHERE {
  # Romano Prodi's details
  dbr:Romano_Prodi a dbo:Person ;
                   dbo:birthName ?romanoBirthName ;
                   dbo:officeHolder ?office ;
                   dbo:politician ?politicianRole ;
                   dbo:party ?romanoParty .

  FILTER EXISTS { ?office a dbo:Office . }
  FILTER EXISTS { ?politicianRole a dbo:Politician . }

  # Alumnus of MIT
  ?alumnus dbo:alumniOf dbr:Massachusetts_Institute_of_Technology ;
           dbo:father ?father .

  # Father's party affiliation
  ?father dbo:party ?fatherParty .

  # Reference to Partito Popolare Italiano
  OPTIONAL { ?romanoParty rdfs:label ""Partito Popolare Italiano""@en . }
  OPTIONAL { ?fatherParty rdfs:label ""Partito Popolare Italiano""@en . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
177,8,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in South Korea.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/location> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters WHERE {
  ?person rdfs:label ""Joo Don-sik""@en .
  ?position dbo:positionHolder ?person ;
            dbo:organization ?org .
  ?org dbo:location ?location ;
       dbo:headquarters ?headquarters .
  FILTER (CONTAINS(LCASE(?location), ""south korea""))
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
328,54,test,"Give me the commander in the force of the person decedent at Budapest and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in the force at Budapest
  ?commanderRole dbo:location dbr:Budapest ;
                 dbo:agent ?person .

  # Leader of People's Commissariat of Defense of the Soviet Union
  ?leaderRole dbo:position ""People's Commissar for Defence""@en ;
              dbo:agent ?person .
  
  # Awardee of an award from Bruce Fraser, 1st Baron Fraser of North Cape
  ?awardReceived dbo:recipient ?person ;
                 dbo:givenBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,56,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeRestingPlace ?simonCadellRestingPlace ?childRestingPlace WHERE {
  # Resting place of the awardee of Gerald Graham's award
  {
    SELECT ?person WHERE {
      ?award dbo:recipient ?person .
      ?award dbo:name dbr:Gerald_Graham#Awards .
    }
    OPTIONAL { ?person dbo:restingPlace ?awardeeRestingPlace . }
  }

  # Resting place of Simon Cadell
  {
    SELECT ?simonCadellRestingPlace WHERE {
      dbr:Simon_Cadell a dbo:Person .
      dbr:Simon_Cadell dbo:restingPlace ?simonCadellRestingPlace .
    }
  }

  # Resting place of the child of James Burton (property developer)
  {
    SELECT ?childRestingPlace WHERE {
      ?jamesBurton a dbo:Person ;
                  foaf:name ""James Burton"" ;
                  dbo:occupation dbr:Property_developer .
      ?child dbo:parent ?jamesBurton ;
             dbo:restingPlace ?childRestingPlace .
    }
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
783,16,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of Ofori Amponsah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonBandMember WHERE {
  # Priscilla Opoku-Kwarteng as an artist and musical artist
  ?priscilla a dbo:Person ;
             rdfs:label ""Priscilla Opoku-Kwarteng""@en ;
             dbo:musicalArtist ?musicalArtist .
  
  # Ofori Amponsah's band members
  dbr:Ofori_Amponsah dbo:bandMember ?oforiBandMember .

  # Find common band membership
  ?priscilla dbo:bandMember ?commonBandMember ;
             dbo:musicalArtist ?musicalArtist .
  
  FILTER (lang(?musicalArtist) = ""en"")
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
827,19,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Find children of Maria Pavlovna who are royalty
  ?mariaPavlovnaChild a dbo:Person ;
                      dbo:child dbr:Grand_Duchess_Maria_Pavlovna_of_Russia ;
                      dbo:royalty true .
  
  # Find grandchildren (children of the above) who are royalty
  ?childOfChild a dbo:Person ;
                dbo:child ?mariaPavlovnaChild ;
                dbo:royalty true .

  # Find spouse of Pauline who is royalty
  ?paulineSpouse a dbo:Person ;
                 dbo:spouse dbr:Princess_Pauline_of_Saxe-Weimar-Eisenach ;
                 dbo:royalty true .
  
  # Find children of the above spouse who are royalty
  ?childOfPaulineSpouse a dbo:Person ;
                        dbo:child ?paulineSpouse ;
                        dbo:royalty true .

  # Match the child of Maria Pavlovna's child with Pauline's spouse's child
  FILTER (?childOfChild = ?childOfPaulineSpouse)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
747,46,test,"Give me the band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Find the writer of ""Apollo"" by Hardwell
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ""Apollo""@en .
  FILTER(CONTAINS(LCASE(str(?song)), 'hardwell')) .

  # Get the band associated with this writer
  ?band dbo:member ?writer .

  # Find a person who is an athlete and soccer player, deceased at Zolotonosha
  ?decedent a dbo:SoccerPlayer ;
            dbo:deathPlace dbr:Zolotonosha ;
            dbo:birthDate ?birthDate .

  # Ensure the decedent is also classified as an athlete
  ?decedent a dbo:Athlete .

  # Find another person born on the same date as the decedent
  ?person a dbo:Person ;
          dbo:birthDate ?sameBirthDate .
  FILTER(YEAR(?sameBirthDate) = YEAR(?birthDate) &&
         MONTH(?sameBirthDate) = MONTH(?birthDate) &&
         DAY(?sameBirthDate) = DAY(?birthDate))
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,61,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Seti I's child
  ?child1 dbo:parent dbr:Seti_I .
  
  # Child of Seti I's child (grandchild)
  ?child2 dbo:parent ?child1 .

  # Commander in Battle of Perire
  ?commander dbo:participatedIn dbr:Battle_of_Perire .

  # Father of the commander
  ?father dbo:child ?commander .

  # Spouse of the father, who is royalty
  ?spouse dbo:spouse ?father .
  
  # Ensure spouse is royalty (assuming a property or class indicating royalty)
  ?spouse rdf:type dbo:RoyalFamilyMember .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
44,9,test,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche and band member of the band of John Pettibone.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find band members of Queensrÿche
  ?queensArtist a dbo:MusicalArtist ;
                dbo:bandMember ?person .
  FILTER EXISTS { ?queensArtist dbo:genre ?genre . } # Ensure it's an organization

  # Find the band associated with John Pettibone and its members
  dbr:John_Pettibone dbo:bandMember ?pettiboneBand ;
                     a dbo:MusicalArtist .
  FILTER EXISTS { ?pettiboneBand dbo:genre ?genre . } # Ensure it's an organization

  ?pettiboneBand dbo:bandMember ?person .

  # Ensure the person is common to both bands
  FILTER (?queensArtist != ?pettiboneBand)
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
378,48,test,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Carl Pontus Gahn's claim to fame
SELECT ?claimToFame WHERE {
  ?gahn a dbo:Person ;
        foaf:name ""Carl Pontus Gahn""@en .
  OPTIONAL { ?gahn dbo:claimToFame ?claimToFame . }
}

# Step 2: Identify the commander in the Great Siege of Gibraltar
SELECT ?commander WHERE {
  ?siege dbo:commandedBy ?commander ;
         rdfs:label ""Great Siege of Gibraltar""@en .
}

# Step 3: Check for any connection between Carl Pontus Gahn and the commander through wars or notable achievements
SELECT DISTINCT ?claimToFame WHERE {
  ?gahn a dbo:Person ;
        foaf:name ""Carl Pontus Gahn""@en .
  OPTIONAL { ?gahn dbo:claimToFame ?claimToFame . }
  
  ?commander a dbo:Person ;
             dbo:commandedBy ?siege .
  ?siege rdfs:label ""Great Siege of Gibraltar""@en .

  # Check if there is any overlap in their claims to fame or involvement in wars
  OPTIONAL { ?gahn dbo:participatedInWar ?war . }
  OPTIONAL { ?commander dbo:participatedInWar ?war . }

  FILTER EXISTS {
    ?claimToFame = ?gahnClaim || ?claimToFame = ?commanderClaim
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
996,17,test,Give me the force of Dagobert Sigmund von Wurmser and entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?award WHERE {
  # Find the force associated with Dagobert Sigmund von Wurmser
  ?wurmser a dbo:Person ;
           foaf:name ""Dagobert Sigmund von Wurmser"" ;
           dbo:militaryCommand ?force .

  # Find an award related to a native of Palestine (historical region)
  ?award a dbo:Award ;
         dbo:recipient ?recipient .
  
  ?recipient dbo:nationality dbr:Palestine ;
             dbo:birthPlace ?place .
  
  FILTER EXISTS { ?place dbo:country dbr:Palestine } # Ensuring the place is in Palestine
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
9,67,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?nickname ?award WHERE {
  # Find John Alderdice's alma mater
  dbr:John_Alderdice_Baron_Alderdice a dbo:Person .
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMater .

  # Identify an organization that is also an educational institution in Northern Ireland with a nickname
  ?institution a dbo:EducationalInstitution ;
              dbo:location dbr:Northern_Ireland ;
              rdfs:label ?nickname .
  
  # Find the award related to Royal Medals
  ?award a dbo:Award ;
         rdfs:label ?awardLabel .
  FILTER CONTAINS(?awardLabel, ""Royal Medal"")
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
838,18,test,"Give me the band member of the band, that is a group, of YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?yuGrupaMember ?zikaBandMember WHERE {
  # Find members of YU Grupa
  ?yuGrupa a dbo:Band ;
           dbo:bandMember ?yuGrupaMember .
  
  FILTER (str(?yuGrupa) = ""YU_Grupa"")

  # Find the band associated with Žika Jelić
  ?zikaJelic a dbo:Person ;
             foaf:name ""Žika Jelić"" .

  ?zikaBand a dbo:Band ;
            dbo:bandMember ?zikaJelic .
  
  # Find members of that band
  ?zikaBand dbo:bandMember ?zikaBandMember .

  # Check if any member is common between YU Grupa and Žika Jelić's band
  FILTER (?yuGrupaMember = ?zikaBandMember)
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
427,18,test,Give me the party of Giulio Andreotti and party of Romano Prodi and reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?andreottiParty ?prodiParty WHERE {
  # Giulio Andreotti's party affiliation
  OPTIONAL { 
    dbr:Giulio_Andreotti dbo:party ?andreottiParty .
  }
  
  # Romano Prodi's party affiliation
  OPTIONAL { 
    dbr:Romano_Prodi dbo:party ?prodiParty .
  }

  # Reference to Partito Popolare Italiano
  FILTER (
    EXISTS { ?party rdfs:label ""Partito Popolare Italiano""@it }
    || ?andreottiParty = <http://dbpedia.org/resource/Partito_Popolare_Italiano>
    || ?prodiParty = <http://dbpedia.org/resource/Partito_Popolare_Italiano>
  )
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,49,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?settlement WHERE {
  # Find the alter ego of Matthew Burland
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""Matthew Burland"" .
    ?person dbo:alterEgo ?alterEgo .
  }
  
  # Find an entity in the administration of Green
  OPTIONAL {
    ?settlement a dbo:Settlement ;
                dbo:administrativeUnit ?greenEntity .
    ?greenEntity rdfs:label ""Green""@en .
  }
}
```",5,7,6,3,2,3,3,71,0,0,7,0,0.0,0
488,47,test,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceOfCommander ?deathPlaceOfPolitician WHERE {
  # Matsudaira Tadamasa
  dbr:Matsudaira_Tadamasa a dbo:Person ;
                          dbo:child ?father .

  # Father of Matsudaira Tadamasa
  ?father a dbo:Person ;
          dbo:officeHolder ?officeHolderRole ;
          dbo:child ?grandfather .

  # Grandfather (Politician)
  ?grandfather a dbo:Person ;
               dbo:politician ?politicianRole .

  # Birth place of Matsudaira Tadamasa (Commander in Boshin War)
  dbr:Matsudaira_Tadamasa dbo:birthPlace ?birthPlaceOfCommander .

  # Death place of the grandfather (Politician)
  ?grandfather dbo:deathPlace ?deathPlaceOfPolitician .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
492,71,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v4 . ?v7 <http://dbpedia.org/ontology/capital> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Person who died at the capital of Khemis Miliana District
  ?person dbo:deathPlace ?capital .
  
  ?capital a dbo:Settlement ;
           dbo:country dbr:Khemis_Miliana_District .

  # Person associated with an author from French Algeria and involved in Battle of Verdun
  ?author dbo:nationality dbr:French_Algeria ;
          dbo:work ?work .
  
  ?person dbo:commanderInMilitaryConflict ?conflict .
  
  ?conflict a dbo:MilitaryConflict, dbo:Event ;
           dbo:name ""Battle of Verdun"" .

  # Linking the person to both conditions
  FILTER (?capital = ?author && ?conflict = ?person)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
328,43,test,Give me the commander in the force of the person decedent at Budapest and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Decedent at Budapest
  ?person dbo:deathPlace dbr:Budapest .

  # Awardee of Order of Suvorov
  ?person dbo:award dbr:Order_of_Suvorov .

  # Leader of People's Commissariat of Defense
  ?person dbo:leaderOf dbr:People's_Commissariat_of_Defence_of_the_Soviet_Union .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
378,43,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?fame ?war WHERE {
  VALUES ?person { 
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón
    dbr:C_P_Gahn
  }
  
  OPTIONAL {
    ?person dbo:commanderOf ?war .
    FILTER (str(?war) = ""Peninsular_War"")
    BIND(""Commander in the Peninsular War"" AS ?fame)
  }

  OPTIONAL {
    ?person dbo:participatedIn ?war .
    FILTER (?person = dbr:C_P_Gahn && !bound(?fame))
    BIND(""Participated in a military conflict"" AS ?fame)
  }
  
  FILTER (bound(?fame))
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
365,9,test,"Give me the reference to the real name of The Blasters and band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?memberName WHERE {
  ?band a dbo:Band ;
        foaf:name ""The Blasters""@en .
  
  ?band dbo:member ?person .
  ?person a dbo:Person ;
          foaf:name ?memberName .

  OPTIONAL { 
    ?person dbo:occupation ?occupation .
    FILTER (
      CONTAINS(LCASE(?occupation), ""vocalist"") ||
      CONTAINS(LCASE(?occupation), ""musician"") ||
      CONTAINS(LCASE(?occupation), ""songwriter"")
    )
  }
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
617,20,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v4 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalParent WHERE {
  # Step 1: Find Mlada (abbess) and her parent
  ?mlada a dbo:ApostolicAbbey ;
         dbo:parent ?mladaParent .

  # Step 2: Find the child of Mlada's parent who is royalty
  ?childOfMladaParentParent a dbo:Royal ;
                           dbo:child ?royaltyChild .
  
  FILTER (?mladaParent = ?childOfMladaParentParent) .

  # Step 3: Identify Richeza of Poland and her reference that is royalty
  ?richeza dbr:Richeza_of_Poland ;
          a dbo:Royal ;
          dbo:parent ?richezaParent .
  
  # Step 4: Find Richeza's father and his parent (grandfather)
  ?richezasFather a dbo:Royal ;
                  dbo:child ?richeza ;
                  dbo:parent ?richezaGrandfather .

  FILTER (?richezaParent = ?richezasFather) .

  # Step 5: Find the parent of Richeza's grandfather who is royalty
  ?grandfathersParent a dbo:Royal ;
                      dbo:child ?richezaGrandfather .
  
  FILTER (?richezaGrandfather = ?richezasFather) .

  # Final step: Get the parent of Richeza's grandfather (final result)
  ?finalParent a dbo:Royal ;
               dbo:parent ?grandfathersParent .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
392,23,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@en .
  
  ?residence dbo:resident ?person ;
             a dbo:Settlement ;
             dbo:country dbr:Italy .

  ?residence dbo:province ?province .

  ?region a dbo:Country ;
          dbo:timeZone dbr:Central_European_Time .

  ?province dbo:country ?region .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,33,test,Give me the entity in Baden-Württemberg and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInBadenWurttemberg ?almaMater WHERE {
  # Find George Kilbon Nash
  ?nash a dbo:Person ;
        foaf:name ""George Kilbon Nash""@en .
  
  # Entity in Baden-Württemberg associated with him
  OPTIONAL { 
    ?entityInBadenWurttemberg dbo:location dbr:Baden-Württemberg ;
                              dbo:administrator ?nash .
  }
  
  # Alma mater of George Kilbon Nash
  ?nash dbo:almaMater ?almaMater .
}
```",4,4,5,3,2,3,3,71,0,1,1,0.0,0.0,0
838,19,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Identify YU Grupa
  dbr:YU_Grupa a dbo:Band ;
               dbo:reference ?reference .

  # Find band members of YU Grupa
  ?member dbo:bandMember dbr:YU_Grupa .
  
  # Ensure the member is an artist and musical artist
  ?member a dbo:Artist, dbo:MusicalArtist .

  # Find other bands that this member belongs to
  ?otherBand dbo:bandMember ?member ;
             a dbo:Band .

  # Return the band of the band member
  ?band dbo:bandMember ?member .
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
492,27,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace ?place .
  
  ?district dbo:capital ?place .
  ?district rdfs:label ""Khemis Miliana District""@en .

  ?place a dbo:Settlement .
}
```",3,4,4,3,1,3,3,71,0,0,122,0,0.0,0
328,34,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Condition for being the leader of People's Commissariat of Defense
  ?officeHolderPosition rdfs:label ""People's Commissar for Defence""@en ;
                       dbo:officeHolder ?person .

  # Condition for receiving an award in the Volcano and Ryukyu Islands campaign
  ?award rdfs:label ""Volcano and Ryukyu Islands campaign commander"" ;
         dbo:recipient ?person .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
391,58,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  
  # Native of Compton, California
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Compton,_California .

  # Actor in a work associated with Michael Ballhaus
  ?work dbo:director dbr:Michael_Ballhaus .
  ?work dbo:starring ?person .

  # Actor in a movie that is also categorized as both a movie and a television show
  ?movie dbo:film dbr:Movie ;
         dbo:televisionShow dbr:Television_Show .
  ?movie dbo:starring ?person .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
617,22,test,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find a child of Antiochus IV Epiphanes (Antiochus, son of Antiochus III)
  ?child dbo:parent dbr:Antiochus_IV_Epiphanes .
  
  # Identify the parent of this child
  ?child dbo:parent ?parent .

  # Ensure that this parent is also a child of Antiochus III
  ?parent dbo:parent dbr:Antiochus_III_the_Great .
}
```",3,3,4,2,2,3,3,71,1,1,1,0.5,0.5,0.5
142,9,test,Give me the birthplace of the actor of Papa wa Newscaster and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorBirthPlace ?entityInJapan WHERE {
  # Find the actor associated with ""Papa wa Newscaster""
  ?actor dbo:role ?role .
  ?role rdfs:label ""Papa wa Newscaster""@en .
  
  # Get the birthplace of this actor
  ?actor dbo:birthPlace ?actorBirthPlace .

  # Find an entity in Japan (region of Japan Standard Time)
  ?entityInJapan a dbo:Place ;
                 dbo:country dbr:Japan .
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
915,20,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident WHERE {
  # Step 1: Identify the director of ""Pipe Dreams"" (1976 film)
  ?film a dbo:Film .
  ?film dbo:title ""Pipe Dreams (1976 film)"" .
  ?film dbo:director ?director .

  # Step 2: Find the birthplace of the director
  ?director dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement
  ?birthPlace a dbo:Settlement .

  # Step 3: Determine the resident of the birthplace
  ?resident dbo:residence ?birthPlace .

  # Step 4: Identify Lizzie Spaulding's parent
  ?lizzieParent a dbo:FictionalCharacter ;
                dbo:soapCharacter true ;
                dbo:parentOf dbr:Lizzie_Spaulding .

  # Step 5: Find the child of this parent
  ?child a dbo:FictionalCharacter ;
         dbo:soapCharacter true ;
         dbo:parent ?lizzieParent .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
328,67,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of the person decedent at Budapest.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?awardee dbo:awardeeOf dbr:Order_of_Suvorov .
  
  ?office a dbo:GovernmentAgency ;
          dbo:leader ?awardee .

  ?politician dbo:officeHolder true ;
              dbo:politician true ;
              dbo:leaderOf dbr:Gustav_Jonson .

  ?force dbo:commander ?decedent ;
         dbo:location dbr:Budapest .
  
  FILTER (?awardee = ?politician)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
30,8,test,Give me the native of Paris and professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Paris .
  
  # Get the profession of Édouard Alphonse James de Rothschild
  ?edouard a dbo:Person ;
           dbo:profession ?profession .

  # Match persons with the same profession and born in Paris
  ?person dbo:profession ?sameProfession .
  FILTER (?sameProfession = ?profession)
}
```",3,3,4,2,2,2,2,9,0,42,1,0.0,0.0,0
547,57,test,Give me the resting place of James Burton (Egyptologist) and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  # James Burton (Egyptologist)
  { 
    ?person a dbo:Person ;
            rdfs:label ""James Burton (Egyptologist)""@en .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Actor from the show with Emily Richard
  {
    ?show dbo:actor ?actor ;
          rdfs:label ?showLabel .
    FILTER(CONTAINS(LCASE(?showLabel), ""emily richard""))
    OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person a dbo:Person ;
            dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }

}
```",6,6,7,3,3,3,3,71,0,1,1,0.0,0.0,0
617,71,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v8 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus II Theos successor who is royalty
  ?successor a dbo:Person ;
             dbo:successor dbr:Antiochus_II_Theos ;
             dbo:royalty true .

  # Child of the successor who is royalty
  ?child a dbo:Person ;
         dbo:child ?successor ;
         dbo:royalty true .

  # Spouse of this royal child
  ?spouse a dbo:Person ;
          dbo:spouse ?child .

  # Commander in Battle of Panium and his child
  ?commander a dbo:Person ;
             dbo:commanderInBattle dbr:Battle_of_Panium .
  ?commandersChild a dbo:Person ;
                   dbo:child ?commander .

  # Parent of the commander's child (should be the spouse)
  ?spouse2 a dbo:Person ;
           dbo:parent ?commandersChild .

  FILTER (?spouse = ?spouse2)
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
747,49,test,Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the person known by the persona ""Shèna""
SELECT ?shenaPerson WHERE {
  ?shenaPerson rdfs:label ""Shèna""@en .
}

# Step 2: Find Pavlo Khudzik's birth date
SELECT ?pavloBirthDate WHERE {
  ?pavlo a dbo:Person ;
         foaf:name ""Pavlo Khudzik"" ;
         dbo:birthDate ?pavloBirthDate .
}

# Step 3: Use Pavlo Khudzik's birth date to find another person born on that date
SELECT ?personBornOnSameDate WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ?date .
  FILTER (?date = ?pavloBirthDate)
}

# Step 4: Determine if either of these individuals is associated with a band
SELECT DISTINCT ?band WHERE {
  { 
    ?shenaPerson dbo:band ?band .
  } UNION {
    ?personBornOnSameDate dbo:band ?band .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
115,9,test,Give me the alma mater of the awardee of National Order of Scientific Merit and alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  # Query for the awardee of National Order of Scientific Merit
  {
    ?person dbo:awardReceived dbr:National_Order_of_Scientific_Merit .
    ?person dbo:almaMater ?almaMater .
  }
  
  UNION
  
  # Query for an alumnus of National University of San Marcos
  {
    ?alumnus dbo:alumniOf dbr:National_University_of_San_Marcos .
    ?alumnus dbo:almaMater ?almaMater .
  }
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
996,20,test,Give me the entity in the award of the native of Palestine (region) and force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Palestine .
  ?person dbo:award ?award .
  ?person dbo:occupation ?occupation .
  
  # Assuming there's a way to link occupation to Lac d'Avoriaz elevation
  ?occupation dbo:elevation dbr:Lac_d%27Avoriaz .

  ?entity dbo:relatedTo ?award .
}
```",6,6,7,3,2,3,2,20,0,0,4,0,0.0,0
820,16,test,Give me the professional in the award of Scott McCloud and child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find the award associated with Scott McCloud
  ?award dbo:recipient dbr:Scott_McCloud .
  
  # Find Jason Schwartzman's parent(s)
  ?parent dbo:child dbr:Jason_Schwartzman .

  # Find siblings of Jason Schwartzman (children of the same parent)
  ?sibling dbo:parent ?parent .
  FILTER (?sibling != dbr:Jason_Schwartzman)

  # Ensure the sibling is a professional in the field related to Scott McCloud's award
  ?sibling a dbo:Person .
  ?sibling dbo:award ?award .

  BIND(?sibling AS ?professional)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
701,35,test,Give me the parent of the child of Nefertari and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nefertari WHERE {
  ?meritamen dbo:parent ?nefertari .
  ?nefertari dbo:spouse ?ramessesII .
  ?ramessesII a dbo:Person .
  ?merneptah dbo:father ?ramessesII .
  FILTER (?nefertari = dbr:Nefertari)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
767,46,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of George K. Nash.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Step 1: Find the writer of ""Where It's At"" (Dustin Lynch album)
  ?album dbo:artist dbr:Dustin_Lynch ;
         dbo:song ?song .
  ?song dbo:lyricist ?writer .

  # Step 2: Find the alma mater of George K. Nash
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Step 3: Link writer to an administrative entity and find a settlement
  ?adminEntity dbo:administrator ?writer ;
               dbo:settlement ?settlement .
  
  # Check if the settlement is linked to the alma mater of George K. Nash
  ?settlement dbo:locatedIn ?almaMater .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,61,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace1 ?restingPlace2 WHERE {
  # Part 1: Resting place of the actor from the show with Emily Richard
  ?show dbo:actor ?actor .
  ?actor dbo:birthName ""Emily Richard""@en .
  OPTIONAL { ?actor dbo:finalRestingPlace ?restingPlace1 . }

  # Part 2: Resting place of the awardee of an award named after Gerald Graham
  ?award a dbo:Award ;
         rdfs:label ?awardLabel .
  FILTER CONTAINS(LCASE(?awardLabel), ""gerald graham"") .
  ?recipient dbo:recipientOfAward ?award .
  OPTIONAL { ?recipient dbo:finalRestingPlace ?restingPlace2 . }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
54,67,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thado Minsaw of Prome's parent
  ?thadoMinsawParent a dbo:Person ;
                     dbo:child dbr:Thado_Minsaw_of_Prome .

  # Child of Thado Minsaw of Prome's parent (i.e., grandchild)
  ?grandchild a dbo:Person ;
             dbo:parent ?thadoMinsawParent .

  # Thinkhaya of Pagan
  ?thinkhaya a dbo:Person ;
             dbr:Thinkhaya_of_Pagan .

  # Predecessor who is the parent of the grandchild and child of Thinkhaya
  ?predecessor a dbo:Person, dbo:Royalty ;
              dbo:officeHolder true ;  # Assuming office holder can be identified this way
              dbo:parent ?grandchild ;
              dbo:child ?thinkhaya .

  # Ensure predecessor is also the parent of Thihapate's child (if applicable)
  ?thihapateChild a dbo:Person ;
                  dbo:parent dbr:Thihapate_of_Mohnyin .
  OPTIONAL { ?predecessor dbo:parent ?thihapateChild }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,24,test,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Find members of Don Dokken's band
  ?band a dbo:Band ;
        dbo:bandMember ?member .
  
  FILTER (STRSTARTS(STR(?band), ""http://dbpedia.org/resource/Don_Dokken""))

  # Find associated musical artists for each member
  ?member dbo:musicalArtist ?associatedArtist .

  # Ensure the associated artist is a band, group, and organization related to Meshuggah
  ?associatedArtist a dbo:Band ;
                   dbo:bandMember ?meshuggahMember .
  
  FILTER (STRSTARTS(STR(?associatedArtist), ""http://dbpedia.org/resource/"") &&
          EXISTS { ?associatedArtist dbo:type dbr:Musical_group } &&
          EXISTS { ?associatedArtist dbo:type dbr:Organization } &&
          STRSTARTS(STR(?meshuggahMember), ""http://dbpedia.org/resource/Meshuggah""))

}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,56,test,"Give me the actor of Dog Soldiers (film) and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find actor of ""Dog Soldiers""
  ?film a dbo:Film ;
        rdfs:label ""Dog Soldiers""@en .
  
  ?film dbo:starring ?actor .

  # Step 2: Identify John Pertwee and his children
  ?pertwee a dbo:Person ;
           foaf:name ""John Devon Roland Pertwee"" ;
           dbo:birthName ""John Devon Roland Pertwee"" .
  
  ?child dbo:parent ?pertwee ;
         a dbo:Person .

  # Step 3: Identify French politician native to British settlement
  ?politician a dbo:Politician, dbo:OfficeHolder ;
              dbo:nationality dbr:France ;
              dbo:birthPlace ?settlement .
  
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom .

  # Step 4: Combine information
  FILTER (?actor = ?child)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
547,47,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlaceActor ?restingPlaceChild WHERE {
  # Part 1: Resting place of the actor from the show with Emily Richard
  ?show dbo:starring dbr:Emily_Richard .
  ?actor dbo:actedIn ?show ;
         a dbo:Person ;
         dbo:deathPlace ?restingPlaceActor .

  # Part 2: Resting place of the child of James Burton (property developer)
  ?james a dbo:Person ;
         foaf:name ""James Burton"" ;
         dbo:occupation dbr:Property_developer .
  ?child dbo:parent ?james ;
         a dbo:Person ;
         dbo:deathPlace ?restingPlaceChild .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,66,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName (GROUP_CONCAT(DISTINCT ?fatherParty; separator="", "") AS ?fatherParty) 
       ?prodiBirthName ?prodiParty WHERE {
  # Italian People's Party (1994)
  OPTIONAL { 
    ?party a dbo:PoliticalParty ;
           rdfs:label ""Italian People's Party""@en .
    BIND(?party AS ?italianPeopleParty)
  }
  
  # Father of Lamberto Andreotti
  ?lamberto dbr:Lamberto_Andreotti ;
            dbo:child ?father .
  OPTIONAL {
    ?father dbo:member ?fatherParty .
  }

  # Romano Prodi's birth name and political party
  ?prodi a dbo:Person ;
         foaf:name ?prodiBirthName ;
         rdfs:label ""Romano Prodi""@en .
  OPTIONAL {
    ?prodi dbo:member ?prodiParty .
  }
  
  # Bind the Italian People's Party label to a variable for output
  BIND(IF(BOUND(?italianPeopleParty), STR(?italianPeopleParty), """") AS ?partyName)
}
GROUP BY ?partyName ?prodiBirthName ?prodiParty
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
184,51,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonAncestor WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            dbo:birthDate ?dateMargaret .
  FILTER (YEAR(?dateMargaret) = 1925)

  # Parent of Archduchess Margaret
  ?parent1 dbo:child ?margaret .

  # Child of the parent of Archduchess Margaret
  ?grandchild1 dbo:parent ?parent1 .

  # Archduke Joseph Karl of Austria
  ?joseph a dbo:Person ;
          dbr:Joseph_Karl_of_Austria .

  # Child of Archduke Joseph Karl
  ?child2 dbo:parent ?joseph .

  # Grandchild of Archduke Joseph Karl
  ?grandchild2 dbo:parent ?child2 .

  # Find the common ancestor (parent of grandchild1 and grandchild2)
  ?commonAncestor dbo:child ?grandchild1 .
  ?commonAncestor dbo:child ?grandchild2 .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
547,50,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person1 ?restingPlace1 ?person2 ?restingPlace2 WHERE {
  # Part 1: Awardee of Knight Grand Cross of the Order of St Michael and St George
  ?person1 a dbo:Person .
  ?person1 dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  OPTIONAL { ?person1 dbo:finalRestingPlace ?restingPlace1 . }

  # Part 2: Actor from the show with Emily Richard (""Keeping Up Appearances"")
  ?show a dbo:TVSeries ;
        dbo:actor ?person2 .
  FILTER (str(?show) = ""http://dbpedia.org/resource/Keeping_Up_Appearances_(TV_series)"")
  OPTIONAL { ?person2 dbo:finalRestingPlace ?restingPlace2 . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
528,71,test,"Give me the war of the commander in the work of --01-09 and war of the military force of the entity, that is a societal event, in Chile and force of the person born as the birth name of Narciso Campero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v8 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war1 ?war2 WHERE {
  # Find wars involving a commander related to an event on January 9th
  ?event a dbo:SocietalEvent ;
         dbo:date ""2000-01-09""^^xsd:date .
  
  ?commander dbo:commandedMilitaryUnit ?unit ;
             dbo:commanderOf ?war1 .

  # Find wars involving military forces in Chile related to societal events
  ?societalEvent a dbo:SocietalEvent ;
                 dbo:location dbr:Chile .
  
  ?militaryForce dbo:militaryForceOf ?war2 ;
                 dbo:participatedIn ?societalEvent .

  # Find the military force of Narciso Campero
  ?person dbr:Narciso_Campero ;
          dbo:birthName ""Narciso Campero"" .
  
  ?person dbo:militaryForce ?militaryForce .
}
```",9,10,10,3,3,3,3,71,0,0,2,0,0.0,0
528,67,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09 and war of Irene Morales.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war WHERE {
  # Find Narciso Campero by birth name and his associated force
  ?person a dbo:Person ;
          rdfs:label ""Narciso Campero""@en ;
          dbo:birthName ?name .
  FILTER (CONTAINS(LCASE(?name), LCASE(""narciso campero"")))

  # Find the force or role related to Narciso Campero
  OPTIONAL { ?person dbo:commanderOf ?force . }

  # Find Irene Morales and her participation in a war on a specific date
  ?irene a dbo:Person ;
         rdfs:label ""Irene Morales""@en .
  
  ?event dbo:date ?date ;
         dbo:participatedIn ?war .

  FILTER (CONTAINS(LCASE(?event), LCASE(""war"")) && 
          STRSTARTS(STR(?date), ""20--01-09""))

  # Link the war involving Irene Morales to Narciso Campero's force
  OPTIONAL { ?force dbo:participatedIn ?war . }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
994,20,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Associated Musical Artist of S.A. Slayer
SELECT DISTINCT ?artist WHERE {
  VALUES ?slayer { dbr:S_A_Slayer }
  ?slayer a dbo:Person .
  ?slayer dbo:associatedMusicalArtist ?artist .
}

UNION

# Part 2: Associated Musical Artist of a Band Member of Meshuggah that is also a band and an organisation
SELECT DISTINCT ?artist WHERE {
  VALUES ?meshuggah { dbr:Meshuggah }
  ?member dbo:member ?meshuggah ;
          dbo:associatedMusicalArtist ?artist .
  ?band a dbo:Band, dbo:Organisation .
  ?member dbo:member ?band .
}
```",3,6,4,2,2,3,3,71,0,0,2,0,0.0,0
626,19,test,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify Alexander I of Russia
  dbr:Alexander_I_of_Russia a dbo:Person .

  # Find the military conflict (Battle of Borodino)
  dbr:Battle_of_Borodino a dbo:MilitaryConflict .

  # Link Alexander I as commander in the Battle of Borodino
  ?commander dbo:commanderOf ?battle .
  ?battle rdfs:label ""Battle of Borodino""@en .

  # Ensure the commander is Alexander I
  FILTER (?commander = dbr:Alexander_I_of_Russia)

  # Check if Alexander I received an award related to the Battle of Borodino
  OPTIONAL {
    ?award dbo:recipient ?recipient .
    ?recipient rdfs:label ""Alexander I""@en .
    ?battle dbo:relatedEvent ?award .
  }
}
```",5,6,6,3,2,3,2,20,0,0,44,0,0.0,0
485,28,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region1 ?birthPlaceAwardee ?country WHERE {
  # Joseph Whitaker's birth place that is a region
  dbr:Joseph_Whitaker (dbo:birthPlace) ?region1 .
  FILTER EXISTS { ?region1 a dbo:Region . }

  # Eric Gregory Award awardee who is a writer and poet, and their birth place
  ?awardee dbo:award dbr:Eric_Gregory_Award ;
          a dbo:Writer , dbo:Poet ;
          dbo:birthPlace ?birthPlaceAwardee .

  # Country associated with Western European Time
  dbr:Western_European_Time dbo:country ?country .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
92,53,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?furneyBand WHERE {
  # Step 1: Identify the band associated with ""Nevermore (2006 film)""
  VALUES ?film { dbr:Nevermore_(2006_film) }
  
  ?film dbo:subject ?band .
  
  # Step 2: Find band members who are artists
  ?member dbo:member ?band ;
          a dbo:Artist .

  BIND(?member AS ?bandMember)

  # Step 3: Identify Jim Sheppard's associated musical artist
  dbr:Jim_Sheppard dbo:associatedMusicalArtist ?associatedArtist .
  
  # Step 4: Determine Joseph Michael Furney's band
  {
    SELECT ?person WHERE {
      ?person a dbo:Person ;
              foaf:name ""Joseph Michael Furney""^^xsd:string .
      ?person dbo:birthDate ?date .
      FILTER (YEAR(?date) = 1969 && MONTH(?date) = 11 && DAY(?date) = 1)
    }
    
    ?person dbo:member ?furneyBand .
  }

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
626,20,test,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814) and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonCommander WHERE {
  # Commander in Battle of Paris (1814)
  ?battleParis a dbo:MilitaryConflict ;
               dbo:commander ?parisCommander .
  FILTER(STR(?battleParis) = ""Battle_of_Paris_(1814)"") .

  # Awardee from the Battle of Borodino
  ?battleBorodino a dbo:MilitaryConflict ;
                  dbo:awardeeOf ?borodinoAwardee .
  FILTER(STR(?battleBorodino) = ""Battle_of_Borodino"") .

  # Common Commander
  ?parisCommander = ?commonCommander .
  ?borodinoAwardee = ?commonCommander .
}
```",6,7,7,3,2,3,2,20,0,0,62,0,0.0,0
767,48,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?alterEgo ?settlement WHERE {
  # Find the writer of ""Where It's At"" by Dustin Lynch
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ""Where It's At""@en .

  # Find Black Hood's alter ego
  ?blackHood dbo:alterEgo ?alterEgo .
  ?blackHood rdfs:label ""Black Hood""@en .

  # Find an entity in administration that is a settlement
  ?settlement a dbo:Settlement ;
              dbo:partOf ?administrationEntity .

  # Link the writer to the alter ego and the settlement
  ?writer dbo:associatedWith ?alterEgo .
  ?writer dbo:residence ?settlement .
}
```",5,6,6,3,2,3,3,71,0,0,8,0,0.0,0
54,56,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi a dbo:Person ;
                   dbo:parent ?fatherOfSoeMinWimalaDewi .

  # Find the child of this father who is also the parent of Thado Minsaw of Prome
  ?childOfFather a dbo:Person ;
                dbo:parent ?fatherOfSoeMinWimalaDewi ;
                dbo:child ?thadoMinsawOfProme .

  # Ensure this person is an office holder and royalty
  ?childOfFather a dbo:Royalty, dbo:OfficeHolder .

  # Find the predecessor of this person
  ?predecessor dbo:successor ?childOfFather .
}
```",6,8,7,3,3,3,3,71,1,696,0,0.0014347202295552368,1.0,0.0028653295128939827
747,70,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?band2 ?band3 WHERE {
  # Find the band of the person associated with Shèna
  ?person1 foaf:name ""Shèna""@en .
  ?person1 dbo:band ?band1 .

  # Find Pavlo Khudzik's birth date and related band
  ?person2 foaf:name ""Pavlo Khudzik""@en .
  ?person2 dbo:birthDate ?date .
  ?person2 dbo:band ?band2 .

  # Find a song by Amba Shepherd and its associated band
  ?work dbo:writer dbr:Amba_Shepherd ;
        rdf:type dbo:Song .
  ?work dbo:band ?band3 .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,57,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Identify the work ""40 Dayz & 40 Nightz""
  dbr:40_Dayz_&_40_Nightz a dbo:Song ;
                          dbo:work ?work .

  # Find the producer of this work
  ?work dbo:producer ?producer .
  
  # Ensure the producer is a musical artist
  ?producer a dbo:MusicalArtist .

  # The producer should be associated with a rapper who is also a writer and an artist
  ?rapper a dbo:MusicalArtist ;
          dbo:associatedBandMember ?producer ;
          dbo:occupation dbr:Rapper .
  
  ?writer a dbo:Writer, dbo:Artist ;
          dbo:profession ?rapper .
}
```",6,12,7,3,3,3,3,71,0,0,8,0,0.0,0
528,47,test,Give me the war of the commander in the work of --01-09 and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander1 ?commander2 WHERE {
  # Find the commander of the work associated with --01-09
  ?work dbo:author ?person .
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = -01 && MONTH(?date) = 09)
  BIND(?person AS ?commander1)

  # Find the commander of the Battle of Pisagua
  dbr:Battle_of_Pisagua dbo:commander ?battleCommander .
  ?battleCommander a dbo:Person .
  BIND(?battleCommander AS ?commander2)
}
```",5,5,6,3,2,3,3,71,0,0,8,0,0.0,0
617,59,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse WHERE {
  # Find Antiochus II Theos and his successor who is royalty
  ?antiochus2Theos dbo:successor ?successor .
  FILTER (rdf:type(?successor, dbo:Monarch)) .

  # Find the child of this successor who is also royalty
  ?successorChild dbo:child ?royalChild .
  FILTER (rdf:type(?royalChild, dbo:Monarch)) .

  # Find Antiochus (son of Antiochus III) and his successor who is royalty
  ?antiochusIII dbo:child ?antiochus .
  ?antiochus dbo:successor ?anotherSuccessor .
  FILTER (rdf:type(?anotherSuccessor, dbo:Monarch)) .

  # Find the child of this another successor who is also royalty
  ?anotherSuccessorChild dbo:child ?royalGrandchild .
  FILTER (rdf:type(?royalGrandchild, dbo:Monarch)) .

  # Ensure the royal child and royal grandchild are related as described
  ?royalChild dbo:child ?royalGrandchild .

  # Find the spouse of the child of this royal grandchild
  ?royalGrandchildChild dbo:child ?targetPerson .
  ?targetPerson dbo:spouse ?spouse .
}
```",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
659,54,test,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit ?commander WHERE {
  # Arthur Wellesley, 1st Duke of Wellington
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington a dbo:Person ;
    dbo:commanderInMilitaryConflict ?conflict .

  # Napoleonic Wars as the military conflict
  ?conflict a dbo:MilitaryConflict ;
    rdfs:label ""Napoleonic Wars""@en .

  # Polish Horse as a military unit
  ?militaryUnit a dbo:MilitaryUnit ;
    rdfs:label ""Polish Horse""@en ;
    dbo:commander ?commander ;
    dbo:participatedIn ?conflict .
}
```",6,10,7,3,3,3,3,71,0,0,13,0,0.0,0
767,53,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find the writer of the album ""Where It's At""
  ?album dbo:lyricsBy ?writer .
  FILTER (str(?album) = ""Dustin_Lynch_album_Where_It's_At"")

  # Find Carl L. Nippert's alma mater
  dbr:C_L_Nippert dbo:almaMater ?almaMater .

  # Find the alter ego of Black Hood
  dbr:Black_Hood dbo:alterEgo ?alterEgo .

  # Ensure the entity is in administration and a settlement
  ?entity dbo:partOfAdministrativeTerritory ?admin .
  ?entity a dbo:Settlement .

  # Link all entities together
  FILTER (?writer = ?almaMater && ?almaMater = ?alterEgo)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
435,24,test,Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?region WHERE {
  # Find works by the author of ""Iceland""
  VALUES ?author { dbr:Halldór_Laxness }
  ?work dbo:author ?author .
  
  # Find time zone region for Bombali Shebora Chiefdom
  OPTIONAL {
    dbr:Bombali_Shebora_Chowchiefdom dbp:timeZone ?tz .
    ?tz dbo:region ?region .
  }
}
```",4,4,5,2,2,2,3,28,0,3,1,0.0,0.0,0
659,64,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander a dbo:Person .
  
  # Commander in military force related to Kingdom of Ireland
  ?officeHolder dbo:officeHolderOfCountry dbr:Kingdom_of_Ireland ;
               dbo:officeHolder ?commander .

  # Commander in Battle of Leipzig
  ?battleEvent dbo:militaryConflict dbr:Battle_of_Leipzig ;
               dbo:commanderOfMilitaryForce ?commander .
  
  # Connection to Rutger Jan Schimmelpenninck
  ?schimmelpenninck a dbo:Person ;
                    rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  OPTIONAL { ?commander dbo:spouse ?schimmelpenninck . }
  OPTIONAL { ?commander dbo:colleague ?schimmelpenninck . }
}
```",7,11,8,3,3,3,3,71,0,0,6,0,0.0,0
959,64,test,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Person is native of Japan
  ?person dbo:nationality dbr:Japan .

  # Alma mater conditions
  ?almaMater a dbo:University ;
             dbo:country dbr:Japan .
  ?person dbo:almaMater ?almaMater .

  # Birth year condition
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1958)

  # Managerial role in the 1998 Kashima Antlers season
  ?managerRole a dbo:SportsManager ;
               dbo:team dbr:Kashima_Antlers_1998_season ;
               dbo:person ?person .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
184,66,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            dbo:birthDate ?dateMargaret .
  FILTER (YEAR(?dateMargaret) = 1925)

  ?parent1 dbo:child ?margaret .
  ?grandchild1 dbo:child ?parent1 .

  ?commonParent dbo:child ?grandchild1 .

  # Archduke Joseph Karl of Austria
  ?josephKarl a dbo:Person ;
              dbr:Archduke_Joseph_Karl_of_Austria .

  ?child2 dbo:child ?josephKarl .
  ?grandchild2 dbo:child ?child2 .

  ?nativeBudapest dbo:nativeOf dbr:Budapest ;
                  dbo:child ?grandchild2 .

  ?parent2 dbo:child ?nativeBudapest .

  FILTER (?commonParent = ?parent2)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
92,40,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of Joseph Michael.",SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find the associated musical artist of Nevermore (2006 film)
  dbr:Nevermore_(film)_2006 dbo:musicalArtist ?artist .
  
  # Find Jim Sheppard's band
  dbr:Jim_Sheppard dbo:member ?sheppardBand .
  
  # Find Joseph Michael's band
  dbr:Joseph_Michael dbo:member ?michaelBand .

  # Check if there is a common member who is an artist in these bands
  ?bandMember dbo:member ?artist .
  ?bandMember dbo:member ?sheppardBand .
  ?bandMember dbo:member ?michaelBand .
  
  FILTER (?bandMember != ?artist && ?bandMember != ?sheppardBand && ?bandMember != ?michaelBand)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,66,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the sports manager of the 1998 Kashima Antlers season
  ?team a dbo:SoccerTeam ;
        dbo:sportsManager ?sportsManager .
  
  FILTER (STRSTARTS(STR(?team), ""Kashima_Antlers_1998""))

  # Find the manager of that team
  ?team dbo:manager ?manager .

  # Ensure the manager is also a sports manager
  ?manager a dbo:SportsManager .

  # Find Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  # Filter universities that are Japanese organizations and educational institutions
  ?university a dbo:University ;
              dbo:nationality dbr:Japan .

  # Ensure the manager attended this university
  ?manager dbo:almaMater ?university .

  # Find Yōichi Masuzoe's country of residence
  dbr:Yōichi_Masuzoe dbo:nationality ?country .

  # Ensure the manager is from the same country as Yōichi Masuzoe
  ?manager dbo:nationality ?country .
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
427,27,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?birthName WHERE {
  dbr:Romano_Prodi a dbo:Politician ;
                   a dbo:OfficeHolder ;
                   dbo:birthName ?birthName .
  OPTIONAL { dbr:Romano_Prodi dbo:partyAffiliation ?party . }
}
```",3,5,4,3,1,3,3,71,0,1,7,0.0,0.0,0
492,57,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Death at the capital of Algeria (Algiers)
  ?deathPlace1 dbo:country dbr:Algeria ;
              rdfs:label ""Algiers""@en .
  ?person dbo:deathPlace ?deathPlace1 .

  # Death in French Algeria
  ?deathPlace2 dbo:country dbr:French_Algeria ;
               rdfs:label ""French Algeria""@en .
  ?person dbo:deathPlace ?deathPlace2 .

  # Commander in a war that includes the Battle of Verdun
  ?war dbo:militaryConflict dbr:Battle_of_Verdun .
  ?person dbo:commanderIn ?war .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,17,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonReference WHERE {
  # Richeza of Poland's father and his parent (grandfather)
  ?richeza a dbo:Person ;
           foaf:name ""Richeza of Poland""@en .
  ?richeza dbo:childOf ?father .
  ?father a dbo:Monarch ;  # Ensure the father is royalty
          dbo:parent ?grandfather .

  # Doubravka of Bohemia's child who is royalty
  ?doubravka a dbo:Person ;
             foaf:name ""Doubravka of Bohemia""@en .
  ?doubravka dbo:childOf+ ?royalChild .
  ?royalChild a dbo:Monarch ;  # Ensure the child is royalty

  # Common reference between grandfather and royal child
  ?grandfather = ?commonReference ;
                a dbo:Monarch .
  ?royalChild = ?commonReference ;
               a dbo:Monarch .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
54,63,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Narapati I of Ava's child
  ?narapatiChild dbo:childOf dbr:Narapati_I_of_Ava .
  
  # Thinkhaya of Pagan's child and predecessor
  ?thinkhayaChild dbo:childOf dbr:Thinkhaya_of_Pagan .
  ?predecessor dbo:predecessor ?thinkhayaChild .

  # Thihapate of Mohnyin's office holder and royalty
  ?thihapateOfficeHolder dbo:officeHolderOf dbr:Thihapate_of_Mohnyin ;
                        a dbo:OfficeHolder, dbo:Royalty .
  
  # Find the parent of Narapati I's child who is also related to Thinkhaya's predecessor
  ?parent dbo:child ?narapatiChild .
  ?parent dbo:child ?predecessor .

  # Ensure the person is an office holder and royalty
  ?parent a dbo:OfficeHolder, dbo:Royalty .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,53,test,"Give me the band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandAmba ?bandTracey ?personDecedent WHERE {
  # Find the band of Amba Shepherd
  ?amba a dbo:Person ;
        foaf:name ""Amba Shepherd"" .
  ?amba dbo:memberOfBand ?bandAmba .

  # Find the band of Tracey Elizabeth McSween
  ?tracey a dbo:Person ;
          foaf:name ""Tracey Elizabeth McSween"" .
  ?tracey dbo:memberOfBand ?bandTracey .

  # Find the person who is an athlete, soccer player, born at Zolotonosha with a specific birth date
  ?decedent a dbo:SoccerPlayer ;
            dbo:sport dbr:Soccer ;
            dbo:placeOfBirth dbr:Zolotonosha ;
            dbo:birthDate ?date .
  
  # Assuming we need to find the person born on the same date as the decedent
  ?personDecedent a dbo:Person ;
                  dbo:birthDate ?sameDate .
  FILTER (?sameDate = ?date)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
16,41,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  # Find Satomi Ishihara's profession
  dbr:Satomi_Ishihara a dbo:Person ;
                      dbo:profession ?profession .

  # Identify Ted Martin McGinley by birth name
  ?ted a dbo:Person ;
       foaf:name ""Ted Martin McGinley""@en .
  
  # Identify Georgeanne Marie Rice by birth name
  ?georgeanne a dbo:Person ;
              foaf:name ""Georgeanne Marie Rice""@en .

  # Find the spouse of Ted Martin McGinley
  ?ted dbo:spouse ?commonSpouse .

  # Ensure the same person is also the spouse of Georgeanne Marie Rice
  ?georgeanne dbo:spouse ?commonSpouse .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
404,40,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914) and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Princess Victoria Louise of Prussia and her spouse
  dbr:Princess_Victoria_Louise_of_Prussia a dbo:Person ;
    dbo:birthName ?birthName ;
    dbo:spouse ?spouse .

  # Ensure the spouse is royalty
  ?spouse a dbo:Monarch .

  # Confirm familial connections
  ?spouse dbo:child dbr:Prince_Ernest_Augustus_of_Hanover_(1914) .
  dbr:Ernest_Augustus,_Crown_Prince_of_Hanover dbo:child ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
92,55,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Find Joe Duplantier's band
  ?duplantier a dbo:Person ;
              foaf:name ""Joe Duplantier""@en ;
              dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1971 && MONTH(?date) = 5 && DAY(?date) = 26)
  
  # Find the band associated with Joe Duplantier
  ?duplantier dbo:memberOfBand ?band .
  ?band foaf:name ""Gojira""@en .

  # Find Jim Sheppard's associated musical artist
  ?sheppard a dbo:Person ;
            foaf:name ""Jim Sheppard""@en .
  ?sheppard dbo:associatedMusicalArtist ?associatedArtist .

  # Confirm Nevermore as a band and find its members
  ?nevermore a dbo:Band ;
             foaf:name ""Nevermore""@en .
  ?member dbo:memberOfBand ?nevermore ;
          foaf:name ?name .
  
  FILTER EXISTS { ?member foaf:name ""Warrel Dane""@en . }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
488,52,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace ?administration WHERE {
  # Saitō Hajime's birth place related to a military conflict
  ?saitoHajime a dbo:Person ;
               foaf:name ""Saitō Hajime""@en ;
               dbo:birthPlace ?birthPlace .
  
  ?militaryConflict a dbo:MilitaryConflict ;
                    dbo:eventType ?eventType1, ?eventType2, ?eventType3 .
  FILTER (?eventType1 = dbo:Event && ?eventType2 = dbo:SocietalEvent)
  
  # Yūki Hideyasu's father's death place
  ?yukiHideyasu a dbo:Person ;
                foaf:name ""Yūki Hideyasu""@en ;
                dbo:father ?father .
  
  ?father a dbo:Politician ;
          dbo:deathPlace ?deathPlace .

  # Emperor Go-Yōzei's administration
  ?emperorGoYozei a dbo:Person ;
                  foaf:name ""Emperor Go-Yōzei""@en ;
                  dbo:administration ?administration .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
404,63,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Find the person with the birth name of Princess Victoria Louise of Prussia
  ?person dbo:birthName ""Victoria Louise"" .
  
  # Ensure this person is royalty
  ?person rdfs:label ?label .
  FILTER regex(?label, ""royalty"", ""i"") .

  # This person has a child who is royalty and whose father is Ernest Augustus, Duke of Brunswick
  ?child dbo:parent ?person ;
         dbo:father dbr:Ernest_Augustus,_Duke_of_Brunswick .
  
  # Ensure the child is royalty
  ?child rdfs:label ?childLabel .
  FILTER regex(?childLabel, ""royalty"", ""i"") .

  # Find the spouse of this person
  ?person dbo:spouse ?spouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
404,34,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""Princess Victoria Louise of Prussia""@en ;
          dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  
  FILTER EXISTS { ?person dbo:royalty . } # Assuming there's a property indicating royalty

  ?person dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,51,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Find Yōichi Masuzoe's residence which is a country
  ?yMasuzoe a dbo:Person ;
            foaf:name ""Yōichi Masuzoe"" ;
            dbo:residence ?residence .
  
  ?residence a dbo:Country .

  # Find the manager of the 1998 Kashima Antlers season
  ?kashimaAntlers dbr:Kashima_Antlers_season_1998/manager ?manager .
  ?manager a dbo:SportsManager ;
           dbo:nationality ?nativeCountry .
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
617,65,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find the child of Antiochus (son of Antiochus III the Great)
  ?child1 dbo:childOf dbr:Antiochus_III_the_Great .
  
  # Find the parent of this child
  ?parent dbo:parentOf ?child1 .

  # Find the child of Seleucus II Callinicus who is royalty
  ?child2 dbo:childOf dbr:Seleucus_II_Callinicus .
  ?child2 a dbo:Royalty .

  # Find the successor of Antiochus (son of Antiochus III the Great)
  ?successor dbo:successorOf dbr:Antiochus_IV_Epiphanes .

  # Find the child of this successor who is royalty
  ?child3 dbo:childOf ?successor .
  ?child3 a dbo:Royalty .

  # Find the spouse of this royal child
  ?spouse dbo:spouse ?child3 .

  # Ensure the parent found earlier matches the conditions
  FILTER (?parent = ?spouse)
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
767,51,test,"Give me the alma mater of the administration of George K. Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?alterEgo WHERE {
  # Part 1: Alma Mater of George K. Nash
  ?nash a dbo:Person ;
        foaf:name ""George K. Nash"" ;
        dbo:almaMater ?almaMater .

  # Part 2: Alter ego (fictional character) associated with Matthew Burland
  ?burland a dbo:Writer ;
           foaf:name ""Matthew Burland"" .
  ?work dbo:author ?burland ;
        dbo:title ?alterEgo .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
617,16,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Boleslaus I, Duke of Bohemia and his child who is royalty
  ?boleslaus a dbo:Person ;
             rdfs:label ""Boleslaus I, Duke of Bohemia""@en .
  
  ?child dbo:parent ?boleslaus ;
         a dbo:Royalty .

  # Child of the royal child (grandchild)
  ?grandchild dbo:parent ?child .

  # Richeza of Poland, Queen of Hungary and her father
  ?richeza a dbo:Person ;
           rdfs:label ""Richeza of Poland, Queen of Hungary""@en .
  
  ?father dbo:parent ?richeza .

  # Parent's parent (grandparent)
  ?grandparent dbo:parent ?father .

  # Match the grandchild with the grandparent
  FILTER (?grandchild = ?grandparent)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
16,35,test,Give me the spouse of the person born as Ted Martin McGinley and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonSpouse WHERE {
  # Find Ted Martin McGinley by birth name
  ?ted a dbo:Person ;
       rdfs:label ""Ted Martin McGinley""@en .
  
  # Find Gigi Rice by birth name
  ?gigi a dbo:Person ;
        rdfs:label ""Gigi Rice""@en .

  # Get spouses of Ted Martin McGinley
  ?ted dbo:spouse ?spouse1 .

  # Get spouses of Gigi Rice
  ?gigi dbo:spouse ?commonSpouse .

  FILTER (?spouse1 = ?commonSpouse)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
959,65,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Takashi Sekizuka's team manager
  ?teamManager a dbo:Person .
  ?teamManager dbo:managerOfTeam ?team .
  ?team dbo:member ?takashiSekizuka .
  dbr:Takashi_Sekizuka ?takashiSekizuka .

  # Eiji Ōtsuka's alma mater
  ?eijiOotsuka a dbo:Person .
  ?eijiOotsuka dbo:almaMater ?university .
  ?university a dbo:University ;
              dbo:country dbr:Japan ;
              rdf:type dbo:EducationalInstitution .

  # Leader of the 2010 Japanese House of Councillors election
  ?leader a dbo:Politician .
  ?leader dbo:nativeCountry ?country .
  ?country rdfs:label ""Japan""@en .
  
  # Connect Eiji Ōtsuka's alma mater with Takashi Sekizuka's manager
  ?university dbo:member ?manager .

  # Ensure the manager is also a member of the leader's country
  ?leader dbo:nativeCountry ?country .
  ?manager dbo:nationality ?country .
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
378,50,test,"Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?conflict WHERE {
  VALUES ?person { dbr:Arthur_Wellesley }
  
  # Find conflicts involving Arthur Wellesley
  ?conflict dbo:commander ?person .
  
  # Get the claim to fame for each conflict
  OPTIONAL { ?conflict dbo:claimToFame ?fame . }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,57,test,"Give me the commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander1813 ?commanderWar WHERE {
  # Find the military force of Rutger Jan Schimmelpenninck
  ?event a dbo:MilitaryConflict ;
         dbo:participatingMilitaryForce ?force .
  
  ?schimmelpenninck dbo:associatedWith ?event ;
                    rdfs:label ""Rutger Jan Schimmelpenninck""@en .

  # Find the 'Polish Horse' military unit or organization
  ?polishHorse a dbo:MilitaryUnit, dbo:Organization ;
               rdfs:label ""Polish Horse""@en .
  
  # Identify the commander in the German campaign of 1813
  ?campaign dbr:German_Armistice_of_Preliminaries_of_Mainz ;
            dbo:commander ?commander1813 .

  # Identify the war involving 'Polish Horse'
  ?war dbo:participatingMilitaryUnitOrOrganization ?polishHorse ;
       dbo:commander ?commanderWar .
}
```",6,13,7,3,3,3,3,71,0,0,7,0,0.0,0
767,23,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration WHERE {
  # Find the album ""Where It's At"" by Dustin Lynch
  ?album dbo:title ""Where It's At"" ;
         dbo:artist dbr:Dustin_Lynch .

  # Identify writers of the album
  ?album dbo:writer ?writer .
  
  # Check if the writer is involved in an administration that is a settlement
  ?administration dbo:administrator ?writer ;
                  a dbo:Settlement .
}
```",3,4,4,3,1,3,3,71,0,0,66,0,0.0,0
492,25,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Ensure the person died in Algiers, which is the capital of Algeria and a settlement
  ?deathPlace a dbo:City ;
              rdfs:label ""Algiers""@en ;
              dbo:country dbr:Algeria ;
              dbo:settlement true .
  ?person dbo:deathPlace ?deathPlace .

  # Identify if the person was a commander in the Franco-Hova Wars
  OPTIONAL {
    ?person dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""commander"") && CONTAINS(LCASE(?occupation), ""franco-hova wars""))
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
294,23,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalRestingPlace WHERE {
  ?person a dbo:Person ;
          dbo:award dbr:Distinguished_Service_Medal_(U.S._Army) ;
          dbo:birthPlace ?settlement .
  
  ?marionJames dbo:birthPlace ?settlement .

  FILTER EXISTS { ?person dbo:occupation dbr:Politician }

  ?person dbo:finalRestingPlace ?finalRestingPlace .

  ?marionJames a dbo:Settlement .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
77,19,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of the awardee of Golden Weapon for Bravery.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?mayor a dbo:Person ;
         dbo:officeHolder ?office .
  ?office dbo:location dbr:Warsaw ;
          dbo:position ""Mayor"" .
  
  ?awardRecipient a dbo:Person ;
                 dbo:award dbr:Golden_Weapon_for_Bravery .
  ?militaryConflict a dbo:MilitaryConflict ;
                   dbo:participant ?awardRecipient .

  ?force dbo:commander ?mayor .
}
```",5,6,6,3,2,3,2,20,0,0,14,0,0.0,0
184,22,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Find children of Archduke Joseph Francis of Austria and their parent (spouse)
  {
    ?child dbo:childOf dbr:Archduke_Joseph_Francis_of_Austria .
    ?child dbo:parent ?parent .
  }
  
  UNION
  
  # Find children of Géza von Habsburg and their parent (spouse)
  {
    ?child dbo:childOf dbr:Géza_von_Habsburg .
    ?child dbo:parent ?parent .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
303,23,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderParty ?arnulfoAriasParty WHERE {
  # Part 1: Party of the commander in United States invasion of Panama
  OPTIONAL {
    ?noriega a dbo:Person ;
            rdfs:label ""Manuel Noriega""@en .
    ?noriega dbo:politicalAffiliation ?commanderParty .
  }

  # Part 2: Party of Arnulfo Arias Madrid
  ?arnulfoArias a dbo:Person ;
                rdfs:label ""Arnulfo Arias Madrid""@en ;
                dbo:birthDate ?birthDate .
  ?arnulfoArias dbo:politicalAffiliation ?arnulfoAriasParty .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,58,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Find the awardee of the Royal Medal who is also a figure known by a nickname
  ?person dbo:honoraryTitle dbr:Royal_Medal .
  ?person rdfs:label ?nickname .
  
  # Ensure this person is associated with an organization or educational institution in Northern Ireland
  ?organization dbp:country dbr:Northern_Ireland ;
                rdfs:label ?nickname .

  # Find John Alderdice's alma mater
  dbr:John_Alderdice dbo:almaMater ?johnAlmaMater .
  
  # The awardee's alma mater should be the same as John Alderdice's
  ?person dbo:almaMater ?almaMater .
  FILTER (?almaMater = ?johnAlmaMater)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,48,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?heatherMilitaryUnit ?jonathonAwardWar WHERE {
  # Heather Roy's military unit
  ?heather a dbo:Person ;
           rdfs:label ""Heather Roy""@en .
  ?heather dbo:militaryUnit ?heatherMilitaryUnit .

  # Jonathon Band's award and associated war
  ?jonathon a dbo:Person ;
            rdfs:label ""Jonathon Band""@en .
  ?jonathon dbo:award ?award .
  ?award dbo:relatedWar ?jonathonAwardWar .
}
```",5,6,6,3,2,3,3,71,0,0,9,0,0.0,0
54,71,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v8 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         a dbo:Person, dbo:Royalty ;
         dbo:officeHolder ?office .

  # Predecessor of this child
  ?predecessor dbo:successor ?child .

  # Thado Minsaw of Prome's parent and their child
  ?thadoParent dbo:parent dbr:Thado_Minsaw_of_Prome .
  ?sibling dbo:parent ?thadoParent .

  # Thinkhaya of Pagan's lineage
  ?thinkhayaChild dbo:child ?thinkhayaFather .
  ?thinkhayaGrandchild dbo:parent ?thinkhayaChild .
  ?thinkhayaGrandfather dbo:parent ?thinkhayaGrandchild .

  # Ensure all entities are persons
  ?predecessor a dbo:Person ;
              ?sibling ;
              ?thinkhayaGrandfather .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
959,53,test,"Give me the manager of the team of Takashi Sekizuka and native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Takashi Sekizuka's team
  dbr:Takashi_Sekizuka dbo:team ?team .
  
  # Manager of the team who is a native Japanese person
  ?team dbo:manager ?manager .
  ?manager dbo:nationality dbr:Japan .

  # Person born in 1958 and their alma mater
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1958)
  
  ?person dbo:almaMater ?university .
  ?university a dbo:University ;
              dbo:country dbr:Japan .

  # Ensure the manager's alma mater is the same as the person born in 1958
  ?manager dbo:almaMater ?university .
}
```",6,10,7,3,3,3,3,71,0,0,3,0,0.0,0
778,18,test,"Give me the author of the work, that is a software, of Bill Joy and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?software ?entity WHERE {
  # Step 1: Find Bill Joy's authored software
  ?person a dbo:Person ;
          foaf:name ""Bill Joy"" .
  
  ?person dbo:work ?software .

  # Step 2: Identify the Wolf Prize in Medicine and its American awardees
  ?award a dbo:Award ;
         rdfs:label ""Wolf Prize in Medicine""@en .
  
  ?recipient dbo:award ?award ;
             dbo:nationality dbr:United_States .

  # Step 3: Find connection between software author and award entity
  ?software dbo:author ?person .
  ?entity dbo:awardee ?recipient .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
161,51,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Francisco Largo Caballero""@en .
  
  ?event a dbo:MilitaryConflict, dbo:SocietalEvent ;
         dbo:commander ?person .

  ?event dbo:militaryForce ?militaryForce .
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
92,65,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael Furney"" ;
          dbo:actorIn dbr:Return_to_Nuke_'Em_High_Volume_1 ;
          dbo:bandMemberOf dbr:Nevermore .
  
  OPTIONAL { 
    ?person dbo:associatedBandOrArtist ?associatedArtist .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,59,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athlete WHERE {
  # Find the decedent who died in Zolotonosha and get their birth date
  ?decedent a dbo:Person ;
            dbo:deathPlace dbr:Zolotonosha ;
            dbo:birthDate ?decedentBirthDate .

  # Find an athlete and soccer player born on the same date as the decedent
  ?athlete a dbo:Person, dbo:Athlete, dbo:SoccerPlayer ;
           dbo:birthDate ?athleteBirthDate .
  FILTER (?athleteBirthDate = ?decedentBirthDate)

  # Ensure the athlete is in a band of a writer whose work includes a song by Amba Shepherd
  ?band a dbo:Band ;
        dbo:member ?athlete .
  ?writer a dbo:Writer ;
          dbo:work ?song .
  ?song dbo:lyricsBy dbr:Amba_Shepherd ;
        dbo:partOf ?band .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
838,12,val,"Give me the band member of the band, that is a group, of YU Grupa and band of Raša Đelmaš.",SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  # Find members of YU Grupa
  ?yugrupaMember a dbo:Person .
  ?yugrupaMember dbo:bandMember dbr:YU_Grupa .

  # Find groups associated with Raša Đelmaš
  ?rašaGroup a dbo:Band .
  ?rašaGroup dbo:leadArtist dbr:Raša_Đelmaš .

  # Check if the same person is a member of both bands
  ?yugrupaMember dbo:bandMember ?rašaGroup .
}
```",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
10,14,val,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of Matt Colton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist WHERE {
  # Find Luke Francis Vibert's band membership
  dbr:Luke_Francis_Vibert a dbo:Person .
  ?bandMembership dbo:member ?bandMember .
  ?bandMembership dbo:person dbr:Luke_Francis_Vibert .

  # Find Matt Colton's associated musical artists
  dbr:Matt_Colton a dbo:Person .
  ?association dbo:associatedMusicalArtist ?associatedArtist .
  ?association dbo:person dbr:Matt_Colton .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
963,11,val,"Give me the administration of Serbian Progressive Party and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?country WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Serbian Progressive Party""@en .
  
  ?administration dbo:memberOf ?party ;
                  a dbo:Person .

  ?country dbo:timeZone ?timezone .
  FILTER (CONTAINS(LCASE(str(?timezone)), ""central european time"") || 
          CONTAINS(LCASE(str(?timezone)), ""cet""))

  BIND(STR(?country) AS ?countryLabel)
}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,22,val,Give me the force of the person born as Narciso Campero Leyes and war of Irene Morales.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?camperoForce ?moralesWar WHERE {
  # Find Narciso Campero Leyes and his associated ""force""
  ?campero a dbo:Person ;
           rdfs:label ""Narciso Campero Leyes""@en .
  OPTIONAL { ?campero dbo:role ?camperoRole . }
  OPTIONAL { ?camperoRole rdfs:label ?camperoForce . FILTER (lang(?camperoForce) = 'en') }

  # Find Irene Morales and her association with a war
  ?morales a dbo:Person ;
           rdfs:label ""Irene Morales""@en .
  OPTIONAL { ?morales dbo:roleInWar ?warRole . }
  OPTIONAL { ?warRole rdfs:label ?moralesWar . FILTER (lang(?moralesWar) = 'en') }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
294,18,val,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?keeblesRestingPlace ?marionsBirthSettlement WHERE {
  # Query for Edwin A. Keeble's resting place
  OPTIONAL {
    dbr:Edwin_A._Keeble dbo:deathPlace ?keeblesRestingPlace .
  }
  
  # Query for Marion James' birthplace that is a settlement
  OPTIONAL {
    dbr:Marion_James dbo:birthPlace ?marionsBirthPlace .
    ?marionsBirthPlace a dbo:Settlement .
    BIND(?marionsBirthPlace AS ?marionsBirthSettlement)
  }
}
```",3,4,4,2,2,2,3,28,0,2,1,0.0,0.0,0
48,11,val,Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerBand ?murdaMookBand WHERE {
  # Find the writer of Carly Rae Jepsen's album ""Emotion""
  OPTIONAL {
    ?album dbo:artist dbr:Carly_Rae_Jepsen .
    ?album dbo:title ""Emotion"" .
    ?song dbo:composer ?writer .
    ?writer dbo:band ?writerBand .
  }
  
  # Find the band associated with Murda Mook
  ?murdaMook a dbo:Person ;
             foaf:name ""Murda Mook""@en ;
             dbo:memberOf ?murdaMookBand .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
404,32,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia a dbo:Person ;
    dbo:child ?child .

  # Ensure the child is royalty and parent of Ernest Augustus, Duke of Brunswick
  ?child a dbo:Person ;
         dbo:parent dbr:Ernest_Augustus,_Duke_of_Brunswick .

  # Find the spouse of Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
54,35,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Thihapate of Mohnyin's child
  ?thihapateChild dbo:childOf dbr:Thihapate_of_Mohnyin .
  
  # Step 2: Identify Soe Min Wimala Dewi's father
  ?soeMinFather dbo:parentOf dbr:Soe_Min_Wimala_Dewi .

  # Step 3: Find the common child
  ?commonChild dbo:childOf ?thihapateChild .
  ?commonChild dbo:childOf ?soeMinFather .
  
  # Step 4: Ensure the person is an office holder and royalty
  ?commonChild a dbo:Royalty ;
               a dbo:OfficeHolder .

  # Step 5: Find the predecessor of this individual
  ?predecessor dbo:predecessor ?commonChild .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
626,12,val,Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?commanderRole WHERE {
  VALUES ?yermolov { dbr:Aleksey_Petrovich_Yermolov }
  
  ?yermolov a dbo:Person .
  
  OPTIONAL {
    ?yermolov dbo:award ?award .
  }

  OPTIONAL {
    ?battle dbr:Battle_of_Leipzig ;
           dbo:commander ?commanderRole .
    FILTER (?commanderRole = ?yermolov)
  }
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
392,14,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  # Find the time zone of Aguilar de Segarra
  dbr:Aguilar_de_Segarra dbo:timeZone ?timezone .
  
  # Link the time zone to a region in Italy
  ?timezone dbo:region ?region .
  ?region rdfs:label ?regionLabel .
  FILTER (CONTAINS(LCASE(?regionLabel), ""italy""))

  # Check if there is a sports event associated with this time zone
  ?event a dbo:SportEvent ;
         dbo:timeZone ?timezone .

}
```",3,4,4,2,2,2,3,28,0,0,513,0,0.0,0
392,19,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
  ?division dbo:administrativeUnit ?country ;
            rdfs:label ""Schio""@en .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
9,39,val,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?nickname WHERE {
  # Query for Allen Hill's alma mater
  OPTIONAL {
    ?allenHill a dbo:Scientist ;
               foaf:name ""Allen Hill"" .
    ?allenHill dbo:almaMater ?almaMater .
  }
  
  # Query for an organisation and educational institution in Northern Ireland with a nickname
  OPTIONAL {
    ?institution a dbo:EducationalInstitution, dbo:Organisation ;
                 dbo:location dbr:Northern_Ireland .
    ?institution rdfs:label ?name .
    OPTIONAL { ?institution foaf:nick ?nickname . }
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,30,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Person deceased at Algiers
  ?deathPlace1 dbo:country dbr:Algeria ;
              rdfs:label ""Algiers""@en .
  ?person dbo:deathPlace ?deathPlace1 .

  # Person deceased in French Algeria (historical context)
  ?deathPlace2 dbo:country dbr:French_Algeria ;
               rdfs:label ?placeLabel .
  FILTER(CONTAINS(LCASE(?placeLabel), ""algeria""))
  OPTIONAL { ?person dbo:deathPlace ?deathPlace2 }

  # Person was a commander in the Franco-Hova Wars
  ?war dbr:War_of_France_and_Madagascar ;
      dbo:militaryCommanderOf ?person .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,33,val,Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp-owl: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:award dbp-owl:OrderOfSuvorov .
  
  ?commander a dbo:Person ;
             dbo:militaryCommander ?person .

  ?decedent a dbo:Person ;
            dbo:deathPlace dbr:Budapest ;
            dbo:militaryCommander ?commander .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
64,7,val,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica and entity in Serbia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?almaMater WHERE {
  ?person a dbo:Writer .
  ?person dbo:deathPlace dbr:Sremska_Kamenica .
  ?person dbo:almaMater ?almaMater .
}
```",3,4,4,2,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
427,28,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994) and party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to get Romano Prodi's party
SELECT ?party WHERE {
  dbr:Romano_Prodi dbo:member ?party .
}

# Query to find the reference for Italian People's Party (1994)
SELECT ?italianPeopleParty WHERE {
  ?italianPeopleParty rdfs:label ""Italian People's Party (1994)""@en .
}

# Query to get Giulio Andreotti's party
SELECT ?party WHERE {
  dbr:Giulio_Andreotti dbo:member ?party .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,27,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?album a dbo:Album ;
         rdfs:label ""What U See Is What U Get""@en .
  
  ?album dbo:writer ?writer .
  ?writer a dbo:Writer .

  ?album dbo:artist ?artist .
  ?artist a dbo:MusicalArtist, dbo:Artist .
}
```",3,7,4,3,1,3,3,71,0,0,50,0,0.0,0
328,28,val,"Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in Eastern Front (World War II)
  ?person dbo:commanderOfMilitaryUnit ?unit .
  ?unit rdfs:label ""Eastern Front""@en .

  # Leader of People's Commissariat of Defense
  ?person dbo:headOfState dbr:Soviet_Union .
  
  # Awardee of an award from Bruce Fraser, 1st Baron Fraser of North Cape
  ?person dbo:award ?award .
  ?award dbo:recipient ?person ;
         dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .

}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,35,val,Give me the administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherAdministration ?commanderBirthPlace WHERE {
  # Part 1: Administration of Emperor Go-Mizunoo's Father
  OPTIONAL {
    dbr:Emperor_Go-Mizunoo dbo:father ?father .
    ?father dbo:title ?title . # Assuming 'title' or similar property for administration
    BIND(?title AS ?fatherAdministration)
  }

  # Part 2: Birth Place of Commander in Boshin War
  OPTIONAL {
    ?commander a dbo:MilitaryPerson ;
               dbo:participatedIn dbr:Boshin_War .
    ?commander dbo:birthPlace ?birthPlace .
    BIND(?birthPlace AS ?commanderBirthPlace)
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
345,12,val,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?team WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Stolz von Liechtenstein""@en .
  ?person dbo:soccerPlayer ?playerRole .
  ?person dbo:soccerManager ?managerRole .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1978 && MONTH(?date) = 9 && DAY(?date) = 15)
  
  OPTIONAL {
    ?playerRole dbo:team ?team .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
488,40,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceSaito ?deathPlaceIeyasu ?administrationGoYozei WHERE {
  # Saitō Hajime's birth place related to a war
  ?saito a dbo:Person ;
         rdfs:label ""Saitō Hajime""@en .
  ?war dbo:commander ?saito ;
       a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .
  ?saito dbo:birthPlace ?birthPlaceSaito .

  # Tokugawa Ieyasu's death place
  ?ieyasu a dbo:Person ;
          rdfs:label ""Tokugawa Ieyasu""@en .
  ?ieyasu dbo:deathPlace ?deathPlaceIeyasu .

  # Emperor Go-Yōzei's administration location
  ?goYozei a dbo:Person ;
           rdfs:label ""Emperor Go-Yōzei""@en .
  ?goYozei dbo:residence ?administrationGoYozei .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
360,15,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album ?writer WHERE {
  ?album a dbo:Album .
  ?album dbo:member dbr:Dave_Flett .
  ?album dbo:member ?manfredMannMember .
  ?manfredMannMember dbo:band dbr:Manfred_Mann .

  OPTIONAL { 
    ?album dbo:writer ?writer .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
314,12,val,Give me the commander in Spanish Civil War and awardee of 30 and person deceased at Madrid.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in the Spanish Civil War
  ?commanderRole dbo:roleName ""Commander"" ;
                 dbo:war dbr:Spanish_Civil_War .
  ?person dbo:role ?commanderRole .

  # Awardee of the Nobel Prize (assuming from context)
  ?award dbo:name ""Nobel Prize"" ;
         dbo:yearAwarded ?year .
  FILTER (?year = 1930) 
  ?person dbo:award ?award .

  # Deceased in Madrid
  ?deathPlace a dbo:DeathPlace ;
              rdfs:label ""Madrid""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
232,22,val,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of Jon Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Find Sylvie Bermann's residence
  ?sylvie a dbo:Person ;
          foaf:name ""Sylvie Bermann""@en .
  
  ?residence dbo:resident ?sylvie ;
             a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Find Jon Pertwee's child associated with the same residence
  ?jon a dbo:Person ;
       foaf:name ""Jon Pertwee""@en .
  
  ?child dbo:parent ?jon ;
         dbo:residence ?residence .

  # Get the native of the settlement
  ?native dbo:birthPlace ?residence .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
838,13,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfArtist WHERE {
  # Step 1: Identify Žika Jelić's bands
  ?person dbr:Žika_Jelić .
  
  # Step 2: Find bands that are both a Band and a Group
  ?band dbo:member ?person ;
        rdf:type dbo:Band, dbo:Group .

  # Step 3: Identify artists within these bands who are also musical artists
  ?artist dbo:member ?band ;
          rdf:type dbo:Artist, dbo:MusicalArtist .
  
  # Step 4: Find the band of this artist
  ?bandOfArtist dbo:member ?artist ;
                rdf:type dbo:Band, dbo:Group .

}
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
16,23,val,Give me the spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Ted_McGinley a dbo:Person .
  dbr:Ted_McGinley dbo:birthName ?birthName .
  ?person dbo:birthName ?birthName .
  ?person dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,3,71,1,0,0,1.0,1.0,1.0
427,25,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  VALUES ?person { 
    dbr:Romano_Prodi 
    dbr:Giulio_Andreotti 
  }
  
  ?person a dbo:Person .
  ?person dbo:partyAffiliation ?party .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
427,43,val,Give me the reference to Partito Popolare Italiano and party of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Partito Popolare Italiano
SELECT ?party WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Partito Popolare Italiano""@en .
}

# Query for the party of Romano Prodi
SELECT ?party WHERE {
  dbr:Romano_Prodi dbo:member ?party .
}
```

Note: The third part regarding the MIT alumnus's father is not directly queryable with DBpedia due to lack of specific data on family political affiliations.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
30,7,val,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder and native of the birthplace of Silvia Cohen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
# Query to find Silvia Cohen's birthplace
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Silvia_Cohen dbo:birthPlace ?birthPlace .
}

# Assuming the result of the first query gives us a specific place, say ""dbr:Paris""
# Query to find the professional with specified roles and native to that birthplace
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Paris . # Replace ""dbr:Paris"" with the actual result from the first query
  ?person dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?person dbo:occupation dbr:Financier } &&
    EXISTS { ?person dbo:occupation dbr:Businessman } &&
    EXISTS { ?person dbo:occupation dbr:VineyardOwner } &&
    EXISTS { ?person dbo:occupation dbr:ArtCollector } &&
    EXISTS { ?person dbo:occupation dbr:RacehorseOwner }
  )
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
314,16,val,"Give me the person deceased at Madrid and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Lisa Gavrić""@en .
  OPTIONAL { ?person dbo:deathPlace dbr:Madrid . }
  OPTIONAL { ?person dbo:occupation dbr:Commander . }
  OPTIONAL { ?event dbo:agent ?person ; 
             a (dbo:Event|dbo:SocietalEvent) . }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
994,25,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?redTideArtist ?dokkenBand WHERE {
  # Find the associated musical artist of Red Tide (band)
  OPTIONAL {
    dbr:Red_Tide_(band) dbo:associatedMusicalArtist ?redTideArtist .
  }

  # Identify Donald Maynard Dokken and his band memberships
  ?dokken a dbo:Person ;
          foaf:name ""Donald Maynard Dokken"" ;
          dbo:birthDate ?date .

  OPTIONAL {
    ?dokken dbo:bandMember ?dokkenBand .
    ?dokkenBand a dbo:MusicalArtist .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
801,24,val,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?work WHERE {
  ?producer a dbo:MusicProducer ;
            foaf:name ""Chris Taylor"" .
  
  ?producer dbo:associatedMusicalArtist ?artist .

  ?work dbo:performer ?artist ;
        a dbo:Songs ;
        dbo:composer ?producer ;
        dbo:lyricist ?producer .

  ?work dbo:performer dbr:50_Cent .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
696,11,val,Give me the landmark at elevation of 50 and birth place of the member of Dropkick Murphys.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?birthPlace ?landmark WHERE {
  # Find members of Dropkick Murphys
  ?member a dbo:Person ;
          dbo:bandMember dbr:Dropkick_Murphys .

  # Get the birthplace of each member
  ?member dbo:birthPlace ?birthPlace .

  # Find landmarks with elevation of 50 (considering both meters and feet)
  OPTIONAL {
    ?landmark a dbo:Landmark ;
              dbo:elevation ?elevation .
    FILTER (
      (?elevation >= ""50""^^xsd:float && ?elevation <= ""51""^^xsd:float) ||
      (?elevation >= ""164.042""^^xsd:float && ?elevation <= ""165.042""^^xsd:float)
    )
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,31,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Step 1: Identify Laodice IV and her spouse
  ?laodiceIV a dbo:Person ;
             rdfs:label ""Laodice IV""@en .
  
  ?laodiceIV dbo:spouse ?spouse .

  # Step 2: Find the child of the spouse (i.e., grandchild of Laodice IV)
  ?spouse dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild rdf:type dbo:Monarch .

  # Step 3: Identify the successor of Antiochus II Theos and ensure they are royalty
  ?antiochusII a dbo:Person ;
               rdfs:label ""Antiochus II Theos""@en .
  
  ?antiochusII dbo:succeededBy ?successor .

  # Ensure the successor is royalty
  ?successor rdf:type dbo:Monarch .

  # Step 4: Find the child of the successor's child who is royalty
  ?successor dbo:child ?successorChild .
  
  ?successorChild dbo:child ?grandchild .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
328,30,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander on Eastern Front during WWII
  ?person dbo:commanderOfMilitaryUnit ?unit .
  ?unit dbo:participatedInWar ?war .
  ?war rdfs:label ""World War II""@en .

  # Leader of an office under Joseph Stalin
  ?office dbo:headOfGovernmentAgency ?leader .
  FILTER (?leader = ?person) .
  ?stalin dbr:Joseph_Stalin .
  ?stalin dbo:primeMinisterOf ?country .
  ?office dbo:partOfGovernment ?government .
  ?government dbo:hasLeader ?stalin .

  # Awardee of the Order of Suvorov
  ?person dbo:awardeeOfOrder dbr:Order_of_Suvorov .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
427,23,val,Give me the reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Michele_Pinto dbo:party ?party .
}
```",3,3,4,3,1,3,3,71,2,0,6,1.0,0.25,0.4
328,39,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II).",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalLeader WHERE {
  # Step 1: Identify Gustav Jonson's role
  ?gustav a dbo:Person ;
          dbo:officeHolderOf ?office1 .

  # Step 2: Find the commander in Eastern Front (World War II)
  ?commander a dbo:Person ;
             dbo:commanderIn dbr:Eastern_Front_(World_War_II) .

  # Step 3: Determine leadership roles
  ?office1 dbo:leaderOf ?agency .
  ?agency dbo:leader ?commanderLeader .

  # Step 4: Find the leader of that government agency
  ?commanderLeader a dbo:Person ;
                   dbo:leaderOf ?finalOffice .
  ?finalOffice dbo:leader ?finalLeader .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
232,34,val,Give me the child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Jon Pertwee"" .
  ?person dbo:birthPlace dbr:London .
  ?person dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,31,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?war WHERE {
  # Find Jonathon Band and his awards
  ?person a dbo:Person ;
          foaf:name ""Jonathon Band"" ;
          dbo:award ?award .

  # Check if the award is related to any war, particularly in New Zealand
  OPTIONAL { 
    ?award dbo:relatedWar ?war .
    ?war dbo:location dbr:Colony_of_New_Zealand .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,24,val,Give me the figure known as QUB and alma mater of the awardee of Royal Medal.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?almaMater WHERE {
  ?person dbo:award dbr:Royal_Medal .
  ?person dbo:almaMater ?almaMater .
  OPTIONAL { ?almaMater rdfs:label ""Queen's University Belfast""@en }
}
```",3,3,4,2,2,3,3,71,1,316,0,0.0031545741324921135,1.0,0.006289308176100629
404,38,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Ernest Augustus, Duke of Brunswick
  dbr:Ernest_Augustus,_Duke_of_Brunswick a dbo:Person .
  
  # Find his father
  ?father dbo:child dbr:Ernest_Augustus,_Duke_of_Brunswick .

  # Determine the child of his father who is also a royalty and parent to Ernest Augustus
  ?father dbo:child ?child .
  ?child dbo:parent dbr:Ernest_Augustus,_Duke_of_Brunswick .
  
  # Ensure the child is a royalty
  OPTIONAL { ?child a dbo:Monarch . }
  FILTER EXISTS { ?child a dbo:Monarch }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
232,33,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?person a dbo:Person .
  ?person dbo:childOf dbr:Jon_Pertwee .
  ?person dbo:profession dbr:Actor ;
          dbo:profession dbr:Narrator ;
          dbo:profession dbr:Producer .

  ?film dbo:starring ?actor .
  ?conflict dbo:relatedToFilm ?film .

  FILTER EXISTS { ?person dbo:claimToFame ?film }
  FILTER EXISTS { ?person dbo:claimToFame ?conflict }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,40,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of New Zealand Army.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find awards received by Jonathon Band
  ?award dbo:recipient dbr:Jonathon_Band .
  
  # Link the award to a war
  ?award dbo:relatedWar ?war .

  # Ensure the war is related to either the Colony of New Zealand or the New Zealand Army
  {
    ?war dbo:participatingCountry dbr:Colony_of_New_Zealand .
  } UNION {
    ?war dbo:militaryParticipant dbr:New_Zealand_Army .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
421,17,val,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the birthplace of Samir Bekrić
  ?bekric a dbo:Person ;
          foaf:name ""Samir Bekrić"" ;
          dbo:birthPlace ?birthPlace .

  # Find the person born as Edin Dervišhalidović
  ?person a dbo:Person ;
          dbo:birthName ""Edin Dervišhalidović"" ;
          dbo:birthPlace ?sameBirthPlace .

  # Ensure the birthplaces match
  FILTER (?sameBirthPlace = ?birthPlace)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,14,val,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  # Identify Princess Pauline of Saxe-Weimar-Eisenach
  dbr:Princess_Pauline_of_Saxe-Weimar-Eisenach dbo:spouse ?spouse .
  
  # Ensure the spouse is royalty
  ?spouse a dbo:Person ;
          rdfs:label ?spouseLabel .
  FILTER CONTAINS(LCASE(?spouseLabel), ""royalty"") .

  # Find the child of this spouse who is also royalty
  ?spouse dbo:child ?child .
  ?child a dbo:Person ;
         rdfs:label ?childLabel .
  FILTER CONTAINS(LCASE(?childLabel), ""royalty"") .

  # Identify the father of this child
  ?child dbo:father ?father .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
485,14,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:writer true .
  ?person dbo:poet true .
  ?person dbo:award dbr:Erich_Gregory_Award .
  ?person dbo:country dbr:United_Kingdom .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,5,4,2,2,2,3,28,0,0,5,0,0.0,0
404,18,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent a dbo:Person ;
          rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .
  
  ?child dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia ;
         dbo:parent ?parent ;
         dbo:child dbr:Prince_Ernest_Augustus_of_Hanover .

}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,26,val,Give me the alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/governor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:George_Kilbon_Nash a dbo:Person .
  dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .
}
```",3,3,4,3,1,3,3,71,0,0,6,0,0.0,0
915,11,val,"Give me the father of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find the father of Lizzie Spaulding
  ?lizzie a dbo:Person ;
          rdfs:label ""Lizzie Spaulding""@en .
  ?lizzie dbo:father ?father .

  # Find Stephen Verona's birthplace and ensure it is a settlement
  ?stephen a dbo:Person ;
           rdfs:label ""Stephen Verona""@en .
  ?stephen dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .

  # Ensure the father of Lizzie Spaulding resides in Stephen Verona's birthplace
  ?father dbo:residence ?residence .
  FILTER (?residence = ?birthPlace)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
617,40,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfLaodiceIV ?childOfSpouse ?successor ?childOfSuccessor ?parentOfNysa WHERE {
  # Laodice IV's spouse
  dbr:Laodice_IV dbo:spouse ?spouseOfLaodiceIV .
  
  # Child of Laodice IV and her spouse
  ?spouseOfLaodiceIV dbo:child ?childOfSpouse .

  # Successor of Antiochus II Theos
  dbr:Antiochus_II_Theos dbo:succeededBy ?successor .
  
  # Child of the successor
  ?successor dbo:child ?childOfSuccessor .

  # Parent of Nysa (wife of Pharnaces I of Pontus)
  dbr:Nysa_(wife_of_Pharma) dbo:parent ?parentOfNysa .

  # Ensure all are royalty
  ?spouseOfLaodiceIV a dbo:Royalty .
  ?childOfSpouse a dbo:Royalty .
  ?successor a dbo:Royalty .
  ?childOfSuccessor a dbo:Royalty .
  ?parentOfNysa a dbo:Royalty .

  # Ensure the child of Laodice IV's spouse is also the parent of Nysa
  ?childOfSpouse = ?parentOfNysa
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
492,32,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Joseph C. Satterthwaite's death place
  dbr:Joseph_C._Satterthwaite a dbo:Person ;
    dbo:deathPlace ?deathPlace .

  # Find the person who died at the same place and was involved in a military conflict with Frédéric-Georges Herr
  ?person a dbo:Person ;
    dbo:deathPlace ?deathPlace ;
    dbo:militaryConflict ?conflict .

  # Ensure the conflict involves Frédéric-Georges Herr
  ?conflict dbo:participant dbr:Frédéric-Georges_Herr .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
838,11,val,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of Kerber.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?yuGrupa a dbo:Band ;
           dbo:bandMember ?person .
  
  ?kerber a dbo:Band ;
          dbo:bandMember ?person .

  ?person a (dbo:Artist|dbo:MusicalArtist) .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
659,27,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify Rutger Jan Schimmelpenninck
  dbr:Rutger_Jan_Schimmelpenninck a dbo:Person .
  
  # Link him to a military force
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryForce ?militaryForce .

  # Ensure the military force is linked to a societal event
  ?militaryForce dbo:relatedEvent ?societalEvent .
  ?societalEvent a dbo:SocietalEvent .

  # Ensure the military force is linked to an event
  ?militaryForce dbo:relatedEvent ?event .
  ?event a dbo:Event .

  # Ensure the military force is linked to a military conflict
  ?militaryForce dbo:relatedEvent ?conflict .
  ?conflict a dbo:MilitaryConflict .
}
```",3,6,4,3,1,3,3,71,0,0,1127,0,0.0,0
767,37,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to .,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""George Kilbon Nash""@en .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",4,4,5,3,2,3,3,71,0,1,2,0.0,0.0,0
994,36,val,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Identify S.A. Slayer and their associated musical artist
SELECT ?sASlayer ?associatedArtist WHERE {
  ?sASlayer a dbo:MusicalArtist .
  ?sASlayer rdfs:label ""S.A. Slayer""@en .
  OPTIONAL { ?sASlayer dbo:associatedBand ?band . }
  OPTIONAL { ?band dbo:associatedMusicalArtist ?associatedArtist . }
}

# Step 2: Identify Don Dokken's persona as a musical artist
SELECT ?donDokken WHERE {
  ?donDokken a dbo:MusicalArtist .
  ?donDokken rdfs:label ""Don Dokken""@en .
}

# Step 3: Find band member of Don Dokken who is also a musical artist by birth
SELECT ?bandMember WHERE {
  ?dokkenBand a dbo:MusicalGroup .
  ?dokkenBand dbo:bandMember ?bandMember .
  ?bandMember a dbo:MusicalArtist .
  ?bandMember dbo:birthDate ?date .
  FILTER EXISTS { 
    ?person a dbo:Person ;
            rdfs:label ""Don Dokken""@en ;
            dbo:associatedBand ?dokkenBand .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,15,val,"Give me the birth place of Novia Indriani Mamuaja and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for birth place of Novia Indriani Mamuaja
SELECT ?birthPlace WHERE {
  dbr:Novia_Indriani_Mamuaja a dbo:Person .
  dbr:Novia_Indriani_Mamuaja dbo:birthPlace ?birthPlace .
}

# Query to find an entity in the region of the time zone for Salak, North Sumatra
SELECT DISTINCT ?entity WHERE {
  # Assuming we have identified the time zone or related region as a resource
  dbr:Salak_North_Sumatra dbo:timeZone ?timeZone .
  ?region dbo:timeZone ?timeZone .
  ?entity dbo:location ?region .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
659,34,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Check if the person was an office holder in the Kingdom of Ireland
  ?officeHolderPosition dbo:officeHolder ?person ;
                       rdfs:label ""Kingdom of Ireland""@en .
  
  # Check if the person was a military commander during the Napoleonic Wars
  ?militaryCommanderPosition dbo:militaryCommander ?person ;
                             rdfs:subClassOf* dbr:Napoleonic_Wars .

}
```",4,5,5,3,2,3,3,71,0,0,34,0,0.0,0
184,37,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Archduchess Ilona of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find the parent of Archduke Ladislaus Philipp
  ?parent a dbo:Person ;
          dbo:child dbr:Archduke_Ladislaus_Philipp_of_Austria .

  # Find the sibling (child of the same parent)
  ?sibling a dbo:Person ;
           dbo:parent ?parent .

  # Find the grandchild of this sibling who is royalty
  ?grandchild a dbo:Person, dbo:Royalty ;
              dbo:parent ?sibling .

  # Ensure this grandchild is also the parent of Archduchess Ilona
  ?grandchild dbo:child dbr:Archduchess_Ilona_of_Austria .
}
```",4,5,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
182,17,val,Give me the entity in Sri Lanka and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?war WHERE {
  dbr:Gotabhaya_Rajapaksa dbo:work ?work .
  ?work dbo:subject ?subject .
  ?subject rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""sri lanka"") && CONTAINS(LCASE(?label), ""war""))
  
  OPTIONAL {
    ?work dbo:topic ?war .
    ?war rdfs:label ?warLabel .
    FILTER (CONTAINS(LCASE(?warLabel), ""war""))
  }
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
161,36,val,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event a dbo:RifWar .
  ?event dbo:commanderInForce ?commander .
  ?commander rdfs:label ""Francisco Franco""@en .
}
```",4,5,5,3,2,3,3,71,0,0,12,0,0.0,0
547,33,val,Give me the resting place of the actor of the show with Emily Richard and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorRestingPlace ?burtonRestingPlace WHERE {
  # Find the actor of the show with Emily Richard
  ?show dbo:character ?emilyRichard .
  ?emilyRichard rdfs:label ""Emily Richard""@en .
  
  ?show dbo:actor ?actor .
  ?actor dbo:restingPlace ?actorRestingPlace .

  # Find James Burton, Egyptologist
  ?burton a dbo:Person ;
          foaf:name ""James Burton"" ;
          dbo:occupation dbr:Egyptology .
  ?burton dbo:restingPlace ?burtonRestingPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
701,40,val,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Identify Henuttawy (19th dynasty) and her parent
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy (19th dynasty)""@en .
  
  ?parent dbo:child ?henuttawy .

  # Step 2: Find Ramesses II's spouse who is also Henuttawy's parent
  ?ramessesII dbr:Ramesses_II ;
              dbo:spouse ?parent .

  # Step 3 and 4: Identify Amun-her-khepeshef's spouse, their child, and the parent of that child
  ?amunHerKhepeshef a dbo:Person ;
                   rdfs:label ""Amun-her-khepeshef""@en .
  
  ?spouseOfAmunHerKhepeshef dbo:spouse ?amunHerKhepeshef ;
                            dbo:child ?child .

  ?parentOfChild dbo:child ?child .
  
  FILTER (?parent = ?parentOfChild)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,37,val,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Step 1: Identify Don Dokken's Band
  ?donDokken a dbo:Person ;
             foaf:name ""Don Dokken"" .
  
  ?donDokken dbo:musicalArtist ?dokkenBand .

  # Step 2: Find the associated musical artist of each band member
  ?bandMember dbo:musicalArtist ?associatedArtist ;
              dbo:musicalArtist ?dokkenBand .

  # Step 3: Filter by specific criteria (band, group, organisation)
  ?associatedArtist a dbo:MusicalArtist ;
                   rdf:type dbo:Band ;
                   rdf:type dbo:Group ;
                   rdf:type dbo:Organisation .
  
  # Step 4: Link to Fredrik Thordendal's band
  ?fredrikThordendal a dbo:Person ;
                     foaf:name ""Fredrik Thordendal"" .

  ?fredrikThordendal dbo:musicalArtist ?associatedArtist .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
421,13,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality ?country .
  ?person dbo:award ?award .
  ?person dbo:bandMemberOf ?band .
  ?bandMember dbo:bandMemberOf ?band .
  
  FILTER (STRSTARTS(STR(?country), ""http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia""))
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
378,38,val,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?claimToFame WHERE {
  VALUES ?person { 
    dbr:George_Augustus_Eliott 
    dbr:Duke_of_Wellington 
  }
  
  ?person dbo:knownFor ?claimToFame .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
626,13,val,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflictCommander WHERE {
  # Find the Battle of Paris (1814) and its commander
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Paris (1814)""@en .
  
  ?battle dbo:commander ?battleCommander .

  # Identify the military conflict this battle was part of
  ?battle dbo:partOf ?conflict .

  # Find the commander of that military conflict
  ?conflict dbo:commander ?conflictCommander .
}
```",3,4,4,3,1,3,2,20,0,0,364,0,0.0,0
356,11,val,Give me the player in the successor of 2014 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find the team Mark Briggs played for after 2014
  ?markBriggs a dbo:Person ;
              foaf:name ""Mark Briggs""@en .
  
  ?markBriggs dbo:sportTeamMember ?teamAfter2014 .
  FILTER EXISTS { 
    ?teamAfter2014 dbo:member ?player .
  }
  
  # Ensure the team is associated with Mark Briggs after 2014
  ?teamAfter2014 dbo:seasonStartYear ?year .
  FILTER (?year > 2014)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
9,41,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find the mayor of Northern Ireland Forum who studied at QUB
  ?mayor a dbo:Person ;
         dbo:positionHeld dbr:Northern_Ireland_Forum_Mayor ;
         dbo:almaMater dbr:Queen's_University_Belfast .

  # Find the awardee of Royal Medal who studied at QUB
  ?awardee a dbo:Person ;
           dbo:award dbr:Royal_Medal ;
           dbo:almaMater dbr:Queen's_University_Belfast .

  # Ensure both conditions refer to the same person
  FILTER (?mayor = ?awardee)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
54,33,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfThinkhayaChild WHERE {
  # Step 1: Identify Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw""@en .
  
  # Step 2: Find Parent of Thado Minsaw
  ?parentOfThadoMinsaw dbo:child ?thadoMinsaw .

  # Step 3 & 4: Identify Child of This Parent (Sibling) and their Parent
  ?sibling dbo:child ?parentOfThadoMinsaw .
  
  # Step 5: Find Child of Thinkhaya of Pagan
  ?thinkhaya a dbo:Person ;
             rdfs:label ""Thinkhaya""@en .
  ?childOfThinkhaya dbo:child ?thinkhaya .

  # Step 6: Identify Parent of This Child
  ?parentOfThinkhayaChild dbo:child ?childOfThinkhaya .

  FILTER(?sibling != ?thadoMinsaw) # Ensure it's a different sibling
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,34,val,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?rice a dbo:Person ;
        dbo:birthName ""Georgeanne Marie Rice""@en .
  
  ?ted a dbo:Person ;
       dbo:birthName ""Ted McGinley""@en .

  ?rice dbo:spouse ?person .
  ?ted dbo:spouse ?person .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,14,val,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team WHERE {
  # Identify Gary Williams
  ?g wdt:P31 wd:Q5 ;
     rdfs:label ""Gary Williams (footballer, born 1960)""@en .
  
  # Get his birthplace and ensure it's an English settlement
  ?g dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:nationality dbr:England .

  # Find teams associated with the birthplace
  ?team dbo:location ?birthPlace ;
        a dbo:SoccerTeam .

  # Check if any team member was both a player and a manager
  ?member dbo:team ?team ;
          dbo:sport wd:Q931 .
  
  OPTIONAL { ?member dbo:playerPosition ?position . }
  OPTIONAL { ?manager wdt:P106 wd:Q13406463 ; # occupation: soccer manager
             dbo:team ?team . }

  FILTER EXISTS {
    ?member wdt:P31 wd:Q5 ;
            rdfs:label ?name .
    ?manager wdt:P31 wd:Q5 ;
             rdfs:label ?managerName .
    FILTER (?name = ?managerName)
  }
}
```",3,7,4,3,1,3,2,20,0,0,46,0,0.0,0
617,35,val,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfAntiochusChild ?grandchildOfSeleucus WHERE {
  # Find Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             rdfs:label ""Antiochus""@en ;
             dbo:father dbr:Antiochus_III_the_Great .

  # Find child of this Antiochus
  ?childOfAntiochus dbo:parent ?antiochus .
  
  # Determine the parent of this child (which is Antiochus himself)
  ?parentOfAntiochusChild dbo:parent ?childOfAntiochus .

  # Find Seleucus II Callinicus
  ?seleucus a dbo:Person ;
            rdfs:label ""Seleucus_II_Callinicus""@en .
  
  # Find grandchildren of Seleucus II Callinicus who are royalty
  ?grandchildOfSeleucus dbo:parent ?seleucusChild .
  ?seleucusChild dbo:parent ?seleucus .
  ?grandchildOfSeleucus dbo:royaltyTitle ?title .

  FILTER (LANG(?antiochusLabel) = ""en"" && LANG(?seleucusLabel) = ""en"")
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
232,39,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native WHERE {
  # Find the actor of ""Dog Soldiers""
  ?actor a dbo:Person ;
         dbo:filmActor dbr:Dog_Soldiers_(2002_film) .
  
  # Find the politician and office holder from France
  ?person a dbo:Person ;
          dbo:nationality dbr:Francois ;  # Assuming 'Francois' is a placeholder for French nationality
          dbo:officeHolder ?office .

  # Ensure the actor and person are the same individual
  FILTER (?actor = ?person)

  # Find the residence of this person that is a settlement in Britain
  ?residence dbo:resident ?person ;
             a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .
  
  # Determine the native (birthplace) of this British settlement
  ?native dbo:nativePlace ?residence .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
626,11,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Condition for receiving the Order of St. Andrew
  ?person dbo:receivedAward dbr:Order_of_St._Andrew .

  # Condition for being a military commander during Alexander I's reign
  ?person dbo:militaryCommanderOf ?conflict .
  ?conflict dbo:dateStart ?startDate .
  ?conflict dbo:dateEnd ?endDate .
  
  FILTER (
    EXISTS { 
      ?commanderRole dbo:commander ?person .
      ?commanderRole dbo:commanderIn ?conflict .
      ?conflict dbo:dateStart ?startDate .
      ?conflict dbo:dateEnd ?endDate .
      FILTER (?startDate >= ""1801-01-01""^^xsd:date && ?endDate <= ""1825-12-31""^^xsd:date)
    }
  )
}
```",3,4,4,2,2,3,2,20,0,0,9,0,0.0,0
547,22,val,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  # Query for James Burton (Egyptologist)
  { 
    ?person a dbo:Person .
    ?person rdfs:label ""James Burton (Egyptologist)""@en .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  } UNION
  # Query for awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?awardee a dbo:Person .
    ?awardee dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    OPTIONAL { ?awardee dbo:deathPlace ?restingPlace . }
  }
}
```",3,3,4,2,2,3,3,71,0,1,1,0.0,0.0,0
701,42,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?henuttawyParent WHERE {
  # Find Henuttawy (19th dynasty)
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy""@en ;
             dbo:parent ?henuttawyParent .

  # Identify Merneptah's father
  ?merneptah a dbo:Person ;
             rdfs:label ""Merneptah""@en ;
             dbo:father ?ramessesII .

  # Find the spouse of Ramesses II (Merneptah's father)
  ?ramessesII a dbo:Person ;
              rdfs:label ""Ramesses II""@en ;
              dbo:spouse ?spouse .

  # Identify Nefertari's child
  ?nefertari a dbo:Person ;
             rdfs:label ""Nefertari""@en ;
             dbo:child ?merneptah .

  # Check if the parent of Henuttawy is the spouse of Ramesses II
  FILTER (?henuttawyParent = ?spouse)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
959,18,val,Give me the member of University of Tsukuba and native of Japan and manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # University of Tsukuba alumni
  ?person dbo:almaMater dbr:University_of_Tsukuba .

  # Native of Japan (using birthPlace as an example)
  ?person dbo:birthPlace ?place .
  FILTER EXISTS { ?place rdfs:label ""Japan""@en }

  # Manager of Júbilo Iwata in 2013
  ?person dbo:managerOf dbr:Júbilo_Iwata_2013_season .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,20,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find the spouse of Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Find children of Ernest Augustus, Duke of Brunswick who are royalty
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:child ?royalChild .
  
  # Ensure the child is a royalty
  ?royalChild a dbo:Monarch .

  # Check if the spouse from step 1 is the parent of this royal child
  ?spouse dbo:parent ?royalChild .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
232,26,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?person a dbo:Actor ;
          dbo:narrator true ;
          dbo:producer true .
  
  ?film dbo:castMember ?person ;
        dbo:subject ?conflict .

  FILTER (STRSTARTS(STR(?conflict), ""Military conflict"") || STRSTARTS(STR(?conflict), ""War""))

  ?film dbo:castMember ?actor .
}
```",3,5,4,3,1,3,3,71,0,0,3,0,0.0,0
281,21,val,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?war WHERE {
  ?awardee a dbo:Person .
  ?awardee dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .

  ?awardee dbo:militaryConflict ?conflict1 .
  ?conflict1 rdfs:label ?warLabel1 .

  ?nzArmyConflict dbo:militaryConflict ?conflict2 .
  ?conflict2 rdfs:label ?warLabel2 .
  
  FILTER (lang(?warLabel1) = ""en"" && lang(?warLabel2) = ""en"")
  FILTER (?warLabel1 = ?warLabel2)
  
  BIND(CONCAT(STR(?awardee), STR(?conflict1)) AS ?war)
}
```",3,3,4,2,2,3,3,71,0,0,9,0,0.0,0
488,41,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?birthPlace ?deathPlace WHERE {
  # Administration of Emperor Go-Yōzei
  {
    SELECT ?administration WHERE {
      ?emperor a dbo:Monarch ;
               rdfs:label ""Go-Yōzei""@en .
      ?emperor dbo:reign ?administration .
    }
  }

  UNION

  # Birth place of the commander in Boshin War
  {
    SELECT ?birthPlace WHERE {
      ?commander a dbo:Commander ;
                 dbo:participatedIn dbr:Boshin_War ;
                 dbo:birthPlace ?birthPlace .
    }
  }

  UNION

  # Death place of the father of Yūki Hideyasu
  {
    SELECT ?deathPlace WHERE {
      ?yuki a dbo:Person ;
            rdfs:label ""Yūki_Hideyasu""@en ;
            dbo:father ?father .
      ?father a dbo:Politician ;
              dbo:deathPlace ?deathPlace .
    }
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
767,31,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert.",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find the writer of ""Where It's At"" (Dustin Lynch album)
  ?album dbo:artist dbr:Dustin_Lynch .
  ?album dbo:song ?song .
  ?song dbo:lyricist ?writer .

  # Find Carl L. Nippert's alma mater
  ?nippert dbo:almaMater ?almaMater .

  # The entity must be in administration and a settlement
  ?entity dbo:administration ?adminEntity .
  ?entity a dbo:Settlement .
  
  # Ensure the entity is related to both the writer and the alma mater
  FILTER (?writer = ?entity || ?almaMater = ?entity)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
994,34,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist1 ?associatedArtist2 WHERE {
  # Step 1: Find Don Dokken's band
  ?person a dbo:Person ;
          foaf:name ""Don Dokken""@en .
  ?person dbo:bandMember ?band .

  # Step 2: Find an associated musical artist of Watchtower
  dbr:Watchtower dbo:associatedMusicalArtist ?associatedArtist1 .

  # Step 3: Find another associated musical artist of the artist found in step 2
  ?associatedArtist1 dbo:associatedMusicalArtist ?associatedArtist2 .
  
  # Return Don Dokken's band and the final associated artist
  BIND(?band AS ?bandMember)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
251,12,val,Give me the death place of Laura Mancinelli and location of Battle of Marengo and administration of Forza Italia (2013).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
# Query for Laura Mancinelli's death place
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Laura_Mancinelli a dbo:Person .
  dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
}

# Query for the location of Battle of Marengo
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?location WHERE {
  dbr:Battle_of_Marengo a dbo:Event .
  dbr:Battle_of_Marengo dbp:location ?location .
}

# Query for the administration of Forza Italia in 2013
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?head WHERE {
  dbr:Forza_Italia (a dbo:PoliticalParty ; 
    dbo:leader ?head .
  ) .
  FILTER(YEAR(?administrationStart) <= 2013 && YEAR(?administrationEnd) >= 2013)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
659,33,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the resource for 'Polish Horse'
  ?polishHorse rdfs:label ""Polish Horse""@en .
  
  # Find commanders in a general war context
  ?war dbo:type dbo:MilitaryConflict ;
       dbo:participatingUnit ?polishHorse ;
       dbo:commander ?commander .

  # Find commanders specifically for the German campaign of 1813
  OPTIONAL {
    ?campaign dbr:German_Campaign_of_1813 ;
              dbo:participatingUnit ?polishHorse ;
              dbo:commander ?specificCommander .
    BIND(?specificCommander AS ?commander)
  }
}
```",4,8,5,3,2,3,3,71,0,0,30,0,0.0,0
547,42,val,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  # Child of James Burton (property developer)
  OPTIONAL {
    ?child dbo:parent dbr:James_Burton_(property_developer) .
    ?child dbo:deathPlace ?deathPlace .
    FILTER (?person = ?child)
  }

  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  OPTIONAL {
    ?awardee dbo:honours dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    ?awardee dbo:deathPlace ?deathPlace .
    FILTER (?person = ?awardee)
  }

  # Simon Cadell
  OPTIONAL {
    ?cadell a dbo:Person ;
            rdfs:label ""Simon Cadell""@en ;
            dbo:deathPlace ?deathPlace .
    FILTER (?person = ?cadell)
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
9,29,val,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?almaMater WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  { 
    ?person rdfs:label ""John Alderdice, Baron Alderdice""@en .
    ?person dbo:almaMater ?almaMater .
  }
  
  UNION
  
  # Alma mater of a notable awardee of the Royal Medal
  {
    ?awardee dbo:awardReceived dbr:Royal_Medal .
    ?awardee dbo:almaMater ?almaMater .
  }

  UNION

  # Alma mater of a figure associated with QUB (Queen's University Belfast)
  {
    ?figure dbo:alumniOf dbr:Queen's_University_Belfast .
    ?figure dbo:almaMater ?almaMater .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,30,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?almaMater ?nickname WHERE {
  # Allen Hill (Scientist)
  VALUES ?person { dbr:Allen_Hill_(scientist) }
  OPTIONAL { ?person dbo:almaMater ?almaMater }

  UNION

  # John Alderdice, Baron Alderdice
  VALUES ?person { dbr:John_Alderdice }
  OPTIONAL { ?person dbo:almaMater ?almaMater }

  UNION

  # Queen's University Belfast and its nickname
  {
    ?university a dbo:EducationalInstitution .
    ?university rdfs:label ""Queen's University Belfast""@en .
    OPTIONAL { ?university dbo:nickname ?nickname }
    BIND(?university AS ?almaMater)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,20,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Frédéric-Georges Herr""@en .
  
  OPTIONAL { ?person dbo:deathPlace dbr:French_Algeria . }
  
  OPTIONAL { 
    ?war a dbo:MilitaryConflict ;
         dbo:commander ?person .
  }
}
```",3,5,4,2,2,3,3,71,0,1,1,0.0,0.0,0
9,18,val,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  VALUES ?almaMater { dbr:Queen's_University_Belfast }
  
  # Check for John Alderdice
  OPTIONAL {
    ?johnAlderdice dbo:almaMater ?almaMater .
    ?johnAlderdice rdfs:label ""John Alderdice, Baron Alderdice""@en .
  }

  # Check for Allen Hill (scientist)
  OPTIONAL {
    ?allenHill dbo:almaMater ?almaMater .
    ?allenHill rdfs:label ""Allen Hill (scientist)""@en .
  }
  
  FILTER (?johnAlderdice && ?allenHill) # Ensure both are linked to the alma mater
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
378,29,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?claimToFame WHERE {
  VALUES ?person { 
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón
    dbr:C_P_Gahn
  }
  
  ?person dbo:claimToFame ?claimToFame .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
10,15,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Matt Colton""@en .
  ?person dbo:musicalArtist ?musicalArtist .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
378,39,val,"Give me the war of Joaquín Blake and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?joaquinRole WHERE {
  # Find the war Joaquín Blake was involved in and his claim to fame
  ?joaquin a dbo:Person ;
           rdfs:label ""Joaquín Blake""@en ;
           dbo:militaryConflict ?war .
  
  OPTIONAL { ?joaquin dbo:claimToFame ?joaquinRole . }

  # Find the war Thomas Trigge was involved in
  ?thomas a dbo:Person ;
          rdfs:label ""Thomas Trigge""@en ;
          dbo:militaryConflict ?war .

  FILTER(?joaquin != ?thomas) # Ensure they are different individuals
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
994,18,val,Give me the associated musical artist of Red Tide (band) and band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query 1: Associated musical artist(s) of Red Tide (band)
SELECT ?artist WHERE {
  dbr:Red_Tide_(band) dbo:associatedMusicalArtist ?artist .
}

# Query 2: Band member of both Don Dokken and S.A. Slayer
SELECT DISTINCT ?member WHERE {
  ?member dbo:bandMember dbr:Don_Dokken .
  ?member dbo:bandMember dbr:S._A._Slayer .
}

# Query 3: Associated musical artist(s) of S.A. Slayer
SELECT ?artist WHERE {
  dbr:S._A._Slayer dbo:associatedMusicalArtist ?artist .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
783,12,val,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist ?bandMember WHERE {
  # Find Appietus's associated musical artists
  dbr:Appietus dbo:associatedMusicalArtist ?associatedArtist .

  # Find Priscilla Opoku-Kwarteng and confirm her birth details
  dbr:Priscilla_Opoku-Kwarteng a dbo:Person ;
    dbo:birthDate ?priscillaBirthDate ;
    dbo:occupation ?priscillaOccupation .
  
  FILTER (CONTAINS(?priscillaOccupation, ""artist"") && CONTAINS(?priscillaOccupation, ""musical artist""))

  # Find band members who are also artists and musical artists
  ?bandMember a dbo:Person ;
    dbo:birthDate ?bandMemberBirthDate ;
    dbo:occupation ?bandMemberOccupation .
  
  FILTER (?bandMemberBirthDate = ?priscillaBirthDate &&
          CONTAINS(?bandMemberOccupation, ""artist"") && 
          CONTAINS(?bandMemberOccupation, ""musical artist""))
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
485,19,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?countryInWET ?entityInNottinghamshire WHERE {
  # Find Thomas Warner's birth place
  dbr:Thomas_Warner_(poet) a dbo:Writer ;
    dbo:birthPlace ?birthPlace .

  # Find countries in the Western European Time zone
  ?countryInWET a dbo:Country ;
                dbo:timeZone dbr:Western_European_Time .

  # Find an entity in Nottinghamshire
  ?entityInNottinghamshire dbo:locatedIn dbr:Nottinghamshire .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
427,37,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find the party of the father of a notable MIT alumnus
SELECT ?fatherParty WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .
}

# Query to find the party of Romano Prodi
SELECT ?prodiParty WHERE {
  dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
378,24,val,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warCommanded ?claimToFame WHERE {
  # Identify Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón a dbo:Person .

  # Find wars he commanded, specifically the Peninsular War
  OPTIONAL {
    ?warCommanded dbo:commander dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón .
    FILTER (CONTAINS(LCASE(STR(?warCommanded)), ""peninsular war""))
    BIND(?warCommanded AS ?peninsularWar)
  }

  # Find his claim to fame, such as awards or notable achievements
  OPTIONAL {
    ?claimToFame dbo:recipient dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,11,val,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of Mieszko II Lambert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Boleslaus I, Duke of Bohemia
  dbr:Boleslaus_I,_Duke_of_Bohemia dbo:child ?mieszko .
  
  # Mieszko II Lambert is the child of Boleslaus I
  ?mieszko a dbo:Person ;
          rdfs:label ""Mieszko II Lambert""@en .

  # Find children (grandchildren of Boleslaus I) of Mieszko II Lambert
  ?mieszko dbo:child ?grandchild .
  
  # Filter grandchildren who are royalty
  ?grandchild a dbo:Royalty .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
659,22,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  
  ?campaign a dbo:MilitaryConflict ;
            rdfs:label ""German campaign of 1813""@en .

  ?person dbo:commanderOf ?militaryForce .
  ?militaryForce dbo:militaryConflict ?campaign .
}
```",3,6,4,2,2,3,3,71,0,0,7,0,0.0,0
281,37,val,"Give me the war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?country WHERE {
  # Find the leader of the 1962 NSW state election
  ?leader a dbo:Politician ;
          dbo:officeHolderOf dbr:1962_New_South_Wales_state_election .

  # Ensure the birthplace is a country
  ?leader dbo:birthPlace ?country .
  ?country a dbo:Country .

  # Find wars involving the New Zealand Army
  ?war dbo:participatedIn ?newZealandArmy .
  ?newZealandArmy dbr:New_Zealand_Army .

  # Link the country to the war
  ?war dbo:placeOfBirth ?country .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
378,37,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  # Resource for Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  dbr:Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón a dbo:Person .
  
  # Linking the person to a military conflict as a commander
  ?conflict dbo:militaryConflictType ?type .
  ?conflict dbo:commander dbr:Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón .

  # Ensuring the conflict is related to or similar to the Peninsular War
  OPTIONAL { 
    ?conflict dbo:partOf dbr:Peninsular_War .
  }
  
  FILTER EXISTS {
    ?conflict dbo:militaryConflictType ?type .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,20,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Jim Sheppard""@en .
  ?person dbo:bandMemberOf dbr:Nevermore .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
54,41,val,Give me the parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity WHERE {
  # Find child of Narapati I of Ava
  ?narapatiI a dbo:Person ;
             rdfs:label ""Narapati I of Ava""@en .
  
  ?childOfNarapatiI dbo:parent ?narapatiI .

  # Find father of Soe Min Wimala Dewi and his child
  ?soeMinWimalaDewi a dbo:Person ;
                   rdfs:label ""Soe Min Wimala Dewi""@en .
  
  ?fatherOfSoeMinWimalaDewi dbo:child ?soeMinWimalaDewi .

  ?childOfFather dbp:parent ?fatherOfSoeMinWimalaDewi .

  # Find predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameittaThiriMahaDhammaDewi a dbo:Person ;
                             rdfs:label ""Ameitta Thiri Maha Dhamma Dewi of Ava""@en .
  
  ?predecessor dbp:successor ?ameittaThiriMahaDhammaDewi .

  # Find common entity
  ?commonEntity = ?childOfNarapatiI ;
                 = ?childOfFather ;
                 = ?predecessor .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
251,14,val,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleLocation ?partyAdministration WHERE {
  # Find the location of the Battle of Marengo
  dbr:Battle_of_Marengo a dbo:Battle ;
                        dbo:location ?battleLocation .

  # Find the ruling political party in Sicily and its administration
  ?region a dbo:AdministrativeRegion ;
          rdfs:label ""Sicily""@en .
  
  ?government dbo:governingBody ?region ;
              dbo:member ?party .
  
  ?party a dbo:PoliticalParty ;
         dbo:headquarters ?partyAdministration .

}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
712,13,val,"Give me the capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  # Find the military unit involved in Vyoshenskaya Uprising
  ?militaryUnit dbo:wikiPageWikiLink dbr:Vyoshenskaya_Uprising .
  
  # Determine the country of this military unit
  ?militaryUnit dbo:country ?country .

  # Get the capital city of that country
  ?country dbo:capital ?capital .
}
```",3,5,4,3,1,3,2,20,3,2,0,0.6,1.0,0.7499999999999999
9,31,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?allenHillAlmaMater ?mayorAlmaMater WHERE {
  # Part 1: Alma Mater of Allen Hill (Scientist)
  ?allenHill a dbo:Scientist ;
             foaf:name ""Allen Hill"" ;
             dbo:almaMater ?allenHillAlmaMater .

  # Part 2: Alma Mater of the Mayor of an Organization in Belfast
  ?organization a dbo:Organization ;
                dbo:location dbr:Belfast .
  ?mayor a dbo:Mayor ;
         dbo:officeHolderOf ?organization ;
         dbo:almaMater ?mayorAlmaMater .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,33,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Person died in Algeria (French Algeria)
  ?deathEvent dbo:place ?deathPlace .
  ?deathPlace rdfs:label ""Algeria""@en .
  FILTER(LANG(?deathPlace) = 'en') .

  # Person was commander in the Battle of Verdun
  ?battle dbo:commander ?person .
  ?battle rdfs:label ""Battle of Verdun""@en .
  FILTER(LANG(?battle) = 'en') .

  # Person was a commander in some military conflict (war)
  ?conflict dbo:commander ?person .
  ?conflict rdf:type dbo:MilitaryConflict .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,36,val,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Romano Prodi""@en ;
          dbo:birthName ?birthName .
  ?person dbo:partyAffiliation ?party .
  FILTER (?party = dbr:Partito_Popolare_Italiano)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
778,14,val,"Give me the author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?software WHERE {
  ?author a dbo:Person .
  ?work dbr:pushd ; dbo:author ?author .
  ?work2 dbr:popd ; dbo:author ?author .
  
  ?software dbo:author ?author ;
            a dbo:Software .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
959,29,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Identify Yōichi Masuzoe
  ?person a dbo:Person ;
          foaf:name ""Yōichi Masuzoe""@en .
  
  # Find his residence and check if it is a country
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .

  # Determine his native country based on the residence
  ?person dbo:nationality ?nativeCountry .

  # Confirm association with University of Tsukuba
  ?person dbo:almaMater dbr:University_of_Tsukuba .

  # Verify management role in Júbilo Iwata during 2013
  OPTIONAL {
    ?person dbo:managerOf dbr:Júbilo_Iwata .
    ?managementPeriod dbo:startYear ""2013""^^xsd:gYear .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
820,12,val,Give me the professional in  and child of the parent of Jason Schwartzman.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?parent a dbo:Person ;
          dbo:child dbr:Jason_Schwartzman .
  
  ?child a dbo:Person ;
         dbo:parent ?parent ;
         dbo:profession ?professional .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
801,18,val,Give me the professional in  and producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for professional and producer of Westside Story (song)
SELECT ?professional ?producer WHERE {
  VALUES ?resource { dbr:Westside_Story_(song) }
  
  # Find the composer or lyricist
  OPTIONAL { 
    ?resource dbo:composer ?professional .
    FILTER NOT EXISTS { ?resource dbo:lyricist ?other . } 
  }
  OPTIONAL { 
    ?resource dbo:lyricist ?professional .
    FILTER NOT EXISTS { ?resource dbo:composer ?other . } 
  }

  # Find the producer
  OPTIONAL {
    ?resource dbo:producer ?producer .
  }
}

# Query for associated musical artist of Chris Taylor (music producer)
SELECT ?artist WHERE {
  dbr:Chris_Taylor_(music_producer) dbo:associatedMusicalArtist ?artist .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
184,20,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?greatGrandchild WHERE {
  # Archduke Joseph Karl of Austria
  dbr:Archduke_Joseph_Karl_of_Austria a dbo:Person .
  
  # Find his child
  ?child dbo:parent dbr:Archduke_Joseph_Karl_of_Austria ;
         a dbo:Person .

  # Find the grandchild (child of Joseph Karl's child)
  ?grandChild dbo:parent ?child ;
              a dbo:Person .

  # Find the great-grandchild (child of Joseph Karl's grandchild) who is also parent of Géza von Habsburg
  ?greatGrandchild dbo:parent ?grandChild ;
                   dbo:parent dbr:Géza_von_Habsburg ;
                   a dbo:Person .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,28,val,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi a dbo:Person ;
                   dbo:child ?father .

  # Identify the child of this father who is also a predecessor and parent
  ?father dbo:child ?candidate .
  
  # Check if candidate is a predecessor to Ameitta Thiri Maha Dhamma Dewi of Ava
  OPTIONAL { 
    ?candidate dbo:predecessor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .
  }

  # Verify that the candidate is a parent of Thado Minsaw of Prome
  ?candidate dbo:child dbr:Thado_Minsaw_of_Prome .

  # Ensure the candidate is not Soe Min Wimala Dewi herself
  FILTER (?candidate != ?soeMinWimalaDewi)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
161,21,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?franco a dbo:Person ;
          rdfs:label ""Francisco Franco""@en .
  
  ?campaign a dbo:MilitaryConflict ;
            rdfs:label ""Biscay Campaign""@en .

  ?franco dbo:commanderOf ?campaign .

  ?campaign dbo:militaryForce ?militaryForce .
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
435,13,val,"Give me the region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?administeredTerritory WHERE {
  # Identify the country known as ""Land of fire and ice""
  VALUES ?country { dbr:Iceland }
  
  # Find the region associated with GMT
  ?region dbo:timeZone ?timeZone .
  FILTER (str(?timeZone) = ""GMT"" || str(?timeZone) = ""UTC"")
  
  # Ensure this region is related to Iceland
  ?country dbo:capital ?region .

  OPTIONAL {
    # Find territories administered from the capital or settlement
    ?administeredTerritory dbo:administers ?region .
  }
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
54,40,val,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Anawrahta is the child of Thinkhaya of Pagan
  ?thinkhaya a dbo:Person ;
             foaf:name ""Thinkhaya""@en .
  
  ?anawrahta a dbo:Person ;
             foaf:name ""Anawrahta""@en ;
             dbo:childOf ?thinkhaya .

  # Anawrahta is the parent of Thado Minsaw
  ?thadoMinsaw a dbo:Person ;
               foaf:name ""Thado Minsaw""@en .
  
  ?anawrahta dbo:parentOf ?thadoMinsaw .

  # Anawrahta is the predecessor of Ameitta Thiri Maha Dhamma Dewi
  ?ameitta a dbo:Person ;
           foaf:name ""Ameitta Thiri Maha Dhamma Dewi""@en .
  
  ?anawrahta dbo:predecessor ?ameitta .

  # Return Anawrahta as the person fitting all criteria
  ?person = ?anawrahta .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,37,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find Indalecio Prieto's predecessor
  ?prieto a dbo:Person ;
          foaf:name ""Indalecio Prieto""@en .
  
  ?predecessor dbo:successor ?prieto ;
               foaf:name ?name .

  # Identify the commander of the Biscay Campaign
  ?commander a dbo:Person ;
             foaf:name ?name ;
             dbo:commanded ?campaign .
             
  ?campaign dbo:name ""Biscay Campaign""@en .

  # Find the military force associated with this person
  ?militaryForce dbo:commander ?commander ;
                 a dbo:MilitaryUnit .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
421,14,val,Give me the native of the birthplace of Samir Bekrić and band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfBirthplace WHERE {
  # Find Samir Bekrić's birthplace
  dbr:Samir_Bekrić a dbo:Person .
  dbr:Samir_Bekrić dbo:birthPlace ?birthplace .

  # Find band members of Senidah
  ?member dbo:bandMemberOf dbr:Senidah ;
          dbo:nativeCountryOrRegion ?nativeCountry .

  # Check if the birthplace of Samir Bekrić is native to any band member of Senidah
  FILTER (?birthplace = ?nativeCountry)
  
  BIND(?birthplace AS ?nativeOfBirthplace)
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
9,25,val,Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?figure WHERE {
  # Find the nickname of Queen's University Belfast
  dbr:Queen's_University_Belfast dbo:nickname ?nickname .
  
  # Find Allen Hill and his alma mater
  dbr:Allen_Hill dbo:almaMater ?almaMater .

  # Ensure the nickname refers to the same institution as Allen Hill's alma mater
  FILTER (?nickname = ?almaMater)
  
  # Return the figure (institution) that matches both conditions
  BIND(?almaMater AS ?figure)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,43,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Princess Victoria Louise of Prussia and her spouse
  dbr:Princess_Victoria_Louise_of_Prussia a dbo:Person .
  ?princessSpouse dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia ;
                  dbo:child ?royalChild .

  # Ensure the child is royalty
  ?royalChild rdf:type dbo:RoyalFamilyMember .

  # Parent of this royal child who is also royalty
  ?parentOfRoyalChild dbo:child ?royalChild .
  FILTER (?parentOfRoyalChild != ?princessSpouse) .
  ?parentOfRoyalChild rdf:type dbo:RoyalFamilyMember .

  # Prince George William of Hanover and his parent
  dbr:Prince_George_William_of_Hanover a dbo:Person ;
                                       dbo:child ?parentOfRoyalChild .

  # Ernest Augustus, Crown Prince of Hanover and his child
  dbr:Ernest_Augustus,_Crown_Prince_of_Hanover a dbo:Person ;
                                               dbo:child ?parentOfRoyalChild .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,26,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  ?leader a dbo:Politician ;
          dbo:electedAsLeaderOf ?election .
  
  FILTER (CONTAINS(LCASE(STR(?election)), ""2010 japanese house of councillors election""))

  ?leader dbo:residence ?residence .

  OPTIONAL { ?residence a dbo:Country . }
  
  ?residence dbo:nativeCountry ?nativeCountry
}
```",3,5,4,3,1,3,3,71,0,0,8419,0,0.0,0
391,42,val,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find actors of ""The Departed""
  ?film dbo:title ""The Departed""@en .
  ?film dbo:castMember ?actor .

  # Identify Hub City (Charleston, SC) native
  ?person dbo:nativePlace dbr:Charleston,_South_Carolina .
  
  # Check if the actor is the same person as the Hub City native
  FILTER (?actor = ?person)

  # Find works with Roz Ryan that are both movies and television shows
  ?work dbo:castMember ?actor ;
        dbo:castMember dbr:Roz_Ryan ;
        (dbo:film|dbo:televisionSeries) .

}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
378,22,val,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Carl Pontus Gahn's war involvement
SELECT ?war WHERE {
  dbr:C._P._Gahn dbo:participatedIn ?war .
}

# Query for the commander of the Great Siege of Gibraltar and their claim to fame
SELECT ?commander ?fame WHERE {
  dbr:Great_Siege_of_Gibraltar dbo:commander ?commander .
  OPTIONAL { ?commander dbo:famousFor ?fame }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
232,37,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor a dbo:Person .
  ?actor dbo:occupation dbo:Actor ;
         dbo:occupation dbo:Narrator ;
         dbo:occupation dbo:Producer .
  ?actor dbo:birthPlace dbr:London .
  
  # Assuming claim to fame includes filmography and military conflict
  ?film dbo:starring ?actor .
  ?conflict dbo:participant ?actor .

  FILTER EXISTS { ?film a dbo:Film . }
  FILTER EXISTS { ?conflict a dbo:MilitaryConflict . }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
959,28,val,"Give me the native of Japan and manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  # Find Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?almaMater .
  
  # Ensure the alma mater is a Japanese university and educational institution
  ?almaMater a dbo:University ;
            dbo:country dbr:Japan ;
            a dbo:EducationalInstitution .

  # Find the manager of Júbilo Iwata in 2013 (assuming this information is available)
  OPTIONAL {
    ?manager dbo:position ""Manager""@en .
    ?manager dbo:managedTeam dbr:Júbilo_Iwata .
    ?manager dbo:managementPeriod ?period .
    FILTER (?period >= ""2013-01-01""^^xsd:date && ?period <= ""2013-12-31""^^xsd:date)
  }
}
```",4,8,5,2,3,3,3,71,0,1,1,0.0,0.0,0
232,40,val,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the actor of ""Dog Soldiers""
  dbr:Dog_Soldiers (dbo:starring) ?actor .

  # Get Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?jonBirthName .

  # Find a person born with Jon Pertwee's birth name and native to London
  ?person dbo:birthName ?jonBirthName ;
          dbo:nativePlace dbr:London .
  
  # Identify the child of this person
  ?child dbo:parent ?person .
  
  # Return the actor from ""Dog Soldiers""
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
77,11,val,Give me the force of Alexander I of Russia and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Alexander I of Russia's military force
SELECT ?army WHERE {
  dbr:Alexander_I_of_Russia dbo:commander ?person .
  ?person dbo:army ?army .
}

# Query for individuals awarded the Golden Weapon for Bravery
SELECT ?recipient WHERE {
  ?recipient dbo:award ?award .
  ?award rdfs:label ""Golden Weapon for Bravery""@en .
}
```",3,3,4,2,2,3,2,20,0,0,11,0,0.0,0
959,33,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  ?person a dbo:Politician .
  ?person dbo:electedAs dbr:2010_Japanese_House_of_Councillors_election .
  ?person dbo:almaMater dbr:University_of_Tsukuba .
  ?person dbo:residence ?residence .
  ?residence dbo:country ?nativeCountry .
}
```",4,6,5,3,2,3,3,71,0,0,84,0,0.0,0
16,29,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?profession WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person ;
          dbo:profession ?profession .

  # Identify Georgeanne Marie Rice and her spouse Ted McGinley
  ?rice a dbo:Person ;
        dbo:birthName ""Georgeanne Marie Rice""@en ;
        dbo:spouse dbr:Ted_McGinley .
  
  # Ensure the person is both Georgeanne Marie Rice and the spouse of Ted McGinley
  FILTER (?person = ?rice)
}
```",4,4,5,2,3,3,3,71,1,2130,0,0.0004692632566870014,1.0,0.0009380863039399625
427,44,val,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?prodiParty WHERE {
  # Find Lamberto Andreotti's father and his party affiliation
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .

  # Find Romano Prodi's party affiliation
  dbr:Romano_Prodi a dbo:Politician ;
                  dbo:officeHolder true ;
                  dbo:partyAffiliation ?prodiParty .

  # Ensure reference to Partito Popolare Italiano
  OPTIONAL { ?fatherParty rdfs:label ""Partito Popolare Italiano""@it }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
666,13,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInManager WHERE {
  # Identify Leonid Slutsky as a football coach
  ?slutsky a dbo:Person ;
           foaf:name ""Leonid Slutsky"" ;
           dbo:manager ?team .

  # Ensure the team is both a soccer club and a sports team season
  ?team a dbo:SoccerClub, dbo:SportsTeamSeason .

  # Find the player in the manager who is also a sports manager for this team
  ?playerInManager a dbo:Person ;
                   dbo:manager ?team ;
                   dbo:occupation dbr:Sports_Manager .
}
```",3,6,4,3,1,3,2,20,0,0,28,0,0.0,0
801,43,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?work a dbo:Song .
  
  ?professional a dbo:MusicalArtist ;
               dbo:producedBy ?work .

  ?associatedWork a dbo:Song ;
                  dbo:producer ?professional .

  ?chrisTaylor dbr:Chris_Taylor_(music_producer) ;
               dbo:associatedBandMember ?professional .
}
```",5,9,6,3,3,3,3,71,0,0,2,0,0.0,0
767,19,val,"Give me the entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carl L. Nippert"" .
  
  ?person dbo:almaMater ?institution .
  
  ?institution a dbo:EducationalInstitution ;
               dbo:locatedIn ?settlement .
  
  ?settlement dbo:administers dbr:Green .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
427,35,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?prodi a dbo:Person ;
         foaf:name ""Romano Antonio Prodi""@en ;
         dbo:partyAffiliation ?party .
  
  ?party rdfs:label ?partyLabel .
  
  FILTER (CONTAINS(LCASE(?partyLabel), ""italian people's party"") && 
          CONTAINS(LCASE(STR(?party)), ""1994""))
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,26,val,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             rdfs:label ""Antiochus""@en ;
             dbo:father dbr:Antiochus_III_the_Great .

  # Find his successor
  ?successor dbo:predecessor ?antiochus .

  # Identify the child of the successor
  ?child dbo:parent ?successor .

  # Ensure the child is royalty
  ?child rdf:type dbo:Royalty .

  # Find the spouse of this royal child
  ?child dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
9,19,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?allenHillAlmaMater ?mayorAlmaMater WHERE {
  # Find Allen Hill's alma mater
  ?person a dbo:Scientist ;
          foaf:name ""Allen Hill"" .
  ?person dbo:almaMater ?allenHillAlmaMater .

  # Find the mayor of Northern Ireland Forum who is a politician and their alma mater
  ?mayor a dbo:Politician ;
         dbo:positionHeld dbr:Northern_Ireland_Forum_Mayor .
  ?mayor dbo:almaMater ?mayorAlmaMater .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
281,24,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?war WHERE {
  # Find Bob Heffron's birth place and ensure it is a country
  ?heffron a dbo:Person ;
           foaf:name ""Bob Heffron""@en ;
           dbo:birthPlace ?place .
  
  ?place a dbo:Country .

  BIND(?place AS ?country)

  # Find the war associated with the New Zealand Army
  dbr:New_Zealand_Army dbo:participatedInWar ?war .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
994,43,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Meshuggah and Fredrik Thordendal
  ?meshuggah a dbo:Band ;
             dbo:bandMember ?thordendal .
  FILTER (STR(?thordendal) = ""Fredrik_Thordendal"") .
  
  ?meshuggah dbo:associatedMusicalArtist ?artist .

  # Slayer and S.A. Slayer
  ?slayer a dbo:Band ;
          dbo:bandMember ?sa_slayer .
  FILTER (STR(?sa_slayer) = ""S._A._Slayer"") .

  ?slayer dbo:associatedMusicalArtist ?artist .

  # Dokken and Don Dokken
  ?dokken a dbo:Band ;
          dbo:bandMember ?don_dokken .
  FILTER (STR(?don_dokken) = ""Don_Dokken"") .

  ?dokken dbo:associatedMusicalArtist ?artist .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
701,32,val,Give me the parent of the child of Nefertari and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Find Nefertari's child and their parent
  ?childNefertari dbo:parent ?parent .
  ?childNefertari dbo:mother dbr:Nefertari .

  # Find Ramesses II's child and their parent
  ?childRamessesII dbo:parent ?parent .
  ?childRamessesII dbo:father dbr:Ramses_II .

  # Ensure the same parent is returned for both children
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
55,18,val,"Give me the band of the reference, that is a band, to Newsted and band member of Metallica.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?newsted a dbo:Person ;
           foaf:name ""Jason Newsted""@en .
  ?band a dbo:Band ;
        dbo:bandMember ?newsted .
  FILTER NOT EXISTS { 
    ?metallica a dbo:Band ;
               foaf:name ""Metallica""@en ;
               dbo:bandMember ?newsted .
  }
}
```",3,4,4,2,2,2,3,28,1,0,2,1.0,0.3333333333333333,0.5
92,25,val,Give me the band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?artist WHERE {
  # Find Joe Satriani's band
  OPTIONAL {
    ?satriani a dbo:Person ;
              foaf:name ""Joe Satriani"" .
    ?satriani dbo:associatedBand ?band .
  }
  
  # Find Jim Sheppard's associated artist
  OPTIONAL {
    ?sheppard a dbo:Person ;
              foaf:name ""Jim Sheppard"" .
    ?sheppard dbo:associatedBand ?artist .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,36,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit WHERE {
  # Beauchamp Seymour, 1st Baron Alcester as a person and politician
  dbr:Beauchamp_Seymour_1st_Baron_Alcester a dbo:Person .
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:officeHolder ?office .
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:memberOf ?politicalGroup .

  # Link to military unit in New Zealand Army
  ?militaryUnit a dbo:MilitaryUnit ;
                dbo:partOf dbr:New_Zealand_Army .
  
  # Beauchamp Seymour's connection to the military unit
  OPTIONAL { ?militaryUnit dbo:commander dbr:Beauchamp_Seymour_1st_Baron_Alcester . }
  OPTIONAL { ?militaryUnit dbo:member dbr:Beauchamp_Seymour_1st_Baron_Alcester . }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,39,val,"Give me the actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Actors of ""The Departed""
  { 
    ?movie a dbo:Film ;
           rdfs:label ""The Departed""@en .
    ?movie dbo:starring ?actor .
  }
  
  UNION
  
  # Actors from movies that are also works and television shows
  {
    ?movie a dbo:Film, dbo:Work, dbo:TelevisionShow ;
           dbo:starring ?actor .
  }
}
```",4,7,5,3,2,3,3,71,7,12274,0,0.0005699861574790326,1.0,0.0011393229166666665
767,41,val,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?settlement WHERE {
  # Find George K. Nash's alma mater
  ?nash a dbo:Person ;
        foaf:name ""George K. Nash"" ;
        dbo:almaMater ?almaMater .

  OPTIONAL {
    # Find entities in his administration that are settlements
    ?officeHolder dbo:officeHolder ?nash .
    ?officeHolder dbo:location ?settlement .
    FILTER (isBlank(?settlement) || ?settlement a dbo:Settlement)
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
659,44,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?commander a dbo:Person ;
             rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  
  ?militaryForce a dbo:MilitaryConflict ;
                 dbo:commanderIn ?commander .

  OPTIONAL { 
    ?conflict a dbo:MilitaryConflict ;
              dbo:commanderIn dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
    
    FILTER EXISTS {
      ?militaryForce = ?conflict
    }
  }

  OPTIONAL { 
    ?campaign a dbo:MilitaryCampaign ;
              rdfs:label ""German campaign of 1813""@en .

    ?commander dbo:commanderIn ?campaign .
  }
}
```",5,10,6,2,3,3,3,71,0,0,7,0,0.0,0
528,32,val,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle (GROUP_CONCAT(DISTINCT ?war; separator="", "") AS ?wars) 
       ?commander WHERE {
  VALUES ?battle { dbr:Battle_of_Pisagua dbr:Battle_of_La_Rinconada_de_Ate }
  
  ?battle dbo:partOf ?war .
  OPTIONAL { ?battle dbo:commander ?commander . FILTER(?commander != '') }

} GROUP BY ?battle ?commander
```",4,4,5,2,2,3,3,71,0,0,8,0,0.0,0
294,12,val,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?restingPlace WHERE {
  VALUES (?person ?name) { 
    (dbr:Luke_Lea ""Luke Lea"") 
    (dbr:Edwin_A._Keeble ""Edwin A. Keeble"")
  }
  
  ?person a dbo:Person ;
          rdfs:label ?name ;
          dbo:deathPlace ?place .

  OPTIONAL {
    ?person dbo:burialLocation ?restingPlace .
  }

  FILTER (CONTAINS(LCASE(?place), ""nashville, tennessee""))
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
48,15,val,"Give me the band of Murda Mook and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?murdaMookBand ?writerBand WHERE {
  # Find Murda Mook's band
  ?murdaMook a dbo:Person ;
             foaf:name ""Murda Mook"" .
  ?bandMember dbo:bandMember ?murdaMook ;
              dbo:musicalArtist ?murdaMookBand .

  # Find Shellback's work
  ?shellback a dbo:Person ;
             foaf:name ""Shellback (record producer)"" .
  ?work dbo:recordProducer ?shellback ;
        dbo:workType dbr:Songs .

  # Find the writer of that work
  ?writer dbo:writer ?work ;
          a dbo:Person .

  # Find the band of the writer
  ?bandMember2 dbo:bandMember ?writer ;
               dbo:musicalArtist ?writerBand .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
547,40,val,Give me the resting place of Simon Cadell and resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Simon Cadell's resting place
SELECT ?restingPlace WHERE {
  dbr:Simon_Cadell a dbo:Person .
  dbr:Simon_Cadell dbo:deathPlace ?restingPlace .
}

UNION

# Query for Alan Cunningham's resting place
SELECT ?restingPlace WHERE {
  dbr:Alan_Cunningham a dbo:Person .
  dbr:Alan_Cunningham dbo:deathPlace ?restingPlace .
}

UNION

# Query for the child of the child of William Haliburton's resting places
SELECT DISTINCT ?grandchildRestingPlace WHERE {
  dbr:William_Haliburton a dbo:Person .
  ?child dbo:parent dbr:William_Haliburton ;
         a dbo:Person .
  ?grandchild dbo:parent ?child ;
              a dbo:Person .
  ?grandchild dbo:deathPlace ?grandchildRestingPlace .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,40,val,Give me the band member of Don Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist1 ?associatedArtist2 WHERE {
  # Step 1: Find band members of Don Dokken
  ?band a dbo:Band ;
        dbo:bandMember ?member .
  FILTER (STR(?band) = ""Don_Dokken"")

  BIND(?member AS ?bandMember)

  # Step 2: Find associated musical artist of Red Tide
  ?redTideArtist a dbo:MusicalArtist ;
                 dbo:associatedMusicalArtist ?artist1 .
  FILTER (STR(?redTideArtist) = ""Red_Tide_(band)"")

  BIND(?artist1 AS ?associatedArtist1)

  # Step 3: Find associated musical artist of the above result
  ?artist2 a dbo:MusicalArtist ;
           dbo:associatedMusicalArtist ?watchtower .
  FILTER (STR(?artist2) = STR(?associatedArtist1))

  BIND(?artist2 AS ?associatedArtist2)

  # Step 4: Check for reference to Watchtower
  ?watchtower a dbo:Band ;
              rdfs:label ""Watchtower"" .

}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,15,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of Alessandro Mangiarratti.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?club a dbo:SoccerClub .
  ?club a dbo:Organization .
  ?club rdfs:label ?label .
  
  OPTIONAL { ?club dbo:nickname ?nickname . }
  
  ?heeb dbo:member ?club ;
        foaf:name ""Armando Heeb""@en .
  
  ?mangiarratti dbo:member ?club ;
                foaf:name ""Alessandro Mangiarratti""@en .

  FILTER (CONTAINS(LCASE(?label), ""sports club"") && CONTAINS(LCASE(?label), ""soccer club""))
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,21,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person1 ?person2 WHERE {
  # Find the death place of Joseph C. Satterthwaite
  dbr:Joseph_C._Satterthwaite dbo:deathPlace ?place .

  # Find a person who died at the same place as Joseph C. Satterthwaite
  ?person1 a dbo:Person .
  ?person1 dbo:deathPlace ?place .

  # Find a person who died in Algiers
  ?person2 a dbo:Person .
  ?person2 dbo:deathPlace dbr:Algiers .
}
```",3,3,4,2,2,3,3,71,16,2272,0,0.006993006993006993,1.0,0.013888888888888888
994,21,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalAssociatedArtist WHERE {
  # Step 1: Find Don Dokken's band
  ?band a dbo:Band ;
        dbo:bandMember dbr:Don_Dokken .

  # Step 2: Find Watchtower's associated musical artist
  ?watchtowerAssociatedArtist dbo:associatedMusicalArtist dbr:Watchtower .

  # Step 3: Find the associated musical artist of the result from step 2
  ?finalAssociatedArtist dbo:associatedMusicalArtist ?watchtowerAssociatedArtist .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
44,7,val,Give me the band member of the band of John Pettibone and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find band members of bands associated with John Pettibone
  {
    ?person a dbo:Person ;
            foaf:name ""John Pettibone"" .
    ?person dbo:band ?band .
    ?band dbo:member ?bandMember .
  }
  
  UNION
  
  # Find band members of Sledgeback
  {
    dbr:Sledgeback dbo:member ?bandMember .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
645,11,val,"Give me the alma mater of Sylvia Pankhurst and entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?sylvia a dbo:Person .
  ?sylvia foaf:name ""Sylvia Pankhurst"" .
  ?sylvia dbo:almaMater ?almaMater .
}

UNION

SELECT ?country WHERE {
  ?james a dbo:Person .
  ?james foaf:name ""James Wilkes Maurice"" .
  ?james dbo:residence ?residence .
  ?residence a dbo:Country .
  BIND(?residence AS ?country)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
712,12,val,Give me the capital of South Russia (1919–1920) and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for the capital of South Russia (1919–1920)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  ?event a dbo:Event .
  ?event dbo:location ?place .
  ?place rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""south russia"") && CONTAINS(LCASE(?label), ""1919-1920""))
  ?event dbo:politicalLeader ?leader .
  ?capital dbo:headOfState ?leader ;
           a dbo:City .
}

# Query for the resting place of an awardee of Hero of the Soviet Union
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?restingPlace WHERE {
  ?person dbo:honoraryTitle dbr:Hero_of_the_Soviet_Union .
  OPTIONAL { 
    ?person dbo:deathPlace ?restingPlace .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
485,17,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in Nottinghamshire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Erich_Gregory_Award .
  ?person dbo:occupation [a dbo:Writer ; a dbo:Poet] .
  ?person dbo:residence dbr:Nottinghamshire .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
488,44,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of Enomoto Takeaki and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceYukiFather ?birthPlaceEnomoto ?administrationGoMizunooFather WHERE {
  # Part 1: Death place of Yūki Hideyasu's father (Politician)
  ?yuki a dbo:Person ;
        foaf:name ""Yūki Hideyasu""@en .
  ?yuki dbo:father ?fatherYuki .
  ?fatherYuki a dbo:Politician ;
              dbo:deathPlace ?deathPlaceYukiFather .

  # Part 2: Birth place of Enomoto Takeaki
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomoto .

  # Part 3: Administration of Emperor Go-Mizunoo's father
  dbr:Emperor_Go-Mizunoo dbo:father ?fatherGoMizunoo .
  OPTIONAL { ?fatherGoMizunoo dbo:office ?administrationGoMizunooFather }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
303,18,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Arnulfo Arias Madrid"" ;
          dbo:nationality dbr:Panama ;
          dbo:politicalParty ?party .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,17,val,"Give me the professional in  and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?band WHERE {
  VALUES ?person { dbr:Luke_Vibert }
  
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  ?person dbo:profession ?profession .
  OPTIONAL { ?person dbo:memberOfBand ?band . }

  FILTER EXISTS { ?person dbo:artist true } .

  FILTER (?profession = dbo:Musician || ?profession = dbo:Bandleader)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
92,22,val,Give me the band member of Nevermore and band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Find band members of Nevermore
SELECT DISTINCT ?member WHERE {
  ?band a dbo:Band ;
        rdfs:label ""Nevermore""@en .
  ?band dbo:bandMember ?member .
}

UNION

# Part 2: Find the band associated with Joseph Michael Furney
SELECT DISTINCT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael Furney"" .
  ?person dbo:birthName ?name .
  FILTER (STR(?name) = ""Joseph Michael Furney"")
  ?person dbo:bandMember ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
251,18,val,Give me the administration of Forza Italia (2013) and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace WHERE {
  # Part 1: Administration of Forza Italia in 2013
  OPTIONAL {
    ?party a dbo:PoliticalParty .
    ?party rdfs:label ""Forza Italia""@en .
    ?role dbo:positionHeldBy ?person .
    ?role dbo:organization ?party .
    ?role dbo:endDate ?endDate .
    FILTER (YEAR(?endDate) >= 2013)
    BIND(""Administration of Forza Italia in 2013"" AS ?administration)
  }

  # Part 2: Death place of the author of The Twelve Abbots of Challant
  OPTIONAL {
    ?book a dbo:Book .
    ?book rdfs:label ""The Twelve Abbots of Challant""@en .
    ?book dbo:author ?author .
    ?author dbo:deathPlace ?deathPlace .
  }
}
```",3,3,4,2,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
827,11,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildFather WHERE {
  # Find William Ernest's father
  ?william a dbo:Person ;
           rdfs:label ""William Ernest, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?william dbo:father ?father .

  # Find Maria Pavlovna's children who are royalty
  ?maria a dbo:Person ;
         rdfs:label ""Maria Pavlovna of Russia (1786–1859)""@en .
  ?child dbo:parent ?maria ;
         a dbo:RoyalFamilyMember ; # Assuming this class exists for royalty

  # Find the child of Maria Pavlovna's royal child
  ?grandchild dbo:parent ?child .

  # Ensure the grandchild is also royalty
  ?grandchild a dbo:RoyalFamilyMember ;

  # Get the father of that grandchild
  ?grandchild dbo:father ?grandchildFather .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
184,43,val,"Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Find parent of Géza von Habsburg
SELECT ?parentGéza WHERE {
  dbr:Géza_von_Habsburg dbo:parent ?parentGéza .
}

# Find parent of Archduchess Ilona of Austria
SELECT ?parentIlona WHERE {
  dbr:Archduchess_Ilona_of_Austria dbo:parent ?parentIlona .
}

# Find child of the child of the parent of Archduke Ladislaus Philipp of Austria who is a royalty
SELECT ?royaltyChild WHERE {
  # Parent of Archduke Ladislaus Philipp of Austria
  dbr:Archduke_Ladislaus_Philipp_of_Austria dbo:parent ?parentLadislaus .
  
  # Child of the parent (grandchild of Archduke)
  ?grandchild a dbo:Person ;
             dbo:parent ?parentLadislaus .

  # Child of the grandchild
  ?royaltyChild dbo:parent ?grandchild .

  # Ensure the final child is royalty
  ?royaltyChild a dbo:Royalty .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
488,23,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Identify Saitō Hajime and his birthplace
  dbr:Saitō_Hajime a dbo:Person ;
                   dbo:birthPlace ?birthPlace .

  # Ensure the war is identified as a military conflict, event, and societal event
  OPTIONAL { 
    ?war dbo:militaryConflict true .
    ?war a dbo:Event .
    ?war a dbo:SocietalEvent .
    dbr:Saitō_Hajime dbo:commanderOf ?war .
  }
}
```",3,6,4,3,1,3,3,71,0,0,17,0,0.0,0
492,39,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in Franco-Hova Wars
  ?event dbo:commander ?person ;
         rdf:type dbo:MilitaryConflict ;
         rdfs:label ""Franco-Hova Wars""@en .

  # Person decedent at the capital of Khemis Miliana District
  ?person dbo:deathPlace dbr:Khemis_Miliana .
  
  # Ensure Khemis Miliana is a settlement and the capital of its district
  dbr:Khemis_Miliana a dbo:Settlement ;
                     dbo:capitalOf dbr:Khemis_Miliana_District .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,24,val,Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of La Rinconada de Ate""@en .
  
  ?commander a dbo:Person ;
             foaf:name ""Narciso Campero"" ;
             dbo:commander ?force .

  ?force dbo:participatedIn ?battle .

  ?battle dbo:participatedInWar ?war .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
712,11,val,Give me the capital of the country of Armed Forces of South Russia and resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital (GROUP_CONCAT(?restingPlace; separator="", "") AS ?restingPlaces) WHERE {
  # Query for the capital of Russia
  dbr:Russia dbo:capital ?capital .

  # Query for Nina Onilova's resting place
  OPTIONAL {
    ?nina a dbo:Person ;
          foaf:name ""Nina Onilova"" ;
          dbo:deathPlace ?restingPlace .
  }
}
```",3,3,4,2,2,3,2,20,0,2,1,0.0,0.0,0
281,43,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Leader of the 1962 New South Wales state election
  OPTIONAL { 
    ?leader a dbo:Politician ;
            dbo:birthPlace ?place1 .
    ?place1 dbo:country ?country .
  }
  
  # Beauchamp Seymour, 1st Baron Alcester
  OPTIONAL {
    dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:birthPlace ?place2 .
    ?place2 dbo:country ?country .
  }

  # New Zealand Army (assuming we are looking for a notable leader)
  OPTIONAL {
    ?nzLeader a dbo:MilitaryPerson ;
              dbo:affiliation dbr:New_Zealand_Army ;
              dbo:birthPlace ?place3 .
    ?place3 dbo:country ?country .
  }
}
```",5,7,6,3,3,3,3,71,0,159,1,0.0,0.0,0
318,7,val,Give me the person born in the founding year of Eel Pie Publishing and professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the founding year of Eel Pie Publishing
  ?eelpiePublishing a dbo:Company .
  ?eelpiePublishing rdfs:label ""Eel Pie Publishing""@en .
  ?eelpiePublishing dbo:foundingDate ?foundingYear .

  # Find persons born in that founding year and are composers
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate ;
          dbo:occupation ?occupation .
  
  FILTER (YEAR(?birthDate) = YEAR(?foundingYear))
  FILTER EXISTS { 
    ?occupation rdfs:label ""Composer""@en .
  }
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
404,39,val,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Identify Prince Ernest Augustus of Hanover born in 1914
  ?prince a dbo:Person ;
          rdfs:label ""Prince Ernest Augustus of Hanover""@en ;
          dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1914)

  # Step 2: Find his parent
  ?parent dbo:child ?prince .

  # Step 3: Identify Princess Victoria Louise of Prussia and her spouse
  ?vl a dbo:Person ;
      rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?vl dbo:spouse ?spouse .

  # Step 4: Determine the father of her spouse
  ?father dbo:child ?spouse .

  # Step 5: Find the child of this father
  ?person dbo:parent ?father .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
339,12,val,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Grand Duchess Elena Vladimirovna of Russia and her child
  ?child1 dbo:parent dbr:Grand_Duchess_Elena_Vladimirovna_of_Russia .
  
  # George I of Greece and his child
  ?child2 dbo:parent dbr:George_I_of_Greece .

  # The father is the spouse of Grand Duchess Elena Vladimirovna
  ?father dbo:spouse dbr:Grand_Duchess_Elena_Vladimirovna_of_Russia .
  
  # The father is also a parent to both children
  ?child1 dbo:parent ?father .
  ?child2 dbo:parent ?father .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
328,32,val,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in force of Ferenc Szálasi
  ?szalasiCommander dbo:commanderInForce ?person ;
                   rdfs:label ""Ferenc Szálasi""@en .

  # Awardee of an award associated with Bruce Fraser, 1st Baron Fraser of North Cape
  ?fraserAward dbo:recipient ?person .
  ?fraser dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape ;
          dbo:award ?fraserAward .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
981,13,val,"Give me the entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Salak .
  ?entity dbo:timeZone ?tz .
  FILTER (str(?tz) = ""Asia/Jakarta"")
}
```",3,3,4,3,1,3,2,20,0,0,2949,0,0.0,0
754,14,val,Give me the parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  ?child dbo:childOf dbr:Ram_Khamhaeng_the_Great .
  ?child dbo:parent ?parent .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
16,27,val,Give me the person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ?birthName .
  ?person dbo:almaMater dbr:Ohio_State_University .
}
```",3,3,4,3,1,3,3,71,89,9,1,0.9081632653061225,0.9888888888888889,0.946808510638298
303,19,val,"Give me the entity in Panama and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Connection to Arnulfo Arias's party
  ?party a dbo:PoliticalParty ;
         dbo:member ?person ;
         dbo:leader dbr:Ari_Noriega ; # Assuming Noriega as an example leader, adjust if needed
  
  # Connection to the United States invasion of Panama
  ?invasionEvent a dbo:Event ;
                 dbo:location dbr:Panama ;
                 dbo:involvedParty ?party .
  
  # Ensure the person is a politician
  ?person dbo:occupation dbr:Politician .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
617,21,val,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Seleucus II Callinicus
  dbr:Seleucus_II_Callinicus a dbo:Person .
  
  # His child
  ?child dbo:parent dbr:Seleucus_II_Callinicus ;
         a dbo:Person .

  # The grandchild (child's child) who is royalty
  ?grandchild dbo:parent ?child ;
             a dbo:Royalty .

  # Ensure this grandchild is the parent of Nysa
  ?nysa dbo:spouse dbr:Nysa_of_Pontus ;
        dbo:parent ?grandchild .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
996,15,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?award WHERE {
  ?awardee a dbo:Person .
  ?awardee dbo:award ?award .
  ?award dbo:location dbr:Lac_d%27Avoriaz .
  ?award dbo:country dbr:France .
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
92,36,val,Give me the band of the person born as the birth name of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Joseph Michael"" .
  ?person dbo:bandMember dbr:Nevermore .
  ?person dbo:memberOfBand ?band .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,28,val,"Give me the commander in Franco-Hova Wars and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Find commander in Franco-Hova Wars
SELECT ?commander WHERE {
  ?commander a dbo:Person .
  ?commander dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""franco-hova wars"") || CONTAINS(LCASE(STR(?occupation)), ""commander""))
}

# Part 2: Find person decedent at the work of Joseph C. Satterthwaite and in Algiers
SELECT DISTINCT ?person WHERE {
  # Person who died while working under Joseph C. Satterthwaite
  OPTIONAL {
    ?person dbo:deathPlace ?place .
    FILTER(CONTAINS(LCASE(STR(?place)), ""work"") && CONTAINS(LCASE(STR(?place)), ""joseph c. satterthwaite""))
  }
  
  # Person who died in Algiers
  OPTIONAL {
    ?person dbo:deathPlace dbr:Algiers .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
232,21,val,Give me the native of London and child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?john a dbo:Person ;
        dbo:birthName ""John Devon Roland Pertwee""@en .
  
  ?john dbo:child ?child .

  ?child dbo:nativePlace dbr:London .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
645,15,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of Sylvia Pankhurst.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find the commander in Battle of Diamond Rock
  ?commander a dbo:Person ;
             dbo:commandedBattle dbr:Battle_of_Diamond_Rock .
  
  # Alma mater of Sylvia Pankhurst
  dbr:Sylvia_Pankhurst dbo:almaMater ?almaMater .

  # Residence country of the commander
  ?commander dbo:residenceCountry ?entity .

  # Ensure the residence is also an alma mater for Sylvia Pankhurst
  FILTER (?entity = ?almaMater)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
488,24,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  # Find Yūki Hideyasu and his father who is a politician
  ?yukiHideyasu a dbo:Person ;
                foaf:name ""Yūki Hideyasu""@en .
  ?father dbo:child ?yukiHideyasu ;
          dbo:occupation dbr:Politician ;
          dbo:deathPlace ?deathPlace .

  # Find the administration of Emperor Go-Yōzei
  OPTIONAL {
    ?emperorGoYozei a dbo:Person ;
                    foaf:name ""Emperor Go-Yōzei""@en .
    ?administration dbo:reigns ?emperorGoYozei .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
435,15,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?articleContent ?territory WHERE {
  # Find the constitution of Iceland
  ?constitution a dbo:Constitution .
  ?constitution dbo:country dbr:Iceland .

  # Retrieve content for Article 62, Section IV
  ?articleContent dbo:partOf ?constitution ;
                  rdfs:label ""Article 62, Section IV""@en .
  
  # Find territories administered by Iceland
  ?territory a dbo:Settlement ;
             dbo:administeredBy dbr:Iceland .

  FILTER (CONTAINS(LCASE(?territoryLabel), ""settlement"") && CONTAINS(LCASE(?territoryLabel), ""town""))
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
838,15,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić and band member of Kerber.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find the band Žika Jelić is a member of
  ?person1 dbr:Žika_Jelić .
  ?person1 dbo:bandMember ?band .

  # Find another person who is a member of Kerber and also in the same band
  ?person2 dbo:bandMember dbr:Kerber .
  ?person2 dbo:bandMember ?band .

  # Ensure the band has members classified as both Artist and MusicalArtist
  ?member dbo:bandMember ?band ;
          a dbo:Person, dbo:Artist, dbo:MusicalArtist .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,35,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event1 a dbo:MilitaryConflict .
  ?event2 a dbo:SocietalEvent, dbo:MilitaryConflict .

  ?commander dbo:commanderOf ?event1 .
  ?franco dbo:participatedIn ?event2 .

  FILTER (?commander != dbr:Franco_Francois_Marie_1892-1975)
  
  ?event1 dbo:participant ?emilioMola .
  ?emilioMola rdfs:label ""Emilio Mola""@en .

  ?franco rdfs:label ""Francisco Franco""@en .
}
```",4,8,5,2,2,3,3,71,0,0,34,0,0.0,0
421,12,val,Give me the native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović and band member of Senidah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .
  ?person dbo:birthName ""Edin Dervišhalidović""@en .
  ?bandMember dbo:bandMember ?person .
  ?bandMember rdfs:label ""Senidah""@en .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
391,41,val,"Give me the actor of All About the Andersons and native of the figure known as Hub City and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find the actor of ""All About the Andersons""
  ?film a dbo:Film ;
        rdfs:label ""All About the Andersons""@en .
  
  ?film dbo:starring ?actor .

  # Find native of Hub City (assuming it's Spartanburg, South Carolina)
  ?person dbo:nativePlace dbr:Spartanburg,_South_Carolina ;
          dbo:birthPlace dbr:Spartanburg,_South_Carolina ;
          a dbo:Person .
  
  FILTER (?actor = ?person)

  # Find actor of Michael Ballhaus's notable work (assuming ""Goodfellas"")
  ?notableFilm a dbo:Film ;
               rdfs:label ""Goodfellas""@en .

  ?notableFilm dbo:starring ?actor .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
115,7,val,Give me the alma mater of the alumnus of National University of San Marcos and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonAlmaMater WHERE {
  # Alma mater of Jorge Sotomayor Tello
  dbr:Jorge_Sotomayor_Tello dbo:almaMater ?jorgeAlmaMater .
  
  # Alumni of National University of San Marcos
  dbr:National_University_of_San_Marcos dbo:alumni ?alumnus .

  # Check if any alumnus has the same alma mater as Jorge Sotomayor Tello
  ?alumnus dbo:almaMater ?commonAlmaMater .
  
  FILTER (?jorgeAlmaMater = ?commonAlmaMater)
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
303,12,val,Give me the party of Guillermo Endara and party of Arnulfo Arias and entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?endaraParty ?ariasParty ?panamaEntity WHERE {
  # Guillermo Endara's party
  dbr:Guillermo_Endara a dbo:Person .
  dbr:Guillermo_Endara dbo:party ?endaraParty .

  # Arnulfo Arias' party
  dbr:Arnulfo_Arias a dbo:Person .
  dbr:Arnulfo_Arias dbo:party ?ariasParty .

  # Entity in Panama
  ?panamaEntity dbo:country dbr:Panama .
}
```",3,3,4,1,3,2,3,28,1,990,0,0.0010090817356205853,1.0,0.0020161290322580645
294,14,val,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of the architect of P. D. Houston Jr. House.","SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Luke Lea's resting place
SELECT ?leaRestingPlace WHERE {
  ?lea a dbo:Person .
  ?lea foaf:name ""Luke Lea"" .
  ?lea dbo:birthDate ?dateLea .
  FILTER (YEAR(?dateLea) = 1879)
  ?lea dbo:deathPlace ?leaRestingPlace .
}

UNION

# Query for the architect of P. D. Houston Jr. House's resting place
SELECT ?architectRestingPlace WHERE {
  dbr:P._D._Houston_Jr._House dbo:architect ?architect .
  ?architect a dbo:Person .
  ?architect dbo:deathPlace ?architectRestingPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,27,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?gustav a dbo:Person ;
          rdfs:label ""Gustav Jonson""@en .
  
  ?officeHolder dbo:officeHolder ?gustav ;
                a dbo:GovernmentAgency .

  ?officeHolder dbo:head ?leader .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
778,12,val,"Give me the entity in United States and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?software a dbo:Software .
  ?software dbo:author ?person .
  ?person foaf:name ""Bill Joy"" .
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ?countryLabel .
  FILTER (CONTAINS(LCASE(?countryLabel), ""united states""))
  ?entity dbo:work ?software .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
161,30,val,"Give me the military force of Rif War and military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifWarForce ?rifWarCommander 
     ?civilWarForce ?civilWarCommander 
WHERE {
  # Rif War military forces and commanders
  ?rifWar a dbo:War ;
          rdfs:label ""Rif War""@en .
  
  ?rifWarForce dbo:militaryForceOf ?rifWar ;
               dbo:commander ?rifWarCommander .

  # Spanish Civil War military forces and commanders
  ?civilWar a dbo:War ;
            rdfs:label ""Spanish Civil War""@en .
  
  ?civilWarForce dbo:militaryForceOf ?civilWar ;
                 dbo:commander ?civilWarCommander .

  # Emilio Mola's involvement in the Spanish Civil War
  OPTIONAL {
    dbr:Emilio_Mola dbo:participatedIn ?civilWar ;
                    dbo:commander ?civilWarCommander .
  }
}
```",4,5,5,2,3,3,3,71,0,0,11,0,0.0,0
994,30,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for associated musical artist of Red Tide (band)
SELECT ?associatedArtist WHERE {
  dbr:Red_Tide_(band) dbo:associatedBand ?artist .
  ?artist a dbo:MusicalArtist .
  BIND(?artist AS ?associatedArtist)
}

UNION

# Query for band member of Donald Maynard Dokken
SELECT ?bandMember WHERE {
  dbr:Don_Dokken dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1953 && MONTH(?date) = 3 && DAY(?date) = 29)
  dbr:Don_Dokken dbo:bandMember ?member .
  ?member a dbo:MusicalArtist .
  BIND(?member AS ?bandMember)
}

UNION

# Query for associated musical artist of S.A. Slayer
SELECT ?associatedArtist WHERE {
  dbr:S.A._Slayer dbo:associatedBand ?artist .
  ?artist a dbo:MusicalArtist .
  BIND(?artist AS ?associatedArtist)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
161,22,val,"Give me the military force of Rif War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event a dbo:Event .
  ?event rdfs:label ""Rif War""@en .
  ?event dbo:commander dbr:Emilio_Mola .
  ?event dbo:militaryForce ?militaryForce .
}
```",3,4,4,2,2,3,3,71,0,0,12,0,0.0,0
9,20,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Find the alma mater of an awardee of the Royal Medal
  { 
    ?person dbo:awardReceived dbr:Royal_Medal .
    ?person dbo:almaMater ?almaMater .
  }
  
  UNION
  
  # Find the alma mater of John Alderdice, Baron Alderdice
  {
    dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMater .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
360,17,val,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to Manfred Mann.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native ?referenceToManfredMann WHERE {
  # Get Winnie Madikizela-Mandela's death place
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Find natives of this settlement
  ?native dbo:nativeOf ?deathPlace ;
          a dbo:Person .

  OPTIONAL {
    # Check for any reference to Manfred Mann
    ?native dbo:wikiPageWikiLink dbr:Manfred_Mann .
    BIND(""Reference found"" AS ?referenceToManfredMann)
  }
  
  FILTER NOT EXISTS { 
    ?native dbo:wikiPageWikiLink dbr:Manfred_Mann . 
    BIND(""No direct reference"" AS ?referenceToManfredMann) 
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
378,33,val,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Carl Pontus Gahn""@en .
  
  ?person dbo:participatedIn ?war .

  OPTIONAL { 
    ?peninsularWar a dbo:MilitaryConflict ;
                   rdfs:label ""Peninsular War""@en .
    
    ?war dbo:relatedTo ?peninsularWar .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
996,13,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?force WHERE {
  ?award a dbo:Award .
  ?award dbo:location dbr:Lac_d'Avoriaz .
  ?award dbo:recipient ?recipient .

  OPTIONAL { 
    ?recipient dbo:mass ?mass .
    BIND(?mass AS ?force) # Assuming mass is used as a proxy for force
  }
}
```",3,3,4,3,1,3,2,20,0,0,11,0,0.0,0
281,34,val,Give me the war of the awardee of the award of Jonathon Band and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Part 1: Find Jonathon Band's Award
  ?jonathonBand a dbo:Person ;
               foaf:name ""Jonathon Band"" ;
               dbo:award ?award .

  # Part 2: Find Wars Involving the New Zealand Army
  dbr:New_Zealand_Army dbo:participatedIn ?war .
  
  # Combine results to find common wars
  OPTIONAL { ?award dbo:relatedTo ?war . }
}
```",4,4,5,3,2,3,3,71,0,0,9,0,0.0,0
55,15,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band of Newsted.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Step 1: Find the producer of ""Used to Love Her""
  ?production a dbo:Production .
  ?production dbo:title ""Used to Love Her"" ;
              dbo:producer ?producer .

  # Step 2: Find the band membership of this producer
  ?producer dbo:member ?bandProducer .

  # Step 3: Identify Jason Newsted's band
  dbr:Jason_Newsted dbo:member ?bandNewsted .

  # Step 4: Check for commonality between the bands
  FILTER (?bandProducer = ?bandNewsted)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
981,12,val,"Give me the birth place of the person born, that is a beauty queen, as  and entity in Indonesia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace ?birthPlace .
  ?pageant dbo:winner ?person .
  ?pageant dbo:country dbr:Indonesia .
}
```",3,4,4,2,2,3,2,20,0,0,19,0,0.0,0
534,11,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarter ?childBirthPlace WHERE {
  # Query for headquarter of Royal Dublin Society
  dbr:Royal_Dublin_Society a dbo:Organisation .
  OPTIONAL { dbr:Royal_Dublin_Society dbo:headquarters ?headquarter . }

  # Query for birth place of child who is a politician and office holder of Desmond FitzGerald
  dbr:Desmond_FitzGerald_(politician) dbo:child ?child .
  FILTER EXISTS {
    ?child a (dbo:Politician|dbo:OfficeHolder) .
  }
  OPTIONAL { ?child dbo:birthPlace ?childBirthPlace . }

}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
161,42,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?event WHERE {
  # Find the event where Emilio Mola was a commander
  ?militaryForce dbo:commander dbr:Emilio_Mola .
  
  # Ensure this military force is part of an event
  ?militaryForce dbo:event ?event .

  # The same event should be linked to Francisco Franco as part of a societal event and military conflict
  ?event dbo:participatedInMilitaryConflict ?conflict .
  ?conflict dbo:participant dbr:Franco_Francisco .
  
  # Ensure the event is also a societal event
  ?event rdf:type dbo:SocietalEvent .

  # Filter to ensure it's a military conflict
  ?event rdf:type dbo:MilitaryConflict .
}
```",5,9,6,2,3,3,3,71,0,0,32,0,0.0,0
801,35,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?writer a dbo:Writer .
  ?writer rdfs:label ""DMX""@en .
  ?work dbo:creator ?writer ;
        rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  ?artist a dbo:MusicalArtist ;
          dbo:aliasName ""The Shadow""@en ;
          dbo:associatedBandOrMusicalGroup ?writer .

  FILTER (LANG(?artist) = 'en')
}
```",4,6,5,2,2,3,3,71,0,0,22,0,0.0,0
801,32,val,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?realName ?professionalRole WHERE {
  # Find The Shadow's real name
  dbr:The_Shadow a dbo:Person ;
                 foaf:name ""The Shadow"" .
  
  OPTIONAL { 
    dbr:The_Shadow foaf:name ?realName .
  }
  
  # Find the work by 50 Cent where this person is a producer
  ?work dbo:producer ?person ;
        dbo:musicalWork dbr:50_Cent .

  # Get the professional role of the person in that context
  OPTIONAL {
    ?person dbo:profession ?professionalRole .
  }
}
```",4,7,5,2,2,3,3,71,0,0,27,0,0.0,0
534,12,val,Give me the birth place of Garret FitzGerald and headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?headquarter WHERE {
  # Query for Garret FitzGerald's birth place
  OPTIONAL {
    dbr:Garrett_FitzGerald a dbo:Person .
    dbr:Garrett_FitzGerald dbo:birthPlace ?birthPlace .
  }
  
  # Query for the headquarters of the owner of RDS Arena
  OPTIONAL {
    dbr:RDS_Arena dbo:owner ?owner .
    ?owner dbo:headquarter ?headquarter .
  }
}
```",3,3,4,2,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
392,16,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in Italy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province WHERE {
  ?person rdfs:label ""Sebastiano Bianchetti""@en .
  ?person a dbo:Person .

  ?residence dbo:resident ?person ;
             a dbo:Settlement ;
             dbo:country dbr:Italy .

  ?residence dbo:administrativeRegion ?province .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
421,18,val,Give me the person born as the birth name of Dino Merlin and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Dino Merlin"" .
  OPTIONAL { ?person dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
488,25,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the death place of Tokugawa Ieyasu
SELECT ?deathPlace WHERE {
  dbr:Tokugawa_Ieyasu a dbo:Person .
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}

UNION

# Query for the administration of Emperor Go-Mizunoo's father
SELECT ?administration WHERE {
  ?father dbo:child dbr:Emperor_Go-Mizunoo ;
          dbo:administration ?administration .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,23,val,Give me the child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify Jon Pertwee and his birth name
  ?jon a dbo:Person ;
       rdfs:label ""Jon Pertwee""@en ;
       dbo:birthName ?birthName .

  # Step 2: Find children of Jon Pertwee using the birth name as a filter
  ?child dbo:parent ?jon .
}
```",3,3,4,3,1,3,3,71,1,0,0,1.0,1.0,1.0
488,18,val,Give me the birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace ?administration WHERE {
  # Enomoto Takeaki's birth place
  dbr:Enomoto_Takeaki a dbo:Person .
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu a dbo:Person .
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .

  # Emperor Go-Yōzei's administration period
  dbr:Emperor_Go-Yozei a dbo:Monarch .
  dbr:Emperor_Go-Yozei dbo:reign ?administration .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
820,13,val,Give me the professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find the book ""Understanding Comics""
  ?book a dbo:Book ;
        rdfs:label ""Understanding Comics""@en .
  
  # Identify its author
  ?book dbo:author ?author .

  # Find awards associated with the author
  ?award dbo:recipient ?author ;
         dbo:givenBy ?professional .

}
```",3,3,4,3,1,3,2,20,0,0,39650,0,0.0,0
378,25,val,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?claimToFame WHERE {
  # Find the war Joaquín Blake participated in
  ?joaquin a dbo:Person ;
           rdfs:label ""Joaquín Blake""@en ;
           dbo:participatedIn ?event .
  
  ?event rdfs:label ?war .

  # Find his claim to fame during the Great Siege of Gibraltar
  OPTIONAL {
    ?joaquin dbo:role ?roleEvent .
    ?roleEvent rdfs:label ?claimToFame .
    FILTER CONTAINS(LCASE(?claimToFame), ""great siege of gibraltar"")
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
281,32,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?war WHERE {
  # Find Bob Heffron's birth place and ensure it is a country
  ?heffron a dbo:Person ;
           foaf:name ""Bob Heffron"" ;
           dbo:birthPlace ?place .
  
  ?place a dbo:Country ;
         rdfs:label ?country .

  # Find the awardee of Knight Grand Cross of the Order of the Bath and their associated war
  ?awardee a dbo:Person ;
           dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath ;
           dbo:militaryConflict ?war .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
492,41,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  # Frédéric-Georges Herr as a commander in a military conflict
  ?herr a dbo:Person ;
        foaf:name ""Frédéric-Georges Herr""@en .
  
  ?conflict a dbo:MilitaryConflict ;
           dbo:commander ?herr .

  # Decedent at Algiers
  ?algiersEvent a dbo:Event ;
                dbo:decedentAtEvent ?person1 ;
                dbo:location dbr:Algiers .

  # Joseph C. Satterthwaite's work related to the decedent event
  ?satterthwaite a dbo:Person ;
                 foaf:name ""Joseph C. Satterthwaite""@en .
  
  ?workEvent a dbo:Event ;
             dbo:decedentAtEvent ?person2 ;
             dbo:relatedTo ?satterthwaite .

  # Linking the events
  FILTER (?person1 = ?person2)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
232,43,val,"Give me the native of London and child of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Jon Pertwee as parent
  ?parent a dbo:Person ;
          foaf:name ""Jon Pertwee"" ;
          dbo:child ?person .

  # Native of London
  ?person dbo:nativePlace dbr:London .

  # Actor, narrator, and producer roles
  ?person dbo:actor ?filmOrConflict .
  ?person dbo:narrator ?filmOrConflict .
  ?person dbo:producer ?filmOrConflict .

  # Claim to fame is a film or military conflict
  FILTER (
    EXISTS { ?filmOrConflict a dbo:Film . }
    || EXISTS { ?filmOrConflict a dbo:MilitaryConflict . }
  )
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
747,19,val,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Retrieve the birth date of Pavlo Khudzik
SELECT ?birthDate WHERE {
  dbr:Pavlo_Khudzik a dbo:Person .
  dbr:Pavlo_Khudzik dbo:birthDate ?birthDate .
}

# Step 2: Use the retrieved birth date to find other people born on that date
SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (?date = <REPLACE_WITH_PAVLO_KHUDZIK_BIRTH_DATE>)
}
```

Note: The second query requires the actual birth date of Pavlo Khudzik to be substituted in place of `<REPLACE_WITH_PAVLO_KHUDZIK_BIRTH_DATE>`.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,11,val,Give me the spouse of Aristotle Onassis and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Aristotle Onassis's spouse
  dbr:Aristotle_Onassis a dbo:Person ;
                       dbo:spouse ?spouse .

  # Ensure the spouse is also the parent of Tina Onassis Niarchos's child
  ?child dbo:parent ?spouse .
  ?child dbo:parent dbr:Tina_Onassis_Niarchos .
}
```",3,3,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
547,43,val,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  # James Burton (Egyptologist)
  { 
    VALUES ?person { dbr:James_Burton_(Egyptologist) }
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Alan Cunningham
  { 
    VALUES ?person { dbr:Alan_Cunningham_(explorer) }
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Actor from the show with Emily Richard (The Archers)
  {
    ?show dbo:castMember ?actor .
    ?actor dbo:spouse ?emilyRichard ; 
           rdfs:label ?actorLabel .
    FILTER CONTAINS(LCASE(?actorLabel), ""the archers"") .
    OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
  }

  # Resource for The Archers
  VALUES ?show { dbr:The_Archers_(radio_drama) }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
801,21,val,Give me the associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Chris Taylor's association with Vampire Weekend
  { 
    ?person rdfs:label ""Chris Taylor (music producer)""@en .
    ?person dbo:associatedBand dbr:Vampire_Weekend .
    ?person dbo:associatedBand ?artist .
  }
  
  UNION
  
  # The Shadow as an alter ego of Jonathan Davis, associated with Korn
  { 
    ?person rdfs:label ""Jonathan Davis""@en .
    ?person dbo:alterEgo dbr:The_Shadow_(Korn) .
    ?person dbo:associatedBand ?artist .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
435,18,val,Give me the region of Greenwich Mean Time and work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?work WHERE {
  # Find the region associated with GMT
  ?region a dbo:Region .
  ?region dbo:timeZone dbr:Greenwich_Mean_Time .

  # Find the author of ""Iceland"" and their works
  ?book a dbo:Book ;
        dbo:title ""Iceland""@en ;
        dbo:author ?author .
  
  ?work a dbo:Book ;
        dbo:author ?author .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,20,val,Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Condition for receiving the Order of Suvorov
  ?person dbo:award ?orderSuvorov .
  ?orderSuvorov rdfs:label ""Order of Suvorov""@en .

  # Condition for being a commander under Ferenc Szálasi
  ?person dbo:militaryCommanderOf ?szalasiForce .
  ?szalasiForce dbo:commander ?ferencSzalasi .
  ?ferencSzalasi rdfs:label ""Ferenc Szálasi""@en .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
754,12,val,Give me the parent of the child of Ram Khamhaeng and parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find child of Ram Khamhaeng
  ?child dbo:parent dbr:Ram_Khamhaeng .
  
  # Find parent of the child of Ram Khamhaeng
  ?child dbo:parent ?parent1 .

  # Find child of Loe Thai
  ?child2 dbo:parent dbr:Loe_Thai .
  
  # Find parent of the child of Loe Thai
  ?child2 dbo:parent ?parent2 .

  FILTER (?parent1 = ?parent2)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
994,32,val,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Step 1: Find associated musical artist of Watchtower
  ?watchtower a dbo:Band ;
              rdfs:label ""Watchtower""@en .
  
  ?watchtower dbo:associatedBand ?person1 .
  
  # Step 2: Find the associated musical artist of that person
  ?person1 dbo:associatedBand ?artist1 .

  # Step 3: Identify Meshuggah's band member who is also a Band and Group and Organisation
  ?meshuggah a dbo:Band ;
             rdfs:label ""Meshuggah""@en .
  
  ?meshuggah dbo:member ?person2 .
  
  ?person2 a dbo:Band, dbo:Group, dbo:Organization .

  # Step 4: Find the associated musical artist of that person
  ?person2 dbo:associatedBand ?artist2 .
}
```",4,7,5,2,2,3,3,71,0,0,5,0,0.0,0
391,19,val,Give me the native of the figure known as Hub City and actor of The Departed.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCity WHERE {
  # Find the city known as Hub City
  ?city a dbo:Place ;
        dbo:alias ""Hub City""@en .
  
  # Identify the actor from The Departed
  ?actor dbo:film dbr:The_Departed ;
         a dbo:Actor .

  # Get the birthplace of that actor
  ?actor dbo:birthPlace ?nativeCity .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,18,val,Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?civilWarForce ?rifWarForce WHERE {
  # Find the commander in the Biscay Campaign during the Spanish Civil War
  ?commander a dbo:Person .
  ?commander dbo:commanderOfMilitaryConflict dbr:Biscay_Campaign .

  # Find military forces involved in the Spanish Civil War
  ?civilWarForce dbo:militaryConflictsInvolvedIn dbr:Spanish_Civil_War .

  # Find military forces involved in the Rif War
  ?rifWarForce dbo:militaryConflictsInvolvedIn dbr:Rif_War .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
48,13,val,"Give me the band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Identify Shellback as a record producer
  dbr:Shellback a dbo:RecordProducer .

  # Find works produced by Shellback
  ?work dbo:recordProducer dbr:Shellback .
  
  # Determine writers for these works
  ?work dbo:writer ?writer .

  # Identify bands of the writers
  ?writer dbo:band ?band .
}
```",3,4,4,3,1,3,2,20,0,0,922,0,0.0,0
54,23,val,Give me the child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Thinkhaya of Pagan
  dbr:Thinkhaya_of_Pagan a dbo:Person .
  
  # One of his children
  ?child dbo:father dbr:Thinkhaya_of_Pagan ;
         a dbo:Person .

  # The child of this child (grandchild)
  ?grandchild dbo:father ?child ;
              a dbo:Person .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
435,19,val,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:Iceland ;
          dbo:residence ?territory .
  
  ?territory a dbo:Settlement, dbo:Town ;
            dbo:timeZone dbr:Greenwich_Mean_Time .

  FILTER (CONTAINS(LCASE(?territoryLabel), ""land of fire and ice""))
}
```",4,7,5,2,3,2,3,28,0,0,1,0,0.0,0
314,14,val,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  # Find awards received by Sergei Makovetsky
  dbr:Sergei_Makovetsky a dbo:Person ;
                       dbo:award ?award .

  # Find other awardees of the same award
  ?otherAwardee a dbo:Person ;
                dbo:award ?award .

  # Filter those who died in Madrid
  ?otherAwardee dbo:deathPlace dbr:Madrid .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,15,val,"Give me the parent of Mieszko II Lambert and child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Step 1: Find Mieszko II Lambert's parent
  ?mieszko2 a dbo:Person ;
            rdfs:label ""Mieszko II Lambert""@en .
  ?parent_mieszko2 dbo:child ?mieszko2 .

  # Step 2: Find the child of Mieszko II Lambert's parent
  ?childOfParent_mieszko2 dbo:parent ?parent_mieszko2 ;
                          a dbo:Person .

  # Step 3: Find Mlada (Abbess)'s parent
  ?mlada a dbo:Person ;
         rdfs:label ""Mlada (abbess)""@en .
  ?parent_mlada dbo:child ?mlada .

  # Step 4: Find the child of Mlada's parent
  ?childOfParent_mlada dbo:parent ?parent_mlada ;
                       a dbo:Person .

  # Step 5: Ensure this person is royalty
  ?childOfChild dbo:parent ?childOfParent_mlada .
  ?childOfChild dbo:royaltyStatus ?status .
  FILTER (?status = ""Royalty"" || ?status = ""Monarch"")

  # Final condition to match the child of the child from Mieszko II Lambert's parent
  VALUES ?childOfChild { ?childOfParent_mieszko2 }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,17,val,"Give me the party of Arnulfo Arias and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?country WHERE {
  # Find the political party of Arnulfo Arias
  OPTIONAL { 
    dbr:Arnulfo_Arias dbo:politicalAffiliation ?party .
  }
  
  # Find the country of El Valle de Antón
  OPTIONAL {
    dbr:El_Valle_de_Antón dbo:country ?country .
  }
}
```",3,4,4,2,2,2,3,28,0,1,1,0.0,0.0,0
392,12,val,Give me the region of Central European Time and entity in Italy and province of Schio.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?province a dbo:Province ;
            rdfs:label ""Schio""@en .
  ?province dbo:country dbr:Italy .
  ?region dbo:timeZone dbr:Central_European_Time ;
          dbo:contains ?province .
  ?entity dbo:locatedIn ?region .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
285,12,val,Give me the spouse of the professional in  and parent of Alexander Onassis.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  VALUES ?onassis { dbr:Aristotle_Onassis }
  
  ?onassis dbo:child ?parent .
  ?parent dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,2,20,0,2,2,0.0,0.0,0
492,22,val,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # People who died in French Algeria
  {
    ?person a dbo:Person .
    ?person dbo:deathPlace dbr:French_Algeria .
  }
  
  UNION
  
  # People who died in Algiers, the capital of Algeria
  {
    ?person a dbo:Person .
    ?person dbo:deathPlace dbr:Algiers .
  }
}
```",3,4,4,2,2,3,3,71,16,120,0,0.11764705882352941,1.0,0.21052631578947367
16,32,val,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of Satomi Ishihara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Ted Martin McGinley""@en .
  ?person dbo:spouse ?spouse .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
378,35,val,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Carl Pontus Gahn's birth date
SELECT ?person ?birthDate WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}

# Query for the commander of the Great Siege of Gibraltar and their claim to fame
SELECT ?commander ?claimToFame WHERE {
  ?event dbo:place dbr:Gibraltar ;
         dbo:participatedIn ?commander .
  FILTER regex(?event, ""Great Siege"", ""i"") .
  
  OPTIONAL { ?commander dbo:notableFor ?claimToFame . }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
747,40,val,"Give me the band of Amba Shepherd and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfAmba ?bandOfShena ?athlete WHERE {
  # Find Amba Shepherd's band
  ?amba a dbo:Person ;
        foaf:name ""Amba Shepherd"" .
  ?amba dbo:member ?bandOfAmba .

  # Find Shèna's band
  ?shena a dbo:Person ;
         foaf:name ""Shèna"" .
  ?shena dbo:member ?bandOfShena .

  # Find the decedent who died in Zolotonosha and get their birth date
  ?decedent a dbo:Person ;
            dbo:deathPlace dbr:Zolotonosha .
  ?decedent dbo:birthDate ?birthDateDecedent .

  # Find an athlete and soccer player born on the decedent's birth date
  ?athlete a dbo:Person, dbo:Athlete ;
           dbo:sport dbr:Soccer ;
           dbo:birthDate ?birthDate .
  FILTER (?birthDate = ?birthDateDecedent)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
783,14,val,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  dbr:Ebony_Reigns a dbo:Person .
  dbr:Ebony_Reigns dbo:musicalArtist true .
  dbr:Ebony_Reigns dbo:artist true .
  ?bandMember dbo:bandMemberOf dbr:Ebony_Reigns .
}
```",3,5,4,3,1,3,2,20,0,0,7,0,0.0,0
161,27,val,"Give me the commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?person rdfs:label ""El Director""@en .
  ?event a dbo:Event .
  ?event dbo:commander ?person .
}
```",3,4,4,3,1,3,3,71,0,0,85,0,0.0,0
427,31,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?andreottiParty ?pintoPartyName WHERE {
  # Find Giulio Andreotti's party
  dbr:Giulio_Andreotti a dbo:Person .
  OPTIONAL { dbr:Giulio_Andreotti dbo:party ?andreottiParty . }
  
  # Find Michele Pinto's party name
  dbr:Michele_Pinto a dbo:Person .
  OPTIONAL { dbr:Michele_Pinto dbo:party ?pintoParty . }
  OPTIONAL { ?pintoParty rdfs:label ?pintoPartyName FILTER (lang(?pintoPartyName) = ""en"") . }
}
```",4,4,5,3,2,3,3,71,2,5,0,0.2857142857142857,1.0,0.4444444444444445
54,25,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonPerson WHERE {
  # Find Thado Minsaw of Prome and his parent
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw of Prome""@en .
  ?parent a dbo:Person ;
          dbo:child ?thadoMinsaw .

  # Find Thihapate of Mohnyin and his successor
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .
  ?successor a dbo:Person ;
              dbo:predecessor ?thihapate .

  # Ensure the successor is an office holder or royalty
  OPTIONAL { ?successor dbo:officeHolder ?office . }
  OPTIONAL { ?successor a dbo:Royalty . }

  # Find common person who is both parent of Thado Minsaw and predecessor of successor to Thihapate
  FILTER (?parent = ?commonPerson)
  FILTER (?thihapate != ?commonPerson) # Ensure it's not the same person
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
820,11,val,Give me the child of Jack Schwartzman and professional in the award of Scott McCloud.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Jack Schwartzman's child
  ?person a dbo:Person ;
          dbo:spouse ?spouse .
  ?spouse a dbo:Person ;
          rdfs:label ""Jack Schwartzman""@en .
  
  ?child dbo:parent ?person .

  # Identify the award associated with Scott McCloud (Eisner Award)
  dbr:Scott_McCloud dbo:awardReceived dbr:Eisner_Award_for_Best_Writer_or_Penciller_Story .

  # Find professionals in the field related to the Eisner Award
  ?child a dbo:Person ;
         dbo:profession ?profession .
  
  FILTER (
    ?profession IN (dbr:Comics, dbr:Graphic_novel)
  )
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,25,val,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             rdfs:label ""Antiochus (son of Antiochus III the Great)""@en .
  
  # Identify his child
  ?child dbo:parent ?antiochus .

  # Find Laodice IV's spouse
  ?laodiceIV dbr:Laodice_IV ;
             dbo:spouse ?spouse .

  # Check if the child of Antiochus is also a parent to the spouse of Laodice IV
  ?spouse dbo:parent ?child .
  
  # The parent we are looking for is the same as the child's parent (Antiochus)
  BIND(?antiochus AS ?parent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,39,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?andreottiParty ?prodisBirthName ?officeHolder WHERE {
  # Giulio Andreotti's party
  dbr:Giulio_Andreotti a dbo:Person ;
                       dbo:party ?andreottiParty .

  # Romano Prodi's birth name
  dbr:Romano_Prodi a dbo:Person ;
                   dbo:birthName ?prodisBirthName .

  # Office holder and politician with the same birth name as Romano Prodi
  ?officeHolder a dbo:OfficeHolder, dbo:Politician ;
                dbo:birthName ?prodisBirthName .
}
```",4,6,5,3,2,3,3,71,3,4,0,0.42857142857142855,1.0,0.6
54,43,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Find Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw""@en .
  
  # Step 2: Find the parent of Thado Minsaw
  ?thadoMinsaw dbo:childOf ?parent .

  # Step 3: Find Ameitta Thiri Maha Dhamma Dewi of Ava and her predecessor
  ?ameitta a dbo:Person ;
           rdfs:label ""Ameitta Thiri Maha Dhamma Dewi""@en .
  
  ?predecessor a dbo:Person ;
               dbo:successor ?ameitta .

  # Step 4: Find Thinkhaya of Pagan and his child
  ?thinkhaya a dbo:Person ;
             rdfs:label ""Thinkhaya""@en .
  
  ?thinkhaya dbo:childOf ?child .

  # Combine the conditions to find the person who is both predecessor of Ameitta and child of Thinkhaya
  FILTER (?predecessor = ?child)

  # Step 5: Find the parent of this combined individual
  ?combinedIndividual a dbo:Person ;
                     rdfs:label ?childLabel .
  
  ?combinedIndividual dbo:parentOf ?parent .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
184,38,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild1 ?grandchild 
WHERE {
  # Find the child of Archduke Joseph Francis of Austria
  ?child1 dbo:child dbr:Archduke_Joseph_Francis_of_Austria .
  
  # The parent of this child is likely Archduke Joseph Francis himself
  ?parentOfChild1 dbo:spouse ?child1 .

  # Find the grandchild of Archduke Joseph Karl of Austria
  ?grandchild2 dbo:child ?child2 .
  ?child2 dbo:child dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Return both results
  BIND(?parentOfChild1 AS ?parent)
  BIND(?grandchild2 AS ?grandchild)
}
```",4,4,5,2,2,3,3,71,0,3,1,0.0,0.0,0
528,19,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?war WHERE {
  VALUES ?battle { 
    dbr:Battle_of_Pisagua 
    dbr:Orozimbo_Barbosa 
  }
  
  OPTIONAL {
    ?battle dbo:partOf ?war .
  }

  FILTER (?battle != ?war)
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
659,30,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813 and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force WHERE {
  # Rutger Jan Schimmelpenninck as a person
  dbr:Rutger_Jan_Schimmelpenninck a dbo:Person .

  # German campaign of 1813 and Battle of Leipzig as military conflicts
  ?campaign1 a dbo:MilitaryConflict ;
             rdfs:label ""German campaign of 1813""@en .
  ?battle2 a dbo:MilitaryConflict ;
           rdfs:label ""Battle of Leipzig""@en .

  # Schimmelpenninck's role in these events
  dbr:Rutger_Jan_Schimmelpenninck dbo:commander ?campaign1 ;
                                  dbo:commander ?battle2 .
  
  # The military force involved in these conflicts
  ?campaign1 dbo:militaryForce ?force ;
             dbo:participatedIn ?battle2 .
}
```",4,7,5,2,3,3,3,71,0,0,6,0,0.0,0
801,31,val,Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to get the producer of ""Westside Story"" (song)
SELECT ?producer WHERE {
  ?song a dbo:Song .
  ?song rdfs:label ""Westside Story""@en .
  ?song dbo:producer ?producer .
}

UNION

# Query to find the professional identity associated with The Shadow's alter ego
SELECT ?professionalIdentity WHERE {
  ?person a dbo:Person ;
          rdfs:label ""The Shadow""@en .
  OPTIONAL { 
    ?person dbo:narrativeText ?text .
    FILTER(CONTAINS(LCASE(?text), ""alter ego"") && CONTAINS(LCASE(?text), ""true self""))
  }
  ?person dbo:profession ?professionalIdentity .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
251,15,val,"Give me the death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?warLocation WHERE {
  # Laura Mancinelli's death place
  OPTIONAL {
    ?mancinelli a dbo:Person ;
               rdfs:label ""Laura Mancinelli""@en .
    ?mancinelli dbo:deathPlace ?deathPlace .
  }

  # Louis François Félix Musnier's war location
  OPTIONAL {
    ?musnier a dbo:Person ;
             rdfs:label ""Louis François Félix Musnier""@en .
    ?service dbo:militaryService ?musnier ;
             dbo:conflict ?war .
    ?war a dbo:MilitaryConflict ;
         dbo:location ?warLocation .
  }
}
```",3,4,4,2,2,2,3,28,2,1,0,0.6666666666666666,1.0,0.8
996,12,val,Give me the entity in the award of Ekrem Akurgal and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ekremAward ?wurmserForce WHERE {
  # Subquery for Ekrem Akurgal's award
  OPTIONAL {
    ?ekrem a dbo:Person ;
           foaf:name ""Ekrem Akurgal"" .
    ?ekrem dbo:award ?ekremAward .
  }

  # Subquery for Dagobert Sigmund von Wurmser's military force
  OPTIONAL {
    ?wurmser a dbo:Person ;
             foaf:name ""Dagobert Sigmund von Wurmser"" .
    ?wurmser dbo:commander ?force .
    ?force a dbo:MilitaryUnit .
    BIND(?force AS ?wurmserForce)
  }
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
404,35,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Ernest Augustus, Duke of Brunswick
  dbr:Ernest_Augustus,_Duke_of_Brunswick a dbo:Person .
  
  # Find his father
  ?father dbo:father dbr:Ernest_Augustus,_Duke_of_Brunswick .

  # Determine the spouse of this father
  ?spouse dbo:spouse ?father .

  # Identify the child born as royalty, specifically Princess Victoria Louise of Prussia
  ?child dbo:parent ?spouse .
  ?child a dbo:Person .
  ?child rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  OPTIONAL { ?child dbo:royalTitle ?title . }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
92,33,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find the actor of ""Return to Nuke 'Em High Volume 1""
SELECT ?actor WHERE {
  ?film a dbo:Film .
  ?film dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?film dbo:starring ?actor .
}

# Query to find the band member of Nevermore
SELECT ?bandMember WHERE {
  ?band a dbo:Band .
  ?band dbo:name ""Nevermore""@en .
  ?band dbo:bandMember ?bandMember .
}
```

To complete this task, you would need to execute both queries and manually check for any common individuals between the results.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
232,29,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London and child of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  # Identify Sean Pertwee
  dbr:Sean_Pertwee a dbo:Person ;
                   dbo:birthPlace dbr:London ;
                   dbo:parent dbr:Jon_Pertwee .

  # Find films associated with him that are also linked to military conflicts
  ?film dbo:actor dbr:Sean_Pertwee .
  ?film dbo:militaryConflict ?conflict .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
161,34,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Francoist_Spain .
  ?person dbo:commanderOf ?campaign .
  ?campaign rdfs:label ""Biscay Campaign""@en .
  
  ?event dbo:militaryConflict ?conflict .
  ?conflict dbo:participatingMilitaryForce ?militaryForce .
  ?event dbo:societalEvent ?societyEvent .
  ?societyEvent a dbo:SocietalEvent .

  FILTER (EXISTS { ?person dbo:commanderOf ?campaign } &&
          EXISTS { ?event dbo:militaryConflict ?conflict } &&
          EXISTS { ?event dbo:societalEvent ?societyEvent })
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
281,39,val,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:Person .
  
  # Entity is part of a military unit in the New Zealand Army
  ?militaryUnit a dbo:MilitaryUnit ;
                dbo:militaryBranch dbr:New_Zealand_Army .
  ?entity dbo:memberOf ?militaryUnit .

  # Entity has a profession related to war
  ?profession a dbo:WarProfession .
  ?entity dbo:profession ?profession .

  # Entity is an office holder and politician in New Zealand
  ?officeHolder a dbo:OfficeHolder ;
                dbo:country dbr:New_Zealand .
  ?entity dbo:officeHolder ?officeHolder .

  ?politician a dbo:Politician ;
              dbo:country dbr:New_Zealand .
  ?entity dbo:politician ?politician .

  # Entity is related to the Colony of New Zealand
  ?colony a dbo:Colony ;
          dbo:country dbr:New_Zealand .
  ?entity dbo:relatedTo ?colony .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
77,15,val,Give me the force of Alexander I of Russia and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Alexander I of Russia's military force
SELECT ?force WHERE {
  dbr:Alexander_I_of_Russia a dbo:Person .
  OPTIONAL { dbr:Alexander_I_of_Russia dbo:commander ?force . }
}

# Query for Maxim Grigorievich Vlasov's award and associated war
SELECT ?award ?war WHERE {
  dbr:Maxim_Grigorievich_Vlasov a dbo:Person .
  OPTIONAL { dbr:Maxim_Grigorievich_Vlasov dbo:award ?award . }
  OPTIONAL { ?award dbo:relatedWar ?war . }
}
```",4,4,5,3,2,3,2,20,0,0,20,0,0.0,0
184,23,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?landmark a dbo:Settlement .
  ?landmark dbo:elevation ""96.0""^^xsd:float .
  
  ?native dbo:nativeOf ?landmark .
  
  ?native dbo:birthPlace ?place .
  ?place dbo:country ?parent .
}
```",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
404,28,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the child of Ernest Augustus, Crown Prince of Hanover
  ?parent a dbo:Person ;
          foaf:name ""Ernest Augustus, Crown Prince of Hanover"" .
  
  ?child dbo:parent ?parent .

  # Ensure this child is a parent of Prince Ernest Augustus of Hanover (born 1914)
  ?child dbo:child dbr:Prince_Ernest_Augustus_of_Hanover_(1914-1987) .

  # Check if the spouse is Princess Victoria Louise of Prussia
  ?child dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
487,12,val,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of 2022 Vermont House of Representatives election.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?person a dbo:Person ;
          foaf:name ""Philip Brian Scott""@en ;
          dbo:sport dbr:Soccer .
  
  OPTIONAL { 
    ?person dbo:officeHolder ?administration .
    ?administration dbo:election dbr:2022_Vermont_House_of_Representatives_election .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
666,12,val,Give me the player in Steve Bruce and figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Steve Bruce's association with players
  ?team a dbo:SoccerClub ;
        dbo:manager dbr:Steve_Bruce .
  
  ?player dbo:playsFor ?team .

  # England National Beach Soccer Team and its nickname
  ?beachTeam a dbo:SoccerTeam ;
             rdfs:label ""England national beach soccer team""@en ;
             dbo:nickname ?nickname .
             
  FILTER (str(?nickname) = ""The Seagulls"")

  ?player dbo:playsFor ?beachTeam .

}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
994,23,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?secondLevelArtist WHERE {
  # Step 1: Find an artist associated with Watchtower
  ?watchtowerEntity a dbo:MusicalArtist ;
                    dbo:associatedMusicalArtist ?firstLevelArtist .
  
  FILTER (STRSTARTS(STR(?watchtowerEntity), ""http://dbpedia.org/resource/Watchtower""))

  # Step 2: Find the associated musical artist of that first-level artist
  ?firstLevelArtist a dbo:MusicalArtist ;
                    dbo:associatedMusicalArtist ?secondLevelArtist .
}
```",3,3,4,3,1,3,3,71,0,0,16,0,0.0,0
701,33,val,Give me the parent of Meritamen and parent of the child of the child of Seti I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfMeritamen ?grandParent WHERE {
  # Part 1: Parent of Meritamen
  OPTIONAL {
    dbr:Meritamen a dbo:Person .
    ?parentOfMeritamen dbo:child dbr:Meritamen .
    ?parentOfMeritamen rdfs:label ?parentLabel .
  }

  # Part 2: Parent of the child of the child of Seti I
  OPTIONAL {
    dbr:Seti_I a dbo:Person .
    ?child1 dbo:child dbr:Seti_I .
    ?grandChild dbo:child ?child1 .
    ?grandParent dbo:parent ?grandChild .
    ?grandParent rdfs:label ?grandParentLabel .
  }
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
285,13,val,Give me the parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find Aristotle Onassis
  dbr:Aristotle_Onassis a dbo:Person ;
                        dbo:spouse ?spouse .

  # Find children of the spouse
  ?child dbo:parent ?spouse .
  
  # Find parents of those children (which could include the spouse or others)
  ?child dbo:parent ?parent .
}
```",3,3,4,3,1,3,2,20,4,0,1,1.0,0.8,0.888888888888889
994,35,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  ?dokken a dbo:Person ;
          foaf:name ""Donald Maynard Dokken"" ;
          dbo:musicalArtist ?musicalArtistDokken .

  # Step 2: Find band members of Dokken
  ?bandMember dbo:bandMemberOf ?musicalArtistDokken .

  # Step 3: Identify Watchtower (band) and its associated musical artists
  dbr:Watchtower a dbo:Band ;
                 dbo:associatedMusicalArtist ?associatedArtistWatchtower .

  # Step 4: Find the associated musical artists of the associated musical artist of Watchtower
  ?associatedArtistWatchtower dbo:associatedMusicalArtist ?finalAssociatedArtist .
  
  # Ensure that we are looking for band members related to Donald Maynard Dokken
  FILTER (?bandMember != ?musicalArtistDokken)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,36,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Gustav Jonson as an office holder and politician
  dbr:Gustav_Jonson a dbo:Person ;
                    dbo:officeHolder ?office ;
                    dbo:politician ?politics .

  # The government agency associated with Gustav Jonson's role
  ?office dbo:leader ?agencyLeader .
  
  # The leader of the agency who is also an awardee of Order of Suvorov
  ?agencyLeader a dbo:Person ;
               dbo:award dbr:Order_of_Suvorov .

  # Assigning the leader to the variable for output
  BIND(?agencyLeader AS ?leader)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
312,7,val,"Give me the entity in Italy and entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement ?region ?state WHERE {
  # Settlement and Region in Italy associated with Democratic Party
  ?settlement a dbo:PopulatedPlace ;
              dbo:country dbr:Italy ;
              dbo:isPartOf ?region .
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:politicalParty dbr:Democratic_Party_(Italy) .

  # State in Italy associated with Democratic Party
  ?state a dbo:State, dbo:AdministrativeTerritory ;
         dbo:country dbr:Italy ;
         dbo:politicalParty dbr:Democratic_Party_(Italy) .
}
```",3,7,4,2,2,2,2,9,0,0,587,0,0.0,0
747,27,val,Give me the band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person rdfs:label ""Shèna""@en .
  ?person a dbo:Person .
  ?person dbo:associatedBand ?band .
}
```",3,3,4,3,1,3,3,71,8,0,0,1.0,1.0,1.0
391,44,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie a dbo:Movie ;
         a dbo:Work ;
         a dbo:TelevisionShow .
  
  ?movie dbo:director dbr:Roz_Ryan .

  ?work dbo:claimToFame dbr:Michael_Ballhaus .
  
  ?actor dbo:nativePlace dbr:Compton,_California .
  
  ?movie dbo:actor ?actor .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,18,val,Give me the native of London and child of Jon Pertwee and actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Native of London
  ?person dbo:nativePlace dbr:London .

  # Child of Jon Pertwee
  ?childRelation dbo:parent dbr:Jon_Pertwee ;
                 dbo:child ?person .

  # Actor in Dog Soldiers (film)
  ?actorship dbo:actor ?person .
  ?actorship dbo:movie dbr:Dog_Soldiers_(2002_film) .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
547,27,val,Give me the resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipientRestingPlace WHERE {
  ?award a dbo:Award .
  ?award dbo:recipient ?recipient .
  ?ggrantAwardedBy dbr:Gerald_Graham .
  ?ggrantAwardedBy dbo:awarded ?award .
  
  OPTIONAL { 
    ?recipient dbo:finalRestingPlace ?recipientRestingPlace .
  }
}
```",3,3,4,3,1,3,3,71,0,0,704,0,0.0,0
16,19,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Ted Martin McGinley"" .
  ?person dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,15,val,Give me the spouse of Aristotle Onassis and parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?aristotleOnassis { dbr:Aristotle_Onassis }
  
  ?aristotleOnassis a dbo:Person .
  ?aristotleOnassis dbo:spouse ?spouse .

  ?child dbo:parent ?spouse .
}
```",4,4,5,3,2,3,2,20,2,0,0,1.0,1.0,1.0
696,12,val,Give me the birth place of Tim Brennan and landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT DISTINCT ?birthPlace ?landmark WHERE {
  # Part 1: Tim Brennan's Birth Place
  OPTIONAL {
    dbr:Tim_Brennan a dbo:Person .
    dbr:Tim_Brennan dbo:birthPlace ?birthPlace .
  }

  # Part 2: Landmark at Elevation of Nie Rongzhen's Award
  OPTIONAL {
    dbr:Nie_Rongzhen a dbo:Person .
    ?award dbo:honoraryCitizen dbr:Nie_Rongzhen .
    ?award dbo:location ?landmark .
    ?landmark geo:altitude ?elevation .
  }
}
```",3,3,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
328,37,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOfDefense ?commanderInBudapest WHERE {
  # Leader of People's Commissariat of Defense (Kliment Voroshilov)
  ?leaderOfDefense a dbo:Person ;
                  rdfs:label ""Kliment Voroshilov""@en .
  
  # Commander in the force at Budapest (Ivan Konev)
  ?commanderInBudapest a dbo:Person ;
                       rdfs:label ""Ivan Konev""@en .

  FILTER (?leaderOfDefense != ?commanderInBudapest)
}
```",4,4,5,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
356,12,val,"Give me the player in 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?result <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?team WHERE {
  # Find players in the 2015 Sacramento Republic FC team
  ?player dbo:memberOfTeam dbr:Sacramento_Republic_FC .
  FILTER (YEAR(?date) = 2015)
  
  # Check if the player is a soccer player and manager
  ?player a dbo:SoccerPlayer ;
          dbo:birthPlace dbr:Wolverhampton .

  OPTIONAL { 
    ?manager a dbo:SoccerManager ;
             dbo:managedTeam ?team .
    FILTER (?player = ?manager)
  }
  
  # Return the team of the player if they are also a manager
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
492,18,val,Give me the commander in Franco-Hova Wars and person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Assuming there's a property linking to their role in the Franco-Hova Wars
  ?person dbo:role ""Commander""@en ; 

  # Death place filters for French Algeria and Algiers
  ?deathPlace1 dbo:place dbr:French_Algeria ;
              dbo:deceased ?person .
  ?deathPlace2 dbo:place dbr:Algiers ;
               dbo:deceased ?person .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
55,14,val,"Give me the band member of Guns N' Roses and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember1 ?secondBand WHERE {
  # Step 1: Find members of Guns N' Roses
  ?member a dbo:Person .
  ?member dbo:bandMember dbr:Guns_N%27_Roses .

  # Step 2: Check if these members are also band members of another band
  ?member dbo:bandMember ?secondBand .

  # Step 3: Ensure the second band is both a band and a group
  ?secondBand a dbo:Band ;
              a dbo:Group .

  # Step 4: Find connection to San Francisco Symphony
  OPTIONAL { 
    ?secondBand dbo:location dbr:San_Francisco_Symphony .
  }

  FILTER EXISTS {
    ?secondBand dbo:location dbr:San_Francisco_Symphony .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
16,30,val,Give me the person born as the birth name of Gigi Rice and professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Gigi Rice"" .
  ?person dbo:profession dbr:Actress .
  ?person dbo:spouse dbr:Ted_McGinley .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
92,44,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as Joseph Michael Furney and band member of Nevermore.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person (GROUP_CONCAT(DISTINCT ?band; separator="", "") AS ?bands) WHERE {
  VALUES ?name { ""Jim Sheppard"" ""Joe Duplantier"" }
  
  ?person dbo:name ?name .
  OPTIONAL {
    ?person dbo:musicalArtist ?artist .
    ?artist dbo:bandMember ?band .
  }
  
  FILTER (?name = ""Jim Sheppard"" || ?name = ""Joe Duplantier"")
}
GROUP BY ?person
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
404,23,val,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?princess { dbr:Princess_Victoria_Louise_of_Prussia }
  
  ?princess a dbo:Person .
  ?princess dbo:birthName ?birthName .
  FILTER EXISTS { ?princess rdf:type dbo:RoyalFamilyMember } # Assuming royalty is indicated by this class
  OPTIONAL { ?princess dbo:spouse ?spouse . }
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
161,40,val,"Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce1 ?militaryForce2 WHERE {
  # Identify the Biscay Campaign as a military conflict
  dbr:Biscay_Campaign a dbo:MilitaryConflict .

  # Find the commander of the Biscay Campaign
  ?commander dbo:commanderOf ?campaign .
  FILTER (?campaign = dbr:Biscay_Campaign) .

  # Identify military forces involved in the campaign
  ?militaryForce1 dbo:participatedIn ?campaign .
  ?militaryForce2 dbo:opponentOf ?militaryForce1 .
  
  # Ensure the commander is associated with both sides
  ?commander dbo:militaryService ?militaryForce1 ;
            dbo:militaryService ?militaryForce2 .

  # Check for societal event and decedent status at Francoist Spain
  ?commander dbo:deathPlace ?place .
  FILTER (CONTAINS(LCASE(?place), ""francoist spain""))
}
```",5,8,6,3,3,3,3,71,0,0,3,0,0.0,0
184,19,val,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:child dbr:Archduke_Joseph_August_of_Austria .
  ?person dbo:nativePlace dbr:Budapest .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
303,14,val,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Find the country of El Valle de Antón
  dbr:El_Valle_de_Antón dbo:locatedInCountry ?country .

  # Find Guillermo Endara's political party
  OPTIONAL { 
    dbr:Guillermo_Endara dbo:party ?party .
    
    # Check if the party is associated with a country (e.g., as a ruling party)
    ?party dbo:country ?party_country .
    
    FILTER (?country = ?party_country)
  }
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
645,12,val,Give me the alma mater of the child of Richard Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater WHERE {
  ?richardPankhurst a dbo:Person ;
                    foaf:name ""Richard Pankhurst""@en .
  
  ?child dbo:parent ?richardPankhurst ;
         dbo:almaMater ?almaMater .

  ?almaMater dbp:location ?ukLocation .
  ?ukLocation rdfs:label ?locationLabel .
  FILTER (CONTAINS(LCASE(?locationLabel), ""united kingdom""))
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
701,22,val,Give me the spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?merneptah dbo:child dbr:Merneptah .
  ?father dbo:child ?merneptah .
  ?father dbo:spouse ?spouse .
  ?spouse dbo:child dbr:Meritamen .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
492,43,val,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at French Algeria and person decedent at Algiers.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the commander of the Battle of Verdun
  ?battle a dbo:MilitaryConflict ;
          dbo:commander ?commander .
  
  FILTER (STR(?battle) = ""Battle_of_Verdun"") .

  # Ensure the battle is also an event
  ?battle a dbo:Event .

  # Check if this commander died in both French Algeria and Algiers
  ?commander dbo:deathPlace ?place1, ?place2 .
  
  FILTER (STR(?place1) = ""French_Algeria"" && STR(?place2) = ""Algiers"")
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
77,13,val,Give me the war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?vlasov a dbo:Person ;
          foaf:name ""Maxim Grigorievich Vlasov""@en .
  
  ?vlasov dbo:award ?award .

  ?award dbo:relatedTo ?war .
}
```",3,3,4,3,1,3,2,20,0,0,436,0,0.0,0
701,44,val,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Find a child of Ramesses II
  ?child dbo:father dbr:Ramesses_II .
  
  # Determine the parent(s) of this child
  ?child dbo:mother ?mother .
  OPTIONAL { ?child dbo:father ?father . }
  
  # Check if one of these parents is married to Ramesses II (spouse)
  FILTER (?mother = dbr:Nefertari_Merymut || ?mother = dbr:Isetnofret || ?father = dbr:Nefertari_Merymut || ?father = dbr:Isetnofret)

  # Verify that this parent also has another child named Meritamen
  OPTIONAL { 
    ?otherChild dbo:parent ?parent .
    FILTER (?otherChild = dbr:Meritamen)
  }
  
  # Ensure the parent is either mother or father of the initial child and spouse of Ramesses II
  BIND(?mother AS ?parent) .
  BIND(?father AS ?parent) .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
801,42,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow and producer of Westside Story (song).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist WHERE {
  ?writer a dbo:Writer .
  ?writer dbo:title ""40 Dayz & 40 Nightz"" .
  ?writer foaf:name ""The Shadow""@en .
  ?writer dbo:producedBy dbr:Westside_Story_(song) .

  ?writer dbo:associatedBand ?musicalArtist .
  ?musicalArtist a dbo:MusicalArtist .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
328,21,val,"Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the person who was a leader of People's Commissariat of Defense
  ?person dbo:officeHolder [
    a dbo:MinistryOfDefence ;
    rdfs:label ""People's Commissariat for Defence""@en .
  ] .

  # Find the same person who received an award from Bruce Fraser, 1st Baron Fraser of North Cape
  OPTIONAL {
    ?awardEvent dbo:recipient ?person ;
                dbo:awardee dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
  }

  FILTER EXISTS { ?awardEvent }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,37,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find Sherry Hormann's spouse
  ?sherry a dbo:Person ;
          foaf:name ""Sherry Hormann"" .
  
  ?sherry dbo:spouse ?spouse .

  # Identify the claim to fame of Sherry Hormann's spouse
  ?spouse dbo:claimToFame ?work .

  # Find actors in that work
  ?work dbo:actor ?actor1 .

  # Find actors in ""All About the Andersons""
  dbr:All_About_the_Andersons dbo:actor ?actor2 .

  # Check for overlap between actors
  FILTER (?actor1 = ?actor2)
  
  BIND(?actor1 AS ?actor) .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
365,7,val,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter and reference to The Blasters.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?person dbo:occupation dbr:Vocalist . } &&
    EXISTS { ?person dbo:occupation dbr:Musician . } &&
    EXISTS { ?person dbo:occupation dbr:Songwriter . }
  ) .
  ?person a dbo:Artist ;
          a dbo:MusicalArtist .
  ?band dbo:member ?person .
  FILTER (str(?band) = ""The Blasters"")
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
339,14,val,Give me the father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Identify Princess Olga of Greece and Denmark
  ?olga dbo:child dbr:Princess_Olga_of_Greece_and_Denmark .
  
  # Step 2: Find her parent(s)
  ?parent dbo:child ?olga .

  # Step 3: Determine the child of her parent (which is Olga or another sibling)
  ?sibling dbo:child ?parent .

  # Step 4: Identify the father of that child
  ?spouse dbo:spouse ?parent .
  FILTER EXISTS { ?spouse a dbo:Man . } # Assuming the father is male

  BIND(?spouse AS ?father)
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
360,18,val,Give me the reference to the author of Blinded by the Light and native of Johannesburg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?work dbo:author ?author .
  ?work rdfs:label ""Blinded by the Light""@en .
  FILTER (LANG(?work) = 'en') .

  ?author dbo:birthPlace dbr:Johannesburg .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,11,val,Give me the figure known as the nickname of FC Vaduz and team of Alessandro Mangiarratti.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?team WHERE {
  # Find the nickname of FC Vaduz
  dbr:FC_Vaduz dbo:nickname ?nickname .

  # Find the team associated with Alessandro Mangiarratti
  OPTIONAL { 
    ?player a dbo:FootballPlayer ;
            foaf:name ""Alessandro Mangiarratti"" ;
            dbo:team ?team .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
303,15,val,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of Arnulfo Arias.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?noriegaParty ?ariasParty WHERE {
  # Find the political party of Manuel Noriega
  OPTIONAL {
    dbr:Manuel_Noriega a dbo:Person .
    dbr:Manuel_Noriega dbo:partyAffiliation ?noriegaParty .
  }
  
  # Find the political party of Arnulfo Arias
  OPTIONAL {
    dbr:Arnulfo_Arias a dbo:Person .
    dbr:Arnulfo_Arias dbo:partyAffiliation ?ariasParty .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,18,val,"Give me the actor of The Departed and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor a dbo:Person .
  
  # Actor in ""The Departed""
  ?actorIn1 dbo:actor ?actor ;
            dbo:title dbr:The_Departed .

  # Actor in ""All About the Andersons""
  ?actorIn2 dbo:actor ?actor ;
            dbo:title dbr:All_About_the_Andersons .
  
  # Native of Compton, California
  ?actor dbo:nativePlace dbr:Compton,_California .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
465,7,val,Give me the administration of Czech Pirate Party and death place of the native of Prague.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?person ?deathPlace WHERE {
  # Administration of Czech Pirate Party
  ?party a dbo:PoliticalParty ;
         dbo:name ""Czech Pirate Party""@en .
  
  ?administration dbo:position ""Leader""@en ;
                  dbo:organization ?party .

  # Death place of a native of Prague
  ?person dbo:birthPlace dbr:Prague ;
          dbo:deathPlace ?deathPlace .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
92,27,val,Give me the band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?band WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Joseph Michael""@en .
  OPTIONAL { ?person dbo:band ?band . }
}
```",3,3,4,3,1,3,3,71,0,1,1,0.0,0.0,0
392,18,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence ?province ?region WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@en .
  
  ?person dbo:residence ?residence .
  ?residence a dbo:Settlement ;
             dbo:country dbr:Italy .

  OPTIONAL { ?residence dbo:administrativeTerritory ?province . }
  OPTIONAL { ?province dbo:partOfRegion ?region . }

  FILTER EXISTS {
    ?region rdfs:label ?timeZoneLabel .
    FILTER (CONTAINS(LCASE(?timeZoneLabel), ""central european time"") || CONTAINS(LCASE(?timeZoneLabel), ""cet""))
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
626,14,val,Give me the awardee of the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  # Resource for the Battle of Borodino
  dbr:Battle_of_Borodino a dbo:MilitaryEngagement .

  # Find individuals who participated in the battle
  ?person dbo:participatedInBattle dbr:Battle_of_Borodino .
  
  # Check if these individuals were awarded any honors related to their participation
  OPTIONAL { 
    ?person dbo:awarded ?award .
    FILTER EXISTS {
      ?award dbo:relatedToEvent dbr:Battle_of_Borodino .
    }
  }

  # Ensure we only get those who have an award related to the battle
  FILTER (?award != UNDEF)
}
```",3,3,4,3,1,3,2,20,0,0,7855,0,0.0,0
392,17,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region1 ?event1 ?region2 ?event2 WHERE {
  # For Aguilar de Segarra
  OPTIONAL { 
    ?place1 a dbo:Place ;
            rdfs:label ""Aguilar de Segarra""@en .
    ?place1 dbo:timeZone ?tz1 .
    ?tz1 dbo:region ?region1 .
    OPTIONAL { ?event1 dbo:location ?place1 ; a dbo:SportEvent . }
  }

  # For Schio
  OPTIONAL {
    ?place2 a dbo:Place ;
            rdfs:label ""Schio""@en .
    ?place2 dbo:timeZone ?tz2 .
    ?tz2 dbo:region ?region2 .
    OPTIONAL { ?event2 dbo:location ?place2 ; a dbo:SportEvent . }
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
328,31,val,Give me the commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find a commander on the Eastern Front during World War II
  ?person dbo:militaryCommanderOf dbr:Eastern_Front_(World_War_II) .
  
  # Check if this person was awarded for commanding in both Volcano and Ryukyu Islands campaigns
  ?person dbo:award [
    a dbo:Award ;
    dbo:recipient ?person ;
    dbo:relatedEvent dbr:Battle_of_the_Volcano_Islands ;
    dbo:relatedEvent dbr:Battle_of_the_Ryukyu_Islands
  ] .
}
```",4,4,5,3,2,3,3,71,0,0,5,0,0.0,0
55,19,val,"Give me the band member of Metallica and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Newsted's band membership in Metallica
  VALUES (?newstedBand) { dbr:Metallica }
  
  # Find producers of ""Used to Love Her""
  ?song dbo:title ""Used to Love Her"" .
  ?song dbo:producer ?producer .

  # Check if the producer is a member of any band
  ?producer dbo:bandMember ?producerBand .

  # Ensure the producer is also a band member (i.e., they are in a band)
  FILTER EXISTS { ?producer dbo:bandMember ?producerBand }

  # Find commonality with Metallica
  ?metallicaMember dbo:bandMember ?newstedBand .
  
  # Check if the metallica member is the same as the producer
  VALUES (?commonPerson) {
    ?metallicaMember
    ?producer
  }
  
  # Ensure the person is a band member of both Metallica and the producer's band
  FILTER EXISTS { ?commonPerson dbo:bandMember ?newstedBand }
  FILTER EXISTS { ?commonPerson dbo:bandMember ?producerBand }

  # Return the common band member
  BIND(?commonPerson AS ?bandMember)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
528,43,val,Give me the war of Irene Morales and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work a dbo:Book .
  
  OPTIONAL { 
    ?work dbo:wikiPageWikiLink dbr:Irene_Morales .
  }
  
  OPTIONAL { 
    ?work dbo:wikiPageWikiLink dbr:Narciso_Campero .
  }

  OPTIONAL { 
    ?work dbo:subject dbr:Military_commander .
  }
}
```",5,5,6,3,3,3,3,71,0,77163,2,0.0,0.0,0
184,27,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandParentOfChild WHERE {
  # Step 1: Identify Archduchess Margaret of Austria
  ?margaret a dbo:Person ;
            rdfs:label ""Archduchess Margaret of Austria""@en .
  
  # Step 2: Find her parent
  ?parent dbo:child ?margaret .

  # Step 3: Determine the child of this parent (could be siblings)
  ?sibling dbo:parent ?parent .

  # Step 4: Identify the parent of that sibling
  ?grandParentOfChild dbo:parent ?sibling .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
281,28,val,Give me the entity in Colony of New Zealand and war of New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Association with Colony of New Zealand
  ?person dbo:nationality dbr:New_Zealand ;
          dbo:militaryConflict ?conflict .

  # Association with New Zealand Army
  ?conflict dbo:participatingMilitaryUnit dbr:New_Zealand_Army .

  # Awarded Knight Grand Cross of the Order of the Bath
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
767,43,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?administration WHERE {
  # Find George Kilbon Nash
  ?nash a dbo:Person ;
        foaf:name ""George Kilbon Nash"" .
  
  # Get his alma mater
  ?nash dbo:almaMater ?almaMater .

  OPTIONAL {
    # Check for any administration or affiliation related to him in Baden-Württemberg
    ?administration dbo:location dbr:Baden-Württemberg ;
                   dbo:member ?nash .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
783,15,val,Give me the band member of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Ebony Reigns' band members and their associated musical artists
SELECT DISTINCT ?bandMemberEbony (GROUP_CONCAT(?musicalArtistEbony; separator="", "") AS ?associatedMusicalArtistsEbony) WHERE {
  VALUES ?ebony { dbr:Ebony_Reigns }
  ?ebony dbo:bandMember ?bandMemberEbony .
  ?bandMemberEbony dbo:musicalArtist ?musicalArtistEbony .
} GROUP BY ?bandMemberEbony

UNION

# Query for Samuel Ofori Amponsah's band members and their associated musical artists
SELECT DISTINCT ?bandMemberSamuel (GROUP_CONCAT(?musicalArtistSamuel; separator="", "") AS ?associatedMusicalArtistsSamuel) WHERE {
  VALUES ?samuel { dbr:Stonebwoy }
  ?samuel dbo:birthName ""Samuel Ofori Amponsah""@en .
  ?samuel dbo:bandMember ?bandMemberSamuel .
  ?bandMemberSamuel dbo:musicalArtist ?musicalArtistSamuel .
} GROUP BY ?bandMemberSamuel
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
485,15,val,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ""Western European Time"" .
}

SELECT ?entity WHERE {
  ?entity dbo:locatedIn dbr:Nottinghamshire .
}
```",3,4,4,2,2,2,3,28,0,0,357,0,0.0,0
659,32,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander1 ?commander2 WHERE {
  # Find the commander of the 1st Light Cavalry Lancers Regiment during a war
  ?regiment a dbo:MilitaryUnit ;
            dbo:commandedBy ?commander1 .
  
  ?war a dbo:MilitaryConflict ;
       dbo:participatingMilitaryUnit ?regiment .

  # Find Arthur Wellesley's command roles in the same or related military conflict
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:commandedBy ?commander2 .
  
  OPTIONAL { ?war dbo:commandedBy ?commander2 . }
}
```",4,6,5,2,2,3,3,71,0,0,71,0,0.0,0
701,21,val,Give me the spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Ramesses II and his spouse
  dbr:Ramesses_II a dbo:Person ;
                  dbo:spouse ?spouse .

  # Nefertari and her child
  dbr:Nefertari a dbo:Person ;
                dbo:child ?child .

  # Check if the spouse of Ramesses II is also a parent of Nefertari's child
  ?spouse dbo:parent ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,28,val,Give me the native of the figure known as Hub City and actor of All About the Andersons and actor of The Departed.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCity WHERE {
  # Find the city known as Hub City
  ?hubCity a dbo:PopulatedPlace ;
           rdfs:label ""Hub City""@en .
  
  # Identify an actor who acted in both movies
  ?actor a dbo:Actor ;
         dbo:film ?movie1, ?movie2 .

  ?movie1 dbr:All_About_the_Andersons ;
          dbo:starring ?actor .
  ?movie2 dbr:The_Departed ;
          dbo:starring ?actor .

  # Determine the native city of this actor
  ?actor dbo:nativePlace ?nativeCity .

  FILTER (?nativeCity = ?hubCity)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,38,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Frédéric-Georges Herr's involvement in a military conflict
  ?conflict dbo:participant ?herr .
  ?herr rdfs:label ""Frédéric-Georges Herr""@en .

  # Commander of the military conflict
  ?conflict dbo:commander ?commander .

  # Frédéric-Georges Herr's death place is the capital of Algeria
  ?herr dbo:deathPlace ?capital .
  ?capital rdfs:label ""Algiers""@en ;
          a dbo:Settlement ;
          dbo:country dbr:Algeria .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
427,21,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party ?italianPeopleParty WHERE {
  # Find Romano Prodi's party affiliation
  dbr:Romano_Prodi dbo:partyAffiliation ?party .
  
  # Find the Italian People's Party from 1994
  ?italianPeopleParty a dbo:PoliticalParty ;
                     rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""italian people's party"") && 
          EXISTS { ?italianPeopleParty dbo:foundingDate ?fdate . 
                   FILTER(YEAR(?fdate) <= 1994 && YEAR(?fdate) >= 1990) } )
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,20,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander of the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?regiment dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) ;
            dbo:commander ?person .

  # Commander in the German campaign of 1813
  ?campaign dbr:German_campaign_of_1813 ;
            dbo:commander ?person .
}
```",3,5,4,2,2,3,3,71,0,0,30,0,0.0,0
294,16,val,"Give me the resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace ?settlement ?entity WHERE {
  # Query for Luke Lea's resting place
  { 
    ?lea a dbo:Person ;
         foaf:name ""Luke Lea"" ;
         dbo:birthDate ?dateLea .
    FILTER (YEAR(?dateLea) = 1879)
    OPTIONAL { ?lea dbo:deathPlace ?restingPlace }
  }

  # Query for Marion James' birth place and related entities
  UNION
  {
    ?marion a dbo:Person ;
            foaf:name ""Marion James"" ;
            dbo:birthPlace ?settlement .
    FILTER (isBlank(?settlement) || ?settlement a dbo:Settlement)
    OPTIONAL { ?entity dbo:location ?settlement }
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
54,29,val,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Narapati I's child
  ?narapatiIChild dbo:parent dbr:Narapati_I_of_Ava .
  
  # Ameitta Thiri Maha Dhamma Dewi's predecessor
  ?ameittaPredecessor dbo:successor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .

  # Thinkhaya of Pagan's child
  ?thinkhayasChild dbo:parent dbr:Thinkhaya_of_Pagan .
  
  # Find the common entity
  VALUES ?entity { 
    ?narapatiIChild 
    ?ameittaPredecessor 
    ?thinkhayasChild 
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
528,25,val,Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Narciso Campero Leyes and his associated war
SELECT ?war WHERE {
  dbr:Narciso_Campero_Leyes dbo:militaryConflict ?war .
}

# Query for Orozimbo Barbosa and his associated war
SELECT ?war WHERE {
  dbr:Orozimbo_Barbosa dbo:militaryConflict ?war .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,42,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of the team of Takashi Sekizuka and native of Japan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Eiji Ōtsuka's alma mater
  ?eiji a dbo:Person ;
        foaf:name ""Eiji Ōtsuka"" ;
        dbo:almaMater ?university .
  
  # University properties
  ?university a dbo:University, dbo:EducationalOrganization, dbo:Organisation .

  # Person who is the manager of Takashi Sekizuka's team and native of Japan
  ?person a dbo:Person ;
          foaf:name ?name ;
          dbo:managerOf ?team .
  
  ?team dbo:member dbr:Takashi_Sekizuka .
  ?person dbo:nationality dbr:Japan .

  # Linking the person to Eiji Ōtsuka's alma mater
  ?person dbo:almaMater ?university .
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
328,23,val,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Resource for Volcano and Ryukyu Islands campaign
  dbr:Battle_of_the_Ryukyu_Islands dbo:partOf ?campaign .
  
  # Find awards related to the campaign
  ?campaign dbo:award ?award .

  # Identify recipients of those awards
  ?award dbo:recipient ?awardee .
}
```",3,3,4,3,1,3,3,71,0,0,13262,0,0.0,0
701,41,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Ramesses II and his spouse
  dbr:Ramesses_II a dbo:Person .
  ?spouse dbo:spouse dbr:Ramesses_II ;
          dbo:spouse dbr:Ramesses_II .

  # Child of Ramesses II
  ?child dbo:parent dbr:Ramesses_II ;
         dbo:parent ?spouse .

  # Parent of the child (should be Nefertari)
  ?parent a dbo:Person .
  FILTER (?parent = ?spouse) 
}
```",5,5,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
488,26,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  # Matsudaira Tadamasa
  ?matsudairaTadamasa a dbo:Person ;
                      foaf:name ""Matsudaira Tadamasa""@en .
  
  # Father of Matsudaira Tadamasa
  ?father1 dbo:father ?matsudairaTadamasa ;
           a dbo:OfficeHolder .

  # Father of the Office Holder (second father)
  ?father2 dbo:father ?father1 ;
           a dbo:Politician .

  # Death place of the second father
  ?father2 dbo:deathPlace ?deathPlace .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
161,26,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?prieto a dbo:Person ;
          foaf:name ""Indalecio Prieto""@en .
  ?predecessor dbo:successor ?prieto ;
               a dbo:Person .
  ?predecessor dbo:militaryForce ?militaryForce .
  ?militaryForce a dbo:SocietalEvent, dbo:MilitaryConflict .
}
```",3,5,4,3,1,3,3,71,0,0,514,0,0.0,0
666,15,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as The Three Lions.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInManager WHERE {
  # Find Leonid Slutsky's team
  ?team a dbo:SoccerClub ;
        dbo:manager dbr:Leonid_Slutsky .
  
  # Ensure the team is also considered a sports team season
  ?teamSeason a dbo:SportsTeamSeason ;
              dbo:sportsTeam ?team .

  # Find The Three Lions (England national football team)
  ?threeLions a dbo:SoccerClub ;
               rdfs:label ""The Three Lions""@en .
  
  # Ensure it is also considered a sports team season
  ?threeLionsSeason a dbo:SportsTeamSeason ;
                    dbo:sportsTeam ?threeLions .

  # Find the manager of The Three Lions
  ?threeLions dbr:The_Three_Lions dbo:manager ?managerOfThreeLions .

  # Find any player who has been a manager for both teams
  ?playerInManager dbo:playerInManager ?team .
  ?playerInManager dbo:playerInManager ?threeLionsSeason .
}
```",4,7,5,3,2,3,2,20,0,0,2,0,0.0,0
547,28,val,Give me the resting place of Alan Cunningham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  { 
    # Resting place for Alan Cunningham
    VALUES ?person { dbr:Alan_Cunningham }
    ?person dbo:deathPlace ?restingPlace .
  } UNION {
    # Resting place for Simon Cadell
    VALUES ?person { dbr:Simon_Cadell }
    ?person dbo:deathPlace ?restingPlace .
  } UNION {
    # Resting place of the child of James Burton (property developer)
    ?james a dbo:Person ;
           foaf:name ""James Burton"" ;
           dbo:occupation dbr:Property_developer .
    ?child dbo:parent ?james ;
           a dbo:Person .
    ?child dbo:deathPlace ?restingPlace .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
16,24,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?satomiProfession (GROUP_CONCAT(?person) AS ?georgeannePerson)
WHERE {
  # Query for Satomi Ishihara's profession
  OPTIONAL { 
    dbr:Satomi_Ishihara dbo:occupation ?satomiProfession .
  }
  
  # Query for person born as Georgeanne Marie Rice
  ?person foaf:name ""Georgeanne Marie Rice""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
485,16,val,"Give me the entity in United Kingdom and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?ukEntity WHERE {
  # Find Joseph Whitaker's birth place and check if it is a region
  ?whitaker a dbo:Person ;
            foaf:name ""Joseph Whitaker"" ;
            dbo:birthPlace ?birthPlace .
  
  FILTER EXISTS { 
    ?birthPlace a dbo:Region .
  }
  
  # Find an entity related to Joseph Whitaker in the United Kingdom
  OPTIONAL {
    ?relatedEntity dbo:location dbr:United_Kingdom ;
                  dbo:associatedWith ?whitaker .
    
    BIND(?relatedEntity AS ?ukEntity)
  }
}
```",3,4,4,2,2,2,3,28,0,0,357,0,0.0,0
712,15,val,"Give me the resting place of Nina Onilova and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace ?capital WHERE {
  # Part 1: Resting place of Nina Onilova
  ?nina a dbo:Person ;
        rdfs:label ""Nina Onilova""@en .
  
  OPTIONAL { 
    ?nina dbo:deathPlace ?restingPlace .
  }
  
  # Part 2: Capital of the country of the military force involved in Vyoshenskaya Uprising
  ?uprising dbo:participatingMilitaryForce ?militaryForce ;
           rdfs:label ""Vyoshenskaya Uprising""@en .

  ?militaryForce a dbo:MilitaryUnit, dbo:Organization .
  
  ?militaryForce dbo:nationality ?country .
  
  ?country dbo:capital ?capital .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
378,19,val,Give me the war of the person born as Carl Pontus Gahn and war of Joaquín Blake.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war WHERE {
  VALUES ?person { 
    dbr:C._P._Gahn 
    dbr:Joaquín_Blake_y_Jordán 
  }
  
  ?person dbo:participatedIn ?war .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,39,val,Give me the spouse of Laodice IV and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find Laodice IV and her spouse
  dbr:Laodice_IV a dbo:Person ;
                 dbo:spouse ?spouse .

  # Step 2: Identify the commander in Battle of Panium
  ?battle dbo:commander ?commander .
  FILTER (str(?battle) = ""Battle_of_Panium"")

  # Step 3: Find the child of this commander
  ?child dbo:parent ?commander ;
         a dbo:Person .

  # Step 4: Check if Laodice IV's spouse is the parent of this child
  ?spouse dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,25,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Georgy Zhukov""@en .
  
  OPTIONAL { 
    ?person dbo:militaryCommanderOf dbr:Eastern_Front_(World_War_II) .
  }
  
  OPTIONAL {
    ?office dbo:head ?person ;
            a dbo:GovernmentAgency .
    
    ?office dbo:leaderUnder dbr:Joseph_Stalin .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
827,12,val,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify Charles Augustus and his children
  ?charlesAugustus a dbo:Person ;
                  foaf:name ""Charles Augustus"" ;
                  dbo:child ?child .
  
  # Ensure the child is royalty (e.g., has a title)
  ?child dbo:title ?title .

  # Find which of these children have Charles Alexander as their parent
  ?charlesAlexander a dbo:Person ;
                    foaf:name ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach"" ;
                    dbo:child ?royalChild .
  
  FILTER (?child = ?royalChild)

  # Retrieve the father of this royal child
  ?royalChild dbo:father ?father .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,24,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?herr a dbo:Person ;
        foaf:name ""Frédéric-Georges Herr""@en .
  
  ?war dbo:commander ?herr ;
       a dbo:MilitaryConflict, dbo:Event .

  ?person dbo:deathPlace dbr:Algiers .
  FILTER (?person = ?herr)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
179,11,val,Give me the parent of Ubol Ratana and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfUbolRatana ?personWithBirthNameSirikit WHERE {
  # Find the parent of Ubol Ratana
  dbr:Ubol_Ratana a dbo:Person .
  OPTIONAL { 
    ?parentOfUbolRatana dbo:spouse dbr:Ubol_Ratana .
  }
  
  # Find the person with birth name Sirikit
  ?personWithBirthNameSirikit a dbo:Person ;
                              dbo:birthName ""Sirikit"" .

  FILTER (?parentOfUbolRatana = ?personWithBirthNameSirikit)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
427,40,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?andreottiPartyLabel ?pintoPartyLabel ?prodiPartyLabel WHERE {
  # Giulio Andreotti's party
  dbr:Giulio_Andreotti dbo:memberOf ?andreottiParty .
  ?andreottiParty rdfs:label ?andreottiPartyLabel .

  # Michele Pinto's party
  dbr:Michele_Pinto dbo:memberOf ?pintoParty .
  ?pintoParty rdfs:label ?pintoPartyLabel .

  # Romano Prodi's party
  dbr:Romano_Prodi dbo:memberOf ?prodiParty .
  ?prodiParty rdfs:label ?prodiPartyLabel .

  FILTER (lang(?andreottiPartyLabel) = 'en')
  FILTER (lang(?pintoPartyLabel) = 'en')
  FILTER (lang(?prodiPartyLabel) = 'en')
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
747,35,val,Give me the person born on the birth date of Pavlo Khudzik and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Pavlo Khudzik's birth date
  VALUES (?pavloBirthDate) { 
    SELECT ?date WHERE {
      dbr:Pavlo_Khudzik dbo:birthDate ?date .
    }
  }

  # Find Tracey Elizabeth McSween's band
  VALUES (?traceyBand) { 
    SELECT ?band WHERE {
      dbr:Tracey_Elizabeth_McSween dbo:band ?band .
    }
  }

  # Find person born on Pavlo Khudzik's birth date and in the same band as Tracey Elizabeth McSween
  ?person a dbo:Person ;
          dbo:birthDate ?date ;
          dbo:band ?band .

  FILTER (?date = ?pavloBirthDate && ?band = ?traceyBand)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
92,43,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of Joseph Michael.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Actor in ""Return to Nuke 'Em High Volume 1""
  ?movie dbo:actor ?person ;
         rdfs:label ""Return to Nuke' Em High Volume 1""@en .

  # Band member of Nevermore
  ?bandMemberRelation dbo:bandMember ?person ;
                      dbo:band dbr:Nevermore .
  
  # Associated with Joseph Michael's band (Assuming the band is Ill Niño)
  ?musicianRelation dbo:musicalArtist ?person ;
                    dbo:band dbr:Ill_Ni%C3%B1o .

}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
701,24,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?spouse WHERE {
  # Find the children of Ramesses II
  ?child dbo:parent dbr:Ramesses_II .
  
  # Find the spouse of Ramesses II
  dbr:Ramesses_II dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,8,2,0.0,0.0,0
959,23,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  ?person dbo:almaMater ?university .
  
  FILTER (YEAR(?date) = 1958)
  
  ?university a dbo:University ;
             a dbo:EducationalOrganization ;
             dbo:country dbr:Japan .
}
```",3,7,4,3,1,3,3,71,0,0,524,0,0.0,0
251,19,val,"Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v2 <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace ?warLocation WHERE {
  # Administration of Forza Italia in 2013
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  
  ?government dbo:hasMember ?party ;
              dbo:startDate ?start ;
              dbo:endDate ?end .

  FILTER (YEAR(?start) <= 2013 && YEAR(?end) >= 2013)

  ?administration dbo:headOfGovernment ?leader .
  BIND(?government AS ?administration)
  
  # Death place of Laura Mancinelli
  ?mancinelli a dbo:Person ;
              rdfs:label ""Laura Mancinelli""@en ;
              dbo:deathPlace ?deathPlace .

  # Location of the war involving Louis François Félix Musnier
  ?musnier a dbo:Person ;
           rdfs:label ""Louis François Félix Musnier""@en .
  
  ?war a dbo:MilitaryConflict ;
       dbo:participant ?musnier ;
       dbo:location ?warLocation .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
547,26,val,Give me the resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?restingPlace WHERE {
  ?show a dbo:TelevisionShow .
  ?show dbo:title ""The Andy Griffith Show"" .
  ?actor dbo:actorIn ?show .
  ?actor rdfs:label ""Frances Bavier""@en .
  
  OPTIONAL { 
    ?actor dbo:deathPlace ?restingPlace .
  }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,13,val,Give me the person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Headquarter_of_House_of_Sombrerete .
  ?person dbo:numberOfAwards ?awards .
  FILTER (?awards = 30)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,19,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Find Laodice IV's spouse
  dbr:Laodice_IV dbo:spouse ?spouse .

  # Find Seleucus II Callinicus and his children
  dbr:Seleucus_II_Callinicus dbo:child ?child .

  # From each child, find their children (grandchildren of Seleucus II)
  ?child dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch .
  
  # Link spouse to grandchildren through Laodice IV's spouse
  FILTER (?spouse = ?grandchild)
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
16,39,val,Give me the person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person .
  ?person dbo:almaMater dbr:Ohio_State_University .
  ?person dbo:occupation dbr:Actress .
  OPTIONAL { ?person foaf:name ?birthName . }
}
```",4,4,5,3,2,3,3,71,0,2,3,0.0,0.0,0
528,31,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war a dbo:War .
  ?war dbo:location dbr:Chile .
  OPTIONAL { ?war dbo:participatedIn ?entity . }
  FILTER EXISTS {
    ?entity dbo:commander dbr:Orozimbo_Barbosa
  }
}
```",4,5,5,3,2,3,3,71,0,0,9,0,0.0,0
659,28,val,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in Battle of Leipzig and military force of Napoleonic Wars.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Identify Arthur Wellesley, 1st Duke of Wellington
  VALUES ?welshley { dbr:Arthur_Wellesley,_1st_Duke_of_Wellington }

  # Find commanders in his force
  ?welshley dbo:commandedBy ?commander .

  UNION

  # Find commanders involved with him in the Battle of Leipzig
  {
    ?battle a dbo:Battle .
    ?battle dbo:name ""Battle of Leipzig"" .
    ?welshley dbo:participatedInBattle ?battle .
    ?battle dbo:commander ?commander .
  }

  UNION

  # Find commanders involved in the Napoleonic Wars with him
  {
    ?war a dbo:MilitaryConflict .
    ?war dbo:name ""Napoleonic_Wars"" .
    ?welshley dbo:participatedInBattle ?battle .
    ?battle dbo:partOfWar ?war .
    ?commander dbo:commandedBy ?otherCommander .
    FILTER(?otherCommander != ?welshley)
  }
}
```",4,4,5,2,3,3,3,71,0,0,5,0,0.0,0
9,22,val,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Alderdice"" ;
          rdfs:label ""John Alderdice, Baron Alderdice""@en .
  ?person dbo:almaMater ?almaMater .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,27,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit WHERE {
  ?militaryUnit a dbo:MilitaryUnit .
  ?militaryUnit dbo:militaryBranch dbr:New_Zealand_Army .
  
  ?person dbo:militaryUnit ?militaryUnit ;
          a dbo:Person, dbo:OfficeHolder, dbo:Politician .

}
```",3,6,4,3,1,3,3,71,0,0,14,0,0.0,0
392,13,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ""Central European Time"" .
}
```",3,4,4,2,2,2,3,28,0,0,28787,0,0.0,0
360,12,val,Give me the writer of The Roaring Silence and native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album dbo:title ""The Roaring Silence""@en .
  ?album dbo:artist dbr:Manfred_Mann_2 .
  ?album dbo:lyricist ?writer .
  
  ?writer dbo:nativePlace dbr:Johannesburg .
  
  OPTIONAL { 
    ?bandMember dbo:memberOfBand dbr:Manfred_Mann_2 .
    ?bandMember dbo:person ?writer .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
161,24,val,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Identify the Biscay Campaign as both a societal event and a military conflict
  dbr:Biscay_Campaign a dbo:SocietalEvent ;
                      a dbo:MilitaryConflict .

  # Find the commander of the Biscay Campaign
  dbr:Biscay_Campaign dbo:commander ?commander .
  
  # Ensure the commander is Francisco Largo Caballero
  ?commander rdfs:label ""Francisco Largo Caballero""@en .

  # Identify the military force involved in the Biscay Campaign
  dbr:Biscay_Campaign dbo:militaryForce ?militaryForce .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
915,15,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident WHERE {
  # Find the director of ""Pipe Dreams"" (1976 film)
  ?director a dbo:FilmDirector ;
            dbo:directed dbr:Pipe_Dreams_(film) .
  
  # Check if this director is also the father of Lizzie Spaulding
  ?director dbo:child dbr:Lizzie_Spaulding .

  # Get the birthplace and ensure it's a settlement
  ?director dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .

  # Find residents of that settlement
  ?resident dbo:residence ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
528,18,val,Give me the war of Orozimbo Barbosa and force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for wars involving Orozimbo Barbosa
SELECT DISTINCT ?war WHERE {
  ?barbosa a dbo:Person ;
           foaf:name ""Orozimbo Barbosa""@en .
  ?barbosa dbo:participatedIn ?war .
}

UNION

# Query for wars involving Narciso Campero
SELECT DISTINCT ?war WHERE {
  ?campero a dbo:Person ;
           foaf:name ""Narciso Campero""@en .
  ?campero dbo:participatedIn ?war .
}

UNION

# Attempt to find events related to Irene Morales
SELECT DISTINCT ?event WHERE {
  ?morales a dbo:Person ;
           foaf:name ""Irene Morales""@en .
  ?morales dbo:participatedIn ?event .
}
```",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
547,38,val,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorRestingPlace ?awardeeRestingPlace WHERE {
  # Find the actor of ""Enemy at the Door""
  ?film a dbo:Film ;
        rdfs:label ""Enemy at the Door""@en .
  
  ?film dbo:actor ?actor .

  OPTIONAL { 
    ?actor dbo:finalRestingPlace ?actorRestingPlace .
  }

  # Find the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?person a dbo:Person ;
          dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .

  OPTIONAL {
    ?person dbo:finalRestingPlace ?awardeeRestingPlace .
  }
  
  FILTER (LANG(?film) = ""en"")
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
77,12,val,Give me the force of the mayor of Congress Poland and war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find information about the mayor of Congress Poland
SELECT ?mayor ?role WHERE {
  ?mayor a dbo:Person .
  ?mayor dbo:officeHolderOf dbr:Congress_Poland .
  OPTIONAL { ?mayor dbo:role ?role }
}

# Query to find wars involving Alexander Chechenskiy
SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alexander Chechenskiy""@en .
  ?war dbo:participatedIn ?person .
}
```",3,3,4,2,2,3,2,20,0,0,6,0,0.0,0
404,37,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchildParent WHERE {
  # Prince George William of Hanover
  ?princeGeorge a dbo:Person ;
                rdfs:label ""Prince George William of Hanover""@en .
  
  # His parent, Ernest Augustus, Crown Prince of Hanover
  ?ernestAugustus dbo:parent ?princeGeorge ;
                  rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .

  # Ensure both are royalty
  ?princeGeorge dbo:royaltyStatus ?royalty1 .
  ?ernestAugustus dbo:royaltyStatus ?royalty2 .

  # Find a child of Ernest Augustus who is also royalty
  ?child dbo:parent ?ernestAugustus ;
         dbo:royaltyStatus ?childRoyalty .

  # Find the parent of this child (grandchildParent)
  ?grandchildParent dbo:parent ?child .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
285,14,val,Give me the spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person dbo:awardReceived dbr:Stan_Lee_Award .
  ?person dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,2,20,0,0,4149,0,0.0,0
659,21,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  ?militaryForce a dbo:MilitaryUnit .
  ?militaryForce dbo:commander dbr:Arthur_Wellesley,_1st_Duke_of_Wellington .
  OPTIONAL { ?militaryForce rdfs:label ?forceLabel FILTER (lang(?forceLabel) = ""en"") }
  BIND(dbr:Arthur_Wellesley,_1st_Duke_of_Wellington AS ?commander)
}
```",3,3,4,2,2,3,3,71,0,0,32,0,0.0,0
92,29,val,"Give me the band of Joseph Michael and band member of Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfJosephMichael ?memberOfNevermore ?associatedArtist WHERE {
  # Find the band of Joseph Michael
  dbr:Joseph_Michael dbo:band ?bandOfJosephMichael .
  
  # Identify Jim Sheppard as a member of Nevermore
  dbr:Nevermore dbo:member ?memberOfNevermore .
  FILTER (str(?memberOfNevermore) = ""Jim_Sheppard"")

  # Find associated musical artists for Jim Sheppard
  ?memberOfNevermore dbo:associatedMusicalArtist ?associatedArtist .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,19,val,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find a person who was a commander on the Eastern Front
  ?person dbo:commanderOfMilitaryUnit ?unit .
  ?unit rdfs:label ""Eastern Front""@en .

  # Ensure this person is also an awardee of Bruce Fraser, 1st Baron Fraser of North Cape
  ?person dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
184,31,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?place a dbo:Settlement .
  ?place dbo:elevation ""96.0""^^xsd:float .
  ?person dbo:nativeOf ?place .
  ?archduke dbo:child ?person .
  FILTER (str(?archduke) = str(dbr:Archduke_Joseph_August_of_Austria))
  ?parent dbo:spouseOrPartner ?person .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
487,14,val,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName ?administration WHERE {
  ?person a dbo:SoccerPlayer .
  ?person foaf:name ""Phil Scott"" .
  ?person dbo:birthName ?birthName .
  
  OPTIONAL {
    ?person dbo:positionHeld ?administration .
  }
}
```",3,4,4,3,1,3,2,20,0,0,14,0,0.0,0
294,17,val,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?architectRestingPlace ?nashvilleEntityRestingPlace WHERE {
  # Find the architect of P. D. Houston Jr. House
  ?house dbo:architect ?architect .
  FILTER (STR(?house) = ""P._D._Houston_Jr._House"")
  
  OPTIONAL { 
    ?architect dbo:deathPlace ?architectRestingPlace .
  }
  
  # Find an entity associated with Nashville, Tennessee
  ?nashvilleEntity dbo:location dbr:Nashville,_Tennessee .
  
  OPTIONAL {
    ?nashvilleEntity dbo:deathPlace ?nashvilleEntityRestingPlace .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
547,41,val,Give me the resting place of the child of James Burton (property developer) and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  # Resting place of child of James Burton (property developer)
  {
    ?james a dbo:Person ;
           rdfs:label ""James Burton (property developer)""@en .
    ?child dbo:parent ?james ;
           a dbo:Person .
    ?child dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Resting place of Alan Cunningham
  {
    ?alan a dbo:Person ;
          rdfs:label ""Alan Cunningham""@en .
    ?alan dbo:deathPlace ?restingPlace .
  }

  UNION

  # Resting place of the actor of ""Enemy at the Door""
  {
    ?film a dbo:Film ;
          rdfs:label ""Enemy at the Door""@en .
    ?actor dbo:actedIn ?film ;
           a dbo:Person .
    ?actor dbo:deathPlace ?restingPlace .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
645,14,val,Give me the alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  # Adela Pankhurst's resource
  dbr:Adela_Pankhurst a dbo:Person .
  
  # Find her parent(s)
  OPTIONAL { 
    ?parent dbo:child dbr:Adela_Pankhurst .
    
    # The child of the parent (which could be Adela herself or another sibling)
    ?child dbo:parent ?parent .
    
    # Alma mater of that child
    ?child dbo:almaMater ?almaMater .
  }
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
281,33,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceCountry WHERE {
  ?leader a dbo:Person .
  ?leader dbo:politicalLeaderOf dbr:1962_New_South_Wales_state_election .
  ?leader dbo:involvedInWar dbr:Beauchamp_Seymour,_1st_Baron_Alcester .
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
  BIND(?birthPlace AS ?birthPlaceCountry)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
981,14,val,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?author a dbo:Person .
  ?author dbo:author dbr:Kamikaze_Girls .
  ?author dbo:title ""Beauty Queen"" . # Assuming there's a property indicating beauty queen status
  ?author dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,170,0,0.0,0
801,25,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song).",SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  ?writer a dbo:Writer .
  ?writer dbo:work ?work1 .
  ?work1 rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  ?writer dbo:producedBy ?song .
  ?song rdfs:label ""Westside Story (song)""@en .

  ?writer a dbo:MusicalArtist ;
          a dbo:Artist .

  ?writer dbo:associatedMusicalArtist ?associatedArtist .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
747,18,val,Give me the band of Shèna and person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Find the band associated with Shèna
  { 
    ?person rdfs:label ""Shèna""@en .
    ?person dbo:memberOfBand ?band .
  }
  
  UNION
  
  # Find a person born on 1985-04-29 and their associated band
  {
    ?person a dbo:Person ;
            dbo:birthDate ?date .
    FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
    OPTIONAL { ?person dbo:memberOfBand ?band }
  }

  UNION
  
  # Find the band associated with Amba Shepherd
  {
    ?person rdfs:label ""Amba Shepherd""@en .
    ?person dbo:memberOfBand ?band .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
645,13,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?battle a dbo:MilitaryEngagement .
  ?battle rdfs:label ""Battle of Diamond Rock""@en .
  
  ?commander dbo:commanderOf ?battle .
  ?commander dbo:residence ?residence .

  ?residence a dbo:Country .
  BIND(?residence AS ?country)
}
```",3,4,4,3,1,3,2,20,0,0,42999,0,0.0,0
488,19,val,Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace WHERE {
  # Birth place of Saigō Takamori
  dbr:Saig%C5%8D_Takamori a dbo:Person .
  dbr:Saig%C5%8D_Takamori dbo:birthPlace ?birthPlace .

  # Death place of Tokugawa Ieyasu
  dbr:Tokugawa_Ieyasu a dbo:Person .
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,37,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Find the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  OPTIONAL {
    ?ameitta a dbo:Person ;
             rdfs:label ""Ameitta Thiri Maha Dhamma Dewi of Ava""@en .
    ?ameitta dbo:predecessor ?predecessor .
  }

  # Find the parent of the child of the parent of Thado Minsaw of Prome
  OPTIONAL {
    ?thado a dbo:Person ;
           rdfs:label ""Thado Minsaw of Prome""@en .
    ?thado dbo:parent ?parent1 .
    ?parent1 dbo:child ?child .
    ?child dbo:parent ?predecessor .
  }
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
801,38,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the writer of ""40 Dayz & 40 Nightz""
  ?writer a dbo:Writer ;
          dbo:work dbr:40_Dayz_&_40_Nightz .
  
  # Ensure this writer is also a musical artist and an artist
  ?writer a dbo:MusicalArtist, dbo:Artist .

  # Find the producer of a work by 50 Cent that is a song or musical work
  ?producer a dbo:Producer ;
            dbo:produced dbr:50_Cent ;
            dbo:produced ?work .
  
  FILTER (?work a dbo:Song || ?work a dbo:MusicalWork)

  # Ensure the writer and producer are the same individual
  ?writer = ?producer .

  # Bind the result to ?artist
  BIND(?writer AS ?artist)
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
421,16,val,Give me the band member of Senidah and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find the band member of Senidah
  ?bandMember dbo:memberOfBand dbr:Senidah .
  
  # Get Dino Merlin's birth name
  ?dinoMerlin a dbo:Person ;
              foaf:name ""Dino Merlin"" ;
              dbo:birthName ?merlinBirthName .

  # Check if the band member was born with Dino Merlin's birth name
  OPTIONAL { ?bandMember dbo:birthName ?merlinBirthName }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
767,30,val,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?entityInBadenWuerttemberg ?alterEgo WHERE {
  # Alma mater of Carl L. Nippert
  OPTIONAL {
    ?nippert a dbo:Person ;
            foaf:name ""Carl L. Nippert"" .
    ?nippert dbo:almaMater ?almaMater .
  }

  # Entity in Baden-Württemberg
  OPTIONAL {
    ?entityInBadenWuerttemberg a dbo:Place ;
                               geo:hasGeometry/geo:asWKT ?location .
    FILTER regex(?location, ""POLYGON\\(\\((-9.0 \\d+\\.\\d+, 47.0 \\d+\\.\\d+)\\)"")
               && regex(?location, ""(\\d+\\.\\d+, 8.0 \\d+\\.\\d+),"")
               && regex(?location, ""(\\d+\\.\\d+, 47.0 \\d+\\.\\d+))\\)""))
    BIND(?entityInBadenWuerttemberg AS ?entity)
  }

  # Alter ego of Black Hood
  OPTIONAL {
    ?blackHood a dbo:Character ;
               foaf:name ""Black Hood"" .
    ?blackHood dbo:alterEgo ?alterEgo .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
754,13,val,Give me the parent of the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?greatGrandparent WHERE {
  # Step 1: Identify Min Linka
  VALUES ?minLinka { dbr:Min_Linka }
  
  # Step 2: Find Min Linka's parent(s)
  OPTIONAL { ?minLinka dbo:mother ?mother . }
  OPTIONAL { ?minLinka dbo:father ?father . }

  # Step 3: Find the grandparent(s) of Min Linka's parent
  OPTIONAL {
    VALUES ?parent { ?mother ?father }
    OPTIONAL { ?parent dbo:mother ?grandMother . }
    OPTIONAL { ?parent dbo:father ?grandFather . }
  }

  # Step 4: Find the great-grandparent(s) of Min Linka's grandparent
  OPTIONAL {
    VALUES ?grandParent { ?grandMother ?grandFather }
    OPTIONAL { ?grandParent dbo:mother ?greatGrandmother . }
    OPTIONAL { ?grandParent dbo:father ?greatGrandfather . }
  }

  # Collect the great-grandparents
  VALUES ?greatGrandparent { ?greatGrandmother ?greatGrandfather }
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
528,21,val,Give me the war of the military force of Battle of Pisagua and force of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleForce ?camperoForce WHERE {
  # Find military forces involved in the Battle of Pisagua
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Pisagua""@en .
  
  ?battle dbo:participatedIn ?war .
  ?war a dbo:MilitaryConflict ;
       rdfs:label ""War of the Pacific""@en .

  ?battle dbo:opponent ?battleForce .
  
  # Find military force associated with Narciso Campero
  dbr:Narciso_Campero a dbo:Person ;
                      dbo:commanderOf ?camperoForce .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
182,18,val,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?entity WHERE {
  # Find Jagath Dias and any war he might be involved in
  ?jagath a dbo:Person ;
          rdfs:label ""Jagath Dias""@en .
  
  OPTIONAL { 
    ?jagath dbo:award ?award .
    ?award dbo:relatedWork ?war .
  }
  
  # Find Tamara Kunanayakam's nationality
  ?tamara a dbo:Person ;
          rdfs:label ""Tamara Kunanayakam""@en .
  
  ?tamara dbo:nationality ?nationality .

  # Find an entity related to that nationality
  ?entity dbo:nationality ?nationality .
}
```",3,3,4,2,2,2,3,28,0,861,5,0.0,0.0,0
184,41,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Archduke Joseph Karl of Austria and his child
  ?archduke a dbo:Person ;
            rdfs:label ""Archduke Joseph Karl of Austria""@en .
  
  ?child dbo:parent ?archduke .
  ?grandchild dbo:parent ?child .

  # Parent of someone native of Budapest
  ?budaParent dbo:nativePlace dbr:Budapest .
  ?budaChild dbo:parent ?budaParent .

  # Parent of Archduchess Ilona of Austria
  ?ilonaParent dbo:child dbr:Archduchess_Ilona_of_Austria .
  
  FILTER (?grandchild = ?budaParent && ?grandchild = ?ilonaParent)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,43,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of Rif War and commander in Biscay Campaign.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Find Indalecio Prieto's predecessor
  ?prieto a dbo:Person ;
          foaf:name ""Indalecio Prieto""@en .
  
  ?predecessor dbo:successorOf ?prieto ;
               dbo:militaryForce ?force1 .

  # Determine the military force of the Rif War
  ?rifWar dbo:participatingMilitaryUnit ?rifForce .
  FILTER (STR(?rifWar) = ""Rif War""@en)

  # Find the commander in the Biscay Campaign
  ?biscayCampaign dbo:commander ?commander ;
                  dbo:militaryForce ?force2 .

  # Link all these elements together
  ?militaryEvent a dbo:MilitaryConflict, dbo:SocietalEvent ;
                 dbo:militaryForce ?force1 .
  
  FILTER (?rifForce = ?force1 && ?force2 = ?force1)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
360,16,val,Give me the writer of The Roaring Silence and reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Query to find the writer of ""The Roaring Silence""
  OPTIONAL { 
    dbr:The_Roaring_Silence dbo:composer ?writer .
  }
  
  # Query to find the author of ""Blinded by the Light""
  OPTIONAL { 
    dbr:Blinded_by_the_Light dbo:lyricist ?author .
    BIND(?author AS ?referenceAuthor)
  }
}

```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
9,40,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB.","SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Allen Hill's Alma Mater
SELECT ?allenHillAlmaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Allen Hill"" .
  ?person dbo:almaMater ?allenHillAlmaMater .
}

UNION

# Query for the Mayor of Belfast and their Alma Mater
SELECT ?mayorAlmaMater WHERE {
  ?organization a dbo:Organization ;
                dbo:location dbr:Belfast ;
                foaf:name ""Queen's University Belfast"" .
  
  ?person a dbo:Person ;
          dbo:almaMater ?mayorAlmaMater ;
          dbo:position ?position .
  ?position dbo:officeHolder ?person ;
            dbo:office dbr:Municipality_of_Belfast_Mayoralty .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
184,30,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonIndividual WHERE {
  # Find the child of Archduke Joseph Francis of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Find the child of Archduke Joseph August of Austria
  ?child2 dbo:parent dbr:Archduke_Joseph_August_of_Austria .

  # Find the parent of Géza von Habsburg
  ?parentGéza dbo:child dbr:Géza_von_Habsburg .
  
  # The common individual should be a child of both Archdukes and a parent of Géza
  FILTER (?child1 = ?child2)
  ?commonIndividual dbo:parent ?child1 .
  ?commonIndividual dbo:child ?parentGéza .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
281,18,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in Colony of New Zealand and war of New Zealand Army.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war WHERE {
  # Identify Beauchamp Seymour, 1st Baron Alcester
  VALUES ?beauchamp { dbr:Beauchamp_Seymour_1st_Baron_Alcester }
  
  # Find wars involving Beauchamp Seymour
  ?beauchamp dbo:participatedIn ?war .
  
  # Check if the war is related to the Colony of New Zealand or the New Zealand Army
  OPTIONAL { ?war dbo:location dbr:Colony_of_New_Zealand . }
  OPTIONAL { ?war dbo:participatingMilitaryUnit dbr:New_Zealand_Army . }
  
  # Ensure Beauchamp Seymour is a person
  ?beauchamp a dbo:Person .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
747,30,val,Give me the person born on 1985-04-29 and band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band WHERE {
  # Find person born on 1985-04-29
  { 
    ?person a dbo:Person .
    ?person dbo:birthDate ?date .
    FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
    OPTIONAL {
      ?person dbo:associatedBand ?band .
    }
  }

  UNION

  # Find band of Tracey Elizabeth McSween
  { 
    ?person rdfs:label ""Tracey Elizabeth McSween""@en .
    ?person dbo:associatedBand ?band .
  }

  UNION

  # Find band of Amba Shepherd
  { 
    ?person rdfs:label ""Amba Shepherd""@en .
    ?person dbo:associatedBand ?band .
  }
}
```",4,4,5,2,3,3,3,71,1,42,0,0.023255813953488372,1.0,0.04545454545454545
184,26,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Archduke Ladislaus Philipp of Austria
  dbr:Archduke_Ladislaus_Philipp_of_Austria a dbo:Person ;
    dbo:parent ?parent .

  # Child of the parent (sibling or cousin)
  ?parent dbo:child ?child .

  # Ensure child is royalty
  ?child a dbo:Royalty .

  # Find the child of this child who is also royalty
  ?child dbo:child ?grandchild .
  ?grandchild a dbo:Royalty .
}
```",3,4,4,3,1,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
838,14,val,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:YU_Grupa a dbo:Band .
  ?member dbo:bandMember dbr:YU_Grupa .
  ?member a dbo:Person .
}
```",3,6,4,3,1,3,2,20,0,0,40,0,0.0,0
356,13,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?season1 a dbo:SoccerClubSeason ;
           dbo:sportTeam dbr:Sacramento_Republic_FC ;
           dbo:predecessor ?predecessor .
  
  FILTER (STRSTARTS(STR(?season1), ""2015 Sacramento Republic FC season""))

  ?predecessor dbo:successor ?successor .

  ?successor dbo:player ?player .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
754,15,val,Give me the parent of the parent of the parent of Min Linka and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Min Linka's great-grandparents
  ?minLinka a dbo:Person ;
            dbo:child ?parent1Min .
  ?parent1Min dbo:child ?grandparent1Min .
  ?grandparent1Min dbo:child ?greatGrandparent1Min .

  # May Hnin Thwe-Da's great-grandparents
  ?mayHninThweDa a dbo:Person ;
                 dbo:child ?parent1May .
  ?parent1May dbo:child ?grandparent1May .
  ?grandparent1May dbo:child ?greatGrandparent1May .

  # Find common parent of the great-grandparents
  ?greatGrandparent1Min dbo:parent ?commonParent .
  ?greatGrandparent1May dbo:parent ?commonParent .

  FILTER (STR(?minLinka) = ""Min Linka"" && STR(?mayHninThweDa) = ""May Hnin Thwe-Da"")
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
232,27,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  ?politician a dbo:Politician ;
              dbo:nationality dbr:Francois ; # Assuming 'Francois' is the nationality for France
              dbo:officeHolder ?office .
  
  ?politician dbo:residence ?settlement .

  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom . # Ensuring the settlement is British

  ?native dbo:nationality ?nationality ;
          dbo:birthPlace ?settlement .
}
```",3,7,4,3,1,3,3,71,0,0,9121,0,0.0,0
92,19,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jim Sheppard""@en .
  ?person dbo:bandMember dbr:Nevermore .
  ?person dbo:musicalArtist ?artist .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,38,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?conflict a dbo:MilitaryConflict .
  ?conflict dbo:event ?event1 .
  ?conflict dbo:event ?event2 .
  ?conflict dbo:militaryForce ?militaryForce .

  ?schimmelpenninck a dbo:Person ;
                   foaf:name ""Rutger Jan Schimmelpenninck"" ;
                   dbo:commanderIn ?conflict .

  ?regiment a dbo:MilitaryUnit ;
            foaf:name ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)"" ;
            dbo:militaryForce ?militaryForce .
}
```",4,9,5,2,2,3,3,71,0,0,31,0,0.0,0
617,27,val,Give me the parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Panium""@en .
  
  ?battle dbo:commander ?commander .
  ?commander a dbo:Person .

  ?child dbo:childOf ?commander .
  ?child a dbo:Person .

  ?parent dbo:spouseOrParent ?child .
  FILTER NOT EXISTS { ?parent dbo:childOf ?child } # Ensures the parent is not the child itself
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
754,11,val,Give me the parent of May Hnin Thwe-Da and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfMayHninThweDa ?grandparentOfMayHninHtapi WHERE {
  # Find parent of May Hnin Thwe-Da
  ?child a dbo:Person ;
         rdfs:label ""May Hnin Thwe-Da""@en .
  ?parentOfMayHninThweDa dbo:child ?child .

  # Find grandparent of May Hnin Htapi
  ?grandchild a dbo:Person ;
              rdfs:label ""May Hnin Htapi""@en .
  ?parentOfMayHninHtapi dbo:child ?grandchild .
  ?grandparentOfMayHninHtapi dbo:child ?parentOfMayHninHtapi .
}
```",3,3,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
182,14,val,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  {
    ?person a dbo:Writer ;
            foaf:name ""Gotabhaya Rajapaksa""@en .
    ?person dbo:work ?work .
    FILTER(CONTAINS(LCASE(?work), ""war""))
  }
  UNION
  {
    ?person a dbo:Writer ;
            foaf:name ""Mahesh Senanayake""@en .
    ?person dbo:work ?work .
    FILTER(CONTAINS(LCASE(?work), ""war""))
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
485,18,val,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Birth place of Joseph Whitaker (naturalist)
  dbr:Joseph_Whitaker_(naturalist) dbo:birthPlace ?whitakerBirthPlace .
  
  # Birth place of Thomas Warner (poet)
  dbr:Thomas_Warner_(poet) dbo:birthPlace ?warnerBirthPlace .

  # Check if both birth places are the same
  FILTER (?whitakerBirthPlace = ?warnerBirthPlace)

  # Ensure this common birth place is a region
  ?birthPlace rdf:type dbo:Region .
  
  # Link the common birth place to the variables
  BIND(?whitakerBirthPlace AS ?birthPlace)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
767,28,val,"Give me the reference to  and entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?administrationEntity WHERE {
  # Find Carl L. Nippert's alma mater
  ?nippert a dbo:Person ;
           foaf:name ""Carl L. Nippert"" ;
           dbo:almaMater ?almaMater .

  # Find an entity related to administration and settlement associated with Green
  ?administrationEntity a dbo:Settlement ;
                       dbo:administratorOf ?green .
  
  OPTIONAL {
    ?green foaf:name ""Green"" .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
767,21,val,"Give me the entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?adminRegion a dbo:AdministrativeRegion .
  ?adminRegion rdfs:label ""Green""@en .
  ?settlement a dbo:Settlement .
  ?settlement dbo:partOf ?adminRegion .
}
```",3,4,4,2,2,3,3,71,0,0,7,0,0.0,0
427,30,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiParty ?andreottiParty WHERE {
  # Romano Prodi's party affiliation
  dbr:Romano_Prodi a dbo:Person ;
                   dbo:partyAffiliation ?prodiParty .

  # Giulio Andreotti's party affiliation
  dbr:Giulio_Andreotti a dbo:Person ;
                       dbo:partyAffiliation ?andreottiParty .

  # Reference to Partito Popolare Italiano
  OPTIONAL {
    ?prodiParty rdfs:label ""Partito Popolare Italiano""@it .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
712,14,val,Give me the resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  ?person a dbo:Person .
  ?awardEvent dbo:awardee ?person ;
              rdfs:label ?showLabel .
  FILTER (CONTAINS(LCASE(?showLabel), ""soviet union"") || CONTAINS(LCASE(?showLabel), ""ussr""))
  OPTIONAL { 
    ?person dbo:deathPlace ?restingPlace .
  }
}
```",3,3,4,3,1,3,2,20,0,0,63,0,0.0,0
528,44,val,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?commander ?person WHERE {
  # Battle of La Rinconada de Ate and its commander
  OPTIONAL { 
    dbr:Battle_of_La_Rinconada_de_Ate dbo:participatedIn ?battle .
    ?battle dbo:commander ?commander .
  }
  
  # War involving Irene Morales
  OPTIONAL {
    dbr:Irene_Morales a dbo:Person ;
                      dbo:participatedIn ?war .
    ?war dbo:participatedIn ?battle .
  }

  # Information about Narciso Campero Leyes
  OPTIONAL {
    ?person a dbo:Person ;
            rdfs:label ""Narciso Campero Leyes""@en ;
            dbo:birthDate ?date .
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
963,15,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of Serbian Progressive Party.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find the time zone for Herzegovina-Neretva Canton
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timezone .
  
  # Determine the country and region associated with this time zone
  ?country dbo:timeZone ?timezone ;
           a dbo:Country .

  # Identify entities related to the Serbian Progressive Party administration
  ?admin dbr:Serbian_Progressive_Party dbo:administratorOf ?partyRole .
  
  # Find the entity in the identified country that matches both conditions
  ?entity dbo:country ?country ;
          dbo:administratorOf ?partyRole .
}
```",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
339,11,val,Give me the child of the child of Christian IX of Denmark and father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Christian IX of Denmark
  dbr:Christian_IX_of_Denmark a dbo:Person .

  # Children of Christian IX
  ?child1 dbo:parent dbr:Christian_IX_of_Denmark .
  
  # Grandchildren of Christian IX (Children of the children)
  ?grandchild dbo:parent ?child1 .

  # Princess Elizabeth of Greece and Denmark
  dbr:Princess_Elizabeth_of_Greece_and_Denmark a dbo:Person ;
    dbo:father ?father .

  # The father must be one of the grandchildren of Christian IX
  FILTER (?grandchild = ?father)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
391,31,val,"Give me the actor of The Departed and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find actors in ""The Departed""
  ?film a dbo:Film ;
        rdfs:label ""The Departed""@en .
  
  ?film dbo:starring ?actor .

  # Find the nickname of Jackson, Tennessee
  ?place a dbo:PopulatedPlace ;
         rdfs:label ""Jackson, Tennessee""@en ;
         dbo:nickname ?nickname .

  # Filter actors native to this place
  ?actor dbo:birthPlace ?nativePlace .
  
  FILTER (?nativePlace = ?place || ?nativePlace rdfs:label ?nickname)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,39,val,Give me the associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Associated Musical Artist of Jim Sheppard
SELECT ?artist WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Jim Sheppard""@en .
  OPTIONAL { ?person dbo:associatedMusicalArtist ?artist . }
}

UNION

# Part 2: Band of the Person Born as Joseph Michael
SELECT ?band WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""Joseph Michael"" .
  OPTIONAL { ?person dbo:associatedBand ?band . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,25,val,Give me the alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  VALUES (?person) { (dbr:C._L._Nippert) }
  ?person dbo:almaMater ?almaMater .
}

UNION

SELECT ?alterEgo WHERE {
  VALUES (?character) { (dbr:Black_Hood) }
  ?character dbo:alterEgo ?alterEgo .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
801,44,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in  and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?associatedArtist WHERE {
  # Find the song by 50 Cent that is also a work
  ?song a dbo:Song ;
        dbo:musicalArtist dbr:50_Cent ;
        dbo:workType ?workType .
  
  FILTER (?workType = dbo:Work) .

  # Identify the producer of this song
  ?song dbo:producer ?producer .

  # Find an associated musical artist who is a writer of ""40 Dayz & 40 Nightz""
  ?associatedArtist a dbo:MusicalArtist ;
                   dbo:writer dbr:40_Dayz_&_40_Nightz .
  
  OPTIONAL {
    ?song dbo:associatedBandMember ?associatedArtist .
  }
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
701,43,val,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfMeritamen ?spouseOfRamessesII ?grandParent WHERE {
  # Part 1: Parent of Meritamen
  OPTIONAL {
    ?meritamen a dbo:Person ;
               rdfs:label ""Meritamen""@en .
    ?meritamen dbo:parent ?parentOfMeritamen .
  }

  # Part 2: Spouse of Ramesses II
  OPTIONAL {
    ?ramessesII a dbo:Person ;
                rdfs:label ""Ramesses II""@en .
    ?ramessesII dbo:spouse ?spouseOfRamessesII .
  }
  
  # Part 3: Parent of the child of the child of Seti I
  OPTIONAL {
    ?setiI a dbo:Person ;
           rdfs:label ""Seti I""@en .
    ?child1 dbo:parent ?setiI ;
            a dbo:Person .
    ?grandChild dbo:parent ?child1 ;
                a dbo:Person .
    ?grandParent dbo:parent ?grandChild .
  }
}
```",5,5,6,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
701,25,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfHenuttawy ?spouseOfRamsesII WHERE {
  # Find Henuttawy (19th dynasty) and her parent
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy (19th dynasty)""@en .
  ?henuttawy dbo:parent ?parentOfHenuttawy .

  # Find Ramses II as the father of Merneptah
  ?merneptah a dbo:Person ;
             rdfs:label ""Merneptah""@en .
  ?merneptah dbo:father ?ramsesII .

  # Find spouse of Ramses II
  ?ramsesII dbo:spouse ?spouseOfRamsesII .

  FILTER (STR(?parentOfHenuttawy) = STR(?spouseOfRamesesII))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
547,19,val,Give me the resting place of the child of James Burton (property developer) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childRestingPlace ?simonCadellRestingPlace WHERE {
  # Find the resting place of James Burton's child
  ?jamesBurton a dbo:Person ;
               foaf:name ""James Burton"" ;
               dbo:occupation dbr:Property_developer .
  ?child dbo:parent ?jamesBurton ;
         dbo:deathPlace ?childRestingPlace .

  # Find the resting place of Simon Cadell
  ?simonCadell a dbo:Person ;
               foaf:name ""Simon Cadell"" .
  ?simonCadell dbo:deathPlace ?simonCadellRestingPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,21,val,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person1 ?spouse1 ?person2 ?spouse2 WHERE {
  ?person1 a dbo:Person ;
           dbo:birthName ""Ted Martin McGinley""@en .
  OPTIONAL { ?person1 dbo:spouse ?spouse1 . }
  
  ?person2 a dbo:Person ;
           dbo:birthName ""Georgeanne Marie Rice""@en .
  OPTIONAL { ?person2 dbo:spouse ?spouse2 . }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
659,41,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryConflict ?commander ?militaryForce WHERE {
  # Identify the Napoleonic Wars as a military conflict
  dbr:Napoleonic_Wars a dbo:MilitaryConflict .

  # Find Arthur Wellesley, 1st Duke of Wellington, and his command role
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington a dbo:Person ;
    dbo:militaryCommander ?militaryForce .

  # Link the military force to the Napoleonic Wars
  ?militaryConflict dbo:participatingMilitaryUnit ?militaryForce .
  
  # Identify the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) a dbo:MilitaryUnit ;
    dbo:participatingMilitaryConflict ?militaryConflict .

  # Bind the commander to Arthur Wellesley
  BIND(dbr:Arthur_Wellesley_1st_Duke_of_Wellington AS ?commander)
}
```",5,7,6,2,3,3,3,71,0,0,13,0,0.0,0
54,19,val,Give me the child of the father of Soe Min Wimala Dewi and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent WHERE {
  ?father a dbo:Person .
  ?father dbo:child dbr:Soe_Min_Wimala_Dewi .
  
  ?parent a dbo:Person .
  ?parent dbo:child dbr:Thado_Minsaw_of_Prome .

  FILTER (?father = ?parent)
  BIND(?father AS ?commonParent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,36,val,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Query 1: Find the spouse of Ted McGinley
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?ted { dbr:Ted_McGinley }
  ?ted a dbo:Person .
  ?ted dbo:spouse ?spouse .
}

# Query 2: Find an alumnus of Ohio State University born with their birth name
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?alumnus a dbo:Person ;
           dbo:almaMater dbr:Ohio_State_University ;
           dbo:name ?name .
  ?alumnus dbo:birthName ?birthName .
  FILTER (?name = ?birthName)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
820,14,val,Give me the child of the parent of the professional in Actor.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParent WHERE {
  ?actor a dbo:Person .
  ?actor dbo:profession dbr:Actor .

  ?parent dbo:child ?actor .

  ?parent dbo:child ?childOfParent .
}
```",3,3,4,3,1,3,2,20,0,5,354,0.0,0.0,0
547,20,val,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?actorRestingPlace ?jamesBurtonRestingPlace WHERE {
  # Find actors in ""Enemy at the Door""
  ?movie dbo:title ""Enemy at the Door""@en .
  ?movie dbo:starring ?actor .

  OPTIONAL { 
    ?actor dbo:deathPlace ?actorDeathPlace .
    BIND(IF(BOUND(?actorDeathPlace), ?actorDeathPlace, ?actor) AS ?actorRestingPlace)
  }
  
  OPTIONAL {
    ?actor dbo:burial ?actorBurial .
    BIND(IF(BOUND(?actorBurial), ?actorBurial, ?actorRestingPlace) AS ?actorRestingPlace)
  }

  # Find James Burton (Egyptologist) and his resting place
  ?james a dbo:Egyptologist ;
         rdfs:label ""James Burton""@en .
  
  OPTIONAL {
    ?james dbo:deathPlace ?jamesDeathPlace .
    BIND(IF(BOUND(?jamesDeathPlace), ?jamesDeathPlace, ?james) AS ?jamesBurtonRestingPlace)
  }
  
  OPTIONAL {
    ?james dbo:burial ?jamesBurial .
    BIND(IF(BOUND(?jamesBurial), ?jamesBurial, ?jamesBurtonRestingPlace) AS ?jamesBurtonRestingPlace)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
528,26,val,Give me the war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT DISTINCT ?war ?commander WHERE {
  ?war a dbo:War .
  ?commander a dbo:Person ;
            dbo:commanderOf ?war .
  ?work dbo:author ?commander ;
        dcterms:date ?date .
  FILTER (MONTH(?date) = 1 && DAY(?date) = 9)
}
```",3,3,4,3,1,3,3,71,0,0,14,0,0.0,0
767,24,val,Give me the reference to  and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""George K. Nash""@en .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
801,34,val,Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find Lamont Cranston, The Shadow's alter ego
SELECT ?alterEgo WHERE {
  ?person a dbo:FictionalCharacter .
  ?person rdfs:label ""The Shadow""@en .
  ?person dbo:alterEgo ?alterEgo .
  FILTER (lang(?alterEgo) = 'en')
}

UNION

# Query to find Grizzly Bear, associated with Chris Taylor
SELECT ?band WHERE {
  ?musician a dbo:MusicArtist .
  ?musician rdfs:label ""Chris Taylor (music producer)""@en .
  ?musician dbo:associatedBand ?band .
  FILTER (lang(?band) = 'en')
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
666,14,val,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  ?club a dbo:SportsClub .
  ?club dbo:sport dbp:Soccer .
  ?club dbo:country dbr:England .
  OPTIONAL { ?club rdfs:label ?nickname FILTER (lang(?nickname) = 'en') }
}
```",3,6,4,3,1,3,2,20,0,0,12,0,0.0,0
492,23,val,Give me the person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?author dbo:subject dbr:French_Algeria .
  ?author a dbo:Writer .
  
  ?author dbo:deathPlace ?place .

  ?person dbo:deathPlace ?place .
  FILTER (?person != ?author)
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
747,25,val,Give me the band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band WHERE {
  VALUES ?person { 
    dbr:Tracy_Bonham 
    dbr:Ambrosia_Parsley 
  }
  
  OPTIONAL {
    ?person dbo:memberOfBand ?band .
  }

  UNION

  OPTIONAL {
    ?band dbo:member ?person .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,27,val,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  ?institution a dbo:EducationalInstitution ;
               a dbo:Organization ;
               dbo:country dbr:Northern_Ireland .
  OPTIONAL { ?institution rdfs:label ?nickname . FILTER (lang(?nickname) = ""en"") }
}
```",3,5,4,3,1,3,3,71,0,0,13,0,0.0,0
378,44,val,Give me the war of the commander in Peninsular War and claim to fame of the commander in Great Siege of Gibraltar and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the commander in the Peninsular War and their claim to fame
SELECT ?commander ?claimToFame WHERE {
  ?commander a dbo:Person .
  ?commander dbo:commanderOf dbr:Peninsular_War .
  OPTIONAL { ?commander dbo:claimToFame ?claimToFame . }
}

# Query for the person with claim to fame in the Great Siege of Gibraltar
SELECT ?person ?claimToFame WHERE {
  ?person a dbo:Person .
  ?person dbo:claimToFame dbr:Great_Siege_of_Gibraltar .
}

# Query for the war associated with Carl Pontus Gahn
SELECT ?war WHERE {
  dbr:C_Pontus_Gahn dbo:commanderOf ?war .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
801,30,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Identify the writer of ""40 Dayz & 40 Nightz""
  ?work1 dbo:title ""40 Dayz & 40 Nightz"" ;
         dbo:writer ?person .

  # Ensure the person is also a musical artist
  ?person dbo:musicalArtist true .

  # Ensure the person is an artist (general)
  ?person dbo:artist true .

  # Identify the producer of ""Westside Story (song)""
  ?work2 dbo:title ""Westside Story (song)"" ;
         dbo:producer ?person .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,20,val,Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war WHERE {
  # For the Peninsular War commander
  { 
    ?person a dbo:Person .
    ?person rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
    ?commanderRole dbo:commander dbr:Peninsular_War .
    ?commanderRole dbo:agent ?person .
  }
  
  UNION
  
  # For Carl Pontus Gahn
  { 
    ?person a dbo:Person .
    ?person rdfs:label ""Carl Pontus Gahn""@en .
    ?participation dbo:participatedIn ?war .
    ?participation dbo:agent ?person .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
9,44,val,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?figure WHERE {
  # Find the nickname of Queen's University Belfast
  dbr:Queen's_University_Belfast dbo:nickname ?nickname .
  
  # Check if this figure is also an alma mater for John Alderdice
  dbr:John_Alderdice dbo:almaMater ?figure .

  # Check if this figure is also an alma mater for the awardee of Royal Medal
  ?awardee dbo:award ?royalMedal .
  ?royalMedal a dbo:RoyalMedal .
  ?awardee dbo:almaMater ?figure .

  FILTER (?figure = dbr:Queen's_University_Belfast)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
339,15,val,Give me the father of Princess Elizabeth of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the father of Princess Elizabeth of Greece and Denmark
  ?princess a dbo:Person ;
            rdfs:label ""Princess Elizabeth of Greece and Denmark""@en .
  ?father dbo:child ?princess .

  # Identify Frederick VIII's predecessor
  ?frederickVIII dbr:Frederick_VIII_of_Denmark ;
                 dbo:predecessor ?predecessor .

  # Find the child of the predecessor
  ?childOfPredecessor dbo:child ?predecessor .

  # Find the grandchild (child of the child)
  ?grandChild dbo:child ?childOfPredecessor .

  # Check if the father is also the grandchild
  FILTER (?father = ?grandChild)

  BIND(?father AS ?person)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
547,39,val,Give me the resting place of Simon Cadell and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Simon Cadell's resting place
SELECT ?restingPlace WHERE {
  dbr:Simon_Cadell a dbo:Person .
  dbr:Simon_Cadell dbo:finalBurial ?restingPlace .
}

UNION

# Query to find the awardee of Gerald Graham's award and their resting place
SELECT ?awardeeRestingPlace WHERE {
  # Find the award associated with Gerald Graham
  ?award a dbo:Award ;
         dbo:recipient dbr:Gerald_Graham .

  # Find the awardee of that award
  ?otherAward a dbo:Award ;
              rdfs:label ?awardLabel .
  FILTER (CONTAINS(LCASE(?awardLabel), LCASE(STR(?award)))) 
  ?otherAward dbo:recipient ?awardee .

  # Get the resting place of the awardee
  ?awardee dbo:finalBurial ?awardeeRestingPlace .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
528,36,val,Give me the war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?narcisoCampero ?birthName ?event WHERE {
  # Find Narciso Campero and his birth name
  ?narcisoCampero a dbo:Person ;
                  rdfs:label ""Narciso Campero""@en .
  OPTIONAL { ?narcisoCampero dbo:birthName ?birthName . }

  # Find Irene Morales
  ?ireneMorales a dbo:Person ;
                rdfs:label ""Irene Morales""@en .

  # Look for events or relationships involving both individuals
  ?event dbo:agent ?narcisoCampero .
  ?event dbo:agent ?ireneMorales .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
617,24,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus III the Great
  ?antiochus a dbo:Person ;
             rdfs:label ""Antiochus III the Great""@en .
  
  # Child of Antiochus III the Great who is parent of Nysa
  ?child dbo:parent ?nysa ;
         dbo:child ?antiochus .

  # Nysa, wife of Pharnaces I of Pontus
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  
  # Spouse of the child
  ?child dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
339,13,val,Give me the child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Step 1: Identify Frederick VIII of Denmark
  dbr:Frederick_VIII_of_Denmark a dbo:Monarch ;
                                  dbo:predecessor ?predecessor .

  # Step 2: Find the child of the predecessor
  ?predecessor dbo:child ?child .

  # Step 3: Find the grandchild (child of the child)
  ?child dbo:child ?grandchild .
}
```",3,3,4,3,1,3,2,20,0,0,32,0,0.0,0
16,20,val,Give me the professional in the profession of Satomi Ishihara and spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person ;
          dbo:profession ?profession .

  FILTER (?satomi = dbr:Satomi_Ishihara)

  # Find Ted McGinley's spouse
  ?ted a dbo:Person ;
       dbo:spouse ?professional .

  FILTER (?ted = dbr:Ted_McGinley)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,18,val,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Spouse of Laodice IV
  ?laodiceIV dbo:spouse ?person ;
            rdfs:label ""Laodice IV""@en .

  # Child of Antiochus III the Great
  ?antiochusIII dbo:child ?person ;
                rdfs:label ""Antiochus III the Great""@en .
  
  # Parent of Nysa (wife of Pharnaces I of Pontus)
  ?nysa dbo:parent ?person ;
        rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
996,14,val,Give me the entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity a dbo:Person .
  ?entity dbo:birthPlace ?place .
  ?place rdfs:label ""Palestine""@en .
  FILTER (LANG(?place) = 'en')
  OPTIONAL { ?entity dbo:award ?award }
}
```",3,3,4,3,1,3,2,20,0,0,292,0,0.0,0
391,21,val,Give me the native of the figure known as Hub City and actor of All About the Andersons.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the city known as ""Hub City""
  ?city rdfs:label ""Hub City""@en .
  
  # Find the actor of ""All About the Andersons""
  ?actor dbo:spouse ?show ;
         dbp:title ""All About the Andersons"" .

  # Ensure the person is a native of Hub City and an actor in All About the Andersons
  ?person dbo:nationality ?city .
  ?person dbr:All_About_the_Andersons .
  
  FILTER (str(?actor) = str(?person))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
345,14,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?team WHERE {
  # Step 1: Get Eiður Guðjohnsen's birth date
  VALUES ?eiður_birth_date { 
    SELECT ?birthDate WHERE {
      dbr:Eiður_Guðjohnsen dbo:birthDate ?birthDate .
    }
  }

  # Step 2: Find a person who is both a soccer player and manager, born on the same date
  ?person a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          dbo:birthDate ?date .

  FILTER (?date = ?eiður_birth_date)

  # Step 3: Retrieve the team of this person
  OPTIONAL { ?person dbo:team ?team }
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
9,37,val,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?almaMater WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Royal_Medal .
  ?person dbo:almaMater ?almaMater .
}
```",4,5,5,3,2,3,3,71,1,316,0,0.0031545741324921135,1.0,0.006289308176100629
492,42,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in Franco-Hova Wars
  ?warEvent dbo:commander ?person ;
            rdfs:label ""Franco-Hova Wars""@en .

  # Death place at the capital of Algeria (Algiers)
  ?deathPlace1 dbo:city ?algiers ;
               dbo:deceased ?person .
  ?algiers rdfs:label ""Algiers""@en .

  # Death place at Joseph C. Satterthwaite's workplace
  ?office dbr:Joseph_C._Satterthwaite dbo:workLocation ?deathPlace2 .
  ?deathPlace2 dbo:deceased ?person .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
617,28,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Laodice IV's spouse
  ?laodiceIV a dbo:Person ;
             rdfs:label ""Laodice IV""@en .
  
  ?laodiceIV dbo:spouse ?spouse .

  # Child of Laodice IV and her spouse
  ?child dbo:parent ?laodiceIV ;
         dbo:parent ?spouse .

  # Ensure the child is royalty
  ?child a dbo:RoyalFamilyMember .

  # Parent of Nysa (wife of Pharnaces I of Pontus)
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  
  ?nysa dbo:parent ?child .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
534,13,val,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childBirthPlace WHERE {
  ?parent a dbo:Person ;
          dbo:nationality dbr:Essex ;
          dbo:occupation dbr:Politician .
  
  ?child dbo:child ?parent ;
         a dbo:Person, dbo:OfficeHolder ;
         dbo:occupation dbr:Politician .

  ?child dbo:birthPlace ?childBirthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,23,val,Give me the parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?amunherkhepeshef a dbo:Person ;
                    rdfs:label ""Amun-her-khepeshef""@en .
  
  ?spouse dbo:spouse ?amunherkhepeshef .

  ?child dbo:child ?spouse .

  ?parent dbo:parent ?child .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
48,12,val,"Give me the band of Carl Falk and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?carlFalkBand ?honorUpBand WHERE {
  # Find Carl Falk's band
  dbr:Carl_Falk a dbo:Person .
  OPTIONAL { dbr:Carl_Falk dbo:band ?carlFalkBand . }

  # Identify the actor Honor Up and their musical artist identity
  ?actor a dbo:Actor ;
         rdfs:label ""Honor Up""@en .
  
  # Find the band associated with this musical artist
  OPTIONAL { ?actor dbo:musicalArtist ?musicalArtist . }
  OPTIONAL { ?musicalArtist dbo:band ?honorUpBand . }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
182,15,val,Give me the entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author ?entityInSriLanka ?war WHERE {
  # Find the author of the bombings
  ?event a dbo:Event .
  ?event dbo:title ""2019 Sri Lanka Easter bombings"" ;
         dbo:perpetrator ?author .

  OPTIONAL {
    # Find an entity in Sri Lanka related to the author
    ?author dbo:birthPlace ?entityInSriLanka .
    FILTER (CONTAINS(LCASE(STR(?entityInSriLanka)), ""sri lanka""))
  }

  OPTIONAL {
    # Check if the author participated in any war
    ?author dbo:participatedIn ?war .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
528,23,val,"Give me the war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war a dbo:War .
  ?war dbo:militaryForce ?militaryForce .
  ?war dbo:country dbr:Chile .
}
```",3,4,4,3,1,3,3,71,0,0,235,0,0.0,0
429,7,val,Give me the administration of the father of Martha Johnson Patterson and country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find the administration of Martha Johnson Patterson's father
SELECT ?father ?administration WHERE {
  ?martha a dbo:Person ;
          foaf:name ""Martha Johnson Patterson""@en .
  ?martha dbo:father ?father .
  OPTIONAL { ?father dbo:positionHeld ?office . }
  OPTIONAL { ?father dbo:officeHolder ?administration . }
}

# Query to find the country of the 77th Ohio Infantry Regiment
SELECT ?country WHERE {
  dbr:77th_Ohio_Infantry_Regiment a dbo:MilitaryUnit ;
                                    dbo:nationality ?country .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
54,34,val,Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalChild WHERE {
  # Step 1: Find Thinkhaya of Pagan
  ?thinkhaya a dbo:Person ;
             rdfs:label ""Thinkhaya of Pagan""@en .

  # Step 2: Find the child of Thinkhaya
  ?childOfThinkhaya dbo:father ?thinkhaya .
  
  # Step 3: Identify Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameitta a dbo:Person ;
           rdfs:label ""Ameitta Thiri Maha Dhamma Dewi of Ava""@en .

  # Step 4: Find the predecessor of Ameitta
  ?predecessor dbo:predecessor ?ameitta .
  
  # Step 5: Identify the child of this predecessor (which is the child of Thinkhaya's child)
  ?finalChild dbo:father ?predecessor .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
959,20,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Yōichi Masuzoe's nationality or birthplace that is a country
  ?masuzoe a dbo:Person ;
           foaf:name ""Yōichi Masuzoe"" .
  
  OPTIONAL { ?masuzoe dbo:nationality ?country . }
  OPTIONAL { ?masuzoe dbo:birthPlace ?country . }

  # Ensure the place is a country
  FILTER EXISTS {
    ?country a dbo:Country .
  }

  # Find members of University of Tsukuba with the same nationality or birthplace
  ?person a dbo:Person ;
          foaf:name ?name ;
          (dbo:nationality|dbo:birthPlace) ?sameCountry .

  # Ensure they are associated with University of Tsukuba
  ?person dbo:almaMater dbr:University_of_Tsukuba .

  # Match the country or birthplace
  FILTER (?sameCountry = ?country)
}
```",3,4,4,2,2,3,3,71,0,0,84,0,0.0,0
435,14,val,Give me the territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory (GROUP_CONCAT(DISTINCT ?timeZoneRegion; separator="", "") AS ?timeZoneRegions) WHERE {
  # Territory administered from Reykjavík
  ?territory dbo:administrativeCapital dbr:Reykjavík .
  
  # Time zone region for Bombali Shebora Chiefdom
  OPTIONAL {
    dbr:Bombali_Shebora_Chowchiefdom dbo:timeZoneRegion ?timeZoneRegion .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
747,21,val,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Retrieve Pavlo Khudzik's birth date
  VALUES (?pavloBirthDate) { 
    SELECT ?date WHERE {
      dbr:Pavlo_Khudzik dbo:birthDate ?date .
    }
  }

  # Find people born on the same date as Pavlo Khudzik
  ?person a dbo:Person ;
          dbo:birthDate ?date .

  FILTER (?date = ?pavloBirthDate)

  # Retrieve band associated with Shèna
  VALUES (?band) { 
    SELECT ?band WHERE {
      dbr:Shèna dbo:associatedBand ?band .
    }
  }

  OPTIONAL {
    ?person dbo:memberOf ?band .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
994,29,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Meshuggah band members and their associated artists
  {
    ?meshuggahMember a dbo:Person .
    ?meshuggahMember dbo:bandMember dbr:Meshuggah .
    ?meshuggahMember dbo:associatedBand ?artist1 .
    FILTER (?artist1 != dbr:Meshuggah)
  }
  
  UNION
  
  # S.A. Slayer (Jeff Hanneman) and his associated artists
  {
    ?slayerMember a dbo:Person ;
                  foaf:name ""Jeff Hanneman""^^xsd:string .
    ?slayerMember dbo:bandMember dbr:Slayer .
    ?slayerMember dbo:associatedBand ?artist2 .
    FILTER (?artist2 != dbr:Slayer)
  }
  
  UNION
  
  # Don Dokken's band members and their associated artists
  {
    ?dokkenMember a dbo:Person ;
                  dbo:bandMember ?dokkenBand .
    ?dokkenBand dbo:bandMember dbr:Don_Dokken .
    ?dokkenMember dbo:associatedBand ?artist3 .
    FILTER (?artist3 != ?dokkenBand)
  }
  
  # Ensure the associated artists are bands, groups, and organizations
  {
    ?artist1 a dbo:Band ;
             a dbo:MusicalGroup ;
             a dbo:Organization .
  }
  
  UNION
  
  {
    ?artist2 a dbo:Band ;
             a dbo:MusicalGroup ;
             a dbo:Organization .
  }
  
  UNION
  
  {
    ?artist3 a dbo:Band ;
             a dbo:MusicalGroup ;
             a dbo:Organization .
  }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
528,29,val,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role ?battle WHERE {
  VALUES ?individual { 
    dbr:Irene_Morales 
    dbr:Narciso_Campero 
    # Assuming a placeholder for the commander in Battle of La Rinconada de Ate
    dbr:Commander_in_Battle_of_La_Rinconada_de_Ate 
  }
  
  ?individual a dbo:Person .
  
  OPTIONAL {
    ?individual dbo:participatedIn ?battle .
    FILTER (CONTAINS(LCASE(STR(?battle)), ""rinconada de ate"") || CONTAINS(LCASE(STR(?battle)), ""war""))
    BIND(""participant"" AS ?role)
  }
  
  OPTIONAL {
    ?individual dbo:commanderOf ?battle .
    FILTER (CONTAINS(LCASE(STR(?battle)), ""rinconada de ate""))
    BIND(""commander"" AS ?role)
  }
  
  OPTIONAL {
    ?individual dbo:memberOf ?force .
    ?force dbo:participatedIn ?battle .
    FILTER (CONTAINS(LCASE(STR(?battle)), ""war"") && CONTAINS(LOWER(STR(?force)), ""narciso campero""))
    BIND(""member"" AS ?role)
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
617,23,val,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find Antiochus II Theos
  ?antiochus a dbo:Monarch ;
             rdfs:label ""Antiochus II Theos""@en .
  
  # Find his successor who is also royalty
  ?successor dbo:successor ?antiochus ;
            a dbo:Monarch .

  # Find the child of this successor who is royalty
  ?child dbo:parent ?successor ;
         a dbo:Monarch .

  # Find the grandchild (child of the child) who is royalty
  ?grandchild dbo:parent ?child ;
              a dbo:Monarch .
}
```",3,5,4,3,1,3,3,71,0,0,5,0,0.0,0
54,20,val,Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan's child
  ?child dbo:parent dbr:Thinkhaya_of_Pagan .
  
  # Narapati I of Ava's grandchild (through their parent)
  ?grandchild dbo:parent ?person .
  ?parent dbo:parent dbr:Narapati_I_of_Ava .
  ?grandchild dbo:parent ?parent .

  # The person who is both a child of Thinkhaya and a parent to Narapati I's child
  FILTER (?child = ?person)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,22,val,"Give me the war of the profession, that is a military unit, of Heather Roy and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?heatherMilitaryUnit ?beauchampMilitaryUnit WHERE {
  # Heather Roy's military unit or war-related profession
  OPTIONAL {
    dbr:Heather_Roy dbo:militaryUnit ?heatherMilitaryUnit .
  }
  
  # Beauchamp Seymour, 1st Baron Alcester's military unit or role
  OPTIONAL {
    dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:militaryUnit ?beauchampMilitaryUnit .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,40,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in the force of the native (Irish)
  ?person dbo:nativeOf dbr:Ireland .

  # Office holder in Kingdom of Ireland
  ?officeHolderOf dbr:Kingdom_of_Ireland .
  ?person dbo:officeHolderOf ?officeHolderOf .

  # Commander in Battle of Leipzig
  ?battle dbr:Battle_of_Leipzig .
  ?person dbo:commanderInBattle ?battle .

  # Military force during Napoleonic Wars
  ?militaryForce dbr:Napoleonic_Wars .
  ?person dbo:militaryForce ?militaryForce .
}
```",5,6,6,3,3,3,3,71,0,0,5,0,0.0,0
184,40,val,"Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Archduchess Ilona's parent
  ?ilonaParent a dbo:Person ;
               dbo:child dbr:Archduchess_Ilona_of_Austria .
  
  # Find Archduke Joseph August's child
  ?josephChild a dbo:Person ;
               dbo:parent dbr:Archduke_Joseph_August_of_Austria .

  # The person must be both the parent of Ilona and the child of Joseph August
  FILTER (?ilonaParent = ?person && ?josephChild = ?person)

  # Find a landmark at elevation 96.0 that is a settlement
  ?landmark a dbo:Place ;
            dbo:elevation ""96.0""^^xsd:float .
  
  # Identify the native of this landmark
  ?nativePerson a dbo:Person ;
                dbo:nativePlace ?landmark .

  # The person must also be the parent of the native of the landmark
  ?person dbo:child ?nativePerson .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
378,26,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war a dbo:War .
  ?war dbo:commander ?commander .
  ?reference dbo:reference ?peninsularWar .
  ?peninsularWar rdfs:label ""Peninsular War""@en .
  FILTER EXISTS { ?commander dbo:reference ?reference }
}
```",3,4,4,3,1,3,3,71,0,0,118,0,0.0,0
767,35,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

SELECT ?entity WHERE {
  ?settlement a dbo:Settlement .
  ?settlement rdfs:label ""Green""@en .
  
  ?adminEntity dbo:administrativeUnit ?settlement .

  ?blackHood dbr:Black_Hood .
  ?alterEgo owl:sameAs ?blackHood .
  ?entity owl:sameAs ?alterEgo .
}
```",4,5,5,2,2,3,3,71,0,0,7,0,0.0,0
747,38,val,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerBand ?personBand WHERE {
  # Part 1: Band of the writer of ""Apollo"" by Hardwell
  OPTIONAL {
    ?song dbo:title ""Apollo"" .
    ?song dbo:lyricist ?writer .
    ?writer dbo:band ?writerBand .
    FILTER (str(?song) = str(dbr:Apollo_(Hardwell_song)))
  }

  # Part 2: Band of the person born as Tracey Elizabeth McSween
  OPTIONAL {
    ?person foaf:name ""Tracey Elizabeth McSween"" .
    ?person dbo:band ?personBand .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
360,19,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of Johannesburg.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album a dbo:Album .
  ?album dbo:composer ?person1 ;
         dbo:composer ?person2 .

  FILTER (?person1 = dbr:Dave_Flett || ?person2 = dbr:Dave_Flett) .
  FILTER (?person1 = dbr:Manfred_Mann || ?person2 = dbr:Manfred_Mann) .

  OPTIONAL { ?person1 dbo:birthPlace dbr:Johannesburg . }
  OPTIONAL { ?person2 dbo:birthPlace dbr:Johannesburg . }

  BIND(IF(?person1 = dbr:Dave_Flett, ?person2, ?person1) AS ?writer)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
994,42,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the associated musical artist of Red Tide (band)
SELECT ?redTideArtist WHERE {
  dbr:Red_Tide_(band) dbo:associatedMusicalArtist ?redTideArtist .
}

# Step 2: Find a band member of Donald Maynard Dokken who is also a musical artist
SELECT ?dokkenBandMember WHERE {
  dbr:Don_Dokken dbo:bandMember ?dokkenBandMember .
  ?dokkenBandMember a dbo:MusicalArtist .
}

# Step 3: Find the associated musical artist of Watchtower (band)
SELECT ?watchtowerArtist WHERE {
  dbr:Watchtower_(band) dbo:associatedMusicalArtist ?watchtowerArtist .
}

# Step 4: Find the associated musical artist of the result from step 3
SELECT ?finalArtist WHERE {
  ?intermediateArtist dbo:associatedMusicalArtist ?finalArtist .
  VALUES ?intermediateArtist { ?watchtowerArtist }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
251,13,val,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the administration of Forza Italia in 2013
SELECT ?person WHERE {
  ?party a dbo:PoliticalParty .
  ?party rdfs:label ""Forza Italia""@en .
  ?party dbo:leader ?person .
  ?event dbo:politicalParty ?party ;
         dbo:date ?date .
  FILTER (YEAR(?date) = 2013)
}

# Query for the location of wars involving Louis François Félix Musnier
SELECT DISTINCT ?war ?location WHERE {
  ?musnier a dbo:Person ;
           rdfs:label ""Louis François Félix Musnier""@en .
  ?conflict a dbo:MilitaryConflict ;
            dbo:participant ?musnier ;
            dbo:location ?location .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
492,35,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Death place is Algiers, the capital of Algeria
  ?deathPlace1 dbo:country dbr_Algeria ;
              rdfs:label ""Algiers""@en .
  ?person dbo:deathPlace ?deathPlace1 .

  # Joseph C. Satterthwaite's work location
  ?workLocation rdfs:label ""United States Department of State""@en ;
                dbo:employee ?satterthwaite .
  ?satterthwaite foaf:name ""Joseph C. Satterthwaite"" .
  ?person dbo:deathPlace ?workLocation .
}
```",4,5,5,2,2,3,3,71,0,0,16,0,0.0,0
161,25,val,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Identify Emilio Mola's participation in the Spanish Civil War
  ?militaryForce dbo:participatedIn dbr:Spanish_Civil_War .
  ?militaryForce dbo:commander ?person .
  
  # Ensure Emilio Mola is associated with this military force
  ?person rdfs:label ""Emilio Mola""@en .

  OPTIONAL {
    ?militaryForce dbo:commander ?commander .
  }
}
```",3,4,4,2,2,3,3,71,0,0,32,0,0.0,0
801,28,val,Give me the producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query 1: Producer of ""Westside Story"" (song)
SELECT ?producer WHERE {
  dbr:Westside_Story_(song) dbo:producer ?producer .
}

# Query 2: Associated musical artist of Chris Taylor (music producer)
SELECT ?artist WHERE {
  dbr:Chris_Taylor_(record_producer) dbo:associatedMusicalArtist ?artist .
}

# Query 3: Professional in the alter ego of The Shadow
SELECT ?professional WHERE {
  ?shadow a dbo:Person ;
          rdfs:label ""The Shadow""@en .
  ?shadow foaf:name ?name .
  ?person foaf:name ?name ;
          a dbo:Person .
  ?person dbo:profession ?professional .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
981,11,val,Give me the entity in the region of Time in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInTimeRegion ?birthPlace WHERE {
  # Find entity in the region of Time in Indonesia
  ?entityInTimeRegion a dbo:TimeZone .
  ?entityInTimeRegion dbo:country dbr:Indonesia .

  # Find birth place of Novia Indriani Mamuaja
  OPTIONAL {
    dbr:Novia_Indriani_Mamuaja dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
232,19,val,Give me the child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""John Devon Roland Pertwee"" .
  ?film dbo:actor ?person .
  ?film rdfs:label ""Dog Soldiers""@en .
  FILTER (CONTAINS(LCASE(?film), LCASE(""dog soldiers"")))
  ?person dbo:child ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,13,val,"Give me the child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Step 1: Identify Mlada (abbess)
  ?mlada a dbo:Person ;
         rdfs:label ""Mlada (abbess)""@en .
  
  # Step 2: Find Parent of Mlada
  ?parent dbo:child ?mlada .

  # Step 3: Find Child of the Parent
  ?royalChild dbo:child ?parent .

  # Step 4: Identify Royalty among these children
  ?royalChild a ?royalClass .
  FILTER (
    ?royalClass IN (dbo:Monarch, dbo:RoyalFamily) ||
    EXISTS { ?royalChild dbo:royalTitle ?title }
  )

  # Step 5: Find Child of the Royal Individual
  ?grandchild dbo:child ?royalChild .
}
```",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
801,33,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  ?professional a dbo:Person .
  ?professional dbo:profession ?artistRole .
  ?artistRole rdfs:subClassOf* dbo:MusicalArtist .
  ?producerRole rdfs:subClassOf* dbo:Producer .
  ?professional dbo:profession ?producerRole .

  ?work dbo:genre ?musicalGenre ;
        a dbo:Song, dbo:MusicalWork .

  ?professional dbo:work ?work .
}
```",4,8,5,3,2,3,3,71,0,0,473,0,0.0,0
959,38,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace ?residenceCountry ?manager WHERE {
  # Yōichi Masuzoe's native place and residence country
  dbr:Yōichi_Masuzoe a dbo:Person .
  dbr:Yōichi_Masuzoe dbo:nativePlace ?nativePlace .
  dbr:Yōichi_Masuzoe dbo:residence ?residence .
  ?residence dbo:country ?residenceCountry .

  # Takashi Sekizuka's team manager
  OPTIONAL {
    ?team dbo:manager ?manager .
    ?person dbo:memberOfTeam ?team .
    ?person dbr:Takashi_Sekizuka .
  }
}
```",4,5,5,2,2,3,3,71,0,0,6,0,0.0,0
959,34,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?manager a dbo:Person .
  ?manager dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1958)
  
  ?manager dbo:positionHeld ?position .
  ?position dbo:organization dbr:Júbilo_Iwata ;
            dbo:startDate ?startYear .
  FILTER (?startYear <= ""2013-12-31""^^xsd:date && 
          ?startYear >= ""2013-01-01""^^xsd:date)
  
  ?manager dbo:almaMater ?university .
  ?university a dbo:University ;
              dbo:country dbr:Japan ;
              rdf:type dbo:EducationalOrganization .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
378,31,val,Give me the war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?joaquinBlakeWar ?carlPontusGahnBirthName WHERE {
  # Joaquín Blake's war involvement
  dbr:Joaqu%C3%ADn_Blake dbo:participatedIn ?joaquinBlakeWar .
  
  # Carl Pontus Gahn's birth name
  dbr:Carl_Pontus_Gahn dbo:birthName ?carlPontusGahnBirthName .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
959,44,val,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Takashi Sekizuka's team manager
  ?team a dbo:SoccerTeam .
  ?team dbo:member dbr:Takashi_Sekizuka .
  ?team dbo:coach ?manager .

  # Yōichi Masuzoe's native country of residence
  ?residence dbo:nativeCountry ?country .
  ?residence dbr:Yōichi_Masuzoe .

  # University of Tsukuba member
  ?person dbo:almaMater dbr:University_of_Tsukuba .
  
  # Ensure the manager is also a member of the University of Tsukuba
  FILTER (?manager = ?person)
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
182,12,val,Give me the war of Mahesh Senanayake and entity in Sri Lanka and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?conflict WHERE {
  VALUES ?individual { 
    dbr:Mahesh_Senanayake 
    dbr:Jagath_Dias 
  }
  
  ?person a dbo:Person .
  ?person rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), LCASE(""Mahesh Senanayake"")) || CONTAINS(LCASE(?name), LCASE(""Jagath Dias"")))
  
  OPTIONAL { ?person dbo:militaryConflict ?conflict . }
  FILTER EXISTS { ?conflict dbo:location dbr:Sri_Lanka . }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
488,27,val,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  # Tokugawa Masako's spouse
  ?spouse a dbo:Person ;
          dbo:spouse dbr:Tokugawa_Masako .
  
  # Spouse's father who is royalty
  ?father a dbo:Person ;
          dbo:child ?spouse ;
          dbo:royalty true .

  # Administration held by the spouse's father
  ?positionHeld a dbo:PositionHeld ;
                dbo:agent ?father ;
                dbo:administration ?administration .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
232,20,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?sean a dbo:Person ;
        rdfs:label ""Sean Pertwee""@en .
  
  ?jon a dbo:Person ;
       rdfs:label ""Jon Pertwee""@en ;
       dbo:child ?sean .

  ?film a dbo:Film ;
        dbo:actor ?actor ;
        dbo:subject ?conflict .

  ?conflict a dbo:MilitaryConflict .

  ?sean dbo:claimToFame ?film .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
328,26,val,Give me the commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Budapest .
  ?person dbo:militaryCommander ?commander .
}
```",3,3,4,3,1,3,3,71,0,0,306,0,0.0,0
16,25,val,Give me the professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Gigi Rice"" .
  OPTIONAL { ?person dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(?occupation), ""actress"")) }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,32,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Sean Pertwee
  ?sean a dbo:Person ;
        rdfs:label ""Sean Pertwee""@en .
  
  # Identify his claim to fame (film and military conflict)
  ?sean dbo:filmography ?film .
  ?sean dbo:militaryConflict ?conflict .

  # Find the actor involved in both
  ?actor dbo:filmography ?film ;
         dbo:militaryConflict ?conflict .

  # Find John Devon Roland Pertwee (Sean's father)
  ?john a dbo:Person ;
        rdfs:label ""John Devon Roland Pertwee""@en .
  
  # Ensure Sean is the child of John
  ?john dbo:child ?sean .

  # Check if there is a child of John who matches the actor
  OPTIONAL { ?john dbo:child ?actor }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
767,42,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?settlement a dbo:Settlement .
  
  # Entity in the administration of Green
  ?admin a dbo:AdministrativeRegion ;
         dbo:partOf dbr:Green .

  # Settlement is part of this administration
  ?settlement dbo:partOf ?admin .

  # Alter ego of Black Hood
  ?alias a dbo:Alias ;
         rdfs:label ""Black Hood"" .
  
  # Alma mater of Carl L. Nippert
  ?almaMater a dbo:EducationalInstitution ;
             dbo:alumni dbr:Carl_L._Nippert .

  # Settlement is related to the alter ego and alma mater
  ?settlement dbo:alias ?alias .
  ?settlement dbo:almaMater ?almaMater .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,22,val,Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Query for Tracey Elizabeth McSween's band
  { 
    OPTIONAL { 
      dbr:Tracey_McSween a dbo:Person .
      dbr:Tracey_McSween dbo:band ?band .
    }
  }

  UNION

  # Query for the person born on 1985-04-29 and their band
  {
    ?person a dbo:Person .
    ?person dbo:birthDate ?date .
    FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
    OPTIONAL { 
      ?person dbo:band ?band .
    }
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,29,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?child a dbo:Person .
  ?child dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  ?person dbo:spouse ?child .
  ?person dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .
  ?person a dbo:Royalty .
  ?grandchild dbo:parent ?person .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
659,26,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?polishHorse a dbo:MilitaryUnit ;
               rdfs:label ""Polish Horse""@en .
  
  ?war a dbo:War ;
       dbo:participatingOrganisation ?polishHorse .

  ?polishHorse dbo:commander ?commander .
}
```",3,7,4,3,1,3,3,71,0,0,130,0,0.0,0
747,31,val,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athlete WHERE {
  # Find the decedent's birth date
  ?decedent a dbo:Person .
  ?decedent dbo:birthDate ?date .

  # Find an athlete who is also a soccer player, born on the same date and in Zolotonosha
  ?athlete a dbo:Athlete ;
           a dbo:SoccerPlayer ;
           dbo:birthDate ?sameDate ;
           dbo:birthPlace dbr:Zolotonosha .
  
  # Ensure the birth dates match
  FILTER (?date = ?sameDate)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,39,val,"Give me the parent of Henuttawy (19th dynasty) and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?henuttawyParent ?commanderFatherSpouse WHERE {
  # Find Henuttawy (19th dynasty) and her parent
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy (19th dynasty)""@en .
  OPTIONAL { ?henuttawy dbo:parent ?henuttawyParent . }

  # Identify the commander in Battle of Perire who is royalty
  ?commander a dbo:RoyalFamilyMember ;
             dbo:memberOf ?battle .
  ?battle rdfs:label ""Battle of Perire""@en .

  # Determine the father of this commander
  OPTIONAL { ?commander dbo:parent ?commanderFather . }

  # Find the spouse of the commander's father
  OPTIONAL { ?commanderFather dbo:spouse ?commanderFatherSpouse . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
696,15,val,"Give me the landmark at elevation of 50 and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?landmark ?birthPlace WHERE {
  # Find the band ""The Boils""
  ?band a dbo:Band ;
        rdfs:label ""The Boils""@en .
  
  # Find members of the band
  ?member dbo:memberOf ?band .

  # Get birthplace of a member
  ?member dbo:birthPlace ?birthPlace .

  # Find landmarks at elevation of 50
  ?landmark a dbo:Landmark ;
            geo:elevation ?elevation .
  
  FILTER (?elevation = 50)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
404,42,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
           rdfs:label ""Princess Victoria Louise of Prussia""@en ;
           dbo:spouse ?spouse .

  # Step 2: Ensure the spouse is royalty (implied by context)
  
  # Step 3: Identify Ernest Augustus, Duke of Brunswick's father
  ?ernestAugustus a dbo:Person ;
                 rdfs:label ""Ernest Augustus, Duke of Brunswick""@en ;
                 dbo:father ?father .

  # Step 4: Confirm the parent-child relationship with Prince Ernest Augustus of Hanover (born 1914)
  ?prince a dbo:Person ;
          rdfs:label ""Prince Ernest Augustus of Hanover""@en ;
          dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1914)

  # Ensure the father identified is the same as in Step 3
  ?father rdfs:label ?parentLabel .

  # Linking all conditions together
  FILTER (?spouse != ?princess)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
345,13,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?person rdfs:label ""Armando Heeb""@en .
  ?person dbo:nickname ?nickname .
  ?nickname rdfs:label ?label .
  ?club rdfs:label ?label .
  ?club a dbo:SportsClub ;
        a dbo:Organization ;
        a dbo:SoccerClub .
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
492,29,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify the military conflict involving Frédéric-Georges Herr
  ?conflict a dbo:MilitaryConflict .
  ?conflict dbo:participant dbr:Frédéric-Georges_Herr .

  # Find the commander of that conflict
  ?conflict dbo:commander ?commander .

  # Ensure Frédéric-Georges Herr died in Algiers or French Algeria
  OPTIONAL { 
    ?herr a dbo:Person ;
          foaf:name ""Frédéric-Georges Herr"" .
    ?herr dbo:deathPlace ?place .
    FILTER (
      ?place = dbr:Algiers ||
      ?place = dbr:French_Algeria
    )
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
184,29,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Find a child of Archduke Joseph Karl of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Find the grandchild (child of the above child)
  ?grandchild dbo:parent ?child1 .

  # Check if this grandchild is a parent to both Géza von Habsburg and Archduchess Ilona of Austria
  ?grandchild dbo:parent dbr:G%C3%A9za_von_Habsburg .
  ?grandchild dbo:parent dbr:Archduchess_Ilona_of_Austria .
  
  # Bind the grandchild to the variable we want to return
  BIND(?grandchild AS ?individual)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,21,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politician WHERE {
  ?politician dbo:memberOf dbr:Northern_Ireland_Forum .
  ?politician dbo:almaMater dbr:Queen's_University_Belfast .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
778,11,val,Give me the author of Chroot and entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the author of Chroot
SELECT ?author WHERE {
  ?chroot a dbo:Software .
  ?chroot rdfs:label ""Chroot""@en .
  ?chroot dbo:creator ?author .
}

UNION

# Query for the entity in the award of Ralph L. Brinster
SELECT ?awardEntity WHERE {
  dbr:Ralph_L._Brinster dbo:award ?award .
  ?award a dbo:Award .
  ?award dbo:name ?awardName .
  FILTER (CONTAINS(LCASE(?awardName), ""nobel prize in physiology or medicine""))
  ?award dbo:recipient dbr:Ralph_L._Brinster .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
16,40,val,Give me the professional in Actress and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actress WHERE {
  # Find Ted McGinley's spouse
  ?ted a dbo:Person ;
       foaf:name ""Ted McGinley"" ;
       dbo:spouse ?spouse1 .
  
  # Find Georgeanne Marie Rice's spouse
  ?georgeanne a dbo:Person ;
              foaf:name ""Georgeanne Marie Rice"" ;
              dbo:spouse ?spouse2 .

  # Check if either spouse is an actress
  FILTER (?spouse1 = ?spouse2)
  ?actress a dbo:Actress ;
           foaf:name ?name .
  
  BIND(?spouse1 AS ?commonSpouse)
  FILTER(?commonSpouse = ?actress)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,22,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find band members of Donald Maynard Dokken's band (Dokken)
  ?bandMember a dbo:Person .
  ?bandMember dbo:bandMemberOf dbr:Dokken_(band) .

  # Ensure the person is also associated with S.A. Slayer
  ?association a dbo:MusicalArtist .
  ?association dbo:associatedBand dbr:S.A._Slayer .

  # Link the band member to the association
  FILTER (?bandMember = ?association)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,39,val,"Give me the commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  ?battle a dbo:Battle ;
          dbo:commander ?commander ;
          dbo:militaryForce ?militaryForce .
  
  ?battle rdf:type/rdfs:subClassOf*+ (dbo:SocietalEvent dbo:Event dbo:MilitaryConflict) .

  FILTER(CONTAINS(LCASE(STR(?commander)), ""rutger jan schimmelpenninck""))
}
```",4,7,5,3,2,3,3,71,0,0,6,0,0.0,0
959,36,val,"Give me the member of University of Tsukuba and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # University of Tsukuba membership
  ?person dbo:almaMater dbr:University_of_Tsukuba .

  # Managerial role in the 1998 Kashima Antlers season
  ?person dbo:teamManager ?managerRole .
  ?managerRole dbo:managedTeam dbr:Kashima_Antlers .
  ?managerRole dbo:season ""1998""^^xsd:string .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,34,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of Joseph Michael.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find the reference for Nevermore (2006 film)
  dbr:Nevermore_(2006_film) dbo:reference ?subject .
  
  # Identify Joseph Michael's band
  dbr:Joseph_Michael dbo:memberOfBand ?band .
  FILTER(?band = dbr:Nevermore)

  # Find members of the band Nevermore who are artists
  ?bandMember a dbo:Person ;
              dbo:memberOfBand ?band ;
              rdf:type dbo:Artist .

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
701,30,val,Give me the parent of Meritamen and spouse of the father of Merneptah and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?meritamenParent ?merneptahFatherSpouse ?henuttawyParent WHERE {
  # Meritamen's parent
  ?meritamen a dbo:Person ;
             rdfs:label ""Meritamen""@en .
  ?meritamen dbo:parent ?meritamenParent .

  # Merneptah's father and his spouse
  ?merneptah a dbo:Person ;
             rdfs:label ""Merneptah""@en .
  ?merneptah dbo:father ?merneptahFather .
  ?merneptahFather dbo:spouse ?merneptahFatherSpouse .

  # Henuttawy's parent
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy (19th dynasty)""@en .
  ?henuttawy dbo:parent ?henuttawyParent .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,37,val,"Give me the administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace WHERE {
  # Find Matsudaira Tadamasa's father who is an office holder
  ?matsudairaTadamasa a dbo:Person ;
                     rdfs:label ""Matsudaira Tadamasa""@en .
  
  ?father1 dbo:father ?matsudairaTadamasa ;
           dbo:officeHolder ?office .

  # Find the father of this office holder who is a politician
  ?father2 dbo:father ?father1 ;
           dbo:occupation dbr:Politician .

  # Get the death place of this politician
  ?deathPlace dbo:deathPlace ?father2 .

  # Get the administration period of Emperor Go-Yōzei
  ?goYozei a dbo:Person ;
           rdfs:label ""Emperor Go-Yōzei""@en .
  
  ?administration dbo:reignStart ?start ;
                  dbo:reignEnd ?end ;
                  dbo:monarch ?goYozei .

}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
92,32,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nevermoreMember ?associatedArtist WHERE {
  # Find Jim Sheppard's associated musical artist
  ?sheppard a dbo:Person ;
            foaf:name ""Jim Sheppard"" ;
            dbo:musicalArtist ?associatedArtist .
  
  # Find Nevermore band members who are artists
  ?member a dbo:Person ;
          dbo:musicalArtist ?nevermoreMember ;
          dbo:member dbr:Nevermore .

}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
528,39,val,Give me the war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?orozimbo a dbo:Person ;
            rdfs:label ""Orozimbo Barbosa""@en .
  
  ?narciso a dbo:Person ;
           rdfs:label ""Narciso Campero""@en ;
           dbo:birthName ?birthName .

  ?war dbo:participatedIn ?orozimbo .
  ?war dbo:participatedIn ?narciso .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
534,15,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarter ?birthPlace WHERE {
  # Find the native politician of Essex
  ?essexPolitician a dbo:Person ;
                  dbo:nationality dbr:Essex .

  # Find their child who is both a politician and an office holder
  ?child a dbo:Person ;
         dbo:parent ?essexPolitician ;
         dbo:officeHolder ?office ;
         dbo:birthPlace ?birthPlace .
  
  # Ensure the child is also a politician
  ?child dbo:occupation dbr:Politician .

  # Find the headquarter of Royal Dublin Society
  dbr:Royal_Dublin_Society dbo:headquarters ?headquarter .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
701,34,val,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  ?spouse a dbo:Person ;
          dbo:spouse dbr:Amun-her-khepeshef ;
          dbo:spouse dbr:Ramesses_II .
  
  ?child dbo:parent ?spouse ;
         dbo:parent ?parent .

  FILTER(?parent != ?spouse)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
747,29,val,Give me the band of the writer of Apollo (Hardwell song) and person born on 1985-04-29 and band of Shèna.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writerBand ?personBand ?shenaBand WHERE {
  # Part 1: Band of the writer of ""Apollo"" by Hardwell
  ?song dbo:title ""Apollo (Hardwell song)"" .
  ?song dbo:lyricsBy ?writer .
  ?writer dbo:band ?writerBand .

  # Part 2: Band of person born on 1985-04-29
  ?person a dbo:Person ;
          dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
  OPTIONAL { ?person dbo:band ?personBand }

  # Part 3: Band of Shèna
  dbr:Shèna dbo:band ?shenaBand .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
179,14,val,Give me the parent of the child of the parent of Vajiralongkorn.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandParent WHERE {
  # Vajiralongkorn's parent (likely his father)
  dbr:Vajiralongkorn dbo:child ?parent .
  
  # The child of this parent is Vajiralongkorn
  ?parent dbo:child dbr:Vajiralongkorn .

  # Find the parent of this child, which should be the grandparent
  ?parent dbo:parent ?grandParent .
}
```",3,3,4,3,1,3,2,20,0,0,3,0,0.0,0
9,32,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person1 a dbo:Person ;
           dbo:award ?royalMedal .
  ?royalMedal rdfs:label ""Royal Medal""@en .

  ?person2 a dbo:Politician ;
           dbo:positionHeld ?mayorPosition .
  ?mayorPosition rdfs:label ""Mayor of Northern Ireland Forum""@en .

  FILTER (?person1 = ?person2)

  ?person1 dbo:almaMater ?almaMater .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
747,44,val,Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on 1985-04-29.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person1Band ?writerBand ?person3Band WHERE {
  # Tracey Elizabeth McSween's band
  ?person1 a dbo:Person .
  ?person1 dbo:birthName ""Tracey Elizabeth McSween"" .
  OPTIONAL { ?person1 dbo:band ?person1Band . }

  # Writer of Apollo (Hardwell song) and their band
  dbr:Apollo_(song) dbo:lyricsBy ?writer .
  ?writer a dbo:Person .
  OPTIONAL { ?writer dbo:band ?writerBand . }

  # Person born on 1985-04-29 and their band
  ?person3 a dbo:Person .
  ?person3 dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
  OPTIONAL { ?person3 dbo:band ?person3Band . }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
528,33,val,Give me the war of Irene Morales and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work a dbo:Book .
  ?work dbo:character ?character1 .
  ?work dbo:character ?character2 .
  ?work dbo:releaseDate ?date .

  FILTER (CONTAINS(LCASE(?character1), ""irene morales"") && CONTAINS(LCASE(?character2), ""the commander""))
  
  BIND(YEAR(?date) AS ?year)
  BIND(MONTH(?date) AS ?month)
  BIND(DAY(?date) AS ?day)

  FILTER (?month = 1 && ?day = 9)
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
915,13,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident WHERE {
  # Find the director of Pipe Dreams (1976 film)
  ?film a dbo:Film ;
        rdfs:label ""Pipe Dreams""@en .
  
  FILTER(CONTAINS(LCASE(str(?film)), 'pipe dreams'))
  FILTER(YEAR(?film) = 1976)

  ?film dbo:director ?director .

  # Get the birthplace of the director
  ?director dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement
  ?birthPlace a dbo:Settlement .

  # Find residents of this birthplace
  ?resident dbo:residence ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,15,0,0.0,0
498,7,val,"Give me the band of Will Rahmer and band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?willRahmersBand ?solaceParentOrg WHERE {
  # Find the band associated with Will Rahmer
  ?person rdfs:label ""Will Rahmer""@en .
  ?band dbo:member ?person .
  
  BIND(?band AS ?willRahmersBand)

  # Find the parent organization of Solace of Requiem if it exists as both a band and an organization
  ?solace dbr:Solace_of_Requiem .
  OPTIONAL {
    ?solace dbo:partOfOrganization ?parentOrg .
    FILTER EXISTS { ?parentOrg a dbo:Band . }
    FILTER EXISTS { ?parentOrg a dbo:Organisation . }
  }

  BIND(?parentOrg AS ?solaceParentOrg)
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
392,15,val,"Give me the entity in the region, that is a country, of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
  ?subdivision dbo:name ""Schio"" ;
               dbo:administrativeRegion ?country .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
534,14,val,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters WHERE {
  # Find the venue of the 2012 Pro12 Grand Final
  ?event a dbo:SportsEvent ;
         dbo:name ""2012 Pro12 Grand Final""@en ;
         dbo:location ?venue .

  # Ensure the venue is an architectural structure and a location
  ?venue a dbo:Venue, dbo:ArchitecturalStructure .

  # Find the owner of the venue
  ?venue dbo:owner ?owner .

  # Get the headquarters of the owner
  ?owner dbo:headquarters ?headquarters .
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
488,38,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Yūki Hideyasu's father's death place
SELECT ?fatherDeathPlace WHERE {
  ?yukiHideyasu a dbo:Person ;
                foaf:name ""Yūki Hideyasu""@en .
  ?yukiHideyasu dbo:child ?father .
  ?father a dbo:Politician ;
          dbo:deathPlace ?fatherDeathPlace .
}

# Query for Emperor Go-Mizunoo's father's administration
SELECT ?administration WHERE {
  ?goMizunoo a dbo:Person ;
             foaf:name ""Emperor Go-Mizunoo""@en .
  ?goMizunoo dbo:child ?emperorFather .
  ?emperorFather dbo:title ?title .
  ?title rdfs:label ?administration .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
55,12,val,Give me the band member of Guns N' Roses and band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?newstedsBand WHERE {
  # Find members of Guns N' Roses
  ?gnarMember dbo:bandMember dbr:Guns_N%27_Roses .
  
  # Find members of Metallica
  ?metallicaMember dbo:bandMember dbr:Metallica .
  
  # Ensure the same person is a member of both bands
  FILTER (?gnarMember = ?metallicaMember)
  
  # Get the band associated with Newsted
  dbr:Lars_Urlacher dbo:bandMember ?newstedsBand .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
10,13,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Association with Matt Colton as an artist
  ?association1 dbo:associatedMusicalArtist dbr:Matt_Colton ;
               dbo:subject ?person .

  # Band membership with Luke Vibert
  ?association2 dbo:associatedBandMember dbr:Luke_Vibert ;
                dbo:subject ?person .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
77,14,val,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorForce WHERE {
  ?mayor a dbo:Mayor .
  ?mayor dbo:city dbr:Warsaw .
  ?mayor dbo:force ?mayorForce .
  ?territory dbo:administratedBy ?mayor .
  ?territory a dbo:Organization .
}
```",3,4,4,3,1,3,2,20,0,0,40,0,0.0,0
963,12,val,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in Serbia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?party a dbo:PoliticalParty .
  OPTIONAL { 
    ?party dbo:headquarters dbr:Sremski_Karlovci .
  }
  OPTIONAL {
    ?governingRole dbo:location dbr:Sremski_Karlovci ;
                   dbo:agent ?party .
  }
}
```",3,4,4,2,2,3,2,20,0,22057,84,0.0,0.0,0
528,34,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and force of Narciso Campero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war a dbo:War .
  ?war dbo:location dbr:Chile .
  ?war dbo:commander dbr:Narciso_Campero .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
404,33,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia a dbo:Person ;
    dbo:spouse ?spouse .

  # Step 2: Find their child who is royalty
  ?child dbo:parent ?spouse ;
         dbo:parent dbr:Princess_Victoria_Louise_of_Prussia ;
         rdf:type dbo:Monarch .

  # Step 3: Determine the parent of this royal child, ensuring they are also royalty
  ?royalParent dbo:child ?child .
  
  # Step 4: Identify Prince George William of Hanover's parent
  dbr:Prince_George_William_of_Hanover dbo:parent ?parentOfGeorge .

  # Ensure the parent of the royal child is the same as the parent of Prince George William of Hanover
  FILTER (?royalParent = ?parentOfGeorge)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
391,40,val,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?person a dbo:Person .
  ?person dbo:nativePlace dbr:Jackson,_Tennessee .
  
  ?film1 dbo:starring ?person ;
         rdfs:label ""The Departed""@en .
  
  ?film2 dbo:starring ?person ;
         rdfs:label ""All About the Andersons""@en .

  FILTER (LANG(?film1) = 'en' && LANG(?film2) = 'en')
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,41,val,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of Ferenc Szálasi and leader of People's Commissariat of Defense of the Soviet Union.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape a dbo:Person .
  OPTIONAL { dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape dbo:honoraryTitle ?award . }
  OPTIONAL { dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape dbo:award ?award . }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,23,val,Give me the war of the awardee of the award of Jonathon Band.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find Jonathon Band and his awards
  ?jonathonBand a dbo:Person ;
               foaf:name ""Jonathon Band""@en .
  
  ?jonathonBand dbo:award ?award .

  # For each award, find the awardee
  ?award dbo:recipient ?awardee .

  # Check if the awardee participated in any war
  ?awardee dbo:participatedIn ?war .
}
```",3,3,4,3,1,3,3,71,0,0,450,0,0.0,0
963,13,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Find the time zone of Herzegovina-Neretva Canton
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timezone .
  
  # Find countries in the same region with this time zone
  ?country a dbo:Country ;
           dbo:timeZone ?timezone ;
           dbo:partOfRegion dbr:Bosnia_and_Herzegovina .

}
```",3,4,4,3,1,3,2,20,0,0,173261,0,0.0,0
701,18,val,Give me the spouse of Ramesses II and parent of Henuttawy (19th dynasty) and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Ramesses II's spouse
  dbr:Ramesses_II dbo:spouse ?spouse .
  
  # Spouse is a parent of Henuttawy (19th dynasty)
  ?spouse dbo:child dbr:Henttawy_(wife_of_Ramesses_II) .

  # Spouse is also a parent of Meritamen
  ?spouse dbo:child dbr:Meritamen .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
9,42,val,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?institution WHERE {
  # Find the mayor of Northern Ireland Forum
  ?mayor a dbo:Person ;
         dbo:almaMater ?institution .

  # Ensure this person is known as a politician
  ?mayor dbo:occupation dbr:Politician .

  # Identify Queen's University Belfast nickname
  ?university a dbo:EducationalInstitution ;
              dbo:nickname ?nickname .
  FILTER (?nickname = ""Queen's University Belfast"")

  # Check if the institution matches the nickname
  FILTER(?institution = ?university)

  # Verify Allen Hill's alma mater is the same institution
  dbr:Allen_Hill dbo:almaMater ?institution .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
547,32,val,Give me the resting place of the actor of Enemy at the Door and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorRestingPlace ?childRestingPlace WHERE {
  # Part 1: Resting place of the actor from ""Enemy at the Door""
  ?film a dbo:Film ;
        dbo:title ""Enemy at the Door""@en .
  
  ?film dbo:starring ?actor .
  ?actor dbo:restingPlace ?actorRestingPlace .

  # Part 2: Resting place of the child of James Burton (property developer)
  ?james a dbo:Person ;
         foaf:name ""James Burton"" ;
         dbo:occupation dbr:Property_developer .

  ?child dbo:parent ?james .
  ?child dbo:restingPlace ?childRestingPlace .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
179,15,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of Ubol Ratana.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?child a dbo:Person .
  ?child dbo:parent ?nakhatraMangala .
  ?nakhatraMangala rdfs:label ""Nakkhatra Mangala""@en .
  
  OPTIONAL { ?child dbo:birthName ?birthName . }
  
  ?person dbo:spouse ?ubolRatana .
  ?ubolRatana rdfs:label ""Ubol Ratana""@en .
  
  FILTER (?child = ?person)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
184,32,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?parent WHERE {
  # Step 1: Identify Archduke Joseph Karl of Austria's children
  ?child dbo:child dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Step 2: Find the child of his child (grandchildren)
  ?grandchild dbo:child ?child .

  # Step 3: Identify a native of Budapest among these grandchildren
  ?native dbo:birthPlace dbr:Budapest .
  
  # Ensure the native is one of the grandchildren
  FILTER (?grandchild = ?native)

  # Step 4: Find the parent of this native (which should be one of Joseph Karl's children)
  ?parent dbo:child ?native .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
996,11,val,Give me the force of the awardee of 1778.0 and entity in France.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?force WHERE {
  ?person a dbo:Person .
  ?award dbo:dateAwarded ?date .
  ?award dbo:recipient ?person .
  FILTER (YEAR(?date) = 1778)
  
  OPTIONAL { 
    ?person dbo:nationality dbr:Francois_1er_de_France ; # Assuming France as a country
             dbo:militaryStrength ?force . # Hypothetical property for ""force""
  }
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
915,12,val,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character WHERE {
  ?character a dbo:FictionalCharacter .
  ?character dbo:residence dbr:Springfield,_Illinois .
  ?character dbo:spouse ?spouse .
  ?spouse dbo:child dbr:Phillip_Spaulding .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
404,44,val,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Identify Ernest Augustus and his children
  ?child dbo:parent dbr:Ernest_Augustus,_Duke_of_Brunswick .
  
  # Step 2: Filter for royalty among these children
  ?child a ?royaltyClass .
  FILTER (
    ?royaltyClass = dbo:Monarch ||
    ?royaltyClass = dbo:RoyalFamilyMember
  )
  
  # Step 3: Identify the spouse of Princess Victoria Louise of Prussia
  ?child dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .
  
  # Step 4: Find the parent of this royal child
  ?parent dbo:child ?child .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
391,27,val,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         a dbo:CreativeWork ;
         a dbo:TelevisionShow .
  ?actor dbo:starring ?movie .
}
```",3,6,4,3,1,3,3,71,0,0,7061,0,0.0,0
963,14,val,"Give me the administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?result <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?party a dbo:PoliticalParty .
  ?party dbo:country dbr:Baltimore,_Maryland .
  ?government dbo:rulingParty ?party .
  ?government a dbo:Government .
  ?government dbo:headOfState ?administration .
}
```",3,4,4,3,1,3,2,20,0,0,86,0,0.0,0
55,16,val,"Give me the band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?band WHERE {
  # Find members of Guns N' Roses
  ?member dbo:bandMember dbr:Guns_N%27_Roses .
  
  # Find bands associated with Newsted (James Hetfield)
  ?band dbo:bandMember dbr:James_Hetfield .
  
  # Check if the member is also part of a band associated with Newsted
  ?member dbo:bandMember ?band .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,16,val,Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalName (GROUP_CONCAT(?artist; separator="", "") AS ?associatedArtists) WHERE {
  # Part 1: Find Sharon Kao's professional name
  ?person a dbo:Person .
  ?person dbo:birthName ""Sharon Kao"" .
  ?person rdfs:label ?professionalName .

  # Part 2: Find Matt Colton's associated musical artists
  ?colton a dbo:Person .
  ?colton rdfs:label ""Matt Colton"" .
  ?colton dbo:associatedMusicalArtist ?artist .
  
  FILTER (lang(?professionalName) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
547,37,val,Give me the resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  # Part 1: Resting place of Alan Cunningham
  OPTIONAL {
    VALUES ?person { dbr:Alan_Cunningham }
    ?person dbo:deathPlace ?restingPlace .
  }

  # Part 2: Resting place of the actor from the show with Emily Richard
  OPTIONAL {
    ?show dbo:actor ?actor .
    ?show dbo:starring dbr:Emily_Richard .
    ?actor dbo:deathPlace ?restingPlace .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
92,31,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find Jim Sheppard's associated musical artist
  ?sheppard a dbo:Person ;
           foaf:name ""Jim Sheppard"" .
  
  ?sheppard dbo:associatedBand ?artist .

  # Step 2: Get band members of the identified artist
  ?member dbo:bandMember ?artist ;
          a dbo:MusicArtist .

  # Step 3: Check if any member is associated with the film Nevermore (2006)
  OPTIONAL {
    ?film dbr:Nevermore_(2006_film) .
    ?film dbo:starring ?member .
  }

  FILTER EXISTS { ?film dbr:Nevermore_(2006_film) }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
356,15,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of Mark Briggs.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find the 2015 Sacramento Republic FC Season
  ?season1 a dbo:SportsTeamSeason ;
           dbo:sport dbr:Soccer ;
           dbo:team dbr:Sacramento_Republic_FC ;
           dbo:year ""2015""^^xsd:gYear .

  # Find its predecessor
  ?predecessor dbo:successor ?season1 .

  # Find the successor of that predecessor
  ?successor dbo:predecessor ?predecessor ;
             a dbo:SoccerClubSeason .

  # Identify Mark Briggs' team in this season
  ?team dbr:Mark_Briggs ;
        dbo:player ?player .
  
  FILTER EXISTS { ?team dbo:season ?successor }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
92,23,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personName WHERE {
  # Identify the film resource for ""Nevermore (2006 film)""
  dbr:Nevermore_(2006_film) a dbo:Film .
  
  # Find cast members of the film
  ?film dbo:castMember ?person .
  FILTER(?film = dbr:Nevermore_(2006_film))
  
  # Check if these persons are band members and artists
  OPTIONAL { ?person dbo:bandMember ?band . }
  OPTIONAL { ?person dbo:artist true . }

  # Ensure the person is both a band member and an artist
  FILTER EXISTS { ?person dbo:bandMember ?band } .
  FILTER EXISTS { ?person dbo:artist true } .

  # Retrieve the name of such persons
  ?person rdfs:label ?personName .
  
  # Filter to ensure we get English labels
  FILTER (LANG(?personName) = ""en"")
}
```",3,4,4,3,1,3,3,71,0,0,12,0,0.0,0
251,17,val,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for administration of the ruling party in Sicily
SELECT ?party WHERE {
  ?party a dbo:PoliticalParty .
  ?party dbo:headquarters ?location .
  FILTER (CONTAINS(LCASE(STR(?location)), ""sicily""))
}

UNION

# Query for death place of Laura Mancinelli
SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Laura Mancinelli""@en ;
          dbo:deathPlace ?deathPlace .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
427,33,val,Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alumnus ?father ?party WHERE {
  # Find the DBpedia resource for Partito Popolare Italiano
  VALUES ?partitoPopolareItaliano { dbr:Partito_Popolare_Italiano }
  
  # Find all persons who are alumni of MIT
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  
  # For each alumnus, find their father's name
  OPTIONAL { ?alumnus dbo:father ?father . }
  
  # Determine the political party affiliation of each father
  OPTIONAL { ?father dbo:partyAffiliation ?party . }
  
  # Check if any of these affiliations match Partito Popolare Italiano
  FILTER (?party = ?partitoPopolareItaliano)
}
```",4,4,5,3,2,3,3,71,0,1560,1,0.0,0.0,0
404,36,val,Give me the spouse of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Find Princess Victoria Louise's spouse
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Step 2: Identify the father of the spouse
  ?spouse dbo:father ?father .

  # Step 3: Find a child of this father
  ?father dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
161,23,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Francoist_Spain .
  
  ?event a dbo:SocietalEvent ;
         dbo:relatedTo ?person .

  ?conflict a dbo:MilitaryConflict ;
            dbo:relatedTo ?person ;
            dbo:event ?event .

  ?conflict dbo:militaryForce ?militaryForce .
}
```",3,6,4,3,1,3,3,71,0,0,1073,0,0.0,0
617,36,val,Give me the parent of the child of the commander in Battle of Panium and child of Antiochus III the Great.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Find the commander in Battle of Panium
  ?commander a dbo:Person ;
             dbo:spouseOrPartner ?battle .
  ?battle rdfs:label ""Battle of Panium""@en .

  # Step 2: Find the child of this commander
  ?child1 dbo:parent ?commander .

  # Step 3: Identify Antiochus III the Great's child
  dbr:Antiochus_III_the_Great a dbo:Person ;
                              dbo:child ?antiochusChild .
  
  # Step 4: Find the parent of both children (from step 2 and step 3)
  ?parent dbo:child ?child1 .
  ?parent dbo:child ?antiochusChild .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
54,44,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         a dbo:Monarch, dbo:OfficeHolder .

  # This child is the parent of Narapati I of Ava's child
  ?narapatisChild dbo:parent ?child .
  ?narapatisChild dbo:parent dbr:Narapati_I_of_Ava .

  # This child is also a child of Thinkhaya of Pagan
  ?child dbo:parent dbr:Thinkhaya_of_Pagan .

  # Find the predecessor of this child
  ?predecessor dbo:successor ?child .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
10,18,val,Give me the professional in the birth name of Sharon Kao and band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Sharon Kao"" .
  ?bandMemberOfRelation dbo:bandMember ?person .
  ?bandMemberOfRelation dbo:bandLeader dbr:Luke_Vibert .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
16,37,val,Give me the person born as Georgeanne Marie Rice and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Match the birth name ""Georgeanne Marie Rice""
  OPTIONAL { ?person foaf:name ?name . FILTER (CONTAINS(LCASE(?name), LCASE(""georgeanne marie rice""))) }
  
  # Find actors in the TV series ""Unnatural""
  ?series dbo:title ""Unnatural"" .
  ?series dbo:actor ?actor .
  
  # Ensure the person is one of these actors
  FILTER (?person = ?actor)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,18,val,Give me the band of Joseph Michael and associated musical artist of Jim Sheppard and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the band associated with Joseph Michael
SELECT ?band WHERE {
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbo:bandMember ?band .
}

UNION

# Query for the musical artist associated with Jim Sheppard
SELECT ?artist WHERE {
  ?person rdfs:label ""Jim Sheppard (musician)""@en .
  ?person dbo:musicalArtist ?artist .
}

UNION

# Query for a band member of Nevermore
SELECT ?member WHERE {
  dbr:Nevermore dbo:bandMember ?member .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
915,14,val,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Identify Lizzie Spaulding
  ?lizzie a dbo:FictionalCharacter ;
          rdfs:label ""Lizzie Spaulding""@en .
  
  # Step 2: Find Lizzie's parent
  ?parent dbo:child ?lizzie .

  # Ensure the parent is also a fictional character and soap character
  ?parent a dbo:FictionalCharacter ;
          dbo:spouse ?spouse . 

  # Step 3: Identify the child of this parent
  ?child dbo:child ?parent .
  
  # Ensure the child is also a fictional character and soap character
  ?child a dbo:FictionalCharacter .

  # Step 4: Determine the father of this child
  ?father dbo:spouse ?mother ;
          dbo:child ?child .
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
303,13,val,"Give me the entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Panama .
  ?person dbo:occupation dbo:Politician .
  ?event dbr:United_States_invasion_of_Panama .
  ?commander dbo:commanderOf ?event .
  FILTER (?person = ?commander)
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
488,33,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki.",SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?birthPlace WHERE {
  # Find Matsudaira Tadamasa's father (office holder)
  ?matsudairaTadamasa a dbo:Person ;
                     rdfs:label ""Matsudaira Tadamasa""@en .
  
  ?father1 dbo:father ?matsudairaTadamasa ;
           dbo:occupation dbr:Office_holder .

  # Find Matsudaira Tadamasa's grandfather (politician)
  ?grandfather dbo:father ?father1 ;
               dbo:occupation dbr:Politician .

  # Get the death place of Matsudaira Tadamasa's grandfather
  ?grandfather dbo:deathPlace ?deathPlace .

  # Find Enomoto Takeaki's birth place
  ?enomotoTakeaki a dbo:Person ;
                  rdfs:label ""Enomoto Takeaki""@en .
  
  ?enomotoTakeaki dbo:birthPlace ?birthPlace .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,26,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?politician a dbo:Politician ;
              dbo:officeHolderOf dbr:1962_New_South_Wales_state_election .
  ?politician dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
391,25,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie WHERE {
  # Roz Ryan's involvement in a movie
  ?rozmovie dbo:starring dbr:Roz_Ryan .
  
  # The Departed actor
  ?departedMovie dbo:starring ?actor .
  FILTER (str(?departedMovie) = ""The_Departed"")

  # Common movie involving both Roz Ryan and the actor from The Departed
  ?commonMovie dbo:starring dbr:Roz_Ryan ;
              dbo:starring ?actor .

  # Ensure the common movie is a film and a television show
  ?commonMovie rdf:type dbo:Film .
  ?commonMovie rdf:type dbo:TelevisionShow .

  # Linking to ensure it's the same movie
  FILTER (str(?rozmovie) = str(?commonMovie))
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
994,28,val,Give me the associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the associated musical artist of Red Tide (band)
SELECT ?associatedArtist WHERE {
  dbr:Red_Tide_(band) dbo:associatedBand ?artist .
}

# Step 2: Find the associated musical artist of Watchtower (band)
SELECT ?watchtowerAssociatedArtist WHERE {
  dbr:Watchtower_(band) dbo:associatedBand ?watchtowerArtist .
  ?watchtowerArtist dbo:associatedBand ?watchtowerAssociatedArtist .
}

# Step 3: Find band members of Don Dokken
SELECT ?donDokkenMember WHERE {
  dbr:Don_Dokken dbo:member ?donDokkenMember .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
378,27,val,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?role WHERE {
  ?person a dbo:Person ;
          foaf:name ""Thomas Trigge""@en .
  
  OPTIONAL { ?person dbo:role ?role . }
  
  ?person dbo:participatedIn ?event .
  ?event a dbo:MilitaryConflict ;
         dbo:societalEvent ?societalEvent ;
         a dbo:Event .

  FILTER (str(?person) = str(dbr:Thomas_Trigge))
}
```",3,6,4,3,1,3,3,71,0,0,6,0,0.0,0
182,16,val,Give me the entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find Tamara Kunanayakam's nationality
  ?tamara a dbo:Person ;
          foaf:name ""Tamara Kunanayakam"" ;
          dbo:nationality ?nationality .

  # Find Mahesh Senanayake's war
  ?mahesh a dbo:Person ;
          foaf:name ""Mahesh Senanayake"" ;
          dbo:participatedInWar ?war .

  # Find an entity with the same nationality and participated in the same war
  ?entity a dbo:Person ;
          dbo:nationality ?nationality ;
          dbo:participatedInWar ?war .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,13,val,"Give me the child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Step 1: Identify Charles Alexander
  ?charles a dbo:Person ;
           foaf:name ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en ;
           dbo:parent ?parent .

  # Step 2: Find the child of his parent (i.e., Charles Alexander's sibling)
  ?sibling dbo:parent ?parent ;
           a dbo:Person .

  # Step 3: Identify if this sibling is royalty
  ?sibling a dbo:Monarch .

  # Step 4: Find the child of this royal sibling
  ?royalChild dbo:child ?grandchild .
}
```",3,4,4,3,1,3,2,20,0,0,8,0,0.0,0
492,19,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find Joseph C. Satterthwaite's role as US Assistant Secretary of State for African Affairs
  ?officeHolder a dbo:Office ;
               dbo:holder dbr:Joseph_C._Satterthwaite .
  
  # Find the successor in this office
  ?officeHolder dbo:successor ?successor .

  UNION

  # Find Joseph C. Satterthwaite's role as commander in Franco-Hova Wars
  ?commander a dbo:MilitaryCommand ;
             dbo:commander dbr:Joseph_C._Satterthwaite .
  
  # Find the successor in this command
  ?commander dbo:successor ?successor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
696,13,val,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?birthPlace WHERE {
  # Identify The Boils and its members
  dbr:The_Boils dbo:bandMember ?member .
  
  # Check if the member is part of another organization, group, or band
  ?member dbo:associatedBandOrMusicalArtist ?otherEntity .
  FILTER EXISTS { 
    ?otherEntity a (dbo:Organization|dbo:Group|dbo:Band) .
  }
  
  # Retrieve the birth place of such a member
  ?member dbo:birthPlace ?birthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,36,val,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?commander dbo:participatedInBattle dbr:Battle_of_Perire .
  ?parent dbo:child ?commander ;
          a dbo:Royalty ;
          dbo:child dbr:Merenptah_Meritamen .
  ?parent dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
328,29,val,Give me the commander in the force of Ferenc Szálasi and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in the force of Ferenc Szálasi
  ?association dbo:commanderOf ?szalasiForce .
  ?szalasiForce dbo:leader dbr:Ferenc_Szálasi .

  # Awardee of Order of Suvorov
  ?person dbo:awardedBy dbr:Order_of_Suvorov .

  # Leader of People's Commissariat of Defense of the Soviet Union
  ?person dbo:positionHeld dbr:People's_Commissar_for_Defence_of_the_USSR .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
404,21,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
           rdfs:label ""Victoria Louise, Princess Royal""@en ;
           dbo:birthPlace ?birthPlace .
  
  # Verify her royalty status and parentage
  OPTIONAL { ?princess dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover . }
  
  # Find the spouse of Victoria Louise
  ?princess dbo:spouse ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
666,11,val,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as The Three Lions.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the manager of Hull City A.F.C. during the 2016–17 season
  ?manager a dbo:SportsManager .
  ?manager dbo:managedTeam dbr:Hull_City_A.FC_2016%E2%80%9317_season .

  # Find the figure known as ""The Three Lions""
  ?threeLions rdfs:label ""The Three Lions""@en .
  
  # Check if the manager is also associated with ""The Three Lions""
  OPTIONAL { ?manager dbo:managedTeam dbr:England_national_football_team . }
}
```",3,4,4,2,2,3,2,20,0,0,2,0,0.0,0
778,13,val,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:United_States .
  ?person dbo:award ?award .
  ?award rdfs:label ""Wolf Prize in Medicine""@en .
}
```",3,4,4,3,1,3,2,20,0,1,18629,0.0,0.0,0
161,44,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?emilioMolaEvent ?franciscoLargoCaballeroSocietalEvent ?rifWar WHERE {
  # Emilio Mola's command in a military event
  ?emilioMolaEvent dbo:commander dbr:Emilio_Mola .
  
  # Francisco Largo Caballero's involvement in a societal event and the Rif War
  ?franciscoLargoCaballeroSocietalEvent dbo:militaryForce dbr:Francisco_Largo_Caballero ;
                                         rdf:type dbo:SocietalEvent .
  ?rifWar dbo:militaryForce dbr:Francisco_Largo_Caballero ;
          rdf:type dbo:MilitaryConflict .

  # Ensure Rif War is specifically the event
  FILTER (STR(?rifWar) = ""http://dbpedia.org/resource/Rif_War"")
}
```",5,8,6,2,3,3,3,71,0,0,11,0,0.0,0
48,14,val,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find shows featuring Stacey Dash
  ?show dbo:castMember dbr:Stacey_Dash .
  
  # Find actors in those shows
  ?actor dbo:actedIn ?show ;
         a dbo:Actor .

  # Check if the actor is a member of a band that is also a musical artist
  ?band dbo:bandMember ?actor ;
        a dbo:MusicalArtist .
}
```",3,4,4,3,1,3,2,20,0,0,36,0,0.0,0
659,25,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event a dbo:SocietalEvent .
  ?event a dbo:Event .
  ?event a dbo:MilitaryConflict .
  
  ?battle dbr:Battle_of_Leipzig ;
         dbo:participatedIn ?event .

  ?schimmelpenninck dbr:Rutger_Jan_Schimmelpenninck ;
                    dbo:commanderOf ?militaryForce ;
                    dbo:participatedIn ?battle .
}
```",3,6,4,2,2,3,3,71,0,0,6,0,0.0,0
92,42,val,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  # Find band members of Nevermore who are artists
  ?member a dbo:Person .
  ?member dbo:bandMember dbr:Nevermore .
  ?member dbo:artist true .

  UNION

  # Confirm Joseph Michael Furney's association with Nevermore
  ?furney a dbo:Person ;
         foaf:name ""Joseph Michael Furney"" ;
         dbo:bandMember dbr:Nevermore .

  # Confirm Jim Sheppard's association with Nevermore
  ?sheppard a dbo:Person ;
            foaf:name ""Jim Sheppard"" ;
            dbo:associatedBand dbr:Nevermore .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,32,val,Give me the person born on the birth date of Pavlo Khudzik and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Get Pavlo Khudzik's birth date
  ?pavloKhudzik a dbo:Person ;
                foaf:name ""Pavlo Khudzik""@en ;
                dbo:birthDate ?birthDate .

  # Step 2: Find the writer of Apollo by Hardwell and their band
  ?song dbo:title ""Apollo (Hardwell song)""@en ;
        dbo:lyricsBy ?writer .
  
  ?band dbo:member ?writer .

  # Step 3: Find person born on Pavlo Khudzik's birth date who is a writer for a band
  ?person a dbo:Person ;
          dbo:birthDate ?date .
  FILTER (?date = ?birthDate)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
232,35,val,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find John Pertwee
  ?john a dbo:Person ;
        foaf:name ""John Devon Roland Pertwee""@en .
  
  # Find Sylvie Bermann's residence
  ?sylvieResidence a dbo:Settlement ;
                   dbo:country dbr:United_Kingdom ;
                   rdfs:label ?residenceLabel .

  FILTER (CONTAINS(LCASE(?residenceLabel), ""sylvie bermann""))

  # Find the child of John Pertwee
  ?child dbo:parent ?john .
  
  # Check if the child is associated with Sylvie Bermann's residence
  ?child dbo:birthPlace ?sylvieResidence .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,29,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus III the Great as a person
  dbr:Antiochus_III_the_Great a dbo:Person .

  # Find his children
  ?child dbo:parent dbr:Antiochus_III_the_Great .
  
  # Identify Nysa's parent among these children
  ?nysaParent dbo:spouse dbr:Nysa_of_Pontus ;
              dbo:child ?nysa .

  # Ensure the child is also a child of Antiochus III the Great
  FILTER (?child = ?nysaParent) .
  
  # Find the spouse of this parent (Nysa's parent)
  ?nysaParent dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
427,26,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?alumnus a dbo:Person .
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?father dbo:fatherOf ?alumnus .
  ?father dbo:partyAffiliation ?party .
}
```",3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
179,13,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?parent foaf:name ""Nakkhatra Mangala"" .
  ?child dbo:childOf ?parent .
  ?child a dbo:Royalty .
}
```",3,4,4,3,1,3,2,20,0,0,1,0,0.0,0
378,28,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as Carl Pontus Gahn and war of Joaquín Blake.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?claimToFame ?war WHERE {
  VALUES ?person { 
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón
    dbr:C_P_Gahn
    dbr:Joaquín_Blake_y_Jordán
  }
  
  ?person a dbo:Person .
  OPTIONAL {
    ?person dbo:claimToFame ?claimToFame .
  }
  OPTIONAL {
    ?event dbo:participatedIn ?war .
    ?person dbo:participatedIn ?event .
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
783,11,val,Give me the associated musical artist of the band member of Ofori Amponsah and band member of Ebony Reigns.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Find band members of Ofori Amponsah
  ?bandMemberOfori a dbo:Person ;
                   dbo:musicalArtist dbr:Ofori_Amponsah .

  # Find band members of Ebony Reigns
  ?bandMemberEbony a dbo:Person ;
                  dbo:musicalArtist dbr:Ebony_Reigns .

  # Check if any band member is associated with another musical artist
  ?bandMemberOfori dbo:musicalArtist ?associatedArtist .
  ?bandMemberEbony dbo:musicalArtist ?associatedArtist .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
659,37,val,"Give me the military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Napoleonic Wars""@en .
  
  ?militaryForce a dbo:Organization ;
                 rdfs:label ""Polish Horse""@en ;
                 dbo:partOf ?event .

  OPTIONAL { 
    ?militaryForce dbo:commander ?commander .
  }
}
```",4,8,5,3,2,3,3,71,0,0,29,0,0.0,0
421,15,val,Give me the band member of the awardee of [[#Awards and nominations and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Identify Edin Dervišhalidović
  dbr:Edin_Dervišhalidović a dbo:Person .
  
  # Check for awards or nominations (assuming there's a property like dbo:award)
  OPTIONAL { 
    dbr:Edin_Dervišhalidović dbo:award ?award .
  }
  
  # Find band membership
  OPTIONAL {
    dbr:Edin_Dervišhalidović dbo:bandMember ?band .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
487,15,val,Give me the country of the administration of the person born on 1955-01-26 and administration of Phil Scott.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the person born on 1955-01-26
SELECT ?person ?administrationCountry WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1955 && MONTH(?date) = 1 && DAY(?date) = 26)
  OPTIONAL { ?person dbo:administration ?admin . }
  OPTIONAL { ?admin dbo:country ?administrationCountry . }
}

UNION

# Query for Phil Scott
SELECT ?philScott ?administrationCountry WHERE {
  ?philScott a dbo:Person ;
             rdfs:label ""Phil Scott""@en .
  OPTIONAL { ?philScott dbo:administration ?admin . }
  OPTIONAL { ?admin dbo:country ?administrationCountry . }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
404,19,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Find Prince Ernest Augustus of Hanover and his parent
  ?person a dbo:Person ;
          rdfs:label ""Prince Ernest Augustus of Hanover""@en ;
          dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1914)
  
  OPTIONAL { ?person dbo:parent ?parent . }
  
  # Find Princess Victoria Louise of Prussia and her spouse
  ?princess a dbo:Person ;
            rdfs:label ""Princess Victoria Louise of Prussia""@en ;
            dbo:spouse ?spouse .
  
  FILTER EXISTS {
    ?spouse a dbo:Royalty .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,24,val,Give me the band of the writer of Apollo (Hardwell song) and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerBand ?shenaBand WHERE {
  # Find the writer of ""Apollo"" by Hardwell
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ""Apollo (Hardwell song)""@en .

  OPTIONAL {
    ?writer dbo:band ?writerBand .
  }

  # Find Shèna's band
  dbr:Shèna dbo:band ?shenaBand .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,18,val,Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Parent of Thado Minsaw of Prome
  ?parentOfThadoMinsaw dbo:child dbr:Thado_Minsaw_of_Prome ;
                       a dbo:Person .
  
  # Child of Thinkhaya of Pagan
  ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan ;
                  a dbo:Person .

  # Predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?predecessorAva dbo:successor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava ;
                  a dbo:Person .
  
  # Joining the conditions to find the person who satisfies all three roles
  FILTER (?person = ?parentOfThadoMinsaw && ?person = ?thinkhayaChild && ?person = ?predecessorAva)
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
427,19,val,Give me the party of Giulio Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?partyName WHERE {
  # Find Giulio Andreotti's party
  OPTIONAL {
    dbr:Giulio_Andreotti dbo:partyMember ?party .
    ?party rdfs:label ?partyName .
    FILTER (LANG(?partyName) = ""en"")
  }
  
  # Find the Italian People's Party in 1994
  OPTIONAL {
    ?party a dbo:PoliticalParty ;
           rdfs:label ?partyName ;
           dbo:foundingDate ?foundingDate .
    FILTER (
      CONTAINS(LCASE(?partyName), ""italian people's party"") &&
      EXISTS { ?party dbo:member ?member . } && # Ensures it is an active political entity
      (YEAR(?foundingDate) < 1994 || YEAR(?foundingDate) = 1994)
    )
    FILTER (LANG(?partyName) = ""en"")
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,37,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ambaBand ?shenaBand WHERE {
  # Find Amba Shepherd's band
  OPTIONAL { 
    dbr:Amba_Shepherd dbo:band ?ambaBand .
  }
  
  # Find a song written by Amba Shepherd
  OPTIONAL {
    ?song dbo:lyricsBy dbr:Amba_Shepherd .
    
    # Find the writer of that song and their band
    ?writer dbo:lyricsBy ?song .
    ?writer dbo:band ?ambaBandOfWriter .
  }
  
  # Find Shèna's band
  OPTIONAL {
    dbr:Shèna dbo:band ?shenaBand .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
747,36,val,Give me the band of the person born as the persona of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personShena ?bandShena ?person1985 ?band1985 WHERE {
  # Find the person with birth name Shèna and their band
  ?personShena a dbo:Person .
  ?personShena dbo:birthName ""Shèna"" .
  OPTIONAL { ?personShena dbo:band ?bandShena . }
  
  # Find the person born on 1985-04-29 and their band
  ?person1985 a dbo:Person .
  ?person1985 dbo:birthDate ?date1985 .
  FILTER (YEAR(?date1985) = 1985 && MONTH(?date1985) = 4 && DAY(?date1985) = 29)
  OPTIONAL { ?person1985 dbo:band ?band1985 . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
10,12,val,Give me the professional in  and associated musical artist of Matt Colton and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mattColtonProfession ?mattColtonArtist ?lukeVibertBand WHERE {
  # Matt Colton's profession and associated artist
  OPTIONAL { 
    dbr:Matt_Colton a dbo:Person .
    dbr:Matt_Colton dbo:occupation ?mattColtonProfession .
  }
  OPTIONAL {
    dbr:Matt_Colton dbo:associatedBand ?mattColtonArtist .
  }

  # Luke Vibert's band membership
  OPTIONAL {
    dbr:Luke_Vibert a dbo:Person .
    dbr:Luke_Vibert dbo:bandMember ?lukeVibertBand .
  }
}
```",3,3,4,1,3,2,3,28,1,3,0,0.25,1.0,0.4
528,28,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?conflict1 ?conflict2 WHERE {
  # Battle of Pisagua and Orozimbo Barbosa's involvement
  dbr:Battle_of_Pisagua a dbo:MilitaryConflict .
  OPTIONAL { 
    ?barbosa dbo:participatedIn dbr:Battle_of_Pisagua .
    ?barbosa rdfs:label ""Orozimbo Barbosa""@en .
  }
  
  # Narciso Campero's involvement
  OPTIONAL {
    ?campero dbo:participatedIn ?conflict2 .
    ?campero rdfs:label ""Narciso Campero""@en .
  }

  # Retrieve the conflicts associated with Orozimbo Barbosa and Narciso Campero
  ?barbosa dbo:participatedIn ?conflict1 .
  
  FILTER(?conflict1 != dbr:Battle_of_Pisagua) # Ensure it's a different conflict for comparison

}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
435,12,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?articleContent ?gmtRegion ?administeredTerritory WHERE {
  # Retrieve the content of Article 62, Section IV of the Constitution of Iceland
  OPTIONAL {
    ?constitution a dbo:Constitution .
    ?constitution dbo:hasArticle ?article .
    ?article dbo:hasSection ?section .
    ?section rdfs:label ""Article 62, Section IV""@en .
    ?section dbo:textContent ?articleContent .
  }

  # Retrieve regions using Greenwich Mean Time
  OPTIONAL {
    ?region a dbo:Region ;
            dbo:timeZone dbr:Greenwich_Mean_Time .
    ?region rdfs:label ?gmtRegion .
  }

  # Identify territories administered from Reykjavík
  OPTIONAL {
    ?territory dbo:administrativeCenter dbr:Reykjavík .
    ?territory rdfs:label ?administeredTerritory .
  }
}
```",3,3,4,1,3,2,3,28,0,288,1,0.0,0.0,0
485,13,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?country WHERE {
  # Find Thomas Warner (poet) and his birth place
  dbr:Thomas_Warner_(poet) a dbo:Person ;
    dbo:birthPlace ?birthPlace .

  # Get the timezone of the birth place
  ?birthPlace geo:timezone ?timezone .

  # Filter for Western European Time
  FILTER (str(?timezone) = ""Europe/Lisbon"" || str(?timezone) = ""Atlantic/Reykjavik"")

  # Find countries in this timezone
  ?country a dbo:Country ;
    geo:timezone ?timezone .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
487,11,val,Give me the country of the administration of Patricia McCoy and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  {
    OPTIONAL { 
      ?office dbo:holder dbr:Patricia_McCoy .
      ?office dbo:country ?country .
    }
  } UNION {
    {
      ?office dbo:holder dbr:Phil_Scott_(politician) .
      ?office dbo:country ?country .
    }
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
959,37,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry WHERE {
  # Find the politician who was a leader in the 2010 Japanese House of Councillors election
  ?politician dbo:office ?office .
  ?office dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2010 && CONTAINS(LCASE(STR(?office)), ""japanese house of councillors""))
  
  # Find the manager of Júbilo Iwata in 2013
  ?manager dbo:managedTeam dbr:Júbilo_Iwata ;
           dbo:managementPeriod ?period .
  FILTER (YEAR(?period) = 2013)
  
  # Check if the politician and manager are the same person
  VALUES ?person { ?politician ?manager }
  
  # Get the native country of this person
  ?person dbo:nationality ?nativeCountry .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
314,15,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in the Spanish Civil War
  ?person dbo:commanderOf ?event .
  ?event rdfs:label ""Spanish Civil War""@en .

  # Deceased at the headquarter of House of Sombrerete
  ?person dbo:deathPlace dbr:Headquarters_of_the_House_of_Sombrerete .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
701,19,val,Give me the parent of the child of Nefertari and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent WHERE {
  # Nefertari's child
  ?nefertariChild dbo:parent ?nefertari .
  ?nefertari rdfs:label ""Nefertari""@en .

  # Henuttawy's parent
  ?henuttawy dbo:parent ?commonParent .
  ?henuttawy rdfs:label ""Henuttawy""@en .

  # Common parent of both children
  ?nefertariChild dbo:parent ?commonParent .

  # Filter for the 19th dynasty
  ?nefertari dbo:reign dbr:Egyptian_19th_dynasty .
  ?henuttawy dbo:reign dbr:Egyptian_19th_dynasty .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,38,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         a dbo:Work ;
         a dbo:TelevisionShow .
  
  ?movie dbo:starring ?rozRyanRole .
  ?rozRyanRole dbo:agent dbr:Roz_Ryan .

  ?ballhausClaim a dbo:ClaimToFame ;
                 dbo:agent dbr:Michael_Ballhaus .
  ?ballhausClaim dbo:starring ?actor .

  ?movie dbo:starring ?actor .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
142,7,val,Give me the birthplace of George Tokoro and entity in the region of Japan Standard Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?entityInJST WHERE {
  # Find George Tokoro's birthplace
  dbr:George_Tokoro a dbo:Person ;
                    dbo:birthPlace ?birthPlace .

  # Find an entity in the region of Japan Standard Time (Japan)
  ?entityInJST a dbo:Place ;
               dbo:timeZone dbr:Time_in_Japan .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
696,14,val,Give me the landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  ?battle a dbo:MilitaryConflict ;
          dbo:location ?location .
  
  ?commander dbo:participatedIn ?battle ;
             dbo:awardedBy ?award .

  ?award dbo:elevation ?elevation .

  ?landmark dbo:elevation ?elevation ;
            dbo:locatedAt ?location .

  FILTER (STR(?battle) = ""Battle of Chishui River"")
}
```",3,3,4,3,1,3,2,20,0,0,1731,0,0.0,0
55,17,val,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?member ?otherBand WHERE {
  # Find bands Jason Newsted was part of
  ?newsted a dbo:Person ;
           foaf:name ""Jason Newsted"" ;
           dbo:bandMember ?band .
  
  # Find members of these bands
  ?member dbo:bandMember ?band .

  # Check if these members are also in another band or group, specifically San Francisco Symphony
  ?otherBand a dbo:MusicalGroup ;
             foaf:name ""San Francisco Symphony"" ;
             dbo:bandMember ?member .
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
54,42,val,"Give me the parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Thado Minsaw of Prome's parent
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw of Prome""@en .
  ?parent dbo:child ?thadoMinsaw .

  # Soe Min Wimala Dewi's father's child
  ?soeMinWimalaDewi a dbo:Person ;
                    rdfs:label ""Soe Min Wimala Dewi""@en .
  ?fatherSoeMin a dbo:Person ;
                dbo:child ?soeMinWimalaDewi .
  ?parent dbo:child ?fatherSoeMin .

  # Predecessor of the child who is an office holder and royalty related to Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .
  ?child dbr:predecessor ?parent ;
         dbo:officeHolder true ;
         dbo:royalty true .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
378,23,val,Give me the war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  
  OPTIONAL {
    ?association dbo:associatedWith ?war .
    ?association dbo:agent ?person .
    FILTER (CONTAINS(LCASE(?war), ""war""))
  }
}
```",3,3,4,3,1,3,3,71,0,1,12,0.0,0.0,0
360,14,val,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Find the writer of ""The Roaring Silence""
  ?book dbo:author ?writer .
  ?book rdfs:label ""The Roaring Silence""@en .

  # Get Winnie Madikizela-Mandela's death place
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find someone native to this death place
  ?native dbo:birthPlace ?deathPlace .
  
  # Check if the writer is also the native of the death place
  FILTER (?writer = ?native)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,34,val,"Give me the actor of All About the Andersons and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the actor of ""All About the Andersons""
  ?film a dbo:Film ;
        rdfs:label ""All About the Andersons""@en .
  
  ?film dbo:starring ?actor .

  # Find people native to Jackson, Tennessee
  ?person dbo:nativePlace dbr:Jackson,_Tennessee ;
          dbo:birthPlace ?place .

  ?place rdfs:label ?nickname .
  FILTER (CONTAINS(LCASE(?nickname), ""city with soul""))

  # Ensure the actor is also a person and matches both criteria
  ?actor a dbo:Person ;
         dbo:nativePlace dbr:Jackson,_Tennessee .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,42,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseTed ?spouseGigi WHERE {
  # Find Ted Martin McGinley and his spouse
  ?ted a dbo:Person ;
       foaf:name ""Ted Martin McGinley"" ;
       dbo:profession dbo:Actor .
  OPTIONAL { ?ted dbo:spouse ?spouseTed . }

  # Find Gigi Rice by birth name and her spouse
  ?gigi a dbo:Person ;
        foaf:name ""Gigi Rice"" ;
        dbo:birthName ""Gigi Rice"" ;
        dbo:profession dbo:Actress .
  OPTIONAL { ?gigi dbo:spouse ?spouseGigi . }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
314,17,val,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?award ?commander WHERE {
  # Find Sergei Makovetsky's award
  OPTIONAL {
    ?makovetsky a dbo:Person ;
                foaf:name ""Sergei Makovetsky"" .
    ?makovetsky dbo:award ?award .
    ?award dbo:recipient ?awardee .
  }
  
  # Find commanders in the Spanish Civil War
  OPTIONAL {
    ?commander a dbo:Person ;
               dbo:birthPlace ?place ;
               dbo:deathPlace ?deathPlace ;
               dbo:occupation ""Military commander""@en .
    ?commander dbo:wikiPageWikiLink dbr:Spanish_Civil_War .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
360,13,val,"Give me the writer of the work, that is an album, of Dave Flett and native of Johannesburg.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album a dbo:Album .
  ?album dbo:writer ?writer .
  ?writer foaf:name ""Dave Flett"" .
  ?writer dbo:birthPlace dbr:Johannesburg .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,33,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Archduke Ladislaus Philipp of Austria
  dbr:Archduke_Ladislaus_Philipp_of_Austria a dbo:Person ;
    dbo:child ?child1 .

  # Children of Archduke Ladislaus Philipp (first level)
  ?child1 a dbo:Person ;
    dbo:child ?grandchild .

  # Grandchildren of Archduke Ladislaus Philipp (second level)
  ?grandchild a dbo:RoyalFamilyMember ; # Ensure they are royalty
    dbo:parent ?parent .

  FILTER (?grandchild != dbr:Géza_von_Habsburg) # Exclude Géza von Habsburg
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
427,32,val,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?ipepName WHERE {
  # Find Lamberto Andreotti's father
  dbr:Lamberto_Andreotti dbo:father ?father .
  
  # Get the political party of his father
  ?father dbo:partyMember ?fatherParty .

  # Retrieve the name of Italian People's Party in 1994
  OPTIONAL {
    ?ipep a dbo:PoliticalParty ;
          rdfs:label ?ipepName ;
          dbo:foundingDate ?fdate .
    FILTER (CONTAINS(LCASE(?ipepName), ""italian people's party"") && YEAR(?fdate) = 1994)
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
16,31,val,Give me the spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?person { dbr:Ted_McGinley }
  ?person a dbo:Person .
  ?person dbo:birthName ?birthName .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
232,28,val,Give me the native of London and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify John Pertwee's resource
  dbr:John_Pertwee a dbo:Person ;
                   foaf:name ""John Devon Roland Pertwee""@en .

  # Find his children
  ?child dbo:parent dbr:John_Pertwee .
  
  # Check if the child is native to London
  ?child dbo:nationality dbr:London .

  # Ensure the child acted in Dog Soldiers
  ?film a dbo:Film ;
        foaf:name ""Dog Soldiers""@en .
  ?film dbo:starring ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
747,33,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
  
  ?song dbo:lyricsWriter ?writer .
  ?writer dbr:Amba_Shepherd .

  ?band dbo:member ?person .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,40,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?manager a dbo:Person .
  
  # Manager of Júbilo Iwata in 2013
  ?manager dbo:position ""Manager""@en ;
           dbo:team dbr:Júbilo_Iwata ;
           dbo:startDate ?start ;
           dbo:endDate ?end .
  FILTER (?start <= ""2013-01-01""^^xsd:date && (?end >= ""2013-01-01""^^xsd:date || !bound(?end)))
  
  # Born in 1958 and native of Japan
  ?manager dbo:birthDate ?date ;
           dbo:nationality dbr:Japan .
  FILTER (YEAR(?date) = 1958)
  
  # Alma mater conditions
  ?manager dbo:almaMater ?university .
  ?university a dbo:University, dbo:EducationalOrganization ;
              dbo:country dbr:Japan .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
378,34,val,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person1 ?person2 WHERE {
  # Find the person with birth name Carl Pontus Gahn
  ?person1 a dbo:Person ;
           dbo:birthName ""Carl Pontus Gahn""@en .
  
  # Find the person known as Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  ?person2 a dbo:Person ;
           rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .

  OPTIONAL {
    # Check if person1 participated in any wars
    ?person1 dbo:participatedIn ?war .
  }
  
  OPTIONAL {
    # Check if person2 participated in any wars
    ?person2 dbo:participatedIn ?war .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
485,12,val,Give me the birth place of Thomas Warner (poet) and entity in Nottinghamshire and entity in United Kingdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Thomas Warner's birth place
SELECT ?birthPlace WHERE {
  ?person a dbo:Writer ;
          foaf:name ""Thomas Warner"" .
  ?person dbo:birthPlace ?birthPlace .
}

# Query for an entity in Nottinghamshire
SELECT ?entityInNottinghamshire WHERE {
  ?entityInNottinghamshire dbo:location dbr:Nottinghamshire .
}

# Query for an entity in the United Kingdom
SELECT ?entityInUK WHERE {
  ?entityInUK dbo:country dbr:United_Kingdom .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
767,36,val,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fictionalCharacter WHERE {
  ?person a dbo:Person ;
          foaf:name ""Matthew Burland"" .
  
  ?person dbo:fictionalCharacter ?fictionalCharacter .

  OPTIONAL { 
    ?fictionalCharacter dbo:location dbr:Baden-Württemberg .
  }
}
```",4,5,5,3,2,3,3,71,0,0,7,0,0.0,0
959,19,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Eiji Ōtsuka""@en .
  ?person dbo:almaMater ?almaMater .

  FILTER EXISTS { 
    ?almaMater a dbo:University .
    ?almaMater dbo:location dbr:Japan .
  }
}
```",3,7,4,2,2,3,3,71,0,0,84,0,0.0,0
487,13,val,Give me the country of the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1955 && MONTH(?date) = 1 && DAY(?date) = 26)
  
  OPTIONAL { 
    ?officeHolder dbo:officeHolder ?person .
    ?officeHolder dbo:country ?country .
  }
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
820,15,val,Give me the professional in the award of the author of Understanding Comics and child of Jack Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?occupation WHERE {
  ?person dbo:parent dbr:Jack_Schwartzman .
  ?author dbo:work dbr:Understanding_Comics .
  ?author a dbo:Person .
  FILTER (?author = ?person) .
  OPTIONAL { ?person dbo:occupation ?occupation . }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
827,15,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find William Ernest's father
  ?williamErnest a dbo:Person ;
                rdfs:label ""William Ernest, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?father dbo:spouse ?mother ;
          dbo:child ?williamErnest .

  # Find Charles Alexander's parent
  ?charlesAlexander a dbo:Person ;
                    rdfs:label ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?parent dbo:child ?charlesAlexander .

  # Find the child of William Ernest's father who is also a descendant of Charles Alexander's parent
  ?father dbo:child ?intermediateChild ;
          rdfs:label ?royaltyLabel .
  FILTER (CONTAINS(LCASE(?royaltyLabel), ""grand duke"") || CONTAINS(LCASE(?royaltyLabel), ""duke""))

  ?intermediateChild dbo:parent ?parent .

  # Ensure the child is a royalty
  ?child dbo:spouse|dbo:child ?intermediateChild ;
         rdfs:label ?finalRoyaltyLabel .
  FILTER (CONTAINS(LCASE(?finalRoyaltyLabel), ""grand duke"") || CONTAINS(LCASE(?finalRoyaltyLabel), ""duke""))

}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
391,26,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Sherry Hormann
  ?sherryHormann a dbo:Person ;
                 foaf:name ""Sherry Hormann""@en .
  
  # Identify her spouse
  ?spouse dbo:spouse ?sherryHormann .

  # Get the claim to fame (a film) of the spouse
  ?film dbo:claimToFame ?spouse ;
        a dbo:Film .

  # Find an actor in that film
  ?film dbo:actor ?actor .
}
```",3,4,4,3,1,3,3,71,0,0,20,0,0.0,0
659,19,val,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?battleCommander ?wellingtonCommander WHERE {
  # Commander for the Battle of Leipzig
  db:Battle_of_Leipzig dbo:commander ?battleCommander .

  # Commander role or force led by Arthur Wellesley, 1st Duke of Wellington
  dbr:Arthur_Wellesley,_1st_Duke_of_Wellington dbo:commander ?wellingtonCommander .
}
```",3,3,4,2,2,3,3,71,0,0,19,0,0.0,0
617,33,val,"Give me the child of Antiochus III the Great and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find the child of Antiochus III the Great
  ?child dbo:parent dbr:Antiochus_III_the_Great .
  
  # Identify the spouse of this child
  ?child dbo:spouse ?spouse .

  # Find Antiochus (son of Antiochus III)
  ?antiochusSon dbo:parent dbr:Antiochus_III_the_Great .
  
  # Determine the successor of Antiochus (son of Antiochus III)
  ?successor dbo:succeededBy ?antiochusSon .

  # Find the child of this successor who is royalty
  ?royalChild dbo:parent ?successor .
  ?royalChild a dbo:Royalty .
  
  # Ensure the spouse found is related to the royal child
  ?spouse dbo:child ?royalChild .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
617,12,val,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Richeza of Poland, Queen of Hungary
  dbr:Richeza_of_Poland,_Queen_of_Hungary a dbo:Person .

  # Father of Richeza
  dbr:Richeza_of_Poland,_Queen_of_Hungary dbo:father ?father .
  
  # Parent (mother or father) of Richeza's father
  OPTIONAL { ?father dbo:mother ?parent . }
  OPTIONAL { ?father dbo:father ?parent . }

  # Ensure the parent is a member of royalty
  FILTER (?parent != dbr:Richeza_of_Poland,_Queen_of_Hungary && 
          EXISTS { ?parent a dbo:Monarch } )

  # Check if this parent is also a child of Doubravka of Bohemia
  OPTIONAL { ?parent dbo:mother dbr:Doubravka_of_Bohemia . }
  OPTIONAL { ?parent dbo:father dbr:Doubravka_of_Bohemia . }

  FILTER EXISTS {
    ?parent dbo:mother dbr:Doubravka_of_Bohemia .
    } 
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
281,29,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?beauchampWar ?heffronBirthCountry ?nzArmyWar WHERE {
  # Beauchamp Seymour, 1st Baron Alcester's war
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:participatedIn ?beauchampWar .

  # Bob Heffron's birthplace that is a country
  dbr:Bob_Heffron dbo:birthPlace ?heffronBirthPlace .
  ?heffronBirthPlace rdf:type dbo:Country .
  BIND(?heffronBirthPlace AS ?heffronBirthCountry)

  # New Zealand Army's war
  dbr:New_Zealand_Army dbo:participatedIn ?nzArmyWar .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
959,35,val,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find Takashi Sekizuka's team manager
  ?team a dbo:SoccerTeam ;
        dbo:coach ?manager .
  
  # Takashi Sekizuka is part of this team
  ?player dbo:playsFor ?team ;
          rdfs:label ""Takashi Sekizuka""@en .

  # Find Eiji Ōtsuka's alma mater
  ?almaMater a dbo:University, dbo:EducationalInstitution, dbo:Organization ;
             dbo:country dbr:Japan ;
             dbo:alumni ?eijiOotsuka .
  
  # Eiji Ōtsuka is an alumnus of this university
  ?eijiOotsuka rdfs:label ""Eiji Ōtsuka""@en .

  # The manager must be associated with the alma mater (as a member or similar role)
  ?almaMater dbo:member ?manager .
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
55,13,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonMember WHERE {
  # Step 1: Identify the producer of ""Used to Love Her""
  ?song dbo:producer ?producer .
  FILTER (str(?song) = str(dbr:Used_to_Love_Her))

  # Step 2: Check if the producer is a band or has band members
  OPTIONAL { 
    ?producer a dbo:Band .
    ?producerMember dbo:bandMember ?commonMember .
  }
  
  OPTIONAL {
    ?producer a dbo:Person .
    ?producerBand dbo:bandMember ?commonMember .
    ?producerBand dbo:leadArtist ?producer .
  }

  # Step 3: Identify Metallica's band members
  dbr:Metallica dbo:bandMember ?metallicaMember .

  # Step 4: Find common member between the producer and Metallica
  FILTER (?commonMember = ?metallicaMember)
}
```",3,4,4,2,2,2,3,28,0,4,1,0.0,0.0,0
182,13,val,Give me the war of Jagath Dias and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find wars associated with Jagath Dias
  ?jagathDias a dbo:Person ;
              rdfs:label ""Jagath Dias""@en .
  
  OPTIONAL { 
    ?jagathDias dbo:wikiPageWikiLink ?war .
  }
  
  # Find wars associated with Zahran Hashim (author of the bombings)
  ?zahranHashim a dbo:Person ;
                rdfs:label ""Zahran Hashim""@en .
  
  OPTIONAL { 
    ?zahranHashim dbo:wikiPageWikiLink ?war .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
435,17,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
# Query for Article 62, Section IV of Constitution of Iceland
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?articleContent WHERE {
  dbr:Iceland_Constitution dbo:hasPart ?section .
  ?section rdfs:label ""Article 62"" ;
           dbo:hasPart ?subsection .
  ?subsection rdfs:label ""Section IV"" ;
             dbo:textValue ?articleContent .
}

# Query for the region of the time zone in Bombali Shebora Chiefdom
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZoneRegion WHERE {
  dbr:Bombali_Shebora_Cheifdom dbo:location ?location .
  ?location dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?timeZoneRegion .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,34,val,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfNysa ?childOfChild ?successor ?childOfSuccessor WHERE {
  # Find Nysa, wife of Pharnaces I of Pontus
  ?nysa dbo:spouse dbr:Pharnaces_I_of_Pontus ;
        a dbo:Person .
  
  # Find Nysa's parent(s)
  ?parentOfNysa dbo:child ?nysa .

  # Find child of one of Nysa's children
  ?nysasChild dbo:parent ?nysa .
  ?childOfChild dbo:parent ?nysasChild .
  
  # Identify Antiochus II Theos' successor who is royalty
  dbr:Antiochus_II_Theos dbo:successor ?successor ;
                         a dbo:Person .
  FILTER (strstarts(str(?successor), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?successor a dbo:Monarch } )

  # Find child of the successor who is royalty
  ?childOfSuccessor dbo:parent ?successor .
  FILTER (EXISTS { ?childOfSuccessor a dbo:Monarch })

  # Ensure both individuals are royalty
  FILTER (EXISTS { ?childOfChild a dbo:Monarch } && 
          EXISTS { ?childOfSuccessor a dbo:Monarch })
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
54,39,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?predecessor WHERE {
  # Find Thado Minsaw of Prome's parent who is a royalty and office holder
  ?thadoMinsaw dbr:Prome_Thado_Minsaw .
  ?thadoMinsaw dbo:parent ?parent .
  ?parent a dbo:Monarch ;
          a dbo:Person .

  # Find Thihapate of Mohnyin's child and their predecessor who is a royalty and office holder
  ?thihapate dbr:Mohnyin_Thihapate .
  ?child dbo:successorOf ?thihapate .
  ?predecessor dbo:successorOf ?child .
  ?predecessor a dbo:Monarch ;
              a dbo:Person .

}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
294,19,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politician WHERE {
  ?politician a dbo:Person .
  ?politician dbo:award dbr:Distinguished_Service_Medal_(U.S._Army) .
  ?politician dbo:occupation dbo:Politician .
  
  ?politician dbo:deathPlace ?restingPlace .
  FILTER (str(?restingPlace) = ""Nashville, Tennessee"" || str(?restingPlace) = ""Tennessee"") .

  ?keeblesDeathPlace dbo:deathPlace dbr:Nashville,_Tennessee .
  ?keeblesDeathPlace a dbo:Person ;
                    foaf:name ""Edwin A. Keeble""@en .
  
  FILTER (str(?restingPlace) = str(?keeblesDeathPlace))
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,22,val,Give me the reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?character a dbo:Character ;
             rdfs:label ""Black Hood""@en .
  
  OPTIONAL { ?character dbo:alterEgo ?alterEgo . }
  
  ?entity dbo:location dbr:Baden-Württemberg ;
          dbo:associatedWith ?character .

}
```",3,3,4,2,2,3,3,71,0,0,7,0,0.0,0
547,24,val,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?restingPlace WHERE {
  { 
    # Resting place of Alan Cunningham
    OPTIONAL { 
      dbr:Alan_Cunningham dbo:deathPlace ?restingPlace .
      BIND(dbr:Alan_Cunningham AS ?entity)
    }
  } UNION {
    # Resting place of the actor from ""Enemy at the Door""
    ?film dbo:starring ?actor .
    FILTER (str(?film) = ""Enemy_at_the_Door"")
    OPTIONAL { 
      ?actor dbo:deathPlace ?restingPlace .
      BIND(?actor AS ?entity)
    }
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
391,24,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of All About the Andersons.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonActor WHERE {
  # Find Michael Ballhaus's notable work
  ?ballhaus a dbo:Person ;
            foaf:name ""Michael Ballhaus"" .
  
  ?work dbo:director ?ballhaus ;
        dbo:title ?title .

  # Find actors of the work associated with Michael Ballhaus
  ?work dbo:actor ?actor1 .
  
  # Find actors of ""All About the Andersons""
  dbr:All_About_the_Andersons dbo:actor ?actor2 .

  # Check for common actor between both works
  FILTER (?actor1 = ?actor2)
  BIND(?actor1 AS ?commonActor)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
547,35,val,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person1 ?restingPlace1 ?child ?restingPlace2 WHERE {
  # Find the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?person1 dbo:honoursReceived dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  
  # Get their resting place
  OPTIONAL { ?person1 dbo:deathPlace ?restingPlace1 . }
  
  # Find James Burton (property developer) and his child
  ?james a dbo:Person ;
         foaf:name ""James Burton"" ;
         dbo:profession dbr:Property_developer .
         
  ?child dbo:parent ?james .

  # Get the resting place of the child
  OPTIONAL { ?child dbo:deathPlace ?restingPlace2 . }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
801,40,val,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Chris Taylor's associated musical artist
  ?artist dbo:associatedMusicalArtist dbr:Chris_Taylor_(musician) .
  
  # Producer of Westside Story (song)
  ?producer dbo:producedSong dbr:Westside_Story_(song) .

  # Professional in the alter ego of The Shadow
  ?alterEgo dbo:professionalAlias dbr:The_Shadow .

  # Find common person among these roles
  FILTER (?artist = ?producer && ?producer = ?alterEgo)
  
  BIND(?artist AS ?person)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
778,15,val,"Give me the author of Chroot and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?awardEntity WHERE {
  ?work dbo:title ""Chroot""@en .
  ?work dbo:author ?author .

  ?award a dbo:Award ;
         dbo:name ""Wolf Prize in Medicine"" ;
         dbo:recipient ?awardee .
  
  ?awardee dbo:nationality dbr:United_States .

  FILTER (?author = ?awardee)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
92,41,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find band members of Nevermore who are artists
  ?bandMember a dbo:Person .
  ?bandMember dbo:musicalArtist dbr:Nevermore .
  ?bandMember dbo:occupation dbr:Musician .

  OPTIONAL {
    # Check if Jim Sheppard and Joseph Michael have any shared musical association
    ?sheppard a dbo:Person ;
             rdfs:label ""Jim Sheppard""@en ;
             dbo:musicalArtist ?sharedBand .
    ?michael a dbo:Person ;
             rdfs:label ""Joseph Michael""@en ;
             dbo:musicalArtist ?sharedBand .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
959,43,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the politician leader of the 2010 Japanese House of Councillors election
  ?politician a dbo:Politician ;
              dbo:electedAsMemberOf ?election .
  ?election dbo:date ?date .
  FILTER (YEAR(?date) = 2010 && CONTAINS(LCASE(str(?election)), ""japanese house of councillors""))

  # Find the country of residence of this politician
  ?politician dbo:nationality ?country .

  # Find a person who is native to this country and was a manager in 2013 Júbilo Iwata season
  ?person a dbo:Person ;
          dbo:nationality ?country ;
          dbo:manager ?team .
  ?team dbo:season ?season .
  FILTER (YEAR(?season) = 2013 && CONTAINS(LCASE(str(?team)), ""júbilo iwata""))

  # Ensure the person is also a member of University of Tsukuba
  ?person dbo:almaMater dbr:University_of_Tsukuba .

}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,31,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of Red Tide (band).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find associated artists of Watchtower
  ?watchtower a dbo:Band ;
              rdfs:label ""Watchtower""@en .
  
  ?artist1 dbo:associatedBand ?watchtower .

  # Step 2: Find associated artists of Red Tide
  ?redTide a dbo:Band ;
           rdfs:label ""Red Tide (band)""@en .

  ?artist2 dbo:associatedBand ?redTide .

  # Step 3: Find the final artist associated with the artist from Watchtower
  ?finalArtist dbo:associatedBand ?artist1 .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
314,19,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in Spanish Civil War
  ?person dbo:role ?role .
  ?role rdfs:label ""Commander""@en .
  ?war dbo:participatedIn ?civilWar .
  ?civilWar rdfs:label ""Spanish Civil War""@en .

  # Deceased at House of Sombrerete
  ?person dbo:deathPlace dbr:House_of_Sombrerete .

  # Awardee (assuming '30' refers to an award number or identifier)
  ?person dbo:award ?award .
  ?award rdfs:label ""Award 30""@en .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
294,15,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Politician .
  ?person dbo:award dbr:Distinguished_Service_Medal_(United_States_Army) .
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Nashville, Tennessee""@en .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
294,13,val,"Give me the resting place of Edwin A. Keeble and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Edwin A. Keeble's resting place
SELECT ?keeblesRestingPlace WHERE {
  ?keeblesResource a dbo:Person ;
                   foaf:name ""Edwin A. Keeble""@en .
  OPTIONAL { ?keeblesResource dbo:deathPlace ?keeblesRestingPlace . }
}

# Query for the politician awardee's resting place
SELECT ?awardeesRestingPlace WHERE {
  ?awardee a dbo:Person ;
           dbo:award dbr:Distinguished_Service_Medal_(U.S._Army) .
  ?awardee dbo:occupation dbo:Politician .
  OPTIONAL { ?awardee dbo:deathPlace ?awardeesRestingPlace . }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,28,val,Give me the child of Archduke Joseph August of Austria and parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Archduke Joseph August of Austria's child
  ?child dbo:parent dbr:Archduke_Joseph_August_of_Austria .
  
  # This person is a parent of Archduchess Ilona of Austria
  ?child dbo:child dbr:Archduchess_Ilona_of_Austria .

  # This person is also a parent of someone native to Budapest
  ?budaPerson dbo:nativePlace dbr:Budapest .
  ?child dbo:child ?budaPerson .

  # Bind the child as the person we are looking for
  BIND(?child AS ?person)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
767,40,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Find Dustin Lynch as the writer of ""Where It's At""
  ?album dbo:artist dbr:Dustin_Lynch ;
         rdfs:label ""Where It's At (Dustin Lynch album)""@en .
  
  # Find Carl L. Nippert's alma mater
  ?nippert a dbo:Person ;
           foaf:name ""Carl L. Nippert"" ;
           dbo:almaMater ?university .

  # Identify the settlement that is part of the administration related to both entities
  ?settlement a dbo:Settlement ;
              dbo:administratorOf ?adminEntity .
  
  # Link Dustin Lynch's administrative role or connection
  ?adminEntity dbo:employee ?dustinLynchRole .
  ?dustinLynchRole dbo:person dbr:Dustin_Lynch .

  # Link Carl L. Nippert's alma mater to the same settlement
  ?university dbo:location ?settlement .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
179,12,val,Give me the parent of the child of Bhumibol Adulyadej and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Identify Bhumibol Adulyadej and his spouse
  dbr:Bhumibol_Adulyadej a dbo:Person ;
                        dbo:spouse dbr:Mom_Rajawongse_Sirikit_Kitiyakara .

  # Find the child of Bhumibol Adulyadej
  ?child dbo:parent dbr:Bhumibol_Adulyadej .
  
  # Find the parent(s) of this child
  ?child dbo:parent ?parent .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
488,34,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationPeriod ?birthPlace WHERE {
  # Find Emperor Go-Yōzei's administration period
  dbr:Emperor_Go-Yōzei a dbo:Monarch ;
                       dbo:reign ?administrationPeriod .

  # Identify Saitō Hajime and the war he was involved in
  dbr:Saitō_Hajime a dbo:MilitaryPerson ;
                   dbo:commanderOf ?war .
  
  # Ensure the war is both a military conflict and an event, societal event
  ?war a dbo:MilitaryConflict , dbo:Event , dbo:SocietalEvent .

  # Get Saitō Hajime's birth place
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
488,30,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tokugawaDeathPlace ?hideyoshiAdministration ?enomotoBirthPlace WHERE {
  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?tokugawaDeathPlace .

  # Toyotomi Hideyoshi's administration (assuming we are looking for his title or role)
  dbr:Toyotomi_Hideyoshi a dbo:Person .
  OPTIONAL { 
    dbr:Toyotomi_Hideyoshi dbo:title ?hideyoshiAdministration .
  }

  # Enomoto Takeaki's birth place
  dbr:Enomoto_Takeaki dbo:birthPlace ?enomotoBirthPlace .
}
```",4,4,5,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
184,39,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Find Archduchess Margaret of Austria born in 1925
  ?margaret a dbo:Person ;
            dbo:birthDate ?dateMargaret .
  FILTER (YEAR(?dateMargaret) = 1925)
  VALUES ?margaret { dbr:Archduchess_Margaret_of_Austria }

  # Step 2: Find her parent
  ?parent1 dbo:child ?margaret .

  # Step 3: Find a child of this parent
  ?childOfParent1 dbo:parent ?parent1 .

  # Step 4: Find the parent of this child
  ?commonParent dbo:child ?childOfParent1 .

  # Step 5: Find Archduke Joseph August of Austria's child
  ?joseph dbr:Archduke_Joseph_August_of_Austria .
  ?childOfJoseph dbo:parent ?joseph .

  # Step 6: Ensure the common parent is also a parent of this child
  ?commonParent dbo:child ?childOfJoseph .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,43,val,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Ted McGinley and his spouse
  ?ted a dbo:Person ;
      foaf:name ""Ted McGinley""@en .
  
  ?ted dbo:spouse ?spouse .

  # Ensure the spouse is Georgeanne Marie Rice
  ?spouse foaf:name ""Georgeanne Marie Rice""@en .

  # Find the actor of Unnatural (TV series)
  ?unnaturalActor a dbo:Person ;
                  dbo:profession dbr:Actor ;
                  dbo:workFeaturedIn dbr:Unnatural_(TV_series) .
  
  # Ensure the spouse is also this actor
  FILTER (?spouse = ?unnaturalActor)

  BIND(?spouse AS ?person)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
488,32,val,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace WHERE {
  # Find the birth place of Saigō Takamori
  dbr:Saig%C5%8D_Takamori a dbo:Person ;
    dbo:birthPlace ?birthPlace .

  # Find the death place of Yūki Muneyoshi, father of Yūki Hideyasu
  dbr:Y%C5%ABki_Hideyasu dbo:father ?father .
  ?father rdfs:label ""Y%C5%ABki_Muneyoshi""@en ;
    dbo:deathPlace ?deathPlace .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
617,14,val,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfFather ?parentOfReference WHERE {
  # Richeza of Poland
  dbr:Richeza_of_Poland a dbo:Person .

  # Father of Richeza
  ?father dbo:child dbr:Richeza_of_Poland .
  
  # Parent of the father (ensuring they are royalty)
  ?parentOfFather dbo:child ?father .
  ?parentOfFather a dbo:Monarch .

  # Reference person related to Richeza who is royalty
  ?reference dbo:spouse dbr:Richeza_of_Poland .
  ?reference a dbo:Monarch .

  # Parent of the reference (ensuring they are royalty)
  ?parentOfReference dbo:child ?reference .
  ?parentOfReference a dbo:Monarch .
}
```",3,5,4,3,1,3,2,20,0,0,4,0,0.0,0
435,16,val,Give me the work of the author of Iceland and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Halld%C3%B3r_Laxness a dbo:Writer .
  dbr:Halld%C3%B3r_Laxness dbo:work ?work .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
182,19,val,Give me the war of Jagath Dias and entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find the war involving Jagath Dias
SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jagath Dias""@en .
  ?person dbo:memberOf ?organization .
  ?organization dbo:memberOf ?war .
}

UNION

# Query to find the group responsible for the 2019 Sri Lanka Easter bombings
SELECT ?conflict WHERE {
  dbr:National_Thowheeth_Jama'ath dbo:involvedIn ?conflict .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
404,25,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent ?child WHERE {
  # Find Prince Ernest Augustus of Hanover born in 1914
  ?person a dbo:Person ;
          rdfs:label ""Prince Ernest Augustus of Hanover""@en ;
          dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1914)

  # Get his parent(s)
  ?parent dbo:child ?person .

  # Find Ernest Augustus, Duke of Brunswick and his father
  ?duke a dbo:Person ;
        rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?grandfather dbo:child ?duke .

  # Get the child of the grandfather (who is also a parent of Prince Ernest Augustus)
  ?child dbo:parent ?grandfather .
  
  FILTER (?person = ?child) 
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,19,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Link Francisco Franco to a military force
  ?franco dbo:militaryForce ?militaryForce .
  FILTER (?franco = dbr:Franco_Francisco)

  # Link the Spanish Civil War to a military force
  ?civilWar dbo:militaryForce ?militaryForce .
  FILTER (?civilWar = dbr:Spanish_Civil_War)
}
```",3,6,4,2,2,3,3,71,0,0,514,0,0.0,0
10,19,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Association with Matt Colton
  ?associationColton dbo:associatedMusicalArtist ?person ;
                     dbo:musicalArtist dbr:Matt_Colton .

  # Band membership with Luke Vibert
  ?associationVibert dbo:bandMember ?person ;
                     dbo:bandLeader dbr:Luke_Vibert .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,20,val,Give me the alma mater of the administration of George K. Nash and entity in Baden-Württemberg.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?entity WHERE {
  # Find George K. Nash's alma mater
  dbr:George_K._Nash a dbo:Person .
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Find an entity in Baden-Württemberg
  ?entity dbo:location dbr:Baden-Württemberg .
}
```",3,3,4,2,2,3,3,71,0,202,1,0.0,0.0,0
783,13,val,Give me the associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Samuel Ofori Amponsah""@en .
  
  OPTIONAL { 
    ?band dbo:bandMember ?person .
    ?band dbo:associatedMusicalArtist ?artist .
  }
}
```",3,3,4,3,1,3,2,20,0,0,35,0,0.0,0
54,21,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Ameitta Thiri Maha Dhamma Dewi's predecessor
  ?ameitta a dbo:Person ;
           rdfs:label ""Ameitta Thiri Maha Dhamma Dewi""@en .
  
  ?predecessor dbo:successor ?ameitta .

  # Find Soe Min Wimala Dewi and her father
  ?soeminwimala a dbo:Person ;
                rdfs:label ""Soe Min Wimala Dewi""@en .
  
  ?father dbo:child ?soeminwimala .
  
  # Check if the predecessor is also a child of Soe Min Wimala Dewi's father
  ?predecessor dbo:child ?father .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
184,36,val,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfGéza ?parentOfChild WHERE {
  # Find Géza von Habsburg's parent
  ?géza a dbo:Person ;
        foaf:name ""Géza von Habsburg""@en .
  ?géza dbo:parent ?parentOfGéza .

  # Find Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            foaf:name ""Archduchess Margaret of Austria""@en ;
            dbo:birthDate ?dateM .
  FILTER (YEAR(?dateM) = 1925)

  # Find her parent
  ?margaret dbo:parent ?parentOfMargaret .

  # Find the child of Archduchess Margaret's parent
  ?child a dbo:Person ;
         dbo:parent ?parentOfMargaret .

  # Find the parent of this child
  ?child dbo:parent ?parentOfChild .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
547,31,val,Give me the resting place of Simon Cadell and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?simonCadellRestingPlace ?grandchildRestingPlace WHERE {
  # Resting place of Simon Cadell
  OPTIONAL {
    dbr:Simon_Cadell a dbo:Person .
    dbr:Simon_Cadell dbo:finalBurial ?simonCadellRestingPlace .
  }

  # Resting place of the grandchild of William Haliburton
  OPTIONAL {
    dbr:William_Haliburton a dbo:Person .
    dbr:William_Haliburton dbo:child ?child .
    ?child dbo:child ?grandchild .
    ?grandchild dbo:finalBurial ?grandchildRestingPlace .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,34,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  # Find the writer of the album ""Where It's At"" by Dustin Lynch
  ?album dbo:writer ?writer .
  ?album rdfs:label ""Where It's At (Dustin Lynch album)""@en .

  # Identify the administrative area related to the writer
  ?writer dbo:administrativeArea ?adminArea .

  # Check if this administrative area is a settlement
  ?adminArea a dbo:Settlement .
  
  BIND(?adminArea AS ?settlement)
}
```",4,5,5,3,2,3,3,71,0,0,8,0,0.0,0
391,29,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Michael Ballhaus's notable work
  ?ballhaus a dbo:Person ;
            foaf:name ""Michael Ballhaus"" .
  
  ?work dbo:director ?ballhaus ;
        a dbo:Film ; # Assuming the claim to fame is a film; adjust if it's another type of work
  
  # Find an actor in this work who is from Compton, California
  ?actor dbo:birthPlace dbr:Compton,_California ;
         dbo:starringIn ?work .
  
  # Ensure the actor also starred in ""All About the Andersons""
  ?actor dbo:starringIn dbr:All_About_the_Andersons .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
801,41,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?work a dbo:MusicalWork ;
        a dbo:Song .
  
  ?work dbo:artist ?fiftyCent .
  ?fiftyCent rdfs:label ""50 Cent""@en .

  ?work dbo:producer ?producer .
  
  OPTIONAL { 
    ?work dbo:associatedPerformer ?chrisTaylor .
    ?chrisTaylor rdfs:label ""Chris Taylor (music producer)""@en .
  }
  
  ?producer foaf:name ?name .
  FILTER regex(?name, ""The Shadow"", ""i"")
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
251,16,val,Give me the location of Battle of Marengo and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleLocation ?authorDeathPlace WHERE {
  # Find the location of the Battle of Marengo
  dbr:Battle_of_Marengo a dbo:MilitaryConflict ;
                        dbo:location ?battleLocation .

  # Find the author of The Twelve Abbots of Challant and their death place
  dbr:The_Twelve_Abbots_of_Challant dbo:author ?author .
  ?author a dbo:Writer ;
          dbo:deathPlace ?authorDeathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
994,26,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find the band associated with Fredrik Thordendal
  ?person a dbo:Person ;
          foaf:name ""Fredrik Thordendal""@en .
  
  ?band dbo:member ?person ;
        a dbo:Band, dbo:MusicalGroup, dbo:Organization .

  # Find other artists associated with the band
  ?artist dbo:bandMember ?band ;
          a dbo:MusicalArtist .
}
```",3,7,4,3,1,3,3,71,0,0,33,0,0.0,0
427,42,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?andreottiParty ?prodiParty WHERE {
  # Giulio Andreotti's party affiliation
  dbr:Giulio_Andreotti a dbo:Person ;
                       dbo:partyAffiliation ?andreottiParty .

  # Romano Prodi's party affiliation
  dbr:Romano_Prodi a dbo:Person ;
                   dbo:birthName ""Romano Antonio Prodi"" ;
                   dbo:partyAffiliation ?prodiParty .
  
  # Reference to Italian People's Party (1994)
  OPTIONAL {
    ?party dbr:Italian_People%27s_Party_(1994) rdfs:label ?partyLabel .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
303,16,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  VALUES ?name { ""Arnulfo Arias Madrid"" ""Guillermo Endara"" }
  
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
  ?person a dbo:Politician .

  OPTIONAL { 
    ?person dbo:partyAffiliation ?party .
    FILTER (!isBlank(?party))
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
328,18,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Leader of People's Commissariat of Defense
  ?office dbo:positionHeld ?person ;
          rdfs:label ""People's Commissar for Defence""@en .
  
  # Awardee of Order of Suvorov
  ?award dbo:honoree ?person ;
         rdfs:label ""Order of Suvorov""@en .

  # Commander in Eastern Front during World War II
  ?position dbo:positionHeld ?person ;
            rdfs:label ""Commander-in-Chief of the Soviet Armed Forces on the Eastern Front""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
421,19,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Identify the person Edin Dervišhalidović
  ?person a dbo:Person ;
          foaf:name ""Edin Dervišhalidović""@en ;
          dbo:nativePlace dbr:Socialist_Federal_Republic_of_Yugoslavia .

  # Find awards associated with him
  OPTIONAL { ?person dbo:award ?award . }

  # Identify band members related to him
  ?bandMember dbo:bandMember ?person .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
626,15,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Condition 1: Awardee of the Order of St. Andrew
  ?award dbo:recipient ?person ;
         rdfs:label ""Order of St. Andrew""@en .

  # Condition 2 and 3: Commander in a military conflict and specifically in Battle of Paris (1814)
  ?conflict dbo:commander ?person .
  ?battle dbo:participatedIn ?person ;
          rdfs:label ""Battle of Paris (1814)""@en .
}
```",4,5,5,3,2,3,2,20,0,0,9,0,0.0,0
617,44,val,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Antiochus III the Great
  dbr:Antiochus_III_the_Great a dbo:Person .
  
  # Find his children
  ?child dbo:parent dbr:Antiochus_III_the_Great ;
         a dbo:Person .

  # Ensure one of these children is Antiochus (son of Antiochus III the Great)
  OPTIONAL { ?antiochus dbo:name ""Antiochus""@en . }
  
  FILTER (?child = ?antiochus)

  # Find the spouse of this child
  ?child dbo:spouse ?spouse .
}
```",5,5,6,2,3,3,3,71,2,3,0,0.4,1.0,0.5714285714285715
959,31,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  ?person dbo:almaMater ?university .
  
  ?university a dbo:University ;
             dbo:country dbr:Japan .

  FILTER (YEAR(?date) = 1958)
}
```",4,8,5,3,2,3,3,71,0,16,167,0.0,0.0,0
314,18,val,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Lisa Gavrić's award event
  ?event dbo:awardRecipient dbr:Lisa_Gavrić .
  
  # The awardee of the same event
  ?event dbo:awardRecipient ?awardee .

  # Ensure the profession is commander
  ?awardee dbo:profession dbr:Commander .

  # Check if the award number is related to 30 (assuming a property like dbo:awardNumber)
  ?event dbo:awardNumber ?number .
  FILTER (?number = ""30""^^xsd:string)

  # Ensure the event is both an event and a societal event
  ?event a dbo:Event ;
         a dbo:SocietalEvent .
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
488,43,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfatherDeathPlace ?enomotoBirthPlace ?emperorAdministration WHERE {
  # Matsudaira Tadamasa's father (office holder)
  ?matsudairaFather a dbo:Person ;
                   dbo:child dbr:Matsudaira_Tadamasa ;
                   dbo:parent ?maternalGrandfather .

  # Matsudaira Tadamasa's grandfather (politician)
  ?maternalGrandfather a dbo:Politician ;
                      dbo:deathPlace ?grandfatherDeathPlace .

  # Enomoto Takeaki
  dbr:Enomoto_Takeaki dbo:birthPlace ?enomotoBirthPlace .

  # Emperor Go-Yōzei
  dbr:Emperor_Go-Yōzei dbo:administration ?emperorAdministration .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
197,7,val,Give me the birthplace of the member of FC Politehnica Timișoara and birthplace of George Lusztig.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  # Query for a member of FC Politehnica Timișoara
  {
    ?member dbo:memberOfTeam dbr:FC_Politehnica_Timișoara .
    ?member dbo:birthPlace ?birthPlace .
    ?member a dbo:Person .
  }
  
  UNION
  
  # Query for George Lusztig
  {
    ?lusztig foaf:name ""George Lusztig""@en .
    ?lusztig dbo:birthPlace ?birthPlace .
    ?lusztig a dbo:Person .
  }
}
```",3,3,4,2,2,2,2,9,2,0,0,1.0,1.0,1.0
177,7,val,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in the residence of Alexander Gamelin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the headquarter of Ministry of Culture, Sports and Tourism
SELECT ?headquarters WHERE {
  ?ministry a dbo:GovernmentAgency .
  ?ministry rdfs:label ""Ministry of Culture, Sports and Tourism""@en .
  ?ministry dbo:headquarters ?headquarters .
}

UNION

# Query for the residence of Alexander Gamelin
SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alexander Gamelin"" .
  ?person dbo:residence ?residence .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
701,4,train,Give me the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Nefertari a dbo:Person .
  ?child dbo:parent dbr:Nefertari .
  ?child a dbo:Person .
}
```",1,1,2,1,1,3,3,71,4,0,2,1.0,0.6666666666666666,0.8
959,2,train,Give me the manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:SportsTeam .
  ?team rdfs:label ""Júbilo Iwata""@en .
  ?team dbo:season ?season .
  ?season dbo:year ?year .
  FILTER (?year = 2013)
  ?team dbo:manager ?manager .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
485,5,train,"Give me the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  dbr:Joseph_Whitaker_(naturalist) a dbo:Person .
  dbr:Joseph_Whitaker_(naturalist) dbo:birthPlace ?birthPlace .
  ?birthPlace a dbp:Region .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
339,6,train,Give me the father of Princess Elizabeth of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?princess a dbo:Person ;
            rdfs:label ""Princess Elizabeth of Greece and Denmark""@en .
  ?person dbo:father ?princess .

  ?georgeI a dbo:Person ;
           rdfs:label ""George I of Greece""@en .
  ?person dbo:child ?georgeI .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
528,13,train,Give me the war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Battle_of_La_Rinconada_de_Ate dbo:commander ?commander .
}
```",2,2,3,2,1,3,3,71,0,2,14,0.0,0.0,0
994,0,train,Give me the associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  OPTIONAL { 
    dbr:S.A._Slayer dbo:member ?band .
    ?band dbo:associatedBand ?associatedArtist .
  }
  UNION
  OPTIONAL {
    dbr:S.A._Slayer a dbo:MusicalArtist ;
                    dbo:associatedBand ?associatedArtist .
  }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
48,10,train,"Give me the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find a show where Stacey Dash is an actor
  ?show dbo:starring dbr:Stacey_Dash .
  
  # Get all actors of that show
  ?show dbo:actor ?actor .

  # Check if the actor is also a musical artist
  ?actor a dbo:MusicalArtist .
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
44,3,train,"Give me the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  VALUES ?queensryche { dbr:Queensrÿche }
  ?queensryche a dbo:MusicalBand .
  ?association dbo:associatedBand ?queensryche ;
               dbo:associatedBand ?associatedArtist .
  ?associatedArtist a dbo:MusicalGroup, dbo:Organization .
}
```",1,3,2,1,1,2,2,9,0,0,3,0,0.0,0
492,0,train,Give me the person decedent at French Algeria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:French_Algeria .
}
```",1,1,2,1,1,3,3,71,30,0,0,1.0,1.0,1.0
747,1,train,Give me the band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Amba_Shepherd a dbo:Person .
  dbr:Amba_Shepherd dbo:musicalBand ?band .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
645,10,train,Give me the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Find Adela Pankhurst's parents
  ?parent dbo:child dbr:Adela_Pankhurst .
  
  # Step 2: For each parent, find their children (Adela's grandchildren)
  ?parent dbo:child ?grandchild .
}
```",2,2,3,2,1,3,2,20,3,0,0,1.0,1.0,1.0
617,14,train,Give me the parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?antiochusIII a dbo:Person ;
                rdfs:label ""Antiochus III the Great""@en .
  
  ?antiochus a dbo:Person ;
             dbo:childOf ?antiochusIII ;
             rdfs:label ""Antiochus (son of Antiochus III the Great)""@en .

  ?child dbo:parent ?antiochus ;
         a dbo:Person .
  
  ?parent dbo:spouse ?antiochus ;
          dbo:parent ?child .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
184,13,train,Give me the child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Find children of Archduke Joseph Karl
  ?child dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  
  # For each child, find their children (grandchildren)
  ?grandchild dbo:parent ?child .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
177,3,train,"Give me the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Joo_Don-sik a dbo:Person .
  dbr:Joo_Don-sik dbo:office ?office .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
838,0,train,Give me the band of Raša Đelmaš.,SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Raša_Djelmaher a dbo:Person .
  dbr:Raša_Djelmaher dbo:band ?band .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
161,16,train,"Give me the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?prieto a dbo:Person ;
          foaf:name ""Indalecio Prieto""@en .
  ?prieto dbo:positionHeld ?position .
  ?position dbo:predecessor ?predecessor .
  
  ?predecessor dbo:positionHeld ?predecessorPosition .
  ?predecessorPosition dbo:title dbr:Minister_of_War_(Spain) .

  ?force a dbo:MilitaryConflict ;
         dbo:societalEvent ?event ;
         dbo:participatedIn ?predecessor .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
487,9,train,Give me the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?position WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1955 && MONTH(?date) = 1 && DAY(?date) = 26)
  
  OPTIONAL { 
    ?person dbo:positionHeld ?position .
  }
}
```",2,2,3,2,1,3,2,20,0,23,3,0.0,0.0,0
488,2,train,Give me the administration of Emperor Go-Yōzei.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  dbr:Emperor_Go-Yōzei a dbo:Person .
  OPTIONAL { dbr:Emperor_Go-Yōzei dbo:reign ?administration . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
487,2,train,Give me the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1955 && MONTH(?date) = 1 && DAY(?date) = 26)
}
```",1,1,2,1,1,3,2,20,23,0,0,1.0,1.0,1.0
820,4,train,Who is the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""actor""))
}
```",1,1,2,1,1,3,2,20,3772,10273,17808,0.26856532573869707,0.1747914735866543,0.21176140350877193
392,9,train,Give me the province of Schio and region of Central European Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province ?region WHERE {
  # Find the province of Schio
  OPTIONAL { 
    dbr:Schio dbo:locatedIn ?province .
  }
  
  # Find regions using Central European Time
  OPTIONAL {
    ?region a dbo:Country ;
            dbo:timeZone dbr:Central_European_Time .
  }
}
```",2,2,3,1,2,2,3,28,0,94,1,0.0,0.0,0
981,6,train,Give me the entity in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInIndonesia ?birthPlace WHERE {
  VALUES ?person { dbr:Novia_Indriani_Mamuaja }
  
  OPTIONAL {
    ?person dbo:member ?entityInIndonesia .
    FILTER (STRSTARTS(STR(?entityInIndonesia), ""http://dbpedia.org/resource/Category:"") || STRSTARTS(STR(?entityInIndonesia), ""http://dbpedia.org/resource/""))
  }

  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
701,3,train,Give me the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Amun-her-khepeshef dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
747,6,train,Who is the writer of Apollo (Hardwell song)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:Apollo_(Hardwell_song) a dbo:Song .
  OPTIONAL { dbr:Apollo_(Hardwell_song) dbo:lyricsBy ?writer . }
  UNION
  OPTIONAL { dbr:Apollo_(Hardwell_song) dbo:composer ?writer . }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
378,17,train,"Who is the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:participant ?trigge .
  
  ?trigge rdfs:label ""Thomas Trigge""@en .

  OPTIONAL { 
    ?war dbo:commander ?commander .
  }
}
```",2,5,3,2,1,3,3,71,0,0,169,0,0.0,0
696,7,train,Give me the birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?birthPlace WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""Dropkick Murphys""@en .
  
  ?member dbo:memberOfBand ?band .
  ?member dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
55,8,train,"Give me the band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find the producer of the song ""Used to Love Her""
  dbr:Used_to_Love_Her dbo:producer ?producer .
  
  # Check if this producer is a band member
  ?producer dbo:bandMemberOf ?band .
  
  # Return the band member (which in this case is the producer itself)
  BIND(?producer AS ?bandMember)
}
```",2,3,3,2,1,2,3,28,0,0,55,0,0.0,0
318,2,train,Give me the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?foundingYear WHERE {
  dbr:Eel_Pie_Publishing a dbo:Organization .
  dbr:Eel_Pie_Publishing dbo:founded ?date .
  BIND(YEAR(?date) AS ?foundingYear)
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
197,4,train,Give me the birthplace of Dumitru Nadu and birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?name { ""Dumitru_Nadu"" ""George_Lusztig"" }
  
  ?person a dbo:Person .
  ?person rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), LCASE(?name)))
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }

  FILTER (!isBlank(?birthPlace))
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
429,6,train,"Give me the country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:Civil_War_Camden_Expedition a dbo:MilitaryConflict .
  ?expedition dbo:participatingMilitaryForce ?militaryForce .
  FILTER (str(?expedition) = ""Civil War Camden Expedition"") .
  ?militaryForce dbo:organization ?organization .
  ?organization dbo:country ?country .
}
```",2,3,3,2,1,2,2,9,0,0,7,0,0.0,0
994,15,train,Give me the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?song dbo:title ?title .
  ?album dbo:song ?song .
  ?artist dbo:album ?album .
  FILTER (CONTAINS(LCASE(?title), ""watchtower""))
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
404,14,train,"Give me the child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?ernestAugustus a dbo:Person ;
                  rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  
  ?father dbo:father ?ernestAugustus .

  ?child dbo:child ?father .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
328,2,train,Give me the leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?office a dbo:GovernmentAgency ;
          dbo:head ?leader .
  ?office rdfs:label ""People's Commissariat of Defense of the Soviet Union""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,1,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Battle_of_Leipzig dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,21,0,0,1.0,1.0,1.0
778,9,train,"Give me the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:United_States .
  ?person dbo:award dbr:Wolf_Prize_in_Medicine .
  ?person dbo:award ?award .
}
```",2,3,3,2,1,3,2,20,9,0,0,1.0,1.0,1.0
767,12,train,Give me the alma mater of Carl L. Nippert and reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:C_L_Nippert a dbo:Person .
  dbr:C_L_Nippert dbo:almaMater ?almaMater .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
626,8,train,Give me the awardee of the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Aleksey_Petrovich_Yermolov a dbo:Person .
  dbr:Aleksey_Petrovich_Yermolov dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,6,230,0.0,0.0,0
378,13,train,Give me the war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Peninsular_War a dbo:Event .
  dbr:Peninsular_War dbo:commander ?commander .
}
```",2,2,3,2,1,3,3,71,0,37,118,0.0,0.0,0
547,5,train,Give me the show with Emily Richard.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  ?person a dbo:Person ;
          foaf:name ""Emily Richard""@en .
  ?performance dbo:performer ?person ;
               dbo:workPerformed ?show .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
712,9,train,"Give me the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?uprising a dbo:Event .
  ?uprising rdfs:label ""Vyoshenskaya Uprising""@en .
  
  ?militaryForce dbo:participatedIn ?uprising ;
                 a (dbo:Organisation|dbo:MilitaryUnit) .

  ?militaryForce dbo:nationality ?country .
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
534,1,train,Give me the headquarter of Royal Dublin Society.,SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters WHERE {
  dbr:Royal_Dublin_Society a dbo:Organisation .
  dbr:Royal_Dublin_Society dbo:headquarters ?headquarters .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
488,14,train,Give me the administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?administration WHERE {
  # Find Emperor Go-Mizunoo
  dbr:Emperor_Go-Mizunoo a dbo:Person .
  
  # Identify his father
  dbr:Emperor_Go-Mizunoo dbo:father ?father .

  # Determine the administration or role of the father
  OPTIONAL { ?father dbo:positionHeld ?administration . }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
356,7,train,Give me the player in the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?player a dbo:Player .
  ?player dbo:team dbr:Sacramento_Republic_FC ;
          dbo:seasonStartYear ?year .
  FILTER (?year = 2018)
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
356,9,train,"Give me the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find the predecessor of the 2015 Sacramento Republic FC season
  ?predecessor dbo:predecessor dbr:2015_Sacramento_Republic_FC_season .
  
  # Find the successor of that predecessor
  ?predecessor dbo:successor ?successor .
}
```",2,4,3,2,1,3,2,20,0,1,1,0.0,0.0,0
712,5,train,Who is the awardee of Hero of the Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Hero_of_the_Soviet_Union .
}
```",1,1,2,1,1,3,2,20,819,68,18,0.923337091319053,0.978494623655914,0.9501160092807426
30,5,train,Give me the native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  ?silvia a dbo:Person ;
          foaf:name ""Silvia Cohen""@en ;
          dbo:birthPlace ?birthplace .
  
  ?native dbo:nativeOf ?birthplace .
}
```",2,2,3,2,1,2,2,9,0,0,11488,0,0.0,0
251,1,train,Give me the administration of Forza Italia (2013).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  
  ?administration dbo:hasMember ?member .
  ?member dbo:positionHeld ?role .
  ?member dbo:memberOf ?party .
  FILTER (?party = ?party1) .

  OPTIONAL {
    ?person dbo:leaderOf ?party .
    FILTER (YEAR(?date) = 2013)
  }
  
  OPTIONAL {
    ?administration dbo:dateStart ?startDate .
    FILTER (YEAR(?startDate) <= 2013 && YEAR(?endDate) >= 2013)
  }

  ?member a dbo:Person ;
          rdfs:label ?personLabel .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
179,3,train,Give me the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Sirikit a dbo:Person .
  dbr:Sirikit dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
232,4,train,Give me the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""John Devon Roland Pertwee""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
285,2,train,Who is the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Aristotle_Onassis a dbo:Person .
  dbr:Aristotle_Onassis dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
184,5,train,"Give me the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Archduke Ladislaus Philipp of Austria""@en .
  
  OPTIONAL { ?person dbo:child ?child . }
  OPTIONAL { ?child dbo:parent ?parent . }

  FILTER EXISTS { ?parent a dbo:Royalty . }
}
```",1,2,2,1,1,3,3,71,2,8825,0,0.00022657754616517504,1.0,0.0004530524408200249
778,10,train,"Give me the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?software WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bill Joy""@en .
  ?software dbo:creator ?person ;
            a dbo:Software .
}
```",2,3,3,2,1,3,2,20,0,0,5,0,0.0,0
16,0,train,Give me the spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Ted_McGinley a dbo:Person .
  dbr:Ted_McGinley dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
378,2,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame WHERE {
  VALUES ?person { dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón }
  ?person dbo:claimToFame ?claimToFame .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
498,2,train,"Give me the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?band a dbo:Band .
  ?band a dbo:Organization .
  ?band dbo:member ?person .
  ?album dbo:artist ?band ;
         rdfs:label ?albumLabel .
  FILTER (CONTAINS(LCASE(?albumLabel), ""solace of requiem""))
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
391,9,train,"Give me the actor of The Departed and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor a dbo:Actor .
  ?filmRole dbo:actor ?actor ;
           dbo:title dbr:The_Departed .
  ?actor dbo:birthPlace ?place .
  FILTER (str(?place) = ""Compton, California"" || str(?place) = ""dbr:Compton,_California"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,3,train,Give me the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?watchtower WHERE {
  ?watchtower rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""watchtower""))
}
```",1,1,2,1,1,3,3,71,3,91,0,0.031914893617021274,1.0,0.06185567010309278
712,3,train,Give me the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:Armed_Forces_of_South_Russia a dbo:MilitaryUnit .
  dbr:Armed_Forces_of_South_Russia dbo:country ?country .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
666,1,train,Give me the figure known as The Three Lions.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?label WHERE {
  ?team a dbo:SportsTeam .
  ?team rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""three lions""))
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
64,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone ?timezone .
  FILTER (str(?timezone) = ""Central European Time"")
}
```",1,2,2,1,1,2,2,9,0,0,56,0,0.0,0
10,5,train,Give me the birth name of Sharon Kao.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Sharon_Kao a dbo:Person .
  dbr:Sharon_Kao dbo:birthName ?birthName .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
404,0,train,Give me the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Princess_Victoria_Louise_of_Prussia a dbo:Person .
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
801,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?profession WHERE {
  ?person a dbo:Person .
  ?person dbo:spouse ?shadowCharacter .
  ?shadowCharacter rdfs:label ""The Shadow""@en .
  OPTIONAL { ?person dbo:profession ?profession . }
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
485,10,train,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Erich_Gregory_Award .
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  FILTER (?occupation1 = dbo:Writer || ?occupation2 = dbo:Writer) .
  FILTER (?occupation1 = dbo:Poet || ?occupation2 = dbo:Poet) .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,4,3,2,1,2,3,28,0,0,7,0,0.0,0
54,12,train,Give me the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ancestor WHERE {
  # Find the parent of Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw of Prome""@en .
  
  ?parent dbo:child ?thadoMinsaw .

  # Find the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameitta dbr:Ava a dbo:Person ;
           rdfs:label ""Ameitta Thiri Maha Dhamma Dewi""@en .
  
  ?ancestor dbo:successor ?ameitta .

  # Ensure the same person is both parent and predecessor
  FILTER (?parent = ?ancestor)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
666,9,train,"Give me the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?coach a dbo:Person ;
         foaf:name ""Leonid Slutsky""@en .
  
  ?teamSeason a dbo:SportsTeamSeason ;
              dbo:coach ?coach .

  ?team a dbo:SoccerClub ;
        dbo:sportsTeamSeason ?teamSeason .

  ?manager a dbo:SportsManager ;
           dbo:managesSportTeam ?team .
}
```",2,5,3,2,1,3,2,20,0,0,5,0,0.0,0
435,5,train,Give me the author of Iceland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author WHERE {
  ?author a dbo:Person .
  OPTIONAL { ?author dbo:nationality dbr:Iceland . }
  OPTIONAL { ?author dbo:birthPlace dbr:Iceland . }
}
```",1,1,2,1,1,2,3,28,0,1048576,1,0.0,0.0,0
827,4,train,"Who is the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Princess_Pauline_of_Saxe-Weimar-Eisenach dbo:spouse ?spouse .
  ?spouse a dbo:Royalty .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
54,16,train,Give me the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw of Prome""@en .
  
  ?parent dbo:child ?thadoMinsaw .
  ?parent dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,3,3,0,0.5,1.0,0.6666666666666666
659,0,train,Give me the commander in German campaign of 1813.,SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?campaign a dbo:MilitaryConflict .
  ?campaign rdfs:label ""German campaign of 1813""@en .
  ?campaign dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,31,0,0,1.0,1.0,1.0
617,7,train,Who is the commander in Battle of Panium?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Battle_of_Panium a dbo:Battle .
  dbr:Battle_of_Panium dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
801,15,train,Give me the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?shadow a dbo:Person .
  ?shadow rdfs:label ""The Shadow""@en .
  OPTIONAL { 
    ?shadow dbo:narrativeText ?text .
    FILTER(CONTAINS(LCASE(?text), ""lamont cranston""))
  }
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
915,1,train,Give me the father of Lizzie Spaulding.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?lizzie a dbo:Person .
  ?lizzie rdfs:label ""Lizzie Spaulding""@en .
  ?lizzie dbo:child ?person .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
783,9,train,Give me the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?person foaf:name ""Samuel Ofori Amponsah""@en .
  ?person a dbo:Person .

  OPTIONAL { 
    ?person dbo:member ?band .
    ?band dbo:bandMember ?bandMember .
  }
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
701,1,train,Give me the parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy""@en .
  OPTIONAL { ?henuttawy dbo:childOf ?parent . }
  FILTER (CONTAINS(LCASE(?henuttawy), ""19th dynasty""))
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,10,train,Give me the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?thinkhaya a dbo:Person ;
             rdfs:label ""Thinkhaya of Pagan""@en .
  
  ?ameitta a dbo:Person ;
           rdfs:label ""Ameitta Thiri Maha Dhamma Dewi of Ava""@en .

  ?child dbo:parent ?thinkhaya ;
         a dbo:Person ;
         ?predecessorRelation ?ameitta .

  FILTER (STRSTARTS(STR(?predecessorRelation), STR(dbo:)) || 
          STRSTARTS(STR(?predecessorRelation), STR(dbp:)))
  
  BIND(?child AS ?person)
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
778,5,train,"Give me the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Bill_Joy a dbo:Person .
  ?work dbo:creator dbr:Bill_Joy .
  ?work a dbo:Software .
}
```",1,2,2,1,1,3,2,20,0,0,5,0,0.0,0
251,11,train,Give me the death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?work a dbo:Book .
  ?work rdfs:label ""The Twelve Abbots of Challant""@en .
  ?work dbo:author ?author .
  ?author dbo:deathPlace ?deathPlace .
}
```",2,2,3,2,1,2,3,28,3,0,0,1.0,1.0,1.0
314,3,train,Give me the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters WHERE {
  dbr:House_of_Sombrerete dbo:headquarters ?headquarters .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
391,17,train,"Give me the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie a dbo:CreativeWork .
  ?movie a dbo:TelevisionShow .
}
```",2,5,3,2,1,3,3,71,0,0,1674,0,0.0,0
9,2,train,Give me the figure known as QUB.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?property ?value WHERE {
  VALUES ?university { dbr:Queen's_University_Belfast }
  ?university ?property ?value .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
392,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
}
```",1,2,2,1,1,2,3,28,52,42,4,0.5531914893617021,0.9285714285714286,0.6933333333333335
645,6,train,Give me the alma mater of Sylvia Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?sylviaPankhurst a dbo:Person ;
                   foaf:name ""Sylvia Pankhurst""@en .
  ?sylviaPankhurst dbo:almaMater ?almaMater .

  OPTIONAL { 
    ?almaMater dbo:location ?place .
    ?place dbo:country dbr:United_Kingdom .
  }
}
```",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
645,4,train,Give me the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Adela_Pankhurst a dbo:Person .
  dbr:Adela_Pankhurst dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
959,15,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1958)
  
  ?person dbo:almaMater ?almaMater .
  ?almaMater a dbo:University ;
             a dbo:EducationalOrganization ;
             dbo:country dbr:Japan .
}
```",2,6,3,2,1,3,3,71,0,0,3,0,0.0,0
303,7,train,Give me the party of Arnulfo Arias and party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  VALUES ?person { 
    dbr:Aarnulfo_Arias 
    dbr:Guillermo_Endara 
  }
  ?person dbo:party ?party .
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
16,10,train,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Georgeanne Marie Rice""@en .
  ?person dbo:spouse dbr:Ted_McGinley .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,6,train,Give me the administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find the administration (leader) of Forza Italia in 2013
SELECT ?person WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  OPTIONAL { ?party dbo:leader ?person . }
  FILTER EXISTS { 
    ?event dbo:politicalParty ?party ;
           dbo:date ?date .
    FILTER (YEAR(?date) = 2013)
  }
}

# Query to find the location of the Battle of Marengo
SELECT ?location WHERE {
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Marengo""@en ;
          dbo:location ?location .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
838,1,train,Give me the band member of Kerber.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?bandMember a dbo:MusicGroupMember .
  ?bandMember dbo:musicArtist dbr:Kerber .
  ?bandMember dbo:band dbr:Rammstein .
  ?bandMember dbo:musicArtist ?member .
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
747,5,train,"Give me the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song WHERE {
  dbr:Amba_Shepherd dbo:work ?work .
  ?work a dbo:Song .
  BIND(?work AS ?song)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
339,3,train,Who is the child of Christian IX of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Christian_IX_of_Denmark dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,4,2,2,0.6666666666666666,0.6666666666666666,0.6666666666666666
303,8,train,"Give me the party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?commander a dbo:Person .
  ?commander dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(?occupation), ""politician"") || CONTAINS(LCASE(?occupation), ""general"")) .
  ?commander dbo:politicalParty ?party .
  
  # Assuming the commander is stored under an event related to the invasion
  ?event dbo:commander ?commander .
  ?event rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""united states invasion of panama"") || CONTAINS(LCASE(?label), ""operation just cause""))
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
312,0,train,Give me the entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:locatedIn dbr:Province_of_Bergamo .
}
```",1,1,2,1,1,2,2,9,0,0,228,0,0.0,0
48,0,train,Give me the band of Carl Falk.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Carl_Falk dbo:band ?band .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
487,6,train,Give me the country of 2022 Vermont House of Representatives election and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?election a dbo:Election .
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2022 && CONTAINS(LCASE(STR(?election)), ""vermont house of representatives""))
  ?election dbo:country ?country .

  OPTIONAL {
    ?officeHolder a dbo:OfficeHolder ;
                 dbo:holdsPoliticalOffice ?politicalOffice ;
                 foaf:name ""Phil Scott"" .
    ?politicalOffice dbo:election ?election .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
547,13,train,Give me the resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?restingPlace WHERE {
  ?film a dbo:Film .
  ?film rdfs:label ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
  OPTIONAL { ?actor dbo:burialPlace ?restingPlace . }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
184,2,train,Give me the parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Archduchess_Ilona_of_Austria dbo:child dbr:Archduchess_Ilona_of_Austria .
  ?parent dbo:child dbr:Archduchess_Ilona_of_Austria .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
356,5,train,"Give me the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  
  # Check if the person is a soccer player
  ?playerRole dbo:sport dbr:Soccer ;
              dbo:agent ?person .

  # Check if the person is a soccer manager
  ?managerRole dbo:sport dbr:Soccer ;
               dbo:agent ?person .

  # Ensure they are from Wolverhampton
  OPTIONAL { ?person dbo:nationalityOrPlaceOfBirth dbr:Wolverhampton . }
  OPTIONAL { ?person dbo:birthPlace dbr:Wolverhampton . }

}
```",1,3,2,1,1,3,2,20,0,0,17,0,0.0,0
959,4,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Eiji Ōtsuka""@en .
  ?person dbo:almaMater ?almaMater .

  FILTER EXISTS { 
    ?almaMater a dbo:University ;
               dbo:country dbr:Japan ;
               a dbo:EducationalOrganization .
  }
}
```",1,5,2,1,1,3,3,71,0,0,1,0,0.0,0
179,1,train,Give me the parent of Ubol Ratana.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Ubol_Ratana a dbo:Person .
  dbr:Ubol_Ratana dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
528,16,train,Give me the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event a dbo:Event .
  ?event dbo:date ?date .
  ?commander dbo:commanderOf ?event .
  FILTER (MONTH(?date) = 1 && DAY(?date) = 9)
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
177,6,train,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization ?headquarter WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joo Don-sik""@en .
  
  ?office dbo:positionTitle ?title ;
          dbo:holder ?person ;
          dbo:organisation ?organization .

  OPTIONAL { 
    ?organization dbo:headquarters ?headquarter .
  }
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
528,7,train,Give me the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  OPTIONAL { 
    dbr:Narciso_Campero dbo:birthName ?birthName .
  }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
16,6,train,Give me the profession of Satomi Ishihara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation WHERE {
  dbr:Satomi_Ishihara a dbo:Person .
  dbr:Satomi_Ishihara dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
617,5,train,"Who is the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  dbr:Antiochus_IV_Epiphanes dbo:predecessor dbr:Antiochus_III_the_Great .
  dbr:Antiochus_IV_Epiphanes a dbo:Monarch .
  ?person dbo:predecessor dbr:Antiochus_IV_Epiphanes .
  ?person a dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
161,1,train,Give me the military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?belligerent WHERE {
  dbr:Spanish_Civil_War a dbo:Battle .
  dbr:Spanish_Civil_War dbo:belligerent ?belligerent .
}
```",1,1,2,1,1,3,3,71,0,0,514,0,0.0,0
404,10,train,"Give me the spouse of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia a dbo:Person ;
    dbo:spouse ?spouse .

  # Ensure the spouse has a child with Ernest Augustus, Crown Prince of Hanover
  ?child dbo:parent ?spouse .
  ?child dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
747,12,train,Give me the band of Shèna and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band WHERE {
  VALUES ?shepherd { dbr:Shèna_Shepherd dbr:Amba_Shepherd }
  
  ?person rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), LCASE(""Shepherd"")) && ?person != ?shepherd)
  
  ?shepherd dbo:band ?band .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,2,train,Give me the person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Edin Dervišhalidović""@en .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
767,4,train,"Give me the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration WHERE {
  ?place rdfs:label ""Green""@en .
  ?place a dbo:Settlement .
  ?place dbo:administrativeUnit ?administration .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
485,8,train,"Give me the entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ""Western European Time""@en .
}
```",2,3,3,2,1,2,3,28,0,0,46363,0,0.0,0
488,10,train,Give me the administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?emperor (SAMPLE(?reign) AS ?administrationPeriod) ?person ?birthPlace WHERE {
  # Query for Emperor Go-Yōzei's administration period
  OPTIONAL {
    ?emperor a dbo:Monarch ;
             rdfs:label ""Go-Yōzei""@en .
    ?emperor dbo:reign ?reign .
  }
  
  # Query for Enomoto Takeaki's birthplace
  OPTIONAL {
    ?person a dbo:Person ;
            rdfs:label ""Enomoto Takeaki""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
16,15,train,Who is the person born as the birth name of Ted McGinley?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Ted_McGinley a dbo:Person .
  dbr:Ted_McGinley dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
197,3,train,Who is the awardee of Leroy P. Steele Prize?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Leroy_P._Steele_Prize .
}
```",1,1,2,1,1,2,2,9,16,63,5,0.20253164556962025,0.7619047619047619,0.32
488,13,train,"Give me the death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  # Find Yūki Hideyasu
  dbr:Yuki_Hideyasu a dbo:Person .
  
  # Identify his father
  dbr:Yuki_Hideyasu dbo:father ?father .

  # Ensure the father is a politician
  ?father rdf:type dbo:Politician .

  # Retrieve the death place of the father
  ?father dbo:deathPlace ?deathPlace .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
701,9,train,Give me the parent of Meritamen and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person (IF(?individual = dbr:Meritamen, ""Meritamen"", ""Henuttawy"") AS ?name) ?parent WHERE {
  VALUES ?individual { dbr:Meritamen dbr:Henuttawy }
  
  ?individual dbo:spouse ?spouse .
  OPTIONAL { ?individual dbo:child ?child . FILTER(?child != ?individual) }
  OPTIONAL { ?spouse dbo:child ?child . FILTER(?child != ?spouse && ?child = ?individual) }

  ?parent a dbo:Person ;
          dbo:child ?individual .

}
ORDER BY ?name
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
10,8,train,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person a dbo:MusicalArtist .
  ?person rdfs:label ""Matt Colton""@en .
}
```",2,3,3,2,1,2,3,28,0,1,4,0.0,0.0,0
528,8,train,Give me the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Narciso Campero Leyes"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,15,train,Give me the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Find the child of Thinkhaya of Pagan
  ?child dbo:parent dbr:Thinkhaya_of_Pagan .
  
  # For each child, find their father
  ?child dbo:father ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
360,0,train,Give me the writer of The Roaring Silence.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:The_Roaring_Silence dbo:creator ?writer .
}
```",1,1,2,1,1,2,3,28,0,0,8,0,0.0,0
404,13,train,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Identify Ernest Augustus, Duke of Brunswick
  dbr:Ernest_Augustus,_Duke_of_Brunswick a dbo:Person .
  
  # Find his children
  ?child dbo:child dbr:Ernest_Augustus,_Duke_of_Brunswick ;
         a dbo:Person .

  # Filter for children who are royalty (Monarch)
  ?child a dbo:Monarch .

  # Identify the spouse of Ernest Augustus, Duke of Brunswick
  ?spouse dbo:spouse dbr:Ernest_Augustus,_Duke_of_Brunswick ;
          a dbo:Person .
  
  # The parent of the royal child is either Ernest Augustus or his spouse
  VALUES ?parent {dbr:Ernest_Augustus,_Duke_of_Brunswick ?spouse}
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
547,6,train,Give me the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Enemy_at_the_Door dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```",1,1,2,1,1,3,3,71,2,0,6,1.0,0.25,0.4
318,4,train,Give me the person born in 1970 and professional in Composer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthYear ""1970""^^xsd:gYear .
  ?person dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""composer""))
}
```",2,2,3,1,2,2,2,9,7,1,0,0.875,1.0,0.9333333333333333
626,6,train,Give me the commander in Battle of Leipzig and awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in the Battle of Leipzig
  ?battleEvent dbo:commander ?person ;
               rdfs:label ""Battle of Leipzig""@en .
  
  # Awardee of Order of St. Andrew
  ?awardEvent dbo:recipient ?person ;
              dbo:name dbr:Order_of_St._Andrew .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,13,train,Give me the alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:George_K._Nash a dbo:Person .
  dbr:George_K._Nash dbo:almaMater ?almaMater .
}
```",2,2,3,2,1,3,3,71,0,1,6,0.0,0.0,0
9,13,train,Give me the alma mater of the awardee of Royal Medal.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?almaMater WHERE {
  ?person a dbo:Person .
  ?person dbo:honoraryAward dbr:Royal_Medal .
  ?person dbo:almaMater ?almaMater .
}
```",2,2,3,2,1,3,3,71,0,0,31,0,0.0,0
182,1,train,Give me the war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person rdfs:label ""Jagath Dias""@en .
  ?person a dbo:Person .
  ?person dbo:participatedIn ?war .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
801,13,train,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find musical works by 50 Cent that are both songs and musical works
  ?work a dbo:Song ;
        a dbo:MusicalWork ;
        dbo:lyricist dbr:50_Cent .

  # Identify the producer of these works
  ?work dbo:producer ?producer .
}
```",2,5,3,2,1,3,3,71,0,0,38,0,0.0,0
534,4,train,"Give me the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?location WHERE {
  ?event dbo:eventName ""Pro12 Grand Final""@en .
  ?event dbo:date ?date .
  FILTER (YEAR(?date) = 2012)
  ?event dbo:location ?location .
  ?location a dbo:Venue ;
            a dbo:ArchitecturalStructure .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,3,train,"Give me the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:James_Wilkes_Maurice a dbo:Person .
  dbr:James_Wilkes_Maurice dbo:residence ?residence .
  ?residence a dbo:Country .
  BIND(?residence AS ?country)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
747,3,train,"Who is the person decedent, that is an athlete and a soccer player, at Zolotonosha?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:athlete true .
  ?person dbo:soccerPlayer true .
  ?person dbo:deathPlace dbr:Zolotonosha .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,9,train,Give me the spouse of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Princess Victoria Louise of Prussia's spouse
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
  
  # Prince Ernest Augustus of Hanover (born 1914) is a child of the spouse
  ?spouse dbo:child dbr:Prince_Ernest_Augustus_of_Hanover_(1914-1987) .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,12,train,Give me the spouse of Laodice IV and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?laodiceIV { dbr:Laodice_IV }
  
  ?laodiceIV a dbo:Person .
  ?laodiceIV dbo:spouse ?spouse .
  ?nysa a dbo:Person ;
        rdfs:label ""Nysa""@en ;
        dbo:parent ?laodiceIV .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
712,10,train,Who is the awardee of the show of Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?recipient WHERE {
  ?award a dbo:Award .
  ?award dbo:country dbr:Soviet_Union .
  ?award dbo:recipient ?recipient .
}
```",2,2,3,2,1,3,2,20,0,0,1209,0,0.0,0
528,12,train,Give me the war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  ?conflict a dbo:MilitaryConflict .
  ?barbosa dbo:participatedIn ?conflict ;
           rdfs:label ""Orozimbo Barbosa""@en .
  ?campero dbo:participatedIn ?conflict ;
           rdfs:label ""Narciso Campero""@en .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
30,4,train,"Give me the native of Paris and professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Paris .
  
  { ?person dbo:occupation dbr:Financier . }
  UNION
  { ?person dbo:occupation dbr:Businessman . }
  UNION
  { ?person dbo:occupation dbr:Vineyard_Owner . }
  UNION
  { ?person dbo:occupation dbr:Art_Collector . }
  UNION
  { ?person dbo:occupation dbr:Racehorse_Owner_Breeder . }
}
```",2,2,3,1,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
303,0,train,Give me the party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Guillermo_Endara a dbo:Person .
  dbr:Guillermo_Endara dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
754,5,train,Give me the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Ram_Khamhaeng a dbo:Person .
  dbr:Ram_Khamhaeng dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
820,1,train,Give me the child of Jack Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?child dbo:parent dbr:Jack_Schwartzman .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
10,1,train,Give me the band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  dbr:Luke_Vibert a dbo:Person .
  ?bandMember dbo:bandMember dbr:Luke_Vibert .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
959,11,train,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?eiji a dbo:Person ;
        foaf:name ""Eiji Ōtsuka""@en ;
        dbo:almaMater ?almaMater .
  
  ?almaMater a dbo:University ;
             dbo:country dbr:Japan .

}
```",2,6,3,2,1,3,3,71,0,1,267,0.0,0.0,0
365,4,train,Give me the reference to The Blasters and band of Phil Alvin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Phil Alvin""@en .
  ?band a dbo:Band ;
        dbo:member ?person .
  FILTER (str(?band) = str(dbr:The_Blasters))
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
963,0,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Serbia .
}
```",1,1,2,1,1,3,2,20,19,403,5409,0.045023696682464455,0.0035003684598378776,0.006495726495726496
994,4,train,Give me the associated musical artist of Watchtower (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Watchtower dbo:bandMember ?member .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
392,11,train,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?province WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@en .
  ?person dbo:residence ?residence .
  ?residence a dbo:Settlement ;
             dbo:country dbr:Italy .
  ?residence dbp:province ?province .
}
```",2,4,3,2,1,2,3,28,1,0,0,1.0,1.0,1.0
427,2,train,Give me the party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Romano_Prodi a dbo:Person .
  dbr:Romano_Prodi dbo:party ?party .
}
```",1,1,2,1,1,3,3,71,7,0,0,1.0,1.0,1.0
92,2,train,Give me the band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Joseph_Michael a dbo:Person .
  dbr:Joseph_Michael dbo:bandMember ?band .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
303,4,train,"Give me the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:El_Valle_de_Antón a dbo:Settlement .
  dbr:El_Valle_de_Antón dbo:country ?country .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
64,4,train,Give me the alma mater of Jovan Hristić and entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jovan Hristić""@en ;
          dbo:almaMater ?university .
  
  OPTIONAL { 
    ?university dbo:location ?location .
    FILTER (CONTAINS(LCASE(?location), ""serbia""))
  }
}
```",2,2,3,1,2,2,2,9,1,0,0,1.0,1.0,1.0
534,8,train,Give me the headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?headquarters WHERE {
  ?arena a dbo:Arena ;
         rdfs:label ""RDS Arena""@en .
  
  ?arena dbo:owner ?owner .

  ?owner dbp:headquarters ?headquarters .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
48,9,train,"Give me the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work ?writer WHERE {
  # Identify Shellback as a record producer
  dbr:Shellback a dbo:RecordProducer .
  
  # Find works produced by Shellback
  ?work dbo:producedAlbum dbr:Shellback ;
        a dbo:MusicalWork .

  # Find the writer of each work
  ?work dbo:writer ?writer .
}
```",2,3,3,2,1,3,2,20,0,0,1065,0,0.0,0
820,9,train,Give me the award of the author of Understanding Comics.,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Understanding_Comics dbo:author ?author .
  ?author dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,4,4,0.0,0.0,0
281,3,train,Give me the award of Jonathon Band.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Jonathon_Band a dbo:Person .
  dbr:Jonathon_Band dbo:honoraryAward ?award .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
77,6,train,Give me the war of Alexander Chechenskiy and force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  ?person1 a dbo:Person ;
           rdfs:label ""Alexander Chechenskiy""@en .
  ?person2 a dbo:Person ;
           rdfs:label ""Alexander I of Russia""@en .

  ?person1 dbo:participatedIn ?conflict .
  ?person2 dbo:participatedIn ?conflict .
}
```",2,2,3,1,2,3,2,20,0,0,6,0,0.0,0
285,7,train,Give me the parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Find Tina Onassis Niarchos
  dbr:Tina_Onassis_Niarchos a dbo:Person .
  
  # Identify her children
  ?child dbo:child dbr:Tina_Onassis_Niarchos .

  # For each child, find their parent (which could be Tina or another person)
  ?parent dbo:parent ?child .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
64,1,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity ?property dbr:Serbia .
}
```",1,1,2,1,1,2,2,9,5428,18384,0,0.227952292961532,1.0,0.3712722298221614
404,8,train,"Who is the father of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,16,train,Give me the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/property/governor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?termStart ?termEnd WHERE {
  VALUES ?person { dbr:George_Kilbon_Nash }
  ?person dbo:office ?office .
  OPTIONAL { ?person dbo:termStart ?termStart . }
  OPTIONAL { ?person dbo:termEnd ?termEnd . }
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
994,2,train,Give me the band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Don_Dokken a dbo:Person .
  dbr:Don_Dokken dbo:musicGroup ?band .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,8,train,Give me the war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author ?war WHERE {
  # Find resources related to the event
  ?event rdfs:label ""2019 Sri Lanka Easter bombings""@en .
  
  # Identify authors linked to these resources
  ?resource dbo:wikiPageWikiLink ?event .
  ?resource dbo:wikiPageCreator ?author .

  # Determine wars associated with these authors
  OPTIONAL {
    ?author dbo:wikiPageDisambiguates ?disambiguation .
    ?disambiguation dbo:wikiPageRedirects ?war .
  }
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
294,5,train,"Give me the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  VALUES ?marionJames { dbr:Marion_James }
  ?marionJames a dbo:Person .
  ?marionJames dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
64,2,train,"Give me the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:writer ?writerRole .
  ?person dbo:deathPlace dbr:Sremska_Kamenica .
}
```",1,2,2,1,1,2,2,9,0,0,2,0,0.0,0
778,4,train,Give me the author of Pushd and popd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?resource rdfs:label ""pushd""@en .
  ?resource dbo:creator ?person .
  
  UNION
  
  ?resource rdfs:label ""popd""@en .
  ?resource dbo:creator ?person .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
16,8,train,Give me the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Gigi Rice""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  FILTER (LANG(?person) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
996,0,train,Give me the force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?force dbo:commander ?wurmser .
  ?wurmser rdfs:label ""Dagobert Sigmund von Wurmser""@en .
}
```",1,1,2,1,1,3,2,20,11,0,0,1.0,1.0,1.0
659,8,train,"Give me the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  VALUES ?person { dbr:Rutger_Jan_Schimmelpenninck }
  ?person dbo:associatedWith ?force .
  FILTER (
    (EXISTS {?force a dbo:SocietalEvent .})
    && 
    (EXISTS {?force a dbo:Event .})
    &&
    (EXISTS {?force a dbo:MilitaryConflict .})
  )
}
```",1,4,2,1,1,3,3,71,0,0,2,0,0.0,0
488,1,train,Give me the death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Tokugawa_Ieyasu a dbo:Person .
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
197,6,train,Give me the birthplace of the awardee of Leroy P. Steele Prize.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Leroy_P._Steele_Prize .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,2,9,20,71,1,0.21978021978021978,0.9523809523809523,0.35714285714285715
378,14,train,Give me the claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?claimToFame WHERE {
  ?event a dbo:MilitaryConflict .
  ?event dbo:name ""Great Siege of Gibraltar"" .
  ?event dbo:commander ?commander .
  ?commander dbo:claimToFame ?claimToFame .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
959,17,train,"Give me the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?manager a dbo:SportsManager .
  ?manager dbo:managedTeam ?kashimaAntlers .
  ?kashimaAntlers dbo:sportSeason ?season .
  ?season dbo:year ""1998""^^xsd:gYear .
  ?kashimaAntlers dbo:officialName dbr:Kashima_Antlers .
  ?team dbo:manager ?manager .
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
48,3,train,Give me the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?composer WHERE {
  dbr:Emotion_(Carly_Rae_Jepsen_album) a dbo:MusicAlbum .
  dbr:Emotion_(Carly_Rae_Jepsen_album) dbo:composer ?composer .
}
```",1,1,2,1,1,3,2,20,0,0,48,0,0.0,0
547,3,train,Give me the child of William Haliburton.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent a dbo:Person .
  ?parent foaf:name ""William Haliburton""@en .
  ?child dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
959,3,train,Who is the person born in 1958?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1958)
}
```",1,1,2,1,1,3,3,71,2044,7014,471,0.22565687789799072,0.8127236580516899,0.3532359802989717
778,3,train,Give me the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Ralph_L._Brinster a dbo:Person .
  dbr:Ralph_L._Brinster dbo:honoraryTitle ?award .
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
547,4,train,Give me the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:James_Burton_(property_developer) a dbo:Person .
  dbr:James_Burton_(property_developer) dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
10,11,train,Give me the professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName ?profession WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Sharon Kao""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",2,2,3,2,1,2,3,28,0,5,39640,0.0,0.0,0
767,7,train,"Give me the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?characterName WHERE {
  ?fictionalCharacter a dbo:FictionalCharacter .
  ?fictionalCharacter dbo:portrayedBy dbr:Matthew_Burland .
  ?fictionalCharacter dbo:characterName ?characterName .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
285,10,train,Who is the professional in the award of Stan Lee?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award a dbo:Award .
  ?award dbo:awardedBy dbr:Stan_Lee .
  ?award dbo:recipient ?recipient .
}
```",2,2,3,2,1,3,2,20,0,0,39640,0,0.0,0
701,8,train,Give me the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?child a dbo:Person .
  ?child rdfs:label ""Merneptah""@en .
  ?child dbo:child ?merneptah .
  ?merneptah dbo:child ?child .
  ?merneptah dbo:parent ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
626,7,train,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  dbr:Alexander_I_of_Russia dbo:commanderIn ?conflict .
  ?conflict a dbo:MilitaryConflict .
}
```",2,3,3,2,1,3,2,20,0,0,230,0,0.0,0
915,5,train,"Give me the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?spaulding a dbo:FictionalCharacter ;
             foaf:name ""Phillip Spaulding"" .
  ?spaulding dbo:child ?child .
  ?child a dbo:FictionalCharacter .
  OPTIONAL { ?child dbo:genre dbr:Soap_opera . }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
838,6,train,Give me the band member of Kerber and band of Raša Đelmaš.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?kerberBand a dbo:Band ;
              rdfs:label ""Kerber""@en .
  
  ?rašaĐelmašBand a dbo:Band ;
                  rdfs:label ""Raša Đelmaš Band""@en .

  ?member dbo:bandMember ?kerberBand .
  ?member dbo:bandMember ?rašaĐelmašBand .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
356,8,train,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?team WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SportsManager .
  ?person dbo:nationalityPlace dbr:Wolverhampton .
  ?person dbo:team ?team .
}
```",2,4,3,2,1,3,2,20,0,0,46,0,0.0,0
838,7,train,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Identify YU Grupa
  dbr:YU_Grupa a dbo:Band .
  
  # Find band members of YU Grupa who are both artists and musical artists
  ?member dbo:bandMember dbr:YU_Grupa ;
          a dbo:Artist, dbo:MusicalArtist .

  # Determine other bands these members belong to
  ?member dbo:bandMember ?band .
}
```",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
827,9,train,"Who is the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Charles Alexander and his parent
  dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:parent ?parent .
  
  # Ensure the parent is a royalty
  ?parent a dbo:Person ;
          (dbo:child|dbo:spouse) ?royalty .

  # Find the child of this parent who is also a royalty
  ?parent dbo:child ?child .
  ?child a dbo:Person ;
         (dbo:child|dbo:spouse) ?royalty .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
778,1,train,Give me the author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:Chroot dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
285,5,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid SPARQL query can be constructed due to insufficient information in the question.
```",1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
617,10,train,Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?antiochus3 a dbo:Person ;
              rdfs:label ""Antiochus III the Great""@en .
  
  ?nysa a dbo:Person ;
        rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .

  ?child dbo:parent ?antiochus3 ;
         dbo:child ?nysa .
}
```",2,2,3,1,2,3,3,71,2,0,0,1.0,1.0,1.0
16,11,train,Give me the spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Ted Martin McGinley"" .
  ?person dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
747,9,train,Give me the person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Amba Shepherd""@en .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
  
  OPTIONAL { 
    ?person dbo:band ?band .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,2,train,Give me the native of Prague.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Prague .
}
```",1,1,2,1,1,2,2,9,1654,0,0,1.0,1.0,1.0
365,0,train,Give me the band of Phil Alvin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Phil_Alvin a dbo:Person .
  dbr:Phil_Alvin dbo:bandMember ?band .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,7,train,"Who is the leader, that is an office holder and a politician, of Gustav Jonson?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?leader a dbo:Person .
  ?leader dbo:officeHolder true .
  ?leader dbo:politician true .
  ?relation dbo:leaderOf dbr:Gustav_Jonson .
  FILTER (?leader = ?relation)
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,12,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?middlePerson WHERE {
  # Find the child of Ernest Augustus, Crown Prince of Hanover
  ?child dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  
  # Ensure this child is also a parent of Prince Ernest Augustus of Hanover (born 1914)
  ?middlePerson dbo:child ?child .
  ?middlePerson dbo:child dbr:Prince_Ernest_Augustus_of_Hanover_(1914) .

  # Return the middle person who satisfies both conditions
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
177,4,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in South Korea.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters ?entity WHERE {
  # Find the headquarters of the Ministry of Culture, Sports and Tourism in South Korea
  dbr:Ministry_of_Culture,_Sports_and_Tourism_South_Korea dbo:headquarter ?headquarters .
  
  # Find an entity related to this ministry (e.g., a department)
  OPTIONAL {
    dbr:Ministry_of_Culture,_Sports_and_Tourism_South_Korea dbo:department ?entity .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
161,5,train,Who is the predecessor of Indalecio Prieto?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  dbr:Indalecio_Prieto a dbo:Person .
  OPTIONAL { 
    dbr:Indalecio_Prieto dbo:predecessor ?predecessor .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
915,7,train,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?resident WHERE {
  # Identify Stephen Verona's birthplace
  dbr:Stephen_Verona a dbo:Person ;
                     dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement
  ?birthPlace a dbo:Settlement .

  # Find residents of that birthplace
  ?resident a dbo:Person ;
            dbo:residence ?birthPlace .
}
```",2,3,3,2,1,3,2,20,14,0,1,1.0,0.9333333333333333,0.9655172413793104
339,9,train,Who is the child of the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?frederickVIII a dbo:Monarch ;
                 dbo:predecessor ?predecessor .
  FILTER (STR(?frederickVIII) = ""Frederick_VIII_of_Denmark"")
  
  ?predecessor dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
345,5,train,"Who is the person born, that is a soccer player and a soccer manager, on 1978-09-15?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1978 && MONTH(?date) = 9 && DAY(?date) = 15)
  
  # Ensure the person is both a soccer player and manager
  ?playerRole a dbo:SoccerPlayer ;
              dbo:agent ?person .
  ?managerRole a dbo:SoccerManager ;
               dbo:agent ?person .
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
701,13,train,Give me the parent of the child of Ramesses II.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Find children of Ramesses II
  ?child dbo:childOf dbr:Ramesses_II .
  
  # For each child, find their parent
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
485,1,train,Give me the birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Thomas_Warner_(poet) a dbo:Person .
  dbr:Thomas_Warner_(poet) dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
184,17,train,Give me the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Archduchess Margaret of Austria
  dbr:Archduchess_Margaret_of_Austria a dbo:Person ;
    dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1925)

  # Identify her parent(s)
  OPTIONAL { dbr:Archduchess_Margaret_of_Austria dbo:child ?parent . }

  # Find the child of Margaret's parent
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
115,2,train,Who is the alumnus of National University of San Marcos?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:almaMater dbr:National_University_of_San_Marcos .
}
```",1,1,2,1,1,2,2,9,74,0,0,1.0,1.0,1.0
161,17,train,"Give me the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?person rdfs:label ""El Director""@en .
  ?person a dbo:Person .
  ?person dbo:associatedEvent ?event .
  ?event rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""force""))
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
303,2,train,Give me the party of Arnulfo Arias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Aarnulfo_Arias a dbo:Person .
  dbr:Aarnulfo_Arias dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
314,10,train,Give me the awardee of the award of Sergei Makovetsky.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?awardee WHERE {
  VALUES ?makovetsky { dbr:Sergei_Makovetsky }
  
  ?makovetsky dbo:award ?award .
  
  ?otherAwardee dbo:award ?award .
  FILTER (?makovetsky != ?otherAwardee)
}
```",2,2,3,2,1,2,3,28,0,0,951,0,0.0,0
9,6,train,Who is the awardee of Royal Medal?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Royal_Medal_of_the_Kingdom_of_Belgium ; # Assuming the specific Royal Medal resource
           rdfs:label ?name .
}
```",1,1,2,1,1,3,3,71,0,0,45,0,0.0,0
161,13,train,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event a dbo:MilitaryConflict ;
         a dbo:SocietalEvent .
  ?person dbr:Francisco_Largo_Caballero ;
          dbo:associatedWith ?event .
  ?event dbo:militaryForce ?militaryForce .
}
```",2,4,3,2,1,3,3,71,0,0,514,0,0.0,0
281,12,train,Give me the war of New Zealand Army and entity in Colony of New Zealand.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war a dbo:MilitaryConflict .
  ?participation dbo:conflict ?war ;
                dbo:participatingMilitaryUnit ?unit .
  FILTER (
    EXISTS { ?unit rdfs:label ""New Zealand Army""@en }
    && EXISTS { ?unit dbo:country dbr:New_Zealand_Colony }
  )
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
701,11,train,Give me the parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?child dbo:child dbr:Nefertari .
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
161,4,train,"Give me the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  ?conflict a dbo:MilitaryConflict .
  ?conflict dbo:associatedWith dbr:Francisco_Franco .
  FILTER EXISTS { ?conflict a dbo:Event . }
  FILTER EXISTS { ?conflict a dbo:SocietalEvent . } # Assuming SocietalEvent is a valid class or property
}
```",1,4,2,1,1,3,3,71,0,0,12,0,0.0,0
488,5,train,"Who is the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?matsudaira a dbo:Person ;
              foaf:name ""Matsudaira Tadamasa""@en .
  ?matsudaira dbo:father ?father .
  ?father a dbo:OfficeHolder .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
16,2,train,Give me the person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Georgeanne Marie Rice""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
328,10,train,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Assuming there is a specific DBpedia resource for the position
  ?position dbr:People's_Commissariat_of_Defense_of_the_Soviet_Union ;
            dbo:leader ?person .

  # Assuming Order of Suvorov has its own DBpedia resource
  ?award dbr:Order_of_Suvorov .
  ?person dbo:award ?award .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,14,train,"Give me the person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Algiers .
  FILTER EXISTS { dbr:Algiers a dbo:Settlement }
}
```",2,3,3,2,1,3,3,71,122,0,0,1.0,1.0,1.0
404,3,train,Give me the birth name of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Princess_Victoria_Louise_of_Prussia a dbo:Person .
  dbr:Princess_Victoria_Louise_of_Prussia dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,12,train,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find the parent of Henuttawy (19th dynasty)
SELECT ?parent WHERE {
  dbr:Henuttawy_(19th_dynasty) a dbo:Person .
  dbr:Henuttawy_(19th_dynasty) dbo:parent ?parent .
}

# Query to find the spouse of Ramesses II
SELECT ?spouse WHERE {
  dbr:Ramesses_II a dbo:Person .
  dbr:Ramesses_II dbo:spouse ?spouse .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,11,train,Give me the person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Dino Merlin""@en .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
492,12,train,Give me the person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Condition for death place at Algiers
  ?person dbo:deathPlace dbr:Algiers .

  # Condition for being a commander in Franco-Hova Wars
  ?person dbo:occupation ?occupation .
  FILTER (
    EXISTS { 
      ?event dbo:participant ?person ;
             rdfs:label ""Franco-Hova Wars""@en .
    } &&
    ?occupation rdfs:label ?roleLabel .
    FILTER (CONTAINS(LCASE(?roleLabel), ""commander""))
  )
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
783,5,train,"Give me the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Artist .
  ?person a dbo:MusicalArtist .
  ?person rdfs:label ""Priscilla Opoku-Kwarteng""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
963,5,train,"Give me the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?party a dbo:PoliticalParty .
  OPTIONAL { ?party dbo:rulingParty ?location . }
  FILTER (
    EXISTS { ?party dbp:headquartersLocation dbr:Sremski_Karlovci } ||
    EXISTS { ?location rdfs:label ""Sremski Karlovci""@en }
  )
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
285,1,train,Give me the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Aristotle_Onassis dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
487,0,train,Give me the country of 2022 Vermont House of Representatives election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:2022_Vermont_House_of_Representatives_election a dbo:Election .
  dbr:2022_Vermont_House_of_Representatives_election dbo:country ?country .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
177,5,train,Give me the entity in the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  dbr:Alexander_Gamelin dbo:residence ?location .
  ?entity dbo:locatedIn ?location .
}
```",2,2,3,2,1,2,2,9,0,0,3065,0,0.0,0
465,0,train,Give me the death place of Jiřina Štěpničková.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Jiřina_Štěpničková a dbo:Person .
  dbr:Jiřina_Štěpničková dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
404,11,train,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Princess_Victoria_Louise_of_Prussia a dbo:Person .
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
}
```",2,3,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
328,12,train,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?positionHeld dbo:agent ?person ;
                dbo:title ""People's Commissar for Defence""@en ;
                dbo:startDate ?start .
  OPTIONAL { 
    ?commandPosition dbo:agent ?person ;
                     dbo:title ?title .
    FILTER (CONTAINS(LCASE(?title), ""eastern front"") || CONTAINS(LCASE(?title), ""soviet military command""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,5,train,Who is the commander in Battle of Verdun?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Battle_of_Verdun dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,17,0,0,1.0,1.0,1.0
421,5,train,Give me the birth name of Dino Merlin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Dino_Merlin a dbo:Person .
  dbr:Dino_Merlin dbo:birthName ?birthName .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
996,3,train,Who is the awardee of 1778.0?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?award dbo:year ""1778""^^xsd:gYear .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
801,5,train,"Give me the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:musicalArtistType dbo:Rapper .
}
```",1,2,2,1,1,3,3,71,0,0,1363,0,0.0,0
16,16,train,Give me the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession WHERE {
  dbr:Unnatural a dbo:TVSeries .
  ?unrelated dbo:castMember ?actor .
  ?actor dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
391,12,train,Give me the actor of All About the Andersons and actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor1 ?actor2 WHERE {
  # Find actor for ""All About the Andersons""
  dbr:All_About_the_Andersons dbo:starring ?actor1 .
  
  # Find actor for ""The Departed""
  dbr:The_Departed dbo:starring ?actor2 .
}
```",2,2,3,1,2,3,3,71,1,11,0,0.08333333333333333,1.0,0.15384615384615385
492,9,train,Give me the person decedent at French Algeria and commander in Franco-Hova Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Filter for death place in French Algeria
  ?person dbo:deathPlace dbr:French_Algeria .

  # Find association with being a commander in the Franco-Hova Wars
  ?event dbo:commander ?person ;
         rdfs:label ""Franco-Hova Wars""@en .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
421,7,train,Give me the band member of Senidah and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find band members of Senidah
  ?bandMember a dbo:Band ;
              dbo:member ?person .
  FILTER (STR(?band) = ""Senidah"")

  # Find person born as Edin Dervišhalidović
  ?person foaf:name ?name .
  FILTER (CONTAINS(LCASE(STR(?name)), ""edin dervišhalidović""))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,7,train,Give me the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?margaret a dbo:Person ;
            dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1925)
  OPTIONAL { ?margaret dbo:mother ?parent . }
  OPTIONAL { ?margaret dbo:father ?parent . }
}
```",1,1,2,1,1,3,3,71,0,12,2,0.0,0.0,0
285,9,train,Who is the child of the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Aristotle_Onassis dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,5,0,0,1.0,1.0,1.0
547,0,train,Give me the resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""James Burton"" ;
          dbo:occupation dbr:Egyptologist .
  ?person dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,14,train,Give me the figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  dbr:Queen's_University_Belfast dbp:nickname ?nickname .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,15,train,"Give me the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeHolder WHERE {
  ?officeHolder a dbo:OfficeHolder .
  ?officeHolder dbo:office ?office .
  ?office dbo:country dbr:Kingdom_of_Ireland .
  FILTER (
    regex(str(?office), ""Sheriff|Constable|Military Leader"", ""i"")
  )
}
```",2,3,3,2,1,3,3,71,0,0,60,0,0.0,0
801,16,train,"Give me the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?artist a dbo:MusicalArtist .
  ?artist dbo:genre dbr:Rapper .
  ?work a dbo:MusicalWork ;
        a dbo:Song .
  ?work dbo:musicalArtist ?artist .
}
```",2,6,3,2,1,3,3,71,0,0,2395,0,0.0,0
55,9,train,Give me the band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:bandMember dbr:Metallica .
  OPTIONAL { ?person dbo:bandMember dbr:Newsted . }
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
429,0,train,Give me the administration of Andrew Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?termStart ?termEnd WHERE {
  ?person a dbo:Person ;
          foaf:name ""Andrew Johnson""@en ;
          dbo:presidentOf dbr:United_States .
  OPTIONAL { ?person dbo:termStart ?termStart . }
  OPTIONAL { ?person dbo:termEnd ?termEnd . }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
696,4,train,Who is the commander in Battle of Chishui River?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Battle_of_Chishui_River a dbo:Battle .
  dbr:Battle_of_Chishui_River dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,24,0,0.0,0
182,7,train,Give me the entity in Sri Lanka and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mahesh Senanayake""@en .
  ?war dbo:location dbr:Sri_Lanka ;
       dbo:participatedIn ?person .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
197,0,train,Give me the birthplace of Dumitru Nadu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Dumitru_Nadu a dbo:Person .
  dbr:Dumitru_Nadu dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
92,11,train,"Give me the band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band a dbo:Band ;
        rdfs:label ""Nevermore""@en .
  
  ?band dbo:bandMember ?member .
  ?member a dbo:Artist .
}
```",2,3,3,2,1,3,3,71,0,0,12,0,0.0,0
391,2,train,Give me the actor of All About the Andersons.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:All_About_the_Andersons a dbo:Film .
  dbr:All_About_the_Andersons dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,4,0,1,1.0,0.8,0.888888888888889
626,10,train,Give me the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Battle_of_Borodino a dbo:Battle .
  ?militaryForce dbo:participatingMilitaryForce dbr:Battle_of_Borodino .
  ?militaryForce dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,0,53,0,0.0,0
701,5,train,Give me the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Seti_I a dbo:Person .
  dbr:Seti_I dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
303,9,train,Give me the entity in Panama and party of Arnulfo Arias.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Arnulfo Arias"" ;
          dbo:nationality dbr:Panama .
  OPTIONAL { ?person dbo:party ?party . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
435,1,train,Give me the region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  dbr:Greenwich_Mean_Time a dbo:Timezone .
  dbr:Greenwich_Mean_Time dbo:region ?region .
}
```",1,1,2,1,1,2,3,28,0,0,2484,0,0.0,0
54,11,train,Give me the child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?father a dbo:Person .
  ?soeMinWimalaDewi a dbo:Person ;
                   rdfs:label ""Soe Min Wimala Dewi""@en .
  ?father dbo:child ?soeMinWimalaDewi .
  ?father dbo:child ?child .
  FILTER (?child != ?soeMinWimalaDewi)
}
```",2,2,3,2,1,3,3,71,2,0,1,1.0,0.6666666666666666,0.8
9,3,train,"Give me the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?organization WHERE {
  ?organization a dbo:Organization .
  ?organization dbp:location dbr:Belfast .
}
```",1,2,2,1,1,3,3,71,0,0,57,0,0.0,0
492,1,train,Give me the commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander a dbo:Person .
  ?commander dbo:militaryCommanderOf dbr:Franco-Hova_Wars .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
232,12,train,Give me the native of London and actor of Dog Soldiers (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Check if the person is native to London
  ?person dbo:nationalityOrPlaceOfCitizenship dbr:London .

  # Check if the person acted in ""Dog Soldiers""
  ?filmRole dbo:actor ?person ;
            dbo:title dbr:Dog_Soldiers_(2002_film) .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:United_Kingdom .
}
```",1,1,2,1,1,3,2,20,42999,0,0,1.0,1.0,1.0
488,11,train,Give me the birth place of the commander in Boshin War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?birthPlace WHERE {
  ?commander a dbo:Person .
  ?commander dbo:commanderOf dbr:Boshin_War .
  ?commander dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,3,71,0,0,15,0,0.0,0
404,7,train,Who is the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
534,10,train,"Give me the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?owner WHERE {
  # Identify the event
  dbr:2012_Pro12_Grand_Final a dbo:SportingEvent .
  
  # Find the location of the event
  dbr:2012_Pro12_Grand_Final dbo:location ?venue .

  # Ensure the venue is both a venue and an architectural structure
  ?venue a dbo:Venue ;
         a dbo:ArchitecturalStructure .

  # Retrieve the owner of the venue
  ?venue dbo:owner ?owner .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
232,10,train,Give me the child of Jon Pertwee and native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Jon_Pertwee dbo:child ?child .
  ?child dbo:nativePlace dbr:London .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
184,15,train,"Give me the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  ?landmark a dbo:Landmark .
  ?landmark dbo:elevation ?elevation .
  FILTER (xsd:decimal(?elevation) = 96.0)
  ?landmark a dbo:Settlement .
  ?landmark dbo:native ?native .
}
```",2,3,3,2,1,3,3,71,0,0,3320,0,0.0,0
747,2,train,Give me the band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Shèna a dbo:Person .
  dbr:Shèna dbo:memberOfBand ?band .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
485,11,train,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Naturalist .
  ?person foaf:name ""Joseph Whitaker"" .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbp:Region .
}
```",2,3,3,2,1,2,3,28,0,0,369,0,0.0,0
754,9,train,Give me the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparent WHERE {
  # Find Min Linka's resource in DBpedia
  VALUES ?minLinka { dbr:Min_Linka }
  
  # Identify Min Linka's parent (mother or father)
  OPTIONAL { 
    ?minLinka dbo:mother ?parent .
  } UNION {
    ?minLinka dbo:father ?parent .
  }

  # Find the grandparent of Min Linka
  OPTIONAL { 
    ?parent dbo:mother ?grandparent .
  } UNION {
    ?parent dbo:father ?grandparent .
  }
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
177,0,train,Give me the entity in South Korea.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:South_Korea .
}
```",1,1,2,1,1,2,2,9,239,627,2826,0.2759815242494226,0.07797716150081566,0.12159755787331468
701,0,train,Give me the parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Meritamen dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
365,3,train,Give me the real name of The Blasters.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?realName WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""The Blasters""@en .
  OPTIONAL { ?band dbo:alias ?realName . }
  FILTER (!bound(?realName) || ?realName != ""The Blasters"")
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
996,2,train,Give me the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?elevation WHERE {
  dbr:Lac_d%27Avoriaz a dbo:BodyOfWater .
  dbr:Lac_d%27Avoriaz dbo:elevation ?elevation .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
9,8,train,Give me the nickname of Queen's University Belfast.,SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  dbr:Queen's_University_Belfast a dbo:EducationalInstitution .
  OPTIONAL { dbr:Queen's_University_Belfast dbo:commonName ?nickname . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
161,10,train,Give me the military force of Rif War and commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Rif War
SELECT ?rifWar ?militaryForce ?commander WHERE {
  ?rifWar a dbo:MilitaryConflict ;
          rdfs:label ""Rif War""@en .
  
  OPTIONAL { ?rifWar dbo:militaryForce ?militaryForce . }
  OPTIONAL { ?rifWar dbo:commander ?commander . }
}

UNION

# Query for Biscay Campaign
SELECT ?biscayCampaign ?militaryForce ?commander WHERE {
  ?biscayCampaign a dbo:MilitaryConflict ;
                  rdfs:label ""Biscay Campaign""@en .
  
  OPTIONAL { ?biscayCampaign dbo:militaryForce ?militaryForce . }
  OPTIONAL { ?biscayCampaign dbo:commander ?commander . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,1,train,Give me the associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:Red_Tide (dbo:associatedMusicalArtist|dbo:bandMember) ?artist .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
251,0,train,Give me the location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?location WHERE {
  dbr:Battle_of_Marengo a dbo:Battle .
  dbr:Battle_of_Marengo dbo:location ?location .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
915,4,train,"Give me the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Lizzie Spaulding's resource
  dbr:Lizzie_Spaulding a dbo:FictionalCharacter ;
                       dbo:spouseOrPartner ?parent .

  # Ensure the parent is also a fictional character
  ?parent a dbo:FictionalCharacter .

  # Check if the parent appears in a soap opera
  OPTIONAL { ?parent dbo:genre dbr:Soap_opera . }
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
16,13,train,Give me the professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?otherPerson WHERE {
  # Find Satomi Ishihara's occupation
  dbr:Satomi_Ishihara a dbo:Person ;
                      dbo:occupation ?occupation .

  # Find other people with the same occupation
  ?otherPerson a dbo:Person ;
              dbo:occupation ?occupation .
  
  FILTER (?otherPerson != dbr:Satomi_Ishihara)
}
```",2,2,3,2,1,3,3,71,0,0,19241,0,0.0,0
617,2,train,Give me the parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?nysa a dbo:Person ;
        dbo:spouse dbr:Pharnaces_I_of_Pontus .
  
  OPTIONAL { ?nysa dbo:parent ?parent . }
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
659,5,train,"Give me the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?entity a dbo:MilitaryUnit .
  ?entity rdfs:label ""Polish Horse""@en .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
391,7,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Unable to construct a SPARQL query due to lack of specific information in the question.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
659,10,train,Give me the military force of Napoleonic Wars and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  ?campaign a dbo:MilitaryConflict .
  ?campaign dbo:name ""German campaign of 1813"" .
  ?campaign dbo:participatingMilitaryUnit ?militaryForce .
  
  OPTIONAL {
    ?militaryForce dbo:commander ?commander .
  }
}
```",2,2,3,1,2,3,3,71,0,0,6,0,0.0,0
179,6,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara and parent of Ubol Ratana.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Mom Rajawongse Sirikit Kitiyakara""@en .
  ?child dbo:parent ?person .
  ?child rdfs:label ""Ubol Ratana""@en
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,9,train,"Who is the member of the associated musical artist, that is an organisation and a group and a band, of The Boils?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedBand WHERE {
  VALUES ?theBoils { dbr:The_Boils }
  ?theBoils a dbo:MusicalArtist .
  ?theBoils dbo:associatedBand ?associatedBand .
  FILTER (?associatedBand != ?theBoils)
  OPTIONAL { ?associatedBand a dbo:Organization . }
  OPTIONAL { ?associatedBand a dbo:MusicalGroup . }
}
```",2,5,3,2,1,3,2,20,0,4,6,0.0,0.0,0
696,10,train,Give me the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?battle a dbo:Event ;
          rdfs:label ""Battle of Chishui River""@en .
  
  ?person dbo:role ?role ;
          dbo:award ?award .

  FILTER(CONTAINS(LCASE(?role), ""commander"") && CONTAINS(LCASE(STR(?battle)), ""chishui river""))
}
```",2,2,3,2,1,3,2,20,0,0,9,0,0.0,0
492,4,train,"Give me the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph C. Satterthwaite""@en .
  ?officeHolder dbo:positionHeld ?position .
  ?position rdfs:label ""United States Assistant Secretary of State for African Affairs""@en .
  ?officeHolder dbo:agent ?person .
  OPTIONAL { ?person dbo:work ?work . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,6,train,Give me the administration of George K. Nash.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?position WHERE {
  dbr:George_K._Nash a dbo:Person .
  OPTIONAL { dbr:George_K._Nash dbo:positionHeld ?position . }
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
747,10,train,Give me the band of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Query for the band associated with Shèna
  OPTIONAL {
    ?shena a dbo:Person ;
           foaf:name ""Shèna"" .
    ?shena dbo:band ?band .
  }
}

UNION

SELECT ?person WHERE {
  # Query for a person born on 1985-04-29
  ?person a dbo:Person ;
          dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
356,2,train,"Give me the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?season a dbo:SportsTeamSeason ;
          dbo:sportsTeam dbr:Sacramento_Republic_FC ;
          dbo:year ""2015""^^xsd:gYear .
  
  OPTIONAL { 
    ?season dbo:predecessor ?predecessor .
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
177,1,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarter WHERE {
  dbr:Ministry_of_Culture_Sports_and_Tourism_of_South_Korea dbo:headquarter ?headquarter .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
666,5,train,Give me the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?team a dbo:Team .
  ?team rdfs:label ""England national beach soccer team""@en .
  ?team dbo:nickname ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
378,5,train,"Give me the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?war a dbo:War .
  ?war rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""peninsular war""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,7,train,"Give me the territory administered from Reykjavík and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory ?articleDescription WHERE {
  # Find territory administered from Reykjavík
  ?territory dbo:administrativeCapital dbr:Reykjavík .
  
  # Find information about Article 62, Section IV of the Constitution of Iceland
  OPTIONAL {
    ?constitution a dbo:Constitution ;
                  dbo:article ""Article 62"" ;
                  dbo:section ""Section IV"" .
    ?constitution rdfs:comment ?articleDescription .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
626,2,train,Who is the commander in Battle of Paris (1814)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  dbr:Battle_of_Paris_(1814) a dbo:Battle .
  dbr:Battle_of_Paris_(1814) dbp:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
528,11,train,Give me the war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  dbr:Battle_of_Pisagua dbo:foughtBy ?militaryForce .
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
281,13,train,"Give me the entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bob Heffron""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
}
```",2,3,3,2,1,3,3,71,0,1,1,0.0,0.0,0
783,4,train,Give me the persona of Ebony Reigns.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation WHERE {
  dbr:Ebony_Reigns a dbo:Person .
  OPTIONAL { dbr:Ebony_Reigns dbo:occupation ?occupation . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
492,15,train,Give me the work of the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?author a dbo:Person .
  ?author dbo:nationality dbr:French_Algérie .
  ?author dbo:work ?work .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
378,3,train,Give me the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:C_P_Gahn dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
435,2,train,"Give me the work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?comment WHERE {
  ?constitution a dbo:LegalDocument .
  ?constitution rdfs:label ""Constitution of Iceland""@en .
  ?section rdfs:comment ?comment .
  FILTER(CONTAINS(LCASE(?comment), ""article 62 section iv""))
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
281,14,train,"Give me the war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit WHERE {
  ?heatherRoy a dbo:Person ;
              foaf:name ""Heather Roy""@en .
  
  OPTIONAL { 
    ?heatherRoy dbo:member ?militaryUnit .
  }
}
```",2,3,3,2,1,3,3,71,0,0,14,0,0.0,0
712,4,train,Give me the show of Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?show WHERE {
  ?show a dbo:TelevisionShow .
  OPTIONAL { 
    ?show dbo:country dbr:Soviet_Union .
  }
  UNION
  {
    ?show dbo:productionCompany ?company .
    ?company dbo:country dbr:Soviet_Union .
  }
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
48,7,train,Give me the band of the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer ?band WHERE {
  # Find the album ""Emotion"" by Carly Rae Jepsen
  ?album a dbo:Album ;
         dbo:title ""Emotion""@en ;
         dbo:artist dbr:Carly_Rae_Jepsen .

  # Identify writers of the album
  ?album dbo:writer ?writer .

  OPTIONAL {
    # Check if the writer is part of any band
    ?bandMember a dbo:Band ;
                dbo:member ?writer .
    BIND(?bandMember AS ?band)
  }
}
```",2,2,3,2,1,3,2,20,0,0,95,0,0.0,0
404,5,train,"Who is the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?child rdfs:label ""Prince George William of Hanover""@en .
  ?child a dbo:Person .
  ?child dbo:child ?person .
  ?person dbo:parent ?parent .
  ?parent a dbo:Person .
  OPTIONAL { ?parent dbo:royalty ?isRoyalty . FILTER(?isRoyalty != """") }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
285,0,train,Give me the parent of Alexander Onassis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Alejandro_Onassis dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
281,0,train,"Give me the war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Beauchamp_Seymour_1st_Baron_Alcester a dbo:Person .
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
281,6,train,"Give me the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Bob_Heffron a dbo:Person .
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  FILTER (?birthPlace a dbo:Country)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
754,3,train,Give me the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?mayHninHtapi { dbr:May_Hnin_Htapi }
  ?mayHninHtapi a dbo:Person .
  ?mayHninHtapi dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
429,5,train,Give me the administration of the father of Martha Johnson Patterson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?administration WHERE {
  # Find Martha Johnson Patterson's resource
  ?martha a dbo:Person ;
          foaf:name ""Martha Johnson Patterson""@en .
  
  # Identify her father
  ?parentRelation dbo:child ?martha ;
                  dbo:parent ?father .

  # Retrieve the administration role of her father
  OPTIONAL {
    ?administration dbo:administrator ?father .
    ?administration dbo:title ?title .
  }
}
```",2,2,3,2,1,2,2,9,0,1,1,0.0,0.0,0
48,6,train,Give me the band of Carl Falk and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Query for Carl Falk's band associations
  { 
    ?person rdfs:label ""Carl Falk""@en .
    ?person a dbo:Person .
    ?person dbo:member ?band .
  }
  
  UNION
  
  # Query for Murda Mook's band associations
  { 
    ?person rdfs:label ""Murda Mook""@en .
    ?person a dbo:Person .
    ?person dbo:member ?band .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
182,5,train,Give me the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nationality WHERE {
  dbr:Tamara_Kunanayakam a dbo:Person .
  dbr:Tamara_Kunanayakam dbo:nationality ?nationality .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
44,5,train,Give me the band member of the band of John Pettibone.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Pettibone""@en .
  OPTIONAL { ?person dbo:musicalArtist ?artist . }
  ?memberOf dbo:bandMemberOf ?band .
  FILTER (?person = ?memberOf)
}
```",2,2,3,2,1,2,2,9,0,0,2,0,0.0,0
666,10,train,"Give me the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?organisation a dbo:SoccerClub ;
                a dbo:SportsOrganization ;
                dbo:country dbr:England .
  OPTIONAL { ?organisation rdfs:label ?nickname . FILTER (lang(?nickname) = ""en"") }
  FILTER EXISTS { ?organisation rdfs:label ""The Football Association""@en }
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
232,6,train,"Give me the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?militaryConflict WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sean Pertwee""@en .
  
  OPTIONAL { 
    ?film dbo:actor ?person .
    ?film rdfs:label ?filmLabel .
    FILTER (lang(?filmLabel) = 'en')
  }
  
  OPTIONAL {
    ?militaryConflict dbo:participant ?person ;
                      rdfs:label ?conflictLabel .
    FILTER (lang(?conflictLabel) = 'en')
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
820,6,train,Give me the child of Jack Schwartzman and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Jack_Schwartzman a dbo:Person .
  ?child dbo:parent dbr:Jack_Schwartzman .
  ?child a dbo:Person .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
54,0,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Thinkhaya_of_Pagan dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
488,16,train,"Who is the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  ?matsudairaTadamasa a dbo:Person ;
                      rdfs:label ""Matsudaira Tadamasa""@en .
  
  ?matsudairaTadamasa dbo:father ?father1 .
  ?father1 a dbo:OfficeHolder .

  ?father1 dbo:father ?grandfather .
  ?grandfather a dbo:Politician .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
391,16,train,"Give me the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?notableWork WHERE {
  ?sherryHormann a dbo:Person ;
                 foaf:name ""Sherry Hormann""@en .
  ?sherryHormann dbo:spouse ?spouse .
  ?spouse dbo:notableWork ?notableWork .
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
666,8,train,Give me the figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  dbr:England_national_beach_soccer_team rdfs:label ?nickname .
  FILTER (LANG(?nickname) = ""en"")
}
```",2,2,3,2,1,3,2,20,0,1,5,0.0,0.0,0
617,7,train,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find Boleslaus I's child
  ?boleslausI a dbo:Person ;
              foaf:name ""Boleslaus I, Duke of Bohemia"" .
  
  ?boleslausI dbo:child ?child .

  # From that child, find their own child who is royalty
  ?child dbo:child ?grandchild .
  ?grandchild a dbo:RoyalFamilyMember ; # Assuming this class represents royalty
              rdfs:label ?name .
}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
328,14,train,"Give me the leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Joseph_Stalin a dbo:Person .
  ?office dbo:headOfState dbr:Joseph_Stalin ;
          a dbo:GovernmentAgency .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
9,15,train,"Who is the mayor, that is a politician, of the entity, that is an organisation, in Belfast?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  dbr:Belfast a dbo:City .
  dbr:Belfast dbo:mayor ?mayor .
  ?mayor a dbo:Politician .
}
```",2,4,3,2,1,3,3,71,0,0,13,0,0.0,0
915,10,train,"Give me the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Lizzie Spaulding as a fictional character in a soap opera
  ?lizzie a dbo:FictionalCharacter ;
          rdfs:label ""Lizzie Spaulding""@en .
  
  # Identify her child who is also a fictional character and part of a soap opera
  ?lizzie dbo:child ?child .
  ?child a dbo:FictionalCharacter .

  OPTIONAL {
    ?soap a dbo:SoapOpera ;
          dbo:character ?child .
  }
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
820,2,train,Who is the author of Understanding Comics?,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:Understanding_Comics a dbo:Book .
  dbr:Understanding_Comics dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
981,2,train,"Give me the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?place ?timeZone WHERE {
  ?place a dbo:Place .
  ?place rdfs:label ""Salak""@en .
  ?place dbo:location dbr:North_Sumatra .
  OPTIONAL { ?place dbo:timeZone ?timeZone }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
182,9,train,Give me the war of Jagath Dias and entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?event WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Jagath Dias""@en .
  
  OPTIONAL { 
    ?person dbo:participatedIn ?event .
  }
  
  FILTER (regex(str(?event), ""Janatha Vimukthi Peramuna"", ""i"") || regex(str(?event), ""1971 insurrection"", ""i""))
}
```",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
184,3,train,"Give me the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark .
  ?landmark a dbo:Settlement .
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ""96.0""^^xsd:float)
}
```",1,2,2,1,1,3,3,71,0,0,162,0,0.0,0
232,13,train,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?person rdfs:label ""Sean Pertwee""@en .
  ?person a dbo:Person .

  # Find films Sean Pertwee acted in
  ?film dbo:actor ?person .
  
  # Filter for films related to military conflicts
  OPTIONAL { ?film dbo:genre ?genre . FILTER(CONTAINS(LCASE(?genre), ""war"")) }
  OPTIONAL { ?film rdfs:label ?filmLabel . FILTER(CONTAINS(LCASE(STR(?filmLabel)), ""war"") || CONTAINS(LCASE(STR(?filmLabel)), ""military"")) }

  # Ensure the film is a claim to fame
  MINUS { ?film dbo:genre ?genre . FILTER(!CONTAINS(LCASE(?genre), ""war"")) }
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
498,3,train,"Who is the member, that is an artist, of Mortician (band)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  # Resource for Mortician band
  dbr:Mortician (band) a dbo:Band .
  
  # Find members of the band
  ?member dbo:memberOf dbr:Mortician (band) .

  # Ensure the member is an artist
  ?member dbo:occupation ?occupation .
  FILTER (
    ?occupation = dbo:Artist ||
    ?occupation = dbo:Singer ||
    ?occupation = dbo:Musician ||
    ?occupation = dbo:Bassist ||
    ?occupation = dbo:Guitarist ||
    ?occupation = dbo:Drummer
  )
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
626,5,train,Give me the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Aleksey_Petrovich_Yermolov a dbo:Person .
  dbr:Aleksey_Petrovich_Yermolov dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
392,0,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location ?place .
  FILTER (strstarts(str(?place), str(dbr:Italy)))
}
```",1,1,2,1,1,2,3,28,170,1709,12922,0.09047365620010644,0.012985029025358998,0.022710573775966872
328,0,train,Give me the awardee of Order of Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Order_of_Suvorov .
}
```",1,1,2,1,1,3,3,71,22,104,0,0.1746031746031746,1.0,0.29729729729729726
487,3,train,Give me the administration of Patricia McCoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Patricia McCoy""@en .
  ?person dbo:officeHolder ?office .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
9,7,train,"Give me the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:Organization .
  ?entity a dbo:EducationalInstitution .
  ?entity dbo:location dbr:Northern_Ireland .
}
```",1,3,2,1,1,3,3,71,0,0,134,0,0.0,0
92,16,train,"Give me the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Identify the film
  dbr:Return_to_Nuke_'Em_High_Volume_1 a dbo:Film .
  
  # Find actors of the film
  ?film dbo:actor ?person .
  
  # Ensure the person is also an artist (this might involve checking their profession or other artistic roles)
  ?person a dbo:Person .
  OPTIONAL { ?person dbo:profession dbr:Artist . } # This line assumes there's a direct link to 'Artist' which may not always be present
}
```",2,3,3,2,1,3,3,71,0,0,205,0,0.0,0
30,0,train,Give me the native of Paris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Paris .
}
```",1,1,2,1,1,2,2,9,4483,0,2,1.0,0.9995540691192865,0.9997769848349687
754,4,train,Give me the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ?label .
  FILTER (langMatches(lang(?label), ""en"") && contains(lcase(str(?label)), ""ram khamhaeng the great""))
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
981,9,train,"Give me the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/property/timeZone> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone WHERE {
  ?location a dbo:Place .
  ?location rdfs:label ""Salak, North Sumatra""@en .
  OPTIONAL { ?location dbo:timeZone ?timeZone . }
}
```",2,2,3,2,1,3,2,20,0,1,1,0.0,0.0,0
820,3,train,Give me the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Scott_McCloud a dbo:Writer .
  dbr:Scott_McCloud dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
488,6,train,"Who is the father, that is a politician, of Yūki Hideyasu?",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Yuki_Hideyasu dbo:father ?father .
  ?father a dbo:Person .
  ?father dbo:occupationCategory ?category .
  FILTER (CONTAINS(LCASE(str(?category)), ""politician""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,11,train,Give me the reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?song a dbo:Songs .
  ?song dbo:title ""Blinded by the Light"" .
  ?song dbo:lyricist ?author .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
994,14,train,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member WHERE {
  # Identify Donald Maynard Dokken as a person and musical artist
  dbr:Donald_Dokken a dbo:Person ;
                    a dbo:MusicalArtist .

  # Find bands he is a member of
  dbr:Donald_Dokken dbo:bandMemberOf ?band .

  # For each band, find other members
  ?band dbo:bandMember ?member .
  
  FILTER (?member != dbr:Donald_Dokken) # Exclude Donald Dokken himself from the results
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
421,3,train,Who is the awardee of [[#Awards and nominations?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?recipient WHERE {
  ?award a dbo:Award .
  ?award dbo:recipient ?recipient .
}
```",1,1,2,1,1,2,3,28,0,0,113,0,0.0,0
378,1,train,Give me the war of Joaquín Blake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Joaquín_Blake a dbo:Person .
  dbr:Joaquín_Blake dbo:militaryConflict ?war .
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
617,6,train,Who is the child of Antiochus III the Great?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Antiochus_III_the_Great a dbo:Person .
  ?child dbo:child dbr:Antiochus_III_the_Great .
}
```",1,1,2,1,1,3,3,71,0,2,6,0.0,0.0,0
696,6,train,Give me the landmark at elevation of 50 and birth place of Tim Brennan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?birthPlace WHERE {
  # Find landmark at elevation 50
  ?landmark a dbo:Place .
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ""50""^^xsd:integer)

  # Find birth place of Tim Brennan
  OPTIONAL {
    dbr:Tim_Brennan dbo:birthPlace ?birthPlace .
  }
}
```",2,2,3,1,2,3,2,20,1,574,0,0.0017391304347826088,1.0,0.003472222222222222
92,17,train,Give me the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:formerName ?name .
  FILTER (str(?name) = ""Joseph Michael"")
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
16,5,train,Who is the actor of Unnatural (TV series)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Unnatural_(TV_series) dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
312,6,train,Give me the entity in the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  dbr:Giorgio_Grigolli a dbo:Person .
  dbr:Giorgio_Grigolli dbo:birthPlace ?birthplace .
  
  ?entity dbo:location ?birthplace .
}
```",2,2,3,2,1,2,2,9,170,1702,12922,0.09081196581196581,0.012985029025358998,0.0227211975407645
617,1,train,Give me the parent of Mieszko II Lambert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Mieszko_II_Lambert a dbo:Person .
  dbr:Mieszko_II_Lambert dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
427,11,train,Give me the reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?label WHERE {
  dbr:Italian_People's_Party_(1994) a dbo:PoliticalParty .
  dbr:Italian_People's_Party_(1994) rdfs:label ?label .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
92,7,train,Give me the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,2,train,Give me the military force of Napoleonic Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  dbr:Napoleonic_Wars a dbo:MilitaryConflict .
  dbr:Napoleonic_Wars dbo:participatingMilitaryForce ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,1051,0,0.0,0
392,10,train,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region WHERE {
  # Find the time zone for Aguilar de Segarra
  dbr:Aguilar_de_Segarra dbo:timeZone ?timezone .
  
  # Get the region of this time zone
  ?timezone dbo:region ?region .

  # Ensure the region is associated with a sports event
  ?event dbo:location ?region ;
         a dbo:SportEvent .
}
```",2,3,3,2,1,2,3,28,0,0,49990,0,0.0,0
92,12,train,Give me the associated musical artist of Jim Sheppard and band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?jimSheppardArtist ?josephMichaelBand WHERE {
  # Find the associated musical artist of Jim Sheppard
  OPTIONAL {
    ?person1 a dbo:Person ;
             foaf:name ""Jim Sheppard"" .
    ?person1 dbo:associatedBand ?jimSheppardArtist .
  }
  
  # Find the band of Joseph Michael
  OPTIONAL {
    ?person2 a dbo:Person ;
             foaf:name ""Joseph Michael"" .
    ?person2 dbo:band ?josephMichaelBand .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
378,11,train,Give me the war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:C._P._Gahn a dbo:Person .
  OPTIONAL { dbr:C._P._Gahn dbo:participatedIn ?war . }
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
54,9,train,Give me the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Thinkhaya of Pagan is the parent of this person
  dbr:Thinkhaya_of_Pagan dbo:child ?person .

  # This person is the parent of Thado Minsaw
  ?person dbo:parent dbr:Thado_Minsaw .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,11,train,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Seleucus II Callinicus
  dbr:Seleucus_II_Callinicus a dbo:Person .
  
  # His child
  ?child dbo:parent dbr:Seleucus_II_Callinicus ;
         dbo:child ?grandchild .

  # Check if the grandchild is royalty
  ?grandchild a dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
747,0,train,Give me the person born on 1985-04-29.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
}
```",1,1,2,1,1,3,3,71,30,0,0,1.0,1.0,1.0
318,5,train,Give me the person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the founding year of Eel Pie Publishing
  ?eelpiePublishing a dbo:Company .
  ?eelpiePublishing rdfs:label ""Eel Pie Publishing""@en .
  ?eelpiePublishing dbo:foundingDate ?foundingYear .

  # Find persons born in that founding year
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  BIND(YEAR(?foundingYear) AS ?year)
  FILTER (YEAR(?date) = ?year)
}
```",2,2,3,2,1,2,2,9,0,0,2810,0,0.0,0
232,11,train,Give me the child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:John_Devon_Roland_Pertwee a dbo:Person .
  ?child dbo:parent dbr:John_Devon_Roland_Pertwee .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
547,1,train,Give me the resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Simon_Cadell a dbo:Person .
  OPTIONAL { dbr:Simon_Cadell dbo:deathPlace ?deathPlace . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
378,7,train,"Give me the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?trigge a dbo:Person ;
          foaf:name ""Thomas Trigge""@en .
  
  ?trigge dbo:participatedIn ?war .

  ?war a dbo:MilitaryConflict, dbo:Event .
}
```",1,4,2,1,1,3,3,71,0,0,7,0,0.0,0
754,6,train,Give me the parent of Loe Thai and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?parent WHERE {
  VALUES ?person { 
    dbr:Loe_Thai 
    dbr:May_Hnin_Thwe-Da 
  }
  
  ?person dbo:parent ?parent .
}
```",2,2,3,1,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
767,14,train,Give me the reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?character a dbo:Character .
  ?character rdfs:label ""Black Hood""@en .
  OPTIONAL { 
    ?character dbo:alterEgo ?alterEgo .
  }
  FILTER (LANG(?alterEgo) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
626,3,train,"Give me the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  dbr:Alexander_I_of_Russia a dbo:Person .
  dbr:Alexander_I_of_Russia dbo:participatedIn ?conflict .
  ?conflict a dbo:MilitaryConflict .
}
```",1,2,2,1,1,3,2,20,0,0,25,0,0.0,0
996,9,train,Who is the awardee of the elevation of Lac d'Avoriaz?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  dbr:Lac_d%27Avoriaz dbo:award ?award .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
827,5,train,"Who is the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894)?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:child ?child .
  OPTIONAL { ?child a dbo:Monarch . }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
528,3,train,"Give me the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?event a dbo:Event .
  ?event dbo:location dbr:Chile .
}
```",1,2,2,1,1,3,3,71,0,54,34,0.0,0.0,0
392,5,train,"Give me the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@en .
  ?person dbo:residence ?residence .
  ?residence a dbo:Settlement ;
             dbo:country dbr:Italy .
}
```",1,3,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
801,10,train,Give me the associated musical artist of Chris Taylor (music producer) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:Chris_Taylor_(music_producer) a dbo:Person .
  dbr:Chris_Taylor_(music_producer) dbo:associatedBand ?artist .
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
303,10,train,"Give me the entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:El_Valle_de_Antón dbo:country ?country .
  ?country a dbo:Country .
}
```",2,3,3,2,1,2,3,28,0,1,991,0.0,0.0,0
54,2,train,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?dewi a dbo:Person ;
        rdfs:label ""Ameitta Thiri Maha Dhamma Dewi""@en .
  
  OPTIONAL { 
    ?dewi dbo:predecessor ?predecessor .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
747,11,train,Give me the person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Retrieve Pavlo Khudzik's birth date
  VALUES (?pavloBirthDate) { 
    SELECT ?date WHERE {
      dbr:Pavlo_Khudzik dbo:birthDate ?date .
    }
  }

  # Find other persons with the same birth date
  ?person a dbo:Person ;
          dbo:birthDate ?date .

  FILTER (?date = ?pavloBirthDate && ?person != dbr:Pavlo_Khudzik)
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
404,16,train,"Who is the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Prince George William of Hanover's parent who is royalty
  ?parent a dbo:Person ;
          dbo:child dbr:Prince_George_William_of_Hanover ;
          dbo:royaltyStatus ?status1 .
  
  FILTER (?status1 = ""Royal"" || ?status1 = ""Royalty"") # Assuming 'Royal' or similar status indicates royalty

  # Find the child of this parent who is also royalty
  ?parent dbo:child ?child .
  ?child a dbo:Person ;
         dbo:royaltyStatus ?status2 .

  FILTER (?status2 = ""Royal"" || ?status2 = ""Royalty"")
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
421,1,train,Give me the native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace ?place .
  FILTER (strstarts(str(?place), str(dbr:Socialist_Federal_Republic_of_Yugoslavia)))
}
```",1,1,2,1,1,2,3,28,5399,0,0,1.0,1.0,1.0
498,5,train,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?band a dbo:Band .
  ?band a dbo:Organization .
  ?band rdfs:label ?label .
  FILTER (lang(?label) = 'en' && str(?label) = ""Solace of Requiem"")
}
```",2,4,3,2,1,2,2,9,0,0,11,0,0.0,0
427,17,train,"Who is the person born, that is an office holder and a politician, as the birth name of Romano Prodi?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Romano Prodi"" .
  ?person dbo:officeHolder ?office .
  ?person dbo:politician ?politics .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
360,4,train,"Give me the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  ?deathPlace a dbo:Settlement .
}
```",1,2,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
547,11,train,Give me the resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childRestingPlace WHERE {
  ?james a dbo:Person ;
         foaf:name ""James Burton"" ;
         dbo:occupation dbr:Property_developer .
  
  ?james dbo:child ?child .

  ?child dbo:deathPlace ?childRestingPlace .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
617,8,train,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparent WHERE {
  # Identify Richeza of Poland
  dbr:Richeza_of_Poland a dbo:Person .
  
  # Find her father
  dbr:Richeza_of_Poland dbo:father ?father .

  # Find the parent (grandparent) of her father
  ?father dbo:parent ?grandparent .

  # Ensure the grandparent is royalty
  OPTIONAL { ?grandparent dbo:royalTitle ?title . }
  FILTER EXISTS { ?grandparent dbo:royalTitle ?title }
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
391,10,train,"Give me the actor of All About the Andersons and native of Compton, California.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the film ""All About the Andersons""
  dbr:All_About_the_Andersons a dbo:Film .
  
  # Get actors starring in this film
  ?film dbo:starring ?actor .

  # Ensure the actor is from Compton, California
  ?actor dbo:birthPlace ?place .
  FILTER (str(?place) = ""Compton, California"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,9,train,Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # For Red Tide (band)
  OPTIONAL {
    ?redTide a dbo:Band .
    ?redTide rdfs:label ""Red Tide (band)""@en .
    ?association dbo:associatedBand ?redTide ;
                 dbo:musicalArtist ?artist .
  }
  
  # For S.A. Slayer
  OPTIONAL {
    ?sASlayer a dbo:Band .
    ?sASlayer rdfs:label ""S.A. Slayer""@en .
    ?association2 dbo:associatedBand ?sASlayer ;
                  dbo:musicalArtist ?artist .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
547,10,train,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    dbr:James_Burton_(Egyptologist) 
    dbr:Alan_Cunningham_(explorer)
  }
  ?person dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,4,train,"Give me the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?party a dbo:PoliticalParty .
  ?party dbo:country dbr:Sicily .
  OPTIONAL { ?party dbo:headquartersLocation dbr:Sicily . }
}
```",1,3,2,1,1,2,3,28,0,2,1,0.0,0.0,0
915,0,train,"Give me the resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbp:residence dbr:Springfield,_Illinois .
}
```",1,1,2,1,1,3,2,20,0,0,15,0,0.0,0
294,9,train,"Give me the resting place of Edwin A. Keeble and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?keeblesRestingPlace ?nashvilleEntity WHERE {
  # Find Edwin A. Keeble's resting place
  OPTIONAL { 
    ?keeblesResource a dbo:Person ;
                     rdfs:label ""Edwin A. Keeble""@en .
    ?keeblesResource dbo:deathPlace ?keeblesRestingPlace .
  }
  
  # Find an entity in Nashville, Tennessee
  ?nashvilleEntity dbo:location dbr:Nashville,_Tennessee .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
9,5,train,"Give me the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?award a dbo:Award .
  ?award rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""royal medals""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
754,1,train,Give me the parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:May_Hnin_Thwe-Da a dbo:Person .
  dbr:May_Hnin_Thwe-Da dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
77,7,train,Give me the war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person dbo:award dbr:Golden_Weapon_for_Bravery .
  ?person dbo:participatedIn ?war .
}
```",2,2,3,2,1,3,2,20,0,0,22,0,0.0,0
142,3,train,Give me the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Papa_wa_Newscaster dbo:starring ?actor .
}
```",1,1,2,1,1,2,2,9,4,0,0,1.0,1.0,1.0
115,3,train,Who is the awardee of National Order of Scientific Merit?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:National_Order_of_Scientific_Merit .
}
```",1,1,2,1,1,2,2,9,7,6,2,0.5384615384615384,0.7777777777777778,0.6363636363636364
312,4,train,Give me the entity in Italy and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
# Query for an entity in Italy
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInItaly WHERE {
  ?entityInItaly a dbo:Place .
  ?entityInItaly dbp:country ""Italy"" .
}

# Query for an entity in Province of Bergamo
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInBergamo WHERE {
  ?entityInBergamo a dbo:Place .
  ?entityInBergamo dbp:province ""Province of Bergamo"" .
}
```",2,2,3,1,2,2,2,9,0,0,228,0,0.0,0
754,2,train,Give me the parent of Min Linka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Min_Linka a dbo:Person .
  dbr:Min_Linka dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
365,5,train,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  ?person dbo:occupation ?occupation3 .

  FILTER (
    (?occupation1 = dbr:Vocalist || ?occupation1 = dbr:Musician || ?occupation1 = dbr:Songwriter) &&
    (?occupation2 = dbr:Vocalist || ?occupation2 = dbr:Musician || ?occupation2 = dbr:Songwriter) &&
    (?occupation3 = dbr:Vocalist || ?occupation3 = dbr:Musician || ?occupation3 = dbr:Songwriter)
  )

  ?person dbo:band ?band .
}
```",2,4,3,2,1,2,2,9,0,0,2,0,0.0,0
44,4,train,Give me the band member of Undertow (band) and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  VALUES ?band { dbr:Undertow_(band) dbr:Sledgeback }
  ?band a dbo:Band .
  ?band dbo:member ?member .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
528,14,train,Give me the force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?occupation ?officeHeld WHERE {
  ?person rdfs:label ""Narciso Campero Leyes""@en .
  OPTIONAL { ?person dbo:occupation ?occupation . }
  OPTIONAL { ?person dbo:officeHeld ?officeHolding . ?officeHolding dbo:officeName ?officeHeld . }
}
```",2,2,3,2,1,3,3,71,0,1,4,0.0,0.0,0
994,8,train,"Who is the person born, that is a musical artist, as Donald Maynard Dokken?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Donald Maynard Dokken"" .
  ?person dbo:birthDate ?birthDate .
  OPTIONAL { ?person dbo:musicalArtist true . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,10,train,Give me the region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  dbr:Bombali_Shebora_Chowchiefdom dbo:locatedIn ?location .
  ?location dbo:timeZone ?tz .
  ?tz rdfs:label ?region .
  FILTER (lang(?region) = ""en"")
}
```",2,2,3,2,1,2,3,28,0,0,2484,0,0.0,0
996,4,train,Who is the native of Palestine (region)?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Palestine_(region) .
}
```",1,1,2,1,1,3,2,20,0,0,47,0,0.0,0
365,2,train,"Give me the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation .
  FILTER (
    ?occupation IN (dbr:Vocalist, dbr:Musician, dbr:Singer-songwriter)
  )
}
```",1,3,2,1,1,2,2,9,0,2491,4,0.0,0.0,0
314,7,train,Give me the person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Madrid .
  
  # Assuming there is a property linking the person to their role in the Spanish Civil War
  ?person dbo:role dbr:Spanish_Civil_War_Commander .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
232,7,train,"Give me the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person rdf:type dbo:Politician .
  ?person rdf:type dbo:OfficeHolder .
  ?person dbo:nationality dbr:France .
}
```",1,3,2,1,1,3,3,71,148,65,122,0.6948356807511737,0.5481481481481482,0.6128364389233956
547,9,train,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    dbr:James_Burton_(Egyptologist) 
    dbr:Simon_Cadell 
  }
  
  ?person dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
429,2,train,Who is the father of Martha Johnson Patterson?,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Martha_Johnson_Patterson a dbo:Person .
  dbr:Martha_Johnson_Patterson dbo:father ?father .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,9,train,Give me the awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  
  # Condition for being an awardee of the Order of Suvorov
  ?person dbo:award dbr:Order_of_Suvorov .

  # Condition for being a commander on the Eastern Front during World War II
  ?person dbo:commanderOfMilitaryUnit ?unit .
  ?unit dbo:participatedInWar dbr:Eastern_Front_(World_War_II) .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
747,15,train,"Give me the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate WHERE {
  ?person a dbo:Person .
  ?person dbo:athlete true .
  ?person dbo:soccerPlayer true .
  ?person dbo:deathPlace dbr:Zolotonosha .
  ?person dbo:birthDate ?birthDate .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
435,6,train,Give me the territory administered from Reykjavík and region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  # Find the territory with Reykjavík as its capital
  ?territory dbo:capital dbr:Reykjavík .
  
  # Filter for regions using GMT
  OPTIONAL { 
    ?region dbo:timeZone dbr:Greenwich_Mean_Time .
    FILTER (?territory = ?region)
  }
}
```",2,2,3,1,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
339,2,train,Who is the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  dbr:Frederick_VIII_of_Denmark dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
142,2,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  dbr:Japan_Standard_Time a dbo:TimeZone .
  dbr:Japan_Standard_Time dbo:timeZoneRegion ?region .
}
```",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
747,16,train,"Who is the writer of the work, that is a song, of Amba Shepherd?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song WHERE {
  ?person a dbo:Person ;
          foaf:name ""Amba Shepherd""@en .
  ?work dbo:creator ?person ;
        a dbo:Song .
  ?work rdfs:label ?song .
  FILTER (LANG(?song) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
30,6,train,Give me the professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  dbr:Édouard_Alphonse_James_de_Rothschild a dbo:Person .
  dbr:Édouard_Alphonse_James_de_Rothschild dbo:profession ?profession .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
55,0,train,Give me the band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Guns_N%27_Roses a dbo:Band .
  ?member dbo:bandMember dbr:Guns_N%27_Roses .
}
```",1,1,2,1,1,2,3,28,0,0,55,0,0.0,0
701,6,train,Give me the child of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Ramesses_II a dbo:Person .
  ?child dbo:child dbr:Ramesses_II .
  ?child a dbo:Person .
}
```",1,1,2,1,1,3,3,71,0,1,8,0.0,0.0,0
827,7,train,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find children of Grand Duchess Maria Pavlovna
  ?child dbo:parent dbr:Grand_Duchess_Maria_Pavlovna_of_Russia ;
         a dbo:Person .
  
  # Find grandchildren (children of her children)
  ?grandchild dbo:parent ?child ;
              a dbo:Person .

  # Filter for those who have a royalty title
  OPTIONAL { ?grandchild dbo:royaltyTitle ?title . }
  FILTER EXISTS { ?grandchild dbo:royaltyTitle ?title }
}
```",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
528,1,train,Give me the war of Orozimbo Barbosa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Orozimbo_Barbosa a dbo:Person .
  dbr:Orozimbo_Barbosa dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
487,10,train,"Give me the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  dbr:Phil_Scott a dbo:SoccerPlayer .
  dbr:Phil_Scott foaf:name ?birthName .
}
```",2,3,3,2,1,3,2,20,0,1,1,0.0,0.0,0
303,1,train,Give me the entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Panama .
}
```",1,1,2,1,1,2,3,28,3,79,988,0.036585365853658534,0.0030272452068617556,0.0055917986952469705
492,8,train,"Give me the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  dbr:Algeria a dbo:Country .
  dbr:Algeria dbo:capital ?capital .
  ?capital a dbo:Settlement .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
179,7,train,Give me the person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Sirikit""@en .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
391,5,train,Who is the spouse of Sherry Hormann?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Sherry_Hormann a dbo:Person .
  dbr:Sherry_Hormann dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
963,2,train,Give me the time zone of Herzegovina-Neretva Canton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone WHERE {
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timeZone .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
232,14,train,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Identify Sylvie Bermann's residence
  dbr:Sylvie_Bermann a dbo:Person ;
                     dbo:residence ?residence .

  # Ensure the residence is a settlement in Britain
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Find the native of this British settlement
  ?residence dbo:native ?native .
}
```",2,4,3,2,1,3,3,71,0,0,9121,0,0.0,0
77,0,train,Give me the war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person rdfs:label ""Alexander Chechenskiy""@en .
  ?person a dbo:Person .
  OPTIONAL { 
    ?person dbo:participatedIn ?war .
  }
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
827,8,train,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Identify Charles Augustus
  ?charlesAugustus a dbo:Person ;
                  rdfs:label ""Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach""@en ;
                  dbo:birthDate ?birthDate ;
                  dbo:deathDate ?deathDate .
  
  FILTER (YEAR(?birthDate) = 1844 && YEAR(?deathDate) = 1894)

  # Find his children who are royalty
  ?charlesAugustus dbo:child ?child .
  ?child a dbo:Person ;
         rdfs:label ?childLabel .

  OPTIONAL { 
    ?child dbo:title ?title .
    FILTER (CONTAINS(LCASE(?title), ""royalty"") || CONTAINS(LCASE(?childLabel), ""king"") || CONTAINS(LCASE(?childLabel), ""queen""))
  }

  # Determine the father of this child
  ?child dbo:father ?father .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,0,train,Give me the alma mater of Vladimir Cerrón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:Vladimir_Cerr%C3%B3n a dbo:Person .
  dbr:Vladimir_Cerr%C3%B3n dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
16,4,train,Who is the person born as Ted Martin McGinley?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Ted Martin McGinley""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
44,2,train,Give me the band of John Pettibone.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:John_Pettibone a dbo:Person .
  dbr:John_Pettibone dbo:musicalBand ?band .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,7,train,Give me the birth name of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Romano_Prodi a dbo:Person .
  dbr:Romano_Prodi dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
488,7,train,"Who is the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?royalTitle WHERE {
  dbr:Tokugawa_Masako a dbo:Person .
  dbr:Tokugawa_Masako dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?spouse dbo:title ?royalTitle .
    FILTER (CONTAINS(LCASE(?royalTitle), ""royalty"") || CONTAINS(LCASE(?royalTitle), ""prince"") || CONTAINS(LCASE(?royalTitle), ""princess""))
  }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
701,17,train,"Give me the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?commander a dbo:Person .
  ?commander dbo:role ?role .
  ?commander dbo:royalFamilyMemberOf ?royalty .
  ?battle dbr:Battle_of_Perire .
  ?commander dbo:participatedInBattle ?battle .
  
  ?father dbo:child ?commander .

  FILTER EXISTS { ?commander a dbo:RoyalFamilyMember }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
959,12,train,Give me the manager of 2013 Júbilo Iwata season and native of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:SoccerClub .
  ?team dbo:officialWebsite ?website .
  FILTER(CONTAINS(LCASE(str(?website)), ""jubilo iwata"")) .

  ?team dbo:season ?season .
  ?season dbo:year ?year .
  FILTER (?year = 2013) .

  ?team dbo:manager ?manager .
  
  OPTIONAL { 
    ?manager dbo:nationality dbr:Japan .
  }
  UNION
  {
    ?manager dbo:birthPlace dbr:Japan .
  }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
232,9,train,Give me the actor of Dog Soldiers (film) and child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find actors in the film Dog Soldiers
  ?film dbo:title ""Dog Soldiers""@en .
  ?film dbo:starring ?actor .

  # Find children of Jon Pertwee
  ?jonPertwee a dbo:Person ;
              foaf:name ""Jon Pertwee"" ;
              dbo:child ?child .

  # Check if any actor is also a child of Jon Pertwee
  FILTER (?actor = ?child)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,4,train,"Who is the child, that is a royalty, of Seleucus II Callinicus?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent a dbo:Person ;
          foaf:name ""Seleucus II Callinicus""@en .
  ?child dbo:childOf ?parent ;
         a dbo:Person .
  OPTIONAL { ?child dbo:royalTitle ?title . }
  FILTER EXISTS { ?child dbo:royalTitle ?title }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
294,3,train,"Who is the awardee, that is a politician, of Distinguished Service Medal (U.S. Army)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Distinguished_Service_Medal_(U.S._Army) .
  ?person dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""politician""))
}
```",1,2,2,1,1,2,3,28,0,0,11,0,0.0,0
547,16,train,Give me the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?show a dbo:TVSeries .
  ?show dbo:castMember dbr:Emily_Richard .
  ?show dbo:castMember ?actor .
  FILTER (?actor != dbr:Emily_Richard)
}
```",2,2,3,2,1,3,3,71,0,0,22,0,0.0,0
659,6,train,"Give me the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war a dbo:War ;
       a dbo:MilitaryConflict .
  
  ?regiment dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
  ?participation dbo:participant ?regiment .
  ?participation dbo:event ?war .
}
```",1,3,2,1,1,3,3,71,0,0,19,0,0.0,0
182,0,train,Give me the war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mahesh Senanayake""@en .
  ?person dbo:participatedIn ?event .
  ?event a dbo:War .
  FILTER (str(?person) = str(dbr:Mahesh_Senanayake))
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
54,14,train,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .
  
  # Identify the child who is an office holder and royalty
  ?child dbo:parent ?thihapate ;
         rdf:type ?royaltyType ;
         dbo:officeHolder ?office .

  FILTER (?royaltyType IN (dbo:Monarch, dbo:RoyalFamilyMember)).

  # Find predecessor of this child in their role
  ?office dbo:predecessor ?predecessor .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
339,8,train,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find a child of Elena Vladimirovna
  ?child dbo:parent dbr:Grand_Duchess_Elena_Vladimirovna_of_Russia .
  
  # Find the father of that child
  ?child dbo:parent ?father .
}
```",2,2,3,2,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
77,10,train,"Who is the mayor of the territory administered, that is an organisation, from Warsaw?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  ?mayor a dbo:Mayor .
  ?organisation dbo:administrativeTerritory ?territory .
  ?mayor dbo:positionHeldBy ?organisation .
  ?organisation dbo:headquarterLocation dbr:Warsaw .
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
318,3,train,Give me the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation WHERE {
  dbr:Robert_Xavier_Rodriguez a dbo:Person .
  dbr:Robert_Xavier_Rodriguez dbo:occupation ?occupation .
}
```",1,1,2,1,1,2,2,9,1,1,1,0.5,0.5,0.5
963,7,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ""Central European Time""@en .
}
```",2,3,3,2,1,3,2,20,0,1,173261,0.0,0.0,0
435,4,train,Give me the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?chiefdom ?timeZone WHERE {
  ?chiefdom a dbo:AdministrativeRegion .
  ?chiefdom rdfs:label ""Bombali Shebora Chiefdom""@en .
  OPTIONAL { ?chiefdom dbo:timeZone ?timeZone . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
488,9,train,Give me the death place of Tokugawa Ieyasu and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?birthPlace WHERE {
  OPTIONAL { 
    dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
  }
  OPTIONAL { 
    dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
534,7,train,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childBirthPlace WHERE {
  # Identify Desmond FitzGerald's resource
  dbr:Desmond_FitzGerald a dbo:Politician .
  
  # Find his child who is also a politician and an office holder
  ?desmondChild dbo:child dbr:Desmond_FitzGerald ;
                a dbo:Person ;
                (dbo:politician|dbo:officeHolder) ?x .

  # Get the birth place of this child
  ?desmondChild dbo:birthPlace ?childBirthPlace .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
285,4,train,Give me the award of Stan Lee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Stan_Lee dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,4,5,0.0,0.0,0
534,2,train,"Who is the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Essex .
  ?person dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""politician""))
}
```",1,2,2,1,1,3,2,20,0,0,89,0,0.0,0
161,14,train,"Give me the commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?person rdfs:label ""Emilio Mola""@en .
  ?person a dbo:Person .
  ?event dbo:militaryCommand ?person ;
         a dbo:Event .
}
```",2,3,3,2,1,3,3,71,0,0,85,0,0.0,0
820,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?occupation WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,2,20,27080,528738,12560,0.048720984207060586,0.6831483350151363,0.09095519751183123
314,4,train,Give me the award of Sergei Makovetsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Sergei_Makovetsky dbo:award ?award .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
404,17,train,Who is the father of the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
  ?spouse dbo:father ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
485,6,train,Give me the entity in United Kingdom and birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Thomas Warner (poet)""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { 
    ?birthPlace dbo:country dbr:United_Kingdom
  }
}
```",2,2,3,1,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
312,3,train,Give me the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Giorgio_Grigolli a dbo:Person .
  dbr:Giorgio_Grigolli dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
232,8,train,"Give me the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  dbr:Sylvie_Bermann dbo:residence ?residence .
  ?residence a dbo:Settlement .
  OPTIONAL { ?residence dbo:country dbr:United_Kingdom . }
}
```",1,3,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
747,4,train,Give me the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate WHERE {
  dbr:Pavlo_Khudzik a dbo:Person .
  dbr:Pavlo_Khudzik dbo:birthDate ?birthDate .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
197,1,train,Give me the birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:George_Lusztig a dbo:Person .
  dbr:George_Lusztig dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
312,1,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbo:location dbr:Italy .
}
```",1,1,2,1,1,2,2,9,11,216,13081,0.048458149779735685,0.0008402077604644058,0.0016517756588332456
9,17,train,"Give me the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://dbpedia.org/property/nickname> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?entity a dbo:Organisation ;
          a dbo:EducationalInstitution .
  ?entity rdfs:label ?nickname .
  FILTER (lang(?nickname) = 'en')
  OPTIONAL { ?entity dbp:country ""Northern Ireland"" }
}
```",2,4,3,2,1,3,3,71,0,62133,5,0.0,0.0,0
16,17,train,Give me the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person .
  ?person dbo:almaMater dbr:Ohio_State_University .
  OPTIONAL { ?person foaf:name ?birthName . }
}
```",2,2,3,2,1,3,3,71,4,903,86,0.004410143329658214,0.044444444444444446,0.00802407221664995
429,4,train,Give me the country of 77th Ohio Infantry Regiment and administration of Andrew Johnson.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?regimentCountry ?andrewJohnsonAdministration WHERE {
  # Query for the country of the 77th Ohio Infantry Regiment
  OPTIONAL {
    dbr:77th_Ohio_Infantry_Regiment dbo:country ?regimentCountry .
  }
  
  # Query for Andrew Johnson's administration details
  OPTIONAL {
    dbr:Andrew_Johnson dbo:presidencyStartYear ?startYear ;
                      dbo:presidencyEndYear ?endYear .
    BIND(CONCAT(""Andrew Johnson served from "", STR(?startYear), "" to "", STR(?endYear)) AS ?andrewJohnsonAdministration)
  }
}
```",2,2,3,1,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
360,2,train,Give me the reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  dbr:Manfred_Mann dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,2,3,28,1,114,1,0.008695652173913044,0.5,0.017094017094017096
487,5,train,"Give me the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Philip Brian Scott"" .
  OPTIONAL { ?person dbo:sport dbr:Soccer . }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
994,6,train,"Give me the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""Meshuggah""@en .
  ?band dbo:bandMember ?member .
  ?member a dbo:Person .
}
```",1,4,2,1,1,3,3,71,0,4,6,0.0,0.0,0
427,8,train,"Who is the person born, that is an office holder and a politician, as Romano Antonio Prodi?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation .
  FILTER (
    (CONTAINS(LCASE(str(?occupation)), ""officeholder"") || CONTAINS(LCASE(str(?occupation)), ""politician""))
  )
}
```",1,3,2,1,1,3,3,71,0,5214,1,0.0,0.0,0
747,13,train,Give me the band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find the song ""Apollo"" by Hardwell
  ?song dbo:title ""Apollo"" ;
        dbo:lyricsBy ?writer .
  
  # Ensure it's associated with Hardwell
  ?song dbo:artist dbr:Hardwell .

  # Check if the writer is a member of any band
  OPTIONAL { 
    ?writer dbo:bandMemberOf ?band .
  }
}
```",2,2,3,2,1,3,3,71,0,0,13,0,0.0,0
626,9,train,"Give me the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Identify the Battle of Paris (1814)
  dbr:Battle_of_Paris_(1814) a dbo:Battle ;
    dbo:commander ?commander .
  
  # Find the military conflict associated with this commander
  ?commander dbo:member ?force .
}
```",2,3,3,2,1,3,2,20,0,0,77,0,0.0,0
754,7,train,Give me the parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparent WHERE {
  VALUES ?mayHninHtapi { dbr:May_Hnin_Htapi }
  
  ?mayHninHtapi dbo:parent ?parent .
  ?parent dbo:parent ?grandparent .
}
```",2,2,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
92,8,train,Give me the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  FILTER (
    langMatches(lang(?label), ""EN"") &&
    strStarts(str(?label), ""Joseph Michael Furney"")
  )
  OPTIONAL { ?person rdfs:label ?label . }
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,5,train,"Give me the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""YU Grupa""@en .
  ?band dbo:bandMember ?member .
}
```",1,2,2,1,1,3,2,20,0,2,8,0.0,0.0,0
659,11,train,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?subordinate WHERE {
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington a dbo:MilitaryPerson .
  ?subordinate dbo:commander dbr:Arthur_Wellesley_1st_Duke_of_Wellington .
}
```",2,2,3,2,1,3,3,71,0,0,175,0,0.0,0
963,8,train,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?administration WHERE {
  ?place a dbo:Place ;
        rdfs:label ""Sremski Karlovci""@en .
  
  OPTIONAL { 
    ?governingBody dbo:governingBody ?place .
    ?governingBody dbo:headOfGovernment ?administration .
    ?governingBody dbo:politicalParty ?party .
  }
}
```",2,3,3,2,1,3,2,20,0,0,86,0,0.0,0
77,5,train,Who is the mayor of Congress Poland?,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  dbr:Congress_Poland dbo:mayor ?mayor .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
54,17,train,"Give me the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Reference to Thihapate of Mohnyin
  dbr:Thihapate_of_Mohnyin a dbo:Person .
  
  # Find the child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         a dbo:Person ;
         a dbo:Royalty ;
         a dbo:OfficeHolder .
}
```",2,4,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
345,8,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SportsManager .
  ?person dbo:birthDate ?date .
  ?person dbo:team ?team .
  
  FILTER (YEAR(?date) = 1978 && MONTH(?date) = 9 && DAY(?date) = 15)
}
```",2,4,3,2,1,3,2,20,1,34,1,0.02857142857142857,0.5,0.05405405405405405
251,9,train,Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace WHERE {
  # Query for administration of Forza Italia in 2013
  OPTIONAL {
    ?party a dbo:PoliticalParty ;
           rdfs:label ""Forza Italia""@en .
    ?member dbo:memberOf ?party ;
            dbo:officeHeld ?office .
    ?office dbo:startDate ?start ;
            dbo:endDate ?end .
    FILTER (YEAR(?start) <= 2013 && YEAR(?end) >= 2013)
    BIND(?member AS ?administration)
  }

  # Query for death place of Laura Mancinelli
  OPTIONAL {
    ?person a dbo:Person ;
            rdfs:label ""Laura Mancinelli""@en .
    ?person dbo:deathPlace ?deathPlace .
  }
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
404,4,train,"Who is the person born, that is a royalty, as Princess Victoria Louise of Prussia?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Princess Victoria Louise of Prussia""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
617,3,train,"Give me the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?boleslaus a dbo:Person ;
             foaf:name ""Boleslaus I, Duke of Bohemia"" .
  
  ?boleslaus dbo:child ?child .
  ?child a dbo:Person .

  OPTIONAL { 
    ?child dbo:royaltyStatus ?status .
    FILTER (?status != """")
  }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
92,5,train,Give me the actor of Return to Nuke 'Em High Volume 1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film a dbo:Film .
  ?film rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,1,19,0.0,0.0,0
345,7,train,Give me the figure known as the nickname of FC Vaduz.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  dbr:FC_Vaduz dbo:nickname ?nickname .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
959,7,train,"Who is the manager, that is a sports manager, of 1998 Kashima Antlers season?",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:SportsTeam .
  ?team rdfs:label ""Kashima Antlers""@en .
  ?season dbo:team ?team ;
          dbo:year ?year .
  FILTER (?year = 1998) .
  ?team dbo:manager ?manager .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
485,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbo:location dbr:United_Kingdom .
}
```",1,1,2,1,1,2,3,28,3,336,42996,0.008849557522123894,6.976906439684643e-05,0.00013844662882458813
959,14,train,Give me the manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  dbr:Takashi_Sekizuka a dbo:Person .
  dbr:Takashi_Sekizuka dbo:teamManager ?team .
  ?team dbo:teamManager ?manager .
}
```",2,2,3,2,1,3,3,71,0,0,10,0,0.0,0
701,15,train,Give me the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Amun-her-khepeshef a dbo:Person .
  dbr:Amun-her-khepeshef dbo:spouse ?spouse .
  ?spouse a dbo:Person .
  ?spouse dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,6,0,0,1.0,1.0,1.0
963,6,train,Give me the entity in Serbia and administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:Politician .
  ?entity dbo:country dbr:Serbia .
  ?entity dbo:partyAffiliation dbr:Serbian_Progressive_Party .
}
```",2,2,3,1,2,3,2,20,0,0,84,0,0.0,0
528,17,train,Give me the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Narciso Campero""@en .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,7,train,Give me the reference to Rutger Jan Schimmelpenninck.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?resource WHERE {
  ?resource rdfs:label ""Rutger Jan Schimmelpenninck""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
421,0,train,Give me the band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?senidah a dbo:Person ;
           foaf:name ""Senidah""@en .
  
  OPTIONAL { 
    ?senidah dbo:musicalArtist ?band .
    ?band dbo:member ?bandMember .
  }
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
281,10,train,"Give me the war of New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?nzArmy a dbo:Organization ;
          rdfs:label ""New Zealand Army""@en .
  
  ?beauchamp a dbo:Person ;
             rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .

  ?nzArmy dbo:participatedIn ?war .
  ?beauchamp dbo:participatedIn ?war .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,7,train,Give me the death place of Laura Mancinelli and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityLabel ?deathPlace ?battleLocation WHERE {
  {
    # Query for Laura Mancinelli's death place
    ?person rdfs:label ""Laura Mancinelli""@en .
    ?person dbo:deathPlace ?deathPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  } UNION {
    # Query for the location of Battle of Marengo
    ?battle rdfs:label ""Battle of Marengo""@en .
    ?battle dbp:location ?battleLocation .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
498,4,train,Give me the band of Malevolent Creation and band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Query for Malevolent Creation's band
  OPTIONAL {
    VALUES ?entity { dbr:Malevolent_Creation }
    ?entity a dbo:Band .
    BIND(?entity AS ?band)
  }

  # Query for Will Rahmer's band
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""Will Rahmer"" .
    ?person dbo:member ?band .
  }
}
```",2,2,3,1,2,2,2,9,0,1,1,0.0,0.0,0
492,16,train,"Give me the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Identify the Battle of Verdun and its commander
  dbr:Battle_of_Verdun a dbo:Battle ;
                       dbo:commander ?commander .

  # Find wars that this commander participated in
  ?commander dbo:participatedIn ?war .
  
  # Ensure the war is both a military conflict and an event
  ?war a dbo:MilitaryConflict, dbo:Event .
}
```",2,4,3,2,1,3,3,71,0,0,11,0,0.0,0
465,1,train,Give me the administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?role ?person WHERE {
  VALUES ?party { dbr:Czech_Pirate_Party }
  
  ?party a dbo:PoliticalParty .
  
  OPTIONAL {
    ?party dbo:leader ?person .
    BIND(""Leader"" AS ?role)
  }
  
  OPTIONAL {
    ?party dbo:memberOfTheExecutiveBoard ?person .
    BIND(""Member of the Executive Board"" AS ?role)
  }
}
```",1,1,2,1,1,2,2,9,0,2,2,0.0,0.0,0
528,0,train,Give me the war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Irene Morales""@en .
  OPTIONAL { ?person dbo:participatedIn ?war . }
  FILTER EXISTS { ?person foaf:name ""Irene Morales""@en }
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
487,7,train,Give me the country of the administration of Patricia McCoy.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v1 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""Patricia McCoy""@en .
  
  OPTIONAL { 
    ?position dbo:agent ?person .
    ?position dbo:country ?country .
  }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
994,12,train,Give me the band member of Don Dokken and associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
# Query for band members of Don Dokken
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?band a dbo:MusicalBand .
  ?band dbo:member ?person .
  ?person foaf:name ""Don Dokken""@en .
}

# Query for associated musical artists of Red Tide
SELECT ?associatedArtist WHERE {
  ?band a dbo:MusicalBand ;
        foaf:name ""Red Tide (band)""@en .
  ?band dbo:associatedBand ?artist .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,3,train,"Give me the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?leader a dbo:Person .
  ?leader dbo:leaderOf ?organization .
  
  # Ensure the organization is both a political party and the Chamber of Deputies
  ?organization a dbo:PoliticalParty ;
                dbo:member dbr:Chamber_of_Deputies_of_the_Czech_Republic .

  FILTER EXISTS { 
    ?party a dbo:PoliticalParty ;
           dbo:leader ?leader .
  }
}
```",1,3,2,1,1,2,2,9,0,0,5,0,0.0,0
659,4,train,"Give me the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rank WHERE {
  dbr:Arthur_Wellesley,_1st_Duke_of_Wellington a dbo:MilitaryPerson .
  OPTIONAL { dbr:Arthur_Wellesley,_1st_Duke_of_Wellington dbo:rank ?rank . }
}
```",1,1,2,1,1,3,3,71,0,0,52,0,0.0,0
827,1,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:William_Ernst,_Grand_Duke_of_Saxe-Weimar-Eisenach a dbo:Person .
  dbr:William_Ernst,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:father ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,4,train,Give me the death place of Jiřina Štěpničková and administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?property ?value WHERE {
  { 
    # Query for Jiřina Štěpničková's death place
    OPTIONAL {
      dbr:Ji%C5%99ina_%C5%A0t%C4%9Bpni%C4%8Dkov%C3%A1 dbo:deathPlace ?value .
      BIND(""Death Place"" AS ?property)
      BIND(dbr:Jiřina Štěpničková AS ?entity)
    }
  } UNION {
    # Query for Czech Pirate Party's administration
    OPTIONAL {
      dbr:Czech_Pirate_Party dbo:member ?admin .
      ?admin a dbo:Politician ; 
             rdfs:label ?value .
      FILTER (lang(?value) = ""en"")
      BIND(""Administration"" AS ?property)
      BIND(dbr:Czech Pirate Party AS ?entity)
    }
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
492,17,train,"Give me the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  dbr:Khemis_Miliana_District dbo:administrativeCapital ?capital .
  ?capital a dbo:City .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
427,1,train,Give me the party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Giulio_Andreotti a dbo:Person .
  dbr:Giulio_Andreotti dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
161,12,train,Give me the commander in Biscay Campaign and military force of Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  ?campaign a dbo:MilitaryConflict ;
            dbo:name ""Biscay Campaign""@en .
  
  ?commander a dbo:Person ;
             dbo:commanderOf ?militaryForce ;
             dbo:participatedIn ?campaign .

  ?conflict a dbo:MilitaryConflict ;
           dbo:name ""Spanish Civil War""@en ;
           dbo:hasPart ?campaign .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
994,13,train,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedBand WHERE {
  ?member dbo:bandMember dbr:Meshuggah .
  ?member dbo:associatedBand ?associatedBand .
  FILTER EXISTS { ?associatedBand a dbo:MusicalArtist . }
  FILTER EXISTS { ?associatedBand a dbo:Band . }
}
```",2,5,3,2,1,3,3,71,0,0,33,0,0.0,0
30,1,train,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  ?person dbo:occupation ?occupation3 .
  ?person dbo:occupation ?occupation4 .
  ?person dbo:occupation ?occupation5 .

  FILTER (
    (str(?occupation1) = ""Financier"" || str(?occupation1) = ""Businessman"" ||
     str(?occupation1) = ""Vineyard Owner"" || str(?occupation1) = ""Art Collector"" ||
     str(?occupation1) = ""Racehorse Owner/Breeder"") &&
    (str(?occupation2) = ""Financier"" || str(?occupation2) = ""Businessman"" ||
     str(?occupation2) = ""Vineyard Owner"" || str(?occupation2) = ""Art Collector"" ||
     str(?occupation2) = ""Racehorse Owner/Breeder"") &&
    (str(?occupation3) = ""Financier"" || str(?occupation3) = ""Businessman"" ||
     str(?occupation3) = ""Vineyard Owner"" || str(?occupation3) = ""Art Collector"" ||
     str(?occupation3) = ""Racehorse Owner/Breeder"") &&
    (str(?occupation4) = ""Financier"" || str(?occupation4) = ""Businessman"" ||
     str(?occupation4) = ""Vineyard Owner"" || str(?occupation4) = ""Art Collector"" ||
     str(?occupation4) = ""Racehorse Owner/Breeder"") &&
    (str(?occupation5) = ""Financier"" || str(?occupation5) = ""Businessman"" ||
     str(?occupation5) = ""Vineyard Owner"" || str(?occupation5) = ""Art Collector"" ||
     str(?occupation5) = ""Racehorse Owner/Breeder"")
  )
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,0,train,Give me the reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?party a dbo:Organization .
  ?party rdfs:label ""Partito Popolare Italiano""@en .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
404,1,train,Give me the parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Prince Ernest Augustus of Hanover""@en .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1914)
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
659,13,train,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  
  ?war a dbo:MilitaryConflict .

  ?regiment dbo:participatedIn ?war .
  ?commander dbo:commanderOf ?regiment .
}
```",2,4,3,2,1,3,3,71,0,0,130,0,0.0,0
498,0,train,Give me the band of Malevolent Creation.,SELECT ?result WHERE { <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Malevolent Creation"" .
  ?person dbo:band ?band .
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
996,10,train,Give me the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?award WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Palestine""@en .
  OPTIONAL { ?person dbo:honoraryTitle ?award . }
}
```",2,2,3,2,1,3,2,20,0,1,14,0.0,0.0,0
959,10,train,Give me the manager of 2013 Júbilo Iwata season and member of University of Tsukuba.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?team a dbo:SoccerTeam .
  ?team rdfs:label ""Júbilo Iwata""@en .
  
  ?season dbo:manager ?person .
  ?season dbo:sportTeam ?team .
  ?season dbo:year ?year .
  FILTER (?year = 2013) .

  OPTIONAL {
    ?person dbo:almaMater dbr:University_of_Tsukuba .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
92,13,train,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  ?person rdfs:label ""Jim Sheppard""@en .
  ?person a dbo:Person .
  OPTIONAL { 
    ?person dbo:associatedBand ?band .
    ?band dbo:member ?associatedArtist .
  }
  FILTER (LANG(?personLabel) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
197,5,train,Give me the birthplace of the member of FC Politehnica Timișoara.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:nationality dbr:FC_Politehnica_Timișoara .
  ?person dbo:birthPlace ?birthPlace .
}
```

Note: The above query assumes there is a direct link between players and the club via `dbo:nationality`, which might not be accurate. In practice, you may need to manually identify known members of FC Politehnica Timișoara and use their DBpedia resources in the query.",2,2,3,2,1,2,2,9,0,0,171,0,0.0,0
981,1,train,Give me the birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Novia_Indriani_Mamuaja a dbo:Person .
  dbr:Novia_Indriani_Mamuaja dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
534,6,train,Give me the headquarter of Royal Dublin Society and birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarter ?birthPlace WHERE {
  # Query for the headquarters of Royal Dublin Society
  OPTIONAL {
    dbr:Royal_Dublin_Society a dbo:Organisation .
    dbr:Royal_Dublin_Society dbo:headquarter ?headquarter .
  }
  
  # Query for the birth place of Garret FitzGerald
  OPTIONAL {
    dbr:Garret_FitzGerald a dbo:Person .
    dbr:Garret_FitzGerald dbo:birthPlace ?birthPlace .
  }
}
```",2,2,3,1,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
783,0,train,Give me the associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  dbr:Appietus a dbo:MusicArtist .
  OPTIONAL { dbr:Appietus dbo:collaborator ?associatedArtist . }
  OPTIONAL { dbr:Appietus dbo:associatedBand ?associatedArtist . }
  FILTER (?associatedArtist != dbr:Appietus)
}
```",1,1,2,1,1,3,2,20,0,0,15,0,0.0,0
963,10,train,"Give me the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rulingParty WHERE {
  ?location a dbo:Place .
  ?location dbo:postalCode ""21205"" .
  ?governingBody dbo:governs ?location .
  ?governingBody dbo:rulingParty ?rulingParty .
  ?rulingParty a dbo:PoliticalParty .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
427,15,train,Give me the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Michele_Pinto dbo:party ?party .
}
```",2,2,3,2,1,3,3,71,0,2,4,0.0,0.0,0
981,0,train,Give me the entity in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity geo:location ?location .
  ?location dbo:country dbr:Indonesia .
}
```",1,1,2,1,1,3,2,20,0,0,2949,0,0.0,0
360,6,train,Give me the writer of The Roaring Silence and native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?writer a dbo:Writer .
  ?work dbo:author ?writer .
  ?work rdfs:label ""The Roaring Silence""@en .
  OPTIONAL { ?writer dbo:birthPlace dbr:Johannesburg . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
492,6,train,"Give me the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Frédéric-Georges Herr""@en .
  
  ?person dbo:participatedIn ?war .

  ?war a dbo:MilitaryConflict, dbo:Event .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
712,0,train,Give me the capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  ?region a dbo:AdministrativeRegion .
  ?region rdfs:label ""South Russia""@en .
  ?region dbo:administrativeCapital ?capital .
  FILTER (YEAR(?date) >= 1919 && YEAR(?date) <= 1920)
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
392,4,train,"Give me the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone WHERE {
  ?event a dbo:SportsEvent .
  ?event dbo:location dbr:Aguilar_de_Segarra .
  ?event dbo:timeZone ?timeZone .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
617,9,train,Give me the spouse of Laodice IV and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?laodiceIV a dbo:Person ;
             rdfs:label ""Laodice IV""@en ;
             dbo:child dbr:Antiochus_III_the_Great .
  ?laodiceIV dbo:spouse ?spouse .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
378,6,train,Who is the commander in Peninsular War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander a dbo:Person .
  ?commander dbo:commanderOf ?unit .
  ?unit dbo:participatedIn dbr:Peninsular_War .
}
```",1,1,2,1,1,3,3,71,0,0,37,0,0.0,0
281,4,train,Who is the awardee of Knight Grand Cross of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
}
```",1,1,2,1,1,3,3,71,0,0,558,0,0.0,0
959,8,train,Give me the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?person a dbo:Person ;
          foaf:name ""Takashi Sekizuka""@en .
  OPTIONAL { ?person dbo:memberOfTeam ?team . }
  FILTER (STRSTARTS(STR(?person), STR(dbr:Takashi_Sekizuka)))
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
547,7,train,Give me the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Gerald_Graham a dbo:Person .
  dbr:Gerald_Graham dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
838,2,train,"Give me the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  VALUES ?person { dbr:Žika_Jelić }
  
  ?person dbo:member ?band .
  ?band a dbo:Band ;
        a dbo:MusicalGroup .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
378,0,train,Give me the war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Find Carl Pontus Gahn
  ?gahn a dbo:Person ;
        foaf:name ""Carl Pontus Gahn"" ;
        dbo:nationality dbr:Sweden .

  # Find wars during his lifetime in Sweden
  ?war a dbo:MilitaryConflict ;
       dbo:place dbr:Sweden ;
       dbo:dateStart ?start ;
       dbo:dateEnd ?end .
  
  FILTER (
    (?start <= ""1818-12-31""^^xsd:date && ?end >= ""1760-01-01""^^xsd:date)
  )
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
547,8,train,Give me the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
}
```",1,1,2,1,1,3,3,71,59,3,2,0.9516129032258065,0.9672131147540983,0.959349593495935
485,3,train,"Give me the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ""Western European Time""@en .
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
778,6,train,Give me the entity in United States and author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?author a dbo:Person .
  ?work dbo:author ?author .
  ?work rdfs:label ""Chroot""@en .
  OPTIONAL { ?author dbo:birthPlace ?place . FILTER (strstarts(str(?place), str(dbr:United_States))) }
}
```",2,2,3,1,2,3,2,20,0,1,1,0.0,0.0,0
617,5,train,"Give me the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?richeza a dbo:Person ;
           rdfs:label ""Richeza of Poland, Queen of Hungary""@en .
  
  ?richeza dbo:father ?father .

  ?father a dbo:Monarch .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
959,5,train,"Who is the leader, that is a politician, of 2010 Japanese House of Councillors election?",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?party dbo:electionResult ?result .
  ?result dbo:electionName dbr:2010_Japanese_House_of_Councillors_election .
  ?party dbo:leader ?leader .
  ?leader a dbo:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,9,0,0.0,0
30,2,train,Give me the birthplace of Silvia Cohen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Silvia_Cohen a dbo:Person .
  dbr:Silvia_Cohen dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
77,3,train,Who is the awardee of Golden Weapon for Bravery?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Golden Weapon for Bravery""@en .
  ?award dbo:recipient ?recipient .
}
```",1,1,2,1,1,3,2,20,0,0,10,0,0.0,0
232,16,train,"Give me the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?conflict WHERE {
  # Identify Morgan Freeman
  dbr:Morgan_Freeman a dbo:Actor ;
                     dbo:starring ?film .
  
  # Find military conflicts associated with him (e.g., narrations)
  OPTIONAL { 
    dbr:Morgan_Freeman dbo:narration ?conflict .
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
281,7,train,"Who is the professional, that is an office holder and a politician, in New Zealand Army?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:officeHolderOf ?office .
  ?person dbo:politicianFor ?country .
  ?person dbo:militaryBranch dbr:New_Zealand_Army .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,17,train,Who is the person born as the persona of Shèna?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:alias ?alias .
  FILTER (str(?alias) = ""Shèna"")
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
783,8,train,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  VALUES ?priscilla { dbr:Priscilla_Opoku-Kwarteng }
  
  ?priscilla a dbo:Artist ;
            a dbo:MusicalArtist .
  
  ?priscilla dbo:bandMember ?bandMember .
}
```",2,4,3,2,1,3,2,20,0,0,7,0,0.0,0
378,9,train,Give me the war of Joaquín Blake and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Joaquín Blake's war involvement
SELECT ?war WHERE {
  dbr:Joaquín_Blake dbo:participatedIn ?war .
}

# Query for historical context during Carl Pontus Gahn's lifetime
SELECT DISTINCT ?event WHERE {
  dbr:C_P_Gahn dbo:livedDuring ?period .
  ?period dbo:relatedEvent ?event .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
391,13,train,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?person rdfs:label ""Michael Ballhaus""@en .
  ?person a dbo:Person .

  # Find the claim to fame, which is likely a notable work
  ?person dbo:claimToFame ?work .

  # Ensure that the work is of type film or similar where actors are involved
  ?work a dbo:Film .

  # Get the actors from this work
  ?work dbo:starring ?actor .
}
```",2,3,3,2,1,3,3,71,0,0,20,0,0.0,0
534,9,train,"Who is the child, that is a politician and an office holder, of the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent a dbo:Person ;
          dbo:birthPlace dbr:Essex .
  ?parent dbo:politicalParty ?party . # Ensures the parent is a politician
  ?child dbo:childOf ?parent ;
         a dbo:Person ;
         dbo:officeHolder ?office ; # Ensures the child is an office holder
         dbo:politicalParty ?child_party . # Ensures the child is a politician
}
```",2,5,3,2,1,3,2,20,0,0,7,0,0.0,0
392,8,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone ?tz .
  FILTER (str(?tz) = ""Central European Time"")
}
```",2,3,3,2,1,2,3,28,0,0,173261,0,0.0,0
378,16,train,"Who is the commander in the reference, that is a military conflict, to Peninsular War?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict .
  ?war rdfs:label ""Peninsular War""@en .
  ?war dbo:commander ?commander .
}
```",2,3,3,2,1,3,3,71,37,0,0,1.0,1.0,1.0
435,0,train,Give me the territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?region a dbo:AdministrativeRegion .
  ?region dbo:administrativeCapital dbr:Reykjavík .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
251,10,train,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?leader WHERE {
  ?party a dbo:PoliticalParty .
  ?party dbo:country dbr:Sicily .
  OPTIONAL { ?party dbo:leader ?leader . }
}
```",2,4,3,2,1,2,3,28,0,3,5,0.0,0.0,0
294,1,train,Give me the resting place of Edwin A. Keeble.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  OPTIONAL { 
    dbr:Edwin_A._Keeble dbo:deathPlace ?restingPlace .
  }
  UNION
  OPTIONAL {
    dbr:Edwin_A._Keeble dbo:burialPlace ?restingPlace .
  }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
392,2,train,Give me the province of Schio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province WHERE {
  dbr:Schio a dbo:Settlement .
  dbr:Schio dbo:locatedInProvince ?province .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
994,10,train,Give me the band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Band Members of Don Dokken
SELECT DISTINCT ?bandMember WHERE {
  VALUES ?donDokken { dbr:Don_Dokken }
  ?donDokken a dbo:MusicalArtist .
  ?donDokken dbo:bandMember ?bandMember .
}

UNION

# Part 2: Associated Musical Artists of S.A. Slayer
SELECT DISTINCT ?associatedArtist WHERE {
  ?slayer a dbo:MusicalArtist ;
          rdfs:label ?label .
  FILTER CONTAINS(LCASE(?label), ""s.a. slayer"") .
  ?slayer dbo:bandMember ?associatedArtist .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
528,9,train,Give me the war of Orozimbo Barbosa and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  VALUES ?person { 
    dbr:Orozimbo_Barbosa 
    dbr:Irene_Morales 
  }
  
  ?person dbo:participatedIn ?event .
  ?event a dbo:War .
  FILTER (?person = dbr:Orozimbo_Barbosa || ?person = dbr:Irene_Morales)
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
994,17,train,"Who is the person born, that is a musical artist, as the persona of Don Dokken?",SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  OPTIONAL { ?person rdfs:label ?name . }
  FILTER (CONTAINS(LCASE(?name), ""don dokken""))
}
```",2,3,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
488,0,train,Give me the birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Enomoto_Takeaki a dbo:Person .
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
391,8,train,"Give me the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie a dbo:Work .
  ?movie a dbo:TelevisionShow .
  ?movie dbo:starring dbr:Roz_Ryan .
}
```",1,4,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
294,11,train,"Give me the entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?marionJames a dbo:Person ;
               foaf:name ""Marion James""@en ;
               dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .
}
```",2,3,3,2,1,2,3,28,0,1,340,0.0,0.0,0
92,1,train,Give me the associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedBand WHERE {
  dbr:Jim_Sheppard a dbo:Person .
  dbr:Jim_Sheppard dbo:associatedBand ?associatedBand .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
92,10,train,Give me the band of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?josephBand ?nevermoreMember WHERE {
  # Find the band associated with Joseph Michael
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael""@en .
  ?person dbo:bandMember ?josephBand .

  # Find members of the band Nevermore
  ?member a dbo:Person ;
          dbo:bandMember dbr:Nevermore .
  BIND(?member AS ?nevermoreMember)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
392,1,train,Give me the region of Central European Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  dbr:Central_European_Time a dbo:TimeZone .
  dbr:Central_European_Time dbo:timeZoneRegion ?region .
}
```",1,1,2,1,1,2,3,28,0,0,49990,0,0.0,0
281,11,train,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war WHERE {
  ?person a dbo:Person .
  ?person dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  ?person dbo:associatedWith ?war .
}
```",2,2,3,2,1,3,3,71,0,0,450,0,0.0,0
427,16,train,Who is the father of the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alumnus ?father WHERE {
  ?alumnus dbo:alumni dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
617,0,train,Give me the child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Antiochus_III_the_Great dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,4,2,1,0.6666666666666666,0.8,0.7272727272727272
161,8,train,"Give me the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  dbr:Emilio_Mola dbo:associatedWith ?event .
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
838,4,train,"Give me the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES ?yugrupa { dbr:YU_Grupa }
  
  ?yugrupa a ?type .
  FILTER (?type IN (dbo:Band, dbo:Organization))
  
  OPTIONAL { ?yugrupa dbo:member ?reference . }
  OPTIONAL { ?reference a ?refType . 
             FILTER(?refType IN (dbo:Band, dbo:Organization)) }
}
```",1,3,2,1,1,3,2,20,1,90094,0,1.1099395082967979e-05,1.0,2.2198543775528325e-05
617,3,train,"Who is the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?antiochus2 a dbo:Person ;
              rdfs:label ""Antiochus II Theos""@en .
  
  ?antiochus2 dbo:successor ?successor .

  ?successor rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
356,4,train,"Give me the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Gary Williams"" ;
          dbo:birthYear ?year .
  FILTER (?year = 1960)
  
  ?person dbo:birthPlace ?birthPlace .

  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:England .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
55,5,train,"Give me the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?band a dbo:Band .
  ?member dbo:name ""Jason Newsted""@en ;
          dbo:member ?band .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
915,2,train,Give me the director of Pipe Dreams (1976 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director WHERE {
  dbr:Pipe_Dreams_(1976_film) a dbo:Film .
  dbr:Pipe_Dreams_(1976_film) dbo:director ?director .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
488,3,train,"Give me the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  VALUES ?saito { dbr:Saitō_Hajime }
  
  ?saito dbo:associatedWith ?event .
  ?event a ?type .

  FILTER (
    (?type = dbo:MilitaryConflict || 
     ?type = dbo:Event || 
     ?type = dbo:SocietalEvent)
  )
}
```",1,4,2,1,1,3,3,71,0,0,4,0,0.0,0
9,0,train,"Give me the alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:John_Alderdice_Barons_Alderdice a dbo:Person .
  dbr:John_Alderdice_Barons_Alderdice dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
435,11,train,Give me the work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?work WHERE {
  ?author a dbo:Person .
  ?author dbo:nationality dbr:Iceland .
  ?author dbo:work ?work .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
294,8,train,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Distinguished_Service_Medal_(U.S._Army) .
  ?person dbo:occupation dbo:Politician .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```",2,3,3,2,1,2,3,28,0,0,10,0,0.0,0
528,15,train,"Give me the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?militaryForce WHERE {
  ?event a dbo:Event .
  ?event dbo:location dbr:Chile .
  ?event dbo:agent ?militaryEntity .
  ?militaryEntity rdf:type dbo:MilitaryUnit .
  BIND(?militaryEntity AS ?militaryForce)
}
```",2,3,3,2,1,3,3,71,0,0,91,0,0.0,0
696,0,train,Give me the birth place of Tim Brennan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Tim_Brennan a dbo:Person .
  dbr:Tim_Brennan dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
996,1,train,Give me the entity in France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:France .
}
```",1,1,2,1,1,3,2,20,0,2295,292,0.0,0.0,0
115,5,train,Give me the alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  ?person dbo:alumniOf dbr:National_University_of_San_Marcos .
  ?person dbo:almaMater ?almaMater .
}
```",2,2,3,2,1,2,2,9,0,0,49,0,0.0,0
487,8,train,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Philip Brian Scott""@en .
  ?person dbo:sportOccupation dbo:SoccerPlayer .
  OPTIONAL { ?person dbo:administration ?administration . }
}
```",2,3,3,2,1,3,2,20,0,0,14,0,0.0,0
179,9,train,"Give me the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childBirthName WHERE {
  ?nak dbr:Nakkhatra_Mangala .
  ?nak dbo:child ?child .
  
  # Assuming royalty can be identified by a specific class or property
  ?child a dbo:Monarch ; 
         dbo:birthName ?childBirthName .

}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
767,3,train,Give me the writer of Where It's At (Dustin Lynch album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?composer WHERE {
  ?album a dbo:Album ;
         rdfs:label ""Where It's At (Dustin Lynch album)""@en .
  
  ?song dbo:partOfAlbum ?album ;
        dbo:composer ?composer .

  FILTER(LANG(?album->rdfs:label) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,35,0,0.0,0
427,12,train,Give me the party of Giulio Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  VALUES ?individual { dbr:Giulio_Andreotti dbr:Romano_Prodi }
  
  ?person a dbo:Person .
  ?person dbo:partyAffiliation ?party .
  FILTER (?person = ?individual)
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
617,2,train,Give me the parent of Mlada (abbess).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Mlada_(abbess) dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
360,5,train,Give me the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:Blinded_by_the_Light a dbo:Song .
  dbr:Blinded_by_the_Light dbo:lyricsBy ?author .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
161,9,train,Give me the military force of Rif War and military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?militaryForce WHERE {
  VALUES ?war { 
    dbr:Rif_War 
    dbr:Spanish_Civil_War 
  }
  
  ?war dbo:participatingMilitaryForce ?militaryForce .
}
```",2,2,3,1,2,3,3,71,0,0,34,0,0.0,0
767,2,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
# Unable to generate a SPARQL query due to incomplete question.
```",1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
421,9,train,Give me the person born as Edin Dervišhalidović and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ""Edin Dervišhalidović""@en . }
  ?person dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .
}
```",2,2,3,1,2,2,3,28,0,11,1,0.0,0.0,0
142,4,train,Give me the birthplace of George Tokoro and entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?entityInJapan WHERE {
  # Query for George Tokoro's birthplace
  OPTIONAL {
    ?tokoro a dbo:Person ;
            foaf:name ""George Tokoro"" ;
            dbo:birthPlace ?birthPlace .
  }
  
  # Query for an entity in Japan
  OPTIONAL {
    ?entityInJapan a dbo:Place ;
                   dbo:country dbr:Japan .
  }
}
```",2,2,3,1,2,2,2,9,1,2490,0,0.0004014452027298274,1.0,0.0008025682182985554
617,1,train,Give me the spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Laodice_IV dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
281,8,train,"Give me the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  ?person rdfs:label ""Heather Roy""@en .
  ?person a dbo:Person .
  ?person dbo:occupation ?profession .
  
  FILTER (CONTAINS(LCASE(STR(?profession)), ""military unit""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,7,train,Give me the reference to Manfred Mann and writer of The Roaring Silence.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?album a dbo:Album .
  ?album dbo:title ""The Roaring Silence"" .
  ?album dbo:artist dbr:Manfred_Mann .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
487,1,train,Give me the administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?termStart ?termEnd WHERE {
  ?governor a dbo:Governor .
  ?governor dbo:officeHolder dbr:Phil_Scott .
  ?governor dbo:termStart ?termStart .
  ?governor dbo:termEnd ?termEnd .
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
184,10,train,Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentGéza ?parentIlona WHERE {
  OPTIONAL { 
    dbr:G%C3%A9za_von_Habsburg a dbo:Person ;
      dbo:parent ?parentGéza .
  }
  OPTIONAL { 
    dbr:Archduchess_Ilona_of_Austria a dbo:Person ;
      dbo:parent ?parentIlona .
  }
}
```",2,2,3,1,2,3,3,71,2,0,0,1.0,1.0,1.0
294,0,train,"Give me the resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Luke Lea"" ;
          dbo:birthYear ?birthYear .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  FILTER (?birthYear = 1879)
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
994,11,train,Give me the associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?secondLevelArtist WHERE {
  ?watchtower a dbo:Band .
  ?watchtower rdfs:label ""Watchtower (band)""@en .
  
  ?watchtower dbo:associatedBand ?firstLevelArtist .
  
  ?firstLevelArtist dbo:associatedBand ?secondLevelArtist .
}
```",2,2,3,2,1,3,3,71,16,0,0,1.0,1.0,1.0
232,15,train,Give me the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Jon Pertwee""@en .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
314,6,train,Give me the person deceased at Madrid and awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Madrid .
  ?person dbo:awardCount ""30""^^xsd:integer .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
365,1,train,Give me the reference to The Blasters.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ?label .
  FILTER (lang(?label) = 'en' && str(?label) = ""The Blasters"")
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
617,4,train,"Give me the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?richeza a dbo:Person ;
           rdfs:label ""Richeza of Poland""@en .
  
  ?richeza dbo:spouse ?spouse .

  OPTIONAL { ?spouse dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
10,4,train,"Give me the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:artist true .
  ?person foaf:name ?name .
  FILTER (CONTAINS(LCASE(?name), ""luke francis vibert""))
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
767,11,train,"Give me the entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?admin a dbo:AdministrativeUnit .
  ?admin dbo:administrativeUnit dbr:Green .
  ?settlement a dbo:Settlement .
  ?settlement dbo:partOf ?admin .
}
```",2,3,3,2,1,3,3,71,0,0,60,0,0.0,0
378,4,train,Who is the person born as Carl Pontus Gahn?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Carl Pontus Gahn"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
996,7,train,Give me the force of the awardee of 1778.0.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force WHERE {
  ?awardee a dbo:Person .
  ?awardee dbo:award ?award .
  ?award dbo:dateReceived ?date .
  FILTER (YEAR(?date) = 1778)
  
  OPTIONAL { 
    ?awardee dbo:militaryService ?service .
    ?service dbo:force ?force .
  }
}
```",2,2,3,2,1,3,2,20,0,0,11,0,0.0,0
360,1,train,Give me the native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Johannesburg .
}
```",1,1,2,1,1,2,3,28,999,0,1,1.0,0.999,0.9994997498749374
617,9,train,"Give me the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Mlada (abbess) and her parent
  dbr:Mlada_(abbess) dbo:parent ?parent .

  # Find the child of this parent who is royalty
  ?parent dbo:child ?child .
  ?child rdf:type dbo:Royalty .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
92,14,train,Give me the band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael Furney""@en .
  OPTIONAL { ?person dbo:band ?band . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,17,train,"Give me the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?event a dbo:Event .
  ?event dbo:associatedWith dbr:Rutger_Jan_Schimmelpenninck .
  
  # Filter for societal events
  OPTIONAL { ?event dbo:socialEvent ?social . }
  
  # Filter for general events (already covered by being an instance of dbo:Event)
  
  # Filter for military conflicts
  OPTIONAL { ?event dbo:militaryConflict ?military . }

  FILTER (?social || ?military) 
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
184,6,train,Give me the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Archduke_Joseph_Karl_of_Austria dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
345,0,train,Give me the figure known as Stolz von Liechtenstein.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person rdfs:label ""Stolz von Liechtenstein""@en .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
55,11,train,"Give me the band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Jason_Newsted a dbo:Person .
  dbr:Jason_Newsted dbo:bandMember ?band .
}
```",2,3,3,2,1,2,3,28,0,0,9,0,0.0,0
701,10,train,Give me the spouse of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify the spouse of Ramesses II
  dbr:Ramesses_II dbo:spouse ?spouse .
  
  # Ensure this spouse is also a parent of Meritamen
  ?spouse dbo:child dbr:Merytamen .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
767,10,train,Give me the entity in Baden-Württemberg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbo:location dbr:Baden-Württemberg .
}
```",2,2,3,1,2,3,3,71,0,46,7,0.0,0.0,0
44,0,train,Give me the band member of Undertow (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Undertow (dbo:bandMember|dbo:member) ?member .
  ?member a dbo:Person .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
915,8,train,"Give me the father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify Phillip Spaulding
  ?spaulding a dbo:Person ;
             rdfs:label ""Phillip Spaulding""@en .
  
  # Find his child who is both a fictional character and a soap character
  ?child dbo:childOf ?spaulding ;
         a dbo:FictionalCharacter, dbo:SoapCharacter .

  # Identify the father of this child
  ?father dbo:child ?child .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
783,10,train,"Give me the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Ebony Reigns""@en .
  FILTER (LANG(?person) = 'en') .
  OPTIONAL { ?person dbo:artist true . }
  OPTIONAL { ?person dbo:musicalArtist true . }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
77,1,train,Give me the force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  dbr:Alexander_I_of_Russia dbo:commander ?conflict .
}
```",1,1,2,1,1,3,2,20,0,0,25,0,0.0,0
115,1,train,Give me the alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:Jorge_Sotomayor_Tello a dbo:Person .
  dbr:Jorge_Sotomayor_Tello dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
429,3,train,"Give me the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event a dbo:MilitaryOperation .
  ?event rdfs:label ""Camden Expedition""@en .
  
  ?militaryForce dbo:participatedIn ?event .
  ?militaryForce a dbo:MilitaryUnit .
}
```",1,2,2,1,1,2,2,9,0,0,22,0,0.0,0
285,6,train,Give me the parent of Alexander Onassis and spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfAlexanderOnassis ?spouseOfAristotleOnassis WHERE {
  # Find the parent of Alexander Onassis
  ?child a dbo:Person ;
         rdfs:label ""Alexander Onassis""@en .
  ?parentOfAlexanderOnassis dbo:parent ?child .

  # Find the spouse of Aristotle Onassis
  ?aristotleOnassis a dbo:Person ;
                    rdfs:label ""Aristotle Onassis""@en .
  ?spouseOfAristotleOnassis dbo:spouse ?aristotleOnassis .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
645,8,train,Give me the alma mater of the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?child dbo:parent dbr:Richard_Pankhurst .
  ?child a dbo:Person .
  ?child dbo:almaMater ?almaMater .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
328,4,train,"Give me the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape a dbo:Person .
  dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
617,15,train,"Who is the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?antiochus2 dbo:type dbo:Monarch ;
              rdfs:label ""Antiochus II Theos""@en .
  
  ?successor dbo:successorOf ?antiochus2 ;
             a dbo:Monarch .

  ?successor dbo:child ?child .
  ?child a dbo:Monarch .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
754,10,train,Give me the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Ram_Khamhaeng_the_Great dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
356,3,train,Give me the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorSeason WHERE {
  ?team a dbo:SportsTeam ;
        foaf:name ""Sacramento Republic FC""@en .
  
  ?season1 dbo:team ?team ;
           dbo:year ""2014""^^xsd:gYear .
  
  ?season2 dbo:team ?team ;
           dbo:year ""2015""^^xsd:gYear .

  FILTER (?season2 != ?season1)
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
996,8,train,Give me the entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?recipient WHERE {
  VALUES ?ekremAkurgal { dbr:Ekrem_Akurgal }
  
  ?ekremAkurgal dbo:award ?award .
  ?award dbo:recipient ?recipient .
  FILTER (?ekremAkurgal != ?recipient)
}
```",2,2,3,2,1,3,2,20,0,0,292,0,0.0,0
778,2,train,"Give me the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personLabel WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:United_States .
  ?person dbp:WolfPrizeInMedicine ?prize .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
801,6,train,"Give me the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work a dbo:MusicalWork .
  ?work a dbo:Song .
  ?work dbo:artist dbr:50_Cent .
}
```",1,4,2,1,1,3,3,71,30,20,28,0.6,0.5172413793103449,0.5555555555555556
488,15,train,"Who is the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?saito a dbo:Person ;
         rdfs:label ""Saitō Hajime""@en .
  
  ?saito dbo:commanderOf ?war .

  ?war a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
981,8,train,"Give me the birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> """"@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace ?birthPlace .
  ?person dbo:wikiPageWikiLink dbr:Category:Beauty_queens .
}
```",2,3,3,2,1,3,2,20,0,0,170,0,0.0,0
547,14,train,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:honoursReceived dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  OPTIONAL { ?person dbo:burialPlace ?restingPlace . }
}
```",2,2,3,2,1,3,3,71,0,0,28,0,0.0,0
64,6,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone ?tz .
  FILTER (str(?tz) = ""Central European Time"")
}
```",2,3,3,2,1,2,2,9,0,0,173261,0,0.0,0
666,6,train,Give me the figure known as The Three Lions and player in Steve Bruce.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Link to the England national football team (The Three Lions)
  ?team dbr:England_national_football_team ;
        dbo:member ?player .
  FILTER (?player = ?person) .

  # Association with Steve Bruce
  OPTIONAL { 
    ?manager a dbo:Person ; 
             rdfs:label ""Steve Bruce""@en .
    ?association dbo:manager ?manager ;
                 dbo:managedBy ?player .
    FILTER (?player = ?person)
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,7,train,Give me the band member of Guns N' Roses and band of Newsted.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find band members of Guns N' Roses
SELECT ?member WHERE {
  ?band a dbo:MusicalArtist ;
        rdfs:label ""Guns N' Roses""@en .
  ?band dbo:bandMember ?member .
}

UNION

# Query to find the band associated with Newsted (James Hetfield)
SELECT ?band WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Newsted""@en .
  ?person dbo:member ?band .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,4,train,Who is the commander in Boshin War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Boshin_War a dbo:Battle .
  dbr:Boshin_War dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,26,0,0.0,0
142,1,train,Give me the birthplace of George Tokoro.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplace WHERE {
  dbr:George_Tokoro a dbo:Person .
  dbr:George_Tokoro dbo:birthPlace ?birthplace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
339,10,train,Who is the child of the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  ?parent dbo:child dbr:Princess_Olga_of_Greece_and_Denmark .
  ?parent dbo:child ?grandchild .
}
```",2,2,3,2,1,3,2,20,3,0,0,1.0,1.0,1.0
659,3,train,"Give me the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Kingdom_of_Ireland .
  ?person dbo:officeHolderOf ?office .
}
```",1,2,2,1,1,3,3,71,0,0,23,0,0.0,0
161,2,train,Give me the commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?campaign a dbo:MilitaryConflict .
  ?campaign rdfs:label ""Biscay Campaign""@en .
  ?campaign dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
435,8,train,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  ?figure dbo:nationality dbr:Iceland .
  ?figure dbo:administers ?territory .
  ?territory a (dbo:Settlement|dbo:Town) .
  FILTER EXISTS { ?territory dbo:country dbr:Iceland }
}
```",2,5,3,2,1,2,3,28,0,0,2,0,0.0,0
54,6,train,Give me the child of Narapati I of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Narapati_I_of_Ava a dbo:Person .
  dbr:Narapati_I_of_Ava dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
345,2,train,"Give me the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?player a dbo:SoccerClub .
  ?player a dbo:Organization .
  ?player a dbo:SportsTeam .
  ?player dbo:member ?armandoHeeb .
  ?armandoHeeb foaf:name ""Armando Heeb""@en
}
```",1,4,2,1,1,3,2,20,0,0,8,0,0.0,0
314,5,train,"Give me the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  dbr:Lisa_Gavrić a dbo:Person .
  dbr:Lisa_Gavrić dbo:occupation ?profession .
  ?profession a dbo:Event ;
              a dbo:SocietalEvent .
}
```",1,3,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
801,2,train,Give me the associated musical artist of Chris Taylor (music producer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?producer a dbo:Person ;
            rdfs:label ""Chris Taylor (music producer)""@en .
  OPTIONAL { ?producer dbo:associatedBand ?band . }
  OPTIONAL { ?producer dbo:associatedMusicalArtist ?artist . }
}
```",1,1,2,1,1,3,3,71,7,0,0,1.0,1.0,1.0
64,0,train,Give me the alma mater of Jovan Hristić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:Jovan_Hristi? a dbo:Person .
  dbr:Jovan_Hristi? dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
339,0,train,Give me the child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:George_I_of_Greece a dbo:Person .
  dbr:George_I_of_Greece dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,7,0,0,1.0,1.0,1.0
48,5,train,"Give me the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?work a dbo:Film .
  ?work rdfs:label ""Honor Up""@en .
  ?work dbo:starring ?actor .
  ?actor a dbo:Actor ;
         a dbo:MusicalArtist .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
54,8,train,"Give me the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent a dbo:Person ;
          foaf:name ""Thihapate of Mohnyin""@en .
  
  ?child dbo:parent ?parent ;
         a dbo:RoyalFamilyMember, dbo:OfficeHolder .

  FILTER (str(?parent) = str(dbr:Thihapate_of_Mohnyin))
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
184,8,train,Give me the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Archduke_Joseph_Francis_of_Austria dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
294,4,train,Who is the architect of P. D. Houston Jr. House?,SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?architect WHERE {
  dbr:P._D._Houston_Jr._House a dbo:Building .
  dbr:P._D._Houston_Jr._House dbo:architect ?architect .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
161,15,train,"Give me the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force WHERE {
  ?event a dbo:Conflict ;
         a dbo:SocietalEvent ;
         dbo:place dbr:Francoist_Spain .
  
  ?force dbo:participatedIn ?event .
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
356,1,train,Give me the team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mark Briggs""@en .
  ?person dbo:team ?team .
}
```",1,1,2,1,1,3,2,20,1,14,4,0.06666666666666667,0.2,0.1
378,15,train,Who is the person born as the birth name of Carl Pontus Gahn?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Carl Pontus Gahn""@en .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
963,4,train,Give me the location for 21205.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?place WHERE {
  ?place a dbo:Place .
  ?place dbo:postalCode ""21205"" .
}
```",1,1,2,1,1,3,2,20,5,0,1,1.0,0.8333333333333334,0.9090909090909091
666,0,train,Give me the player in Steve Bruce.,SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  ?team a dbo:SoccerClub .
  ?team dbo:manager ?manager .
  ?manager foaf:name ""Steve Bruce""@en .
  ?team dbo:player ?player .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
30,3,train,Give me the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?occupation WHERE {
  ?person a dbo:Person ;
          foaf:name ""Édouard Alphonse James de Rothschild""@en .
  OPTIONAL { ?person dbo:occupation ?occupation . }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
767,5,train,Give me the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  dbr:George_Kilbon_Nash dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
232,3,train,Give me the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Jon_Pertwee a dbo:Person .
  dbr:Jon_Pertwee dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
55,10,train,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find members of the San Francisco Symphony
  ?symphony a dbo:MusicalArtist ;
            rdfs:label ""San Francisco Symphony""@en .
  
  ?member dbo:memberOf ?symphony ;
          a dbo:Person .

  # Ensure the member is also part of another band or group
  ?member dbo:memberOf ?otherGroup .
  FILTER(?otherGroup != ?symphony)
}
```",2,4,3,2,1,2,3,28,0,0,15,0,0.0,0
696,5,train,Give me the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Nie_Rongzhen a dbo:Person .
  dbr:Nie_Rongzhen dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,3,2,0.0,0.0,0
701,7,train,"Give me the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Perire""@en .
  
  ?battle dbo:commander ?commander .
  ?commander a dbo:Person .

  OPTIONAL { 
    ?commander dbo:royalFamilyMember ?family .
    FILTER EXISTS { ?family a dbo:RoyalFamily }
  }

  SERVICE <http://dbpedia.org/sparql> {
    ?battle rdfs:label ?label .
    FILTER (lang(?label) = ""en"" && regex(str(?label), ""Battle of Perire""))
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
314,11,train,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  dbr:Lisa_Gavrić a dbo:Person .
  ?event dbo:eventType ?eventType .
  ?event dbo:societalEvent ?societalEvent .
  ?profession dbo:role ""commander"" .
  ?profession dbo:person dbr:Lisa_Gavrić .
  ?profession dbo:event ?event .
}
```",2,4,3,2,1,2,3,28,0,0,28,0,0.0,0
281,17,train,"Give me the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?profession WHERE {
  ?person a dbo:Person .
  ?person dbo:officeHolder ?office .
  ?person dbo:occupation ?profession .
  ?person dbo:memberOf dbr:New_Zealand_Army .
  FILTER EXISTS { ?office dbo:position ""politician"" . }
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
10,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?occupation WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation .
}
```",1,1,2,1,1,2,3,28,27080,528738,12560,0.048720984207060586,0.6831483350151363,0.09095519751183123
645,7,train,"Give me the entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?residence WHERE {
  ?person rdfs:label ""James Wilkes Maurice""@en .
  ?person a dbo:Person .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbpedia-owl:Country .
}
```",2,3,3,2,1,3,2,20,0,0,42999,0,0.0,0
421,4,train,Give me the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Samir_Bekrić a dbo:Person .
  dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
421,8,train,Give me the band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  ?awardee a dbo:Person .
  ?award dbo:recipient ?awardee .
  ?band dbo:member ?bandMember .
  ?bandMember dbo:memberOf ?band .
  ?band dbo:award ?award .
}
```",2,2,3,2,1,2,3,28,0,0,582,0,0.0,0
232,2,train,Give me the native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:London .
}
```",1,1,2,1,1,3,3,71,8935,0,4,1.0,0.9995525226535407,0.9997762112565738
92,3,train,Give me the name of Nevermore (2006 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?filmName WHERE {
  ?film a dbo:Film .
  ?film rdfs:label ""Nevermore""@en .
  OPTIONAL { ?film dbo:releaseDate ?date . FILTER (YEAR(?date) = 2006) }
  BIND(COALESCE(STR(?film), """") AS ?filmName)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
528,5,train,Give me the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work a dbo:CreativeWork .
  ?work dbo:datePublished ?date .
  FILTER (MONTH(?date) = 1 && DAY(?date) = 9)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,16,train,"Give me the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?polishHorse a dbo:MilitaryUnit ;
               a dbo:Organization .
  ?polishHorse rdfs:label ""Polish Horse""@en .

  ?polishHorse dbo:participatedIn ?war .
  ?war a dbo:Event .
}
```",2,6,3,2,1,3,3,71,0,0,19,0,0.0,0
328,8,train,"Give me the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Joseph_Stalin a dbo:Person .
  dbr:Joseph_Stalin dbo:office ?office .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
427,10,train,Give me the reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Romano Prodi""@en .
  ?person dbo:partyAffiliation dbr:Partito_Popolare_Italiano .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
981,10,train,"Who is the person born, that is a beauty queen, as the author of Kamikaze Girls?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the author of ""Kamikaze Girls""
  ?book dbo:author ?person .
  ?book rdfs:label ""Kamikaze Girls""@en .

  # Check if this person is a beauty queen
  OPTIONAL { ?person dbo:title ""Miss Universe"" } .
  OPTIONAL { ?person dbo:title ""Miss World"" } .
  OPTIONAL { ?person dbo:title ""Miss International"" } .

  # Ensure the person has a birth date (to confirm they are a real person)
  ?person dbo:birthDate ?date .
}
```",2,3,3,2,1,3,2,20,0,0,120,0,0.0,0
328,1,train,Give me the commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Commanders on the Soviet side
  OPTIONAL { 
    ?sovietCommander a dbo:Person .
    ?sovietCommander dbo:commanderOfMilitaryUnit dbr:Eastern_Front_(World_War_II) .
    BIND(?sovietCommander AS ?person)
  }
  
  # Commanders on the German side
  OPTIONAL { 
    ?germanCommander a dbo:Person .
    ?germanCommander dbo:commanderOfMilitaryUnit dbr:Eastern_Front_(World_War_II) .
    BIND(?germanCommander AS ?person)
  }
}
```",1,1,2,1,1,3,3,71,0,0,63,0,0.0,0
318,0,train,Give me the person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1970)
}
```",1,1,2,1,1,2,2,9,2287,8271,523,0.21661299488539495,0.8138790035587189,0.3421603830041891
404,6,train,"Who is the child, that is a royalty, of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:child ?child .
  ?child a dbo:Person .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
339,7,train,Give me the child of the child of Christian IX of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Identify Christian IX
  dbr:Christian_IX_of_Denmark a dbo:Person .
  
  # Find his children
  ?child dbo:parent dbr:Christian_IX_of_Denmark ;
         a dbo:Person .

  # Find the grandchildren (children of his children)
  ?grandchild dbo:parent ?child ;
              a dbo:Person .
}
```",2,2,3,2,1,3,2,20,29,2,3,0.9354838709677419,0.90625,0.9206349206349206
492,2,train,Give me the person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Algiers .
}
```",1,1,2,1,1,3,3,71,122,0,0,1.0,1.0,1.0
959,9,train,Give me the native of Japan and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Japan .
  ?person dbo:almaMater dbr:University_of_Tsukuba .
}
```",2,2,3,1,2,3,3,71,0,3,84,0.0,0.0,0
48,1,train,Give me the band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Murda_Mook a dbo:Person .
  ?band dbo:memberOfBand dbr:Murda_Mook .
}
```",1,1,2,1,1,3,2,20,0,0,10,0,0.0,0
392,6,train,Give me the region of Central European Time and entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?entity WHERE {
  ?region dbo:timeZone dbr:Central_European_Time .
  ?entity dbo:country dbr:Italy .
}
```",2,2,3,1,2,2,3,28,513,49498,0,0.010257743296474775,1.0,0.020307180745784182
427,6,train,Who is the father of Lamberto Andreotti?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Lamberto_Andreotti a dbo:Person .
  dbr:Lamberto_Andreotti dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,14,train,Give me the spouse of the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?merneptah a dbo:Person ;
             rdfs:label ""Merneptah""@en .
  
  ?merneptah dbo:father ?father .

  ?father dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
404,2,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Ernest_Augustus,_Crown_Prince_of_Hanover a dbo:Person .
  ?child dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
48,8,train,"Give me the band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?actor a dbo:Person ;
         rdfs:label ""Honor Up""@en .
  
  ?actor dbo:actor ?role .

  ?band a dbo:MusicalArtist ;
        dbo:bandMember ?actor .

}
```",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
184,14,train,Give me the parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?child dbo:child dbr:Archduke_Joseph_Francis_of_Austria .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,4,2,0.0,0.0,0
318,6,train,Give me the professional in the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?profession (GROUP_CONCAT(DISTINCT ?otherPerson; separator="", "") AS ?others) WHERE {
  # Find Robert Xavier Rodriguez's profession
  VALUES ?robert { dbr:Robert_Xavier_Rodriguez }
  
  ?robert a dbo:Person .
  ?robert dbo:occupation ?profession .

  # Find other professionals in the same field
  ?otherPerson a dbo:Person .
  ?otherPerson dbo:occupation ?profession .
  FILTER(?otherPerson != ?robert)
}
GROUP BY ?profession
```",2,2,3,2,1,2,2,9,0,2,1942,0.0,0.0,0
996,5,train,Give me the award of Ekrem Akurgal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Ekrem_Akurgal a dbo:Person .
  dbr:Ekrem_Akurgal dbo:honoraryTitle ?award .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
617,10,train,"Give me the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?richeza a dbo:Person ;
           rdfs:label ""Richeza of Poland""@en .
  ?richeza dbo:father ?father .
  ?father a dbo:Royalty .
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
281,9,train,"Give me the entity in Colony of New Zealand and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .
  
  OPTIONAL { 
    ?event dbo:location dbr:Colony_of_New_Zealand ;
           dbo:agent ?person ;
           a dbo:MilitaryConflict .
    BIND(?event AS ?war)
  }
}
```",2,2,3,1,2,3,3,71,0,1,1,0.0,0.0,0
339,5,train,Who is the child of Grand Duchess Elena Vladimirovna of Russia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Grand_Duchess_Elena_Vladimirovna_of_Russia dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
801,3,train,Give me the true self of The Shadow.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?trueSelf WHERE {
  dbr:The_Shadow dbo:basedOn ?trueSelf .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
783,6,train,Give me the band member of Ebony Reigns and associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Find band members of Ebony Reigns
  OPTIONAL {
    dbr:Ebony_Reigns dbo:bandMember ?bandMember .
  }
  
  # Find associated musical artists of Appietus
  OPTIONAL {
    dbr:Appietus dbo:associatedBand ?associatedArtist .
  }
}
```",2,2,3,1,2,3,2,20,1,14,0,0.06666666666666667,1.0,0.125
696,1,train,Give me the landmark at elevation of 50.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark .
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ""50""^^xsd:integer)
}
```",1,1,2,1,1,3,2,20,0,0,599,0,0.0,0
391,15,train,"Give me the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?figure ?nickname WHERE {
  ?figure a dbo:Person .
  ?figure dbo:birthPlace dbr:Jackson,_Tennessee .
  OPTIONAL { ?figure rdfs:label ?nickname FILTER (lang(?nickname) = 'en') }
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
184,9,train,Give me the child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?child a dbo:Person .
  ?child dbo:parent dbr:Archduke_Joseph_August_of_Austria .
  
  ?person a dbo:Person .
  ?person dbo:parent dbr:Géza_von_Habsburg .

  FILTER (?child = ?person)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
44,6,train,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Queensrÿche a dbo:Band .
  ?member dbo:bandMember dbr:Queensrÿche .
}
```",2,4,3,2,1,2,2,9,0,0,13,0,0.0,0
485,7,train,Give me the entity in United Kingdom and entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ukEntity ?nottinghamshireEntity WHERE {
  ?ukEntity a dbo:Country ;
            rdfs:label ""United Kingdom""@en .
  
  ?nottinghamshireEntity a dbo:County ;
                         rdfs:label ""Nottinghamshire""@en ;
                         dbo:country ?ukEntity .
}
```",2,2,3,1,2,2,3,28,0,0,357,0,0.0,0
747,14,train,Give me the band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Tracey Elizabeth McSween"" .
  OPTIONAL { ?person dbo:band ?band . }
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
314,8,train,Give me the person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Headquarters_of_the_House_of_Sombrerete .
}
```",2,2,3,2,1,2,3,28,0,0,34,0,0.0,0
328,15,train,Give me the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?campaign a dbo:MilitaryConflict ;
            rdfs:label ""Volcano and Ryukyu Islands campaign""@en .
  
  ?award dbo:awardedTo ?person ;
         dbo:partOf ?campaign .

  FILTER (CONTAINS(LCASE(?award), ""commander""))
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
314,9,train,Give me the commander in Spanish Civil War and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Condition for being a commander in the Spanish Civil War
  ?conflict dbo:name ""Spanish Civil War""@en ;
            dbo:commander ?person .

  # Condition for receiving the 30th Order
  ?person dbo:award dbr:Order_of_the_Red_Banner ; # Assuming this is the award, replace with correct resource if different

  FILTER (EXISTS { ?conflict a dbo:MilitaryConflict . })
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
328,6,train,Give me the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  dbr:Ferenc_Szálasi a dbo:Person .
  dbr:Ferenc_Szálasi dbo:leaderOf ?force .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
827,6,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify William Ernest
  dbr:William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:father ?father .
  
  # Ensure the father is also a child of Charles Alexander
  ?father dbo:child dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,0,train,Give me the entity in Baden-Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbo:location dbr:Baden-Württemberg .
}
```",1,1,2,1,1,3,3,71,0,46,60,0.0,0.0,0
161,7,train,Who is the figure known as El Director?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
  OPTIONAL { ?person foaf:nick ?nick . FILTER (?nick = ""El Director"") }
}
```",1,1,2,1,1,3,3,71,1,2087818,0,4.789687228634283e-07,1.0,9.579369869050012e-07
10,3,train,"Give me the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Matt Colton"" .
  ?person dbo:occupation dbo:Artist .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
345,10,train,"Who is the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Get Eiður Guðjohnsen's birth date
  BIND(dbr:Eiður_Guðjohnsen AS ?eiður)
  ?eiður dbo:birthDate ?eiðurBirthDate .

  # Step 2: Find a person who is both a soccer player and manager, born on the same date
  ?person a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          dbo:birthDate ?birthDate .
  
  FILTER (?birthDate = ?eiðurBirthDate)
}
```",2,4,3,2,1,3,2,20,3,0,0,1.0,1.0,1.0
184,1,train,Give me the child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Archduke_Joseph_August_of_Austria dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
666,4,train,"Give me the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://xmlns.com/foaf/0.1/name> ""England""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organisation WHERE {
  ?organisation a dbo:SoccerClub ;
                a dbo:SportsTeam ;
                a dbo:Organization .
  ?organisation dbo:country dbr:England .
}
```",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
712,6,train,Give me the resting place of Nina Onilova and capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace ?capital WHERE {
  # Find the resting place of Nina Onilova
  ?person a dbo:Person ;
          foaf:name ""Nina Onilova""@en .
  OPTIONAL { 
    ?person dbo:deathPlace ?restingPlace .
  }
  
  # Find the capital of South Russia (1919–1920)
  ?region rdfs:label ""South Russia""@en ;
          dbo:capital ?capital .
  FILTER(YEAR(?date) >= 1919 && YEAR(?date) <= 1920)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
16,3,train,Give me the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Ted_McGinley a dbo:Person .
  dbr:Ted_McGinley dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
528,4,train,Give me the military force of Battle of Pisagua.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?combatant WHERE {
  dbr:Battle_of_Pisagua dbo:combatant ?combatant .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
838,9,train,"Give me the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  # Identify the band associated with Žika Jelić
  dbr:Žika_Jelić dbo:member ?band .
  
  # Find members of this band who are both artists and musical artists
  ?member dbo:member ?band ;
          a dbo:Person, dbo:Artist, dbo:MusicalArtist .
}
```",2,6,3,2,1,3,2,20,0,0,4,0,0.0,0
801,14,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musicalArtist WHERE {
  # Find the writer of ""40 Dayz & 40 Nightz""
  ?song a dbo:Song ;
        rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  ?writer dbo:lyricsBy ?song .

  # Find associated musical artists
  ?musicalArtist dbo:associatedBandMember ?writer ;
                 a dbo:MusicalArtist, dbo:Artist .
}
```",2,4,3,2,1,3,3,71,0,0,50,0,0.0,0
232,1,train,Give me the actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:Dog_Soldiers_(film) dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
92,15,train,"Give me the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?film a dbo:Film .
  ?film rdfs:label ""Nevermore (2006 film)""@en .
  ?film dbo:reference ?artist .
  ?artist a dbo:Artist .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
312,5,train,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity a dbo:Settlement .
  ?entity a dbo:Region .
  ?entity a dbo:State .
  ?entity dbo:nationality dbr:Italy .
  
  OPTIONAL { 
    ?politicalRole dbo:memberOf dbr:Democratic_Party_(Italy) .
    ?politicalRole dbo:officeHolder ?entity .
  }
}
```",2,6,3,2,1,2,2,9,0,0,587,0,0.0,0
177,2,train,Give me the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  dbr:Alexander_Gamelin a dbo:Person .
  dbr:Alexander_Gamelin dbo:residence ?residence .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
959,16,train,"Give me the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residence WHERE {
  ?event dbo:eventType dbr:2010_Japanese_House_of_Councillors_election .
  ?politician dbo:role dbr:Leader ;
              a dbo:Politician ;
              dbo:associatedWithEvent ?event .
  ?politician dbo:residence ?residence .
  FILTER (?residence != dbr:Japan) # Assuming the leader is not Japan itself
  ?residence a dbo:Country .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
182,3,train,Give me the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  dbr:2019_Sri_Lanka_Easter_bombings dbo:perpetrator ?person .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
10,7,train,Give me the professional in  and associated musical artist of Matt Colton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?associatedArtist WHERE {
  VALUES ?person { dbr:Matt_Colton }
  
  ?person a dbo:Person .
  OPTIONAL { ?person dbo:occupation ?profession . }
  OPTIONAL { ?person dbo:associatedBand ?band . }
  OPTIONAL { ?band dbo:member ?artist . BIND(?artist AS ?associatedArtist) }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
696,3,train,Who is the member of Dropkick Murphys?,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  dbr:Dropkick_Murphys a dbo:Band .
  ?person dbo:bandMember dbr:Dropkick_Murphys .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
285,3,train,Who is the child of Tina Onassis Niarchos?,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Tina_Onassis_Niarchos a dbo:Person .
  ?child dbo:parent dbr:Tina_Onassis_Niarchos .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
617,13,train,Give me the spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?child dbo:parent dbr:Antiochus_III_the_Great .
  ?child a dbo:Person .
  ?spouse dbo:spouse ?child .
}
```",2,2,3,2,1,3,3,71,3,0,2,1.0,0.6,0.7499999999999999
994,7,train,Give me the persona of Don Dokken.,SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation WHERE {
  dbr:Don_Dokken a dbo:Person .
  dbr:Don_Dokken dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
754,0,train,Give me the parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Loe_Thai a dbo:Person .
  dbr:Loe_Thai dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
77,2,train,Give me the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Maxim_Grigorievich_Vlasov a dbo:Person .
  dbr:Maxim_Grigorievich_Vlasov dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,8,0,0,1.0,1.0,1.0
314,2,train,Give me the commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  ?commander a dbo:Person .
  ?commander dbo:militaryCommanderOf ?unit .
  ?event dbo:participatedIn dbr:Spanish_Civil_War .
  ?commander dbo:participatedIn ?event .
}
```",1,1,2,1,1,2,3,28,0,0,28,0,0.0,0
959,1,train,Give me the native of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Japan .
}
```",1,1,2,1,1,3,3,71,8417,0,2,1.0,0.9997624420952608,0.9998812069375148
534,3,train,"Who is the child, that is a politician and an office holder, of Desmond FitzGerald (politician)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbr:Desmond_FitzGerald_(politician) .
  ?person dbo:child ?child .
  
  ?child a dbo:Person .
  ?child dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(?occupation), ""politician"") || CONTAINS(LCASE(?occupation), ""office holder""))
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
365,6,train,Give me the reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?realName WHERE {
  dbr:The_Blasters a dbo:Band .
  OPTIONAL { dbr:The_Blasters rdfs:label ?realName . }
  FILTER (lang(?realName) = ""en"")
}
```",2,2,3,2,1,2,2,9,0,1,1,0.0,0.0,0
360,3,train,"Give me the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/property/author> ""Dave Flett""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  dbr:Dave_Flett a dbo:Person .
  ?album dbo:artist dbr:Dave_Flett .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
54,7,train,Give me the reference to Thihapate of Mohnyin.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resource WHERE {
  { 
    ?resource rdfs:label ""Thihapate of Mohnyin""@en .
  } UNION {
    ?redirect dbo:wikiPageRedirects ?resource .
    ?redirect rdfs:label ""Thihapate of Mohnyin""@en .
  }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
356,10,train,"Give me the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativePerson WHERE {
  # Step 1: Identify Gary Williams (footballer, born 1960)
  ?gary a dbo:SoccerPlayer ;
        dbo:birthDate ?date ;
        rdfs:label ""Gary Williams""@en .
  
  FILTER(YEAR(?date) = 1960)

  # Step 2: Determine his birth place
  ?gary dbo:birthPlace ?birthPlace .

  # Step 3: Filter for English Settlements
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:England .
  
  # Step 4: Find native soccer players and managers from that place
  ?nativePerson a dbo:SoccerPlayer, dbo:SoccerManager ;
                dbo:birthPlace ?birthPlace .
}
```",2,6,3,2,1,3,2,20,0,0,17,0,0.0,0
429,1,train,Give me the country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:77th_Ohio_Infantry_Regiment a dbo:MilitaryUnit .
  dbr:77th_Ohio_Infantry_Regiment dbo:country ?country .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
48,2,train,"Give me the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Shellback a dbo:Person .
  dbr:Shellback dbo:work ?work .
}
```",1,2,2,1,1,3,2,20,0,0,57,0,0.0,0
281,5,train,"Who is the leader, that is a politician, of 1962 New South Wales state election?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  dbr:1962_New_South_Wales_state_election a dbo:Election .
  dbr:1962_New_South_Wales_state_election dbo:leader ?leader .
  ?leader a dbo:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
281,2,train,Give me the war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:New_Zealand_Army dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
179,4,train,Who is the parent of Vajiralongkorn?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Vajiralongkorn a dbo:Person .
  ?parent dbo:child dbr:Vajiralongkorn .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
328,16,train,Give me the force of the person decedent at Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Budapest .
}
```",2,2,3,2,1,3,3,71,0,1147,23,0.0,0.0,0
64,5,train,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?almaMater WHERE {
  ?person a dbo:Person .
  ?person rdf:type dbo:Writer .
  ?person dbo:deathPlace dbr:Sremska_Kamenica .
  ?person dbo:almaMater ?almaMater .
}
```",2,3,3,2,1,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
767,15,train,"Give me the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration WHERE {
  # Find Dustin Lynch and his album ""Where It's At""
  ?album dbo:artist dbr:Dustin_Lynch ;
         rdfs:label ?albumLabel .
  
  FILTER(CONTAINS(LCASE(?albumLabel), ""where it's at"")).

  # Find writers of the album
  ?track dbo:composer ?writer .

  # Get administration related to the writer
  ?writer dbo:recordLabel ?administration .

  # Ensure the administration is a settlement
  ?administration a dbo:Settlement .
}
```",2,3,3,2,1,3,3,71,0,0,31,0,0.0,0
251,5,train,Give me the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?work dbo:title ""The Twelve Abbots of Challant""@en .
  ?work dbo:creator ?author .
  ?author a dbo:Person .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
314,1,train,Give me the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Award_30 .
}
```",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
184,12,train,Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the parent of Archduchess Ilona of Austria
  ?parent dbo:child dbr:Archduchess_Ilona_of_Austria .
  
  # Ensure this person is also a child of Archduke Joseph August of Austria
  ?parent dbo:parent dbr:Archduke_Joseph_August_of_Austria .

  BIND(?parent AS ?person)
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
328,5,train,Who is the person decedent at Budapest?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Budapest .
}
```",1,1,2,1,1,3,3,71,1147,0,0,1.0,1.0,1.0
184,11,train,Give me the parent of the native of Budapest.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Budapest .
  ?person dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,6,13,13,0.3157894736842105,0.3157894736842105,0.3157894736842105
617,8,train,Who is the child of Antiochus (son of Antiochus III the Great)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Antiochus_(son_of_Antiochus_III_the_Great) a dbo:Person .
  ?child dbo:parent dbr:Antiochus_(son_of_Antiochus_III_the_Great) .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
492,11,train,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?work dbo:employee ?person .
  ?work dbo:title ""Assistant Secretary of State for African Affairs""@en .
  ?work dbo:employee dbr:Joseph_C._Satterthwaite .
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
645,2,train,Give me the commander in Battle of Diamond Rock.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Battle_of_Diamond_Rock a dbo:Battle .
  dbr:Battle_of_Diamond_Rock dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
16,1,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor a dbo:Actor .
} UNION {
  ?actress a dbo:Actress .
}
```",1,1,2,1,1,3,3,71,0,0,19241,0,0.0,0
498,1,train,Give me the band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Will_Rahmer a dbo:Person .
  dbr:Will_Rahmer dbo:musicalBand ?band .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
747,7,train,Give me the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?name ?birthDate ?occupation WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Shèna""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:occupation ?occupation . }
  BIND(""Shèna"" AS ?name)
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
915,6,train,"Give me the father of Lizzie Spaulding and resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?lizzie a dbo:Person ;
          foaf:name ""Lizzie Spaulding""@en .
  ?lizzie dbo:father ?father .

  OPTIONAL { ?father dbo:residence dbr:Springfield,_Illinois . }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
161,0,train,Give me the military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?war a dbo:War .
  ?war rdfs:label ""Rif War""@en .
  ?war dbo:militaryForce ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,56,0,0.0,0
179,2,train,"Who is the child, that is a royalty, of Nakkhatra Mangala?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Nakkhatra_Mangala dbo:child ?child .
  ?child a dbo:Person .
  OPTIONAL { ?child dbo:royalTitle ?title . FILTER EXISTS { ?title } }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
356,0,train,Give me the player in 2015 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  ?team a dbo:Team .
  ?team rdfs:label ""Sacramento Republic FC""@en .
  ?roster dbo:member ?player .
  ?roster dbo:team ?team .
  FILTER(CONTAINS(LCASE(STR(?roster)), ""2015""))
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
54,3,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Thinkhaya_of_Pagan dbo:parent ?child .
}
```",1,1,2,1,1,3,3,71,0,1,3,0.0,0.0,0
9,4,train,"Who is the mayor, that is a politician, of Northern Ireland Forum?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  ?forum a dbo:PoliticalBody ;
         rdfs:label ""Northern Ireland Forum""@en .
  
  ?forum dbo:leader ?mayor .
  ?mayor rdf:type dbo:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
626,4,train,Who is the military force of Battle of Borodino?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  dbr:Battle_of_Borodino dbo:participatedIn ?event .
  ?event dbo:militaryUnit ?militaryForce .
}
```",1,1,2,1,1,3,2,20,0,0,52,0,0.0,0
10,9,train,Give me the professional in  and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?band WHERE {
  VALUES ?lukeVibert { dbr:Luke_Vibert }
  
  ?lukeVibert a dbo:Person .
  
  OPTIONAL {
    ?lukeVibert dbo:occupation ?profession .
  }
  
  OPTIONAL {
    ?lukeVibert dbo:memberOfBand ?band .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
485,4,train,"Who is the awardee, that is a writer and a poet, of Eric Gregory Award?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation dbo:Writer ;
          dbo:occupation dbo:Poet .
  ?award dbr:Eric_Gregory_Award .
  ?person dbo:honoraryTitle ?award .
}
```",1,3,2,1,1,2,3,28,0,0,7,0,0.0,0
783,2,train,Give me the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person rdfs:label ?name . }
  FILTER (CONTAINS(LCASE(?name), LCASE(""Samuel Ofori Amponsah"")))
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
182,11,train,Give me the entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find Tamara Kunanayakam's nationality
  dbr:Tamara_Kunanayakam a dbo:Person .
  dbr:Tamara_Kunanayakam dbo:nationality ?nationality .

  # Find other entities with the same nationality
  ?entity a dbo:Person .
  ?entity dbo:nationality ?nationality .
  FILTER (?entity != dbr:Tamara_Kunanayakam)
}
```",2,2,3,2,1,2,3,28,0,860,62,0.0,0.0,0
488,17,train,"Who is the father of the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find Tokugawa Masako
  dbr:Tokugawa_Masako a dbo:Person .
  
  # Identify her spouse
  dbr:Tokugawa_Masako dbo:spouse ?spouse .

  # Ensure the spouse is of royalty (assuming there's a property like royalHouse)
  OPTIONAL { ?spouse dbo:royalHouse ?house . FILTER EXISTS { ?house } }

  # Find the father of this spouse
  ?spouse dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
827,0,train,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?child a dbo:Person .
  ?child dbo:parent dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
92,0,train,Give me the band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Nevermore a dbo:Band .
  ?member dbo:bandMember dbr:Nevermore .
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
115,6,train,Give me the alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?almaMater WHERE {
  ?person a dbo:Person .
  ?award dbo:recipient ?person ;
         rdfs:label ""National Order of Scientific Merit""@en .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",2,2,3,2,1,2,2,9,0,0,5,0,0.0,0
701,2,train,Give me the spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Ramesses_II a dbo:Person .
  dbr:Ramesses_II dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,1,5,0.0,0.0,0
465,6,train,"Give me the administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?politicalParty ?organization WHERE {
  ?leader a dbo:Person .
  ?leader dbo:memberOfParliament ?chamber .
  ?chamber rdfs:label ""Chamber of Deputies of the Czech Republic""@en .
  
  OPTIONAL { ?leader dbo:politicalParty ?politicalParty . }
  OPTIONAL { ?leader dbo:organization ?organization . }

  FILTER (lang(?chamber) = 'en')
}
```",2,4,3,2,1,2,2,9,0,0,50,0,0.0,0
285,8,train,Give me the spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?spouse WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",2,2,3,2,1,3,2,20,3526,296966,623,0.011734089426673588,0.8498433357435526,0.023148558467179402
820,8,train,Give me the child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Find parents of Jason Schwartzman
  ?parent dbo:child dbr:Jason_Schwartzman .
  
  # From each parent, find their children
  ?parent dbo:child ?child .

  # Ensure the child is not Jason Schwartzman himself
  FILTER (?child != dbr:Jason_Schwartzman)
}
```",2,2,3,2,1,3,2,20,1,1,1,0.5,0.5,0.5
778,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a owl:Thing .
  ?entity dbo:country dbr:United_States .
}
```",1,1,2,1,1,3,2,20,1307,58423,11701,0.021881801439812488,0.10047662976629766,0.03593719926310869
161,3,train,Who is the person decedent at Francoist Spain?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace ?place .
  FILTER (
    EXISTS { 
      ?place rdfs:label ?label .
      FILTER (CONTAINS(LCASE(?label), ""spain"") || CONTAINS(LCASE(?label), ""españa""))
    }
  )
}
```",1,1,2,1,1,3,3,71,125,2005,0,0.05868544600938967,1.0,0.11086474501108647
303,6,train,Give me the entity in Panama and party of Guillermo Endara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?endara a dbo:Person ;
          foaf:name ""Guillermo Endara"" ;
          dbo:partyAffiliation ?party .
  
  ?party dbo:country dbr:Panama .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
547,17,train,Give me the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?recipient WHERE {
  # Find Gerald Graham and his associated awards
  ?graham a dbo:Person ;
          foaf:name ""Gerald Graham"" ;
          dbo:award ?award .
  
  # Retrieve the recipients of those awards
  ?award dbo:recipient ?recipient .
}
```",2,2,3,2,1,3,3,71,0,0,2075,0,0.0,0
959,13,train,"Give me the native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Identify Yōichi Masuzoe's resource in DBpedia
  dbr:Yōichi_Masuzoe a dbo:Person .
  
  # Find the residence of Yōichi Masuzoe
  dbr:Yōichi_Masuzoe dbo:residence ?residence .

  # Ensure that the residence is a country
  ?residence a dbo:Country .

  # Retrieve the native place (country) of this residence
  ?residence dbo:nativePlace ?nativePlace .
}
```",2,3,3,2,1,3,3,71,0,0,8419,0,0.0,0
251,3,train,"Give me the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Louis_François_Félix_Musnier a dbo:Person .
  dbr:Louis_François_Félix_Musnier dbo:participatedIn ?war .
  ?war a dbo:MilitaryConflict .
}
```",1,2,2,1,1,2,3,28,0,0,16,0,0.0,0
182,10,train,Give me the war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Gotabhaya_Rajapaksa a dbo:Person .
  ?event dbo:relatedEvent ?war ;
         dbo:agent dbr:Gotabhaya_Rajapaksa .
}
```",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
55,3,train,"Give me the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?song dbo:title ""Used to Love Her"" .
  ?song dbo:producer ?producer .
  ?producer a dbo:Band .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
981,5,train,"Who is the person born, that is a beauty queen, as ?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  ?person dbo:title ?title .
  FILTER (CONTAINS(LCASE(str(?title)), ""beauty queen""))
}
```",1,2,2,1,1,3,2,20,0,1,120,0.0,0.0,0
485,9,train,Give me the entity in Nottinghamshire and birth place of Thomas Warner (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?nottinghamshireEntity WHERE {
  # Find the birth place of Thomas Warner (poet)
  dbr:Thomas_Warner_(poet) a dbo:Person .
  dbr:Thomas_Warner_(poet) dbo:birthPlace ?birthPlace .

  # Find an entity located in Nottinghamshire
  ?nottinghamshireEntity dbo:location dbr:Nottinghamshire .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
783,7,train,Give me the associated musical artist of the band member of Ofori Amponsah.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musicalArtist WHERE {
  ?person rdfs:label ""Ofori Amponsah""@en .
  ?person a dbo:Person .
  ?person dbo:bandMemberOf ?band .
  OPTIONAL { ?band dbo:musicalArtist ?musicalArtist . }
}
```",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
251,8,train,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?location WHERE {
  dbr:Louis_François_Félix_Musnier a dbo:Person .
  ?musnier dbo:participatedIn ?war .
  ?war a dbo:MilitaryConflict ;
       dbp:location ?location .
}
```",2,3,3,2,1,2,3,28,0,0,25,0,0.0,0
345,3,train,Give me the nickname of FC Vaduz.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  dbr:FC_Vaduz a dbo:SportsTeam .
  dbr:FC_Vaduz dbo:nickname ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
92,9,train,Give me the band member of Nevermore and associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?associatedArtist WHERE {
  # Find the band ""Nevermore""
  dbr:Nevermore a dbo:Band .
  
  # Identify members of Nevermore
  ?bandMember dbo:bandMember ?member .
  FILTER (?bandMember = dbr:Nevermore)
  
  # Specifically find Jim Sheppard among these members
  OPTIONAL {
    ?member rdfs:label ""Jim Sheppard""@en .
    
    # Find associated musical artists for Jim Sheppard
    ?member dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
820,10,train,Who is the parent of the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?parent WHERE {
  ?actor a dbo:Actor .
  ?actor dbo:parent ?parent .
}
```",2,2,3,2,1,3,2,20,4,110,917,0.03508771929824561,0.004343105320304018,0.007729468599033817
626,1,train,Give me the awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?award a dbo:Award .
  ?award dbo:name ""Order of St. Andrew""@en .
  ?award dbo:recipient ?person .
}
```",1,1,2,1,1,3,2,20,0,0,33,0,0.0,0
161,11,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?franco a dbo:Person ;
          foaf:name ""Francisco Franco""@en .
  
  ?conflict a dbo:MilitaryConflict ;
            dbo:commander ?franco .

  ?conflict dbo:militaryForce ?militaryForce .
}
```",2,5,3,2,1,3,3,71,0,0,545,0,0.0,0
666,3,train,"Give me the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:SportsTeam ;
        rdfs:label ""Hull City A.F.C.""@en ;
        dbo:season ?season .
  
  ?season dbo:startDate ?startYear ;
          dbo:endDate ?endYear .

  FILTER (YEAR(?startYear) = 2016 && YEAR(?endYear) = 2017)

  ?team dbo:manager ?manager .
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
232,5,train,"Give me the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  ?person dbo:occupation ?occupation3 .

  FILTER (
    (str(?occupation1) = ""Actor"" || str(?occupation1) = ""Actress"") &&
    (str(?occupation2) = ""Narrator"") &&
    (str(?occupation3) = ""Producer"")
  )
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
179,0,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Mom Rajawongse Sirikit Kitiyakara"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
318,1,train,Give me the professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?composer WHERE {
  ?composer a dbo:Composer .
}
```

Alternatively, if we want to include those who are not strictly classified under `dbo:Composer` but have an occupation of composer:

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person dbo:occupation dbr:Composer . }
  FILTER EXISTS { ?person dbo:occupation dbr:Composer . }
}
```",1,1,2,1,1,2,2,9,0,0,1916,0,0.0,0
838,10,train,"Give me the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?band a dbo:Band .
  ?band a dbo:Organization .
  ?band dbo:reference dbr:YU_Grupa .
}
```",2,5,3,2,1,3,2,20,0,0,8,0,0.0,0
9,12,train,Give me the figure known as QUB and alma mater of Allen Hill (scientist).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?qub ?almaMater WHERE {
  # Find the resource for Queen's University Belfast (QUB)
  dbr:Queen%27s_University_Belfast a dbo:EducationalInstitution ;
                                  rdfs:label ""Queen's University Belfast""@en .

  # Find Allen Hill and his alma mater
  ?allenHill a dbo:Person ;
             foaf:name ""Allen Hill"" ;
             dbo:almaMater ?almaMater .
  
  # Bind the QUB resource to a variable for clarity
  BIND(dbr:Queen%27s_University_Belfast AS ?qub)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
9,16,train,"Who is the awardee of the reference, that is an award, to Royal Medals?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Royal_Medal .
}
```",2,3,3,2,1,3,3,71,41,233,4,0.14963503649635038,0.9111111111111111,0.25705329153605017
328,11,train,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape a dbo:Person .
  ?award dbo:recipient ?awardee ;
         dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
}
```",2,2,3,2,1,3,3,71,0,0,1484,0,0.0,0
915,3,train,"Give me the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Stephen_Verona a dbo:Person .
  dbr:Stephen_Verona dbo:birthPlace ?birthPlace .
  FILTER (?birthPlace a dbo:Settlement)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
55,4,train,"Give me the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?band a dbo:MusicalGroup .
  ?person dbo:musicGroupMember ?band .
  ?performance dbo:performerIn ?person ;
              dbo:location dbr:San_Francisco_Symphony .
}
```",1,3,2,1,1,2,3,28,0,0,3,0,0.0,0
345,1,train,Give me the team of Alessandro Mangiarratti.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  dbr:Alessandro_Mangiarratti a dbo:Person .
  dbr:Alessandro_Mangiarratti dbo:team ?team .
}
```",1,1,2,1,1,3,2,20,1,7,1,0.125,0.5,0.2
55,6,train,Give me the band member of Metallica and band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?metallicaMember a dbo:Band ;
                   dbo:bandMember ?person .
  FILTER (STR(?metallicaMember) = ""Metallica"")

  ?gunsNrosesMember a dbo:Band ;
                    dbo:bandMember ?person .
  FILTER (STR(?gunsNrosesMember) = ""Guns_N'_Roses"")
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
827,2,train,"Who is the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:child ?person .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
547,12,train,Give me the resting place of Simon Cadell and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    dbr:Simon_Cadell 
    dbr:Alan_Cunningham_(actor)
  }
  ?person a dbo:Person .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
92,4,train,"Give me the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""Nevermore""@en .
  ?member dbo:associatedBand ?band ;
          a dbo:Person .
  BIND(?member AS ?artist)
}
```",1,2,2,1,1,3,3,71,0,8,1,0.0,0.0,0
378,12,train,"Give me the war of Joaquín Blake and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?joaquinBlakeWar ?crillonFame WHERE {
  # Joaquín Blake's war involvement
  OPTIONAL {
    dbr:Joaqu%C3%ADn_Blake a dbo:Person .
    ?joaquinBlakeWar dbo:participatedIn ?event .
    FILTER (CONTAINS(LCASE(STR(?event)), ""war""))
    BIND(?event AS ?joaquinBlakeWar)
  }

  # Louis des Balbes de Berton de Crillon's claim to fame
  OPTIONAL {
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón a dbo:Person .
    ?crillonFame dbo:famousFor ?achievement .
    FILTER (CONTAINS(LCASE(STR(?achievement)), ""fame""))
    BIND(?achievement AS ?crillonFame)
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
645,1,train,Give me the alma mater of Sylvia Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:Sylvia_Pankhurst a dbo:Person .
  dbr:Sylvia_Pankhurst dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
427,3,train,Give me the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Michele_Pinto dbo:party ?party .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
498,6,train,"Give me the band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find members of the band ""Mortician""
  ?member dbo:member dbr:Mortician .
  
  # Check if this member is also recognized as an artist
  ?member dbo:artist ?artistRole .

  # Determine other bands associated with this member
  ?member dbo:band ?band .
  
  FILTER (?band != dbr:Mortician)
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
44,1,train,Give me the band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Sledgeback a dbo:Band .
  ?member dbo:bandMember dbr:Sledgeback .
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
281,15,train,Who is the awardee of the award of Jonathon Band?,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award .
  ?award dbo:givenBy dbr:Jonathon_Band .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,3,71,0,0,558,0,0.0,0
435,3,train,"Give me the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?town WHERE {
  ?town a dbo:PopulatedPlace .
  ?town dbo:country dbr:Iceland .
  ?town rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""town"") || CONTAINS(LCASE(?label), ""settlement""))
}
```",1,4,2,1,1,2,3,28,0,2,1,0.0,0.0,0
421,10,train,Give me the native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Find Samir Bekrić's birthplace
  dbr:Samir_Bekrić a dbo:Person .
  dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .

  # Find the native place (e.g., capital) of the birthplace
  OPTIONAL { ?birthPlace dbo:capital ?nativePlace }
}
```",2,2,3,2,1,2,3,28,0,1,5492,0.0,0.0,0
659,12,train,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce ?commander WHERE {
  # Part 1: Retrieve military forces involved in the Napoleonic Wars
  ?conflict a dbo:MilitaryConflict ;
            rdfs:label ""Napoleonic Wars""@en .
  
  OPTIONAL { 
    ?conflict dbo:militaryForce ?militaryForce .
  }
  
  # Part 2: Find commander of the Battle of Leipzig
  ?battle dbp:name ""Battle of Leipzig""@en ;
          dbo:commander ?commander .
}
```",2,2,3,1,2,3,3,71,0,0,5,0,0.0,0
712,1,train,Give me the resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  OPTIONAL { 
    dbr:Nina_Onilova dbo:deathPlace ?restingPlace .
  }
  UNION
  OPTIONAL {
    dbr:Nina_Onilova dbo:finalBurial ?restingPlace .
  }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
959,6,train,"Give me the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  dbr:Yōichi_Masuzoe a dbo:Person .
  dbr:Yōichi_Masuzoe dbo:residence ?residence .
  ?residence a dbo:Country .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
712,2,train,"Give me the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?uprising a dbo:Uprising ;
           rdfs:label ""Vyoshenskaya Uprising""@en .
  
  ?uprising dbo:participatedIn|dbo:hasMember ?militaryForce .
  
  ?militaryForce a (dbo:MilitaryUnit|dbo:Organization) .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
783,3,train,Give me the band member of Ofori Amponsah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""Ofori Amponsah""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
232,17,train,"Give me the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:France .
  ?person dbo:occupation dbo:Politician .
  ?person dbo:officeHolder ?office .
  
  ?person dbo:residence ?residence .
  ?residence a dbo:Settlement .
  ?residence dbo:country dbr:United_Kingdom .

}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
179,10,train,Who is the child of the parent of Vajiralongkorn?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent dbo:child dbr:Vajiralongkorn .
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,4,0,0,1.0,1.0,1.0
10,10,train,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  dbr:Luke_Francis_Vibert a dbo:Artist .
  ?person dbo:birthName ""Luke Francis Vibert"" .
  ?person dbo:bandMember ?bandMember .
}
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
783,1,train,Give me the band member of Ebony Reigns.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  dbr:Ebony_Reigns a dbo:Person .
  ?bandMember a dbo:Person .
  ?bandMember dbo:musicalBand dbr:Ebony_Reigns .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
232,0,train,Give me the child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Jon_Pertwee a dbo:Person .
  dbr:Jon_Pertwee dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
182,4,train,Give me the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Gotabhaya_Rajapaksa a dbo:Person .
  ?work dbo:author dbr:Gotabhaya_Rajapaksa .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
391,1,train,Give me the actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  dbr:The_Departed a dbo:Film .
  dbr:The_Departed dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,9,0,0,1.0,1.0,1.0
547,2,train,Give me the resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace WHERE {
  dbr:Alan_Cunningham a dbo:Person .
  dbr:Alan_Cunningham dbo:burialPlace ?burialPlace .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
142,5,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?timeZone a dbo:TimeZone .
  ?timeZone rdfs:label ""Japan Standard Time""@en .
  ?timeZone dbo:country ?entity .
}
```",2,2,3,2,1,2,2,9,0,0,8922,0,0.0,0
981,7,train,Give me the entity in the region of Time in Indonesia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?place ?timeZone WHERE {
  ?place a dbo:Place .
  ?place dbo:country dbr:Indonesia .
  OPTIONAL { ?place dbo:timeZone ?timeZone }
}
```",2,2,3,2,1,3,2,20,1579,13,1370,0.9918341708542714,0.5354357409291285,0.6954415327020479
659,9,train,Give me the commander in German campaign of 1813 and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Commander of the German campaign of 1813
  ?campaign dbo:commander ?commander .
  ?campaign rdfs:label ""German campaign of 1813""@en .

  # Commander in the Battle of Leipzig
  OPTIONAL { 
    ?battle dbo:commander ?commander .
    ?battle rdfs:label ""Battle of Leipzig""@en .
  }
}
```",2,2,3,1,2,3,3,71,16,15,0,0.5161290322580645,1.0,0.6808510638297872
465,5,train,Give me the death place of the native of Prague.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Czech_Republic ; # Assuming nationality as Czech Republic for natives of Prague
          dbo:birthPlace dbr:Prague . # Alternatively, using birthplace directly
  OPTIONAL { ?person dbo:deathPlace ?deathPlace }
}
```",2,2,3,2,1,2,2,9,13,0,241,1.0,0.051181102362204724,0.09737827715355805
963,9,train,"Give me the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?canton a dbo:Canton ;
          dbo:timeZone ?timezone .
  ?timezone dbo:region ?country .
  FILTER (STR(?canton) = ""Herzegovina-Neretva Canton"")
}
```",2,3,3,2,1,3,2,20,0,0,56,0,0.0,0
801,1,train,Give me the producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:Westside_Story_(song) a dbo:Songs .
  dbr:Westside_Story_(song) dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
617,16,train,"Who is the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Antiochus (son of Antiochus III)
  ?antiochus a dbo:Person ;
             rdfs:label ""Antiochus""@en .
  
  # Find his successor who is royalty
  ?successor dbo:successor ?antiochus ;
            rdf:type dbo:Monarch .

  # Get the child of this successor
  ?child dbo:parent ?successor .
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
820,7,train,Give me the professional in the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation WHERE {
  dbr:Scott_McCloud a dbo:Person .
  dbr:Scott_McCloud dbo:occupation ?occupation .
}
```",2,2,3,2,1,3,2,20,0,0,39650,0,0.0,0
617,6,train,Give me the parent of Mieszko II Lambert and child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Mieszko II Lambert's parent
  ?parent a dbo:Person ;
          dbo:child dbr:Mieszko_II_Lambert .

  # Doubravka of Bohemia's child
  ?child a dbo:Person ;
         dbo:parent dbr:Doubravka_of_Bohemia .

  # The person who is both the parent of Mieszko II Lambert and the child of Doubravka of Bohemia
  FILTER (?parent = ?child)
  
  BIND(?parent AS ?person)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Unable to generate a valid SPARQL query due to incomplete question.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
328,13,train,Give me the commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?role WHERE {
  dbr:Ferenc_Szálasi a dbo:Person .
  OPTIONAL { dbr:Ferenc_Szálasi dbo:leader ?role . }
  OPTIONAL { dbr:Ferenc_Szálasi dbo:headOfState ?role . }
}
```",2,2,3,2,1,3,3,71,0,0,73,0,0.0,0
391,4,train,Give me the figure known as Hub City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?city WHERE {
  ?city a dbo:City .
  OPTIONAL { ?city rdfs:label ""Hub City""@en }
  FILTER (LANG(?cityLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
659,14,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryConflict WHERE {
  ?person a dbo:Person ;
          foaf:name ""Rutger Jan Schimmelpenninck""@en .
  
  ?event dbo:associatedWith ?person ;
         a dbo:SocietalEvent, dbo:Event, dbo:MilitaryConflict .

  BIND(?event AS ?militaryConflict)
}
```",2,5,3,2,1,3,3,71,0,0,1127,0,0.0,0
617,17,train,Who is the child of the commander in Battle of Panium?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?battle a dbo:Battle .
  ?battle dbp:name ""Battle of Panium"" .
  ?battle dbp:commander ?commander .
  ?commander dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
360,8,train,"Give me the writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  dbr:Dave_Flett a dbo:Person .
  ?album dbo:creator dbr:Dave_Flett .
}
```",2,3,3,2,1,2,3,28,0,0,8,0,0.0,0
294,6,train,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    dbr:Luke_Lea_(American_politician) 
    dbr:Edwin_A._Keeble
  }
  
  ?person a dbo:Person .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,0,train,Give me the parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:G%C3%A9za_von_Habsburg a dbo:Person .
  dbr:G%C3%A9za_von_Habsburg dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
328,3,train,Who is the commander in Volcano and Ryukyu Islands campaign?,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Volcano_and_Ryukyu_Islands_campaign dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,20,0,0,1.0,1.0,1.0
626,0,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Battle_of_Leipzig dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,21,0,0,1.0,1.0,1.0
838,3,train,"Give me the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?bandMember a dbo:Band ;
              dbo:bandName dbr:YU_Grupa .
  ?bandMember dbo:bandMember ?member .
  ?member a dbo:Artist, dbo:MusicalArtist .
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
747,8,train,Who is the person born as Tracey Elizabeth McSween?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?currentName WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Tracey Elizabeth McSween""@en .
  OPTIONAL { ?person foaf:name ?currentName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
345,6,train,Give me the figure known as Stolz von Liechtenstein and team of Alessandro Mangiarratti.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  VALUES ?label { ""Stolz von Liechtenstein"" ""Alessandro Mangiarratti"" }
  ?person a dbo:Person .
  ?person rdfs:label ?label .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,8,train,"Give me the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album a dbo:Album .
  ?album rdfs:label ""40 Dayz & 40 Nightz""@en .
  ?album dbo:composer ?writer .
  ?writer a dbo:Person ;
          dbo:musicalArtist true ;
          dbo:artist true .
}
```",1,3,2,1,1,3,3,71,0,0,12,0,0.0,0
666,7,train,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:SportsTeam .
  ?team rdfs:label ""Hull City A.F.C.""@en .
  ?team dbo:season ?season .
  FILTER (CONTAINS(LCASE(STR(?season)), ""2016-17""))
  ?team dbo:manager ?manager .
}
```",2,3,3,2,1,3,2,20,0,0,22,0,0.0,0
345,9,train,"Give me the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?club ?nickname WHERE {
  ?heeb a dbo:Person ;
        foaf:name ""Armando Heeb""@en .
  
  ?heeb dbo:player ?club .
  
  ?club a dbo:SoccerClub, dbo:SportsClub .

  OPTIONAL { ?club rdfs:label ?nickname . FILTER (lang(?nickname) = 'en') }
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
981,4,train,Give me the author of Kamikaze Girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:Kamikaze_Girls dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,1,0,2,1.0,0.3333333333333333,0.5
391,6,train,"Give me the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Michael_Ballhaus a dbo:Person .
  dbr:Michael_Ballhaus dbo:filmography ?work .
}
```",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
9,10,train,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?qub WHERE {
  VALUES ?qub { dbr:Queen's_University_Belfast }
  
  OPTIONAL {
    ?almaMater a dbo:EducationalInstitution .
    ?almaMater rdfs:label ""Queen's University Belfast""@en .
    
    ?johnAlderdice a dbo:Person ;
                   foaf:name ""John Alderdice"" ;
                   dbo:almaMater ?almaMater .
  }
  
  FILTER EXISTS { ?johnAlderdice dbo:almaMater ?qub }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
197,2,train,Who is the member of FC Politehnica Timișoara?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  dbr:FC_Politehnica_Timișoara a dbo:SportsTeam .
  ?player dbo:member dbr:FC_Politehnica_Timișoara .
}
```",1,1,2,1,1,2,2,9,0,0,572,0,0.0,0
54,5,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Thado_Minsaw_of_Prome a dbo:Person .
  dbr:Thado_Minsaw_of_Prome dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
182,6,train,Give me the war of Mahesh Senanayake and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war WHERE {
  VALUES ?person { 
    dbr:Mahesh_Senanayake 
    dbr:Jagath_Dias 
  }
  ?person dbo:participatedIn ?war .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
778,7,train,Give me the entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Ralph_L._Brinster a dbo:Person .
  dbr:Ralph_L._Brinster dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,9,18629,0.0,0.0,0
179,5,train,Who is the child of Bhumibol Adulyadej?,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?child dbo:parent dbr:Bhumibol_Adulyadej .
}
```",1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
54,13,train,Give me the parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Narapati I of Ava
  dbr:Narapati_I_of_Ava a dbo:Person .
  
  # Find children of Narapati I
  ?child dbo:child dbr:Narapati_I_of_Ava ;
         a dbo:Person .

  # Find parent of the child (could be Narapati I or spouse)
  ?parent dbo:spouse ?child ;
          dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
303,5,train,"Who is the person born, that is a politician, as Arnulfo Arias Madrid?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Arnulfo Arias Madrid""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  FILTER (LANG(?person) = 'en')
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
534,5,train,Give me the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?owner WHERE {
  dbr:RDS_Arena dbo:owner ?owner .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
767,1,train,Give me the alma mater of Carl L. Nippert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
963,1,train,Give me the administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  dbr:Serbian_Progressive_Party dbo:leader ?leader .
}
```",1,1,2,1,1,3,2,20,0,0,86,0,0.0,0
345,4,train,Give me the birth date of Eiður Guðjohnsen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate WHERE {
  dbr:Ei%C3%B0ur_Gu%C3%B0johnsen a dbo:Person .
  dbr:Ei%C3%B0ur_Gu%C3%B0johnsen dbo:birthDate ?birthDate .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
10,6,train,Give me the associated musical artist of Matt Colton and band member of Luke Vibert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity WHERE {
  # Find associated musical artist of Matt Colton
  ?mattColton a dbo:Person ;
              foaf:name ""Matt Colton""@en .
  ?mattColton dbo:associatedBand ?artist1 .

  # Find band member of Luke Vibert
  ?lukeVibert a dbo:Person ;
              foaf:name ""Luke Vibert""@en .
  ?lukeVibert dbo:bandMember ?artist2 .

  # Check for common entity between the two artists
  FILTER (?artist1 = ?commonEntity && ?artist2 = ?commonEntity)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
391,3,train,"Give me the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  dbr:Jackson,_Tennessee a dbo:PopulatedPlace .
  OPTIONAL { dbr:Jackson,_Tennessee dbo:nickname ?nickname . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
696,2,train,"Give me the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedBand WHERE {
  dbr:The_Boils a dbo:MusicalArtist .
  dbr:The_Boils dbo:associatedBand ?associatedBand .
  ?associatedBand (a dbo:Organization ; a dbo:Group ; a dbo:Band) .
}
```",1,4,2,1,1,3,2,20,0,0,2,0,0.0,0
994,16,train,"Give me the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Identify Fredrik Thordendal as a person and find the band he is part of
  ?fredrik a dbo:Person ;
           foaf:name ""Fredrik Thordendal""@en .
  
  ?band a dbo:Band, dbo:Organization ;
        dbo:member ?fredrik .

  # Find members of this band who are also bands or groups
  ?bandMember dbo:member ?band ;
              (a dbo:Band ; 
               a dbo:Group ;
               a dbo:Organization) .
}
```",2,6,3,2,1,3,3,71,0,0,6,0,0.0,0
492,3,train,Give me the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author WHERE {
  ?work dbo:subject dbr:French_Algeria .
  ?work dbo:author ?author .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,1,train,Give me the alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:Allen_Hill_(scientist) a dbo:Person .
  dbr:Allen_Hill_(scientist) dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,4,train,Give me the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Soe Min Wimala Dewi""@en .
  
  ?parent dbo:child ?person ;
          dbo:gender ?gender .

  FILTER (?gender = dbp:male) .
  
  BIND(?parent AS ?father)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
492,13,train,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  dbr:Frédéric-Georges_Herr a dbo:Person .
  dbr:Frédéric-Georges_Herr dbo:commanderOf ?conflict .
  ?conflict a dbo:MilitaryConflict .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
485,2,train,Give me the entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  OPTIONAL { ?entity dbp:county dbr:Nottinghamshire . }
  FILTER NOT EXISTS { ?entity dbp:county [] } 
}
```",1,1,2,1,1,2,3,28,357,798193,12,0.0004470602967879281,0.967479674796748,0.0008937076224248014
827,10,train,"Who is the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Princess Pauline of Saxe-Weimar-Eisenach
  dbr:Princess_Pauline_of_Saxe-Weimar-Eisenach a dbo:Person ;
    dbo:spouse ?spouse .

  # Ensure the spouse is royalty
  ?spouse a dbo:Royalty .

  # Find the child of this spouse who is also royalty
  ?spouse dbo:child ?child .
  ?child a dbo:Royalty .
}
```",2,4,3,2,1,3,2,20,2,0,0,1.0,1.0,1.0
142,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbo:location dbr:Japan .
}
```",1,1,2,1,1,2,2,9,24,489,8892,0.04678362573099415,0.0026917900403768506,0.005090677696468341
55,2,train,Give me the band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Jason_Newsted a dbo:Person .
  dbr:Jason_Newsted dbo:musicalBandMember ?band .
}
```",1,1,2,1,1,2,3,28,0,0,9,0,0.0,0
392,7,train,Give me the province of Schio and entity in Italy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?schio ?entity WHERE {
  ?schio a dbo:Municipality ;
         rdfs:label ""Schio""@en .
  
  OPTIONAL {
    ?entity dbo:country dbr:Italy .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
427,13,train,Give me the party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty WHERE {
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:party ?fatherParty .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
294,2,train,"Give me the entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Nashville,_Tennessee .
}
```",1,1,2,1,1,2,3,28,0,0,340,0,0.0,0
303,11,train,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Aarnulfo_Arias_Madrid a dbo:Person .
  dbr:Aarnulfo_Arias_Madrid dbo:politicalParty ?party .
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
767,9,train,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
# Query for the alma mater of Carl L. Nippert
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:C_L_Nippert a dbo:Person .
  dbr:C_L_Nippert dbo:almaMater ?almaMater .
}

# Query for an entity in Baden-Württemberg
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbp:state dbr:Baden-Württemberg .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
488,8,train,Who is the father of Emperor Go-Mizunoo?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Emperor_Go-Mizunoo a dbo:Person .
  dbr:Emperor_Go-Mizunoo dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,8,train,"Give me the band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:YU_Grupa a dbo:Band .
  dbr:YU_Grupa dbo:bandMember ?member .
}
```",2,3,3,2,1,3,2,20,2,0,38,1.0,0.05,0.09523809523809523
801,17,train,"Give me the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Resource for the album ""What U See Is What U Get""
  dbr:What_U_See_Is_What_U_Get a dbo:MusicalWork .

  # Relationship between the album and its writer
  dbr:What_U_See_Is_What_U_Get dbo:composer ?writer .

  # Writer is both a MusicalArtist and an Artist
  ?writer a dbo:MusicalArtist .
  ?writer a dbo:Artist .
}
```",2,6,3,2,1,3,3,71,0,0,12,0,0.0,0
48,4,train,Give me the show with Stacey Dash.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  ?person a dbo:Person ;
          foaf:name ""Stacey Dash""@en .
  ?person dbo:starringIn ?show .
}
```",1,1,2,1,1,3,2,20,0,0,18,0,0.0,0
378,10,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?claimToFame WHERE {
  VALUES ?person { 
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón
    dbr:C_P_Gahn
  }
  ?person dbo:claimToFame ?claimToFame .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
328,17,train,"Give me the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?gustavJonson a dbo:Person ;
                foaf:name ""Gustav Jonson""@en .
  
  ?leader a dbo:OfficeHolder, dbo:Politician ;
          dbo:holdsPosition ?position ;
          dbo:hasOccupation ?occupation .

  ?position dbo:office ?office .
  ?office a dbo:GovernmentAgency .

  ?gustavJonson dbo:isLeaderOf ?leader .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
339,4,train,Who is the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Princess_Olga_of_Greece_and_Denmark a dbo:Person .
  dbr:Princess_Olga_of_Greece_and_Denmark dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
701,16,train,Give me the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  ?setiI a dbo:Person ;
         foaf:name ""Seti I""@en .
  
  ?setiI dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
996,6,train,Give me the entity in France and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?person a dbo:Person ;
          foaf:name ""Dagobert Sigmund von Wurmser""@en .
  
  ?person dbo:militaryCommanderOf|dbo:memberOf ?force .

  ?force dbo:country dbr:France .
}
```",2,2,3,1,2,3,2,20,0,0,4,0,0.0,0
492,10,train,Give me the person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  
  # Check for death place as French Algeria
  ?deathPlace1 rdfs:label ""French Algeria""@en .
  ?person dbo:deathPlace ?deathPlace1 .

  # Check for death place as Algiers
  ?deathPlace2 rdfs:label ""Algiers""@en .
  ?person dbo:deathPlace ?deathPlace2 .
}
```",2,2,3,1,2,3,3,71,16,0,0,1.0,1.0,1.0
421,6,train,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?senidah a dbo:musicalArtist ;
           rdfs:label ""Senidah""@en .
  
  ?senidah dbo:bandMember ?bandMember .

  ?bandMember a dbo:Person ;
              dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .

  FILTER (LANG(?senidahLabel) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
487,4,train,Give me the birth name of Phil Scott.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Phil_Scott a dbo:Person .
  dbr:Phil_Scott dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
827,3,train,"Who is the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent a dbo:Person ;
          foaf:name ""Maria Pavlovna of Russia"" ;
          dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1786 && 
          EXISTS { ?parent dbo:deathDate ?deathDate . FILTER(YEAR(?deathDate) = 1859) } )
  
  ?child dbo:childOf ?parent ;
         a dbo:Person .

  OPTIONAL {
    ?child dbo:royaltyTitle ?title .
    FILTER (?title != """")
  }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
435,9,train,"Give me the region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gmtRegion WHERE {
  ?timeZone a dbo:TimeZone .
  ?timeZone dbo:utcOffset ""UTC+00:00""^^xsd:string .
  ?timeZone dbo:region ?gmtRegion .
}

SELECT ?articleContent WHERE {
  ?constitution dbr:Icelandic_Constitution .
  ?constitution dbo:text ?text .
  FILTER(CONTAINS(LCASE(?text), ""article 62 section iv""))
  BIND(SUBSTR(?text, STRSTARTS(UCASE(?text), ""ARTICLE 62 SECTION IV""), 1000) AS ?articleContent)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,12,train,Give me the administration of Emperor Go-Yōzei and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?emperor (SAMPLE(?reign) AS ?administrationPeriod) ?deathPlace WHERE {
  # Query for Emperor Go-Yōzei's administration period
  OPTIONAL {
    ?emperor a dbo:Monarch ;
             rdfs:label ""Go-Yōzei""@en .
    ?emperor dbo:reign ?reign .
  }
  
  # Query for Tokugawa Ieyasu's death place
  OPTIONAL {
    ?person a dbo:Person ;
            rdfs:label ""Tokugawa Ieyasu""@en .
    ?person dbo:deathPlace ?deathPlace .
  }

  FILTER (lang(?emperorLabel) = 'en')
  FILTER (lang(?personLabel) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
666,2,train,"Give me the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?coach a dbo:Person ;
         foaf:name ""Leonid Slutsky""@en .
  ?coach dbo:coach ?team .
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
767,8,train,Give me the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?character a dbo:FictionalCharacter .
  ?character dbo:alias dbr:Black_Hood .
  ?character dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
9,9,train,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?almaMater WHERE {
  VALUES ?person { 
    dbr:Allen_Hill_(scientist) 
    dbr:John_Alderdice,_Baron_Alderdice
  }
  ?person dbo:almaMater ?almaMater .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
281,1,train,Give me the entity in Colony of New Zealand.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a ?type .
  OPTIONAL { ?entity dbo:locatedIn dbr:Colony_of_New_Zealand . }
  UNION
  OPTIONAL { ?entity dbo:country dbr:Colony_of_New_Zealand . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
179,8,train,Give me the parent of the child of Bhumibol Adulyadej.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Find the child of Bhumibol Adulyadej
  ?child dbo:parent dbr:Bhumibol_Adulyadej .
  
  # For each child, find their parent
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,2,20,3,0,0,1.0,1.0,1.0
142,6,train,Give me the birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?birthPlace WHERE {
  # Find the film ""Newscaster""
  dbr:Newscaster a dbo:Film .
  
  # Find actors in the film who played ""Papa""
  ?film dbo:starring ?actor .
  ?actor dbo:characterName ?character .
  FILTER (?character = ""Papa"")
  
  # Get the birthplace of the actor
  ?actor dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
778,8,train,"Give me the author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?software WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bill Joy""@en .
  
  ?person dbo:work ?software .
  ?software rdf:type dbo:Software .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
378,8,train,Who is the commander in Great Siege of Gibraltar?,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Great_Siege_of_Gibraltar a dbo:Battle .
  dbr:Great_Siege_of_Gibraltar dbo:commander ?commander .
  ?commander a dbo:Person .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
360,10,train,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePerson WHERE {
  # Identify Winnie Madikizela-Mandela's death place
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Find persons native of this settlement
  ?nativePerson dbo:nativeOf ?deathPlace .
}
```",2,3,3,2,1,2,3,28,0,0,1099,0,0.0,0
391,0,train,"Give me the native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Compton,_California .
}
```",1,1,2,1,1,3,3,71,0,0,97,0,0.0,0
534,0,train,Give me the birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Garrett_FitzGerald a dbo:Person .
  dbr:Garrett_FitzGerald dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
528,10,train,Give me the force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?narcisoForce ?ireneWar WHERE {
  # Find Narciso Campero and his associated ""force""
  ?narciso a dbo:Person ;
           rdfs:label ""Narciso Campero""@en .
  
  OPTIONAL { 
    ?narciso dbo:militaryCommander ?command ; 
             ?command dbo:participatedIn ?event .
    ?event rdf:type dbo:MilitaryConflict .
    BIND(?event AS ?narcisoForce)
  }
  
  # Find Irene Morales and her associated ""war""
  ?irene a dbo:Person ;
         rdfs:label ""Irene Morales""@en .

  OPTIONAL {
    ?irene dbo:participatedIn ?conflict ;
           ?conflict rdf:type dbo:MilitaryConflict .
    BIND(?conflict AS ?ireneWar)
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
303,3,train,"Who is the commander, that is a politician, in United States invasion of Panama?",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(STR(?occupation)), ""commander"") && CONTAINS(LCASE(STR(?occupation)), ""politician""))
  
  ?event dbo:agent ?person ;
         rdfs:label ?eventName .
  FILTER (CONTAINS(LCASE(?eventName), ""united states invasion of panama""))
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
492,7,train,Give me the country of Khemis Miliana District.,SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:Khemis_Miliana_District a dbo:District .
  dbr:Khemis_Miliana_District dbo:country ?country .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
427,9,train,Give me the reference to Partito Popolare Italiano and party of Giulio Andreotti.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Giulio Andreotti""@en .
  ?person dbo:memberOf ?party .
  
  OPTIONAL { 
    ?party rdfs:label ?partyLabel .
    FILTER (CONTAINS(LCASE(?partyLabel), LCASE(""Partito Popolare Italiano"")))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
9,11,train,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation dbo:Politician .
  ?person dbo:officeHolder ?office .
  ?office dbo:position ""Mayor""@en .
  ?office dbo:location dbr:Northern_Ireland_Forum .
  ?person dbo:almaMater ?almaMater .
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
427,4,train,Give me the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Italian People's Party""@en .
  
  OPTIONAL { ?party dbo:member ?person . }
  OPTIONAL { ?party dbo:leader ?person . }

  FILTER (LANG(?partyLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,2,train,Give me the entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Sri_Lanka .
}
```",1,1,2,1,1,2,3,28,0,343,62,0.0,0.0,0
528,2,train,Give me the force of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?role WHERE {
  dbr:Narciso_Campero a dbo:Person .
  OPTIONAL { dbr:Narciso_Campero dbo:role ?role . }
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
645,9,train,"Give me the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?battle a dbo:MilitaryEngagement .
  ?battle dbo:name ""Battle of Diamond Rock"" .
  ?battle dbo:commander ?commander .

  ?commander dbo:residence ?residence .
  
  FILTER (isBlank(?residence) || 
          EXISTS { ?residence a dbo:Country } ||
          EXISTS { ?residence a dbo:StateOrProvince })
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
801,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:The_Shadow dbo:fictionalAlterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
547,15,train,Give me the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  ?person a dbo:Person ;
          foaf:name ""William Haliburton""@en .
  
  ?child dbo:child ?person .
  ?grandchild dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
10,0,train,Give me the associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:Matt_Colton a dbo:Person .
  dbr:Matt_Colton dbo:associatedBand ?artist .
}
```",1,1,2,1,1,2,3,28,4,0,0,1.0,1.0,1.0
528,6,train,Give me the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Battle_of_La_Rinconada_de_Ate a dbo:Battle .
  dbr:Battle_of_La_Rinconada_de_Ate dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
294,7,train,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Luke Lea"" ;
          dbo:birthYear ?birthYear .
  FILTER (?birthYear = 1879)
  
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  
  ?place a dbo:Place ;
        rdfs:label ?placeLabel .
  FILTER (CONTAINS(LCASE(?placeLabel), ""nashville, tennessee""))
  
  ?person dbo:residence ?place .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
754,8,train,Give me the parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?child dbo:parent dbr:Ram_Khamhaeng .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
54,1,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Thado_Minsaw_of_Prome a dbo:Person .
  dbr:Thado_Minsaw_of_Prome dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
360,9,train,Give me the native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Johannesburg .

  OPTIONAL {
    ?association dbo:agent ?person ;
                 dbo:object dbr:Manfred_Mann ;
                 a ?type .
  }
}
```",2,2,3,1,2,2,3,28,1,998,0,0.001001001001001001,1.0,0.0019999999999999996
645,5,train,Give me the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Richard_Pankhurst a dbo:Person .
  ?child dbo:parent dbr:Richard_Pankhurst .
  ?child a dbo:Person .
}
```",1,1,2,1,1,3,2,20,2,0,1,1.0,0.6666666666666666,0.8
161,6,train,"Give me the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?person a dbo:Person ;
          foaf:name ""Francisco Largo Caballero""@en .
  ?person dbo:participatedIn ?event .

  FILTER (
    EXISTS { ?event dbo:type dbr:Military_conflict . }
    && EXISTS { ?event dbo:type dbr:Societal_event . }
  )
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
251,2,train,Give me the death place of Laura Mancinelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Laura_Mancinelli a dbo:Person .
  dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
314,0,train,Give me the person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Madrid .
}
```",1,1,2,1,1,2,3,28,12,1334,8,0.008915304606240713,0.6,0.017569546120058566
391,14,train,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie rdfs:subClassOf* dbo:Work .
  ?movie dbo:televisionSeries ?tvShow .
  ?movie dbo:starring ?rozRyan .
  ?rozRyan foaf:name ""Roz Ryan"" .
  ?movie dbo:starring ?actor .
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
712,7,train,Give me the capital of the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  dbr:Ukraine a dbo:Country .
  dbr:Ukraine dbo:capital ?capital .
}
```",2,2,3,2,1,3,2,20,0,1,3,0.0,0.0,0
312,2,train,"Give me the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?administration a dbo:AdministrativeRegion .
  ?administration dbo:country dbr:Italy .
  ?administration dbo:politicalParty dbr:Democratic_Party_(Italy) .
  OPTIONAL { ?administration a dbo:Settlement . }
  OPTIONAL { ?administration a dbo:State . }
  OPTIONAL { ?administration a dbo:Region . }
}
```",1,5,2,1,1,2,2,9,0,0,14,0,0.0,0
801,9,train,Give me the producer of Westside Story (song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?profession WHERE {
  dbr:Westside_Story_(song) a dbo:Songs .
  dbr:Westside_Story_(song) dbo:composer ?producer .
  
  OPTIONAL { 
    ?producer dbo:occupation ?profession .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
404,15,train,"Who is the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Princess_Victoria_Louise_of_Prussia dbo:birthName ?birthName .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
294,10,train,Give me the resting place of the architect of P. D. Houston Jr. House.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  # Assuming Frank Lloyd Wright as the architect for example purposes
  dbr:Frank_Lloyd_Wright a dbo:Person .
  
  OPTIONAL { 
    dbr:Frank_Lloyd_Wright dbo:deathPlace ?restingPlace .
  }
}
```",2,2,3,2,1,2,3,28,0,1,1,0.0,0.0,0
339,1,train,Give me the father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Princess_Elizabeth_of_Greece_and_Denmark a dbo:Person .
  dbr:Princess_Elizabeth_of_Greece_and_Denmark dbo:father ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
963,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone ?tz .
  FILTER (CONTAINS(LCASE(str(?tz)), ""central european time""))
}
```",1,2,2,1,1,3,2,20,0,0,56,0,0.0,0
820,5,train,Who is the parent of Jason Schwartzman?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Jason_Schwartzman a dbo:Person .
  dbr:Jason_Schwartzman dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
994,5,train,"Give me the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Fredrik_Thordendal a dbo:Person .
  dbr:Fredrik_Thordendal dbo:musicGroup ?band .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,0,train,Give me the child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Doubravka_of_Bohemia dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
16,9,train,Give me the professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:spouse dbr:Ted_McGinley .
  ?person dbo:occupation dbr:Actress .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
915,9,train,"Give me the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director ?birthPlace WHERE {
  # Find the director of the film ""Pipe Dreams (1976)""
  dbr:Pipe_Dreams_(film)_1976 dbo:director ?director .
  
  # Ensure the director is a person
  ?director a dbo:Person .

  # Get the birthplace of the director and ensure it's a settlement
  ?director dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,4,train,Give me the alma mater of Vladimir Cerrón and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?almaMater WHERE {
  VALUES ?name { ""Vladimir Cerrón"" ""Jorge Sotomayor Tello"" }
  
  ?person a dbo:Person .
  ?person rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), LCASE(?name)) && langMatches(lang(?label), ""en""))
  
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",2,2,3,1,2,2,2,9,1,4,0,0.2,1.0,0.33333333333333337
184,4,train,Give me the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:nationalityPlace dbr:Budapest .
}
```",1,1,2,1,1,3,3,71,0,0,2751,0,0.0,0
801,7,train,"Give me the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album WHERE {
  ?album a dbo:Album .
  ?album rdfs:label ""What U See Is What U Get""@en .
  ?album a dbo:MusicalWork .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
427,5,train,Who is the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:alumniOf dbr:Massachusetts_Institute_of_Technology .
}
```",1,1,2,1,1,3,3,71,0,0,1559,0,0.0,0
16,12,train,Give me the professional in Actress and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Georgeanne Marie Rice"" .
  ?person dbo:occupation dbr:Actress .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
16,14,train,Give me the person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Gigi Rice""@en .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
959,0,train,Give me the member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?university a dbo:EducationalInstitution ;
              rdfs:label ""University of Tsukuba""@en .
  
  OPTIONAL { ?university dbp:alumni ?member . }
  OPTIONAL { ?university dbp:faculty ?member . }

  FILTER (lang(?universityLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,267,0,0.0,0
712,8,train,Give me the resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Hero_of_the_Soviet_Union .
  OPTIONAL { 
    ?person dbo:deathPlace ?restingPlace .
  }
  UNION
  OPTIONAL { 
    ?person dbo:burialPlace ?restingPlace .
  }
}
```",2,2,3,2,1,3,2,20,0,0,49,0,0.0,0
767,17,train,"Give me the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  dbr:Matthew_Burland a dbo:Person .
  OPTIONAL { 
    dbr:Matthew_Burland dbo:alterEgo ?alterEgo .
  }
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
356,6,train,Give me the player in 2015 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find Mark Briggs and his team in 2015
  ?markBriggs a dbo:Person ;
              foaf:name ""Mark Briggs"" ;
              dbo:team ?team .
  
  # Ensure the team is associated with Sacramento Republic FC in 2015
  ?team dbo:member ?player ;
        dbo:sportTeam dbr:Sacramento_Republic_FC ;
        dbo:season ?season .
  FILTER (YEAR(?season) = 2015)

  # Select players who were members of that team during the 2015 season
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,1,train,Give me the band member of Metallica.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Metallica a dbo:Band .
  ?member dbo:bandMember dbr:Metallica .
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
77,8,train,Give me the force of the mayor of Congress Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?positionHeld WHERE {
  ?mayor a dbo:Person .
  ?mayor dbo:officeHolder ?office .
  ?office dbo:positionName ""Mayor of Congress Poland"" .
  OPTIONAL { ?mayor dbo:positionHeld ?positionHeld . }
}
```",2,2,3,2,1,3,2,20,0,0,33,0,0.0,0
696,8,train,Give me the landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v0 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark WHERE {
  # Step 1: Identify Nie Rongzhen's awards
  dbr:Nie_Rongzhen a dbo:Person .
  ?award dbo:recipient dbr:Nie_Rongzhen .

  # Step 2: Connect the award to landmarks with elevation
  ?award dbo:associatedLandmark ?landmark .
  ?landmark a dbo:Landmark ;
            dbo:elevation ?elevation .
}
```",2,2,3,2,1,3,2,20,0,0,599,0,0.0,0
427,14,train,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Romano_Antonio_Prodi a dbo:Person .
  dbr:Romano_Antonio_Prodi dbo:officeHolder true .
  dbr:Romano_Antonio_Prodi dbo:politician true .
  dbr:Romano_Antonio_Prodi dbo:party ?party .
}
```",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
77,4,train,"Give me the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  ?organization a dbo:Organization .
  ?organization dbo:location dbr:Warsaw .
  ?organization dbo:administers ?territory .
}
```",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
281,16,train,"Give me the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Identify the election event
  dbr:1962_New_South_Wales_state_election a dbo:Election .
  
  # Find leaders or candidates associated with this election
  ?leader dbo:electedDuring dbr:1962_New_South_Wales_state_election ;
          a dbo:Politician .

  # Get the birth place of the leader and ensure it is a country
  ?leader dbo:birthPlace ?birthPlace .
  
  FILTER EXISTS { ?birthPlace a dbo:Country }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
801,12,train,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find associated musical artists of Chris Taylor (music producer)
  OPTIONAL {
    ?chris a dbo:MusicProducer ;
           foaf:name ""Chris Taylor"" .
    ?chris dbo:associatedBand ?artist .
  }
  
  # Find the producer of Westside Story (song)
  OPTIONAL {
    dbr:Westside_Story_(song) dbo:producer ?producer .
    
    # Check if this producer is also an associated artist with Chris Taylor
    ?producer rdfs:label ?artistLabel .
    FILTER(CONTAINS(LCASE(?artistLabel), ""chris taylor""))
  }
  
  # Ensure the artist exists in both contexts
  FILTER(BOUND(?artist))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
184,16,train,"Give me the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Identify Archduke Ladislaus Philipp of Austria
  dbr:Archduke_Ladislaus_Philipp_of_Austria a dbo:Person .
  
  # Find the parent(s) of Archduke Ladislaus Philipp
  ?parent dbo:child dbr:Archduke_Ladislaus_Philipp_of_Austria .

  # For each parent, find their children who are royalty
  ?parent dbo:child ?child .
  ?child a dbo:Person .
  OPTIONAL { ?child dbo:royaltyTitle ?title . }
  
  FILTER EXISTS { ?child dbo:royaltyTitle ?title } 
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
391,11,train,Give me the native of the figure known as Hub City.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:nativePlace dbr:Spartanburg,_South_Carolina .
}
```",2,2,3,2,1,3,3,71,0,0,176,0,0.0,0
77,9,train,Who is the awardee of the award of Maxim Grigorievich Vlasov?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Maxim_Grigorievich_Vlasov a dbo:Person .
  dbr:Maxim_Grigorievich_Vlasov dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,8,416,0.0,0.0,0
16,7,train,Who is the alumnus of Ohio State University?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:almaMater dbr:Ohio_State_University .
}
```",1,1,2,1,1,3,3,71,467,0,0,1.0,1.0,1.0
92,6,train,"Give me the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Jim Sheppard"" .
  ?person a dbo:Artist .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
981,3,train,Give me the region of Time in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  dbr:Time dbo:location ?location .
  ?location dbo:country dbr:Indonesia .
  ?location dbo:administrativeArea ?region .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
