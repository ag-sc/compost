id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
392,21,test,"Give me the region of Central European Time and entity in Italy and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?entity ?province WHERE {
  ?person rdfs:label ""Sebastiano Bianchetti""@en .
  ?person dbo:birthPlace ?place .
  
  OPTIONAL { ?place dbo:country dbr:Italy . }
  OPTIONAL { ?place dbo:administrativeRegion ?region . FILTER (regex(str(?region), ""Central European Time"")) }
  OPTIONAL { ?place dbo:province ?province . }
  
  ?entity rdfs:label ?settlementLabel .
  ?entity dbo:country dbr:Italy .
  ?entity dbo:language dbr:Italian_language .

  FILTER (str(?settlementLabel) = str(?place))
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
421,24,test,Give me the person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Get Dino Merlin's birth name
  ?dinoMerlin rdfs:label ""Dino Merlin""@en .
  ?dinoMerlin dbo:birthName ?birthName .

  # Get Samir Bekrić's birthplace
  ?samirBekric rdfs:label ""Samir Bekrić""@en .
  ?samirBekric dbo:birthPlace ?birthPlace .

  # Find a person with the same birth name and born in the same place as Samir Bekrić
  ?person dbo:birthName ?birthName ;
          dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
427,55,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?prodiPartyLabel ?andreottiFatherPartyLabel WHERE {
  # Romano Prodi's party
  ?prodi dbo:birthPlace ?place .
  ?prodi rdfs:label ""Romano Antonio Prodi""@en .
  OPTIONAL { ?prodi dbo:party ?prodiParty . }
  OPTIONAL { ?prodiParty rdfs:label ?prodiPartyLabel . FILTER (lang(?prodiPartyLabel) = 'en') }

  # Italian People's Party (1994)
  ?ipep dbo:country <http://dbpedia.org/resource/Italy> .
  ?ipep rdfs:label ""Italian People's Party (1994)""@en .

  # Lamberto Andreotti's father
  ?andreotti dbo:birthPlace ?place2 .
  ?andreotti rdfs:label ""Lamberto Andreotti""@en .
  OPTIONAL { ?father dbo:child ?andreotti . }
  OPTIONAL { ?father dbo:party ?andreottiFatherParty . }
  OPTIONAL { ?andreottiFatherParty rdfs:label ?andreottiFatherPartyLabel . FILTER (lang(?andreottiFatherPartyLabel) = 'en') }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
996,19,test,Give me the force of the awardee of 1778.0 and entity in the award of the native of Palestine (region).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?entity WHERE {
  ?person dbo:nativePlace dbr:Palestine .
  ?person dbo:awardYear ""1778""^^xsd:gYear .
  
  OPTIONAL { ?person dbo:force ?force . }
  OPTIONAL { ?person dbo:relatedEntity ?entity . }

  FILTER EXISTS { ?person dbo:awardYear ""1778""^^xsd:gYear }
}
```",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
184,64,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Part 1: Archduchess Margaret of Austria (born 1925)
  ?margaret rdfs:label ""Margaret, Archduchess of Austria""@en .
  FILTER(YEAR(?margaret dbo:birthday) = 1925) .

  # Find her parent
  ?parent1 dbo:child ?margaret .

  # Find the child of that parent (a sibling or cousin)
  ?sibling dbo:parent ?parent1 .

  # Find the parent of this sibling
  ?grandParent dbo:child ?sibling .

  # Part 2: Landmark at elevation 96.0 that is a settlement
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            rdf:type dbo:Settlement .

  # Find native of the landmark
  ?native dbo:nativePlace ?landmark .

  # Child of Archduke Joseph August of Austria
  ?josephChild dbo:parent ?archduke .
  ?archduke rdfs:label ""Joseph August, Archduke of Austria""@en .

  # Find parent common to both individuals found above
  OPTIONAL { ?grandParent dbo:child ?native . }
  OPTIONAL { ?grandParent dbo:child ?josephChild . }

}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,46,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?decedent WHERE {
  ?person rdfs:label ""Frédéric-Georges Herr""@en .
  ?work rdfs:label ""French Algeria""@en ;
        dbo:author ?person .
  OPTIONAL { 
    ?conflict dbo:commander ?person ;
              a dbo:MilitaryConflict .
    ?event dbo:relatedEvent ?conflict ;
           a dbo:Event .
  }
  OPTIONAL {
    ?decedent dbo:decedentAtWork ?work .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,20,test,Give me the reference to Partito Popolare Italiano and party of the father of Lamberto Andreotti.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?partitoPopolareItaliano ?fatherParty WHERE {
  ?party rdfs:label ""Partito Popolare Italiano""@en .
  BIND(?party AS ?partitoPopolareItaliano)
  
  ?lamberto dbo:birthName ""Lamberto Andreotti"" .
  ?lamberto dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,61,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band1 ?band2 WHERE {
  # Part 1: Band of the person born as ""Shèna""
  ?person rdfs:label ""Shèna""@en .
  ?person dbo:birthName ""Shèna"" .
  OPTIONAL { ?person dbo:band ?band1 . }

  # Part 2: Band of the writer of the song ""Amba Shepherd""
  ?work rdfs:label ""Amba Shepherd""@en ;
        a dbo:Songs .
  ?work dbo:composer ?writer .
  OPTIONAL { ?writer dbo:band ?band2 . }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
328,44,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  ?awardee dbo:award ""Order of Suvorov"" .
  ?commander dbo:commanderOf ?szalasiForce .
  ?leader dbo:leader ?stalinAgency .
  
  FILTER (?awardee = ?commander && ?commander = ?leader)
  
  ?szalasiForce rdfs:label ""Ferenc Szálasi""@en .
  ?stalinAgency rdf:type dbo:GovernmentAgency ;
                dbo:head ?leader .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
294,28,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v5 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?architectRestingPlace ?marionBirthplace ?politicianRestingPlace WHERE {
  # Architect of P. D. Houston Jr. House
  ?house dbo:architect ?architect .
  FILTER(STR(?house) = ""P._D._Houston_Jr._House"")
  
  # Resting place of the architect
  OPTIONAL { ?architect dbo:deathPlace ?architectRestingPlace . }
  
  # Marion James's birthplace that is a settlement
  ?marion dbo:birthPlace ?marionBirthplace .
  FILTER(STR(?marion) = ""Marion_James"")
  ?marionBirthplace rdf:type dbo:Settlement .

  # Politician who received the Distinguished Service Medal (U.S. Army)
  ?medal dbo:recipient ?politician .
  FILTER(STR(?medal) = ""Distinguished_Service_Medal_(United_States_Army)"")
  
  OPTIONAL { 
    ?politician rdf:type dbo:Politician .
    ?politician dbo:deathPlace ?politicianRestingPlace .
  }
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
528,41,test,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?battlePisaguaWar ?pisaguaForce ?rinconadaWar ?camperoForce WHERE {
  # Battle of Pisagua
  ?battlePisagua rdfs:label ""Battle of Pisagua""@en .
  OPTIONAL { 
    ?battlePisagua dbo:militaryUnit ?pisaguaForce .
  }
  OPTIONAL {
    ?battlePisagua dbo:participatedIn ?battlePisaguaWar .
  }

  # Battle of La Rinconada de Ate
  ?battleRinconada rdfs:label ""Battle of La Rinconada de Ate""@en .
  OPTIONAL {
    ?battleRinconada dbo:militaryUnit ?rinconadaForce .
  }
  OPTIONAL {
    ?commander rdfs:label ""Commander of Battle of La Rinconada de Ate""@en .
    ?commander dbo:participatedIn ?battleRinconada .
    ?battleRinconada dbo:participatedIn ?rinconadaWar .
  }

  # Narciso Campero
  ?campero rdfs:label ""Narciso Campero""@en .
  OPTIONAL {
    ?campero dbo:militaryUnit ?camperoForce .
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
9,49,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater WHERE {
  ?person a dbo:Mayor ;
          dbo:officeHolderOf ?forum .
  ?forum rdfs:label ""Northern Ireland Forum""@en .
  ?person dbo:almaMater ?almaMater .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,41,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthCountry ?war WHERE {
  # Find Bob Heffron's birthplace
  ?heffron dbo:birthPlace ?birthPlace .
  FILTER (str(?heffron) = ""Bob_Heffron"") .

  # Ensure the birth place is a country
  ?birthPlace rdf:type dbo:Country ;
              rdfs:label ?birthCountryLabel .
  FILTER (langMatches(lang(?birthCountryLabel), ""EN"")) .

  # Find individuals who are Knight Grand Cross of the Order of the Bath
  ?awardee dbo:award ?orderOfBath .
  ?orderOfBath rdfs:label ""Knight_Grand_Cross_of_the_Order_of_the_Bath""@en .

  # Find wars associated with these awardees
  ?awardee dbo:war ?war .

  # Ensure the war involves the New Zealand Army
  ?war dbo:participatingMilitaryUnit ?militaryUnit .
  FILTER (str(?militaryUnit) = ""New_Zealand_Army"") .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
485,21,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom and birth place of Thomas Warner (poet).",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?entityInRegion ?birthPlaceUK
WHERE {
  # Part for Joseph Whitaker (naturalist)
  ?whitaker dbo:birthPlace ?birthPlaceWhitaker .
  FILTER(CONTAINS(LCASE(?whitaker), ""joseph whitaker naturalist"")) .

  OPTIONAL {
    ?birthPlaceWhitaker rdf:type dbr:Region .
    ?birthPlaceWhitaker dbo:partOf ?entityInRegion .
  }

  # Part for Thomas Warner (poet)
  ?warner dbo:birthPlace ?birthPlaceWarner .
  FILTER(CONTAINS(LCASE(?warner), ""thomas warner poet"")) .

  OPTIONAL {
    ?birthPlaceWarner dbo:country dbr:United_Kingdom .
  }
  
  BIND(?birthPlaceWarner AS ?birthPlaceUK)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
528,52,test,"Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v5 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?battle ?commander ?force ?societalEvent WHERE {
  # Identify the battle
  ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
  
  # Find the commander associated with Narciso Campero
  ?battle dbo:commander ?commander .
  ?commander rdfs:label ""Narciso Campero""@en .

  # Identify the military force or entity involved
  OPTIONAL { ?force dbo:commander ?commander . }
  
  # Find societal events related to this force in Chile
  OPTIONAL {
    ?societalEvent dbo:place dbpedia:Chile ;
                   dbo:agent ?force .
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
534,19,test,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician) and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/owner> ?v4 . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace ?headquarter WHERE {
  # Find Desmond FitzGerald's child who is a politician and office holder
  ?child dbo:parent dbc:Desmond_FitzGerald_(politician) .
  FILTER EXISTS { ?child dbo:officeHolder ?_ . }
  
  # Get the birth place of this child
  ?child dbo:birthPlace ?birthPlace .

  # Find the venue for the 2012 Pro12 Grand Final
  ?venue rdfs:label ""2012 Pro12 Grand Final""@en .
  FILTER EXISTS { ?venue a dbo:Venue . }
  FILTER EXISTS { ?venue a dbo:ArchitecturalStructure . }

  # Get the owner of this venue
  ?venue dbo:owner ?owner .

  # Find the headquarter of the owner
  ?owner dbo:headquarters ?headquarter .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
391,33,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?spouse dbo:spouse db:Sherry_Hormann .
  ?spouse dbo:nativePlace ?nativePlace .
  FILTER(CONTAINS(LCASE(str(?nativePlace)), ""compton, california""))
  
  ?work dbo:claimToFame ?spouse .
  ?work dbo:actor ?actor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
54,54,test,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Step 1: Identify Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi dbo:child ?mother .
  ?father dbo:spouse ?mother .
  
  # Step 2: Find the child of Soe Min Wimala Dewi's father
  ?father dbo:child ?child1 .

  # Step 3: Identify Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor
  ?ameittaThiriMahaDhammaDewiOfAva dbo:predecessor ?predecessor .
  
  # Step 4: Match the child with the predecessor
  FILTER (?child1 = ?predecessor)

  # Step 5: Identify Thado Minsaw of Prome's parent
  ?thadoMinsawOfProme dbo:parent ?parent .

  # Step 6: Find the child of Thado Minsaw of Prome's parent
  ?parent dbo:child ?child2 .

  # Step 7: Match with the predecessor from Step 3
  FILTER (?predecessor = ?person)
}
```",6,6,7,3,3,3,3,71,0,1781,1,0.0,0.0,0
10,27,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?sharonBirthName ?mattArtist ?bandMember WHERE {
  # Sharon Kao's birth name
  ?sharon rdfs:label ""Sharon Kao""@en .
  ?sharon dbo:birthName ?sharonBirthName .

  # Matt Colton's associated musical artist
  ?matt rdfs:label ""Matt Colton""@en .
  ?matt dbo:associatedBandMember ?mattArtist .

  # Luke Francis Vibert's birth name
  ?luke rdfs:label ""Luke Francis Vibert""@en .
  ?luke dbo:birthName ?lukeBirthName .

  # Band member who is an artist and shares the same birth name as Luke Francis Vibert
  ?bandMember dbo:birthName ?lukeBirthName .
  ?bandMember a dbo:Artist .

  # Ensure Matt Colton's associated musical artist is linked to the band member
  ?mattArtist dbo:associatedBandMember ?bandMember .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
528,65,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?militaryForce ?war ?birthPlace WHERE {
  # Military force involved in the Battle of Pisagua
  ?battle rdfs:label ""Battle of Pisagua""@en .
  ?battle dbo:participatedIn ?militaryForce .

  # War associated with a commander around 1901-09 (War of the Pacific)
  ?war rdfs:label ?warLabel .
  ?commander dbo:dateOfBirth ?dob .
  ?commander dbo:dateOfDeath ?dod .
  FILTER (?dob <= ""1901-01-01""^^xsd:date && (?dod >= ""1909-12-31""^^xsd:date || NOT EXISTS { ?commander dbo:dateOfDeath ?dod }))
  ?war dbo:commander ?commander .

  # Birthplace of Narciso Campero Leyes
  ?person rdfs:label ""Narciso Campero Leyes""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
492,59,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?decedent WHERE {
  # Step 1: Find the author of ""French Algeria""
  ?work rdfs:label ""French Algeria""@en .
  ?work dbo:author ?author .

  # Step 2: Find decedent at work of this author
  OPTIONAL { ?author dbo:decedentAtWork ?decedent . }

  # Step 3: Identify the commander in a war (military conflict and event)
  ?war dbo:type dbr:Military_conflict .
  ?war dbo:event ?event .
  ?war dbo:commanderInWar ?commander .

  # Step 4: Link to Battle of Verdun
  ?battle rdfs:label ""Battle of Verdun""@en .
  ?battle dbo:commanderInBattle ?commander .

  FILTER(?decedent != ?author) # Ensure decedent is not the author themselves
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
488,58,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration ?birthPlace ?deathPlace WHERE {
  # Tokugawa Masako's spouse and the administration of her spouse's father who is royalty
  ?masako dbo:spouse ?spouse .
  ?spouse dbo:father ?royalFather .
  ?royalFather a dbo:Royalty .
  ?royalFather dbo:administration ?administration .

  # Enomoto Takeaki's birthplace
  ?enomoto rdfs:label ""Enomoto Takeaki""@en .
  ?enomoto dbo:birthPlace ?birthPlace .

  # Yūki Hideyasu's father who is a politician and his death place
  ?yuki rdfs:label ""Yūki Hideyasu""@en .
  ?yuki dbo:father ?politicianFather .
  ?politicianFather a dbo:Politician .
  ?politicianFather dbo:deathPlace ?deathPlace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,56,test,"Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the producer of ""Westside Story"" (song)
SELECT ?producer WHERE {
  dbr:Westside_Story_(song) dbo:producer ?producer .
}

# Step 2: Identify professional in the alter ego of The Shadow
SELECT ?person WHERE {
  ?person rdfs:label ""The Shadow""@en .
  FILTER EXISTS { ?person a dbo:MusicalArtist . }
}

# Step 3: Find associated musical artist of the writer (from step 2)
SELECT ?associatedArtist WHERE {
  ?writer dbo:alterEgo dbr:The_Shadow .
  ?writer dbo:associatedMusicalArtist ?associatedArtist .
  FILTER EXISTS { ?associatedArtist a dbo:MusicalArtist . }
}

# Step 4: Identify artist of the album ""What U See Is What U Get""
SELECT ?artist WHERE {
  dbr:What_U_See_Is_What_U_Get_(album) dbo:artist ?artist .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
232,54,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of London.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actor WHERE {
  ?person rdfs:label ""John Pertwee""@en .
  ?child dbo:parent ?person ;
         dbo:profession dbr:Actor ;
         dbo:profession dbr:Narrator ;
         dbo:profession dbr:Producer .
  ?fame dbo:associatedWith ?film, ?conflict .
  ?fame dbo:subject ?child .
  ?film a dbo:Film .
  ?conflict a dbo:MilitaryConflict .
  ?actor dbo:actor ?child .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
184,18,test,Give me the parent of Archduchess Ilona of Austria and parent of Géza von Habsburg and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentIlona ?parentGéza ?childJosephAugust WHERE {
  # Parent of Archduchess Ilona of Austria
  ?ilona dbo:label ""Archduchess Ilona of Austria""@en .
  ?ilona dbo:parent ?parentIlona .

  # Parent of Géza von Habsburg
  ?geza dbo:label ""Géza von Habsburg""@en .
  ?geza dbo:parent ?parentGéza .

  # Child of Archduke Joseph August of Austria
  ?josephAugust dbo:label ""Archduke Joseph August of Austria""@en .
  ?josephAugust dbo:child ?childJosephAugust .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
994,33,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?meshuggahArtist ?slayerArtist WHERE {
  # Find Meshuggah associated with Fredrik Thordendal
  ?meshuggah dbo:member ?thordendal .
  ?thordendal rdfs:label ""Fredrik Thordendal""@en .

  OPTIONAL {
    ?meshuggah dbo:associatedBand ?meshuggahArtist .
  }

  # Find Slayer associated with S.A. Slayer
  ?slayer dbo:member ?saSlayer .
  ?saSlayer rdfs:label ""S.A. Slayer""@en .

  OPTIONAL {
    ?slayer dbo:associatedBand ?slayerArtist .
  }
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
184,47,test,"Give me the parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria and his native place
  ?archduke rdfs:label ""Archduke Ladislaus Philipp of Austria""@en .
  ?archduke dbo:nativePlace ?nativePlace .

  FILTER (str(?nativePlace) = str(<http://dbpedia.org/resource/Budapest>))

  # Step 2: Find the parent
  OPTIONAL { ?archduke dbo:parent ?parent . }

  # Step 3: Find a child of this parent, then another child (grandchild)
  OPTIONAL { ?parent dbo:child ?child . }
  OPTIONAL { ?child dbo:child ?grandchild . }

  # Step 4: Ensure the grandchild is royalty
  FILTER EXISTS {
    ?grandchild rdf:type dbo:Royal .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,60,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfChild WHERE {
  # Step 1: Find Antiochus II Theos' successor who is a royalty
  ?successor dbo:predecessor dbr:Antiochus_II_Theos ;
             rdf:type dbo:Monarch .

  # Step 2: Find the child of this successor who is also a royalty
  ?childOfSuccessor dbo:parent ?successor ;
                   rdf:type dbo:Monarch .

  # Step 3: Identify the commander in Battle of Panium
  ?commander dbo:event dbr:Battle_of_Panium .

  # Step 4: Find the parent of this commander's child
  ?childOfCommander dbo:parent ?commander .
  ?parentOfChildOfCommander dbo:child ?childOfCommander .

  # Step 5: Find the child of the child from step 2
  ?childOfChild dbo:parent ?childOfSuccessor ;
                rdf:type dbo:Monarch .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
184,55,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Step 1 & 2: Find the parent of a child of Archduke Joseph Francis of Austria
  ?child dbo:parent ?parent1 .
  ?archduke rdfs:label ""Archduke Joseph Francis of Austria""@en .
  ?archduke dbo:child ?child .

  # Step 3, 4 & 5: Find the parent of a child of a native of Budapest
  ?native dbo:birthPlace ?place .
  ?place rdfs:label ""Budapest""@en .
  ?child2 dbo:parent ?parent2 .
  ?native dbo:child ?child2 .

  # Step 6 & 7: Find the parent of a grandchild of Archduke Joseph Karl of Austria
  OPTIONAL {
    ?grandchild dbo:parent ?intermediateParent .
    ?archdukeKarl rdfs:label ""Archduke Joseph Karl of Austria""@en .
    ?archdukeKarl dbo:child ?intermediateParent .
    ?intermediateParent dbo:child ?grandchild .
  }
}
```",6,6,7,2,3,3,3,71,1,12,0,0.07692307692307693,1.0,0.14285714285714288
92,37,test,"Give me the band of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?band ?associatedArtist WHERE {
  # Find Joseph Michael's band
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbo:musicalArtist ?artist .
  ?artist dbo:band ?band .

  OPTIONAL {
    # Identify the actor of Return to Nuke 'Em High Volume 1 who is also a musician
    ?actor rdfs:label ?actorLabel .
    ?actor dbo:actorInFilm ?film .
    ?film rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
    ?actor dbo:musicalArtist ?associatedArtist .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,69,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Query 1: Find Narciso Campero's birth name and associated force
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName ?force WHERE {
  ?person rdfs:label ""Narciso Campero""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  OPTIONAL { ?person dbo:militaryForce ?force . }
}

# Query 2: Find the commander and war of the Battle of La Rinconada de Ate
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?war WHERE {
  ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
  ?battle dbo:commander ?commander .
  ?battle dbo:partOfWar ?war .
}

# Query 3: Find a societal event (likely a war) involving a military force in Chile
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?event WHERE {
  ?event rdf:type dbo:MilitaryConflict .
  ?event dbo:location ?chile .
  ?chile rdfs:label ""Chile""@en .
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
48,20,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actorBand ?writerBand WHERE {
  # Find a show with Stacey Dash as an actor
  ?show dbo:actor ?stacyDash .
  ?stacyDash rdfs:label ""Stacey Dash""@en .

  # Check if the actor is also a musical artist and get their band
  OPTIONAL {
    ?stacyDash dbo:musicalArtist ?actorMusicalArtist .
    ?actorMusicalArtist dbo:band ?actorBand .
  }

  # Find works by Shellback as a record producer
  ?work dbo:recordProducer ?shellback .
  ?shellback rdfs:label ""Shellback (record producer)""@en .

  # Check if the writer of the work is also a musical artist and get their band
  OPTIONAL {
    ?work dbo:writer ?writer .
    ?writer dbo:musicalArtist ?writerMusicalArtist .
    ?writerMusicalArtist dbo:band ?writerBand .
  }
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
314,21,test,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić and person deceased at Madrid.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:award ?award .
  FILTER (STR(?award) = ""30"")
  
  ?person dbo:profession ?profession .
  ?profession rdfs:label ""Commander""@en .

  ?event dbo:participant ?person ;
         dbo:societalEvent true .
  
  ?societalEvent dbo:participant ?person ;
                 a dbo:SocietalEvent .

  ?deathPlace dbo:city ""Madrid"" .
  ?person dbo:deathPlace ?deathPlace .

  ?lisaGavric foaf:name ""Lisa Gavrić""@en .
  ?event dbo:participant ?lisaGavric .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
161,50,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?event ?predecessor WHERE {
  # Find Emilio Mola's command in an event that is both a societal and military conflict
  ?event dbo:commander ?commander .
  ?commander rdfs:label ""Emilio Mola""@en .
  ?event rdf:type dbo:SocietalEvent ;
         rdf:type dbo:MilitaryConflict .

  # Find the predecessor of Indalecio Prieto in a relevant context (e.g., political role)
  ?indalecio dbp:predecessor ?predecessor .
  ?indalecio rdfs:label ""Indalecio Prieto""@en .
  
  # Ensure the event involves the predecessor's military force
  ?event dbo:militaryForce ?militaryForce .
  ?militaryForce dbo:commander ?predecessor .
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
767,66,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?settlement ?alterEgo ?almaMater WHERE {
  ?admin dbo:location ?green .
  ?green rdfs:label ""Green""@en .
  ?admin a dbo:Settlement .

  ?burland dbo:fictionalCharacter ?alterEgo .
  ?burland rdfs:label ""Matthew Burland""@en .

  ?nash dbo:almaMater ?almaMater .
  ?nash rdfs:label ""George K. Nash""@en .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
182,21,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?warJagath ?nationalityTamara ?warMahesh WHERE {
  # Find wars associated with Jagath Dias
  ?person rdfs:label ""Jagath Dias""@en .
  ?person dbo:participatedInWar ?warJagath .

  # Find Tamara Kunanayakam's nationality and related wars
  ?tamara rdfs:label ""Tamara Kunanayakam""@en .
  ?tamara dbo:nationality ?nationalityTamara .
  
  OPTIONAL {
    ?entity dbo:nationality ?nationalityTamara ;
            dbo:participatedInWar ?warTamara .
  }

  # Find wars associated with Mahesh Senanayake
  ?mahesh rdfs:label ""Mahesh Senanayake""@en .
  ?mahesh dbo:participatedInWar ?warMahesh .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
92,71,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v8 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?artist WHERE {
  # Actor of ""Return to Nuke 'Em High Volume 1""
  ?film dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?film dbo:actor ?actor .
  
  # Ensure the actor is also a musical artist
  ?actor dbo:musicalArtist ?artist .

  # Find band associated with this actor
  OPTIONAL { ?actor dbo:bandMember ?band . }

  # Reference to ""Nevermore (2006 film)""
  ?film2 dbo:title ""Nevermore (2006 film)""@en .
  ?film2 dbo:reference ?reference .
  
  # Ensure the reference is an artist or band
  ?reference dbo:musicalArtist ?artist .

  # Person born as Joseph Michael
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbo:birthName ?birthName .
  FILTER(?birthName = ""Joseph Michael"")

  # Find band associated with this person
  OPTIONAL { ?person dbo:bandMember ?band2 . }

  # Ensure the same artist is connected to all elements
  FILTER(?artist = ?reference)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
92,30,test,Give me the band of the person born as Joseph Michael Furney and band member of Nevermore and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?person rdfs:label ""Warrel Dane""@en .
  ?person dbo:birthName ""Joseph Michael Furney"" .
  
  # Find the band associated with Warrel Dane and Jim Sheppard
  ?person dbo:bandMember ?nevermore ;
          dbo:associatedBand ?band .

  ?sheppard rdfs:label ""Jim Sheppard""@en .
  ?sheppard dbo:associatedBand ?band .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
55,21,test,"Give me the band member of Metallica and band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?metallicaBandMember ?gunsNRosesBandMember WHERE {
  # Find Metallica band members including Newsted
  ?metallica dbo:bandMember ?metallicaBandMember .
  ?metallica rdfs:label ""Metallica""@en .

  # Ensure one of the Metallica members is Newsted
  OPTIONAL { 
    ?newsted rdfs:label ""Jason Newsted""@en .
    ?newsted dbo:bandMember ?metallica .
  }

  # Find Guns N' Roses band members including Lars Ulrich
  ?gunsNroses dbo:bandMember ?gunsNRosesBandMember .
  ?gunsNroses rdfs:label ""Guns N' Roses""@en .

  # Ensure one of the Guns N' Roses members is Lars Ulrich
  OPTIONAL { 
    ?ulrich rdfs:label ""Lars Ulrich""@en .
    ?ulrich dbo:bandMember ?gunsNroses .
  }
}
```",4,5,5,2,3,2,3,28,0,11,1,0.0,0.0,0
801,22,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?artist WHERE {
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  ?writer rdfs:label ""Lil Wayne""@en .
  ?writer a dbo:MusicalArtist ;
          a dbo:Artist .

  FILTER(?writer = ?artist)
}
```",3,5,4,2,2,3,3,71,0,0,22,0,0.0,0
391,46,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actor WHERE {
  ?work dbo:director ""Michael Ballhaus""@en .
  ?work dbo:starring ?actor .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
378,55,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query for the commander in the Peninsular War
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?war rdfs:label ""Peninsular War""@en .
  ?war dbo:commander ?commander .
}

UNION

# Query for the war involving Carl Pontus Gahn
SELECT ?war WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:birthPlace ?place .
  OPTIONAL { ?person dbo:militaryConflict ?war . }
}

UNION

# Query for the claim to fame of the commander in the Great Siege of Gibraltar
SELECT ?claimToFame WHERE {
  ?siege rdfs:label ""Great Siege of Gibraltar""@en .
  ?siege dbo:commander ?commander .
  ?commander dbo:claimToFame ?claimToFame .
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
55,26,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify the producer of ""Used to Love Her""
  ?song dbo:title ""Used to Love Her"" .
  ?song dbo:producer ?producer .

  # Step 2: Find band members of the producer's band
  OPTIONAL { 
    ?producer dbp:bandMember ?producerBand .
    ?producerBand dbo:member ?bandMember .
  }

  # Step 3: Identify Metallica's band member (Jason Newsted)
  ?metallicaAlbum dbo:artist <http://dbpedia.org/resource/Metallica> .
  ?metallicaAlbum dbo:track ?songTrack .
  ?songTrack dbp:performer ?newsted .

  # Step 4: Find reference to Newsted
  OPTIONAL {
    ?newsted rdfs:label ""Jason Newsted""@en .
    ?newsted dbp:bandMember ?newstedBand .
    ?newstedBand dbo:member ?bandMember .
  }

  FILTER(?producer != ?newsted) # Ensure we are not considering the same person
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
161,39,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce ?commander WHERE {
  ?person rdfs:label ""El Director""@en .
  ?person dbo:militaryConflict ?conflict .
  FILTER(?conflict = dbp:SpanishCivilWar) .
  
  ?force dbo:militaryConflict ?conflict ;
         dbo:commander ?commander .

  ?person dbo:memberOf ?force .
  BIND(?force AS ?militaryForce)
}
```",4,5,5,3,2,3,3,71,0,0,32,0,0.0,0
959,63,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of Yōichi Masuzoe.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager WHERE {
  # Identify Takashi Sekizuka's team and its manager
  ?team dbo:player takashi_sekizuka .
  ?team dbo:manager ?manager .

  # Ensure the manager is an alumnus of a Japanese university
  ?manager dbo:almaMater ?university .
  ?university rdfs:label ?uniLabel .
  FILTER (CONTAINS(LCASE(?uniLabel), ""japan"") && 
          CONTAINS(LCASE(STR(?university)), ""organization"") &&
          CONTAINS(LCASE(STR(?university)), ""educational institution""))

  # Identify Yōichi Masuzoe's birth year and native country
  ?yoshiichi dbo:birthYear ""1958""^^xsd:gYear .
  ?yoshiichi dbo:nativeCountry ?country .
  ?country rdfs:label ?countryLabel .

  # Ensure the manager is from the same country as Yōichi Masuzoe's residence
  ?manager dbo:nationality ?country .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
959,49,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerOfManager WHERE {
  # Step 1: Find Eiji Ōtsuka's alma mater
  ?eiji dbo:almaMater ?university .
  FILTER (str(?eiji) = ""Eiji Ōtsuka"" && 
          str(?university) IN (""University of Tokyo"", ""Waseda University"") &&
          ?university a dbo:EducationalOrganization &&
          ?university dbp:country ""Japan""@en)

  # Step 2: Find the manager of the 1998 Kashima Antlers season
  ?kashimaAntlersSeason dbp:manager ?manager .
  FILTER (str(?kashimaAntlersSeason) = ""Kashima Antlers 1998 season"")

  # Step 3: Ensure this manager is a sports manager and find their team
  ?team dbo:manager ?sportsManager .
  FILTER (str(?manager) = str(?sportsManager))

  # Step 4: Find the manager of that team
  ?team dbo:manager ?managerOfManager .
}
```",5,10,6,3,2,3,3,71,0,0,2,0,0.0,0
391,32,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find the city known as ""Hub City""
  ?city rdfs:label ""Hub City""@en .
  
  # Find Michael Ballhaus's notable works
  ?work dbo:director ?ballhaus .
  ?ballhaus rdfs:label ""Michael Ballhaus""@en .

  # Find actors in those works
  ?work dbo:starring ?actor .

  # Ensure the actor is native to the identified city
  ?actor dbo:nativePlace ?nativeCity .
  FILTER (?nativeCity = ?city)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
54,62,test,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameitta rdfs:label ""Ameitta Thiri Maha Dhamma Dewi of Ava""@en .
  ?predecessor dbo:successor ?ameitta .

  # Parent of the child of the parent of Thado Minsaw of Prome (Thado Minsaw's parent)
  ?thado rdfs:label ""Thado Minsaw of Prome""@en .
  ?parent dbo:child ?thado .
  
  # Child of the father of the child of Thinkhaya of Pagan (Thinkhaya's child)
  ?thinkhaya rdfs:label ""Thinkhaya of Pagan""@en .
  ?thinkhayasChild dbo:child ?thinkhaya .
  ?father dbo:child ?thinkhayasChild .

  # The person must satisfy all conditions
  FILTER (?predecessor = ?parent && ?thinkhayasChild = ?person)
}
```",7,7,8,3,3,3,3,71,0,1,1,0.0,0.0,0
488,49,test,"Give me the birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace ?administration WHERE {
  ?commander dbo:participatedInBattle ?battle .
  ?battle rdfs:label ""Boshin War""@en .
  
  ?masako dbo:spouse ?royalSpouse .
  ?masako rdfs:label ""Tokugawa Masako""@en .

  ?royalSpouse rdf:type dbo:RoyalFamilyMember .
  
  ?father dbo:child ?royalSpouse .
  ?father dbo:title ?administration .

  ?commander dbo:birthPlace ?birthPlace .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
747,71,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?athlete ?bandOfAthlete ?shenaBand ?songWriter ?bandOfSongWriter WHERE {
  # Find the decedent's birth date
  ?decedent dbo:birthDate ?birthDate .

  # Find athletes born on the same date as the decedent, who are soccer players from Zolotonosha
  ?athlete dbo:birthDate ?birthDate ;
           dbo:sport dbr:Soccer ;
           dbo:birthPlace dbr:Zolotonosha .
  
  OPTIONAL {
    ?athlete dbo:band ?bandOfAthlete .
  }

  # Find Shèna's birth date and their band
  ?shena dbo:birthDate ?birthDate ;
         rdfs:label ""Shèna""@en .

  OPTIONAL {
    ?shena dbo:band ?shenaBand .
  }

  # Find the writer of the song ""Amba Shepherd"" and their band
  ?song dbo:title ""Amba Shepherd""@en ;
        dbo:lyricsBy ?songWriter .

  OPTIONAL {
    ?songWriter dbo:band ?bandOfSongWriter .
  }
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
492,63,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?war rdf:type dbo:MilitaryConflict .
  ?war dbo:participatedIn ?herr .
  ?herr rdfs:label ""Frédéric-Georges Herr""@en .

  ?war dbo:commander ?commander .

  ?algeria dbo:capital ?algiers .
  ?algiers rdfs:label ""Algiers""@en .

  ?commander dbo:deathPlace ?algiers .

  ?frenchAlgeria dbo:author ?author .
  ?work dbo:creator ?author .
  ?work rdfs:label ""French Algeria""@en .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
617,68,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfChild ?childOfChild ?successor ?spouse WHERE {
  # Step 1: Find the child of Antiochus (son of Antiochus III the Great)
  ?antiochusIII rdfs:label ""Antiochus III""@en .
  ?antiochusIII dbo:child ?antiochusIV .

  # Step 2: Identify the parent of this child
  ?antiochusIV dbo:parent ?parentOfChild .

  # Step 3: Determine the child of the child from step 1, ensuring they are royalty
  ?parentOfChild dbo:child ?childOfChild .
  
  # Step 4: Identify the successor of Antiochus II Theos who is royalty
  ?antiochusII rdfs:label ""Antiochus II Theos""@en .
  ?antiochusII dbo:successor ?successor .

  # Ensure the successor is royalty (assuming a property or label indicates this)
  FILTER EXISTS { ?successor dbo:title ?title . FILTER regex(?title, ""King|Queen"", ""i"") }

  # Step 5: Find the spouse of the child of the successor identified in step 4
  ?successor dbo:child ?childOfSuccessor .
  ?childOfSuccessor dbo:spouse ?spouse .

  # Ensure the spouse is royalty (assuming a property or label indicates this)
  FILTER EXISTS { ?spouse dbo:title ?title . FILTER regex(?title, ""King|Queen"", ""i"") }
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
981,19,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of Time in Indonesia.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?person dbo:author ""Kamikaze Girls""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?person dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""beauty queen""))
  ?region rdfs:label ""Time (Indonesia)""@en .
  ?person dbo:country ?country .
  ?country dbo:containedInAdministrativeTerritory ?region
}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
378,60,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?triggeFame ?gahnWar WHERE {
  # Find Thomas Trigge's claim to fame in a military conflict
  ?trigge dbo:militaryConflict ?conflict .
  ?conflict rdfs:label ?triggeFame .

  # Find the war associated with Carl Pontus Gahn
  ?gahn dbo:birthName ""Carl Pontus Gahn"" .
  ?gahn dbo:war ?gahnWar .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
9,33,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?almaMater WHERE {
  # Query for the alma mater of any awardee of the Royal Medal
  ?person dbo:award ?award .
  ?award rdfs:label ""Royal Medal""@en .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }

  UNION

  # Query for John Alderdice's alma mater
  {
    ?johnAlderdice rdfs:label ""John Alderdice, Baron Alderdice""@en .
    ?johnAlderdice dbo:almaMater ?almaMater .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,18,test,"Give me the birth place of the person born, that is a beauty queen, as  and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?person rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""beauty queen"") && CONTAINS(LCASE(?label), ""salak, north sumatra""))
  OPTIONAL { ?person dbo:timeZone ?tz . }
  OPTIONAL { ?tz rdfs:label ""Asia/Jakarta""@en . }
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
54,49,test,"Give me the child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfFather ?predecessor WHERE {
  # Find Soe Min Wimala Dewi's father and her as his child
  ?soeMinWimalaDewi rdfs:label ""Soe Min Wimala Dewi""@en .
  ?father dbo:father ?soeMinWimalaDewi .
  ?father dbo:child ?childOfFather .

  # Find Thihapate of Mohnyin's related office holder or royalty
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .
  OPTIONAL {
    ?relatedOfficeHolder dbo:officeHolder ?thihapate ;
                        a dbo:Monarch ; # Assuming royalty is represented by Monarch class
                        dbo:predecessor ?predecessor .
  }

  # Ensure the predecessor matches the childOfFather
  FILTER (?childOfFather = ?predecessor)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,48,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?person rdfs:label ""Emilio Mola""@en .
  ?person dbo:commander ?militaryForce .

  ?event dbo:relatedEvent ?societalEvent ;
         dbo:relatedEvent ?generalEvent ;
         dbo:relatedEvent ?militaryConflict .

  ?societalEvent rdf:type dbo:SocietalEvent .
  ?generalEvent rdf:type dbo:Event .
  ?militaryConflict rdf:type dbo:MilitaryConflict .

  ?militaryForce dbo:participatedIn ?event .

  FILTER regex(?event, ""Francoist Spain"", ""i"")
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
303,27,test,"Give me the party of Guillermo Endara and party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?endaraParty ?ariasMadridParty WHERE {
  # Find the country of El Valle de Antón
  ?place rdfs:label ""El Valle de Antón""@en .
  ?place dbo:country ?country .

  # Find Arnulfo Arias Madrid's birthplace and political party
  ?ariasMadrid dbo:birthPlace ?place .
  ?ariasMadrid dbo:politicalParty ?ariasMadridParty .
  
  # Ensure Arnulfo Arias Madrid is a politician
  ?ariasMadrid rdf:type dbo:Politician .

  # Find Guillermo Endara's political party
  ?endara dbo:politicalParty ?endaraParty .
  ?endara rdfs:label ""Guillermo Endara""@en .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
488,45,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration ?birthPlace ?deathPlace WHERE {
  # Tokugawa Masako's spouse and their father if royalty
  ?masako dbo:spouse ?spouse .
  OPTIONAL {
    ?spouse rdfs:label ?spouseLabel .
    FILTER(CONTAINS(LCASE(?spouseLabel), ""royalty"")) .
    ?spouse dbo:father ?father .
    ?father dbo:title ?administration .
  }

  # Enomoto Takeaki's birthplace
  ?enomoto dbo:birthPlace ?birthPlace .

  # Tokugawa Ieyasu's death place
  ?ieyasu dbo:deathPlace ?deathPlace .

  # Bind individuals to their respective DBpedia resources
  VALUES (?masako ?spouse ?father ?enomoto ?ieyasu) {
    (dbo:Tokugawa_Masako ?spouse ?father dbo:Enomoto_Takeaki dbo:Tokugawa_Ieyasu)
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
281,61,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?militaryUnit ?birthCountry WHERE {
  ?politician a dbo:Politician ;
              dbo:officeHolder ?office ;
              dbo:member ?militaryUnit .
  FILTER EXISTS { ?militaryUnit dbo:country <http://dbpedia.org/resource/New_Zealand> }
  
  OPTIONAL { ?politician dbo:birthPlace ?birthPlace . 
             ?birthPlace rdfs:label ?birthCountry } .

  ?leader a dbo:Politician ;
          dbo:officeHolder ?office ;
          dbo:electedDuring ?election .
  FILTER (?election = <http://dbpedia.org/resource/1962_New_South_Wales_state_election>)

  OPTIONAL { ?politician dbo:spouse ?leader }
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
421,23,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Step 1: Get Dino Merlin's birth name
  ?dinoMerlin rdfs:label ""Dino Merlin""@en .
  ?dinoMerlin dbo:birthName ?birthName .

  # Step 2: Find a band member with the same birth name
  ?person dbo:birthName ?birthName .
  ?bandMember dbo:bandMember ?person .
  
  # Step 3: Identify an awardee associated with this band
  ?awardee dbo:award ?award .
  ?bandMember dbo:award ?award .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
801,19,test,Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer ?profession WHERE {
  # Query for the producer of ""Westside Story"" (song)
  ?song rdfs:label ""West Side Story (song)""@en .
  ?song dbo:producer ?producer .

  # Query for the profession of The Shadow's alter ego, Lamont Cranston
  ?person rdfs:label ""Lamont Cranston""@en .
  ?person dbo:alterEgo <http://dbpedia.org/resource/The_Shadow> .
  ?person dbo:profession ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
994,44,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMemberDokken ?associatedArtistDokken ?bandMemberMeshuggah ?associatedArtistMeshuggah ?associatedArtistSlayer
WHERE {
  # Find Donald Maynard Dokken and his band members
  ?dokken rdfs:label ""Donald Maynard Dokken""@en .
  ?dokken dbo:birthPlace ?place .
  ?dokken dbo:bandMember ?bandMemberDokken .

  OPTIONAL {
    ?bandMemberDokken dbo:associatedMusicalArtist ?associatedArtistDokken .
  }

  # Find Meshuggah and its band members
  ?meshuggah rdfs:label ""Meshuggah""@en ;
             a dbo:Band, dbo:Group, dbo:Organization .

  ?meshuggah dbo:bandMember ?bandMemberMeshuggah .

  OPTIONAL {
    ?bandMemberMeshuggah dbo:associatedMusicalArtist ?associatedArtistMeshuggah .
  }

  # Find S.A. Slayer and its associated musical artist
  ?slayer rdfs:label ""S.A. Slayer""@en .
  ?slayer dbo:associatedMusicalArtist ?associatedArtistSlayer .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,36,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?jonPertwee foaf:name ""Jon Pertwee""@en .
  ?jonPertwee dbo:child ?child .

  ?residence dbo:nationality dbc:United_Kingdom ;
             a dbo:Settlement .

  ?native dbo:nativePlace ?residence ;
          dbo:politician true ;
          dbo:officeHolderInCountry dbc:France .

  ?child foaf:name ?native .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
404,64,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child ?birthName WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  # Step 2: Find her spouse
  ?princess dbo:spouse ?spouse .

  # Step 3: Determine the father of her spouse
  ?spouse dbo:father ?father .

  # Step 4: Identify the child of this father who is royalty and parent to Prince Ernest Augustus of Hanover (born 1914)
  ?father dbo:child ?child .
  ?child a dbo:Monarch .  # Ensure the child is royalty
  ?child dbo:parent ?princeErnestAugustus .
  
  # Step 5: Find the birth name of Princess Victoria Louise of Prussia
  ?princess rdfs:label ?birthName .

  # Additional condition to ensure Prince Ernest Augustus of Hanover (born 1914) is correctly identified
  ?princeErnestAugustus rdfs:label ""Prince Ernest Augustus of Hanover""@en .
  FILTER(YEAR(?princeErnestAugustus dbo:birthday) = 1914)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,36,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Compton, California""@en .
  
  ?movie dbo:actor ?person ;
         rdf:type dbo:Work ;
         rdf:type dbo:TelevisionShow .

}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
9,55,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?almaMater WHERE {
  # Step 1: Find awardees of the Royal Medal
  ?person dbo:honoraryTitle ?title .
  FILTER regex(?title, ""Royal Medal"", ""i"") .

  # Step 2: Identify the figure known as the nickname of Queen's University Belfast
  ?figure foaf:name ?nickname .
  FILTER regex(?nickname, ""Queen's University Belfast"", ""i"") .

  # Step 3: Determine the alma mater of the mayor from the Northern Ireland Forum
  ?mayor dbo:almaMater ?mayorAlmaMater .
  ?mayor dbo:position ?position .
  FILTER regex(?position, ""Northern Ireland Forum"", ""i"") .

  # Find common alma mater among these individuals
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
  OPTIONAL { ?figure dbo:almaMater ?almaMater . }
  OPTIONAL { ?mayorAlmaMater = ?almaMater }

  FILTER(?almaMater != """")
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
328,40,test,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person WHERE {
  ?person dbo:commanderOfMilitaryConflict [
    dbo:militaryConflicts dbr:Eastern_Front_(World_War_II)
  ] .
  ?person dbo:ministerOfDefence dbr:Soviet_Union .
  OPTIONAL { 
    ?person dbo:award [
      rdfs:label ""Volcano and Ryukyu Islands campaign award""@en
    ] .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
626,16,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee ?militaryConflict WHERE {
  ?yermolovAward dbo:recipient ""Aleksey Petrovich Yermolov""@en .
  ?yermolovAward dbo:awardee ?awardee .

  OPTIONAL {
    ?conflict dbo:militaryCommander ""Alexander I of Russia""@en ;
              rdfs:label ?militaryConflict .
  }
}
```",4,5,5,2,2,3,2,20,0,0,21,0,0.0,0
465,8,test,"Give me the death place of Jiřina Štěpničková and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace ?party ?organization WHERE {
  # Part 1: Death place of Jiřina Štěpničková
  ?person rdfs:label ""Jiřina Štěpničková""@en .
  ?person dbo:deathPlace ?deathPlace .

  # Part 2: Administration of the leader of the Chamber of Deputies
  ?leader dbo:position ""President of the Chamber of Deputies of the Czech Republic"" ;
          dbo:memberOfParty ?party ;
          dbo:organization ?organization .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
488,65,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace WHERE {
  ?person rdfs:label ""Matsudaira Sadanobu""@en .
  ?person a dbo:Politician ;
          dbo:deathPlace ?deathPlace .
}

UNION

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Saigō Takamori""@en .
  ?person a dbo:MilitaryPerson ;
          dbo:birthPlace ?birthPlace .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
488,68,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?saitoBirthPlace ?matsudairaBirthPlace ?matsudairaDeathPlace WHERE {
  # Saitō Hajime's birthplace
  ?saito dbo:birthPlace ?saitoBirthPlace .
  ?saito rdfs:label ""Saitō Hajime""@en .

  # Boshin War as a military conflict and societal event
  ?war rdfs:label ""Boshin War""@en ;
      rdf:type dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .

  # Saitō Hajime's role in the Boshin War
  ?saito dbo:militaryCommanderOf ?war .

  # Matsudaira Sadanobu's birthplace and death place
  ?matsudaira rdfs:label ""Matsudaira Sadanobu""@en .
  ?matsudaira dbo:birthPlace ?matsudairaBirthPlace ;
              dbo:deathPlace ?matsudairaDeathPlace .

  # Matsudaira Tadamasa's father is Matsudaira Sadanobu
  ?tadamasa rdfs:label ""Matsudaira Tadamasa""@en .
  ?tadamasa dbo:father ?matsudaira .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
184,57,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg and parent of the child of Archduke Joseph Francis of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria
  ?ladislaus rdfs:label ""Archduke Ladislaus Philipp of Austria""@en .
  
  # Step 2: Find his child who is a royalty
  ?child dbo:parent ?ladislaus ;
         dbo:royalty ?royalty .

  # Step 3: Determine the child of this royal child
  ?grandchild dbo:parent ?child .

  # Step 4: Identify Géza von Habsburg's parent
  ?geza rdfs:label ""Géza von Habsburg""@en .
  ?gezaParent dbo:parent ?geza .

  # Step 5: Find the child of Archduke Joseph Francis of Austria
  ?joseph rdfs:label ""Archduke Joseph Francis of Austria""@en .
  ?childOfJoseph dbo:parent ?joseph .

  # Step 6: Match these conditions
  ?person dbo:parent ?grandchild ;
          dbo:parent ?gezaParent ;
          dbo:parent ?childOfJoseph .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,50,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace WHERE {
  # Matsudaira Tadamasa's lineage
  ?matsudairaTadamasa rdfs:label ""Matsudaira Tadamasa""@en .
  ?father1 dbo:child ?matsudairaTadamasa .
  ?grandfather1 dbo:child ?father1 .
  
  OPTIONAL { ?grandfather1 dbo:officeHolder ?office . }
  
  # Politician (father of the office holder)
  ?politician dbo:child ?grandfather1 .
  ?deathPlace dbo:deathPlace ?politician .

  # Emperor Go-Mizunoo's lineage
  ?goMizunoo rdfs:label ""Emperor Go-Mizunoo""@en .
  ?father2 dbo:child ?goMizunoo .
  
  OPTIONAL { ?administration dbo:administration ?father2 . }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,56,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to the name of Italian People's Party (1994).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?prodiParty ?andreottiParty WHERE {
  # Romano Prodi's party affiliation
  ?prodi dbo:birthName ""Romano Prodi""@en .
  OPTIONAL { ?prodi dbo:partyAffiliation ?prodiParty . }
  
  # Giulio Andreotti's party affiliation
  ?andreotti dbo:birthName ""Giulio Andreotti""@en .
  OPTIONAL { ?andreotti dbo:partyAffiliation ?andreottiParty . }

  # Reference to Italian People's Party (1994)
  ?ipp a dbo:PoliticalParty ;
       rdfs:label ""Italian People's Party (1994)""@en .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,66,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?nativeOfResidence WHERE {
  # Identify Sean Pertwee
  ?person dbo:birthName ""John Devon Roland Pertwee""@en .
  
  # Find his claim to fame (films and military conflicts)
  ?film dbo:actor ?person .
  ?conflict dbo:participant ?person .

  # Identify actors of these films or conflicts
  ?actor dbo:actor ?film ;
         dbo:participant ?conflict .

  # Check if the actor is a native of France, politician, and office holder
  ?actor dbo:nationality dbc:Francois_France ;
         dbo:occupation dbo:Politician ;
         dbo:officeHolder ?office .

  # Find their residence
  ?actor dbo:residence ?settlement .
  
  # Ensure the settlement is in Britain
  ?settlement a dbo:Settlement ;
              dbo:country dbc:United_Kingdom .

  # Identify native of this settlement
  ?nativeOfResidence dbo:nativePlace ?settlement .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
378,64,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person ?role ?conflict WHERE {
  VALUES ?individual { 
    dbr:Thomas_Trigge 
    dbr:Joaquín_Blake 
    dbr:C._P._Gahn
  }
  
  ?person rdfs:label ?individual .
  
  OPTIONAL {
    ?person dbo:commanderOf ?conflict .
    ?conflict rdfs:label ?role .
  }
  
  OPTIONAL {
    ?person dbo:participatedIn ?conflict .
    ?conflict rdfs:label ?role .
  }
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,48,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater ?nickname WHERE {
  # Find the mayor of Belfast
  ?belfast dbo:mayor ?mayor .
  ?mayor foaf:name ?name .
  
  # Get the alma mater of the mayor
  OPTIONAL { 
    ?mayor foaf:almaMater ?university .
    ?university rdfs:label ?almaMater .
  }
  
  # Find Queen's University Belfast and its nickname
  ?queenUni rdfs:label ""Queen's University Belfast""@en .
  OPTIONAL {
    ?queenUni dbo:nickname ?nickname .
  }

  FILTER(?belfast = <http://dbpedia.org/resource/Belfast>)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
528,54,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?battleForce ?war ?camperoForce WHERE {
  # Find the military force involved in the Battle of Pisagua
  ?battle rdfs:label ""Battle of Pisagua""@en .
  ?battle dbo:participatedIn ?battleForce .

  # Find the war associated with a commander active around --01-09
  OPTIONAL {
    ?war dbo:commander ?commander .
    ?commander dbo:dateOfBirth ?dob .
    FILTER (YEAR(?dob) < 1900 && YEAR(?dob) > 1800) # Assuming --01-09 refers to the 19th century
  }

  # Find the military force associated with Narciso Campero
  ?campero rdfs:label ""Narciso Campero""@en .
  ?campero dbo:militaryForce ?camperoForce .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
161,46,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce1 ?militaryForce2 WHERE {
  # Francisco Largo Caballero's military force
  ?person1 rdfs:label ""Francisco Largo Caballero""@en .
  OPTIONAL { 
    ?conflict1 dbo:militaryConflict ?militaryForce1 ;
               a dbo:SocietyEvent ;
               a dbo:MilitaryConflict .
    ?militaryForce1 dbo:associatedWith ?person1 .
  }

  # Person decedent at Francoist Spain
  ?event2 rdfs:label ""Francoist Spain""@en .
  OPTIONAL {
    ?conflict2 dbo:militaryConflict ?militaryForce2 ;
               a dbo:SocietyEvent ;
               a dbo:MilitaryConflict .
    ?person2 dbo:deathPlace ?event2 .
    ?militaryForce2 dbo:associatedWith ?person2 .
  }
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
184,25,test,Give me the child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?individual WHERE {
  # Find child of Archduke Joseph August
  ?august rdfs:label ""Archduke Joseph August of Austria""@en .
  ?august dbo:child ?child1 .

  # Find parent (which is the individual itself) of a child of Archduke Joseph Francis
  ?francis rdfs:label ""Archduke Joseph Francis of Austria""@en .
  ?francis dbo:child ?child2 .
  ?child2 dbo:parent ?individual .

  # Ensure the same individual is found in both relationships
  FILTER (?child1 = ?individual)
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
659,67,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander ?militaryForce WHERE {
  ?campaign dbo:type dbo:MilitaryConflict ;
            dbo:date ""1813""^^xsd:gYear ;
            dbo:place ?location .
  
  ?campaign dbo:commander ?commander .

  OPTIONAL { 
    ?commander rdfs:label ?commanderLabel .
    FILTER (CONTAINS(LCASE(?commanderLabel), ""rutger jan schimmelpenninck"") || CONTAINS(LCASE(?commanderLabel), ""polish horse""))
  }

  ?militaryForce dbo:type dbo:MilitaryUnit, dbo:Organization ;
                 dbo:commander ?commander .

  OPTIONAL { 
    ?militaryForce rdfs:label ?militaryForceLabel .
  }
}
```",7,14,8,3,3,3,3,71,0,0,7,0,0.0,0
16,57,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse ?personWithBirthName ?profession 
WHERE {
  # Find the spouse of Ted McGinley
  ?tedMcGinley rdfs:label ""Ted McGinley""@en .
  ?tedMcGinley dbo:spouse ?spouse .

  # Find the person born as Gigi Rice
  ?personWithBirthName dbo:birthName ""Gigi Rice"" .

  # Find the actor of Unnatural and their profession
  ?unnaturalSeries rdfs:label ""Unnatural (TV series)""@en .
  ?actor dbo:actorIn ?unnaturalSeries .
  ?actor dbo:profession ?profession .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
492,56,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?personDecedent WHERE {
  # Find the capital of Khemis Miliana District
  ?district dbo:capital ?capital .
  FILTER(STR(?district) = ""Khemis Miliana District"") .

  # Person decedent at the capital
  ?deceased dbo:deceasedAt ?capital ;
            foaf:name ?personDecedent .

  # Find Joseph C. Satterthwaite's work location
  ?satterthwaite foaf:name ""Joseph C. Satterthwaite"" .
  ?satterthwaite dbo:workLocation ?workLocation .

  # Person decedent at the work location of Joseph C. Satterthwaite
  ?deceased2 dbo:deceasedAt ?workLocation ;
             foaf:name ?personDecedent2 .

  # Find a commander in Franco-Hova Wars
  ?commander dbo:role ""Commander"" ;
             dbo:participatedIn <http://dbpedia.org/resource/Franco-Hova_Wars> .
  ?deceased3 dbo:deceasedAt ?workLocation ;
             foaf:name ?personDecedent3 .

  # Combine information to find a common person
  FILTER(?personDecedent = ?personDecedent2 && ?personDecedent = ?personDecedent3)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,18,test,"Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?landmark WHERE {
  # Find Nie Rongzhen's award and its elevation
  ?nie dbo:award ?award .
  ?award dbo:elevation ?elevation .

  # Identify a member of The Boils and their birthplace
  ?boilMember dbo:memberOfGroup ?theBoils .
  ?theBoils rdfs:label ""The Boils""@en .
  ?boilMember dbo:birthPlace ?birthPlace .

  # Find landmarks at the same elevation as Nie Rongzhen's award
  ?landmark dbo:elevation ?elevation .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
328,49,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?agencyLeader WHERE {
  ?gustavLeader dbo:officeHolder ?office .
  ?office dbo:governmentAgency ?governmentAgency .
  ?governmentAgency dbo:leader ?agencyLeader .

  ?bruceFraser rdfs:label ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  ?bruceFraser dbo:award ?award .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
778,20,test,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v5 <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v5 <http://dbpedia.org/ontology/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity WHERE {
  ?entity dbo:award ?prize .
  ?prize rdfs:label ""Wolf Prize in Medicine""@en .
  
  ?entity dbo:nationality ?nationality .
  FILTER (str(?nationality) = ""United States"")

  ?entity dbo:work ?software .
  ?software rdfs:label ?softwareLabel .
  FILTER (CONTAINS(LCASE(str(?softwareLabel)), ""pushd"") || CONTAINS(LCASE(str(?softwareLabel)), ""popd""))

  ?entity dbo:authorOf ?work .
  ?work rdf:type dbo:Software .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
427,65,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?prodiParty WHERE {
  # Part 1: Find the party of the father of an MIT alumnus
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  OPTIONAL { 
    ?alumnus dbo:father ?father .
    ?father dbo:partyAffiliation ?fatherParty .
  }

  # Part 2: Find the party of Romano Prodi
  ?prodi rdfs:label ""Romano Antonio Prodi""@en .
  ?prodi dbo:partyAffiliation ?prodiParty .

  FILTER(?prodiParty = dbr:Italian_People's_Party_(1994))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,53,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?militaryForce ?event ?societalEvent ?personDecedent WHERE {
  # Emilio Mola as a commander in an event
  ?event dbo:commander ?commander .
  ?commander rdfs:label ""Emilio Mola""@en .

  # Military force associated with the event
  ?event dbo:militaryForce ?militaryForce .

  # Societal event and military conflict involving a person who died during Francoist Spain
  ?societalEvent rdf:type dbo:MilitaryConflict .
  ?societalEvent dbo:participant ?personDecedent .
  ?personDecedent dbo:deathPlace ?deathPlace .
  
  # Filter for death place related to Francoist Spain
  FILTER(CONTAINS(LCASE(STR(?deathPlace)), ""francoist spain""))

  # Ensure the person participated in the Spanish Civil War
  ?militaryForce dbo:participatedIn ?civilWar .
  ?civilWar rdfs:label ""Spanish Civil War""@en .

  # Link societal event to military conflict
  ?societalEvent dbo:relatedEvent ?event .
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
645,20,test,"Give me the alma mater of the child of the parent of Adela Pankhurst and entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater ?country WHERE {
  # Find Adela Pankhurst's spouse and their child
  ?adelaPankhurst rdfs:label ""Adela Pankhurst""@en .
  ?adelaPankhurst dbo:spouse ?parent .
  ?child dbo:childOf ?parent .

  # Get the alma mater of this child
  ?child dbo:almaMater ?almaMater .

  # Find the commander in Battle of Diamond Rock and their residence country
  ?battle rdfs:label ""Battle of Diamond Rock""@en .
  ?commander dbo:commanderOf ?battle .
  ?residence dbo:resident ?commander .
  ?residence a dbo:Country .
  ?residence rdfs:label ?countryLabel .

  FILTER(LANG(?countryLabel) = 'en')
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
182,25,test,Give me the war of the work of Gotabhaya Rajapaksa and war of the author of 2019 Sri Lanka Easter bombings and entity in Sri Lanka.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?gotabhayaWar ?authorGroup ?entityInSriLanka WHERE {
  # Gotabhaya Rajapaksa's war
  ?person rdfs:label ""Gotabhaya Rajapaksk""@en .
  ?person dbo:role ?role .
  FILTER(CONTAINS(LCASE(STR(?role)), ""sri lankan civil war"")) .
  BIND(""Sri Lankan Civil War"" AS ?gotabhayaWar) .

  # Author of the 2019 Sri Lanka Easter bombings
  ?group rdfs:label ""National Thowheeth Jama'ath""@en .
  BIND(""National Thowheeth Jama'ath"" AS ?authorGroup) .

  # Entity in Sri Lanka related to these contexts
  OPTIONAL {
    ?entity rdfs:label ?label .
    FILTER(CONTAINS(LCASE(STR(?label)), ""sri lanka"")) .
    BIND(?label AS ?entityInSriLanka)
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
16,26,test,Give me the professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?profession WHERE {
  ?series rdfs:label ""Unnatural""@en .
  ?series dbo:actor ?actor .
  ?actor dbo:profession ?profession .
}
```",3,3,4,3,1,3,3,71,0,0,40872,0,0.0,0
184,44,test,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?commonParent WHERE {
  # Find grandchild of Archduke Joseph Karl
  ?grandchild dbo:parent ?childOfJosephKarl .
  ?childOfJosephKarl dbo:parent ?archdukeJosephKarl ;
                    rdfs:label ""Archduke Joseph Karl of Austria""@en .

  # Find child of Archduke Joseph Francis
  ?childOfJosephFrancis dbo:parent ?archdukeJosephFrancis ;
                        rdfs:label ""Archduke Joseph Francis of Austria""@en .

  # Identify common parent who is also a parent of Géza von Habsburg
  ?commonParent dbo:parent ?grandchild .
  ?commonParent dbo:parent ?childOfJosephFrancis .
  ?commonParent dbo:parent ?gezaVonHabsburg ;
                rdfs:label ""Géza von Habsburg""@en .

}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
838,16,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?otherBand WHERE {
  ?member dbo:bandMember ?yuGrupa .
  ?yuGrupa rdfs:label ""YU Grupa""@en .
  
  ?member dbo:artist _:a1 .
  ?member dbo:musicalArtist _:a2 .

  ?member dbo:band ?otherBand .
  FILTER NOT EXISTS { ?otherBand rdfs:label ""YU Grupa""@en }
}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
427,45,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?romanoBirthName ?prodiParty ?andreottiParty WHERE {
  # Romano Prodi's birth name and party affiliation
  ?prodi dbo:birthName ?romanoBirthName .
  ?prodi dbo:partyAffiliation ?prodiParty .

  # Giulio Andreotti's party affiliation
  ?andreotti dbo:partyAffiliation ?andreottiParty .

  # Filter to include Partito Popolare Italiano if relevant
  OPTIONAL {
    ?party rdfs:label ""Partito Popolare Italiano""@it .
    FILTER (?prodiParty = ?party || ?andreottiParty = ?party)
  }

  # Ensure we are querying the correct individuals by their labels
  VALUES ?prodi { <http://dbpedia.org/resource/Romano_Prodi> }
  VALUES ?andreotti { <http://dbpedia.org/resource/Giulio_Andreotti> }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,54,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of Don Dokken.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Find an associated musical artist of Watchtower
SELECT ?artist WHERE {
  ?band rdfs:label ""Watchtower""@en .
  ?band dbo:associatedBand ?artist .
}

# Step 2: Find the associated musical artist of that artist
SELECT ?secondArtist WHERE {
  ?artist dbo:associatedBand ?secondArtist .
  FILTER(?artist IN (SELECT ?artist WHERE {
    ?band rdfs:label ""Watchtower""@en .
    ?band dbo:associatedBand ?artist .
  }))
}

# Step 3: Find Fredrik Thordendal's band that is a group and an organization
SELECT ?band WHERE {
  ?person rdfs:label ""Fredrik Thordendal""@en .
  ?person dbo:member ?band .
  ?band rdf:type dbo:Band .
  ?band rdf:type dbp:MusicalGroup .
  ?band rdf:type dbo:Organization .
}

# Step 4: Find a member of that band who is also in Don Dokken
SELECT ?member WHERE {
  ?band IN (SELECT ?band WHERE {
    ?person rdfs:label ""Fredrik Thordendal""@en .
    ?person dbo:member ?band .
    ?band rdf:type dbo:Band .
    ?band rdf:type dbp:MusicalGroup .
    ?band rdf:type dbo:Organization .
  }) .
  ?member dbo:member ?band .
  ?dokken rdfs:label ""Don Dokken""@en .
  ?dokken dbo:member ?member .
}

# Step 5: Find the associated musical artist of that member
SELECT ?finalArtist WHERE {
  ?member IN (SELECT ?member WHERE {
    ?band IN (SELECT ?band WHERE {
      ?person rdfs:label ""Fredrik Thordendal""@en .
      ?person dbo:member ?band .
      ?band rdf:type dbo:Band .
      ?band rdf:type dbp:MusicalGroup .
      ?band rdf:type dbo:Organization .
    }) .
    ?member dbo:member ?band .
    ?dokken rdfs:label ""Don Dokken""@en .
    ?dokken dbo:member ?member .
  }) .
  ?member dbo:associatedBand ?finalArtist .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
92,48,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?filmArtist ?furneyBand WHERE {
  # Part 1: Find the artist related to the film ""Nevermore"" (2006)
  ?film dbo:title ""Nevermore""@en .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 2006) .
  ?film dbo:artist ?filmArtist .

  # Part 2: Find the band of Joseph Michael Furney
  ?person rdfs:label ""Joe Satriani""@en .
  ?person dbo:birthName ""Joseph Michael Furney"" .
  ?person dbo:bandMember ?furneyBand .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,70,test,"Give me the parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Seti I's grandchild
  ?grandchild dbo:child ?child .
  ?child dbo:child ?setiIChild .
  ?setiIChild dbo:spouse ?setiISpouse .
  
  # Commander in the Battle of Perire and their father's spouse
  ?commander dbo:participatedInBattle ?battlePerire .
  ?father dbo:child ?commander .
  ?father dbo:spouse ?spouseOfFather .

  # Ensure royalty status
  ?parent dbo:royalTitle ?title .

  # Parent of Nefertari's child (likely Seti I)
  ?nefertariChild dbo:child ?nefertari .
  ?nefertari dbo:spouse ?setiI .
  ?setiI dbo:child ?nefertariChild .

  # Logical connections
  FILTER(?grandchild = ?commander) 
  FILTER(?parent = ?spouseOfFather)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
281,45,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?militaryUnit WHERE {
  ?entity dbo:country dbr:Colony_of_New_Zealand .
  ?entity dbo:militaryUnit ?militaryUnit .
  
  ?professional dbo:profession ?war ;
                dbo:officeHolder true ;
                dbo:politician true ;
                dbo:memberOfMilitaryOrganization dbr:New_Zealand_Army .

  ?beauchamp dbo:name ""Beauchamp Seymour, 1st Baron Alcester""@en .
  ?beauchamp dbo:profession ?war .
  
  FILTER(?militaryUnit != ?entity)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
712,19,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?capital ?restingPlace WHERE {
  # Find the capital of Ukraine
  ?country rdfs:label ""Ukraine""@en .
  ?country dbo:capital ?capital .

  # Find a Hero of the Soviet Union and their resting place
  ?hero dbo:awardeeOf <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> ;
        dbo:finalRestingPlace ?restingPlace .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
959,56,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?sportsManagerNativeCountry WHERE {
  # Step 1: Find Eiji Ōtsuka's alma mater
  ?eiji dbo:almaMater ?university .
  FILTER (str(?university) = ""University of Tokyo""^^xsd:string) .

  # Step 2: Identify the sports manager for Kashima Antlers in 1998
  ?sportsManager dbo:sportsManagerForTeam ?team .
  ?team rdfs:label ""Kashima Antlers""@en .
  ?season dbo:year ?year .
  ?season dbo:team ?team .
  FILTER (?year = 1998) .

  # Step 3: Find the native country of the team manager
  ?teamManager dbo:nativeCountry ?nativeCountry .
  ?sportsManager dbo:managerOfTeam ?teamManager .

  # Step 4: Get the sports manager's native country
  ?sportsManager dbo:nativeCountry ?sportsManagerNativeCountry .
}
```",6,11,7,3,3,3,3,71,0,0,2,0,0.0,0
404,61,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfRoyalChild WHERE {
  # Step 1: Prince George William of Hanover
  ?princeGeorge rdfs:label ""Prince George William of Hanover""@en .
  
  # Step 2: Parent who is royalty
  ?royalParent dbo:child ?princeGeorge ;
               a dbo:Monarch .

  # Step 3: Child of this royal parent
  ?royalChild dbo:parent ?royalParent .

  # Step 4: Spouse of Princess Victoria Louise of Prussia
  ?princessVictoria rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?spouse dbo:spouse ?princessVictoria .

  # Step 5: Father of this spouse
  ?fatherOfSpouse dbo:child ?spouse .

  # Step 6: Child of this father who is royalty
  ?royalChild2 dbo:parent ?fatherOfSpouse ;
               a dbo:Monarch .

  # Step 7: Parent of this royal child
  ?parentOfRoyalChild dbo:child ?royalChild2 .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
294,27,test,"Give me the entity in the birth place, that is a settlement, of Marion James and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?result <http://dbpedia.org/ontology/location> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?entity WHERE {
  # Marion James' birth place as a settlement
  ?marionJames dbo:birthPlace ?place .
  ?place rdf:type dbo:Settlement .

  # Architect of P. D. Houston Jr. House's resting place
  ?house dbo:architect ?architect .
  ?architect dbo:deathPlace ?entity .

  # Luke Lea's resting place
  ?lukeLea dbo:birthYear ""1879""^^xsd:gYear ;
           dbo:deathPlace ?entity .

  # Ensure the entity is a settlement
  ?entity rdf:type dbo:Settlement .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,69,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  # Step 1: Find Joseph Michael's birth name and associated band
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbo:birthName ?birthName .
  
  OPTIONAL { 
    ?bandMember dbo:member ?person .
    ?bandMember rdfs:label ?bandLabel .
  }
  
  # Step 2: Find the reference for Nevermore (2006 film) and associated band
  ?film rdfs:label ""Nevermore (2006 film)""@en .
  OPTIONAL {
    ?film dbo:associatedBand ?nevermoreBand .
    ?nevermoreBand rdfs:label ?bandLabel .
  }
  
  # Step 3: Find Jim Sheppard's associated musical artist
  ?sheppard rdfs:label ""Jim Sheppard""@en .
  OPTIONAL {
    ?artist dbo:member ?sheppard .
    ?artist rdfs:label ?associatedArtist .
  }

  FILTER(?bandLabel = ?nevermoreBand)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
701,57,test,Give me the spouse of the father of Merneptah and parent of the child of the child of Seti I and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?ramesses2 dbo:fatherOf ?merneptah .
  ?ramesses2 dbo:spouse ?spouse .
  ?seti1 dbo:child ?ramesses2 .
  ?ramesses2 dbo:child ?meritamen .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,68,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?jonathonBandAward ?jonathonBandWar 
       ?electionLeaderBirthCountry ?electionLeaderWar 
       ?heatherRoyMilitaryUnit ?heatherRoyWar
WHERE {
  # Jonathon Band's award and associated war
  ?jonathonBand dbo:award ?jonathonBandAward .
  OPTIONAL { ?jonathonBandAward dbo:war ?jonathonBandWar . }

  # Leader of the 1962 New South Wales state election
  ?electionLeader dbo:officeHolderOf <http://dbpedia.org/resource/1962_New_South_Wales_state_election> ;
                  a dbo:Politician .
  OPTIONAL { ?electionLeader dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?birthPlace rdfs:label ?electionLeaderBirthCountry . FILTER (lang(?electionLeaderBirthCountry) = ""en"") }
  OPTIONAL { ?electionLeader dbo:war ?electionLeaderWar . }

  # Heather Roy's military unit and associated war
  ?heatherRoy dbo:militaryUnit ?heatherRoyMilitaryUnit .
  OPTIONAL { ?heatherRoyMilitaryUnit dbo:war ?heatherRoyWar . }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
161,31,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?militaryForcePerson ?militaryForceCivilWar WHERE {
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Francoist Spain""@en .
  
  OPTIONAL { 
    ?person dbo:militaryConflict ?conflict .
    ?conflict rdfs:label ""Spanish Civil War""@en .
    ?conflict dbo:militaryForce ?militaryForceCivilWar .
  }
  
  OPTIONAL {
    ?person dbo:militaryForce ?militaryForcePerson .
  }
}
```",4,7,5,3,2,3,3,71,0,0,514,0,0.0,0
820,19,test,Give me the child of the parent of the professional in Actor and professional in the award of Scott McCloud.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v4 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?scottMcCloud rdfs:label ""Scott McCloud""@en .
  ?scottMcCloud dbo:profession ?actorProfession .
  FILTER (str(?actorProfession) = ""Actor"") .

  ?scottMcCloud dbo:award ?award .
  
  OPTIONAL { 
    ?award rdfs:subClassOf ?parentAward .
    ?parentAward dbo:child ?child .
  }
}
```",5,5,6,3,2,3,2,20,0,0,128,0,0.0,0
161,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryForce WHERE {
  # For Francoist Spain's decedent
  ?person rdfs:label ""Francoist Spain""@en .
  ?decedent dbo:decedent ?person .
  ?decedent dbo:militaryCommander ?militaryForce1 .
  ?militaryForce1 a dbo:MilitaryConflict ;
                  a dbo:SocietalEvent .

  # For Indalecio Prieto's predecessor
  ?prieto rdfs:label ""Indalecio Prieto""@en .
  ?predecessor dbo:predecessor ?prieto .
  ?predecessor dbo:militaryCommander ?militaryForce2 .
  ?militaryForce2 a dbo:MilitaryConflict ;
                  a dbo:SocietalEvent .

  # For Emilio Mola
  ?mola rdfs:label ""Emilio Mola""@en .
  ?mola dbo:militaryCommander ?militaryForce3 .
  ?militaryForce3 a dbo:Event .

  FILTER (?militaryForce1 = ?militaryForce2 || ?militaryForce1 = ?militaryForce3 || ?militaryForce2 = ?militaryForce3)
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
16,50,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actorProfession ?gigiProfession WHERE {
  # Find the actor of ""Unnatural (TV series)""
  ?series rdfs:label ""Unnatural (TV series)""@en .
  ?series dbo:starring ?actor .
  
  # Get the profession of the actor
  ?actor dbo:profession ?actorProfession .

  # Find a person born as Gigi Rice
  ?person foaf:name ""Gigi Rice"" ;
          dbo:birthName ""Gigi Rice"" .

  # Get the profession of Gigi Rice
  ?person dbo:profession ?gigiProfession .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
54,22,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor WHERE {
  ?thihapate dbo:spouse ?thinkhaya .
  FILTER (str(?thihapate) = ""Thihapate of Mohnyin"" && str(?thinkhaya) = ""Thinkhaya of Pagan"") .

  ?child dbo:childOf ?thihapate ;
         dbo:childOf ?thinkhaya ;
         a dbo:OfficeHolder, dbo:Royalty .

  ?officeHolderPosition dbo:positionHeldBy ?child .
  ?predecessor dbo:positionHeldBy ?predecessorPerson .
  FILTER (?predecessorPerson != ?child) .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
492,50,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander WHERE {
  # Find the commander of the Battle of Verdun
  ?battle rdfs:label ""Battle of Verdun""@en .
  ?battle dbo:commander ?commander .

  # Find military conflicts involving this commander
  ?conflict dbo:commander ?commander .

  # Check if this person died in the capital of Algeria (Algiers)
  OPTIONAL {
    ?commander dbo:deathPlace ?place .
    ?place rdfs:label ""Algiers""@en .
  }
}
```",5,8,6,3,2,3,3,71,0,17,1,0.0,0.0,0
488,67,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace ?administration ?deathPlace WHERE {
  # Birth place of Enomoto Takeaki
  ?enomoto rdfs:label ""Enomoto Takeaki""@en .
  ?enomoto dbo:birthPlace ?birthPlace .

  # Administration of the father of the spouse (royalty) of Tokugawa Masako
  ?masako rdfs:label ""Tokugawa Masako""@en .
  ?masako dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Monarch .
  ?spouse dbo:father ?fatherOfSpouse .
  ?fatherOfSpouse dbo:administrativePost ?administration .

  # Death place of the father (politician) of the father (office holder) of Matsudaira Tadamasa
  ?matsudaira rdfs:label ""Matsudaira Tadamasa""@en .
  ?matsudaira dbo:father ?fatherOfMatsudaira .
  ?fatherOfMatsudaira rdf:type dbo:OfficeHolder .
  ?grandFatherOfMatsudaira dbo:father ?fatherOfMatsudaira .
  ?grandFatherOfMatsudaira rdf:type dbo:Politician .
  ?grandFatherOfMatsudaira dbo:deathPlace ?deathPlace
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
184,59,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?finalParent WHERE {
  # Step 1: Archduke Ladislaus Philipp of Austria's parent
  ?archduke rdfs:label ""Archduke Ladislaus Philipp of Austria""@en .
  ?archduke dbo:parent ?parent .

  # Step 2: Child of the parent who is a royalty
  ?child dbo:parent ?parent ;
         rdf:type dbo:RoyalPerson .

  # Step 3: Parent of this royal person
  ?royalParent dbo:parent ?child .

  # Step 4: Landmark with elevation and settlement type
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            rdf:type dbo:Settlement .
  
  # Step 5: Native of the landmark
  ?native dbo:nativePlace ?landmark .

  # Final step: Linking the parent of the royal person to the native of the landmark
  ?royalParent dbo:parent ?native .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
617,57,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Identify Antiochus IV Epiphanes
  ?antiochusIV rdfs:label ""Antiochus IV""@en .
  
  # Find his successor
  ?successor dbo:successorOf ?antiochusIV .

  # Find the child of the successor
  ?child dbo:childOf ?successor .

  # Find the spouse of this child, ensuring they are royalty
  ?spouse dbo:spouse ?child .
  
  FILTER EXISTS { ?spouse a dbo:Monarch } # Assuming royalty can be identified by being a Monarch
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
16,59,test,Give me the spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Find Ted McGinley's birth name
  ?person rdfs:label ""Ted McGinley""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  
  # Ensure the person is an actor (profession)
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""actor""))

  # Find spouse of Ted McGinley
  ?person dbo:spouse ?spouse .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
994,53,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  ?dokken dbo:musicalArtist ""Donald Maynard Dokken""@en .
  
  # Step 2: Find band members of Dokken
  ?dokken dbo:member ?bandMember .

  OPTIONAL {
    # Step 3: Check if the band member is associated with Red Tide
    ?bandMember dbo:associatedBand ?redTide .
    
    # Step 4: Trace connection to Watchtower through associated artists
    ?redTide dbo:associatedMusicalArtist ?watchtowerArtist .
    ?watchtowerArtist rdfs:label ""Watchtower""@en .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,56,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?nevermoreArtist ?associatedArtist ?josephsBand 
WHERE {
  # Find a member of Nevermore who is also an artist
  ?member dbo:band dbr:Nevermore .
  ?member dbo:occupation dbr:Musician .

  # Get the name of this artist
  ?member foaf:name ?nevermoreArtist .

  OPTIONAL {
    # Find associated musical artist of Jim Sheppard
    ?sheppard foaf:name ""Jim Sheppard""@en .
    ?association dbo:associatedBandMember ?sheppard ;
                 dbo:bandMember ?associatedArtist .
    
    # Get the name of this associated artist
    ?associatedArtist foaf:name ?artistName .
  }

  OPTIONAL {
    # Find band of person born as Joseph Michael
    ?person foaf:name ""Joseph Michael""@en ;
            dbo:birthName ""Joseph Michael"" .
    ?person dbo:band ?josephsBand .

    # Get the name of this band
    ?josephsBand rdfs:label ?bandLabel .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,19,test,Give me the birth place of the member of Dropkick Murphys and landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace ?landmark WHERE {
  # Part 1: Birth place of a member of Dropkick Murphys
  {
    ?member dbo:band dbr:Dropkick_Murphys .
    ?member dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Part 2: Landmark at elevation of the award for commander in Battle of Chishui River
  {
    ?battle rdfs:label ""Battle of Chishui River""@en .
    ?commander dbo:participatedIn ?battle .
    ?award dbo:recipient ?commander .
    ?award dbo:elevation ?elevation .
    ?landmark dbo:elevation ?elevation .
    ?landmark rdfs:label ?landmarkLabel .
  }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
345,17,test,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?team WHERE {
  ?person rdfs:label ""Stolz von Liechtenstein""@en .
  ?person dbo:soccerPlayer true .
  ?person dbo:soccerManager true .
  ?person dbo:birthDate ?birthdate .

  ?eiður rdfs:label ""Eiður Guðjohnsen""@en .
  ?eiður dbo:birthDate ?birthdate .

  OPTIONAL { 
    ?person dbo:team ?team .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
64,9,test,"Give me the entity in the region, that is a country, of Central European Time and alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Find the Central European Time zone entity
  ?timeZone rdfs:label ""Central European Time""@en .
  
  # Find countries associated with this time zone
  ?country dbo:timezone ?timeZone .

  # Find a writer who attended a university in this country and died in Sremska Kamenica
  ?person dbo:nationality ?nationality ;
          dbo:almaMater ?university ;
          dbo:deathPlace ?deathPlace .
  
  FILTER (CONTAINS(LANG(?person), ""en"")) # Ensure the person's data is in English

  # Ensure the person is a writer
  ?person rdf:type dbo:Writer .

  # Ensure the death place is Sremska Kamenica
  ?deathPlace rdfs:label ""Sremska Kamenica""@en .
  
  # Link the university to the country
  ?university dbp:country ?country .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
9,34,test,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?mayor WHERE {
  ?organisation dbo:location ?location .
  ?location rdfs:label ""Belfast""@en .
  
  OPTIONAL { 
    ?organisation dbo:mayor ?mayor .
    ?mayor a dbo:Politician ;
           dbo:almaMater ?university .
    FILTER (?university = <http://dbpedia.org/resource/Queen's_University_Belfast>)
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,37,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchildParent WHERE {
  # Seti I's children
  ?setiChild dbo:parent dbr:Seti_I .
  
  # Seti I's grandchildren (children of Seti I's children)
  ?grandchild dbo:parent ?setiChild .

  # Ramesses II's spouse
  ?ramessesSpouse dbo:spouse dbr:Ramesses_II .

  # Parent of the grandchild
  ?grandchildParent dbo:child ?grandchild .
  
  # Check if this parent is also Ramesses II's spouse
  FILTER (?grandchildParent = ?ramessesSpouse)
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
356,17,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in 2015 Sacramento Republic FC season.","SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find Gary Williams' birthplace
  ?gary dbo:birthPlace ?birthPlace .
  FILTER (CONTAINS(LCASE(?birthPlace), ""england"")) .

  # Ensure the birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement .

  # Find natives of this place who are soccer players and managers
  ?native dbo:nationality dbp:country ""England"" .
  ?native dbo:birthPlace ?birthPlace .
  ?native dbo:soccerPlayer true .
  ?native dbo:manager true .

  # Get the team associated with such a native
  ?native dbo:team ?team .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,38,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commanderEmilioMola ?militaryForceFranciscoLargoCaballero WHERE {
  # Find the event involving Emilio Mola and its commander
  ?event dbo:participant ?emilioMola .
  ?emilioMola rdfs:label ""Emilio Mola""@en .
  ?force dbo:event ?event .
  ?force dbo:commander ?commanderEmilioMola .

  # Find the societal event/military conflict involving Francisco Largo Caballero and its military force
  ?societalEvent dbo:participant ?franciscoLargoCaballero .
  ?franciscoLargoCaballero rdfs:label ""Francisco Largo Caballero""@en .
  ?conflict dbo:socialEvent ?societalEvent ;
            a dbo:MilitaryConflict .
  ?militaryForce dbo:militaryConflict ?conflict .
  BIND(?militaryForce AS ?militaryForceFranciscoLargoCaballero)
}
```",4,7,5,2,2,3,3,71,0,0,32,0,0.0,0
994,70,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember WHERE {
  # Step 1: Identify Don Dokken's associated musical artist
  ?dokkenPerson rdfs:label ""Don Dokken""@en .
  ?dokkenPerson dbo:associatedBand ?band .

  # Step 2: Find Watchtower's associated musical artist
  ?watchtowerBand rdfs:label ""Watchtower (band)""@en .
  ?watchtowerBand dbo:associatedMusicalArtist ?watchtowerArtist .

  # Step 3: Determine Fredrik Thordendal's band and its associated musical artist
  ?thordendalPerson rdfs:label ""Fredrik Thordendal""@en .
  ?thordendalPerson dbo:bandMember ?thordendalBand .
  ?thordendalBand dbo:associatedMusicalArtist ?thordendalArtist .

  # Step 4: Chain connections to find the final band member
  ?band dbo:bandMember ?bandMember .
  ?bandMember dbo:associatedMusicalArtist ?watchtowerArtist .
  ?bandMember dbo:associatedMusicalArtist ?thordendalArtist .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,38,test,"Give me the parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?parent WHERE {
  ?narapatiI dbo:child ?child .
  ?child dbo:predecessor ?predecessor .
  ?predecessor rdf:type dbo:Monarch ;
               dbo:officeHolder ?office .
  ?predecessor dbo:parent ?parent .
  ?thihapate dbo:relatedTo ?parent .
  FILTER EXISTS { ?narapatiI rdfs:label ""Narapati I of Ava""@en }
  FILTER EXISTS { ?thihapate rdfs:label ""Thihapate of Mohnyin""@en }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
404,52,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child ?spouse WHERE {
  ?er nestor:child ?child .
  ?child a dbo:Person ;
         dbo:parent ?parent .
  
  OPTIONAL { ?child dbo:spouse ?spouse . }
  
  FILTER (EXISTS { ?spouse foaf:name ""Princess Victoria Louise of Prussia""@en }).
  
  VALUES ?er {
    <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover>
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,55,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  # Sean Pertwee's claim to fame (film or military conflict)
  ?work rdfs:label ""Sean Pertwee""@en .
  
  OPTIONAL { 
    ?work dbo:actor ?actor . 
  }
  
  # Sean Pertwee is the child of John Devon Roland Pertwee
  ?seanPertwee rdfs:label ""Sean Pertwee""@en .
  ?johnPertwee rdfs:label ""John Devon Roland Pertwee""@en .
  ?seanPertwee dbo:childOf ?johnPertwee .

  # Sylvie Bermann's British residence
  ?sylvieBermann rdfs:label ""Sylvie Bermann""@en .
  ?residence dbo:nativeCountry <http://dbpedia.org/resource/United_Kingdom> .
  ?sylvieBermann dbo:residence ?residence .

  # The actor must be the child of John Devon Roland Pertwee and reside in the same place as Sylvie Bermann
  ?actor dbo:childOf ?johnPertwee .
  ?actor dbo:residence ?residence .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
16,52,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  ?satomi rdfs:label ""Satomi Ishihara""@en .
  ?satomi dbo:profession ?professional .

  # Find Ted McGinley using his birth name and get his spouse
  ?ted rdfs:label ""Ted McGinley""@en .
  ?ted dbo:birthName ""Edward Joseph McGinley"" .
  ?ted dbo:spouse ?spouse .

  # Identify Georgeanne Marie Rice as a person
  ?georgeanne rdfs:label ""Georgeanne Marie Rice""@en .
  
  # Ensure the spouse of Ted McGinley is also the professional of Satomi Ishihara
  FILTER (?spouse = ?professional)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,52,test,"Give me the figure known as QUB and alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?university WHERE {
  # Find the university for the Royal Medal awardee
  ?person dbo:award ?award .
  ?award rdfs:label ""Royal Medal""@en .
  ?person dbo:almaMater ?university .

  # Find the university for the mayor of an organization in Belfast
  ?mayor dbo:position dbp:Mayor .
  ?mayor dbo:city <http://dbpedia.org/resource/Belfast> .
  ?mayor dbo:almaMater ?university .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
666,19,test,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?manager ?nickname WHERE {
  ?team a dbo:SoccerClub ;
        rdfs:label ""Hull City A.F.C.""@en ;
        dbo:season ?season .
  
  FILTER(?season = ""2016–17""^^xsd:string)
  
  ?season dbo:manager ?manager .
  ?manager a dbo:SportsManager .

  OPTIONAL {
    ?team rdfs:label ?nickname .
    FILTER(langMatches(lang(?nickname), ""en""))
  }
}
```",5,9,6,3,2,3,2,20,0,0,2,0,0.0,0
659,55,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  ?regiment dbo:commander ?commander .
  ?regiment dbo:participatedIn ?event .
  
  FILTER((rdf:type(?event) = dbo:MilitaryConflict) && (rdfs:label(?event) != """")) .

  ?force1 dbo:commander ?schimmelpenninck .
  ?force2 dbo:commander ?wellington .
  ?force1 rdfs:label ""Military Force of Rutger Jan Schimmelpenninck""@en .
  ?force2 rdfs:label ""Military Force of Arthur Wellesley, 1st Duke of Wellington""@en .

  ?event dbo:militaryForce [dbo:commander ?schimmelpenninck ; dbo:commander ?wellington] .
}
```",6,11,7,2,3,3,3,71,0,0,15,0,0.0,0
488,31,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace WHERE {
  # Birth place of Saitō Hajime
  ?saitoHajime rdfs:label ""Saitō Hajime""@en .
  ?saitoHajime dbo:birthPlace ?birthPlace .

  # Death place of Tokugawa Ieyasu
  ?tokugawaIeyasu rdfs:label ""Tokugawa Ieyasu""@en .
  ?tokugawaIeyasu dbo:deathPlace ?deathPlace .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,56,test,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  # Find actors of ""The Departed""
  ?departedMovie rdfs:label ""The Departed""@en .
  ?departedMovie dbo:starring ?actor .

  # Check if the actor is native to Hub City (Columbia, South Carolina)
  ?actor dbo:nativePlace ?nativePlace .
  ?nativePlace rdfs:label ""Columbia, South Carolina""@en .

  # Ensure the actor has acted in another work that is a movie, work, and television show
  ?otherWork dbo:starring ?actor .
  FILTER EXISTS { ?otherWork rdf:type dbo:Film . }
  FILTER EXISTS { ?otherWork rdf:type dbo:TelevisionSeries . }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
981,17,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in Indonesia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person dbo:author ""Kamikaze Girls""@en .
  ?person dbo:title ?title .
  FILTER(CONTAINS(LCASE(STR(?title)), ""beauty queen""))
  ?person dbo:nationality <http://dbpedia.org/resource/Indonesia> .
  ?person dbo:birthPlace ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,19,0,0.0,0
55,22,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find producer of ""Used to Love Her""
  ?song dbo:title ""Used to Love Her""@en .
  ?song dbo:producer ?producer .

  # Step 2: Check if the producer is a band
  OPTIONAL { 
    ?producer rdfs:label ?producerLabel .
    FILTER regex(?producerLabel, ""band"", ""i"")
  }

  # Step 3: Find members of this band (if it's a band)
  OPTIONAL {
    ?producer dbo:bandMember ?member .
    ?member rdfs:label ?memberLabel .
    
    # Step 4: Check if the member is also a band
    OPTIONAL { 
      ?member dbo:bandMember ?subMember .
      ?subMember rdfs:label ?subMemberLabel .
      
      # Step 5: Find members of this sub-member (if it's a band)
      OPTIONAL {
        ?subMember dbo:bandMember ?finalMember .
        
        # Check if the final member is associated with San Francisco Symphony
        OPTIONAL { 
          ?finalMember dbo:group ?symphonyGroup .
          ?symphonyGroup rdfs:label ""San Francisco Symphony""@en .
        }
      }
    }
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
281,60,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardWar ?militaryUnit WHERE {
  # Part for Jonathon Band's awards and wars
  ?award dbo:recipient ?jonathanBand .
  ?jonathanBand rdfs:label ""Jonathon Band""@en .
  ?award dbo:war ?awardWar .

  OPTIONAL {
    # Part for military unit associated with a politician in the New Zealand Army
    ?politician rdf:type dbo:Politician ;
                dbo:officeHolder ?office ;
                dbo:nationality <http://dbpedia.org/resource/New_Zealand> .
    ?militaryUnit dbo:militaryUnitOf ?newZealandArmy ;
                  dbo:member ?politician .
    ?newZealandArmy rdfs:label ""New Zealand Army""@en .
  }
}
```",6,9,7,3,2,3,3,71,0,0,9,0,0.0,0
184,67,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonAncestor WHERE {
  # Step 1: Archduke Ladislaus Philipp of Austria's parent
  ?ladislaus dbo:parent ?parentLadislaus .
  
  # Step 2: Child of his parent (his sibling)
  ?sibling dbo:childOf ?parentLadislaus .
  
  # Step 3: Check if this sibling is royalty
  OPTIONAL { ?sibling dbo:title ?royaltyTitle . FILTER regex(?royaltyTitle, ""King|Queen|Archduke|Archduchess"", ""i"") }
  
  # Step 4: Child of this royal sibling
  ?childOfSibling dbo:parent ?sibling .
  
  # Step 5: Parent of Archduchess Margaret of Austria (born 1925)
  ?margaret rdfs:label ""Archduchess Margaret of Austria""@en .
  FILTER(YEAR(?margaret dbo:birthday) = 1925)
  ?parentMargaret dbo:child ?margaret .
  
  # Step 6: Child of her parent's parent
  ?ancestorMargaret dbo:parent ?parentMargaret .
  
  # Step 7: Parent of Géza von Habsburg
  ?geza rdfs:label ""Géza von Habsburg""@en .
  ?parentGeza dbo:child ?geza .
  
  # Step 8: Find common ancestor
  ?commonAncestor dbo:parent ?ancestorMargaret ;
                  dbo:parent ?parentGeza ;
                  dbo:parent ?childOfSibling .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,45,test,"Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parentOfThadoMinsaw ?childOfThinkhaya ?predecessor 
WHERE {
  # Thado Minsaw of Prome's parent
  ?thadoMinsaw rdf:type dbo:Person ;
               rdfs:label ""Thado Minsaw""@en .
  ?parentOfThadoMinsaw dbo:parent ?thadoMinsaw .

  # Thinkhaya of Pagan's child
  ?thinkhaya rdf:type dbo:Person ;
             rdfs:label ""Thinkhaya of Pagan""@en .
  ?childOfThinkhaya dbo:child ?thinkhaya .

  # Predecessor of the child who is an office holder and royalty, related to Thihapate of Mohnyin
  ?thihapate rdf:type dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .
  ?predecessor dbo:predecessor ?childOfThinkhaya ;
               rdf:type dbo:OfficeHolder, dbo:Royalty ;
               dbo:relatedTo ?thihapate .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,59,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member WHERE {
  # Find the leader of the 2010 Japanese House of Councillors election
  ?leader a dbo:Politician ;
          dbo:electedAsMemberOf ?election .
  
  # Ensure it's the 2010 election
  ?election dbp:date ""2010""^^xsd:gYear .

  # Get the residence country of this leader
  ?leader dbo:nationality ?country .

  # Find individuals born in 1958 and native to this country
  ?person dbo:birthDate ?date ;
          dbo:nationality ?country .
  
  FILTER (YEAR(?date) = 1958)

  # Identify their alma mater that is a Japanese organization, university, and educational institution
  ?person dbo:almaMater ?university .
  ?university a dbo:EducationalOrganization ;
              dbo:country dbr:Japan ;
              a dbo:University .

  # Ensure the member of the alma mater is an organization
  ?member dbo:alumni ?person .
}
```",6,12,7,3,2,3,3,71,0,0,167,0,0.0,0
498,9,test,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem and band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query for Solace of Requiem's band
SELECT ?solaceBand WHERE {
  ?entity rdfs:label ""Solace of Requiem""@en .
  ?entity a dbo:MusicalGroup ;
          dbo:genre ?genre .
  OPTIONAL { ?entity dbo:associatedBand ?solaceBand . }
}

# Query for Mortician's member band
SELECT ?morticianMemberBand WHERE {
  ?band rdfs:label ""Mortician (band)""@en .
  ?member dbp:memberOf ?band ;
          a dbo:Artist .
  OPTIONAL { ?member dbo:associatedBand ?morticianMemberBand . }
}
```",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
547,62,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?grandchildRestingPlace ?alanCunninghamRestingPlace ?actorRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  ?williamHaliburton rdfs:label ""William Haliburton""@en .
  ?williamHaliburton dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
  OPTIONAL { ?grandchild dbo:restingPlace ?grandchildRestingPlace . }
  
  # Resting place of Alan Cunningham
  ?alanCunningham rdfs:label ""Alan Cunningham""@en .
  OPTIONAL { ?alanCunningham dbo:restingPlace ?alanCunninghamRestingPlace . }

  # Resting place of the actor of the show with Emily Richard
  ?emilyRichard rdfs:label ""Emily Richard""@en .
  ?show dbo:starring ?emilyRichard ;
        dbo:starring ?actor .
  OPTIONAL { ?actor dbo:restingPlace ?actorRestingPlace . }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
251,26,test,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?administration ?warLocation ?deathPlace WHERE {
  # Administration of Forza Italia in 2013
  OPTIONAL {
    ?party rdfs:label ""Forza Italia""@en .
    ?party dbo:leader ?leader .
    ?leader dbo:office ?office .
    ?office dbo:startDate ?start .
    FILTER(YEAR(?start) = 2013)
    BIND(CONCAT(""Leader in 2013: "", STR(?leader)) AS ?administration)
  }

  # Location of the war involving Louis François Félix Musnier
  OPTIONAL {
    ?person rdfs:label ""Louis François Félix Musnier""@en .
    ?conflict dbo:participant ?person ;
              dbo:location ?warLocation .
    BIND(CONCAT(""War location: "", STR(?warLocation)) AS ?warLocation)
  }

  # Death place of the author of The Twelve Abbots of Challant
  OPTIONAL {
    ?book rdfs:label ""The Twelve Abbots of Challant""@en .
    ?author dbo:author ?book ;
            dbo:deathPlace ?deathPlace .
    BIND(CONCAT(""Death place: "", STR(?deathPlace)) AS ?deathPlace)
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,28,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?member ?artistLabel ?bandOfJosephMichael ?associatedArtistOfJimSheppard WHERE {
  # Find band members of Nevermore who are also artists
  {
    ?place rdfs:label ""Nevermore""@en .
    ?place dbo:bandMember ?member .
    ?member dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""artist""))
    ?member rdfs:label ?artistLabel .
  }
  
  UNION
  
  # Find the band associated with Joseph Michael
  {
    ?person rdfs:label ""Joseph Michael""@en .
    ?person dbo:associatedBand ?bandOfJosephMichael .
    ?bandOfJosephMichael rdfs:label ?bandLabel .
    BIND(?bandLabel AS ?member)
  }
  
  UNION
  
  # Find the associated musical artist of Jim Sheppard
  {
    ?person rdfs:label ""Jim Sheppard""@en .
    ?person dbo:associatedBand ?associatedArtistOfJimSheppard .
    ?associatedArtistOfJimSheppard rdfs:label ?artistLabel .
    BIND(?artistLabel AS ?member)
  }
}
```",4,5,5,2,3,3,3,71,1,7,0,0.125,1.0,0.2222222222222222
488,54,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?deathPlace ?administration ?birthPlace WHERE {
  # Part 1: Death place of the father (politician) of Matsudaira Tadamasa's father
  ?matsudairaTadamasa dbo:father ?father .
  ?father dbo:father ?grandfather .
  ?grandfather a dbo:Politician .
  ?grandfather dbo:deathPlace ?deathPlace .

  # Part 2: Administration of Emperor Go-Yōzei
  ?goYozei dbo:reign ?administration .
  
  # Part 3: Birth place of a commander in the Boshin War
  ?commander dbo:participatedInBattle ?boshinWar .
  ?boshinWar rdfs:label ""Boshin War""@en .
  ?commander dbo:birthPlace ?birthPlace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,50,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?sherryHormann a dbo:Person ;
                 rdfs:label ""Sherry Hormann""@en .
  
  ?spouse dbo:spouse ?sherryHormann ;
          dbo:claimToFame ?work .

  ?movie dbo:starring ?actor ;
         dbo:genre ?genre ;
         dbo:workExample ?televisionShow .

  ?televisionShow a dbo:TelevisionSeries .
  
  ?rozRyan a dbo:Person ;
           rdfs:label ""Roz Ryan""@en .
  
  ?movie dbo:starring ?rozRyan .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
54,50,test,"Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?parentOfPredecessor WHERE {
  ?thadoMinsaw rdfs:label ""Thado Minsaw""@en .
  ?thadoMinsaw dbo:parent ?parent1 .

  ?parent1 dbo:child ?thadoMinsaw .
  ?parent1 dbo:predecessor ?predecessor .

  ?predecessor rdf:type dbo:RoyalPerson ;
               dbo:officeHolder ?office .

  ?parentOfPredecessor dbo:parent ?predecessor .

  OPTIONAL {
    ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .
    ?thihapate dbo:parent ?parentOfPredecessor .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
251,22,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?administration WHERE {
  # Part 1: Administration of the ruling party in Sicily
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Sicily .
  OPTIONAL { 
    ?party dbo:leader ?administration .
  }
  
  UNION

  # Part 2: Location of the war involving Louis François Félix Musnier
  ?musnier rdfs:label ""Louis François Félix Musnier""@en ;
           dbo:participatedIn ?war .
  ?war dbo:location ?location .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
328,65,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of Joseph Stalin and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?fraser rdfs:label ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  ?award dbo:recipient ?fraser ;
         dbo:awardType ?awardType .
  
  OPTIONAL { 
    ?stalin rdfs:label ""Joseph Stalin""@en .
    ?agency dbo:leader ?stalin ;
            a dbo:GovernmentAgency .
    
    ?commander rdfs:label ?awardeeLabel .
    ?force dbo:militaryCommander ?commander ;
           dbo:location ?budapestLocation .
    ?budapestLocation rdfs:label ""Budapest""@en .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
251,23,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?warLocation ?deathPlace WHERE {
  # Part 1: Location of the war involving Louis François Félix Musnier
  ?musnier rdfs:label ""Louis François Félix Musnier""@en .
  ?musnier dbo:participatedIn ?conflict .
  ?conflict a dbo:MilitaryConflict ;
            dbo:location ?warLocation .

  # Part 2: Death place of the author of The Twelve Abbots of Challant
  ?book rdfs:label ""The Twelve Abbots of Challant""@en .
  ?book dbo:author ?author .
  ?author dbo:deathPlace ?deathPlace .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
528,66,test,Give me the war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?pisaguaForce ?camperoBirthName ?camperoForce ?rinconadaCommander ?rinconadaForce WHERE {
  # Battle of Pisagua
  ?battle rdfs:label ""Battle of Pisagua""@en .
  ?participant dbo:participatedIn ?battle ;
               dbo:militaryUnit ?pisaguaForce .

  # Narciso Campero's birth name and military force
  ?campero rdfs:label ""Narciso Campero""@en .
  ?campero dbo:birthName ?camperoBirthName .
  OPTIONAL { ?campero dbo:militaryUnit ?camperoForce . }

  # Battle of La Rinconada de Ate
  ?rinconadaBattle rdfs:label ""Battle of La Rinconada de Ate""@en .
  ?commander dbo:commanderOf ?rinconadaBattle ;
             rdfs:label ?rinconadaCommanderLabel .
  OPTIONAL { ?commander dbo:militaryUnit ?rinconadaForce . }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,66,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?restingPlace WHERE {
  # Resting place of the awardee of Gerald Graham's award
  {
    ?award dbo:recipient ?awardee .
    ?award dbo:givenBy ""Gerald Graham"" .
    ?awardee dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Resting place of the child of James Burton (property developer)
  {
    ?jamesBurton rdfs:label ""James Burton""@en .
    ?jamesBurton dbo:occupation dbr:Property_developer .
    ?child dbo:parent ?jamesBurton ;
           dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Resting place of the actor of ""Enemy at the Door""
  {
    ?film rdfs:label ""Enemy at the Door""@en .
    ?actor dbo:actedIn ?film ;
           dbo:deathPlace ?restingPlace .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,68,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parent WHERE {
  # Part 1: Landmark at elevation 96.0 that is a settlement
  ?landmark dbo:elevation ""96.0""^^xsd:float .
  ?landmark rdf:type dbo:Settlement .
  
  OPTIONAL { 
    ?native dbo:nativePlace ?landmark .
    ?parent1 dbo:child ?native .
  }
  
  # Part 2: Archduke Joseph Francis of Austria
  ?archduke rdfs:label ""Archduke Joseph Francis of Austria""@en .
  ?child dbo:childOf ?archduke .
  
  OPTIONAL {
    ?grandchild dbo:childOf ?child .
    ?royaltyParent dbo:child ?grandchild .
    FILTER (dbo:royalTitle(?royaltyParent))
    
    # Find the parent of the royalty
    ?parent2 dbo:child ?royaltyParent .
  }
  
  # Combine results to find a common parent
  OPTIONAL { 
    ?commonParent dbo:child ?parent1 .
    ?commonParent dbo:child ?parent2 .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
767,47,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?person rdfs:label ""George Kilbon Nash""@en .
  ?person dbo:almaMater ?almaMater .

  OPTIONAL {
    ?administration dbo:member ?person ;
                    dbo:member ?greenEntity .
    ?greenEntity rdfs:label ?greenLabel .
    FILTER(CONTAINS(LCASE(?greenLabel), ""green""))
    ?greenEntity a dbo:Settlement .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
92,58,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band1 ?band2 WHERE {
  ?person1 dbo:birthName ""Joseph Michael""@en .
  ?person1 dbo:musicalArtist ?artist1 .
  ?artist1 dbo:band ?band1 .

  ?person2 dbo:birthName ""Jim Sheppard""@en .
  ?person2 dbo:musicalArtist ?artist2 .
  ?artist2 dbo:band ?band2 .
  
  FILTER(?band2 = <http://dbpedia.org/resource/Nevermore_(band)>)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,22,test,Give me the member of University of Tsukuba and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?member ?manager WHERE {
  # Find members of the University of Tsukuba
  ?person dbo:almaMater ?university .
  ?university rdfs:label ""University of Tsukuba""@en .

  OPTIONAL {
    # Find Takashi Sekizuka's team and its manager
    ?teamMember dbo:member ?takashiSekizuka .
    ?takashiSekizuka rdfs:label ""Takashi Sekizuka""@en .
    ?team dbo:member ?takashiSekizuka .
    ?team dbo:manager ?manager .
  }

  # Match the member of University of Tsukuba with the manager
  FILTER (?person = ?manager)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,52,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?parentOfNysa ?spouseOfGrandchild ?successorChildSpouse WHERE {
  # Step 1: Identify Nysa
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  
  # Step 2: Find Parent of Nysa
  ?parentOfNysa dbo:child ?nysa .

  # Step 3: Identify a child of Antiochus III the Great
  ?antiochusIII rdfs:label ""Antiochus III the Great""@en .
  ?childOfAntiochusIII dbo:child ?antiochusIII .

  # Step 4: Find spouse of grandchild (royalty) of Antiochus III
  ?grandchild dbo:child ?childOfAntiochusIII ;
              rdf:type dbo:RoyalPerson .
  ?spouseOfGrandchild dbo:spouse ?grandchild .

  # Step 5: Identify successor of Antiochus II Theos and their royal child
  ?antiochusII rdfs:label ""Antiochus II Theos""@en .
  ?successor dbo:succeededBy ?antiochusII ;
             rdf:type dbo:RoyalPerson .
  ?royalChildOfSuccessor dbo:child ?successor ;
                         rdf:type dbo:RoyalPerson .

  # Step 6: Find spouse of this royal child
  ?successorChildSpouse dbo:spouse ?royalChildOfSuccessor .

  # Combine information to find a common person fitting all criteria
  FILTER (?parentOfNysa = ?spouseOfGrandchild || ?parentOfNysa = ?successorChildSpouse)
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
92,52,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMemberArtist ?musicalArtist 
WHERE {
  # Find the band member of Nevermore (2006 film) who is an artist
  ?film rdfs:label ""Nevermore""@en .
  FILTER(STRSTARTS(STR(?film), STR(<http://dbpedia.org/resource/Nevermore_(2006_film)>)))
  
  ?bandMember dbo:bandMemberOf ?film .
  ?bandMember a dbo:Artist .

  BIND(?bandMember AS ?bandMemberArtist)

  # Find the musical artist associated with Jim Sheppard
  ?person foaf:name ""Jim Sheppard""@en .
  ?person dbo:birthName ?sheppardBirthName .
  
  OPTIONAL {
    ?musicalArtist dbo:musicalArtistOf ?person .
  }

  # Find the band of Joseph Michael
  ?josephPerson foaf:name ""Joseph Michael""@en .
  ?band dbo:bandMember ?josephPerson .

  OPTIONAL {
    ?musicalArtist dbo:musicalArtistOf ?josephPerson .
  }
  
  BIND(?musicalArtist AS ?musicalArtist)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,51,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?band WHERE {
  # Part for Shèna
  {
    ?person rdfs:label ""Shèna""@en .
    OPTIONAL { ?person dbo:birthName ?birthName . }
    OPTIONAL { ?person dbo:band ?band . }
  }

  UNION

  # Part for the writer of Apollo (Hardwell song)
  {
    ?song dbo:title ""Apollo"" ;
          dbo:lyricsBy ?writer .
    ?writer rdfs:label ?writerLabel .
    FILTER(CONTAINS(LCASE(?writerLabel), ""apollo hardwell""))
    OPTIONAL { ?writer dbo:band ?band . }
  }
}
```",5,5,6,3,2,3,3,71,0,1,1,0.0,0.0,0
9,53,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?nickname WHERE {
  ?university rdfs:label ""Queen's University Belfast""@en .
  ?university dbo:nickName ?nickname .

  OPTIONAL { 
    ?allenHill dbo:almaMater ?university .
    FILTER (str(?allenHill) = str(""Allen Hill (scientist)"")@en)
  }

  OPTIONAL {
    ?mayor dbo:almaMater ?university .
    ?organization dbo:location ?belfast .
    ?mayor dbo:position ?organization .
    FILTER (CONTAINS(LCASE(str(?mayor)), ""politician""))
    FILTER (str(?belfast) = str(""Belfast"")@en)
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,63,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?amunParent ?merneptahSpouse WHERE {
  # Step 1: Find Amun-her-khepeshef's spouse
  ?amunHerKhepeshef dbo:spouse ?spouse .
  FILTER(STR(?amunHerKhepeshef) = ""http://dbpedia.org/resource/Amun-her-khepeshef"")

  # Step 2: Find a child of Amun-her-khepeshef's spouse
  OPTIONAL { ?child dbo:parent ?spouse . }

  # Step 3: Determine the parent of that child (could be either Amun-her-khepeshef or their spouse)
  OPTIONAL { ?amunParent dbo:child ?child . }
  
  # Step 4: Find children of Ramesses II
  ?ramessesII dbo:child ?ramessesChild .
  FILTER(STR(?ramessesII) = ""http://dbpedia.org/resource/Ramses_II"")

  # Step 5: Identify the parent of that child (Ramesses II)
  OPTIONAL { ?parent dbo:child ?ramessesChild . }
  
  # Step 6: Find the father of Merneptah
  ?merneptah dbo:father ?merneptahFather .
  FILTER(STR(?merneptah) = ""http://dbpedia.org/resource/Merenptah"")

  # Step 7: Identify the spouse of the father of Merneptah
  OPTIONAL { ?merneptahSpouse dbo:spouse ?merneptahFather . }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,58,test,"Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?peninsularWarCommander ?warOfCarlPontusGahn ?claimToFameThomasTrigge WHERE {
  # Find a commander in the Peninsular War
  ?commander dbo:occupation dbp:MilitaryPerson .
  ?commander dbo:participatedInMilitaryConflict ?peninsularWar .
  FILTER(CONTAINS(LCASE(STR(?peninsularWar)), ""peninsular war"")) .
  
  # Find wars involving Carl Pontus Gahn
  ?carlPontusGahn dbo:occupation dbp:MilitaryPerson .
  ?carlPontusGahn dbo:participatedInMilitaryConflict ?warOfCarlPontusGahn .

  # Find Thomas Trigge's claim to fame related to military and societal events
  ?thomasTrigge dbo:occupation dbp:MilitaryPerson .
  ?thomasTrigge dbo:knownFor ?claimToFameThomasTrigge .
  FILTER(CONTAINS(LCASE(STR(?claimToFameThomasTrigge)), ""military conflict"") && CONTAINS(LCASE(STR(?claimToFameThomasTrigge)), ""societal event"")) .

}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
427,68,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherParty ?michelePintoParty ?prodiParty WHERE {
  # Find an alumnus from MIT and their father's party affiliation
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
  OPTIONAL { ?father dbo:party ?fatherParty . }

  # Michele Pinto's party affiliation
  dbr:Michele_Pinto dbo:party ?michelePintoParty .

  # Romano Antonio Prodi's party affiliation
  dbr:Romano_Antonio_Prodi dbo:party ?prodiParty .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
391,61,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?actor WHERE {
  ?sherry dbo:spouse ?spouse .
  FILTER (str(?sherry) = ""Sherry_Hormann"") .

  ?spouse dbo:famousFor ?claimToFame .
  ?claimToFame rdf:type dbo:Film ;
               rdf:type dbo:TelevisionShow ;
               rdf:type dbo:CreativeWork .

  ?claimToFame dbo:actor ?actor .
}
```",6,10,7,3,2,3,3,71,0,0,11,0,0.0,0
528,57,test,Give me the war of the commander in the work of --01-09 and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commanderWar ?ireneMoralesWar ?narcisoCamperoForce WHERE {
  # Assuming a placeholder for the commander related to --01-09
  OPTIONAL { 
    ?work dbo:date ""2009-01-09""^^xsd:dateTime .
    ?work dbo:commander ?commander .
    ?commander dbo:participatedInMilitaryConflict ?commanderWar .
  }
  
  # War associated with Irene Morales
  ?ireneMorales rdfs:label ""Irene Morales""@en .
  ?ireneMorales dbo:participatedInMilitaryConflict ?ireneMoralesWar .

  # Military force or role of Narciso Campero Leyes
  ?narcisoCampero rdfs:label ""Narciso Campero Leyes""@en .
  ?narcisoCampero dbo:militaryForce ?narcisoCamperoForce .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
48,19,test,"Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Query for the writer of ""Emotion"" by Carly Rae Jepsen and their band
SELECT DISTINCT ?writerBand WHERE {
  ?album dbo:title ""Emotion""@en .
  ?album dbo:artistCarlyRaeJepsen _:b1 .
  ?song dbo:composer ?writer .
  ?writer foaf:name ?name .
  OPTIONAL { ?writer dbo:band ?writerBand . }
  
  FILTER EXISTS { ?album dbo:song ?song . }
}

UNION

# Query for the actor who is a musical artist in a show with Stacey Dash and their band
SELECT DISTINCT ?actorBand WHERE {
  ?show dbo:starringStaceyDash _:b2 .
  ?actor dbo:starringIn ?show .
  ?actor foaf:name ?name .
  OPTIONAL { ?actor dbo:musicalArtist ?isMusicalArtist . }
  FILTER EXISTS { ?actor dbo:musicalArtist true . }
  OPTIONAL { ?actor dbo:band ?actorBand . }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
391,65,test,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?movie dbo:starring ""Roz Ryan""@en .
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:Work .
  ?movie rdf:type dbo:TelevisionShow .

  ?spouse foaf:name ?hormannSpouseName .
  ?spouse dbo:spouse <http://dbpedia.org/resource/Sherry_Hormann> .

  ?claimToFame dbo:creator ?spouse .
  ?claimToFame rdf:type dbo:Work .

  ?actor dbo:nativePlace ?hubCity .
  ?hubCity rdfs:label ""Hub City""@en .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
617,66,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonIndividual WHERE {
  # Step 1: Find a child of Seleucus II Callinicus
  ?child1 dbo:parent dbr:Seleucus_II_Callinicus .
  
  # Step 2: Find the grandchild who is royalty
  ?grandchild dbo:parent ?child1 ;
              dbo:royalty true .

  # Step 3: Determine the parent of the commander in Battle of Panium's child
  ?commander rdfs:label ""Commander in Battle of Panium""@en .
  ?commanderChild dbo:parent ?commander .
  ?parentOfCommanderChild dbo:child ?commanderChild .

  # Step 4: Identify the spouse of Antiochus III the Great's child
  ?antiochusChild dbo:parent dbr:Antiochus_III_the_Great ;
                  dbo:spouse ?spouse .
  
  # Step 5: Find the common individual who satisfies both conditions
  FILTER (?grandchild = ?commonIndividual)
  FILTER (?parentOfCommanderChild = ?commonIndividual)
  FILTER (?spouse = ?commonIndividual)
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
251,21,test,Give me the death place of the author of The Twelve Abbots of Challant and administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace ?administration ?battleLocation WHERE {
  # Death place of Bartolomeo Sacchi (Placido)
  ?author rdfs:label ""Bartolomeo Sacchi""@en .
  ?author dbo:deathPlace ?deathPlace .

  # Administration of Forza Italia in 2013
  ?person rdfs:label ""Silvio Berlusconi""@en .
  ?position dbo:agent ?person ;
            dbo:startDate ?start ;
            dbo:endDate ?end .
  FILTER (?start <= ""2013-01-01""^^xsd:date && (?end >= ""2013-12-31""^^xsd:date || !bound(?end)))
  ?position dbp:office ?administration .

  # Location of the Battle of Marengo
  ?battle rdfs:label ""Battle of Marengo""@en .
  ?battle dbp:battleSite ?battleLocation .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
747,54,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?band1 ?band2 ?band3 WHERE {
  # Part 1: Band of the writer of a song by Amba Shepherd
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ?title .
  FILTER(CONTAINS(LCASE(?title), ""amba shepherd"")) .
  OPTIONAL { ?writer dbo:band ?band1 } .

  # Part 2: Person born on the same date as Pavlo Khudzik and their band
  ?pavlo dbo:birthDate ?date .
  ?person dbo:birthDate ?date .
  FILTER(?person != ?pavlo) .
  OPTIONAL { ?person dbo:band ?band2 } .

  # Part 3: Band of Shèna
  ?shena rdfs:label ""Shèna""@en .
  OPTIONAL { ?shena dbo:band ?band3 } .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,53,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childBirthName WHERE {
  # Step 1: Identify Ernest Augustus, Duke of Brunswick and his father
  ?ernestAugustus rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?ernestAugustus dbo:father ?grandfather .

  # Step 2: Find the spouse of Ernest Augustus's grandfather
  OPTIONAL { ?grandfather dbo:spouse ?royalSpouse . }

  # Step 3: Identify the child of this royal spouse who is Princess Victoria Louise of Prussia
  OPTIONAL {
    ?royalSpouse dbo:child ?princessVictoriaLouise .
    ?princessVictoriaLouise rdfs:label ""Princess Victoria Louise of Prussia""@en .
    ?princessVictoriaLouise foaf:name ?childBirthName .
  }

  # Step 4: Confirm that this individual is the parent of Prince Ernest Augustus of Hanover
  OPTIONAL {
    ?princessVictoriaLouise dbo:child ?ernestAugustus1914 .
    ?ernestAugustus1914 rdfs:label ""Prince Ernest Augustus of Hanover (born 1914)""@en .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,55,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Ernest Augustus, Duke of Brunswick
  ?ernestAugustus rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  
  # Step 2: Find his child who is a royalty
  ?child dbo:childOf ?ernestAugustus ;
         (dbo:title|dbo:royalTitle) ?title .

  # Step 3: Determine the spouse of this royal child
  ?spouse dbo:spouse ?child .
  
  # Step 4: Identify Princess Victoria Louise of Prussia and confirm she was born as royalty
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en ;
            dbo:birthPlace ?place ;
            (dbo:title|dbo:royalTitle) ?princessTitle .
  
  # Step 5: Find her parent who is also Ernest Augustus's father
  ?father dbo:child ?ernestAugustus, ?princess .

  # Step 6: Determine the parent of the royal child
  ?parent dbo:child ?child .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
994,61,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Identify Fredrik Thordendal's band
  ?fredrik a dbo:Band ;
           foaf:name ""Meshuggah"" .

  # Step 2: Find Don Dokken as a persona of a musical artist
  ?donDokken a dbo:MusicalArtist ;
             foaf:name ""Don Dokken"" .

  # Step 3: Retrieve the band members of Don Dokken
  ?bandMember dbo:memberOfBand ?donDokken .

  # Step 4: Get associated musical artists of those band members
  ?bandMember dbo:associatedMusicalArtist ?associatedArtist .

  # Step 5: Ensure these are part of bands, groups, or organizations
  ?associatedArtist a (dbo:Band | dbo:Group | dbo:Organization) .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
182,26,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war1 ?entityInNationality ?war2 WHERE {
  # Part 1: War of Jagath Dias
  ?person rdfs:label ""Jagath Dias""@en .
  OPTIONAL { ?person dbo:participatedInWar ?war1 . }

  # Part 2: Entity in the nationality of Tamara Kunanayakam
  ?tamara rdfs:label ""Tamara Kunanayakam""@en .
  ?tamara dbo:nationality ?nationality .
  OPTIONAL { ?entityInNationality dbo:nationality ?nationality . }

  # Part 3: War of the author of 2019 Sri Lanka Easter bombings
  ?event rdfs:label ""2019 Sri Lanka Easter bombings""@en .
  ?event dbo:author ?author .
  OPTIONAL { ?author dbo:participatedInWar ?war2 . }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,62,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  # Step 1: Find a royal parent of Prince George William of Hanover
  ?parent dbo:type dbo:RoyalPerson .
  ?parent dbo:child ?georgeWilliam .
  ?georgeWilliam rdfs:label ""Prince George William of Hanover""@en .

  # Step 2: Identify the spouse of Princess Victoria Louise of Prussia who is royalty
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?spouse .
  ?spouse dbo:type dbo:RoyalPerson .

  # Step 3: Find a child of Ernest Augustus, Crown Prince of Hanover who is royalty and matches the spouse
  ?ernestAugustus rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .
  ?ernestAugustus dbo:child ?child .
  ?child dbo:type dbo:RoyalPerson .
  FILTER (?spouse = ?child)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
421,25,test,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Find Edin Dervišhalidović by birth name and his birthplace
  ?edin a dbo:Person ;
        dbo:birthName ""Edin Dervišhalidović"" ;
        dbo:birthPlace ?birthPlace .

  # Find Samir Bekrić's birthplace
  ?samir a dbo:Person ;
         rdfs:label ""Samir Bekrić""@en ;
         dbo:birthPlace ?sameBirthPlace .

  # Ensure the birthplaces match
  FILTER (?birthPlace = ?sameBirthPlace)

  # Find an awardee from the specified category and its band members
  ?award a dbo:Award ;
         rdfs:label ?awardLabel .
  
  ?awardee a dbo:Person ;
           dbo:award ?award .

  ?bandMember a dbo:Band ;
              dbo:member ?awardee ;
              dbo:member ?person .

  # Ensure the person is Edin Dervišhalidović
  FILTER (?edin = ?person)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,56,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?claimToFame WHERE {
  # Thomas Trigge's claim to fame in military conflicts
  OPTIONAL {
    ?trigge dbo:birthName ""Thomas Trigge"" .
    ?trigge dbo:militaryConflict ?conflict1 .
    ?trigge dbo:claimToFame ?claimToFame .
  }
  
  # Joaquín Blake's claim to fame in military conflicts
  OPTIONAL {
    ?blake dbo:birthName ""Joaquín Blake"" .
    ?blake dbo:militaryConflict ?conflict2 .
    ?blake dbo:claimToFame ?claimToFame .
  }

  # Carl Pontus Gahn's claim to fame (not necessarily military)
  OPTIONAL {
    ?gahn dbo:birthName ""Carl Pontus Gahn"" .
    ?gahn dbo:claimToFame ?claimToFame .
  }
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
994,52,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of Don Dokken.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist WHERE {
  # Find associated musical artist of Watchtower's band member
  ?watchtowerMember dbo:bandMember ?watchtower .
  ?watchtower rdfs:label ""Watchtower""@en .
  ?watchtowerMember dbo:associatedBand ?artist1 .

  # Find associated musical artist of Meshuggah's band member who is also a band/group/organization
  ?meshuggahMember dbo:bandMember ?meshuggah .
  ?meshuggah rdfs:label ""Meshuggah""@en .
  ?meshuggahMember dbo:associatedBand ?artist2 .
  ?meshuggahMember rdf:type ?type .
  FILTER (?type IN (dbo:Band, dbo:MusicalGroup, dbo:Organization))

  # Find associated musical artist of Don Dokken's band member
  ?donDokkenMember dbo:bandMember ?donDokken .
  ?donDokken rdfs:label ""Don Dokken""@en .
  ?donDokkenMember dbo:associatedBand ?artist3 .

  # Ensure the same artist satisfies all conditions
  FILTER (?artist1 = ?artist2 && ?artist2 = ?artist3)
  BIND(?artist1 AS ?artist)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
747,42,test,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?personWithSameBirthDate ?ambaShepherdBand ?traceyElizabethMcSweenBand WHERE {
  # Find the birth date of Pavlo Khudzik
  ?pavloKhudzik dbo:birthDate ?birthDate .
  FILTER (str(?pavloKhudzik) = ""Pavlo_Khudzik"") .

  # Find another person with the same birth date
  ?personWithSameBirthDate dbo:birthDate ?birthDate .
  FILTER (?pavloKhudzik != ?personWithSameBirthDate)

  # Find the band associated with Amba Shepherd
  OPTIONAL {
    ?ambaShepherd dbo:band ?ambaShepherdBand .
    FILTER (str(?ambaShepherd) = ""Amba_Shepherd"")
  }

  # Find the person born as Tracey Elizabeth McSween and their band
  ?traceyElizabethMcSween rdfs:label ""Tracey Elizabeth McSween""@en .
  OPTIONAL {
    ?traceyElizabethMcSween dbo:band ?traceyElizabethMcSweenBand .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,20,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country WHERE {
  OPTIONAL {
    ?heffron dbo:birthPlace ?place1 .
    ?place1 rdf:type dbo:Country .
    ?place1 rdfs:label ?country .
    FILTER (str(?heffron) = ""Bob Heffron"")
  }
  
  OPTIONAL {
    ?seymour dbo:birthPlace ?place2 .
    ?place2 rdf:type dbo:Country .
    ?place2 rdfs:label ?country .
    FILTER (str(?seymour) = ""Beauchamp Seymour, 1st Baron Alcester"")
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,43,test,"Give me the person born on 1985-04-29 and band of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shenaBand ?songWriter ?writerBand WHERE {
  # Find Shèna and her band
  ?shena a dbo:Person ;
         dbo:birthDate ""1985-04-29""^^xsd:date ;
         rdfs:label ""Shèna""@en .
  
  OPTIONAL { 
    ?shena dbo:band ?shenaBand .
  }
  
  # Find the song by Amba Shepherd and its writer
  ?song dbo:lyricsBy ?writer ;
        dbo:musicalArtist dbr:Amba_Shepherd .

  # Get the band of the song's writer
  OPTIONAL {
    ?writer dbo:band ?writerBand .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,27,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?teamManager WHERE {
  # Step 1: Identify the 1998 Kashima Antlers team
  ?season a dbo:SoccerSeason ;
          dbo:sportsTeam ?kashimaAntlers1998 .
  
  FILTER(CONTAINS(LANG(?season), ""en"") && CONTAINS(STR(?season), ""1998"")).

  # Step 2: Find the manager for that season
  ?kashimaAntlers1998 dbo:manager ?manager .

  # Step 3: Determine if this manager is a sports manager
  OPTIONAL { 
    ?manager rdfs:label ?managerLabel .
    FILTER(CONTAINS(LANG(?managerLabel), ""en"") && CONTAINS(STR(?managerLabel), ""sports manager""))
  }

  # Step 4: Identify the team managed by this sports manager
  OPTIONAL {
    ?manager dbo:team ?currentTeam .
  }
  
  # Step 5: Find the manager of that current team
  OPTIONAL {
    ?currentTeam dbo:manager ?teamManager .
  }
}
```",3,4,4,3,1,3,3,71,0,0,10,0,0.0,0
488,29,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace ?administration ?birthPlace WHERE {
  # Yūki Hideyasu's father who is a politician and his death place
  ?father dbo:child ?yuki .
  ?yuki rdfs:label ""Yūki Hideyasu""@en .
  ?father rdf:type dbo:Politician .
  ?father dbo:deathPlace ?deathPlace .

  # Emperor Go-Yōzei's administration
  ?emperor rdfs:label ""Emperor Go-Yōzei""@en .
  ?emperor dbo:positionHeld ?administration .

  # Enomoto Takeaki's birth place
  ?takeaki rdfs:label ""Enomoto Takeaki""@en .
  ?takeaki dbo:birthPlace ?birthPlace .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
92,68,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?satrianiBand ?actorName ?nevermoreBand WHERE {
  # Find Joe Satriani's associated band
  ?person dbo:birthName ""Joseph Michael Furney""@en .
  ?person rdfs:label ""Joe Satriani""@en .
  OPTIONAL { ?person dbo:associatedBand ?satrianiBand . }

  # Find the actor of ""Return to Nuke 'Em High Volume 1"" who is an artist
  ?film dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?actor dbo:actorIn ?film ;
         rdfs:label ?actorName ;
         a dbo:Artist .

  # Check if this actor is also a band member associated with Nevermore (2006 film)
  OPTIONAL { 
    ?nevermoreFilm dbo:title ""Nevermore (2006 film)""@en .
    ?actor dbo:bandMember ?nevermoreBand .
    FILTER EXISTS { ?nevermoreBand dbo:associatedMusicalArtist ?actor }
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,42,test,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Find the native of Budapest
  ?native dbo:nativePlace dbr:Budapest .
  
  # Find their parent and child relationships
  ?native dbo:parent ?parent1 .
  ?child dbo:parent ?native ;
         dbo:parent ?archdukeJosephAugust .

  # Find the parent of the child of Archduke Joseph Francis
  ?child2 dbo:parent ?archdukeJosephFrancis .
  ?person dbo:parent ?child2 .

  # Ensure the person is the same in both roles
  FILTER (?parent1 = ?person)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
328,38,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person WHERE {
  # Find individuals associated with Ferenc Szálasi's forces
  ?szalasiForce dbo:commander ?person .
  ?szalasiForce rdfs:label ""Ferenc Szálasi""@en .

  # Find individuals who were leaders in government agencies under Joseph Stalin
  ?stalinAgency dbo:headOfState ?person ;
                rdfs:label ?agencyLabel .
  ?stalinAgency dbo:leader ?person .
  
  OPTIONAL {
    ?stalinAgency rdfs:label ""Soviet Union""@en .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
801,46,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer WHERE {
  ?work dbo:artist dbr:50_Cent ;
        a dbo:Song .
  
  ?work dbo:producer ?producer .

  OPTIONAL { 
    ?producer foaf:name ?name .
    FILTER(CONTAINS(LCASE(?name), ""the shadow""))
  }
}
```",5,8,6,3,2,3,3,71,21,9,6,0.7,0.7777777777777778,0.7368421052631577
232,58,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?sean a dbo:Actor ;
        foaf:name ""Sean Pertwee""@en ;
        dbo:father ?jon .
  
  ?jon a dbo:Person ;
       foaf:name ""Jon Pertwee""@en .

  OPTIONAL { ?sean dbo:film ?film . }
  OPTIONAL { ?sean dbo:militaryConflict ?conflict . }

  ?politician a dbo:Politician ;
              dbo:nationality <http://dbpedia.org/resource/Category:French_politicians> ;
              dbo:residence ?settlement .
  
  ?settlement a dbo:Settlement ;
              dbo:country <http://dbpedia.org/resource/United_Kingdom> .

  ?actor foaf:name ?name .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
827,17,test,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?spouseOfChild ?princessPaulineSpouse WHERE {
  # Find a child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach
  ?charlesAlexander dbo:child ?child .
  ?charlesAlexander rdfs:label ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .

  # Find the spouse of that child who is royalty
  ?child dbo:spouse ?spouseOfChild .
  ?spouseOfChild rdf:type/rdfs:subClassOf* dbo:Monarch .

  # Find Princess Pauline's spouse who is royalty
  ?princessPauline dbo:spouse ?princessPaulineSpouse .
  ?princessPauline rdfs:label ""Princess Pauline of Saxe-Weimar-Eisenach""@en .
  ?princessPaulineSpouse rdf:type/rdfs:subClassOf* dbo:Monarch .

  # Match the two royals
  FILTER (?spouseOfChild = ?princessPaulineSpouse)
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,59,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander WHERE {
  ?officeHolder dbo:officeHolderOf ?kingdom .
  ?kingdom rdfs:label ""Kingdom of Ireland""@en .
  
  ?war dbo:commanderInWar ?commander .
  ?war rdf:type dbo:MilitaryConflict .

  ?militaryUnit rdfs:label ""Polish Horse""@en .
  ?militaryUnit rdf:type dbo:MilitaryUnit ;
                dbo:commander ?commander .
}
```",6,11,7,3,2,3,3,71,0,0,71,0,0.0,0
16,63,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession ?spouse WHERE {
  # Get Satomi Ishihara's profession
  ?satomi a dbo:Person ;
          foaf:name ""Satomi Ishihara""@en .
  ?satomi dbo:profession ?profession .

  # Find Ted McGinley and Gigi Rice by their birth names
  ?ted a dbo:Person ;
       foaf:name ""Ted McGinley""@en .
  ?gigi a dbo:Person ;
        foaf:name ""Gigi Rice""@en .

  # Find the spouse of both Ted McGinley and Gigi Rice
  ?ted dbo:spouse ?spouse .
  ?gigi dbo:spouse ?spouse .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,46,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName ?war1 ?war2 WHERE {
  # Carl Pontus Gahn's birth name and wars he participated in
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:birthName ?birthName .
  OPTIONAL { ?person dbo:participatedIn ?war1 . }

  # Commander from the Peninsular War (e.g., Arthur Wellesley) and wars he participated in
  ?commander rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  OPTIONAL { ?commander dbo:participatedIn ?war2 . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
356,20,test,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?player WHERE {
  # Step 1: Identify the 2015 Sacramento Republic FC season
  ?season rdfs:label ""Sacramento Republic FC 2015 season""@en .
  
  # Step 2: Find its predecessor and successor seasons
  ?predecessor dbo:successor ?season .
  ?successor dbo:predecessor ?predecessor .

  # Ensure the successor is a soccer club season
  ?successor rdf:type dbo:SoccerClubSeason .

  # Step 3: Identify Gary Williams' birthplace
  ?gwilliams dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?labelBirthPlace ;
              rdf:type dbo:Settlement ;
              dbo:country dbc:England .

  # Step 4: Find the native team of Gary Williams
  ?team dbo:nativePlace ?birthPlace ;
        rdf:type dbo:SoccerClub .

  # Step 5: Identify a player who is also a manager from this team
  ?player dbo:playsFor ?team ;
          rdf:type dbo:SoccerPlayer .
  
  OPTIONAL {
    ?player dbo:managerOf ?managedTeam .
  }
}
```",6,12,7,3,2,3,2,20,0,0,1,0,0.0,0
645,17,test,Give me the entity in United Kingdom and alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?adela a dbo:Person ;
         rdfs:label ""Adela Pankhurst""@en .
  
  OPTIONAL { ?parent dbo:child ?adela . }
  OPTIONAL { ?adela dbo:almaMater ?almaMater . }

  FILTER EXISTS { 
    ?almaMater dbo:country dbr:United_Kingdom
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
696,17,test,Give me the landmark at elevation of the award of the commander in Battle of Chishui River and birth place of Tim Brennan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?landmark ?birthPlace WHERE {
  # Find the award related to the Battle of Chishui River and its elevation
  ?battle rdfs:label ""Battle of Chishui River""@en .
  ?award dbo:awardedFor ?battle .
  ?award dbo:elevation ?elevation .

  # Find a landmark at this elevation
  ?landmark dbo:elevation ?elevation .

  # Find Tim Brennan's birthplace
  ?tim rdfs:label ""Tim Brennan""@en .
  ?tim dbo:birthPlace ?birthPlace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
184,54,test,"Give me the parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of Budapest.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parentOfNativeBudapest WHERE {
  # Step 1: Find the parent of Archduchess Ilona of Austria
  ?ilona dbo:parent ?parentIlona .
  
  # Step 2: Find the child of this parent and then that child's own child
  ?childOfParentIlona dbo:parent ?parentIlona .
  ?grandChildOfParentIlona dbo:parent ?childOfParentIlona .

  # Step 3: Ensure the grandchild is a royalty member
  ?grandChildOfParentIlona rdf:type dbo:RoyalFamilyMember .

  # Step 4: Find the parent of Archduke Ladislaus Philipp of Austria
  ?ladislaus dbo:parent ?parentLadislaus .
  
  # Step 5: Find the child of this parent and then that child's own child
  ?childOfParentLadislaus dbo:parent ?parentLadislaus .
  ?grandChildOfParentLadislaus dbo:parent ?childOfParentLadislaus .

  # Step 6: Ensure the grandchild is a native of Budapest
  ?grandChildOfParentLadislaus dbo:nativePlace ?budapest .
  FILTER (str(?budapest) = ""Budapest"")

  # Step 7: Find common individual satisfying both conditions
  FILTER (?grandChildOfParentIlona = ?grandChildOfParentLadislaus)

  # Step 8: Identify the parent of the native of Budapest
  ?parentOfNativeBudapest dbo:child ?grandChildOfParentLadislaus .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,63,test,"Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgo ?almaMater ?settlement WHERE {
  # Find the alter ego of Black Hood
  ?blackHood dbo:alias ""Black Hood"" .
  ?blackHood dbo:alterEgo ?alterEgo .

  # Find George K. Nash's alma mater and a settlement in his administration
  ?nash foaf:name ""George K. Nash"" .
  ?nash dbo:almaMater ?almaMater .
  
  OPTIONAL {
    ?administration dbo:member ?entity .
    ?entity dbo:location ?settlement .
    FILTER(?entity = ?nash) # Ensure the entity is George K. Nash
  }

  # Find the writer of ""Where It's At"" from Dustin Lynch's album
  ?album dbo:title ""Where It's At""@en .
  ?album dbo:artist <http://dbpedia.org/resource/Dustin_Lynch> .
  ?song dbo:lyricsBy ?writer .
  FILTER(?song = ?album) # Ensure the song is part of the album

  # Combine results to find a common reference
  OPTIONAL {
    ?alterEgo rdfs:label ?commonReference .
    ?almaMater rdfs:label ?commonReference .
    ?settlement rdfs:label ?commonReference .
    ?writer rdfs:label ?commonReference .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,53,test,"Give me the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Thado Minsaw of Prome's parent
  ?thadoMinsaw dbo:parent ?parent .
  ?thadoMinsaw rdfs:label ""Thado Minsaw""@en .

  # Thinkhaya of Pagan's child and its father (Thinkhaya himself)
  ?thinkhayaChild dbo:childOf ?thinkhaya .
  ?thinkhaya rdfs:label ""Thinkhaya of Pagan""@en .
  
  # Predecessor relationship
  ?predecessor dbo:predecessor ?thinkhayaChild .

  # Office holder and royalty related to Thihapate of Mohnyin
  ?thihapate dbo:officeHolder ?person .
  ?thihapate dbo:royalty ?person .
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .

  # Linking the person to all conditions
  FILTER (?parent = ?predecessor && ?thinkhayaChild = ?person)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,58,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander WHERE {
  # Francisco Largo Caballero and Spanish Civil War
  ?person rdfs:label ""Francisco Largo Caballero""@en .
  ?civilWar rdfs:label ""Spanish Civil War""@en .
  ?person dbo:participatedIn ?civilWar .
  
  OPTIONAL {
    ?civilWar dbo:commander ?commander1 .
  }
  
  # Rif War
  ?rifWar rdfs:label ""Rif War""@en .
  
  OPTIONAL {
    ?rifWar dbo:commander ?commander2 .
  }

  FILTER (?commander1 = ?commander2)
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
9,43,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?almaMaterJohnAlderdice ?almaMaterRoyalMedalist WHERE {
  # Alma mater of John Alderdice
  ?johnAlderdice dbo:almaMater ?almaMaterJohnAlderdice .
  ?johnAlderdice rdfs:label ""John Alderdice""@en .

  OPTIONAL {
    # Awardee related to Royal Medals and QUB
    ?medalist dbo:award ?royalMedal .
    ?royalMedal rdfs:label ""Royal Medal""@en .
    ?medalist dbo:almaMater ?almaMaterRoyalMedalist .
    ?qub rdfs:label ""Queen's University Belfast""@en .
    ?medalist dbo:almaMater ?qub .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
645,19,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of the parent of Adela Pankhurst.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?james a dbo:Person ;
         rdfs:label ""James Wilkes Maurice""@en .
  ?residence dbo:resident ?james ;
             dbo:country ?country .
  
  OPTIONAL { 
    ?adela a dbo:Person ;
           rdfs:label ""Adela Pankhurst""@en .
    ?parent dbo:child ?adela .
    ?child dbo:parent ?parent ; # This should be Adela herself
           dbo:almaMater ?entity .
  }
  
  FILTER (?country = ?entity)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
617,20,test,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?child ?spouse WHERE {
  ?antiochus rdfs:label ""Antiochus III the Great""@en .
  ?antiochus dbo:child ?child .
  OPTIONAL { ?child dbo:spouse ?spouse . }
}
```",3,3,4,2,2,3,3,71,4,4,0,0.5,1.0,0.6666666666666666
547,29,test,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?restingPlace WHERE {
  # Alan Cunningham's resting place
  { 
    ?cunningham rdfs:label ""Alan Cunningham""@en .
    ?cunningham dbo:finalRestingPlace ?restingPlace .
    BIND(?cunningham AS ?person)
  }
  
  UNION
  
  # Actor of ""Enemy at the Door""
  {
    ?film rdfs:label ""Enemy at the Door""@en .
    ?film dbo:starring ?actor .
    ?actor dbo:finalRestingPlace ?restingPlace .
    BIND(?actor AS ?person)
  }
  
  UNION
  
  # James Burton (Egyptologist)'s resting place
  {
    ?burton rdfs:label ""James Burton (Egyptologist)""@en .
    ?burton dbo:finalRestingPlace ?restingPlace .
    BIND(?burton AS ?person)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
994,50,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Identify bands associated with Donald Maynard Dokken
  ?dokkenBand dbo:musicalArtist dbr:Donald_Maynard_Dokken ;
              a dbo:MusicalGroup, dbo:Organization .

  # Step 2: Find Fredrik Thordendal's band that is also an organization and group
  ?thordendalBand dbo:bandMember dbr:Fredrik_Thordendal ;
                  a dbo:MusicalGroup, dbo:Organization .

  # Step 3: Ensure the bands are connected through Fredrik Thordendal
  ?dokkenBand ?p ?thordendalBand .

  # Step 4: Find associated musical artists of those bands
  ?thordendalBand dbo:musicalArtist ?associatedArtist .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
488,20,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace (GROUP_CONCAT(?deathPlace; separator="", "") AS ?deathPlaces) WHERE {
  # Birth place of Enomoto Takeaki
  ?enomoto rdfs:label ""Enomoto Takeaki""@en .
  ?enomoto dbo:birthPlace ?birthPlace .

  # Father of Yūki Hideyasu and his death place
  ?yuki rdfs:label ""Yūki Hideyasu""@en .
  ?yuki dbo:father ?father .
  
  OPTIONAL {
    ?father dbo:deathPlace ?deathPlace .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
392,26,test,"Give me the entity in the region, that is a country, of Central European Time and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?country WHERE {
  ?person rdfs:label ""Sebastiano Bianchetti""@en .
  ?person dbo:residence ?settlement .
  ?settlement rdf:type dbo:Settlement .
  ?settlement dbo:province ?province .
  ?province dbo:region ?region .
  ?region dbo:timeZone ?timezone .
  FILTER (str(?timezone) = ""Central European Time"")
  ?region dbo:country ?country .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,57,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?sASArtist ?bandMemberArtist ?dokkenBandMember WHERE {
  # Step 1: Find S.A. Slayer and its associated musical artist
  ?slayer rdfs:label ""S.A. Slayer""@en .
  ?slayer dbo:associatedMusicalArtist ?sASArtist .

  # Step 2: Identify a band member who is also a band/group/organization
  ?bandMember dbo:bandMember ?slayer ;
              rdf:type ?type1, ?type2, ?type3 .
  FILTER(?type1 = dbo:Band || ?type1 = dbo:MusicalGroup || ?type1 = dbo:Organization) &&
  FILTER(?type2 = dbo:Band || ?type2 = dbo:MusicalGroup || ?type2 = dbo:Organization) &&
  FILTER(?type3 = dbo:Band || ?type3 = dbo:MusicalGroup || ?type3 = dbo:Organization) .

  # Step 3: Connect this band member to Fredrik Thordendal
  ?bandMember dbo:associatedBand ?thordendalBand .
  ?thordendalBand dbo:bandMember <http://dbpedia.org/resource/Fredrik_Thordendal> .

  # Step 4: Find Don Dokken and his band members
  ?dokken rdfs:label ""Don Dokken""@en ;
          rdf:type dbo:MusicalArtist .
  ?dokken dbo:bandMember ?dokkenBandMember .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
838,17,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of Raša Đelmaš.","SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonBandMember WHERE {
  ?yuGrupa rdfs:label ""YU Grupa""@en .
  ?member1 dbo:bandMember ?yuGrupa .

  ?rasaBand rdfs:label ?rasaLabel .
  FILTER(CONTAINS(LCASE(?rasaLabel), ""raša đelmaš"") && CONTAINS(LCASE(?rasaLabel), ""band""))
  ?member2 dbo:bandMember ?rasaBand .

  FILTER (?member1 = ?commonBandMember)
  FILTER (?member2 = ?commonBandMember)
}
```",4,7,5,3,2,3,2,20,0,0,4,0,0.0,0
994,27,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?person rdfs:label ""Don Dokken""@en .
  ?person a dbo:MusicalArtist .
  ?person dbo:bandMember ?band .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
281,54,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonWar ?birthCountry WHERE {
  # Find the awardee of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:honour ""Knight Grand Cross of the Order of the Bath"" .
  
  # Wars associated with this awardee
  ?awardee dbo:participatedInWar ?war1 .

  # Wars involving the New Zealand Army
  ?nzArmy rdf:type dbo:MilitaryUnit ;
          dbo:participatedInWar ?war2 .

  # Find common wars between the awardee and New Zealand Army
  FILTER (?war1 = ?war2)
  BIND(?war1 AS ?commonWar)

  # Leader of the 1962 NSW state election who is a politician
  ?election dbo:leader ?leader .
  FILTER (strstarts(str(?election), ""http://dbpedia.org/resource/1962_New_South_Wales_state_election""))
  ?leader rdf:type dbo:Politician .

  # Birthplace country of this leader
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country ;
              rdfs:label ?birthCountry .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,26,test,Give me the parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?grandparent WHERE {
  ?setiI rdfs:label ""Seti I""@en .
  ?child dbo:child ?setiI .
  ?grandchild dbo:child ?child .
  ?grandchild dbo:parent ?parent .
  ?parent dbo:parent ?grandparent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
547,54,test,Give me the resting place of the child of James Burton (property developer) and resting place of the actor of the show with Emily Richard and resting place of Alan Cunningham.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childRestingPlace ?actorRestingPlace ?alanCunninghamRestingPlace WHERE {
  # Resting place of the child of James Burton (property developer)
  ?jamesBurton rdfs:label ""James Burton""@en .
  ?jamesBurton dbo:occupation dbr:Property_developer .
  ?child dbo:parent ?jamesBurton ;
         dbo:deathPlace ?childRestingPlace .

  # Resting place of the actor from the show with Emily Richard
  ?show rdfs:label ?showLabel .
  ?emilyRichard dbo:actorIn ?show ;
                rdfs:label ""Emily Richard""@en .
  ?actor dbo:actorIn ?show ;
         dbo:deathPlace ?actorRestingPlace .

  # Resting place of Alan Cunningham
  ?alanCunningham rdfs:label ""Alan Cunningham""@en .
  ?alanCunningham dbo:deathPlace ?alanCunninghamRestingPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
294,22,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?restingPlace1 ?restingPlace2 WHERE {
  # Part 1: Resting place of the awardee (politician) of Distinguished Service Medal (U.S. Army)
  ?person dbo:awardedBy <http://dbpedia.org/resource/Distinguished_Service_Medal_(United_States_Army)> .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""politician"")) .
  OPTIONAL { ?person dbo:finalRestingPlace ?restingPlace1 . }

  # Part 2: Resting place of the architect of P. D. Houston Jr. House
  ?building rdfs:label ""P. D. Houston Jr. House""@en .
  ?building dbo:architect ?architect .
  OPTIONAL { ?architect dbo:finalRestingPlace ?restingPlace2 . }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
232,47,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  ?person rdfs:label ""John Pertwee""@en .
  ?child dbo:parent ?person ;
         rdf:type dbo:Actor ;
         dbo:profession dbr:Actor ;
         dbo:profession dbr:Narrator ;
         dbo:profession dbr:Producer .
  
  ?claimToFame dbo:film ?film ;
               dbo:militaryConflict ?conflict .

  ?child dbo:claimToFame ?claimToFame .

  ?film dbo:actor ?actor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,29,test,"Give me the commander in Biscay Campaign and military force of Rif War and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?campaign (GROUP_CONCAT(DISTINCT ?commander; separator="", "") AS ?commanders) 
       ?rifWarMilitaryForce ?rifWarCommander
WHERE {
  # Find Francisco Largo Caballero's involvement in the Biscay Campaign
  ?person rdfs:label ""Francisco Largo Caballero""@en .
  
  OPTIONAL {
    ?campaign dbo:eventParticipant ?person ;
              rdfs:label ?campaignLabel .
    FILTER(CONTAINS(LCASE(?campaignLabel), ""biscay campaign""))
    
    ?campaign dbo:commander ?commander .
  }
  
  # Find Francisco Largo Caballero's involvement in the Rif War
  OPTIONAL {
    ?rifWar dbo:eventParticipant ?person ;
            rdfs:label ?rifWarLabel .
    FILTER(CONTAINS(LCASE(?rifWarLabel), ""rif war""))
    
    ?rifWar dbo:militaryForce ?rifWarMilitaryForce .
    ?rifWar dbo:commander ?rifWarCommander .
  }
}
GROUP BY ?campaign ?rifWarMilitaryForce
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
16,47,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?professional WHERE {
  # Find the actor of ""Unnatural""
  ?series rdfs:label ""Unnatural (TV series)""@en .
  ?series dbo:actor ?actor .

  # Determine the profession of the actor
  ?actor dbo:profession ?actorProfession .

  # Identify Ted Martin McGinley's spouse
  ?ted rdfs:label ""Ted McGinley""@en .
  ?ted dbo:birthName ""Ted Martin McGinley"" .
  ?ted dbo:spouse ?spouse .

  # Find a professional in the same profession as the actor
  ?professional dbo:profession ?actorProfession .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,24,test,Give me the party of Romano Prodi and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?prodiParty ?fatherParty WHERE {
  # Find the party of Romano Prodi
  ?prodi rdfs:label ""Romano Prodi""@en .
  ?prodi dbo:party ?prodiParty .

  # Find the father of Lamberto Andreotti and his party
  ?andreotti rdfs:label ""Lamberto Andreotti""@en .
  ?andreotti dbo:father ?father .
  ?father dbo:party ?fatherParty .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
801,45,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in  and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?album rdfs:label ""What U See Is What U Get""@en .
  ?album a dbo:MusicalWork ;
         dbo:writer ?writer .

  ?writer a dbo:MusicalArtist, dbo:Artist .

  ?producer a dbo:MusicalArtist ;
            dbo:producedAlbum ?album ;
            dbo:producedSong ?song .

  ?song rdfs:label ""Westside Story (song)""@en .

  ?associatedArtist dbo:associatedWith ?writer .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
747,62,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the birth date of the decedent
  ?decedent dbo:birthDate ?birthDate .

  # Find a person who is an athlete and soccer player, born on the same date as the decedent
  ?person dbo:birthDate ?birthDate ;
          dbo:sport dbr:Soccer ;
          dbo:birthPlace dbr:Zolotonosha .

  # Ensure this person is associated with a band related to Amba Shepherd's song and Shèna
  OPTIONAL {
    ?band dbo:member ?person .
    ?song dbo:lyricist dbr:Amba_Shepherd ;
          dbo:performer ?band .
    ?shenaBand dbo:member ?person .
    ?shenaSong dbo:lyricist ?shenaBand .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
328,45,test,"Give me the commander in Eastern Front (World War II) and awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander ?orderOfSuvorov ?officeLeader WHERE {
  # Find Gustav Jonson and his office
  ?gustavJonson a dbo:OfficeHolder ;
                foaf:name ""Gustav Jonson""@en .
  
  OPTIONAL { 
    ?gustavJonson dbo:headOrganization ?officeLeader .
  }
  
  # Find the commander on the Eastern Front during World War II
  ?commander a dbo:MilitaryPerson ;
             dbo:rank ?rank ;
             foaf:name ?name .

  FILTER regex(?name, ""Eastern Front"", ""i"")

  OPTIONAL {
    ?commander dbo:award ?orderOfSuvorov .
    FILTER regex(str(?orderOfSuvorov), ""Order of Suvorov"", ""i"")
  }
  
  # Link the commander to Gustav Jonson's office
  ?officeLeader foaf:name ?name .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
492,36,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?personDecedent WHERE {
  {
    ?capital dbo:country dbr:Algeria ;
             rdf:type dbo:Settlement ;
             dbo:administrativeUnit dbr:Khemis_Miliana_District .
    ?person dbo:deceasedAt ?capital ;
            rdfs:label ?personDecedent .
  }
  UNION
  {
    ?location rdfs:label ""French Algeria""@en .
    ?person dbo:deceasedAt ?location ;
            rdfs:label ?personDecedent .
  }
}
```",4,5,5,3,2,3,3,71,0,0,16,0,0.0,0
16,18,test,Give me the professional in Actress and spouse of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:occupation dbc:Actresses .
  ?person dbo:spouse db:Ted_McGinley .
  ?person rdfs:label ""Georgeanne Marie Rice""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,65,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  # Step 1: Find Ernest Augustus's father
  ?father a dbo:Person ;
          dbo:hasChild ?ernestAugustus .
  
  # Step 2: Identify Ernest Augustus
  ?ernestAugustus rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .

  # Step 3: Find his spouse who is Princess Victoria Louise of Prussia
  ?spouse a dbo:Person ;
          dbo:spouse ?ernestAugustus ;
          rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  # Step 4: Identify their child who is royalty
  ?child a dbo:Person ;
         dbo:parent ?spouse ;
         dbo:parent ?ernestAugustus .

  # Step 5: Ensure the child's parent is also a parent of Prince George William of Hanover
  ?parent a dbo:Person ;
          dbo:hasChild ?child .
  
  ?georgeWilliam a dbo:Person ;
                 rdfs:label ""Prince George William of Hanover""@en .
  
  ?parent dbo:hasChild ?georgeWilliam .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
959,47,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?almaMater ?country WHERE {
  # Find Eiji Ōtsuka's alma mater
  ?person dbo:almaMater ?almaMater .
  FILTER (str(?person) = ""Eiji_Ōtsuka""^^xsd:string)
  
  # Ensure the alma mater is Japanese, an organization, a university, and an educational institution
  ?almaMater rdfs:label ?label .
  ?almaMater dbo:country ?japan .
  FILTER (str(?japan) = ""Japan""^^xsd:string)
  ?almaMater rdf:type/rdf:type ?type1 .
  ?almaMater rdf:type/rdf:type ?type2 .
  FILTER (
    str(?type1) IN (""http://dbpedia.org/ontology/Organization"", 
                    ""http://dbpedia.org/ontology/EducationalInstitution"") &&
    str(?type2) = ""http://dbpedia.org/ontology/University""
  )
  
  # Find the leader of the 2010 Japanese House of Councillors election
  ?election dbo:leader ?leader .
  FILTER (str(?election) = ""Japanese_House_of_Councillors_election,_2010""^^xsd:string)
  
  # Ensure the leader is a politician and find their country of residence
  ?leader rdf:type/dbo:Politician .
  ?leader dbo:nationality ?country .
}
```",5,11,6,3,2,3,3,71,0,0,84,0,0.0,0
427,63,test,"Give me the party of the father of Lamberto Andreotti and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v6 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherPartyLabel (GROUP_CONCAT(DISTINCT ?pintoPartyLabel; separator="", "") AS ?michelePintoParties) 
       (GROUP_CONCAT(DISTINCT ?prodiPartyLabel; separator="", "") AS ?romanoProdiParties)
WHERE {
  # Part 1: Father of Lamberto Andreotti
  ?lamberto dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .
  ?fatherParty rdfs:label ?fatherPartyLabel .

  # Part 2: Party of Michele Pinto
  ?michele dbo:birthName ""Michele Pinto"" .
  OPTIONAL {
    ?michele dbo:partyAffiliation ?pintoParty .
    ?pintoParty rdfs:label ?pintoPartyLabel .
  }

  # Part 3: Party of Romano Antonio Prodi
  ?prodi dbo:birthName ""Romano Antonio Prodi"" ;
         a dbo:Politician ;
         dbo:officeHolder true .
  OPTIONAL {
    ?prodi dbo:partyAffiliation ?prodiParty .
    ?prodiParty rdfs:label ?prodiPartyLabel .
  }
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
778,16,test,"Give me the entity in the award of Ralph L. Brinster and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?entity WHERE {
  ?award dbo:recipient ?brinster .
  ?brinster rdfs:label ""Ralph L. Brinster""@en .

  ?software dbo:author ?joy .
  ?joy rdfs:label ""Bill Joy""@en .
  ?software a dbo:Software .

  ?entity rdf:type/rdfs:subClassOf* dbo:Software .
  FILTER (?award = ?entity || ?software = ?entity)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
9,66,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?almaMater WHERE {
  # Find the mayor/politician of Northern Ireland Forum
  ?mayor a dbo:Politician ;
         dbo:memberOf ?forum .
  ?forum rdfs:label ""Northern Ireland Forum""@en .

  # Find the alma mater of the mayor/politician
  ?mayor dbo:almaMater ?almaMater .

  OPTIONAL {
    # Find an awardee of the Royal Medal
    ?awardee a dbo:AwardRecipient ;
             dbo:award ?royalMedal .
    ?royalMedal rdfs:label ""Royal Medal""@en .

    # Find the alma mater of the awardee
    ?awardee dbo:almaMater ?almaMater .
  }

  OPTIONAL {
    # Identify an educational institution with a nickname in Northern Ireland
    ?institution a dbo:EducationalOrganization ;
                 rdfs:label ?nickname ;
                 dbo:locationLocatedIn ?location .
    ?location rdfs:label ""Northern Ireland""@en .

    # Ensure the alma mater matches the institution
    ?almaMater rdfs:label ?nickname .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
281,66,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthCountry ?warOfProfession ?awardeeWar WHERE {
  # Find Bob Heffron's birth place that is a country
  ?heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?placeLabel .
  FILTER (CONTAINS(LCASE(?placeLabel), ""country"")) .
  ?birthPlace dbo:country ?birthCountry .

  # Find the war related to his profession as an office holder and politician in New Zealand Army
  ?heffron dbo:profession ?profession .
  ?profession rdfs:label ?profLabel .
  FILTER (CONTAINS(LCASE(?profLabel), ""office holder"") && CONTAINS(LCASE(?profLabel), ""politician"")) .

  # Find the military unit associated with his profession
  ?militaryUnit dbo:militaryUnitOf ?heffron .
  ?militaryUnit rdfs:label ?unitLabel .
  FILTER (CONTAINS(LCASE(?unitLabel), ""new zealand army"")) .
  
  # Find the war related to this military unit
  ?war dbo:militaryUnit ?militaryUnit .
  ?war rdfs:label ?warLabel .
  BIND(?warLabel AS ?warOfProfession)

  # Find the awardee of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:award ?orderAward .
  ?orderAward rdfs:label ""Knight Grand Cross of the Order of the Bath""@en .

  # Find the war associated with this awardee
  ?awardeeWar dbo:militaryUnit ?militaryUnit .
  ?awardeeWar rdfs:label ?awardeeWarLabel .
  BIND(?awardeeWarLabel AS ?awardeeWar)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
747,69,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v7 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?athlete ?band WHERE {
  # Find the decedent's birth date
  ?decedent dbo:dateOfBirth ?birthDate .
  
  # Find an athlete and soccer player born in Zolotonosha on the same birth date as the decedent
  ?athlete dbo:sport dbr:Soccer ;
           dbo:birthPlace dbr:Zolotonosha ;
           dbo:dateOfBirth ?birthDate .

  # Find Shèna's persona and band
  ?shena rdfs:label ""Shèna""@en .
  OPTIONAL { ?shena foaf:nick ?persona . }
  OPTIONAL { ?band2 dbo:member ?shena . }

  # Find the writer of Apollo by Hardwell
  ?song dbo:title ""Apollo (Hardwell song)""@en ;
        dbo:lyricsBy ?writer .

  FILTER(?athlete != ?decedent)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
92,21,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?memberName WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Nevermore""@en .
  
  ?band dbo:bandMember ?member .
  ?member rdf:type dbo:MusicArtist .
  ?member foaf:name ?memberName .

  OPTIONAL { 
    ?collaboration dbo:artist ?member ;
                   dbo:artist ?josephMichael .
    ?josephMichael foaf:name ""Joseph Michael""@en .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
161,70,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander WHERE {
  # Francisco Franco's military forces and events
  ?francoEvent dbo:agent ?franco .
  ?franco rdfs:label ""Francisco Franco""@en .
  OPTIONAL { ?francoEvent dbo:commander ?commander . }
  
  # Indalecio Prieto's predecessor, Miguel Primo de Rivera
  ?miguelEvent dbo:agent ?miguel .
  ?miguel rdfs:label ""Miguel Primo de Rivera""@en .
  OPTIONAL { ?miguelEvent dbo:commander ?commander . }
  
  # Filter for societal events and military conflicts
  FILTER (
    (EXISTS {?francoEvent rdf:type dbo:MilitaryConflict} || EXISTS {?francoEvent rdf:type dbo:SocietalEvent}) &&
    (EXISTS {?miguelEvent rdf:type dbo:MilitaryConflict} || EXISTS {?miguelEvent rdf:type dbo:SocietalEvent})
  )
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
959,62,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?politician dbo:officeHolderOf ?election .
  ?election rdf:type dbo:Election ;
            dbo:electedOffice [dbo:name ""House of Councillors""@en] ;
            dbo:date ""2010-07-11""^^xsd:date .

  ?politician dbo:nationality dbc:Japan ;
              dbo:birthDate ?birthDate ;
              dbo:residenceCountry ?country .

  FILTER(YEAR(?birthDate) = 1958)

  ?manager dbo:birthDate ?birthDate ;
           dbo:managerOfSeason [dbo:team ""Júbilo Iwata""@en ; dbo:season ""2013""^^xsd:gYear] .

  ?almaMater dbo:alumni ?manager ;
             rdf:type dbo:EducationalOrganization, dbo:University ;
             dbo:country dbc:Japan .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
285,18,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?parent WHERE {
  ?onassis rdfs:label ""Aristotle Onassis""@en .
  ?onassis dbo:spouse ?spouse .
  ?child dbo:childOf ?spouse .
  ?child dbo:parent ?parent .
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
827,16,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childOfChild ?fatherOfCharlesChild WHERE {
  # Step 1: Find Maria Pavlovna's children who are royalty
  ?mariaChild dbo:parent dbr:Grand_Duchess_Maria_Pavlovna_of_Russia ;
              a dbo:Person ;
              rdfs:label ?childLabel .
  
  FILTER CONTAINS(LCASE(?childLabel), ""royalty"") .

  # Step 2: Find the child of one of Maria Pavlovna's royal children who is royalty
  ?childOfChild dbo:parent ?mariaChild ;
               a dbo:Person ;
               rdfs:label ?grandChildLabel .
  
  FILTER CONTAINS(LCASE(?grandChildLabel), ""royalty"") .

  # Step 3: Find Charles Augustus' children who are royalty
  ?charlesChild dbo:parent dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach ;
                a dbo:Person ;
                rdfs:label ?childLabel2 .
  
  FILTER CONTAINS(LCASE(?childLabel2), ""royalty"") .

  # Step 4: Find the father of one of Charles Augustus' royal children
  ?fatherOfCharlesChild dbo:spouse ?charlesChild ;
                       a dbo:Person ;
                       rdfs:label ?fatherLabel .
  
  FILTER CONTAINS(LCASE(?fatherLabel), ""royalty"") .

  # Step 5: Match the two individuals
  FILTER (?childOfChild = ?fatherOfCharlesChild)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
747,39,test,Give me the band of Amba Shepherd and band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?band WHERE {
  # Query for Amba Shepherd's band
  { 
    ?person rdfs:label ""Amba Shepherd""@en .
    ?person dbo:band ?band .
  }
  
  UNION
  
  # Query for the person born as Shèna and their band
  { 
    ?person dbo:birthName ""Shèna"" .
    ?person dbo:band ?band .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,51,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?militaryUnit ?birthPlaceEntity WHERE {
  ?bobHeffron rdfs:label ""Bob Heffron""@en .
  ?bobHeffron dbo:profession ?profession .
  ?profession rdf:type dbo:MilitaryUnit ;
              dbo:militaryBranch ?newZealandArmy .
  ?newZealandArmy rdfs:label ""New Zealand Army""@en .
  
  OPTIONAL {
    ?bobHeffron dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
    ?birthPlace dbo:country ?birthCountry .
    ?birthCountry dbo:entity ?birthPlaceEntity .
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
294,25,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?politicianRestingPlace ?architectRestingPlace WHERE {
  # Find the politician who received the Distinguished Service Medal (U.S. Army)
  ?person dbo:award ""Distinguished Service Medal (United States Army)"" ;
          rdf:type dbo:Politician .
  
  # Get their resting place
  OPTIONAL { ?person dbo:finalRestingPlace ?politicianRestingPlace . }

  # Find the architect of P. D. Houston Jr. House in Nashville, Tennessee
  ?building rdfs:label ""P. D. Houston Jr. House""@en ;
            dbo:architect ?architect .
  
  FILTER(CONTAINS(LCASE(?building), ""nashville, tennessee""))

  # Get their resting place
  OPTIONAL { ?architect dbo:finalRestingPlace ?architectRestingPlace . }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
378,41,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war1 ?war2 ?claimToFame WHERE {
  # Carl Pontus Gahn's war
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:birthPlace ?birthPlace .
  OPTIONAL { ?person dbo:war ?war1 . }

  # Commander in the Peninsular War
  ?commander rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  ?commander dbo:commanderOf ?peninsularWar .
  FILTER regex(str(?peninsularWar), ""Peninsular War"", ""i"") .

  # Louis des Balbes de Berton de Crillon's claim to fame
  ?crillon rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  OPTIONAL { ?crillon rdfs:comment ?claimToFame . }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
303,21,test,"Give me the entity in Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person ?party WHERE {
  VALUES ?name { ""Arnulfo Arias Madrid""@en ""Guillermo Endara""@en }
  ?person rdfs:label ?name .
  ?person rdf:type dbo:Politician .
  ?person dbo:country <http://dbpedia.org/resource/Panama> .
  ?person dbo:party ?party .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
701,27,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?spouse WHERE {
  ?battle rdfs:label ""Battle of Perire""@en .
  ?battle dbo:commander ?commander .
  ?commander dbo:father ?father .
  ?father dbo:spouse ?spouse .
  ?spouse rdf:type dbo:RoyalFamilyMember .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
959,58,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?managerOfManager WHERE {
  # Step 1: Find Yōichi Masuzoe's native country
  ?masuzoe dbo:nationality ?country .
  
  # Step 2: Identify the manager of the 1998 Kashima Antlers team
  ?kashimaAntlersTeam dbo:manager ?teamManager .

  # Ensure it is the 1998 season
  ?kashimaAntlersTeam dbo:sportSeason ?season .
  FILTER (STR(?season) = ""1998"")

  # Step 3: Verify that this manager is a sports manager
  ?teamManager rdf:type dbo:SportsManager .

  # Step 4: Find University of Tsukuba members
  ?universityMember foaf:almaMater <http://dbpedia.org/resource/University_of_Tsukuba> .
  
  # Ensure the team manager is a member of the university
  ?teamManager foaf:almaMater <http://dbpedia.org/resource/University_of_Tsukuba> .

  # Step 5: Find the team managed by this person
  ?managedTeam dbo:manager ?teamManager .
  
  # Step 6: Determine the manager of that team
  ?managedTeam dbo:manager ?managerOfManager .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
421,20,test,Give me the band member of Senidah and native of the birthplace of Samir Bekrić and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?bandMember dbo:bandMemberOf ?senidah .
  ?senidah rdfs:label ""Senidah""@en .

  ?samir dbo:birthPlace ?birthplace .
  ?samir rdfs:label ""Samir Bekrić""@en .

  ?edin a dbo:Person ;
        rdfs:label ""Edin Dervišhalidović""@en ;
        dbo:birthPlace ?birthplace .

  FILTER (?bandMember = ?edin)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
767,44,test,Give me the alma mater of the administration of George K. Nash and reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT DISTINCT ?result WHERE {
  # Alma mater of George K. Nash
  { 
    ?person rdfs:label ""George K. Nash""@en .
    ?person dbo:almaMater ?institution .
    BIND(""Alma Mater of George K. Nash"" AS ?result)
  }
  
  UNION
  
  # Alter ego of Black Hood
  {
    ?character rdfs:label ""Black Hood""@en .
    OPTIONAL { ?character dbo:alterEgo ?alterEgo . }
    FILTER(?alterEgo != """")
    BIND(""Alter Ego of Black Hood"" AS ?result)
  }

  UNION

  # Entity in Baden-Württemberg
  {
    ?entity geo:location ?location .
    ?location geo:lat ?lat .
    ?location geo:long ?long .
    FILTER(
      EXISTS { 
        SELECT ?state WHERE {
          ?state rdfs:label ""Baden-Württemberg""@en .
          ?state dbo:containedInAdministrativeTerritory ?country .
          ?country rdfs:label ""Germany""@en .
        }
      } && (
        (BOUND(?lat) && BOUND(?long) && 
         EXISTS { SELECT ?state WHERE {
           ?state rdfs:label ""Baden-Württemberg""@en .
           ?state dbo:containedInAdministrativeTerritory ?country .
           ?country rdfs:label ""Germany""@en .
           ?state geo:lat ?stateLat .
           ?state geo:long ?stateLong .
           FILTER(
             ?lat >= ?stateLat - 0.1 && ?lat <= ?stateLat + 0.1 &&
             ?long >= ?stateLong - 0.1 && ?long <= ?stateLong + 0.1
           )
         }})
      )
    )
    BIND(""Entity in Baden-Württemberg"" AS ?result)
  }
}
```",5,5,6,2,3,3,3,71,0,2,1,0.0,0.0,0
994,56,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtistWatchtower ?associatedArtistRedTide ?bandMemberPerson WHERE {
  # Find associated musical artist of Watchtower (band)
  ?watchtower dbo:associatedMusicalArtist ?associatedArtistWatchtower .
  
  # Find associated musical artist of Red Tide (band)
  ?redTide dbo:associatedMusicalArtist ?associatedArtistRedTide .

  # Find bands or artists associated with Don Dokken
  ?donDokken foaf:name ""Don Dokken""@en ;
             dbo:member ?bandMemberPerson .
  
  # Ensure the band member is a musical artist and born as a person
  ?bandMemberPerson a dbo:MusicalArtist ;
                   foaf:birthPlace ?birthPlace .

  OPTIONAL {
    ?associatedArtistWatchtower rdfs:label ?label1 .
  }
  OPTIONAL {
    ?associatedArtistRedTide rdfs:label ?label2 .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,64,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?saitoBirthPlace ?administration ?ieyasuDeathPlace WHERE {
  # Saitō Hajime's birth place
  ?saito dbo:birthPlace ?saitoBirthPlace .
  
  # Tokugawa Masako's spouse's father (a royalty)
  ?masakoSpouse dbo:spouse ?tokugawaMasako .
  ?tokugawaMasako dbo:father ?royaltyFather .
  ?royaltyFather a dbo:Royalty ;
                dbo:positionHeld ?administration .

  # Tokugawa Ieyasu's death place
  ?ieyasu dbo:deathPlace ?ieyasuDeathPlace .
  
  # Linking Saitō Hajime to the war (military conflict, event, societal event)
  ?war a dbo:MilitaryConflict ;
      a dbo:Event ;
      a dbo:SocietalEvent ;
      dbo:commander ?saito .

  # Linking Tokugawa Ieyasu to the same war
  ?ieyasu dbo:commander ?war .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
528,51,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName ?force WHERE {
  ?person rdfs:label ""Narciso Campero""@en .
  ?person dbo:birthName ?birthName .
  OPTIONAL { ?person dbo:militaryCommander ?commander . }
  OPTIONAL { ?commander dbo:commandedForce ?force . }
}

SELECT ?commander ?war WHERE {
  ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
  ?battle dbo:commander ?commander .
  ?battle dbo:participatedIn ?war .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
92,24,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?band WHERE {
  ?sheppard rdfs:label ""Jim Sheppard""@en .
  ?sheppard dbo:associatedBand ?band .

  ?michael rdfs:label ""Joseph Michael""@en .
  ?michael dbo:associatedBand ?band .
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
617,42,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  # Seleucus II Callinicus and his royal child
  ?seleucus2 rdfs:label ""Seleucus II Callinicus""@en .
  ?royalChild dbo:parent ?seleucus2 ;
              dbo:royalty true .

  # Grandchild of Seleucus II through the royal child
  ?grandchild dbo:parent ?royalChild .

  # Antiochus (son of Antiochus III the Great) and his parent
  ?antiochus3 rdfs:label ""Antiochus III the Great""@en .
  ?antiochusSon dbo:parent ?antiochus3 ;
                rdfs:label ""Antiochus""@en .
  ?childParent dbo:parent ?grandchild .

  # Laodice IV's spouse
  ?laodice4 rdfs:label ""Laodice IV""@en .
  ?spouse dbo:spouse ?laodice4 ;
          dbo:parent ?antiochusSon .

  FILTER (?grandchild = ?spouse)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
92,57,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?film rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
  ?film dbo:actor ?person .

  # Step 2: Confirm the person is a band member of Nevermore
  ?person dbo:bandMember ?nevermoreBand .
  ?nevermoreBand rdfs:label ""Nevermore""@en .

  # Step 3: Identify Joseph Michael Furney and his associated band
  ?furney dbo:birthName ""Joseph Michael Furney"" .
  ?furney dbo:bandMember ?furneyBand .

  # Step 4: Find any associated musical artist between these entities
  OPTIONAL {
    ?associatedArtist dbo:member ?person .
    ?associatedArtist dbo:member ?furneyBand .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,35,test,"Give me the band of the person born as Joseph Michael Furney and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person dbo:birthName ""Joseph Michael Furney""@en .
  ?person rdfs:label ?stageName .
  FILTER(CONTAINS(LCASE(?stageName), ""vinnie""))
  ?person dbo:memberOfBand ?band .
  ?band rdfs:label ""Nevermore""@en .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
345,19,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen and figure known as the nickname of FC Vaduz.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Get Eiður Guðjohnsen's birth date
SELECT ?birthDate WHERE {
  ?eiðurGuðjohnsen rdfs:label ""Eiður Guðjohnsen""@en .
  ?eiðurGuðjohnsen dbo:birthDate ?birthDate .
}

# Step 2: Find a person born on the same date who is both a soccer player and manager
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthDate ?birthDate .
  ?person dbo:sportsTeam ?team1 .
  FILTER EXISTS { ?team1 rdf:type dbo:SoccerClub }
  ?person dbo:managerOf ?team2 .
  FILTER EXISTS { ?team2 rdf:type dbo:SoccerClub }
}

# Step 3: Get the nickname of FC Vaduz
SELECT ?nickname WHERE {
  ?fcVaduz rdfs:label ""FC Vaduz""@en .
  ?fcVaduz dbp:nickname ?nickname .
}

# Step 4: Find the team associated with the person identified in step 2
SELECT DISTINCT ?team WHERE {
  ?person dbo:sportsTeam ?team .
  FILTER EXISTS { ?team rdf:type dbo:SoccerClub }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
801,29,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedArtist ?work WHERE {
  ?producer rdfs:label ""Chris Taylor (music producer)""@en .
  ?producer dbo:produced ?work .
  
  OPTIONAL { 
    ?work dbo:artist ?artist .
    FILTER(?artist = <http://dbpedia.org/resource/50_Cent>) .
  }
  
  OPTIONAL {
    ?producer dbo:associatedBand ?associatedArtist .
  }

  FILTER EXISTS { ?work rdf:type ?type . 
                 VALUES ?type { dbo:Songs dbo:MusicalWork } 
               }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
184,69,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commonLink WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret rdfs:label ""Margaret of Austria, Archduchess""@en .
  FILTER(YEAR(?margaret dbo:birthday) = 1925) .
  
  # Parent of Margaret
  ?parent1 dbo:child ?margaret .
  
  # Child of the parent of Margaret (her sibling)
  ?sibling dbo:parent ?parent1 .

  # Archduke Joseph Karl of Austria
  ?joseph rdfs:label ""Joseph Karl of Austria, Archduke""@en .
  
  # Child of Joseph Karl
  ?child2 dbo:parent ?joseph .
  
  # Parent of the child of Joseph Karl (grandparent)
  ?parent2 dbo:child ?child2 .

  # Landmark at elevation 96.0 meters that is a settlement
  ?landmark rdf:type dbo:PopulatedPlace ;
            dbo:elevation ""96.0""^^xsd:float .
  
  # Native of the landmark
  ?native dbo:nativeOf ?landmark .

  # Find common link
  OPTIONAL { ?sibling rdfs:label ?commonLink . }
  OPTIONAL { ?parent2 rdfs:label ?commonLink . }
  OPTIONAL { ?native rdfs:label ?commonLink . }
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
391,62,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?native WHERE {
  # Find Sherry Hormann's spouse
  ?sherryHormann a dbo:Person ;
                 foaf:name ""Sherry Hormann""@en .
  
  OPTIONAL { 
    ?spouse dbo:spouse ?sherryHormann .
    ?spouse dbo:work ?claimToFame .
    
    # Find the actor of ""All About the Andersons""
    ?actor dbo:actor ?allAboutTheAndersons ;
           rdfs:label ""All About the Andersons""@en .
    
    FILTER(?claimToFame = ?allAboutTheAndersons)
  }
  
  # Identify the nickname associated with Jackson, Tennessee
  ?figure rdfs:label ?nickname .
  ?figure dbo:nativeCountryOrRegion ?native .
  
  OPTIONAL {
    ?place rdfs:label ""Jackson, Tennessee""@en ;
           dbo:nickname ?nickname .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,45,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of The Departed.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  ?movie rdf:type dbo:Film ;
         rdfs:label ""The Departed""@en .
  ?actor dbo:actor ?movie .

  ?work rdf:type dbo:Work, dbo:TelevisionShow ;
        dbo:actor ?actor .
  
  ?actor dbo:birthPlace ?place .
  ?place rdfs:label ""Compton, California""@en .

}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
427,59,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?micheleParty ?fatherParty WHERE {
  # Michele Pinto's Party Affiliation
  ?michele a dbo:Person ;
           rdfs:label ""Michele Pinto""@en .
  OPTIONAL { 
    ?michele dbo:partyAffiliation ?micheleParty .
  }

  # Alumnus of MIT and their Father's Party Affiliation
  ?alumnus a dbo:Person ;
           dbo:almaMater <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  OPTIONAL {
    ?father dbo:child ?alumnus .
    ?father dbo:partyAffiliation ?fatherParty .
  }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
754,18,test,Give me the parent of the parent of the parent of Min Linka and parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?greatGrandparent ?ramDescendantParent WHERE {
  # Min Linka's ancestry
  ?minLinka rdfs:label ""Min Linka""@en .
  ?minLinka dbo:father ?father1 .
  ?father1 dbo:father ?grandfather .
  ?grandfather dbo:father ?greatGrandparent .

  # Ram Khamhaeng's descendant
  ?ramKhamhaeng rdfs:label ""Ram Khamhaeng""@en .
  ?ramKhamhaeng dbo:son ?child .
  ?child dbo:father ?ramDescendantParent .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
378,54,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?gahnBirthName ?crillonClaimToFame ?war WHERE {
  # Carl Pontus Gahn's birth name and wars he participated in
  ?gahn dbo:birthName ?gahnBirthName .
  ?gahn dbo:participatedIn ?war .

  # Louis des Balbes de Berton de Crillon's claim to fame
  ?crillon rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  ?crillon dbo:claimToFame ?crillonClaimToFame .

  # Ensure the war is related to the Peninsular War
  OPTIONAL { ?war dbo:partOf ?peninsularWar . }
  FILTER EXISTS {
    ?peninsularWar rdfs:label ""Peninsular War""@en .
  }

  # Linking both individuals through a common war
  OPTIONAL { ?gahn dbo:commander ?crillon . }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
701,65,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Seti I's children
  ?setiIChild dbo:childOf ?setiI .
  ?setiI rdfs:label ""Seti I""@en .

  # Seti I's grandchildren (children of Seti I's children)
  ?grandchild dbo:parent ?setiIChild .
  
  # Parent of one of Seti I's grandchildren
  ?parentOfGrandchild dbo:parent ?grandchild .

  # Ramesses II, father of Merneptah
  ?ramessesII rdfs:label ""Ramesses II""@en .
  ?merneptah dbo:father ?ramessesII .

  # Spouse of Ramesses II
  ?spouseOfRamessesII dbo:spouse ?ramessesII .

  # Nefertari's children and their parent
  ?nefertariChild dbo:parent ?nefertari .
  ?nefertari rdfs:label ""Nefertari""@en .
  
  # The person we are looking for must satisfy all these conditions
  FILTER (?person = ?parentOfGrandchild && ?person = ?spouseOfRamessesII)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
783,18,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?commonBandMember WHERE {
  # Find band members of Priscilla Opoku-Kwarteng
  ?priscilla dbo:birthName ""Priscilla Opoku-Kwarteng"" .
  ?priscilla rdf:type dbo:Artist ;
             rdf:type dbo:MusicalArtist .
  ?priscilla dbo:bandMember ?band1 .

  # Find band members of Samuel Ofori Amponsah
  ?samuel dbo:birthName ""Samuel Ofori Amponsah"" .
  ?samuel rdf:type dbo:Artist ;
          rdf:type dbo:MusicalArtist .
  ?samuel dbo:bandMember ?band2 .

  # Find common band members
  FILTER (?band1 = ?band2)
  ?commonBandMember dbo:birthName ?name .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
959,57,test,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v1 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?politician dbo:leader ?election .
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2010 && CONTAINS(LCASE(str(?election)), ""japanese house of councillors""))
  
  ?politician dbo:nationality ?country .
  
  ?person dbo:almaMater <http://dbpedia.org/resource/University_of_Tsukuba> ;
          dbo:nativeCountry ?country .

  ?team dbo:manager ?person .
  ?team dbo:member <http://dbpedia.org/resource/Takashi_Sekizuka> .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
328,46,test,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardee ?commander WHERE {
  # Query for the awardee of an award related to the Volcano and Ryukyu Islands campaign
  ?award dbo:relatedEvent ?event .
  ?event rdfs:label ""Volcano and Ryukyu Islands campaign""@en .
  ?award dbo:recipient ?awardee .

  OPTIONAL {
    # Query for the commander in Ferenc Szálasi's force
    ?szalasi dbo:commander ?commander .
    ?szalasi rdfs:label ""Ferenc Szálasi""@en .
  }
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
404,66,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  # Step 2: Find her spouse
  ?princess dbo:spouse ?spouse .

  # Step 3: Identify the father of her spouse
  ?spouse dbo:father ?father .

  # Step 4: Determine a child of this father who is also a parent
  ?child dbo:parentOf ?parent .
  ?father dbo:child ?child .

  # Step 5: Find royalty related to Ernest Augustus, Duke of Brunswick
  ?ernest rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?child dbo:child ?ernest .

  # Ensure all individuals are royalty (assuming a property or type check)
  FILTER EXISTS { ?princess rdf:type dbo:Monarch . }
  FILTER EXISTS { ?spouse rdf:type dbo:Monarch . }
  FILTER EXISTS { ?father rdf:type dbo:Monarch . }
  FILTER EXISTS { ?child rdf:type dbo:Monarch . }
  FILTER EXISTS { ?ernest rdf:type dbo:Monarch . }

  # Step 6: Determine the spouse of this person
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,66,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?event1 dbo:militaryConflict ?conflict .
  ?conflict dbo:commander ?commander .

  ?force1 dbo:socialEvent ?event1 ;
          dbo:militaryConflict ?conflict .

  ?figure1 rdfs:label ""Francisco Franco""@en .
  ?figure2 rdfs:label ""Francisco Largo Caballero""@en .

  ?force1 dbo:commander ?figure1 ;
          dbo:commander ?figure2 .
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
184,21,test,Give me the parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?individual ?parent WHERE {
  # Part 1: Parent of Archduchess Ilona of Austria
  { 
    ?ilona rdfs:label ""Ilona, Archduchess of Austria""@en .
    ?ilona dbo:parent ?parent .
    BIND(""Archduchess Ilona of Austria"" AS ?individual)
  }
  
  UNION
  
  # Part 2: Parent of the native of Budapest
  {
    ?person dbo:nativePlace ?place .
    ?place rdfs:label ""Budapest""@en .
    ?person dbo:parent ?parent .
    BIND(""Native of Budapest"" AS ?individual)
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,70,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?native WHERE {
  # Identify the politician leader of the 2010 Japanese House of Councillors election
  ?politician dbo:election ?election .
  ?election dbo:date ""2010-07-11""^^xsd:dateTime ;
             dbo:country <http://dbpedia.org/resource/Japan> .

  # Find the residence country of this politician
  ?politician dbo:residence ?residenceCountry .

  # Identify the native of this residence country
  ?native dbo:nativeCountry ?residenceCountry .

  # Link to the manager of the team managed by the sports manager of the 1998 Kashima Antlers season
  ?sportsManager dbo:managedTeam <http://dbpedia.org/resource/1998_Kashima_Antlers_season> .
  ?teamManager dbo:managerOf ?team .
  ?team dbo:managedBy ?sportsManager .

  # Link to Eiji Ōtsuka's alma mater
  ?eijiAlmaMater a dbo:EducationalOrganization ;
                 rdfs:label ""Eiji Ōtsuka""@en ;
                 dbo:country <http://dbpedia.org/resource/Japan> .
  ?politician dbo:almaMater ?eijiAlmaMater .

}
```",8,15,9,3,3,3,3,71,0,0,2,0,0.0,0
547,49,test,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childRestingPlace ?awardeeRestingPlace WHERE {
  # Resting place of the child of James Burton (property developer)
  ?james a dbo:PropertyDeveloper ;
         rdfs:label ""James Burton""@en .
  
  OPTIONAL {
    ?james dbo:child ?child .
    ?child dbo:finalBurialPlace ?childRestingPlace .
  }
  
  # Resting place of the awardee of the award of Gerald Graham
  ?gerald a dbo:Person ;
          rdfs:label ""Gerald Graham""@en .
  
  OPTIONAL {
    ?gerald dbo:award ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:finalBurialPlace ?awardeeRestingPlace .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
378,66,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?warGahn ?commanderPeninsularWar ?fameCommander ?eventTrigge
WHERE {
  # Find the war associated with Carl Pontus Gahn
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?person dbo:war ?warGahn . }

  # Find the commander of the Peninsular War and their claim to fame
  ?peninsularWar rdfs:label ""Peninsular War""@en .
  ?peninsularWar dbo:commander ?commanderPeninsularWar .
  OPTIONAL { ?commanderPeninsularWar dbo:famousFor ?fameCommander . }

  # Find events associated with Thomas Trigge
  ?trigge rdfs:label ""Thomas Trigge""@en .
  OPTIONAL {
    ?event dbo:participant ?trigge ;
           a dbo:MilitaryConflict ;
           a dbo:SocietalEvent ;
           a dbo:Event .
    ?event rdfs:label ?eventTrigge .
  }
}
```",7,10,8,3,3,3,3,71,0,37,2,0.0,0.0,0
9,56,test,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?almaMaterAllenHill ?nickname ?mayorAlmaMater WHERE {
  # Part 1: Alma Mater of Allen Hill (scientist)
  ?allenHill dbo:almaMater ?almaMaterAllenHill .
  ?allenHill rdfs:label ""Allen Hill""@en .

  # Part 2: Nickname and alma mater related to an organisation in Northern Ireland
  ?organisation dbo:location ?location .
  ?location rdfs:label ?locationLabel .
  FILTER(CONTAINS(LCASE(?locationLabel), ""northern ireland"")) .
  
  OPTIONAL {
    ?organisation rdfs:label ?nickname .
  }
  
  # Assuming the mayor is a politician associated with Northern Ireland Forum
  ?mayor dbo:almaMater ?mayorAlmaMater .
  ?mayor dbo:memberOf ?forum .
  ?forum rdfs:label ""Northern Ireland Forum""@en .

  OPTIONAL {
    ?organisation dbo:type dbr:Educational_institution .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
312,9,test,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy) and entity in the birthplace of Giorgio Grigolli.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Entities that are settlements, regions, or states and Italian
  ?entity (dbo:settlement|dbo:region|dbo:state) .
  ?entity dbo:country dbr:Italy .

  # Entity associated with the Democratic Party of Italy
  ?party dbr:Democratic_Party_(Italy) ;
         dbo:memberOrSupporter ?entity .

  # Entity in the birthplace of Giorgio Grigolli
  OPTIONAL {
    ?grigolli dbo:birthPlace ?birthPlace .
    ?entity dbo:location ?birthPlace .
  }
  
  # Ensure Giorgio Grigolli is a person
  ?grigolli rdf:type dbo:Person .
}
```",4,8,5,2,2,2,2,9,0,0,587,0,0.0,0
232,69,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actor WHERE {
  # Sean Pertwee's claim to fame (film or military conflict)
  ?work a dbo:Film ; 
        dbo:starring ?actor .
  UNION
  ?conflict a dbo:MilitaryConflict ;
            dbo:participant ?actor .

  # Linking Sean Pertwee to Jon Pertwee
  ?sean rdfs:label ""Sean Pertwee""@en .
  ?sean dbo:father ?jon .
  ?jon rdfs:label ""Jon Pertwee""@en .

  # Politician details
  ?politician a dbo:Politician ;
              dbo:nativeCountry <http://dbpedia.org/resource/France> ;
              dbo:residence ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country <http://dbpedia.org/resource/United_Kingdom> .

  # Connecting the actor to the work
  ?work dbo:starring ?sean .
  UNION
  ?conflict dbo:participant ?sean .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
391,70,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v1 <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:Work .
  ?movie rdf:type dbo:TelevisionShow .
  
  ?actor dbo:professionLocation ""Hub City"" .
  ?actor dbo:nativePlace ""Hub City"" .

  ?claimToFame dbo:work ?movie .
  ?spouse dbo:spouse <http://dbpedia.org/resource/Sherry_Hormann> .
  ?claimToFame dbo:actor ?actor .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
161,28,test,"Give me the military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?militaryForce ?francoRole WHERE {
  ?civilWar rdfs:label ""Spanish Civil War""@en .
  ?civilWar dbo:militaryConflict ?conflict .
  ?conflict dbo:participatedIn ?militaryForce .

  ?franco rdfs:label ""Francisco Franco""@en .
  ?franco dbo:commander ?biscayCampaign .
  ?biscayCampaign dbo:participatedIn ?civilWar .
}
```",4,7,5,2,3,3,3,71,0,0,3,0,0.0,0
783,20,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?ebonyBandMember ?samuelBandMember WHERE {
  # Find Ebony Reigns' birth name
  ?ebony dbo:birthName ?ebonyBirthName .
  VALUES ?ebonyBirthName { ""Ebony Reigns""@en }

  # Ensure she is an artist and musical artist
  ?ebony rdf:type/rdfs:subClassOf* dbo:Artist ;
         rdf:type/rdfs:subClassOf* dbo:MusicalArtist .

  # Find band members associated with Ebony Reigns
  ?ebony dbo:associatedBandMember ?ebonyBandMember .

  # Find Samuel Ofori Amponsah and ensure he is an artist and musical artist
  ?samuel rdfs:label ""Samuel Ofori Amponsah""@en .
  ?samuel rdf:type/rdfs:subClassOf* dbo:Artist ;
          rdf:type/rdfs:subClassOf* dbo:MusicalArtist .

  # Find band members associated with Samuel Ofori Amponsah
  ?samuel dbo:associatedBandMember ?samuelBandMember .

  # Ensure the same band member is associated with both
  FILTER (?ebonyBandMember = ?samuelBandMember)
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
281,64,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?awardWar ?militaryUnit WHERE {
  # Part for Jonathon Band's awards and associated wars
  ?person rdfs:label ""Jonathon Band""@en .
  ?person dbo:award ?award .
  ?award dbo:war ?awardWar .

  OPTIONAL {
    # Part for military units related to a professional in New Zealand
    ?professional rdfs:label ?name .
    ?professional dbo:officeHolder true .
    ?professional dbo:politician true .
    ?professional dbo:militaryUnit ?militaryUnit .
    FILTER EXISTS { ?militaryUnit dbo:partOf <http://dbpedia.org/resource/New_Zealand_Army> }
  }

  # Additional filter for entities in Colony of New Zealand
  OPTIONAL {
    ?entity dbo:locatedIn <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,50,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?producer WHERE {
  ?song rdfs:label ""40 Dayz & 40 Nightz""@en .
  ?song a dbo:Song .

  ?song dbo:producer ?producer .
  
  ?producer a dbo:MusicalArtist ;
            a dbo:Artist .

  OPTIONAL { 
    ?rapper a dbo:Rapper .
    ?rapper dbo:associatedBandMember ?producer .
  }
}
```",5,11,6,3,2,3,3,71,0,0,9,0,0.0,0
435,20,test,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . }","```sparql
# Query 1: Work of Article 62, Section IV of Constitution of Iceland
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?work WHERE {
  ?constitution rdfs:label ""Constitution of Iceland""@en .
  ?section dbo:articleNumber ""62"" ;
           dbo:section ""IV"" .
  ?section dbo:work ?work .
}

# Query 2: Territory Administered from Reykjavík
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?territory WHERE {
  ?city rdfs:label ""Reykjavík""@en .
  ?city dbo:administrativeUnit ?territory .
}

# Query 3: Region of the Time Zone in Bombali Shebora Chiefdom
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
SELECT ?timeZone WHERE {
  ?chiefdom rdfs:label ""Bombali Shebora Chiefdom""@en .
  ?chiefdom dbo:location ?location .
  ?location geo:lat ?lat ;
            geo:long ?long .
  OPTIONAL { ?location dbo:timeZone ?timeZone }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
232,64,test,"Give me the actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find Jon Pertwee's birth name
  ?jonPertwee rdfs:label ""Jon Pertwee""@en .
  
  # Step 2: Identify a child who is a politician and office holder in France
  ?child dbo:parent ?jonPertwee ;
         dbo:occupation dbp:politician ;
         dbo:country dbp:France .

  # Step 3: Determine the native residence of this person, ensuring it's British
  ?child dbo:nativePlace ?settlement .
  ?settlement dbo:country dbp:United_Kingdom .

  # Step 4: Find an actor from ""Dog Soldiers"" whose native place is the identified settlement
  ?film rdfs:label ""Dog Soldiers""@en .
  ?film dbo:actor ?actor .
  ?actor dbo:nativePlace ?settlement .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
232,49,test,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?person foaf:name ""John Devon Roland Pertwee""@en .
  ?person dbo:birthName ""John Devon Roland Pertwee"" .
  
  ?residence dbo:resident ?person ;
             a dbo:Settlement ;
             dbo:nationality dbc:United_Kingdom ;
             dbo:inhabitant ?politician .

  ?politician a dbo:Politician, dbo:OfficeHolder ;
              dbo:country dbc:FRA .

  ?person dbo:child ?child .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
701,50,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?parentOfGrandchild ?spouseOfFather WHERE {
  # Find Seti I's children
  ?setiI dbo:child ?child1 .
  
  # Find the child of one of Seti I's children (grandchildren)
  ?child1 dbo:child ?grandchild .
  
  # The parent of this grandchild is one of Seti I's children
  ?parentOfGrandchild dbo:child ?grandchild .

  # Find Merneptah's father
  ?merneptah dbo:father ?fatherOfMerneptah .

  # Find the spouse of Merneptah's father
  ?spouseOfFather dbo:spouse ?fatherOfMerneptah .
  
  FILTER(?parentOfGrandchild = ?child1)
}
```",5,5,6,3,2,3,3,71,0,3634,2,0.0,0.0,0
328,47,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?person rdfs:label ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  
  # Find awards associated with Bruce Fraser
  OPTIONAL { 
    ?award dbo:recipient ?person ;
           dbo:awardee ?awardee .
  }
  
  # Check for military command role in Budapest
  OPTIONAL {
    ?commanderRole dbo:militaryCommander ?person ;
                   dbo:location ?location .
    FILTER (CONTAINS(LCASE(?location), ""budapest""))
  }
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
747,66,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song) and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Part 1: Band of the person born as the persona of Shèna
SELECT ?band WHERE {
  ?person rdfs:label ""Shèna""@en .
  OPTIONAL { ?person dbo:birthName ?realName . }
  OPTIONAL { ?person dbo:musicalBand ?band . }
}

UNION

# Part 2: Band of the writer of Apollo (Hardwell song)
SELECT ?band WHERE {
  ?song dbo:title ""Apollo"" ;
        dbo:lyricist ?writer .
  OPTIONAL { ?writer dbo:musicalBand ?band . }
}

UNION

# Part 3: Band of the person born on the birth date of Pavlo Khudzik
SELECT ?person ?band WHERE {
  ?pavlo dbo:birthday ?birthDate .
  ?otherPerson dbo:birthday ?birthDate ;
               OPTIONAL { ?otherPerson dbo:musicalBand ?band . }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
492,64,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?personDecedent WHERE {
  # Find death place of Frantz Fanon
  { 
    ?fanon dbo:deathPlace ?personDecedent .
    ?fanon rdfs:label ""Frantz Fanon""@en .
  }
  
  UNION
  
  # Find death place associated with Khemis Miliana (capital of Khemis Miliana District)
  {
    ?khemisMiliana dbo:country dbr:Algeria ;
                   a dbo:Settlement .
    ?person rdfs:label ""Khemis Miliana""@en ;
            dbo:deathPlace ?personDecedent .
  }
  
  # Ensure the person is also a commander in Franco-Hova Wars
  {
    ?commander dbo:role dbr:Franco-Hova_Wars_Commander ;
               dbo:deathPlace ?personDecedent .
  }

  FILTER(?fanon = ?commander || ?khemisMiliana = ?commander)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
184,53,test,"Give me the child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfJosephAugust ?parentOfNative ?childOfJosephFrancis
WHERE {
  # Archduke Joseph August of Austria and his child
  ?josephAugust dbo:label ""Archduke Joseph August of Austria""@en .
  ?josephAugust dbo:child ?childOfJosephAugust .

  # Landmark at elevation 96.0 meters that is a settlement
  ?landmark dbo:elevationAboveSeaLevel ?elevation ;
            rdf:type dbo:Settlement .
  FILTER(?elevation = ""96.0""^^xsd:float)

  # Native of the landmark who is also a parent
  ?nativePlace rdfs:label ?landmarkLabel .
  ?parentOfNative dbo:nativePlace ?nativePlace ;
                  dbo:child ?child .

  # Child of Archduke Joseph Francis of Austria
  ?josephFrancis dbo:label ""Archduke Joseph Francis of Austria""@en .
  ?josephFrancis dbo:child ?childOfJosephFrancis .

  # Linking the parent to the child of Joseph August
  ?parentOfNative = ?childOfJosephAugust
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
701,31,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonParent WHERE {
  # Find Amun-her-khepeshef's spouse and their child
  ?amunHerKhepeshef dbo:spouse ?spouse .
  ?child dbo:parent ?spouse .

  # Find Henuttawy's parent
  ?henuttawy rdfs:label ""Henuttawy (19th dynasty)""@en .
  ?henuttawy dbo:parent ?henuttawyParent .

  # Find a common parent between the child of Amun-her-khepeshef's spouse and Henuttawy's parent
  ?child dbo:parent ?commonParent .
  ?henuttawyParent dbo:parent ?commonParent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,50,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?stalin rdfs:label ""Joseph Stalin""@en .
  
  OPTIONAL { 
    ?budaCommander dbo:commanderOf ?force ;
                   dbo:location ?budaLocation .
    FILTER (CONTAINS(LCASE(STR(?budaLocation)), ""budapest""))
  }
  
  OPTIONAL {
    ?officeLeader dbo:leaderOf ?office ;
                  rdf:type dbo:GovernmentAgency .
  }

  ?commander rdf:type dbo:Person ;
             ?relation1 ?stalin ;
             ?relation2 ?budaCommander ;
             ?relation3 ?officeLeader .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
179,19,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as the birth name of Sirikit.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?finalParent WHERE {
  # Step 1: Find Vajiralongkorn's parent
  ?vajiralongkorn dbo:parent ?parentVajiralongkorn .
  
  # Step 2: Find the child of that parent (i.e., another child)
  OPTIONAL { 
    ?parentVajiralongkorn dbo:child ?anotherChild .
  }
  
  # Step 3: Identify Sirikit's birth name
  ?sirikit foaf:name ""Sirikit""@en ;
           dbo:birthName ?birthNameSirikit .

  # Step 4: Find the person born with that name
  ?person foaf:name ?birthNameSirikit .
  
  # Step 5: Determine parent of that person
  ?person dbo:parent ?finalParent .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
77,18,test,Give me the force of the mayor of Congress Poland and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?mayorForce ?awardeeWar WHERE {
  # Part 1: Force of the Mayor of Congress Poland
  ?person dbo:position dbr:Municipal_government_of_Congress_Poland .
  OPTIONAL { 
    ?person dbo:commander ?force .
    BIND(?force AS ?mayorForce)
  }

  # Part 2: War of the Awardee of Maxim Grigorievich Vlasov
  ?awardee dbo:award dbr:Award_of_Maxim_Grigorievich_Vlasov .
  OPTIONAL {
    ?awardee dbo:participatedIn ?war .
    BIND(?war AS ?awardeeWar)
  }
}
```",5,5,6,3,2,3,2,20,0,0,24,0,0.0,0
303,20,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara and party of Arnulfo Arias.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?country WHERE {
  # Find the country of El Valle de Antón
  ?place rdfs:label ""El Valle de Antón""@en .
  ?place dbo:country ?country .

  # Find the political party of Guillermo Endara and its associated country
  ?endara foaf:name ""Guillermo Endara"" .
  ?endara dbo:party ?partyEndara .
  ?partyEndara dbo:country ?countryEndara .

  # Find the political party of Arnulfo Arias and its associated country
  ?arias foaf:name ""Arnulfo Arias"" .
  ?arias dbo:party ?partyArias .
  ?partyArias dbo:country ?countryArias .

  # Ensure all countries are the same
  FILTER (?country = ?countryEndara && ?country = ?countryArias)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
959,24,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  ?yoshi rdfs:label ""Yōichi Masuzoe""@en .
  ?yoshi dbo:residence ?residence .
  ?residence a dbo:Country .
  ?yoshi dbp:managerOfTeam ?team .
  ?team rdfs:label ""Júbilo Iwata""@en .
  ?team dbp:season ""2013""^^xsd:string .
  
  OPTIONAL {
    ?native dbo:nativeOf ?residence .
  }
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
617,64,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childOfChild WHERE {
  # Step 1: Find Antiochus II Theos' successor who is royalty
  ?successor dbo:successor ?antiochus .
  ?antiochus rdfs:label ""Antiochus II Theos""@en .
  ?successor a dbo:Monarch .

  # Step 2: Find the spouse of Laodice IV among successors
  ?spouse dbo:spouse ?laodiceIV .
  ?laodiceIV rdfs:label ""Laodice IV""@en .
  ?spouse = ?successor .

  # Step 3: Identify parent of child of commander in Battle of Panium
  ?commander dbo:commanderInBattle <http://dbpedia.org/resource/Battle_of_Panium> .
  ?childOfCommander dbo:parent ?commander .
  
  # Step 4: Find the child of the spouse's child who is royalty and matches criteria from step 3
  ?spouseChild dbo:child ?childOfSpouse .
  ?childOfSpouse a dbo:Monarch .
  ?childOfSpouse = ?childOfCommander .

  ?childOfChild dbo:child ?childOfSpouse .
  ?childOfChild a dbo:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
281,59,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?country WHERE {
  # Find the leader of the 1962 New South Wales state election
  ?election dbo:leader ?leader .
  FILTER (str(?election) = ""1962_New_South_Wales_state_election""^^xsd:string)
  
  # Ensure the leader is a politician
  ?leader rdf:type dbo:Politician .

  # Find the birthplace of the leader and its country
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country ?country .

  # Find Jonathon Band's award and associated war
  ?jonathon dbo:award ?award .
  FILTER (str(?jonathon) = ""Jonathon_Band""^^xsd:string)
  
  ?award dbo:war ?war .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
963,20,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> ?v5 . ?v4 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country ?rulingParty ?administration WHERE {
  # Find the location with postal code ""21205""
  ?location dbo:postalCode ""21205"" .
  
  # Determine the region's time zone
  ?region rdfs:label ""Herzegovina-Neretva Canton""@en .
  ?region geo:timezone ?timeZone .

  # Identify the country associated with this time zone
  ?country dbo:timeZone ?timeZone .
  
  # Find the ruling political party in that country and its administration
  ?party dbo:rulingPartyOfCountry ?country ;
         a dbo:PoliticalParty .
  OPTIONAL { ?party dbo:administration ?administration }
}
```",6,8,7,3,2,3,2,20,0,0,84,0,0.0,0
328,42,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  # Find the commander on the Eastern Front during World War II
  ?commander dbo:commanderOfMilitaryConflict ?conflict .
  ?conflict rdfs:label ""Eastern Front (World War II)""@en .

  # Ensure this person was a leader of an office that is a government agency under Stalin
  ?office dbo:head ?commander ;
          dbo:country <http://dbpedia.org/resource/Soviet_Union> .
  ?office rdf:type dbo:GovernmentAgency .

  # Check if the commander received an award from Bruce Fraser, 1st Baron Fraser of North Cape
  ?award dbo:recipient ?commander ;
         dbo:awardedBy <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
488,66,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlaceOfFather ?birthPlaceOfCommander ?administrationOfSpouseFather WHERE {
  # Part 1: Yūki Hideyasu's father
  ?yukiHideyasu dbo:father ?father .
  ?father rdfs:label ""Yūki Hideyasu""@en .
  
  # Part 2: Death place of Yūki Hideyasu's father
  ?father dbo:deathPlace ?deathPlaceOfFather .

  # Part 3: Commander in the Boshin War
  ?commander dbo:role ?boshinRole .
  ?boshinRole rdfs:label ""Commander""@en .
  ?commander dbo:birthPlace ?birthPlaceOfCommander .
  
  FILTER(CONTAINS(LCASE(?commander), ""boshin war""))

  # Part 4: Tokugawa Masako's spouse
  ?tokugawaMasako dbo:spouse ?spouse .
  ?tokugawaMasako rdfs:label ""Tokugawa Masako""@en .

  # Spouse is royalty
  ?spouse rdf:type/rdfs:subClassOf* dbo:Royalty .

  # Part 5: Administration of the father of Tokugawa Masako's spouse
  ?spouse dbo:father ?spouseFather .
  ?spouseFather dbo:role ?administrationRole .
  ?administrationRole rdfs:label ?administrationOfSpouseFather .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
10,22,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist WHERE {
  ?vibert dbo:birthPlace ?placeVibert .
  ?vibert rdfs:label ""Luke Francis Vibert""@en .
  
  ?colton dbo:birthPlace ?placeColton .
  ?colton rdfs:label ""Matt Colton""@en .

  ?artist dbo:associatedBandMember ?vibert ;
          dbo:associatedBandMember ?colton .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
92,46,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Identify the film ""Nevermore"" (2006)
  ?film rdfs:label ""Nevermore""@en .
  FILTER(YEAR(?film dbo:releaseDate) = 2006)

  # Step 2: Find a band member of this reference
  ?bandMember dbo:memberOfBand ?film .

  # Step 3: Identify Jim Sheppard's birthplace
  ?jimSheppard rdfs:label ""Jim Sheppard""@en .
  ?jimSheppard dbo:birthPlace ?birthPlace .

  # Step 4: Find another artist from that birthplace
  ?otherArtist dbo:birthPlace ?birthPlace .
  FILTER(?otherArtist != ?jimSheppard)

  # Step 5: Determine the associated musical artist
  ?associatedArtist dbo:memberOfBand ?bandMember ;
                   dbo:memberOfBand ?otherArtist .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
767,69,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?almaMater ?settlement ?alterEgo
WHERE {
  # Alma mater of George K. Nash
  ?nash dbo:almaMater ?almaMater .
  FILTER (str(?nash) = ""George_K._Nash"")

  OPTIONAL {
    # Entity in the administration of Dustin Lynch that is a settlement
    ?album dbo:lyricsBy ?writer .
    FILTER (str(?album) = ""Where_It's_At_(Dustin_Lynch_album)"")
    ?adminRole dbo:administratorOf ?album .
    ?settlement rdf:type dbo:Settlement .
    ?adminRole dbo:location ?settlement .
  }

  OPTIONAL {
    # Alter ego of Matthew Burland that is a fictional character
    ?burland foaf:nick ?alterEgo .
    FILTER (str(?burland) = ""Matthew_Burland"")
    ?alterEgo rdf:type dbo:FictionalCharacter .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
16,44,test,Give me the person born as the birth name of Gigi Rice and spouse of Ted McGinley and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthName ""Gigi Rice"" .
  ?person dbo:spouse ?ted .
  ?ted rdfs:label ""Ted McGinley""@en .
  ?person dbo:profession ?satomiProfession .
  ?satomiProfession rdfs:label ""Satomi Ishihara""@en .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
488,36,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace ?administration WHERE {
  # Part 1: Birth place of Enomoto Takeaki
  ?enomoto rdfs:label ""Enomoto Takeaki""@en .
  ?enomoto dbo:birthPlace ?birthPlace .

  # Part 2: Administration of the father of the spouse (royalty) of Tokugawa Masako
  ?masako rdfs:label ""Tokugawa Masako""@en .
  ?masako dbo:spouse ?spouse .
  
  OPTIONAL {
    ?spouse dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))
  }
  
  ?spouse dbo:father ?father .
  ?father dbo:administration ?administration .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
161,57,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola and military force of Rif War.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryForce WHERE {
  # Part 1: Military force of the predecessor of Indalecio Prieto
  {
    ?prieto dbo:predecessor ?predecessor .
    ?predecessor dbo:militaryForce ?militaryForce .
    FILTER (str(?prieto) = ""Indalecio_Prieto"")
  }
  
  UNION
  
  # Part 2: Military force of the event where Emilio Mola was a commander
  {
    ?event dbo:commanderIn ?emilioMola .
    ?event dbo:militaryForce ?militaryForce .
    FILTER (str(?emilioMola) = ""Emilio_Mola"")
  }
  
  UNION
  
  # Part 3: Military force of the Rif War
  {
    ?rifWar rdfs:label ""Rif_War""@en .
    ?rifWar dbo:militaryForce ?militaryForce .
  }
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
767,32,test,"Give me the entity in the administration, that is a settlement, of Green and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?nash dbo:almaMater ?entity .
  ?entity rdf:type dbo:Settlement .
  
  OPTIONAL { 
    ?administration dbo:member ?nash .
    FILTER EXISTS { ?administration rdfs:label ""George K. Nash""@en }
  }
}
```",4,5,5,2,2,3,3,71,0,127,1,0.0,0.0,0
391,23,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?entity rdfs:label ""Jackson, Tennessee""@en .
  ?entity dbo:birthPlace ?birthPlace .
}
```",3,3,4,3,1,3,3,71,0,0,176,0,0.0,0
404,22,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?ernestAugustus rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?ernestAugustus dbo:father ?father .

  ?princessVictoriaLouise rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princessVictoriaLouise dbo:spouse ?spouse .

  ?child dbo:parent ?father .
  ?child dbo:parent ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,58,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?fatherParty ?prodiParty WHERE {
  # Find the father of Lamberto Andreotti and his party affiliation
  ?lamberto dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .

  OPTIONAL { 
    ?fatherParty rdfs:label ""Partito Popolare Italiano""@en .
  }

  # Find Romano Prodi's birth name, check if he is an office holder and a politician, then find his party affiliation
  ?prodi rdfs:label ""Romano Prodi""@en .
  ?prodi dbo:birthName ?birthName .
  ?prodi dbo:officeHolder true .
  ?prodi rdf:type dbo:Politician .
  ?prodi dbo:partyAffiliation ?prodiParty .

  OPTIONAL { 
    ?prodiParty rdfs:label ""Partito Popolare Italiano""@en .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,38,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?ramesses2 rdfs:label ""Ramesses II""@en .
  ?ramesses2 dbo:spouse ?spouse .
}
```",4,4,5,2,2,3,3,71,0,1,2,0.0,0.0,0
281,62,test,"Give me the war of New Zealand Army and war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?warNZ ?warAward ?countryLeader WHERE {
  # New Zealand Army's war involvement
  ?nzArmy dbo:type dbr:Military_unit .
  ?nzArmy dbo:participatedIn ?warNZ .

  # Jonathon Band's award awardee and their war involvement
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Jonathon Band Award""@en .
  ?awardee dbo:participatedIn ?warAward .

  # Politician leader of the 1962 NSW election and their birthplace country
  ?politician dbo:office dbr:Premier_of_New_South_Wales .
  ?election dbo:winner ?politician .
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 1962)
  ?politician dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .

  # Ensure the birthplace is a country
  ?birthPlace rdfs:label ?countryLeader .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,39,test,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v2 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist ?bandMember WHERE {
  # Part 1: Associated musical artist of Red Tide (band)
  ?redTide rdfs:label ""Red Tide""@en .
  OPTIONAL { 
    ?redTide dbo:associatedMusicalArtist ?associatedArtist .
  }

  # Part 2: Band member of a person born as a musical artist, persona of Don Dokken
  ?person dbp:birthPlace ?place ;
          dbo:personaDonDokken true ;
          dbo:bandMember ?bandMember .
  OPTIONAL {
    ?person dbo:birth ?birthEvent .
    ?birthEvent dbo:role ""musical artist"" .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
16,62,test,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?spouseName WHERE {
  ?person1 dbo:birthName ""Georgeanne Marie Rice"" .
  ?person2 dbo:birthName ""Edward Joseph McGinley"" . # Ted McGinley's birth name
  ?person2 dbo:profession ?actorRole .
  ?actorRole rdfs:label ""Unnatural (TV series)""@en .
  ?person1 dbo:spouse ?person2 .
  ?person2 rdfs:label ?spouseName .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,49,test,Give me the force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName ?force ?battle WHERE {
  # Find Narciso Campero's birth name
  ?person rdfs:label ""Narciso Campero""@en .
  ?person dbo:birthName ?birthName .

  # Find the military force associated with Narciso Campero
  OPTIONAL { 
    ?person dbo:militaryForce ?force .
  }

  # Find information about the Battle of Pisagua
  ?battle rdfs:label ""Battle of Pisagua""@en .
  OPTIONAL {
    ?battle dbo:participatingMilitaryUnit ?unit .
  }
}
```",5,5,6,3,2,3,3,71,0,2,3,0.0,0.0,0
747,52,test,"Give me the band of the writer of Apollo (Hardwell song) and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandOfWriter ?bandOfShena ?personBornOnSameDate WHERE {
  # Part 1: Band of the writer of ""Apollo"" by Hardwell
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ""Apollo""@en .
  OPTIONAL { ?writer dbo:member ?bandOfWriter . }
  
  # Part 2: Band of Shèna
  ?shena rdfs:label ""Shèna""@en .
  OPTIONAL { ?shena dbo:member ?bandOfShena . }

  # Part 3: Person born on the same date as an athlete and soccer player from Zolotonosha
  ?athlete dbo:nationality dbp:Soviet_Union ;
           dbo:sport dbp:Soccer ;
           dbo:birthPlace ?zolotonosha .
  ?zolotonosha rdfs:label ""Zolotonosha""@en .
  ?athlete dbo:birthDate ?birthDate .

  OPTIONAL {
    ?person dbo:birthDate ?birthDate .
    FILTER NOT EXISTS { ?person = ?athlete }
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,70,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryUnit ?birthCountry ?leader ?awardee
WHERE {
  ?politician rdf:type dbo:OfficeHolder ;
              rdf:type dbo:Politician ;
              dbo:militaryUnit ?militaryUnit .
  
  ?militaryUnit dbo:partOf <http://dbpedia.org/resource/New_Zealand_Army> .

  ?politician dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  ?electionLeader dbo:leaderOf <http://dbpedia.org/resource/1962_New_South_Wales_state_election> ;
                  dbo:militaryUnit ?militaryUnit .

  ?awardee dbo:award <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
617,69,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Antiochus III the Great and his child
  ?antiochusIII rdfs:label ""Antiochus III the Great""@en .
  ?child dbo:parent ?antiochusIII .

  # Spouse of the child of Antiochus III the Great
  ?spouse dbo:spouse ?child .

  # Successor of Antiochus II Theos who is royalty and their royal descendant
  ?antiochusII rdfs:label ""Antiochus II Theos""@en .
  ?successor dbo:predecessor ?antiochusII .
  FILTER (dbo:royalty(?successor)) .
  ?royalDescendant dbo:parent ?successor .

  # Commander in the Battle of Panium, their child, and the parent of that child
  ?commander rdfs:label ""Commander in Battle of Panium""@en .
  ?childOfCommander dbo:parent ?commander .
  ?parentOfChildOfCommander dbo:child ?childOfCommander .

  # Linking all together to find the spouse
  FILTER (?spouse = ?royalDescendant || ?spouse = ?parentOfChildOfCommander)
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
801,71,test,"Give me the professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> ?v8 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://dbpedia.org/property/writer> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producer WHERE {
  # Step 1: Identify The Shadow's alter ego
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .

  # Step 2: Find the professional in this alter ego role
  ?alterEgo foaf:name ""Lamont Cranston""@en .
  ?producer dbo:profession ?profession .
  
  FILTER(?profession IN (dbo:Producer, dbo:MusicalArtist)) 

  # Step 3: Identify musical works or songs produced by this professional
  ?work dbo:producer ?producer ;
        a dbo:Song .

  # Step 4: Determine the rapper and associated musical artist linked to this producer
  ?rapper dbo:associatedMusicalArtist ?producer .
  
  # Step 5: Locate the writer who is a musical artist involved in the album ""What U See Is What U Get""
  ?album rdfs:label ""What U See Is What U Get""@en ;
         dbo:writer ?writer .

  ?writer a dbo:MusicalArtist, dbo:Artist .
}
```",9,17,10,3,3,3,3,71,0,0,8,0,0.0,0
767,54,test,"Give me the reference to  and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater ?settlement WHERE {
  ?person rdfs:label ""George Kilbon Nash""@en .
  ?person dbo:almaMater ?almaMater .

  OPTIONAL {
    ?settlement rdfs:label ""Green""@en .
    FILTER (isLiteral(?settlement) = false)
    # Assuming there's a property linking settlements to administration, replace `dbo:administers` with the correct one if known
    ?person dbo:administers ?settlement .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
179,16,test,Give me the parent of the child of Bhumibol Adulyadej and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?child dbo:childOf ?bhumibol .
  ?bhumibol rdfs:label ""Bhumibol Adulyadej""@en .
  
  OPTIONAL { ?child dbo:parent ?parent . }
  
  ?person rdfs:label ?birthName .
  FILTER (?birthName = ""Sirikit""@en)
  
  ?sirikit dbo:birthName ?birthName .
  ?sirikit dbo:spouse ?bhumibol .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
801,53,test,"Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?producer ?alterEgo ?associatedArtist WHERE {
  # Producer of ""Westside Story"" (song)
  ?song rdfs:label ""Westside Story""@en .
  ?song dbo:producer ?producer .

  # Professional in the alter ego of The Shadow
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?alterEgo .

  # Writer of ""40 Dayz & 40 Nightz"" who is a musical artist and an artist
  ?album rdfs:label ""40 Dayz & 40 Nightz""@en .
  ?album dbo:writer ?writer .
  ?writer rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist .

  # Associated musical artist of the writer
  ?writer dbo:associatedMusicalArtist ?associatedArtist .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,55,test,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band1 ?band2 ?personOnSameDateBand WHERE {
  # Part 1: Band of the writer of ""Apollo"" (Hardwell song)
  ?song dbo:title ""Apollo""@en .
  ?song dbo:artist ""Hardwell""@en .
  ?song dbo:lyricist ?writer .
  OPTIONAL { ?writer dbo:band ?band1 . }

  # Part 2: Band of the person born as Tracey Elizabeth McSween
  ?person dbp:birthName ""Tracey Elizabeth McSween"" .
  OPTIONAL { ?person dbo:band ?band2 . }

  # Part 3: Person born on the same date as Pavlo Khudzik
  ?khudzik dbo:birthDate ?date .
  ?otherPerson dbo:birthDate ?date .
  FILTER(?otherPerson != ?khudzik)
  OPTIONAL { ?otherPerson dbo:band ?personOnSameDateBand . }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,54,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfParent WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?princeGeorge rdfs:label ""Prince George William of Hanover""@en .
  
  # Step 2: Find his child who is royalty
  ?child dbo:child ?princeGeorge ;
         dbo:title ?titleChild .

  FILTER EXISTS { ?titleChild rdfs:label ?royaltyLabel }

  # Step 3: Identify the parent of this royal child (who is also royalty)
  ?parentOfChild dbo:child ?child .
  ?parentOfChild dbo:title ?titleParent .
  
  FILTER EXISTS { ?titleParent rdfs:label ?royaltyLabel2 }
  
  # Step 4: Spouse of Princess Victoria Louise of Prussia
  ?princessVictoriaLouise rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?spouse dbo:spouse ?princessVictoriaLouise ;
          dbo:title ?titleSpouse .

  FILTER EXISTS { ?titleSpouse rdfs:label ?royaltyLabel3 }

  # Step 5: Child of Ernest Augustus, Crown Prince of Hanover
  ?ernestAugustus rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .
  
  ?spouse dbo:child ?ernestAugustus .

  # Step 6: Parent of the identified royalty from step 3
  ?parentOfParent dbo:child ?parentOfChild .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
485,24,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?region WHERE {
  # Joseph Whitaker's birth place
  ?whitaker dbo:birthPlace ?place1 .
  ?place1 rdf:type dbo:Region .

  # Eric Gregory Award awardee who is a writer and poet
  ?awardAwardedTo dbo:recipientOf ?award .
  ?award rdfs:label ""Eric Gregory Award""@en .
  ?awardAwardedTo dbo:writer true .
  ?awardAwardedTo dbo:poet true .

  # Awardee's birth place
  ?awardAwardedTo dbo:birthPlace ?place2 .
  ?place2 rdf:type dbo:Region .

  # Check if both places are the same region
  FILTER (?place1 = ?place2)
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,18,test,Give me the alma mater of Carl L. Nippert and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?location WHERE {
  ?person rdfs:label ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?almaMater .
  
  OPTIONAL { 
    ?almaMater dbp:state ?location .
    FILTER (CONTAINS(LCASE(?location), ""baden-württemberg""))
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
801,23,test,Give me the professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?cranston .
  ?cranston rdfs:label ""Lamont Cranston""@en .
  ?cranston dbo:profession ?profession .
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
485,26,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?country a dbo:Country ;
           dbo:timeZone ?tz .
  
  FILTER(CONTAINS(LCASE(STR(?tz)), ""western european time""))

  ?whitaker dbo:birthPlace ?country ;
            rdfs:label ""Joseph Whitaker (naturalist)""@en .

  ?warner dbo:birthPlace ?country ;
          rdfs:label ""Thomas Warner (poet)""@en .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,28,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?albumWriter ?songAuthor ?nativePlace WHERE {
  # Part 1: Writer of an album by Dave Flett
  OPTIONAL {
    ?album dbo:artist dbr:Dave_Flett ;
           dbo:writer ?albumWriter .
  }

  # Part 2: Author of ""Blinded by the Light""
  OPTIONAL {
    ?song rdfs:label ""Blinded by the Light""@en ;
          dbo:song ?songAuthor .
  }
  
  # Part 3: Native place of Winnie Madikizela-Mandela's death settlement
  OPTIONAL {
    ?winnie dbo:deathPlace ?deathSettlement ;
            dbo:nativePlace ?nativePlace .
  }
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
378,62,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?gahnWar ?crillonFame ?crillonWar WHERE {
  # Carl Pontus Gahn's birth name and wars
  ?gahn dbo:birthName ?birthName .
  FILTER (str(?birthName) = ""Carl Pontus Gahn"")
  OPTIONAL { ?gahn dbo:militaryConflict ?gahnWar . }

  # Louis des Balbes de Berton de Crillon's claim to fame and wars
  ?crillon rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  OPTIONAL { ?crillon dbo:claimToFame ?crillonFame . }
  OPTIONAL { ?crillon dbo:militaryConflict ?crillonWar . }

  # Peninsular War reference
  ?peninsularWar rdfs:label ""Peninsular War""@en .
  
  # Check if any wars are the same as the Peninsular War
  OPTIONAL { ?gahnWar rdfs:label ?peninsularLabel }
  OPTIONAL { ?crillonWar rdfs:label ?peninsularLabel }

  FILTER (str(?peninsularLabel) = ""Peninsular War"")
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
528,20,test,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?war WHERE {
  # Part 1: Wars involving Irene Morales
  { 
    ?person rdfs:label ""Irene Morales""@en .
    OPTIONAL { ?person dbo:participatedIn ?war . }
  }

  UNION

  # Part 2: Wars involving the commander of the Battle of La Rinconada de Ate
  {
    ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
    ?battle dbo:commander ?commander .
    OPTIONAL { ?commander dbo:participatedIn ?war . }
  }

  FILTER(?person != ?commander) # Ensure distinct results
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
488,61,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration ?deathPlace WHERE {
  # Tokugawa Masako's spouse and their father (if royalty)
  ?masako dbo:spouse ?spouse .
  ?spouse dbo:father ?royalFather .
  ?royalFather a dbo:Royalty .
  OPTIONAL { ?royalFather dbo:administration ?administration . }

  # Matsudaira Tadamasa's father and his death place (if politician)
  ?tadamasa dbo:father ?officeHolderFather .
  ?officeHolderFather a dbo:OfficeHolder ;
                     a dbo:Politician .
  OPTIONAL { ?officeHolderFather dbo:deathPlace ?deathPlace . }
}
```",6,9,7,3,2,3,3,71,0,332,1,0.0,0.0,0
747,56,test,Give me the band of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of the person born as the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandOfAmba ?personWithSameBirthDate ?bandOfShena WHERE {
  # Part 1: Band of Amba Shepherd
  ?amba a dbo:Person ;
        rdfs:label ""Amba Shepherd""@en ;
        dbo:birthDate ?ambasBirthDate .
  
  OPTIONAL { 
    ?amba dbo:band ?bandOfAmba .
  }
  
  # Part 2: Person born on the same date as Pavlo Khudzik
  ?pavlo a dbo:Person ;
         rdfs:label ""Pavlo Khudzik""@en ;
         dbo:birthDate ?khudziksBirthDate .

  ?personWithSameBirthDate a dbo:Person ;
                           dbo:birthDate ?ambasBirthDate .
  
  # Part 3: Band of the person born as Shèna
  ?shena a dbo:Person ;
         rdfs:label ""Shèna""@en .
  
  OPTIONAL {
    ?shena dbo:band ?bandOfShena .
  }
}
```",6,6,7,3,3,3,3,71,0,32,1,0.0,0.0,0
54,36,test,"Give me the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?thinkhaya rdfs:label ""Thinkhaya of Pagan""@en .
  ?thinkhaya dbo:child ?child .

  ?child dbo:predecessor ?predecessor .
  
  ?predecessor a dbo:OfficeHolder ;
               a dbo:Royalty .

  OPTIONAL {
    ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .
    ?predecessor dbo:relatedTo ?thihapate .
  }
}
```",4,6,5,3,2,3,3,71,0,1,1,0.0,0.0,0
427,29,test,Give me the party of the father of Lamberto Andreotti and reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father ?partyOfFather ?prodiParty WHERE {
  # Find Lamberto Andreotti's father and his party affiliation
  ?andreotti dbo:father ?father .
  ?father dbo:partyAffiliation ?partyOfFather .

  OPTIONAL {
    ?partyOfFather rdfs:label ""Partito Popolare Italiano""@en .
  }

  # Find Romano Prodi's party affiliation
  ?prodi dbo:partyAffiliation ?prodiParty .
  
  FILTER (str(?andreotti) = str(<http://dbpedia.org/resource/Lamberto_Andreotti>))
  FILTER (str(?prodi) = str(<http://dbpedia.org/resource/Romano_Prodi>))
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,53,test,"Give me the person decedent at the work of the author of French Algeria and commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?decedentAtWork ?decedentInAlgiers WHERE {
  # Find the author of ""French Algeria""
  ?book rdfs:label ""French Algeria""@en .
  ?book dbo:author ?author .

  # Find where the author worked and who is buried there
  OPTIONAL {
    ?workLocation dbo:employee ?author ;
                  dbo:deathPlace ?decedentAtWork .
  }

  # Find a commander in the Franco-Hova Wars
  ?commander dbo:commanderInWar ?francoHovaWars ;
             dbo:deathPlace ?decedentAtWork .

  # Find who is buried in Algiers, the capital of Algeria
  ?algiers rdfs:label ""Algiers""@en .
  ?algiers a dbo:Settlement ;
           dbo:capitalOf <http://dbpedia.org/resource/Algeria> .
  OPTIONAL {
    ?algiers dbo:deathPlace ?decedentInAlgiers .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
485,25,test,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?country ?entity WHERE {
  ?country dbo:timeZone ?tz .
  FILTER (CONTAINS(LCASE(str(?tz)), ""western european time""))
  
  ?awardee dbo:award ?award .
  ?award rdfs:label ""Eric Gregory Award""@en .
  ?awardee dbo:occupation ?occupation1, ?occupation2 .
  FILTER (CONTAINS(LCASE(str(?occupation1)), ""writer"") && CONTAINS(LCASE(str(?occupation2)), ""poet""))
  
  ?awardee dbo:birthPlace ?entity .
  ?entity rdfs:label ?locationLabel .
  FILTER (CONTAINS(LCASE(str(?locationLabel)), ""nottinghamshire""))

}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,38,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Step 1: Identify Donald Maynard Dokken
  ?dokken a dbo:MusicalArtist ;
          dbo:birthName ""Donald Maynard Dokken"" .
  
  # Step 2: Find band members of Dokken
  ?dokken dbo:bandMember ?bandMember .

  # Step 3: Identify Meshuggah's band members
  ?meshuggah a dbo:Band, dbo:MusicalGroup, dbo:Organization ;
             rdfs:label ""Meshuggah""@en .
  
  ?meshuggah dbo:bandMember ?meshuggahMember .

  # Step 4: Find associated musical artists of Dokken's band members
  OPTIONAL {
    ?bandMember dbo:associatedBand ?associatedArtist .
  }
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
10,21,test,Give me the associated musical artist of Matt Colton and band member of Luke Vibert and professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?entity WHERE {
  OPTIONAL { 
    ?entity dbo:associatedMusicalArtist _:a .
    _:a rdfs:label ""Matt Colton""@en .
  }
  
  OPTIONAL { 
    ?entity dbo:bandMember _:b .
    _:b rdfs:label ""Luke Vibert""@en .
  }

  OPTIONAL {
    ?person rdfs:label ""Sharon Kao""@en .
    ?person dbo:birthName ?name .
    ?entity dbo:profession ?person .
  }
}
```",4,4,5,2,3,2,3,28,0,1,1,0.0,0.0,0
488,69,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace ?deathPlace WHERE {
  # Saitō Hajime's birth place
  ?saitoHajime rdfs:label ""Saitō Hajime""@en .
  ?saitoHajime dbo:birthPlace ?birthPlace .

  OPTIONAL {
    # Tokugawa Masako's spouse's father (a royalty) and his administration
    ?tokugawaMasako rdfs:label ""Tokugawa Masako""@en .
    ?tokugawaMasako dbo:spouse ?spouse .
    ?spouse dbo:father ?royaltyFather .
    ?royaltyFather a dbo:Monarch .
    ?administration dbo:monarch ?royaltyFather .

    # Yūki Hideyasu's father (a politician) and his death place
    ?yuukiHideyasu rdfs:label ""Yūki Hideyasu""@en .
    ?yuukiHideyasu dbo:father ?politicianFather .
    ?politicianFather a dbo:Politician .
    ?politicianFather dbo:deathPlace ?deathPlace .
  }
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,68,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?individual WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhaya rdfs:label ""Thinkhaya""@en .
  ?thinkhaya dbo:child ?child1 .

  # Thihapate of Mohnyin's predecessor who is an office holder and royalty
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .
  ?predecessor dbo:successor ?thihapate ;
               a dbo:Monarch, dbo:OfficeHolder .

  # Predecessor's child whose parent we are interested in
  ?predecessor dbo:child ?child2 .
  
  # Thado Minsaw of Prome's parent and their child
  ?thado rdfs:label ""Thado Minsaw""@en .
  ?parent dbo:child ?thado ;
          dbo:child ?child3 .

  # Connect the relationships to find the desired individual
  FILTER (?child1 = ?child2 && ?child2 = ?child3)
  BIND(?child2 AS ?individual)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
427,48,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of the party of Michele Pinto.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?prodiParty ?pintoParty WHERE {
  ?prodi rdfs:label ""Romano Prodi""@en .
  ?prodi dbo:partyAffiliation ?prodiParty .

  ?pinto rdfs:label ""Michele Pinto""@en .
  ?pinto dbo:partyAffiliation ?pintoParty .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
281,53,test,"Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardWar ?professionWar WHERE {
  # Jonathon Band's award and associated war
  ?jonathonBand rdfs:label ""Jonathon Band""@en .
  ?jonathonBand dbo:award ?award .
  ?award dbo:war ?awardWar .

  # Heather Roy's profession as a military unit and associated war
  ?heatherRoy rdfs:label ""Heather Roy""@en .
  ?heatherRoy dbo:profession ?militaryUnit .
  ?militaryUnit rdf:type dbo:MilitaryUnit .
  ?militaryUnit dbo:war ?professionWar .

  # Ensure the award is related to the Colony of New Zealand
  OPTIONAL {
    ?award dbo:country <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,41,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?princess rdfs:label ""Victoria Louise, Princess Royal""@en .
  ?princess dbo:parent ?ernestAugustus .

  ?child dbo:parent ?ernestAugustus ;
         a dbo:Person ;
         dbo:royaltyStatus ?status .
  
  FILTER EXISTS { ?status rdfs:label ?label . FILTER regex(?label, ""royal"", ""i"") }

  ?spouse dbo:spouse ?child .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,18,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?resident WHERE {
  ?film dbo:director ?director .
  FILTER(STR(?film) = ""Pipe Dreams (1976 film)"")
  
  ?director dbo:birthPlace ?birthplace .
  ?birthplace rdf:type dbo:Settlement .

  ?child dbo:character ?fictionalCharacter ;
         dbo:soapCharacter ?soapCharacter .
  ?director dbo:parent ?child .
  
  ?birthplace dbo:resident ?resident .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
487,17,test,"Give me the country of 2022 Vermont House of Representatives election and administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country ?administration WHERE {
  # Part 1: Country of the 2022 Vermont House of Representatives Election
  VALUES (?state) { ""Vermont"" }
  ?state dbo:country ?country .
  
  # Part 2: Administration of Phil Scott
  ?person rdfs:label ""Phil Scott""@en ;
          dbo:birthName ?birthName ;
          dbo:positionHeld ?administration .
  FILTER EXISTS {
    ?administration dbo:officeHolder ?person .
    ?administration dbo:office ?office .
    ?office rdfs:label ""Governor of Vermont""@en
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
801,62,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v6 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional ?alterEgo ?associatedArtist ?work WHERE {
  # Find the alter ego of The Shadow
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alias ?alterEgo .

  # Find Chris Taylor's associated musical artist
  ?chris foaf:name ""Chris Taylor (music producer)""@en .
  ?chris dbo:associatedMusicalArtist ?associatedArtist .

  # Link the alter ego to a professional who is also an associated artist and has produced works with rappers
  ?professional rdfs:label ?alterEgoLabel .
  FILTER(CONTAINS(LCASE(?alterEgoLabel), LCASE(STR(?alterEgo)))) .
  
  OPTIONAL {
    ?work dbo:producer ?professional ;
          dbo:musicalArtist ?associatedArtist ;
          a dbo:Song .
    
    # Ensure the work involves a rapper
    ?rapper rdfs:label ?rapperLabel .
    FILTER(CONTAINS(LCASE(?rapperLabel), ""Rapper"")) .
    ?work dbo:musicalArtist ?rapper .
  }
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
9,60,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?almaMater ?nickname WHERE {
  # Find the organisation in Belfast
  ?organisation dbo:location ?belfastLocation .
  ?belfastLocation rdfs:label ""Belfast""@en .

  # Identify the mayor of this organisation
  OPTIONAL { 
    ?mayor dbo:positionHeld ?organisationPosition .
    ?organisationPosition dbo:roleName ""Mayor""@en .
    ?mayor dbo:almaMater ?almaMater .
  }

  # Find an educational institution in Northern Ireland with a nickname
  ?institution dbo:location ?niLocation .
  ?niLocation rdfs:label ""Northern Ireland""@en .
  OPTIONAL { 
    ?institution dbo:nickname ?nickname .
  }
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
994,58,test,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtistSASlayer ?bandMemberBornAsArtist ?associatedArtistMeshuggah
WHERE {
  # Part 1: Associated musical artist of S.A. Slayer
  ?sas rdfs:label ""S.A. Slayer""@en .
  ?sas dbo:associatedMusicalArtist ?associatedArtistSASlayer .

  # Part 2: Band member born as a musical artist, related to Don Dokken
  ?person foaf:name ?name ;
          dbo:birthPlace ?birthPlace ;
          dbo:bandMemberOf ?band .
  FILTER EXISTS { ?band rdfs:label ""Don Dokken""@en }
  OPTIONAL {
    ?person dbo:associatedMusicalArtist ?bandMemberBornAsArtist .
  }

  # Part 3: Associated musical artist of a Meshuggah band member
  ?meshuggahBand rdfs:label ""Meshuggah""@en ;
                 a dbo:Band .
  ?member dbo:bandMemberOf ?meshuggahBand ;
          dbo:associatedMusicalArtist ?associatedArtistMeshuggah .
}

```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
994,63,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Find the associated musical artist of ""Watchtower""
SELECT ?associatedArtist WHERE {
  ?watchtower dbo:genre ?genre .
  ?watchtower dbo:associatedBandOrMusicalArtist ?associatedArtist .
}

# Step 2: Find the associated musical artist of a band member from step 1
SELECT ?finalArtist WHERE {
  # Assuming ?bandMember is obtained from the result of step 1
  ?bandMember dbo:memberOf ?band .
  ?band dbo:associatedBandOrMusicalArtist ?finalArtist .
}

# Step 3: Find the band and organization associated with ""Meshuggah""
SELECT ?meshuggahAssociated WHERE {
  ?meshuggah dbo:genre ?genre .
  ?meshuggah dbo:associatedBandOrMusicalArtist ?meshuggahAssociated .
}

# Step 4: Find a band member of Meshuggah
SELECT ?bandMember WHERE {
  # Assuming ?meshuggahBand is obtained from the result of step 3
  ?meshuggahBand dbo:member ?bandMember .
}

# Step 5: Identify Don Dokken
SELECT ?donDokken WHERE {
  ?person foaf:name ""Don Dokken"" ;
          rdf:type dbo:MusicalArtist ;
          dbo:birthName ""Donald Maynard Dokken"" .
}

# Step 6: Find a band member associated with Don Dokken
SELECT ?dokkenBandMember WHERE {
  # Assuming ?donDokken is obtained from the result of step 5
  ?donDokken dbo:memberOf ?band ;
             dbo:associatedBandOrMusicalArtist ?dokkenBandMember .
}

# Step 7: Combine results to find the final answer
SELECT ?finalAnswer WHERE {
  # Assuming ?finalArtist is obtained from step 2 and ?dokkenBandMember from step 6
  ?finalArtist rdfs:label ?artistLabel .
  ?dokkenBandMember rdfs:label ?bandMemberLabel .
  FILTER(?artistLabel = ?bandMemberLabel)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
391,49,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie a dbo:Film ;
         a dbo:Work ;
         a dbo:TelevisionShow .
  
  ?movie dbo:location ?hubCity .
  ?hubCity rdfs:label ""Hub City""@en .

  ?person dbo:nativePlace ?hubCity ;
          dbo:profession ?profession .
  
  ?movie dbo:starring ?actor .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
747,67,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandShena ?bandWriterAmbaShepherd ?bandPerson1985 WHERE {
  # Person born as the persona of Shèna
  ?person rdfs:label ""Shèna""@en .
  OPTIONAL { ?person dbo:band ?bandShena . }

  # Writer of the work, that is a song, of Amba Shepherd
  ?song dbo:lyricsBy ?writer ;
        dbo:musicBy ?composer ;
        dbo:artist ?ambashepherd .
  FILTER(?ambashepherd = dbpedia:Amba_Shepherd) .
  OPTIONAL { ?writer dbo:band ?bandWriterAmbaShepherd . }
  OPTIONAL { ?composer dbo:band ?bandWriterAmbaShepherd . }

  # Person born on 1985-04-29
  ?person2 dbo:birthday ""1985-04-29""^^xsd:date .
  OPTIONAL { ?person2 dbo:band ?bandPerson1985 . }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,63,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceSaito ?deathPlaceYukiFather ?administrationGoMizunooFather WHERE {
  # Birth place of Saitō Hajime
  ?saito rdfs:label ""Saitō Hajime""@en .
  ?saito dbo:birthPlace ?birthPlaceSaito .

  # Death place of Yūki Hideyasu's father (a politician)
  ?yuki rdfs:label ""Yūki Hideyasu""@en .
  ?yuki dbo:father ?yukiFather .
  ?yukiFather a dbo:Politician ;
             dbo:deathPlace ?deathPlaceYukiFather .

  # Administration of Emperor Go-Mizunoo's father
  ?goMizunoo rdfs:label ""Emperor Go-Mizunoo""@en .
  ?goMizunoo dbo:father ?goMizunooFather .
  ?goMizunooFather dbo:positionHeld ?administrationGoMizunooFather .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
994,67,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Fredrik Thordendal's band Meshuggah
  ?meshuggah dbo:bandMember ?thordendal .
  ?thordendal foaf:name ""Fredrik Thordendal"" .

  # Associated musical artists with Meshuggah members
  ?member dbo:associatedBandOrMusicalArtist ?associatedArtist .

  # Don Dokken's persona and associated artist
  ?dokken foaf:name ""Don Dokken"" .
  ?dokken dbo:bandMember ?dokkenBand .
  ?dokkenBand dbo:associatedBandOrMusicalArtist ?donDokkenAssociatedArtist .

  # S.A. Slayer (Tom Araya) and associated artist
  ?slayer foaf:name ""Slayer"" .
  ?slayer dbo:bandMember ?araya .
  ?araya foaf:name ""Tom Araya"" .
  ?araya dbo:associatedBandOrMusicalArtist ?saSlayerAssociatedArtist .

  # Find overlap between associated artists
  FILTER (?associatedArtist = ?donDokkenAssociatedArtist || ?associatedArtist = ?saSlayerAssociatedArtist)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
421,26,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Dino Merlin's birth name
  ?merlin rdfs:label ""Dino Merlin""@en .
  ?merlin dbo:birthName ?birthName .

  # Find the person who is a band member of an awardee and native of SFR Yugoslavia
  ?person dbo:nativeCountry ?yugoslavia ;
          dbo:award ?award ;
          dbo:bandMember ?band .

  ?yugoslavia rdfs:label ""Socialist Federal Republic of Yugoslavia""@en .
  
  # Ensure the person is related to Dino Merlin's birth name context
  OPTIONAL { ?person dbo:birthName ?birthName }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,68,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName ?commander ?claimToFame ?war WHERE {
  # Find Carl Pontus Gahn's birth name
  ?gahn a dbo:Person ;
        rdfs:label ""Carl Pontus Gahn""@en ;
        dbo:birthName ?birthName .

  # Identify the commander of the Great Siege of Gibraltar and their claim to fame
  ?siege dbo:commander ?commander ;
         rdfs:label ""Great Siege of Gibraltar""@en .
  OPTIONAL { ?commander dbo:claimToFame ?claimToFame . }

  # Determine the war associated with this commander related to the Peninsular War
  ?war dbo:commander ?commander ;
       a dbo:MilitaryConflict ;
       rdfs:label ?warLabel .
  FILTER (CONTAINS(LCASE(?warLabel), ""peninsular war""))
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
360,26,test,"Give me the reference to the author of Blinded by the Light and native of Johannesburg and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?song rdfs:label ""Blinded by the Light""@en .
  ?song dbo:lyricsAuthor ?author .

  ?author dbo:nativePlace ?place .
  ?place rdfs:label ""Johannesburg""@en .

  OPTIONAL { 
    ?album dbo:writer ?author ;
           dbo:performer ?performer .
    ?performer rdfs:label ""Dave Flett""@en .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
435,26,test,"Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?authorWork ?gmtRegion ?administeredTerritory WHERE {
  # Identify Reykjavik as ""Land of fire and ice""
  ?settlement rdfs:label ""Reykjavík""@en .
  
  # Find an author associated with Iceland
  ?author dbo:nationality dbc:Iceland ;
          dbo:work ?authorWork .

  # Determine the GMT region for Reykjavik
  ?settlement dbo:timeZone ?gmtRegion .

  # Identify territories administered from Reykjavik
  OPTIONAL {
    ?administeredTerritory dbo:administrativeRegion ?settlement .
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,70,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?partyName ?fatherParty ?prodiParty WHERE {
  # Italian People's Party (1994)
  ?party rdfs:label ""Italian People's Party""@en .
  FILTER(YEAR(?party) = 1994)
  ?party rdfs:label ?partyName .

  # Father of an Alumnus of MIT
  ?alumnus dbo:almaMater <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?father dbo:child ?alumnus .
  OPTIONAL { ?father dbo:partyListedBelow ?fatherParty . }
  
  # Romano Prodi
  ?prodi rdfs:label ""Romano Prodi""@en .
  FILTER(?prodi foaf:name = ""Romano Prodi"")
  OPTIONAL { ?prodi dbo:birthName ?birthName . }
  OPTIONAL { ?prodi dbo:partyListedBelow ?prodiParty . }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
360,20,test,"Give me the reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and writer of The Roaring Silence.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manfredMann ?deathPlaceNativeOf ?writer WHERE {
  ?manfredMann rdfs:label ""Manfred Mann""@en .
  
  ?winnie dbo:deathPlace ?deathPlace .
  ?deathPlace a dbo:Place .
  ?deathPlace dbo:nativeName ?deathPlaceNativeOf .

  ?book dbo:title ""The Roaring Silence""@en ;
        dbo:author ?writer .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
92,45,test,Give me the band member of Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember ?associatedArtist ?personBand WHERE {
  # Part 1: Band Member of Nevermore
  ?nevermore dbo:bandMember ?bandMember .
  ?nevermore rdfs:label ""Nevermore""@en .

  UNION

  # Part 2: Associated Musical Artist of Jim Sheppard
  ?jimSheppard rdfs:label ""Jim Sheppard""@en .
  ?jimSheppard dbo:associatedBand ?associatedArtist .

  UNION

  # Part 3: Band of the person born as Joseph Michael
  ?person dbo:birthdayName ""Joseph Michael"" .
  ?person dbo:band ?personBand .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,45,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War and military force of Spanish Civil War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?event ?force WHERE {
  ?person rdfs:label ""El Director""@en .
  ?person dbo:nationality dbr:Spain .
  ?person dbo:birthPlace ?place .
  ?person dbo:deathPlace ?deathPlace .
  ?person dbo:occupation dbr:Military_person .

  # Assuming El Director's involvement in specific wars
  ?event dbo:commander ?person ;
         a dbo:MilitaryConflict .
  
  OPTIONAL { 
    ?event dbo:participatingMilitaryForce ?force .
  }
}
```",5,6,6,3,3,3,3,71,0,0,11,0,0.0,0
232,44,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  # Jon Pertwee's child
  ?person dbo:spouse ?jonPertwee .
  ?jonPertwee rdfs:label ""Jon Pertwee""@en .
  ?person dbo:child ?child .

  # Sylvie Bermann's residence
  OPTIONAL { 
    ?sylvieBermann dbo:residence ?settlement .
    ?sylvieBermann rdfs:label ""Sylvie Bermann""@en .
    ?settlement a dbo:Settlement ;
                dbo:country ?britishCountry .
    ?britishCountry rdfs:label ""United Kingdom""@en .
  }

  # Sean Pertwee's claim to fame
  OPTIONAL {
    ?seanPertwee dbo:claimToFame ?film .
    ?seanPertwee rdfs:label ""Sean Pertwee""@en .
    ?film a dbo:Film ;
          dbo:militaryConflict ?conflict .
    ?conflict a dbo:MilitaryConflict .
  }

  # Ensure the child is linked to both conditions
  FILTER (?child = ?person)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
617,37,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfNysa ?spouseOfRoyalChild WHERE {
  # Find Nysa and her parent
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  ?nysa dbo:spouse ?pharnacesI .
  ?pharnacesI dbo:parent ?parentOfNysa .

  # Find Antiochus, his successor, and the child who is royalty
  ?antiochus rdfs:label ""Antiochus (son of Antiochus III the Great)""@en .
  ?successor dbo:succeededBy ?antiochus .
  ?royalChild dbo:childOf ?successor ;
              a dbo:Royal .

  # Find the spouse of this royal child
  ?royalChild dbo:spouse ?spouseOfRoyalChild .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
54,70,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Step 1: Identify Thihapate of Mohnyin
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .
  
  # Step 2: Find the child of Thihapate of Mohnyin
  ?child dbo:parent ?thihapate .

  # Step 3: Check if the child is an office holder and royalty
  ?child dbo:officeHolder true .
  ?child dbo:royalty true .

  # Step 4: Identify Soe Min Wimala Dewi's father
  ?soeminwimaladewi rdfs:label ""Soe Min Wimala Dewi""@en .
  ?father dbo:parent ?soeminwimaladewi .

  # Step 5: Find the parent of Thado Minsaw of Prome
  ?thadominsaw rdfs:label ""Thado Minsaw of Prome""@en .
  ?parent dbo:child ?thadominsaw .

  # Step 6: Determine the child of the parent of Thado Minsaw of Prome
  ?grandchild dbo:parent ?parent .

  # Step 7: Identify the predecessor of the office holder and royalty
  ?officeHolder dbo:predecessor ?predecessor .
  
  FILTER (?child = ?officeHolder)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
48,17,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of Carl Falk.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actorBand WHERE {
  # Find the show featuring Stacey Dash
  ?show dbo:actor ?stacyDash .
  ?stacyDash rdfs:label ""Stacey Dash""@en .

  # Find actors in that show who are also musical artists
  ?show dbo:actor ?actor .
  ?actor dbo:musicalArtist ?musicalArtist .
  
  # Get the band of this actor
  ?musicalArtist dbo:band ?actorBand .

  # Find Carl Falk's band
  ?carlFalk rdfs:label ""Carl Falk""@en .
  ?carlFalk dbo:band ?falkBand .

  # Check if there is any commonality between the bands
  FILTER(?actorBand = ?falkBand)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
9,68,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?mayorAlmaMater ?universityNickname WHERE {
  # Find the mayor of Belfast who is a politician
  ?belfast dbo:mayor ?mayor .
  ?mayor rdf:type dbo:Politician .
  
  # Get the alma mater of the mayor
  ?mayor dbo:almaMater ?mayorAlmaMater .

  # Identify Queen's University Belfast and its nickname
  ?university rdfs:label ""Queen's University Belfast""@en ;
              dbo:nickname ?universityNickname .
  
  # Find the awardee of the Royal Medal associated with Queen's University Belfast
  ?awardee dbo:almaMater ?university ;
           dbo:awardReceived ?royalMedal .
  ?royalMedal rdfs:label ""Royal Medal""@en .

}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
48,16,test,"Give me the band of the actor, that is a musical artist, of Honor Up and band of the writer of Emotion (Carly Rae Jepsen album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actorBand ?writerBand WHERE {
  # Part 1: Actor of ""Honor Up"" who is a musical artist and their band
  ?movie dbo:title ""Honor Up""@en .
  ?movie dbo:actor ?actor .
  OPTIONAL { 
    ?actor dbo:musicalArtist ?musicalArtist .
    ?musicalArtist dbo:band ?actorBand .
  }

  # Part 2: Writer of the song ""Emotion"" and their band
  ?song rdfs:label ""Emotion (Carly Rae Jepsen song)""@en .
  ?song dbo:writer ?writer .
  OPTIONAL { 
    ?writer dbo:musicalArtist ?musicalArtistWriter .
    ?musicalArtistWriter dbo:band ?writerBand .
  }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
801,48,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?professional ?artist WHERE {
  # Find The Shadow's alter ego
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?professional .

  # Find the writer of 40 Dayz & 40 Nightz and their associated musical artist
  ?album rdfs:label ""40 Dayz & 40 Nightz""@en .
  ?album dbo:writer ?writer .
  ?writer dbo:musicalArtist ?artist .

  # Check if the professional is also a musical artist
  ?professional dbo:musicalArtist ?artist .
}
```",5,7,6,3,2,3,3,71,0,0,22,0,0.0,0
488,57,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceEnomoto ?deathPlaceGrandfatherMatsudaira ?administrationFatherGoMizunoo WHERE {
  # Enomoto Takeaki's birth place
  ?enomoto rdfs:label ""Enomoto Takeaki""@en .
  ?enomoto dbo:birthPlace ?birthPlaceEnomoto .

  # Matsudaira Tadamasa's grandfather (father of father)
  ?matsudaira rdfs:label ""Matsudaira Tadamasa""@en .
  ?matsudaira dbo:father ?fatherMatsudaira .
  ?fatherMatsudaira dbo:father ?grandfatherMatsudaira .
  ?grandfatherMatsudaira a dbo:OfficeHolder ;
                       dbo:officeHolder ?politicianRole .

  # Death place of Matsudaira Tadamasa's grandfather
  OPTIONAL { ?grandfatherMatsudaira dbo:deathPlace ?deathPlaceGrandfatherMatsudaira }

  # Emperor Go-Mizunoo's father and his administration
  ?goMizunoo rdfs:label ""Emperor Go-Mizunoo""@en .
  ?goMizunoo dbo:father ?fatherGoMizunoo .
  OPTIONAL { ?fatherGoMizunoo dbo:officeHolder ?administrationFatherGoMizunoo }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
427,50,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?fatherParty ?prodiParty WHERE {
  # Part 1: Party of the father of an MIT alumnus
  ?alumnus dbo:almaMater dbpedia:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
  OPTIONAL { ?father dbo:partyAffiliation ?fatherParty . }
  
  # Part 2: Party of Romano Prodi
  ?prodi rdfs:label ""Romano Antonio Prodi""@en .
  ?prodi dbo:officeHolder true .
  ?prodi dbo:politician true .
  OPTIONAL { ?prodi dbo:partyAffiliation ?prodiParty . }
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
492,67,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person WHERE {
  # Person decedent at French Algeria
  ?deathPlace1 dbo:country dbr:French_Algeria ;
              dbo:decedent ?person .
  
  # Capital of Khemis Miliana District is a settlement
  ?district dbo:capital ?capitalCity ;
            rdfs:label ""Khemis Miliana District""@en .
  ?capitalCity rdf:type dbo:Settlement .

  # Person decedent at the capital city
  ?deathPlace2 dbo:city ?capitalCity ;
               dbo:decedent ?person .

  # Person was a commander in a war involving Battle of Verdun
  ?war dbo:event dbr:Battle_of_Verdun ;
       dbo:commander ?person .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
701,60,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the spouse of Amun-her-khepeshef.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Find the commander in Battle of Perire
  ?battle dbo:eventParticipant ?commander .
  ?battle rdfs:label ""Battle of Perire""@en .

  # Identify the father of the commander
  ?father dbo:child ?commander .

  # Determine the spouse of the father, ensuring they are royalty
  ?spouse dbo:spouse ?father .
  ?spouse a dbo:RoyalFamilyMember .  # Assuming there's a class for royalty

  # Find the child of the spouse of Amun-her-khepeshef
  ?amunHerKhepeshefSpouse dbo:spouse ?amunHerKhepeshef .
  ?child dbo:parent ?amunHerKhepeshefSpouse .

  # Ensure the parent of this child matches the spouse identified earlier
  ?parent dbo:child ?child .
  FILTER (?parent = ?spouse)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
747,28,test,Give me the band of Shèna and person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandOfShena ?personWithSameBirthDateAsPavloKhudzik ?bandOfAmbaShepherd WHERE {
  # Find the band of Shèna
  ?shena rdfs:label ""Shèna""@en .
  OPTIONAL { ?shena dbo:band ?bandOfShena . }

  # Find Pavlo Khudzik's birth date
  ?pavloKhudzik rdfs:label ""Pavlo Khudzik""@en .
  ?pavloKhudzik dbo:birthDate ?birthDate .

  # Find a person with the same birth date as Pavlo Khudzik
  ?personWithSameBirthDateAsPavloKhudzik dbo:birthDate ?birthDate .
  FILTER(?personWithSameBirthDateAsPavloKhudzik != ?pavloKhudzik)

  # Find the band of Amba Shepherd
  ?ambaShepherd rdfs:label ""Amba Shepherd""@en .
  OPTIONAL { ?ambaShepherd dbo:band ?bandOfAmbaShepherd . }
}
```",4,4,5,2,3,3,3,71,1,28,0,0.034482758620689655,1.0,0.06666666666666667
659,50,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?polishHorse rdfs:label ""Polish Horse""@en .
  ?polishHorse a dbo:MilitaryUnit .
  
  ?war dbo:militaryUnit ?polishHorse ;
       dbo:commander ?commander .

  ?schimmelpenninckEvent rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  ?schimmelpenninckEvent a dbo:SocietalEvent, dbo:MilitaryConflict .
  
  ?force dbo:participatedIn ?schimmelpenninckEvent ;
         dbo:militaryUnit ?polishHorse .
}
```",5,12,6,3,2,3,3,71,0,0,31,0,0.0,0
182,27,test,Give me the war of Mahesh Senanayake and war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?maheshWar ?gotabhayaWork ?tamaraNationality WHERE {
  # Mahesh Senanayake's war
  ?person rdfs:label ""Mahesh Senanayake""@en .
  OPTIONAL { 
    ?person dbo:wikiPageDisambiguates ?war .
    ?war rdf:type dbo:War .
    BIND(?war AS ?maheshWar)
  }

  # Gotabhaya Rajapaksa's work
  ?gotabhaya rdfs:label ""Gotabhaya Rajapaksa""@en .
  OPTIONAL {
    ?gotabhaya dbo:work ?work .
    ?work rdf:type dbo:Book ; # Assuming works are books, can be adjusted if needed
          dbo:wikiPageDisambiguates ?war .
    ?war rdf:type dbo:War .
    BIND(?work AS ?gotabhayaWork)
  }

  # Tamara Kunanayakam's nationality
  ?tamara rdfs:label ""Tamara Kunanayakam""@en .
  ?tamara dbo:nationality ?nationality .
  BIND(?nationality AS ?tamaraNationality)
}
```",5,5,6,2,3,2,3,28,0,1,1,0.0,0.0,0
701,64,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?henuttawyParent ?amunChildParent ?commanderSpouse WHERE {
  # Henuttawy's parent
  ?henuttawy rdfs:label ""Henuttawy (19th dynasty)""@en .
  ?henuttawy dbo:parent ?henuttawyParent .

  # Amun-her-khepeshef's spouse and their child's parent
  ?amunHerKhepeshef rdfs:label ""Amun-her-khepeshef""@en .
  ?amunHerKhepeshef dbo:spouse ?amunSpouse .
  OPTIONAL { ?amunChild dbo:parent ?amunSpouse . }
  OPTIONAL { ?amunChild dbo:childOf ?amunSpouse . }
  ?amunChildParent dbo:parent ?amunChild .

  # Commander in the Battle of Perire
  ?battle rdfs:label ""Battle of Perire""@en .
  ?commander dbo:participatedIn ?battle .
  ?commanderFATHER dbo:father ?commander .
  OPTIONAL { ?commanderFATHER dbo:spouse ?commanderSpouse . }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
232,53,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativePlace WHERE {
  # Sylvie Bermann's residence that is a settlement and British
  ?residence dbo:resident Sylvie_Bermann ;
             rdf:type dbo:Settlement ;
             dbo:country dbc:United_Kingdom .

  # Actor of Dog Soldiers (film)
  ?actor dbo:birthPlace ?nativePlace ;
         dbo:spouse ?sylvieBermannResident .
  
  # Ensure the actor's native place is the same as Sylvie Bermann's residence
  FILTER (?residence = ?nativePlace)

  # Jon Pertwee's child
  ?jonPertwee foaf:name ""Jon Pertwee"" ;
              dbo:child ?actor .

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
197,8,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of Dumitru Nadu.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardeeLabel ?birthPlaceAwardee ?dumitruNaduBirthPlace WHERE {
  # Find the awardee of the Leroy P. Steele Prize
  ?award dbo:name ""Leroy P. Steele Prize""@en .
  ?award dbo:recipient ?awardee .
  ?awardee rdfs:label ?awardeeLabel .

  OPTIONAL {
    ?awardee dbo:birthPlace ?birthPlaceAwardee .
  }

  # Find Dumitru Nadu's birthplace
  ?dumitruNadu rdfs:label ""Dumitru Nadu""@en .
  OPTIONAL {
    ?dumitruNadu dbo:birthPlace ?dumitruNaduBirthPlace .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
747,45,test,Give me the person born on 1985-04-29 and band of Amba Shepherd and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?ambaBand ?shenaPerson ?shenaBand WHERE {
  # Find Amba Shepherd's band
  ?amba a dbo:MusicalArtist ;
        rdfs:label ""Amba Shepherd""@en .
  OPTIONAL { ?amba dbo:band ?ambaBand . }

  # Find the person born as Shèna and check their birth date
  ?shenaPerson a dbo:MusicalArtist ;
               rdfs:label ""Shèna""@en ;
               dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1985 && MONTH(?birthDate) = 4 && DAY(?birthDate) = 29)

  # Find the band of the person born as Shèna
  OPTIONAL { ?shenaPerson dbo:band ?shenaBand . }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
963,17,test,"Give me the entity in Serbia and administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politicalParty ?rulingAdministration WHERE {
  ?politicalParty a dbo:PoliticalParty ;
                  dbo:country dbr:Serbia .
  OPTIONAL { ?politicalParty dbo:rulingParty ?rulingAdministration . }
  FILTER EXISTS { ?location dbr:21205 ; dbo:administrativeUnit ?rulingAdministration . }
}
```",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
391,47,test,"Give me the native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativePlace ?notableWork WHERE {
  ?spouse dbo:spouse ?sherryHormann .
  ?sherryHormann rdfs:label ""Sherry Hormann""@en .

  OPTIONAL { ?spouse dbo:nativePlace ?nativePlace . }
  
  OPTIONAL { 
    ?spouse dbo:film ?notableWork .
    FILTER (lang(?notableWork) = 'en')
  }

  # Assuming Hub City refers to a known entity, replace with actual resource if available
  # Example: ?spouse rdfs:label ""Hub City""@en .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,22,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country ?sportsEvent WHERE {
  ?place rdfs:label ""Aguilar de Segarra""@en .
  ?place dbo:region ?region .

  ?region dbo:country ?country .
  
  ?timeZone dbo:name ""Central European Time"" ;
            dbo:region ?region .

  OPTIONAL { 
    ?sportsEvent dbo:location ?region ;
                 a dbo:SportsEvent .
  }
}
```",4,6,5,2,2,2,3,28,0,0,28787,0,0.0,0
9,35,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?mayor ?almaMater WHERE {
  ?mayor a dbo:Politician ;
         dbo:officeHolder ?office .
  ?office dbo:position ""Mayor""@en ;
          dbo:organization ?forum .
  ?forum rdfs:label ""Northern Ireland Forum""@en .

  OPTIONAL { 
    ?mayor dbo:almaMater ?university .
    ?university rdfs:label ?almaMater .
  }

  FILTER EXISTS {
    ?mayor foaf:name ?name .
    # Optional filter to check for association with Queen's University Belfast
    OPTIONAL { 
      ?mayor dbo:almaMater ?queenUniversity .
      ?queenUniversity rdfs:label ""Queen's University Belfast""@en .
    }
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
488,62,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace ?deathPlace WHERE {
  # Saitō Hajime's birthplace
  ?saitoHajime rdfs:label ""Saitō Hajime""@en .
  ?saitoHajime dbo:birthPlace ?birthPlace .

  # War as a military conflict, event, and societal event
  ?war dbo:militaryConflict true ;
       dbo:event true ;
       dbo:societalEvent true .

  # Emperor Go-Yōzei's administration
  ?goYozei rdfs:label ""Emperor Go-Yōzei""@en .
  ?administration dbo:administrator ?goYozei ;
                  dbo:administratedDuring ?war .

  # Matsudaira Tadamasa's father's death place
  ?matsudairaTadamasa rdfs:label ""Matsudaira Tadamasa""@en .
  ?father dbo:child ?matsudairaTadamasa ;
          a dbo:Politician, dbo:OfficeHolder .
  ?father dbo:deathPlace ?deathPlace .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
184,50,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?finalIndividual WHERE {
  # Step 1: Find the child of Archduke Joseph Francis of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Step 2: Find the parent of that child (grandparent)
  ?grandparent dbo:child ?child1 .

  # Step 3: Find the parent of Archduke Ladislaus Philipp of Austria
  ?ladislausParent dbo:child dbr:Archduke_Ladislaus_Philipp_of_Austria .
  
  # Step 4: Find a child of that parent (Ladislaus's sibling or himself)
  OPTIONAL { 
    ?siblingOrSelf dbo:parent ?ladislausParent .
  }
  
  # Step 5: Find the child of this sibling/child
  OPTIONAL {
    ?finalChild dbo:parent ?siblingOrSelf .
    
    # Ensure this final individual is royalty
    FILTER EXISTS { ?finalChild rdf:type dbo:RoyalFamilyMember . }
    
    BIND(?finalChild AS ?finalIndividual)
  }
  
  # Link the grandparent from Joseph Francis to the final child of Ladislaus's sibling/child
  OPTIONAL {
    ?grandparent dbo:child ?finalIndividual .
  }
}
```",5,6,6,3,2,3,3,71,0,4,1,0.0,0.0,0
161,49,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?militaryForce ?commander WHERE {
  ?franco dbo:militaryForce ?militaryForce .
  FILTER (CONTAINS(LCASE(?franco), ""francisco franco"")) .

  ?militaryForce rdf:type ?type1, ?type2, ?type3 .
  FILTER (?type1 = dbo:SocietalEvent && 
          ?type2 = dbo:Event &&
          ?type3 = dbo:MilitaryConflict) .

  ?militaryForce dbo:commander ?commander .
  
  ?commander dbo:event ?event .
  FILTER (CONTAINS(LCASE(?commander), ""el director""))
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
547,70,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v3 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace1 ?restingPlace2 ?restingPlace3 WHERE {
  # Resting place of the awardee of the award of Gerald Graham
  OPTIONAL {
    ?award dbo:recipient ?awardee .
    ?award rdfs:label ""Gerald Graham""@en .
    ?awardee dbo:deathPlace ?restingPlace1 .
  }

  # Resting place of the actor in a show with Emily Richard
  OPTIONAL {
    ?show dbo:actor ?actor .
    ?show dbo:starring dbr:Emily_Richard .
    ?actor dbo:deathPlace ?restingPlace2 .
  }
  
  # Resting place of the child of James Burton (property developer)
  OPTIONAL {
    ?james a dbo:PropertyDeveloper ;
           foaf:name ""James Burton""@en .
    ?child dbo:parent ?james ;
           dbo:deathPlace ?restingPlace3 .
  }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
488,53,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceSaito ?conflict ?deathPlaceIeyasu WHERE {
  # Saitō Hajime's birth place
  ?saitoHajime rdfs:label ""Saitō Hajime""@en .
  ?saitoHajime dbo:birthPlace ?birthPlaceSaito .

  # Military conflict involving all three individuals
  ?conflict rdfs:label ?conflictLabel .
  ?conflict dbo:participatedIn [
    a dbo:MilitaryConflict ;
    dbo:participant ?saitoHajime ;
    dbo:participant ?hideyoshi ;
    dbo:participant ?ieyasu
  ] .

  # Toyotomi Hideyoshi's administration period (father of Emperor Go-Mizunoo)
  ?hideyoshi rdfs:label ""Toyotomi Hideyoshi""@en .
  
  # Tokugawa Ieyasu's death place
  ?ieyasu rdfs:label ""Tokugawa Ieyasu""@en .
  ?ieyasu dbo:deathPlace ?deathPlaceIeyasu .

  FILTER (CONTAINS(LCASE(?conflictLabel), ""battle of sekigahara""))
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
754,17,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of Loe Thai.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonParent WHERE {
  # Find Ram Khamhaeng the Great's child
  ?ramKhamhaeng rdfs:label ""Ram Khamhaeng the Great""@en .
  ?ramKhamhaeng dbo:child ?child .

  # Find Loe Thai's parent
  ?loeThai rdfs:label ""Loe Thai""@en .
  ?loeThai dbo:parent ?parentOfLoeThai .

  # Check if there is a common parent for both individuals
  OPTIONAL { ?child dbo:parent ?commonParent . }
  OPTIONAL { ?parentOfLoeThai dbo:parent ?commonParent . }

  FILTER(?commonParent != ?child && ?commonParent != ?parentOfLoeThai)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
55,20,test,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?metallicaMember ?otherBand ?sfsGroup ?gnrMember WHERE {
  # Jason Newsted's band is Metallica
  ?newsted dbo:memberOf ?metallica .
  ?metallica rdfs:label ""Metallica""@en .

  # Find members of Metallica
  ?metallica dbo:bandMember ?metallicaMember .

  # Check if these members are part of other bands
  OPTIONAL {
    ?metallicaMember dbo:memberOf ?otherBand .
  }

  # Check if any of these bands are associated with the San Francisco Symphony
  OPTIONAL {
    ?sfsGroup dbo:associatedBand ?otherBand ;
              rdfs:label ""San Francisco Symphony""@en .
  }

  # Find a member of Guns N' Roses
  OPTIONAL {
    ?gnrMember dbo:memberOf/gn:bandName ""Guns N' Roses""@en .
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
184,56,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commonParent WHERE {
  # Step 1: Find Archduchess Margaret of Austria (born 1925)
  ?margaret rdfs:label ""Margaret, Archduchess of Austria""@en .
  FILTER(YEAR(?margaret dbo:birthday) = 1925) .

  # Step 2: Identify her parent
  ?parent1 dbo:child ?margaret .

  # Step 3: Find the child of that parent (Margaret's sibling)
  ?sibling dbo:parent ?parent1 .
  
  # Step 4: Identify native of Budapest and child of Archduke Joseph August
  ?budaChild dbo:nativePlace <http://dbpedia.org/resource/Budapest> .
  ?budaChild dbo:childOf <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .

  # Step 5: Find the common parent of the sibling and the native of Budapest
  ?commonParent dbo:parent ?sibling ;
                dbo:parent ?budaChild .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,69,test,"Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . ?v7 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?partyLabel WHERE {
  # Michele Pinto's party
  { 
    ?michelePinto rdfs:label ""Michele Pinto""@en .
    ?michelePinto dbo:party ?party .
    ?party rdfs:label ?partyLabel .
  }
  
  UNION
  
  # Father of Lamberto Andreotti's party
  {
    ?lambertoAndreotti rdfs:label ""Lamberto Andreotti""@en .
    ?lambertoAndreotti dbo:father ?father .
    ?father dbo:party ?partyFather .
    ?partyFather rdfs:label ?partyLabel .
  }
  
  UNION
  
  # Romano Prodi's party as an office holder and politician
  {
    ?romanoProdi rdfs:label ""Romano Prodi""@en .
    ?romanoProdi dbo:birthName ?birthName .
    ?romanoProdi dbo:party ?partyProdi .
    ?partyProdi rdfs:label ?partyLabel .
  }
}
```",8,10,9,3,3,3,3,71,0,7,2,0.0,0.0,0
617,41,test,"Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Antiochus III the Great's children
  ?antiochusChild dbo:childOf ?antiochusIII .
  
  # Nysa, wife of Pharnaces I of Pontus
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  
  # Parent of Nysa who is a child of Antiochus III the Great
  ?parent dbo:childOf ?antiochusIII ;
          dbo:spouse ?nysa .

  # This parent must be a royalty and a child of Seleucus II Callinicus
  ?parent dbo:childOf ?seleucusII .
  
  ?seleucusII rdfs:label ""Seleucus II Callinicus""@en .
  
  # Ensure the parent is royalty (e.g., has a title or role)
  OPTIONAL { ?parent dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }

  # Find the spouse of this royal individual
  ?parent dbo:spouse ?spouse .
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
232,42,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?native WHERE {
  # Find Sylvie Bermann's residence
  ?sylvie dbo:residence ?residence .
  
  # Ensure the residence is a settlement and British
  ?residence rdf:type dbo:Settlement ;
             dbo:country ?country .
  FILTER (str(?country) = ""United Kingdom"" || str(?country) = ""England"")

  # Find the native of this residence
  ?native dbo:nativeOf ?residence .

  # Identify John Devon Roland Pertwee's child who acted in Dog Soldiers
  ?pertwee rdfs:label ""John Devon Roland Pertwee""@en .
  ?child dbo:parent ?pertwee ;
         dbo:actor ?film .
  ?film rdfs:label ""Dog Soldiers""@en .

  # Link the native to the child
  FILTER (?native = ?child)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,19,test,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?father WHERE {
  # Step 1: Find Stephen Verona's birthplace
  ?stephenVerona rdfs:label ""Stephen Verona""@en .
  ?stephenVerona dbo:birthPlace ?settlement .

  # Step 2: Find residents of the settlement who are fictional and soap characters
  ?resident dbo:residence ?settlement ;
            a dbo:FictionalCharacter ;
            dbo:genre/dbo:SoapOpera .

  # Step 3: Identify Lizzie Spaulding's parents who are fictional and soap characters
  ?lizzieSpaulding rdfs:label ""Lizzie Spaulding""@en .
  ?parent dbo:child ?lizzieSpaulding ;
          a dbo:FictionalCharacter ;
          dbo:genre/dbo:SoapOpera .

  # Step 4: Find children of these parents who are fictional and soap characters
  ?child dbo:child ?parent ;
         a dbo:FictionalCharacter ;
         dbo:genre/dbo:SoapOpera .

  # Step 5: Identify the father of these children
  ?father dbo:father ?child .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
427,41,test,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherName ?partyOfFather ?ipepDescription ?prodiParty WHERE {
  # Find Lamberto Andreotti's father and his party affiliation
  ?andreotti dbo:father ?father .
  ?father rdfs:label ?fatherName .
  OPTIONAL { ?father dbo:partyAffiliation ?partyOfFather . }
  
  # Reference to the Italian People's Party (1994)
  ?ipep dbo:wikiPageRedirects <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> .
  ?ipep rdfs:label ""Italian People's Party""@en .
  OPTIONAL { ?ipep dbo:description ?ipepDescription . }
  
  # Find Romano Prodi's party affiliation
  ?prodi rdfs:label ""Romano Prodi""@en .
  OPTIONAL { ?prodi dbo:partyAffiliation ?prodiParty . }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,41,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?militaryConflictLargo ?militaryConflictFranco WHERE {
  # Military conflict associated with Francisco Largo Caballero
  ?person rdfs:label ""Francisco Largo Caballero""@en .
  ?person dbo:militaryConflict ?militaryConflictLargo .
  
  # Ensure it is a societal event and military conflict
  ?militaryConflictLargo rdf:type dbo:MilitaryConflict ;
                        rdfs:seeAlso ?societalEvent .

  # Military conflict associated with Francisco Franco
  ?francoPerson rdfs:label ""Francisco Franco""@en .
  ?francoPerson dbo:militaryConflict ?militaryConflictFranco .
  
  # Ensure it is a societal event, an event, and military conflict
  ?militaryConflictFranco rdf:type dbo:MilitaryConflict ;
                          rdfs:seeAlso ?societalEvent ;
                          rdfs:seeAlso ?generalEvent .

  # Additional condition for Francisco Franco's command in the Biscay Campaign
  OPTIONAL {
    ?francoPerson dbo:commander ?biscayCampaign .
    ?biscayCampaign rdfs:label ""Biscay Campaign""@en .
  }
}
```",5,10,6,2,3,3,3,71,0,0,3,0,0.0,0
404,47,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess rdf:type dbo:Person ;
            dbo:spouse ?spouse .

  ?child dbo:parent ?spouse ;
         rdf:type dbo:Person ;
         dbo:parent ?grandParent .

  ?grandChild dbo:parent ?grandParent ;
              rdf:type dbo:Person ;
              dbo:parent ?greatGrandParent .

  ?greatGrandParent rdfs:label ""Prince George William of Hanover""@en .
  
  ?spouse rdf:type dbo:Person .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
959,55,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?manager ?country ?university WHERE {
  # Takashi Sekizuka's team manager
  ?team dbo:player ?sekizuka .
  ?sekizuka rdfs:label ""Takashi Sekizuka""@en .
  ?team dbo:manager ?manager .

  # Yōichi Masuzoe's country of residence
  ?masuzoe dbo:residence ?place .
  ?masuzoe rdfs:label ""Yōichi Masuzoe""@en .
  ?place dbo:country ?country .

  # Eiji Ōtsuka's alma mater in Japan
  ?otsuka dbo:almaMater ?university .
  ?otsuka rdfs:label ""Eiji Ōtsuka""@en .
  ?university rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""japan"") && 
          CONTAINS(LCASE(STR(?university)), ""university""))
}
```",6,11,7,2,3,3,3,71,0,0,2,0,0.0,0
179,17,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  # Step 1: Find Vajiralongkorn's parent (King Mahidol Adulyadej)
  ?vajiralongkorn dbo:childOf ?mahidol .
  
  # Step 2: Find the child of King Mahidol Adulyadej
  ?mahidol dbo:child ?child1 .

  # Step 3: Identify Mom Rajawongse Sirikit Kitiyakara's birth name and find her parent (King Bhumibol Adulyadej)
  ?sirikit foaf:name ""Mom Rajawongse Sirikit Kitiyakara""@en .
  ?sirikit dbo:childOf ?bhumibol .

  # Step 4: Find the child of King Bhumibol Adulyadej
  ?bhumibol dbo:child ?child2 .

  # Step 5: Find the parent of both King Mahidol and King Bhumibol
  ?mahidol dbo:parent ?parent .
  ?bhumibol dbo:parent ?parent .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
303,28,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?arnulfoParty ?commanderParty WHERE {
  # Arnulfo Arias Madrid's party
  ?arnulfo a dbo:Politician ;
           foaf:name ""Arnulfo Arias Madrid"" .
  ?place rdfs:label ""El Valle de Antón""@en .
  ?place dbo:country ?panamaCountry .
  ?panamaCountry rdfs:label ""Panama""@en .
  ?arnulfo dbo:birthPlace ?place .
  OPTIONAL { ?arnulfo dbo:party ?arnulfoParty . }

  # Commander in United States invasion of Panama's party
  ?invasion dbo:name ""United States invasion of Panama"" .
  ?commander a dbo:Politician ;
             dbo:role ?role .
  ?role rdfs:label ""Commander""@en .
  OPTIONAL { ?commander dbo:party ?commanderParty . }
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
659,69,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v7 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  ?regiment dbo:commander ?commander .
  
  OPTIONAL { 
    ?war dbo:eventType ?eventType .
    FILTER (?eventType IN (""Military conflict"", ""Event"")) .
    ?regiment dbo:participatedIn ?war .
  }
  
  OPTIONAL {
    ?force dbo:commander ?schimmelpenninck .
    ?schimmelpenninck rdfs:label ""Rutger Jan Schimmelpenninck""@en .
    
    ?societalEvent dbo:eventType ?eventType2 .
    FILTER (?eventType2 IN (""Societal event"", ""Military conflict"")) .
    ?force dbo:participatedIn ?societalEvent .
  }
  
  OPTIONAL {
    ?officeHolder dbo:nationality <http://dbpedia.org/resource/Kingdom_of_Ireland> ;
                  a dbo:OfficeHolder .
  }
}
```",8,14,9,3,3,3,3,71,0,0,15,0,0.0,0
281,56,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war WHERE {
  ?profession a dbo:MilitaryUnit ;
              a dbo:OfficeHolder ;
              a dbo:Politician .
  
  ?profession dbo:militaryUnitOf ?nzArmy .
  ?nzArmy rdfs:label ""New Zealand Army""@en .

  ?profession dbo:officeHolderIn ?colonyNZ .
  ?colonyNZ rdfs:label ""Colony of New Zealand""@en .

  ?war dbo:involvesMilitaryUnit ?profession ;
       dbo:awardee ?person .

  ?person dbo:award [ a dbo:Award ; 
                      rdfs:label ""Knight Grand Cross of the Order of the Bath""@en ] .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,24,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?child dbo:childOf ?duke .
  ?duke rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  
  OPTIONAL { 
    ?child dbo:royalty true . 
  }
  
  ?child dbo:childOf ?crownPrince .
  ?crownPrince rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .

  ?parent dbo:parentOf ?child .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
492,62,test,"Give me the person decedent at Algiers and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?personDecedentAtAlgiers ?authorOfFrenchAlgeria ?war ?event WHERE {
  # Find the author of ""French Algeria""
  ?work rdfs:label ""French Algeria""@en .
  ?work dbo:author ?authorOfFrenchAlgeria .

  # Find a person who died in Algiers
  ?personDecedentAtAlgiers dbo:deathPlace ?algiers .
  ?algiers rdfs:label ""Algiers""@en .

  # Find the commander of the Battle of Verdun and link to a war/event
  ?battle rdfs:label ""Battle of Verdun""@en .
  ?battle dbo:commander ?commanderInVerdun .
  
  OPTIONAL {
    ?commanderInVerdun dbo:militaryConflict ?war .
    ?commanderInVerdun dbo:event ?event .
  }

  # Ensure the person is both a decedent at Algiers and involved in the identified war/event
  FILTER (?personDecedentAtAlgiers = ?commanderInVerdun)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
391,67,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actor WHERE {
  ?movie a dbo:Film ;
         a dbo:Work ;
         dbo:televisionSeries ?tvShow .
  
  ?actor dbo:profession ""Actor"" ;
         dbo:nativePlace ?compton ;
         dbo:claimToFame ?work .

  ?compton rdfs:label ""Compton, California""@en .

  ?spouse dbo:spouse <http://dbpedia.org/resource/Sherry_Hormann> .
  
  ?work dbo:actor ?actor ;
        dbo:spouse ?spouse .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
547,51,test,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actorRestingPlace ?awardeeRestingPlace WHERE {
  # Part 1: Resting place of the actor of ""Enemy at the Door""
  ?film dbo:title ""Enemy at the Door""@en .
  ?film dbo:actor ?actor .
  OPTIONAL { ?actor dbo:restingPlace ?actorRestingPlace . }

  # Part 2: Resting place of the awardee of an award named after Gerald Graham
  ?award rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""gerald graham""))
  ?awardRecipient dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:restingPlace ?awardeeRestingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
820,20,test,Give me the child of the parent of the professional in Actor and professional in the award of the author of Understanding Comics.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  # Step 1: Find the author of ""Understanding Comics""
  ?author dbo:work ?understandingComics .
  ?understandingComics rdfs:label ""Understanding Comics""@en .

  # Step 2: Identify awards related to this author's profession as an actor
  OPTIONAL { 
    ?author dbo:profession dbr:Actor .
    ?award dbo:recipient ?author .
  }

  # Step 3: Find the parent of the professional in Actor (e.g., production company)
  OPTIONAL {
    ?parent dbo:employee ?actorProfession .
    ?actorProfession rdfs:label ""Actor""@en .
  }

  # Step 4: Identify the child of this parent entity
  ?child dbo:parentOrganization ?parent .
}
```",6,6,7,3,2,3,2,20,0,0,128,0,0.0,0
701,54,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Seti I's grandchild
  ?setiChild dbo:child ?grandchild .
  ?seti dbo:child ?setiChild .
  FILTER (str(?seti) = ""http://dbpedia.org/resource/Seti_I"") .

  # Ramesses II's spouse
  ?ramesses dbo:spouse ?spouse .
  FILTER (str(?ramesses) = ""http://dbpedia.org/resource/Ramesses_II"") .

  # Nefertari's child and parent
  ?nefertariChild dbo:child ?parent .
  ?nefertari dbo:child ?nefertariChild .
  FILTER (str(?nefertari) = ""http://dbpedia.org/resource/Nefertari"") .

  # Find common parent
  OPTIONAL { ?grandchild dbo:parent ?commonParent . }
  OPTIONAL { ?spouse dbo:parent ?commonParent . }
  OPTIONAL { ?parent dbo:parent ?commonParent . }

  FILTER (BOUND(?commonParent))
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,63,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchildRestingPlace ?knightRestingPlace ?actorRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  ?williamHaliburton rdfs:label ""William Haliburton""@en .
  ?williamHaliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild dbo:restingPlace ?grandchildRestingPlace .

  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?knight rdfs:label ?name .
  ?knight dbo:honoraryTitle ?title .
  FILTER(CONTAINS(LCASE(STR(?title)), ""knight grand cross of the order of st michael and st george""))
  ?knight dbo:restingPlace ?knightRestingPlace .

  # Resting place of the actor of ""Enemy at the Door""
  ?movie rdfs:label ""Enemy at the Door""@en .
  ?movie dbo:actor ?actor .
  ?actor dbo:restingPlace ?actorRestingPlace
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
659,60,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?schimmelpenninck rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  
  ?event dbo:type ?eventType .
  FILTER (?eventType IN (dbo:MilitaryConflict, dbo:SocietalEvent)) .

  ?force dbo:commander ?commander ;
         dbo:relatedTo ?schimmelpenninck ;
         dbo:country dbr:Kingdom_of_Ireland .

  ?commander a dbo:OfficeHolder .
}
```",6,10,7,3,2,3,3,71,0,0,40,0,0.0,0
783,19,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of Ofori Amponsah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  # Find Ebony Reigns' birth details and roles
  ?ebony a dbo:Artist ;
         rdfs:label ""Ebony Reigns""@en .
  
  OPTIONAL { ?ebony dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?ebony dbo:musicalArtist ?musicalRole . }

  # Find Ofori Amponsah's band member
  ?ofori a dbo:Person ;
         rdfs:label ""Ofori Amponsah""@en .
  
  ?bandMember dbo:bandMemberOf ?ofori .

  # Link the two through their roles as artists and musical artists
  OPTIONAL { ?bandMember a dbo:Artist . }
  OPTIONAL { ?bandMember dbo:musicalArtist ?musicalRole2 . }

  FILTER (?ebony != ?bandMember)
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
232,30,test,"Give me the child of Jon Pertwee and actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?child WHERE {
  # Jon Pertwee's child
  ?jonPertwee rdfs:label ""Jon Pertwee""@en .
  ?jonPertwee dbo:child ?child .

  # Actor of Dog Soldiers
  ?dogSoldiers rdfs:label ""Dog Soldiers""@en .
  ?dogSoldiers dbo:actor ?child .

  # Sylvie Bermann's residence
  ?sylvieBermann rdfs:label ""Sylvie Bermann""@en .
  ?sylvieBermann dbo:nativePlace ?residence .
  
  FILTER (strstarts(str(?residence), str(?child))) # Assuming the child is native of the same place

  # Ensure the residence is a settlement and British
  ?residence rdf:type dbo:PopulatedPlace ;
             dbo:country dbc:United_Kingdom .

}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
492,44,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person WHERE {
  ?person dbo:deathPlace ?place1 .
  ?place1 rdfs:label ""French Algeria""@en .

  ?person dbo:deathPlace ?place2 .
  ?place2 rdfs:label ""Algiers""@en .
  ?place2 a dbo:Settlement .

  ?war dbo:militaryCommander ?person ;
       dbo:participantFrédéric-GeorgesHerr true .
  ?war a dbo:MilitaryConflict .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
767,59,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  # George Kilbon Nash's alma mater
  ?nash rdfs:label ""George Kilbon Nash""@en .
  ?nash dbo:almaMater ?almaMater .

  OPTIONAL {
    # Writer of the song ""Where It's At""
    ?song dbo:title ""Where It's At""@en ;
          dbo:lyricsBy ?writer .
    
    # Settlement related to the writer
    ?writer dbo:settlement ?settlement .
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,71,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Find the actor of ""Unnatural""
  ?unnatural dbo:actor ?actor .
  ?unnatural rdfs:label ""Unnatural (TV series)""@en .

  # Get the profession of that actor
  ?actor rdf:type ?professionType .
  
  # Ted McGinley's birth name and spouse
  ?ted foaf:name ""Edward Joseph McGinley""@en .
  OPTIONAL { ?ted dbo:spouse ?tedSpouse . }

  # Alumnus of Ohio State University and their spouse
  ?alumnus dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> .
  OPTIONAL { ?alumnus dbo:spouse ?alumniSpouse . }
  
  # Find the professional in the same profession as the actor
  ?professional rdf:type ?professionType .
}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
285,19,test,Give me the spouse of the professional in the award of Stan Lee and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?stanLee rdfs:label ""Stan Lee""@en .
  ?award dbo:recipient ?professional .
  ?stanLee dbo:awardedBy ?award .

  ?tinaOnassisNiarchos rdfs:label ""Tina Onassis Niarchos""@en .
  ?child dbo:parent ?tinaOnassisNiarchos ;
         dbo:parent ?spouse .

  ?professional dbo:spouse ?spouse .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
391,64,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?nativePlace WHERE {
  ?actor rdfs:label ""Jack Nicholson""@en .
  ?actor dbo:birthPlace ?nativePlace .
  ?actor dbo:film ?departed .
  ?departed rdfs:label ""The Departed""@en .
  
  OPTIONAL { 
    ?actor dbo:work ?otherWork .
    ?otherWork rdf:type/rdfs:subClassOf* dbo:Film ;
              rdf:type/rdfs:subClassOf* dbo:TelevisionSeries .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
528,45,test,Give me the war of Orozimbo Barbosa and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?warOrozimbo ?warIrene ?forceNarciso WHERE {
  # Wars of Orozimbo Barbosa
  ?personOr ozimbo dbo:wikiPageDisambiguates ?disambiguation .
  ?disambiguation rdfs:label ?warOrozimbo .
  FILTER(CONTAINS(LCASE(?warOrozimbo), ""war"")) .
  
  # Wars of Irene Morales
  ?personIrene dbo:wikiPageDisambiguates ?disambiguation2 .
  ?disambiguation2 rdfs:label ?warIrene .
  FILTER(CONTAINS(LCASE(?warIrene), ""war"")) .

  # Force of Narciso Campero
  ?narciso dbo:birthName ""Narciso Campero"" .
  OPTIONAL {
    ?narciso dbo:militaryService ?military .
    ?military rdfs:label ?forceNarciso .
  }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
251,25,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war ?organization ?deathPlace WHERE {
  # Part for Louis François Félix Musnier's war involvement
  ?person rdfs:label ""Louis François Félix Musnier""@en .
  ?person dbo:participatedIn ?war .

  # Part for the ruling party's administration in Sicily
  ?party rdfs:label ?organizationLabel .
  ?party a dbo:PoliticalParty ;
         dbo:location ?location .
  ?location rdfs:label ""Sicily""@en .

  # Part for Laura Mancinelli's death place
  ?individual rdfs:label ""Laura Mancinelli""@en .
  ?individual dbo:deathPlace ?deathPlace .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,49,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?militaryUnit ?award WHERE {
  ?person dbo:officeHolder true .
  ?person dbo:politician true .
  ?person dbo:militaryUnit ?militaryUnit .
  ?militaryUnit rdf:type dbo:MilitaryUnit .
  ?militaryUnit dbo:country <http://dbpedia.org/resource/New_Zealand> .
  
  OPTIONAL {
    ?person dbo:award ?award .
    FILTER (str(?award) = ""Knight Grand Cross of the Order of the Bath"")
  }
}
```",5,8,6,3,2,3,3,71,0,0,9,0,0.0,0
9,62,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Queen's University Belfast as the organization in Belfast
  dbr:Queen's_University_Belfast dbo:location dbr:Belfast .
  
  # Mayor of Queen's University Belfast (assuming a politician role)
  ?mayor dbo:position ""Mayor""@en ;
         dbo:almaMater ?almaMater .

  # Awardee of the Royal Medals
  ?awardee dbo:awardReceived dbr:Royal_Medals ;
           dbo:almaMater ?almaMater .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
994,51,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Step 1: Identify Don Dokken as a musical artist
  ?dokken dbo:musicalArtist ?persona .
  ?persona rdfs:label ""Don Dokken""@en .

  # Step 2: Find band members of Don Dokken
  ?bandMember dbo:bandMember ?dokken .

  # Step 3: Identify Meshuggah's band members
  ?meshuggahBand a dbo:Band ;
                 rdfs:label ""Meshuggah""@en .
  
  ?meshuggahMember dbo:bandMember ?meshuggahBand .

  # Step 4: Find associated musical artists for the band member of Don Dokken
  OPTIONAL {
    ?bandMember dbo:associatedBand ?associatedArtist .
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
528,56,test,Give me the war of Orozimbo Barbosa and war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?warOfBarbosa ?battleOfPisagua ?forceOfCampero WHERE {
  ?person rdfs:label ""Orozimbo Barbosa""@en .
  ?person dbo:participatedIn ?warOfBarbosa .

  ?battle rdfs:label ""Battle of Pisagua""@en .
  ?battle dbo:militaryForce ?battleOfPisagua .

  ?campero rdfs:label ""Narciso Campero""@en .
  ?campero dbo:birthPlace ?place .
  ?force dbo:country ?place .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
55,24,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  # Find members of San Francisco Symphony who are also bands/groups
  ?symphonyMember dbo:memberOf <http://dbpedia.org/resource/San_Francisco_Symphony> .
  ?symphonyMember rdf:type dbo:Band ;
                  rdf:type dbo:Group .

  # Find band associated with Newsted that is both a band and a group
  ?newstedBand dbo:bandMember <http://dbpedia.org/resource/Lars_Åhlund> ; # Assuming Lars Ulrich as a reference point for Metallica
              rdf:type dbo:Band ;
              rdf:type dbo:Group .

  # Find intersection or connection between the two sets
  ?bandMember = ?symphonyMember .
  ?bandMember = ?newstedBand .
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
16,70,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?professional WHERE {
  ?tvSeries rdfs:label ""Unnatural (TV series)""@en .
  ?actor dbo:actedIn ?tvSeries ;
         dbo:profession ?profession .
  
  ?ted rdfs:label ""Ted Martin McGinley""@en .
  ?ted dbo:spouse ?spouse .

  ?alumnus dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> ;
           dbo:birthName ?birthName .

  FILTER (?profession = ?spouse && ?spouse = ?alumnus)
  
  BIND(?actor AS ?professional)
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
404,68,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Princess Victoria Louise of Prussia's birth name
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:birthName ?birthName .

  # Ernest Augustus, Duke of Brunswick's father
  ?ernestAugustus rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?father dbo:child ?ernestAugustus .
  
  # Linking Princess Victoria Louise to Ernest Augustus' father
  ?princess dbo:parent ?father .

  # Prince George William of Hanover's child and parent
  ?georgeWilliam rdfs:label ""Prince George William of Hanover""@en .
  ?child dbo:parent ?georgeWilliam .
  ?parent dbo:child ?child .

  # Linking the person to be found
  ?person dbo:birthName ?birthName .
  ?person dbo:parent ?father .
  ?person dbo:child ?parent .

  # Finding the spouse of the identified person
  ?person dbo:spouse ?spouse .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,62,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfNysa ?royalChildOfParent ?successorAntiochusII ?childOfSuccessorChild ?spouseOfChild
WHERE {
  # Step 1: Identify Nysa and her parent
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  ?parentOfNysa dbo:child ?nysa .

  # Step 2: Find a royal child of Nysa's parent
  OPTIONAL { ?royalChildOfParent dbo:child ?parentOfNysa . 
             FILTER EXISTS { ?royalChildOfParent dbo:role ""Royal""@en } }

  # Step 3: Identify the successor of Antiochus II Theos who is royalty
  ?antiochusII rdfs:label ""Antiochus II Theos""@en .
  OPTIONAL { ?successorAntiochusII dbo:succeededBy ?antiochusII . 
             FILTER EXISTS { ?successorAntiochusII dbo:role ""Royal""@en } }

  # Step 4: Find a child of the successor's child who is royalty
  OPTIONAL { ?childOfSuccessorChild dbo:child ?successorAntiochusII .
             FILTER EXISTS { ?childOfSuccessorChild dbo:role ""Royal""@en } }

  # Step 5: Identify the spouse of this royal individual
  OPTIONAL { ?spouseOfChild dbo:spouse ?childOfSuccessorChild . 
             FILTER EXISTS { ?spouseOfChild dbo:role ""Royal""@en } }
}
```",7,10,8,3,3,3,3,71,2,0,0,1.0,1.0,1.0
659,18,test,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryForce ?battleCommander ?campaignCommander WHERE {
  # Napoleon's military force in the Napoleonic Wars
  ?napoleon dbo:militaryConflict ?conflict .
  FILTER(CONTAINS(LCASE(STR(?conflict)), ""napoleonic wars""))
  ?conflict dbo:participatingMilitaryUnit ?militaryForce .

  # Commander in Battle of Leipzig
  ?battle rdfs:label ""Battle of Leipzig""@en .
  ?battle dbo:commander ?battleCommander .
  FILTER(CONTAINS(LCASE(STR(?battleCommander)), ""napoleon""))

  # Commander in German campaign of 1813
  ?campaign rdfs:label ""German campaign of 1813""@en .
  ?campaign dbo:commander ?campaignCommander .
  FILTER(CONTAINS(LCASE(STR(?campaignCommander)), ""napoleon""))
}
```",3,3,4,1,3,3,3,71,0,0,5,0,0.0,0
391,69,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  ?work dbo:filmDirector ?director .
  ?director rdfs:label ""Michael Ballhaus""@en .
  
  ?work dbo:starring ?actor .
  
  OPTIONAL { 
    ?actor dbo:nativePlace ?place .
    ?place rdfs:label ?nickname .
    FILTER regex(?nickname, ""Jackson, Tennessee"", ""i"")
  }
  
  OPTIONAL {
    ?work rdf:type/rdfs:subClassOf* dbo:Film .
    ?work rdf:type/rdfs:subClassOf* dbo:TelevisionShow .
  }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
959,60,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?managerName ?almaMater WHERE {
  ?team dbo:sportTeam ""Kashima Antlers""@en .
  ?team dbo:season ""1998""^^xsd:gYear .
  ?team dbo:manager ?manager .

  ?manager foaf:name ?managerName ;
           dbo:sportManager true ;
           dbo:birthDate ?birthDate ;
           dbo:nationality ?nationality .

  FILTER (YEAR(?birthDate) = 1958 && STRLANG(LANG(?nationality), ""ja"")).

  OPTIONAL {
    ?manager dbo:almaMater ?university .
    ?university rdfs:label ?almaMaterLabel ;
               dbo:country dbc:Japan ;
               a dbo:EducationalOrganization, dbo:University .
  }
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
281,38,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country ?militaryUnit WHERE {
  # Bob Heffron's birth place country
  ?bob a dbo:Person ;
       foaf:name ""Bob Heffron""@en .
  OPTIONAL {
    ?bob dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:Country ;
               rdfs:label ?country .
  }

  # Heather Roy's profession war (military unit)
  ?heather a dbo:Person ;
           foaf:name ""Heather Roy""@en .
  OPTIONAL {
    ?heather dbo:profession ?profession .
    ?profession dbo:militaryUnit ?militaryUnit .
  }
}
```",4,6,5,2,2,3,3,71,0,1,1,0.0,0.0,0
404,46,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?child dbo:childOf ?ernestAugustus .
  ?ernestAugustus rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .

  FILTER EXISTS { ?child a dbo:RoyalFamilyMember } .

  ?spouse dbo:spouse ?child .
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:birthName ?birthName .
  ?spouse dbo:birthName ?birthName .

  FILTER EXISTS { ?spouse a dbo:RoyalFamilyMember } .

  ?parent dbo:childOf ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,45,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of Japan and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?manager WHERE {
  ?season rdfs:label ""1998 Kashima Antlers season""@en .
  ?season dbo:teamManager ?manager .
  ?manager a dbo:SportsManager .
  ?manager dbo:nationality ?nationality .
  FILTER (CONTAINS(LCASE(?nationality), ""japan"")).
  ?manager dbo:almaMater ?university .
  ?university rdfs:label ""University of Tsukuba""@en .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
378,40,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Query for Louis des Balbes de Berton de Crillon, 1st Duke of Mahón's claim to fame
SELECT ?claimToFame WHERE {
  ?person rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  ?person dbo:knownFor ?claimToFame .
}

UNION

# Query for Joaquín Blake's wars
SELECT ?war WHERE {
  ?person rdfs:label ""Joaquín Blake""@en .
  ?person dbo:participatedIn ?war .
}

UNION

# Query for Carl Pontus Gahn's birth name
SELECT ?birthName WHERE {
  ?person foaf:name ?birthName .
  ?person rdfs:label ""Carl Pontus Gahn""@en .
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
701,62,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalParent WHERE {
  # Step 1: Find Amun-her-khepeshef's spouse
  ?amunHerKhepeshef dbo:spouse ?spouseAmun .

  # Step 2: Find the child of this spouse
  ?spouseAmun dbo:child ?childSpouseAmun .

  # Step 3: Identify the parent of that child (which should be Ramesses II's spouse)
  ?parentChildSpouseAmun dbo:child ?childSpouseAmun .
  
  # Step 4: Find Ramesses II and his spouse
  ?ramessesII rdfs:label ""Ramesses II""@en .
  ?ramessesII dbo:spouse ?spouseRamesses .

  # Ensure the parent from step 3 is the same as Ramesses II's spouse
  FILTER (?parentChildSpouseAmun = ?spouseRamesses)

  # Step 5: Find the child of Ramesses II's spouse
  ?spouseRamesses dbo:child ?childSpouseRamesses .

  # Step 6: Identify Seti I and his child, then that child's child (grandchild)
  ?setiI rdfs:label ""Seti I""@en .
  ?setiI dbo:child ?childSeti .
  ?childSeti dbo:child ?grandChildSeti .

  # Step 7: Find the parent of this grandchild
  ?finalParent dbo:child ?grandChildSeti .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
801,67,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?professional ?producer ?writer WHERE {
  ?album rdfs:label ""What U See Is What U Get""@en .
  ?album a dbo:Album ;
         dbo:musicalArtist ?artist ;
         dbo:producer ?producer .

  ?artist a dbo:MusicalArtist, dbo:Rapper ;
          rdfs:label ?professionalLabel .
  FILTER (lang(?professionalLabel) = ""en"")
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?professionalLabel), "" "", ""_""))) AS ?professional)

  OPTIONAL {
    ?writer a dbo:MusicalArtist, dbo:Artist ;
            dbo:associatedMusicalArtist ?artist .
    ?writer rdfs:label ?writerLabel .
    FILTER (lang(?writerLabel) = ""en"")
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?writerLabel), "" "", ""_""))) AS ?writer)
  }
}
```",7,15,8,3,3,3,3,71,0,0,8,0,0.0,0
747,47,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Find a song written by Amba Shepherd
  ?song dbo:author dbr:Amba_Shepherd .
  
  # Get the band associated with this song
  ?song dbo:performer ?band .

  # Find Pavlo Khudzik's birth date
  dbr:Pavlo_Khudzik dbo:birthDate ?birthDate .

  # Find another person born on the same date as Pavlo Khudzik
  ?person dbo:birthDate ?birthDate .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
77,20,test,"Give me the war of the awardee of the award of Maxim Grigorievich Vlasov and force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war ?award ?organization WHERE {
  # Find Maxim Grigorievich Vlasov's award and the associated war
  ?person rdfs:label ""Maxim Grigorievich Vlasov""@en .
  ?person dbo:award ?award .
  ?award dbo:war ?war .

  # Find Warsaw's mayor and their organization
  ?city rdfs:label ""Warsaw""@en .
  ?mayor dbo:position ?position .
  ?position dbo:officeHolder ?mayor .
  ?mayor dbo:memberOf ?organization .
}
```",6,7,7,3,2,3,2,20,0,0,26,0,0.0,0
994,46,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?meshuggahArtist ?watchtowerArtist WHERE {
  # Find Meshuggah members
  ?meshuggahMember dbo:bandMember ?meshuggahBand .
  FILTER (str(?meshuggahBand) = ""Meshuggah"")

  # Find associated bands/groups for each member
  OPTIONAL { 
    ?meshuggahMember dbo:associatedBand ?otherBand .
    ?otherBand dbo:musicalArtist ?meshuggahArtist .
  }

  # Find Watchtower and its associated artist
  ?watchtowerBand dbp:name ""Watchtower"" .
  ?watchtowerBand dbo:musicalArtist ?watchtowerArtist .

  # Find the associated musical artist of Watchtower's reference
  OPTIONAL {
    ?watchtowerArtist dbo:associatedBand ?relatedBand .
    ?relatedBand dbo:musicalArtist ?relatedArtist .
  }
}
```",5,8,6,3,2,3,3,71,0,0,5,0,0.0,0
492,45,test,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander WHERE {
  # Find the commander in Franco-Hova Wars
  ?war rdfs:label ""Franco-Hova Wars""@en .
  ?war dbo:commander ?commander .

  # Identify the capital of Khemis Miliana District
  ?district rdfs:label ""Khemis Miliana District""@en .
  ?district dbo:capital ?capital .
  
  # Ensure the capital is a settlement
  ?capital rdf:type dbo:Settlement .

  # Find person decedent at the capital
  ?commander dbo:deathPlace ?capital .

  # Person decedent at French Algeria
  OPTIONAL {
    ?commander dbo:deathPlace ?algeria .
    ?algeria rdfs:label ""French Algeria""@en .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,61,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonIndividual WHERE {
  # Find Archduke Ladislaus Philipp's parent
  ?ladislausParent dbo:child ?ladislaus .
  ?ladislaus rdfs:label ""Archduke Ladislaus Philipp of Austria""@en .

  # Find the sibling (child of the same parent)
  ?siblingLadislaus dbo:parent ?ladislausParent .
  ?siblingLadislaus dbo:royaltyTitle ?titleLadislaus .
  
  # Ensure this sibling has children
  ?siblingChildLadislaus dbo:parent ?siblingLadislaus .

  # Find Archduchess Margaret's parent
  ?margaretParent dbo:child ?margaret .
  ?margaret rdfs:label ""Archduchess Margaret of Austria""@en ;
            dbo:birthday ?birthdayMARGARET .
  FILTER (YEAR(?birthdayMARGARET) = 1925)

  # Find the sibling (child of the same parent)
  ?siblingMargaret dbo:parent ?margaretParent .
  ?siblingMargaret dbo:royaltyTitle ?titleMargaret .

  # Ensure this sibling has children
  ?siblingChildMargaret dbo:parent ?siblingMargaret .

  # Find common individual who is a royalty and has children in both branches
  VALUES ?commonIndividual { ?siblingLadislaus ?siblingMargaret }
  
  FILTER EXISTS {
    ?commonIndividual dbo:royaltyTitle ?title .
    ?childCommon dbo:parent ?commonIndividual .
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,49,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alumnusBirthName WHERE {
  ?ted a dbo:Person ;
      foaf:name ""Ted Martin McGinley""@en .
  
  ?spouse dbo:spouse ?ted .

  ?alumnus dbo:alumni <http://dbpedia.org/resource/Oakland_College> ;
           dbo:spouse ?spouse ;
           rdfs:label ?alumnusBirthName .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,65,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  ?gigi a dbo:Person ;
        rdfs:label ""Gigi Rice""@en .
  ?gigi dbo:birthName ?birthName .

  # Find Ted Martin McGinley and his spouse
  ?ted a dbo:Person ;
       rdfs:label ""Ted Martin McGinley""@en .
  ?ted dbo:spouse ?spouse .

  # Find the actor from the TV series ""Unnatural""
  ?unnaturalSeries dbo:title ""Unnatural"" ;
                   dbo:actor ?actor .
  ?actor rdf:type dbo:Actor .

  # Match person with all criteria
  ?person rdfs:label ?birthName ;
          dbo:spouse ?ted ;
          rdf:type dbo:Actor .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
16,60,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?alumnus dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> .
  ?alumnus foaf:name ?birthNameAlumnus .

  ?tedMcGinley foaf:name ""Ted McGinley""@en .
  ?tedMcGinley dbo:spouse ?spouse .
  ?spouse foaf:name ?birthNameSpouse .

  FILTER(?birthNameAlumnus = ?birthNameSpouse)
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
547,60,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardeeBurialPlace ?descendantBurialPlace WHERE {
  # Part 1: Resting place of the awardee of Gerald Graham's award
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Gerald Graham""@en .
  OPTIONAL { ?awardee dbo:burialPlace ?awardeeBurialPlace . }

  # Part 2: Resting place of the child of the child of William Haliburton
  ?williamHaliburton rdfs:label ""William Haliburton""@en .
  ?williamHaliburton dbo:child ?firstChild .
  OPTIONAL { 
    ?firstChild dbo:child ?secondChild .
    OPTIONAL { ?secondChild dbo:burialPlace ?descendantBurialPlace . }
  }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
659,49,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?militaryConflict ?socialEvent WHERE {
  ?wellesley rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  OPTIONAL { 
    ?force dbo:commander ?commander .
    ?force dbo:leader ?wellesley .
  }
  
  ?schimmelpenninck rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  OPTIONAL {
    ?conflict dbo:militaryConflict ?militaryConflict ;
              dbo:relatedPerson ?schimmelpenninck .
  }
  OPTIONAL {
    ?event dbo:socialEvent ?socialEvent ;
           dbo:relatedPerson ?schimmelpenninck .
  }
}
```",5,8,6,3,2,3,3,71,0,0,38,0,0.0,0
547,67,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?restingPlace WHERE {
  # Resting place of James Burton (Egyptologist)
  { 
    ?person rdfs:label ""James Burton (Egyptologist)""@en .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Resting place of the awardee of Gerald Graham's award
  {
    ?awardRecipient dbo:recipient ?awardedPerson .
    ?awardedPerson rdfs:label ""Gerald Graham""@en .
    OPTIONAL { ?awardRecipient dbo:recipient ?person . }
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Resting place of the actor in a show with Emily Richard
  {
    ?show dbo:starring ?actor .
    ?show rdfs:label ?showLabel .
    FILTER(CONTAINS(LCASE(?showLabel), ""emily's reasons why not""))
    OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
  }
}
```",7,7,8,3,3,3,3,71,0,1,1,0.0,0.0,0
994,62,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find a band member or associated artist of Watchtower
  ?watchtowerMember dbo:bandMember ?watchtower .
  ?watchtower rdfs:label ""Watchtower""@en .

  # Step 2: Find an associated musical artist of the person from step 1 who is also a band member of Don Dokken
  ?associatedArtist dbo:associatedBand ?watchtowerMember .
  ?donDokkenMember dbo:bandMember ?donDokken .
  ?donDokken rdfs:label ""Don Dokken""@en .
  FILTER(?associatedArtist = ?donDokkenMember)

  # Step 3: Find the band and group that this person belongs to, which is also an organization
  ?organization dbo:bandMember ?associatedArtist .
  ?organization a dbo:Band ;
                a dbo:Organization .

  # Step 4: Find the associated musical artist of a band member from the organization related to Fredrik Thordendal
  ?fredrikThordendalMember dbo:bandMember ?fredrikThordendal .
  ?fredrikThordendal rdfs:label ""Fredrik Thordendal""@en .
  FILTER(?organization = ?fredrikThordendal)

  ?finalArtist dbo:associatedBand ?fredrikThordendalMember .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,71,test,"Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:commanderInForce ?force .
  ?force rdfs:label ""Budapest""@en .

  ?person dbo:award ?award .
  ?award rdfs:label ""Commander in the Volcano and Ryukyu Islands campaign""@en .

  ?office dbo:leader ?person ;
          a dbo:GovernmentAgency .

  ?gustav foaf:name ""Gustav Jonson"" .
  ?gustav dbo:leaderOf ?office .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
391,66,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:work ?work ;
         dbo:televisionShow ?tvShow .
  
  ?work dbo:claimToFame ?ballhausWork .
  ?ballhausWork dbo:professional Michael_Ballhaus .

  ?actor dbo:actorOf ?movie .
  ?actor dbo:nativePlace ?hubCity .

  ?hubCity rdfs:label ""Hub City""@en .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
801,69,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?producer WHERE {
  ?album rdfs:label ""What U See Is What U Get""@en .
  ?song dbo:album ?album ;
        a dbo:Songs .
  ?work dbo:artist ?artist ;
        dbo:producer ?producer .
  FILTER(?work = ?song)
  
  OPTIONAL { 
    ?artist rdfs:label ""50 Cent""@en .
  }
  
  OPTIONAL {
    ?artist rdfs:label ""The Shadow""@en .
  }

  OPTIONAL {
    ?producer dbo:associatedMusicalArtist ?artist .
  }
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
488,21,test,Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration WHERE {
  ?emperor rdfs:label ""Emperor Go-Yōzei""@en .
  ?emperor dbo:reign ?administration .
}

UNION

SELECT ?birthPlace WHERE {
  ?commander rdfs:label ?label .
  FILTER (
    CONTAINS(LCASE(?label), ""saigo takamori"") ||
    CONTAINS(LCASE(?label), ""okubo toshimichi"")
  )
  ?commander dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
429,9,test,"Give me the country of the military force, that is an organisation, of Camden Expedition and administration of the father of Martha Johnson Patterson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryCountry ?fatherCountry WHERE {
  # Part 1: Military force of the Camden Expedition
  ?expedition rdfs:label ""Camden Expedition""@en .
  ?expedition dbo:militaryForce ?militaryForce .
  ?militaryForce dbo:country ?militaryCountry .

  # Part 2: Father of Martha Johnson Patterson and his administration's country
  ?martha rdfs:label ""Martha Johnson Patterson""@en .
  ?martha dbo:father ?father .
  ?administration dbo:administrator ?father ;
                  dbo:country ?fatherCountry .
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
427,53,test,"Give me the reference to the name of the party of Michele Pinto and party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?partyPintoLabel ?partyAndreottiLabel ?partyProdiLabel WHERE {
  ?pinto dbo:party ?partyPinto .
  ?partyPinto rdfs:label ?partyPintoLabel .

  ?andreotti dbo:party ?partyAndreotti .
  ?partyAndreotti rdfs:label ?partyAndreottiLabel .

  ?prodi dbo:party ?partyProdi .
  ?partyProdi rdfs:label ?partyProdiLabel .

  ?pinto rdfs:label ""Michele Pinto""@en .
  ?andreotti rdfs:label ""Giulio Andreotti""@en .
  ?prodi rdfs:label ""Romano Antonio Prodi""@en .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
285,17,test,Give me the spouse of the professional in the award of Stan Lee and parent of Alexander Onassis.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Aristotle Onassis""@en .
  ?person dbo:child ?child .
  ?child rdfs:label ""Alexander Onassis""@en .
  ?person dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,2,20,1,1,1,0.5,0.5,0.5
232,67,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Identify Jon Pertwee's child who is a politician and office holder in France
SELECT ?child WHERE {
  ?jonPertwee dbo:spouse ?partner .
  ?jonPertwee foaf:name ""Jon Pertwee""@en .
  ?jonPertwee dbo:child ?child .
  ?child dbo:nationality dbr:France ;
         dbo:occupation dbr/Politician ;
         dbo:officeHolder true .
}

# Step 2: Determine the residence of this French politician
SELECT ?residence WHERE {
  ?child dbo:residence ?residence .
  ?residence dbo:country dbr:United_Kingdom ;
             a dbo:Settlement .
}

# Step 3: Find someone native to that British settlement who is an actor, narrator, and producer
SELECT ?actor WHERE {
  ?actor dbo:nativePlace ?residence ;
         dbo:occupation dbr/Actor ;
         dbo:occupation dbr/Narrator ;
         dbo:occupation dbr/Producer .
}

# Step 4: Determine the film and military conflict associated with this person's claim to fame
SELECT ?film ?conflict WHERE {
  ?actor dbo:film ?film ;
         dbo:militaryConflict ?conflict .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
281,67,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?country WHERE {
  ?electionEvent dbo:eventType dbr:New_South_Wales_state_election,_1962 .
  ?leader dbo:officeHolderOf ?electionEvent ;
          a dbo:Politician .
  ?birthPlace dbo:birthPlace ?leader ;
              a dbo:Country .
  BIND(?birthPlace AS ?country)
  
  OPTIONAL {
    ?beauchampSeymour dbo:profession dbr:Military_unit ;
                      dbo:militaryUnitOf dbr:New_Zealand_Army .
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
487,16,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of Patricia McCoy.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration ?country 
WHERE {
  # Part 1: Administration of Philip Brian Scott
  ?person rdfs:label ""Philip Brian Scott""@en .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:administrativeUnit ?administration .

  OPTIONAL {
    # Part 2: Country of the administration of Patricia McCoy
    ?patricia rdfs:label ""Patricia McCoy""@en .
    ?patricia dbo:administrativeUnit ?adminUnit .
    ?adminUnit dbo:country ?country .
  }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
232,50,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?nativeCountry WHERE {
  # Sylvie Bermann's residence
  ?residence dbo:resident Sylvie_Bermann ;
             a dbo:Settlement ;
             dbo:nativeCountry ?country .
  
  # Ensure the settlement is British
  FILTER(?country = dbpedia:United_Kingdom)

  # Actor known for a film related to a military conflict
  ?actor dbo:film ?film .
  ?film dbo:militaryConflict ?conflict .

  # Link the actor's residence to the settlement
  ?actor dbo:residence ?residence .

  # Retrieve the native country of the settlement
  ?residence dbo:nativeCountry ?nativeCountry .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
281,71,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v8 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?jonathonBandWar ?electionLeaderBirthCountry ?electionLeaderWar ?nzArmyProfession ?nzArmyWar WHERE {
  # Jonathon Band's award and associated war
  ?jonathonBand dbo:award ?award .
  ?award dbo:war ?jonathonBandWar .

  # Leader of the 1962 New South Wales state election, their birthplace (a country), and associated war
  ?electionLeader dbo:electedDuring ?election .
  ?election rdfs:label ""1962 New South Wales state election""@en .
  ?electionLeader dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
  ?electionLeader dbo:war ?electionLeaderWar .

  # Professional in the New Zealand Army, their profession as a military unit, and associated war
  ?nzProfessional dbo:officeHolder true .
  ?nzProfessional dbo:politician true .
  ?nzProfessional dbo:militaryUnit ?profession .
  ?profession a dbo:MilitaryUnit .
  ?nzProfessional dbo:war ?nzArmyWar .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
30,9,test,Give me the professional in the profession of Édouard Alphonse James de Rothschild and native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?edouard rdfs:label ""Édouard Alphonse James de Rothschild""@en .
  ?edouard dbo:profession ?profession .

  ?silvia rdfs:label ""Silvia Cohen""@en .
  ?silvia dbo:birthPlace ?birthplace .

  ?person dbo:profession ?profession .
  ?person dbo:birthPlace ?birthplace .
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
528,58,test,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?commander ?birthNameIrene ?forceNarciso WHERE {
  # Part 1: Battle of La Rinconada de Ate
  OPTIONAL {
    ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
    ?battle dbo:commander ?commander .
    ?battle dbo:partOfWar ?war .
  }

  # Part 2: Irene Morales and Narciso Campero
  OPTIONAL {
    ?person rdfs:label ""Irene Morales""@en .
    ?person dbo:birthName ?birthNameIrene .
  }
  
  OPTIONAL {
    ?narciso rdfs:label ""Narciso Campero""@en .
    ?narciso dbo:birthName ?birthNameNarciso .
    ?narciso dbo:force ?forceNarciso .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
617,45,test,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Step 1: Find Laodice IV's spouse
  ?laodiceIV rdfs:label ""Laodice IV""@en .
  ?laodiceIV dbo:spouse ?spouse .

  # Step 2: Ensure the spouse is a child of Antiochus III the Great
  ?antiochusIII rdfs:label ""Antiochus III the Great""@en .
  ?antiochusIII dbo:child ?spouse .

  # Step 3: Identify the commander in Battle of Panium and their child
  ?battleOfPanium rdfs:label ""Battle of Panium""@en .
  ?commander dbo:participatedIn ?battleOfPanium .
  ?commander dbo:child ?child .

  # Ensure the spouse is also a parent of this child
  ?spouse dbo:parent ?child .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,59,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 WHERE {
  # Find Indalecio Prieto's predecessor and the military force of relevant events
  ?prieto dbo:predecessor ?predecessor .
  ?event1 rdfs:label ?label1 ;
          a dbo:SocietalEvent, dbo:MilitaryConflict ;
          dbo:militaryForce ?militaryForce1 .
  ?predecessor dbo:involvedIn ?event1 .

  # Find the person decedent at Francoist Spain and the military force of relevant events
  ?francoistSpain dbo:decedentAt ?personDecedent .
  ?event2 rdfs:label ?label2 ;
          a dbo:SocietalEvent, dbo:Event, dbo:MilitaryConflict ;
          dbo:militaryForce ?militaryForce2 .
  ?personDecedent dbo:involvedIn ?event2 .

  # Filter to ensure events are in English
  FILTER (lang(?label1) = ""en"" && lang(?label2) = ""en"")
}
```",6,11,7,3,2,3,3,71,0,0,514,0,0.0,0
801,70,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedMusicalArtist WHERE {
  ?album rdfs:label ""What U See Is What U Get""@en .
  ?album a dbo:Album ;
         dbo:producer ?producer .

  ?rapper dbo:profession dbo:Rapper ;
          rdfs:label ?alterEgoLabel .
  
  FILTER(CONTAINS(LCASE(?alterEgoLabel), ""the shadow""))

  ?work dbo:producer ?rapper ;
        a (dbo:MusicalWork|dbo:Song) .

  ?writer dbo:writerOf ?work ;
          a dbo:MusicalArtist, dbo:Artist .

  ?associatedMusicalArtist rdfs:label ?writerLabel .
}
```",8,16,9,3,3,3,3,71,0,0,8,0,0.0,0
981,20,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?person dbo:author ""Kamikaze Girls""@en .
  OPTIONAL { ?person dbo:occupation dbr:Beauty_queen . }
  OPTIONAL { 
    ?place rdfs:label ""Salak, North Sumatra""@en ;
           dbo:timeZone ?timezone .
    ?person dbo:country ?country .
    FILTER(?country = ?timezone)
  }
  ?person dbo:birthPlace ?birthPlace .
}
```",6,7,7,3,2,3,2,20,0,0,19,0,0.0,0
666,16,test,"Give me the figure known as the nickname of England national beach soccer team and player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname ?manager WHERE {
  # Find the nickname of the England national beach soccer team
  ?team rdfs:label ""England national beach soccer team""@en .
  ?team dbo:nickname ?nickname .

  # Find the manager of Hull City A.F.C. for the 2016–17 season
  ?hullTeam dbp:manager ?manager ;
            dbp:season ""2016–17""^^xsd:string ;
            rdfs:label ""Hull City A.F.C.""@en .
  
  # Ensure this manager is linked to the England national beach soccer team
  OPTIONAL { ?team dbo:player ?manager . }
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
427,22,test,"Give me the reference to Partito Popolare Italiano and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?party ?partyLabel WHERE {
  ?person rdfs:label ""Romano Prodi""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?person a dbo:Politician .
  ?person dbo:officeHolder ?office .
  ?person dbo:party ?party .
  ?party rdfs:label ?partyLabel .
  FILTER (CONTAINS(LCASE(?partyLabel), ""partito popolare italiano""))
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
528,40,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of Narciso Campero.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?war WHERE {
  # Find military forces commanded by Orozimbo Barbosa or Narciso Campero
  OPTIONAL { 
    ?force dbo:commander ?person .
    FILTER (
      ?person = dbpedia:Orozimbo_Barbosa || 
      ?person = dbpedia:Narciso_Campero
    )
  }
  
  # Find wars these forces participated in
  ?force dbo:participatedIn ?war .

  # Ensure the war is a societal event in Chile
  ?war rdf:type dbo:SocietalEvent .
  ?war dbo:location dbpedia:Chile .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
328,63,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?individual WHERE {
  # Ferenc Szálasi's commander in force
  ?szalasiCommander dbo:commander ""Ferenc Szálasi""@en .
  
  # Leader of a government agency under Joseph Stalin
  ?stalinOfficeLeader dbo:leader ?office ;
                     rdf:type dbo:GovernmentAgency ;
                     dbo:head ""Joseph Stalin""@en .

  # Awardee of the award related to Volcano and Ryukyu Islands campaign
  ?awardRecipient dbo:recipient ?individual .
  ?volcanoRyukyuAward dbo:name ?campaignName ;
                      rdfs:label ?campaignLabel .
  FILTER(CONTAINS(LCASE(?campaignLabel), ""volcano"") && CONTAINS(LCASE(?campaignLabel), ""ryukyu""))

  # Ensure the same individual satisfies all conditions
  FILTER (?szalasiCommander = ?stalinOfficeLeader)
  FILTER (?stalinOfficeLeader = ?awardRecipient)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,29,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars and commander in German campaign of 1813.",SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander WHERE {
  ?commander a dbo:MilitaryPerson .
  
  # Commander of the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?regiment dbo:militaryUnitLeader ?commander ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .

  # Part of a military force during the Napoleonic Wars
  ?conflict dbo:participatingMilitaryForce ?force .
  ?force dbo:militaryPerson ?commander .
  ?conflict rdfs:label ""Napoleonic Wars""@en .

  # Commander in the German campaign of 1813
  ?campaign dbo:commander ?commander ;
            rdfs:label ""German campaign of 1813""@en .
}
```",4,6,5,2,3,3,3,71,0,0,6,0,0.0,0
659,52,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander WHERE {
  ?officeHolder dbo:country dbr:Kingdom_of_Ireland ;
                a dbo:OfficeHolder .
  ?militaryConflict dbo:participatingMilitaryUnit dbr:Napoleonic_Wars ;
                    a dbo:MilitaryConflict .
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en ;
            dbo:militaryConflict ?warEvent .
  ?commander dbo:officeHolder ?officeHolder ;
             dbo:militaryCommanderOf ?militaryConflict ;
             dbo:militaryCommanderOf ?regiment .
}
```",6,9,7,3,3,3,3,71,0,0,13,0,0.0,0
404,71,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  # Step 2: Find her spouse
  ?princess dbo:spouse ?spouse .

  OPTIONAL {
    # Step 3: Father of the spouse
    ?father dbo:child ?spouse .
    
    OPTIONAL {
      # Step 4: Child of this father who is royalty
      ?royalChild dbo:parent ?father ;
                  a dbo:RoyalFamilyMember .
      
      OPTIONAL {
        # Step 5: Parent of this child (who is royalty)
        ?grandParent dbo:child ?royalChild ;
                     a dbo:RoyalFamilyMember .

        OPTIONAL {
          # Step 6: Identify Prince George William of Hanover
          ?prince rdfs:label ""Prince George William of Hanover""@en .
          
          # Parent of Prince George William who is royalty
          ?parent dbo:child ?prince ;
                  a dbo:RoyalFamilyMember .

          FILTER(?grandParent = ?parent)
        }
      }
    }
  }
}
```",9,12,10,3,3,3,3,71,1,0,0,1.0,1.0,1.0
16,55,test,Give me the person born as the birth name of Gigi Rice and professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  ?gigiRice rdfs:label ""Gigi Rice""@en .
  OPTIONAL { ?gigiRice dbo:birthName ?birthName . }

  # Find Satomi Ishihara's profession
  ?satomiIshihara rdfs:label ""Satomi Ishihara""@en .
  ?satomiIshihara dbo:profession ?profession .

  # Find Ted Martin McGinley's spouse
  ?tedMcGinley rdfs:label ""Ted Martin McGinley""@en .
  ?tedMcGinley dbo:spouse ?spouse .

  # Match the person with all conditions
  ?person dbo:birthName ?birthName .
  ?person dbo:profession ?profession .
  ?person = ?spouse .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,51,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  # Step 1: Find the spouse of Princess Victoria Louise of Prussia
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?spouse .

  # Step 2: Find the father of that spouse
  ?spouse dbo:father ?father .

  # Step 3: Determine the child of this father
  ?father dbo:child ?child .

  # Step 4: Identify Ernest Augustus, Duke of Brunswick's child who is royalty
  ?ernestAugustus rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?ernestAugustus dbo:child ?royalChild .
  
  # Ensure the child is a royalty (using label or title)
  ?royalChild rdfs:label ?label .
  FILTER regex(?label, ""Prince|Princess|Duke|Duchess"", ""i"")

  # Step 5: Find the parent of that royal child
  ?royalChild dbo:parent ?parent .

  # Step 6: Match the two results
  FILTER (?child = ?parent)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,20,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 WHERE {
  # Find the military force associated with Francisco Largo Caballero's societal event and military conflict
  ?event1 dbo:associatedWith dbr:Francisco_Largo_Caballero .
  ?event1 rdf:type dbo:SocietalEvent ;
          dbo:militaryConflict ?conflict1 .
  ?conflict1 dbo:militaryForce ?militaryForce1 .

  # Find the military force associated with the Rif War
  ?event2 dbo:associatedWith dbr:Rif_War .
  ?event2 rdf:type dbo:MilitaryConflict ;
          dbo:militaryForce ?militaryForce2 .
}
```",3,5,4,2,2,3,3,71,0,0,34,0,0.0,0
281,58,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v5 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?heffronBirthCountry ?militaryUnit ?seymourWar WHERE {
  # Bob Heffron's birthplace and military unit in New Zealand Army
  ?heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?heffronBirthCountry .
  
  OPTIONAL {
    ?heffron dbo:militaryUnit ?militaryUnit .
    ?militaryUnit dbo:country <http://dbpedia.org/resource/New_Zealand> .
  }
  
  # Beauchamp Seymour, 1st Baron Alcester's war
  ?seymour dbo:war ?seymourWar .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
838,20,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify YU Grupa
  ?yuGrupa rdfs:label ""YU Grupa""@en .
  
  # Step 2: Find band members of YU Grupa who are artists or musical artists
  ?yuGrupa dbo:member ?artist .
  ?artist a dbo:Artist ;
          a dbo:MusicalArtist .

  # Step 3: Identify Žika Jelić's band
  ?zikasBand rdfs:label ""Žika Jelić""@en .
  
  # Step 4: Find if the artist is also a member of Žika Jelić's band
  ?zikasBand dbo:member ?bandMember .
}
```",6,13,7,3,2,3,2,20,0,0,5,0,0.0,0
92,60,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbo:birthName ?birthName .
  ?person dbo:bandMember ?band .

  OPTIONAL {
    ?film rdfs:label ""Nevermore (2006 film)""@en .
    ?film dbo:artist ?artist .
    FILTER(?artist = ?person)
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
827,20,test,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  # Step 1: Find Princess Pauline's spouse who is a royalty
  ?princess rdfs:label ""Princess Pauline of Saxe-Weimar-Eisenach""@en .
  ?princess dbo:spouse ?spouse .
  
  # Ensure the spouse is a royalty (assuming they have a title)
  ?spouse dbo:title ?title .

  # Step 2: Find the child of that spouse who is also a royalty
  ?spouse dbo:child ?royalChild .
  ?royalChild dbo:title ?childTitle .

  # Step 3: Determine Charles Alexander's parent
  ?charles rdfs:label ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?charles dbo:parent ?parentOfCharles .

  # Step 4: Identify the child of the royal child who is also a royalty and related to the parent from step 3
  ?royalChild dbo:child ?finalChild .
  ?finalChild dbo:title ?finalTitle .
  
  # Ensure this final child has some relation to Charles Alexander's parent (e.g., sibling or descendant)
  OPTIONAL { ?parentOfCharles dbo:child ?finalChild . }

  # Step 5: Find the father of this final identified child
  ?finalChild dbo:father ?father .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
54,46,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commonIndividual WHERE {
  ?thinkhaya rdfs:label ""Thinkhaya of Pagan""@en .
  ?child dbo:parent ?thinkhaya .
  
  ?narapatiI rdfs:label ""Narapati I of Ava""@en .
  ?narapatiChild dbo:parent ?narapatiI .
  
  OPTIONAL {
    ?commonIndividual dbo:parent ?child .
  }
  OPTIONAL {
    ?commonIndividual dbo:spouse ?narapatiChild .
  }

  FILTER(?commonIndividual != ?thinkhaya && ?commonIndividual != ?narapatiI)
}
```",5,5,6,3,2,3,3,71,0,6,1,0.0,0.0,0
994,71,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Fredrik Thordendal's band
  ?meshuggah dbo:bandMember ?thordendal .
  ?thordendal rdfs:label ""Fredrik Thordendal""@en .

  # Step 2: Meshuggah as an organisation and associated artist
  OPTIONAL { ?meshuggah dbo:associatedBand ?associatedArtist . }

  # Step 3: Don Dokken's persona
  ?dokken dbp:bandName ""Dokken"" .
  ?dokken dbo:member ?donDokken .
  ?donDokken rdfs:label ""Don Dokken""@en .

  # Step 4: Associated musical artist of Don Dokken
  OPTIONAL { ?dokken dbo:associatedBand ?artist1 . }

  # Step 5: Reference to Watchtower
  ?watchtower dbp:bandName ""Watchtower"" .
  
  # Step 6: Associated musical artist of the reference to Watchtower
  OPTIONAL { ?watchtower dbo:associatedBand ?artist2 . }
  
  # Final step: Find associated artist with all these connections
  FILTER(?associatedArtist = ?artist1 || ?associatedArtist = ?artist2)
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
179,20,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of the parent of Vajiralongkorn.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?vajiralongkorn rdfs:label ""Vajiralongkorn""@en .
  ?parent dbo:child ?vajiralongkorn .
  ?nakkkhatraMangala dbo:child ?parent .
  ?nakkkhatraChild dbo:child ?nakkkhatraMangala .
  ?nakkkhatraChild a dbo:Monarch .
  ?nakkkhatraChild rdfs:label ?royalLabel .
  ?nakkkhatraChild dbo:birthName ?birthName .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
547,53,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of the child of William Haliburton and resting place of Simon Cadell.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?restingPlace1 ?restingPlace2 ?restingPlace3 WHERE {
  # Resting place of the awardee of Knight Grand Cross
  ?person dbo:awardedBy ?award .
  FILTER(CONTAINS(LCASE(str(?award)), ""knight grand cross of the order of st michael and st george"")) .
  OPTIONAL { ?person dbo:finalBurialPlace ?restingPlace1 } .

  # Resting place of the child of the child of William Haliburton
  ?williamHaliburton rdfs:label ""William Haliburton""@en .
  ?child dbo:parent ?williamHaliburton ;
         dbo:child ?grandChild .
  OPTIONAL { ?grandChild dbo:finalBurialPlace ?restingPlace2 } .

  # Resting place of Simon Cadell
  ?simonCadell rdfs:label ""Simon Cadell""@en .
  OPTIONAL { ?simonCadell dbo:finalBurialPlace ?restingPlace3 } .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,48,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfGrandchild WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbo:father ?antiochusIII .
  ?antiochus rdfs:label ""Antiochus""@en .

  # Step 2: Find his child
  ?child dbo:parent ?antiochus .

  # Step 3: Find the grandchild (child of the child)
  ?grandchild dbo:parent ?child .

  # Step 4: Identify successor of Antiochus II Theos who is royalty
  ?antiochusII rdfs:label ""Antiochus II Theos""@en .
  ?successor dbo:succesorOf ?antiochusII .
  ?successor a dbo:Monarch .

  # Step 5: Find the child of this successor, ensuring they are royalty
  ?royalChild dbo:parent ?successor .
  ?royalChild a dbo:Monarch .

  # Final step: Identify the parent of the grandchild who is also royalty
  ?parentOfGrandchild dbo:parent ?grandchild .
  ?parentOfGrandchild a dbo:Monarch .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
659,23,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?commander WHERE {
  ?kingdom rdfs:label ""Kingdom of Ireland""@en .
  ?officeHolder dbo:country ?kingdom ;
                a dbo:OfficeHolder .
  OPTIONAL { ?officeHolder dbo:commanderInChief ?commander . }
}
```",3,4,4,3,1,3,3,71,0,0,269,0,0.0,0
161,61,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  # Find the predecessor of Indalecio Prieto
  ?predecessor dbo:successorIndalecioPrieto ?indalecioPrieto .
  
  # Identify the military force associated with a societal event and a military conflict
  ?societalEvent dbo:militaryConflict ?militaryForce ;
                rdf:type dbo:SocietalEvent .
  ?militaryConflict dbo:societalEvent ?societalEvent ;
                    rdf:type dbo:MilitaryConflict .

  # Find the commander in the force that is an event, associated with ""El Director""
  ?event dbo:commander ?elDirector .
  ?elDirector rdfs:label ""Francisco Largo Caballero""@en .
  
  # Link the predecessor to the military conflict
  ?predecessor dbo:militaryConflict ?militaryConflict .
}
```",6,9,7,3,2,3,3,71,0,0,32,0,0.0,0
161,60,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?person rdfs:label ""Francisco Franco""@en .
  ?person dbo:deceasedAt ?deathEvent .
  ?deathEvent rdfs:label ""Francoist Spain""@en .
  
  ?person dbo:commanderOf ?militaryForce .
  
  ?event1 dbo:socialEvent ?militaryConflict .
  ?event2 dbo:event ?militaryConflict .
  ?event3 dbo:militaryConflict ?militaryConflict .
  
  FILTER EXISTS { ?militaryConflict dbo:relatedTo ?militaryForce }
}
```",6,10,7,3,2,3,3,71,0,0,34,0,0.0,0
55,23,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?bandMember1 ?bandMember2 WHERE {
  # Part 1: Used to Love Her
  ?song rdfs:label ""Used to Love Her""@en .
  ?song dbo:producer ?producer .
  
  OPTIONAL { 
    ?producer rdf:type dbo:Band .
    ?producer dbo:bandMember ?bandMember1 .
  }
  
  # Part 2: Newsted
  ?reference rdfs:label ""Newsted""@en .
  ?reference dbo:band ?newstedBand .
  
  OPTIONAL {
    ?newstedBand rdf:type dbo:Band .
    ?newstedBand dbo:bandMember ?bandMember2 .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
659,61,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?event rdf:type dbo:MilitaryConflict ;
         dbo:commander ?schimmelpenninck .
  ?schimmelpenninck rdfs:label ""Rutger Jan Schimmelpenninck""@en .

  ?war rdf:type dbo:MilitaryConflict ;
       dbo:militaryUnitOrOrganization ?polishHorse .
  ?polishHorse rdfs:label ""Polish Horse""@en ;
               rdf:type dbo:MilitaryUnit, dbo:Organisation .

  ?event dbo:militaryForce ?militaryForce .
}
```",6,13,7,3,2,3,3,71,0,0,31,0,0.0,0
328,35,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?leader WHERE {
  # Find the office led by Joseph Stalin
  ?office dbo:leader ?stalinLeader .
  ?stalinLeader rdfs:label ""Joseph Stalin""@en .

  # Find the awardee of Bruce Fraser, 1st Baron Fraser of North Cape
  ?fraserAward dbo:recipient ?awardee .
  ?fraserAward dbo:givenBy ?bruceFraser .
  ?bruceFraser rdfs:label ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .

  # Check if the leader of Stalin's office is connected to the awardee
  OPTIONAL {
    ?awardee dbo:leader ?leader .
  }
  
  FILTER(?leader != ?stalinLeader) # Ensure we find a different leader if possible
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,51,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of Ferenc Szálasi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?finalLeader WHERE {
  # Find Gustav Jonson's leader
  ?jonson a dbo:OfficeHolder ;
          foaf:name ""Gustav Jonson""@en .
  
  OPTIONAL { 
    ?jonson dbo:leader ?gustavLeader .
  }
  
  # Find Ferenc Szálasi's commander
  ?szalasi a dbo:MilitaryPerson ;
           foaf:name ""Ferenc Szálasi""@en .
  
  OPTIONAL {
    ?szalasi dbo:commanderInForce ?ferencCommander .
  }

  # Assuming the leader of Gustav Jonson is also Ferenc Szálasi's commander
  FILTER (?gustavLeader = ?ferencCommander)

  # Find the leader of the office that is a government agency
  OPTIONAL {
    ?office dbo:leader ?finalLeader ;
            a dbo:GovernmentAgency .
    
    ?gustavLeader dbo:officeHolder ?office .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,54,test,"Give me the band of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?bandOfJosephMichael ?associatedArtistNevermore ?actorMusicalArtist WHERE {
  # Find the band of Joseph Michael who is an artist
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbo:band ?bandOfJosephMichael .
  FILTER EXISTS { ?person a dbo:Musician . }

  OPTIONAL {
    # Find associated musical artists of Nevermore
    ?nevermore rdfs:label ""Nevermore""@en .
    ?nevermore dbo:associatedBandMember ?associatedArtistNevermore .
    FILTER EXISTS { ?associatedArtistNevermore a dbo:MusicalArtist . }
  }

  OPTIONAL {
    # Find the actor of ""Return to Nuke 'Em High Volume 1"" and their associated musical artists
    ?movie rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
    ?movie dbo:actor ?actor .
    ?actor dbo:musicalArtist ?actorMusicalArtist .
    FILTER EXISTS { ?actor a dbo:Actor . }
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,19,test,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?person ?war WHERE {
  ?person dbo:award ?award .
  ?award rdfs:label ""Knight Grand Cross of the Order of the Bath""@en .
  
  OPTIONAL { 
    ?person dbo:country ?location .
    ?location rdfs:label ""Colony of New Zealand""@en .
  }
  
  ?person dbo:militaryConflict ?war .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,68,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Sherry Hormann's spouse
  ?spouse dbo:spouse sherry_hormann .
  
  # Claim to fame of the spouse (a work)
  ?work dbo:creator ?spouse .
  
  # Movie that is also a television show with Roz Ryan
  ?movie dbo:starring ?actor ;
         rdfs:label ?title ;
         dbo:genre ?genre .
  FILTER CONTAINS(LCASE(?title), ""roz ryans"") .
  FILTER (?genre IN (dbo:Film, dbo:TelevisionShow)) .

  # Actor's native place is the nickname of Jackson, Tennessee
  ?actor dbo:nativePlace ?place .
  ?place rdfs:label ?nickname .
  FILTER CONTAINS(LCASE(?nickname), ""jackson"") .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
404,70,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfChild WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?princeGeorge rdfs:label ""Prince George William of Hanover""@en .
  
  # Step 2: Find his child who is royalty
  ?child dbo:child ?princeGeorge ;
         a dbo:Royal .

  # Step 3: Identify the parent of this royal child (who must be royalty)
  ?parentOfChild dbo:child ?child ;
                 a dbo:Royal .

  # Step 4: Spouse of Princess Victoria Louise of Prussia
  ?princessVictoria rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?spouse dbo:spouse ?princessVictoria .

  # Step 5: Child of the father of this spouse
  ?fatherOfSpouse dbo:child ?spouse .
  ?child2 dbo:child ?fatherOfSpouse .

  # Ensure the child from step 5 is the same as the child from step 2
  FILTER (?child = ?child2)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
659,45,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?battle1 dbo:commander ?schimmelpenninck .
  ?battle2 dbo:commander ?schimmelpenninck .
  ?schimmelpenninck rdfs:label ""Rutger Jan Schimmelpenninck""@en .

  VALUES ?battle1 { <http://dbpedia.org/resource/Battle_of_Leipzig> }
  VALUES ?battle2 { <http://dbpedia.org/resource/German_campaign_of_1813> }

  ?battle1 a dbo:MilitaryConflict ;
           a dbo:SocietalEvent ;
           a dbo:Event .
  
  ?battle2 a dbo:MilitaryConflict ;
           a dbo:SocietalEvent ;
           a dbo:Event .

  ?battle1 dbo:militaryForce ?militaryForce .
  ?battle2 dbo:militaryForce ?militaryForce .
}
```",5,8,6,3,3,3,3,71,0,0,6,0,0.0,0
161,47,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?francoMilitaryForce ?prietoPredecessorMilitaryForce WHERE {
  # Find Francisco Franco's military force that is a societal event and a military conflict
  ?francoMilitaryForce dbo:militaryConflict ?conflict1 .
  ?francoMilitaryForce rdfs:label ""Francisco Franco""@en .
  ?conflict1 rdf:type dbo:SocietalEvent .

  OPTIONAL {
    # Find Indalecio Prieto's predecessor
    ?prietoPredecessor dbo:predecessorIndalecioPrieto ?indalecioPrieto .
    ?indalecioPrieto rdfs:label ""Indalecio Prieto""@en .
    
    # Find the military force associated with Prieto's predecessor that is a societal event and a military conflict
    ?prietoPredecessorMilitaryForce dbo:militaryConflict ?conflict2 .
    ?prietoPredecessorMilitaryForce rdfs:label ?predecessorLabel .
    ?conflict2 rdf:type dbo:SocietalEvent .
  }
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
232,45,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee and actor of Dog Soldiers (film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?nativePlace WHERE {
  ?person dbo:nationality dbr:France ;
          dbo:officeHolder ?office ;
          dbo:child dbr:Jon_Pertwee ;
          dbo:actor dbr:Dog_Soldiers_(film) .
  
  ?person dbo:nativePlace ?nativePlace .
  
  ?nativePlace a dbo:Settlement ;
               dbo:country dbr:United_Kingdom .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
617,55,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Identify Antiochus (son of Antiochus III the Great)
  ?antiochus rdfs:label ""Antiochus IV Epiphanes""@en .
  
  # Find his child
  ?child dbo:parent ?antiochus .

  # Find the parent of this child
  ?grandParent dbo:child ?child .

  # Identify the spouse of this child who is royalty and related to Seleucus II Callinicus
  ?spouse dbo:spouse ?child .
  ?spouse a dbo:Monarch .  # Assuming royalty can be identified by being a Monarch

  # Ensure the spouse is also a descendant of Seleucus II Callinicus
  ?seleucus rdfs:label ""Seleucus II Callinicus""@en .
  ?descendant dbo:parent* ?seleucus .
  ?spouse dbo:child ?descendant .
}
```",6,7,7,2,3,3,3,71,0,0,2,0,0.0,0
391,43,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?sherryHormann dbo:spouse ?spouse .
  FILTER (CONTAINS(LCASE(?spouse), ""compton, california"")) .
  
  ?spouse dbo:actedIn ?movie .
  FILTER (str(?movie) = ""All About the Andersons""@en) .

  ?work dbo:actor ?actor .
  ?spouse dbo:claimToFame ?work .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,71,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalParent WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret rdfs:label ""Archduchess Margaret of Austria""@en .
  FILTER(YEAR(?margaret dbo:birthday) = 1925) .

  # Parent of Margaret
  ?parentMargaret dbo:child ?margaret .
  
  # Child of the parent of Margaret
  ?childParentMargaret dbo:parent ?parentMargaret .
  
  # Parent of the child of the parent of Margaret
  ?grandParentChildParentMargaret dbo:child ?childParentMargaret .

  # Archduke Ladislaus Philipp of Austria
  ?ladislaus rdfs:label ""Archduke Ladislaus Philipp of Austria""@en .

  # Royalty (parent) of Ladislaus
  ?royaltyLadislaus dbo:child ?ladislaus .
  
  # Child of the royalty of Ladislaus
  ?childRoyaltyLadislaus dbo:parent ?royaltyLadislaus .
  
  # Parent of the child of the royalty of Ladislaus
  ?grandParentChildRoyaltyLadislaus dbo:child ?childRoyaltyLadislaus .

  # Landmark at elevation 96.0 that is a settlement
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            rdf:type dbo:Settlement .
  
  # Native of the landmark
  ?native dbo:nativePlace ?landmark .

  # Parent of the native
  ?parentNative dbo:child ?native .

  # Final parent (common ancestor)
  ?finalParent = ?grandParentChildParentMargaret ;
                = ?grandParentChildRoyaltyLadislaus ;
                = ?parentNative .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
617,18,test,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfFather WHERE {
  # Richeza of Poland, Queen of Hungary
  ?richeza rdfs:label ""Richeza of Poland, Queen of Hungary""@en .
  
  # Her father
  ?richeza dbo:father ?father .

  # Father's parent (grandfather) who is a royalty
  ?father dbo:parent ?parentOfFather .
  FILTER EXISTS { ?parentOfFather rdf:type dbo:Monarch }

  # Mlada (Abbess)
  ?mlada rdfs:label ""Mlada (abbess)""@en .

  # Her parent
  ?mlada dbo:parent ?parentOfMlada .

  # Child of that parent who is a royalty
  ?childOfParent dbo:parent ?parentOfMlada .
  FILTER EXISTS { ?childOfParent rdf:type dbo:Monarch }

  # Connect the two parts by finding commonality or relationship
  OPTIONAL {
    ?parentOfFather rdfs:label ?label1 .
    ?childOfParent rdfs:label ?label2 .
    FILTER(?label1 = ?label2)
  }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,47,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?country WHERE {
  # Find the leader of the 1962 New South Wales state election
  ?leader dbo:officeTitle ""Leader""@en ;
          dbo:election ?election .
  
  # Ensure the election is for the 1962 New South Wales state election
  ?election rdfs:label ""1962 New South Wales state election""@en .

  # Find the birthplace of the leader and ensure it's a country
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country ;
              rdfs:label ?countryLabel .

  # Find the awardee of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:honours ""Knight Grand Cross of the Order of the Bath""@en ;
           dbo:war ?war .

  # Ensure the leader and awardee are the same person
  FILTER(?leader = ?awardee)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
314,27,test,"Give me the person deceased at Madrid and awardee of the award of Sergei Makovetsky and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Madrid .
  
  ?person dbo:award dbr:Sergei_Makovetsky .
  
  ?person dbo:title ""Commander""@en .
  
  OPTIONAL { ?event dbo:associatedWith dbr:Lisa_Gavrić . }
  OPTIONAL { ?societalEvent dbo:relatedTo dbr:Lisa_Gavrić . }

  FILTER EXISTS { ?event a dbo:Event } .
  FILTER EXISTS { ?societalEvent a dbo:SocietalEvent } .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
996,16,test,Give me the entity in the award of Ekrem Akurgal and force of the awardee of 1778.0.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardEntity ?entityInAward ?awardeeForce WHERE {
  # Find awards associated with Ekrem Akurgal
  ?ekremAkurgal dbo:award ?award .
  
  # Get the entity related to the award
  ?award dbo:recipient ?entityInAward .

  OPTIONAL {
    # Find an awardee from the year 1778
    ?awardee dbo:birthYear ""1778""^^xsd:gYear .
    ?award dbo:recipient ?awardee .
    
    # Get additional information about the awardee (force or related entity)
    ?awardee dbo:force ?awardeeForce .
  }
  
  # Filter to ensure we are considering Ekrem Akurgal
  FILTER(STRSTARTS(LCASE(?ekremAkurgal), ""ekrem_akurgal""))
}
```",4,4,5,2,2,3,2,20,0,0,4,0,0.0,0
701,66,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?battle dbo:eventLocation ?location .
  FILTER(CONTAINS(LCASE(?location), ""perire"")) .

  ?commander dbo:participatedInBattle ?battle .
  
  ?father dbo:child ?commander .
  
  ?spouse dbo:spouse ?father ;
          a dbo:RoyalFamilyMember .  # Assuming royalty is represented by this class

  ?ramessesChild dbo:parent ?spouse ;
                 dbo:parent <http://dbpedia.org/resource/Ramesses_II> .

  ?nefertariChild dbo:parent ?spouse ;
                  dbo:parent <http://dbpedia.org/resource/Nefertari> .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
378,61,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?claimToFame WHERE {
  ?trigge rdfs:label ""Thomas Trigge""@en .
  ?trigge dbo:commanderOf ?war .
  
  OPTIONAL { 
    ?war rdfs:label ?warLabel .
    FILTER(CONTAINS(LCASE(?warLabel), ""peninsular war""))
  }
  
  ?trigge dbo:claimToFame ?claimToFame .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
767,52,test,"Give me the alma mater of the administration of George K. Nash and reference to  and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/state> ?v2 . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater ?administration ?settlement ?songwriter WHERE {
  # Step 1: Find George K. Nash's alma mater
  ?nash a dbo:Person ;
        foaf:name ""George K. Nash"" ;
        dbp:almaMater ?almaMater .

  # Step 2: Determine the administration he was part of
  OPTIONAL {
    ?administration dbo:member ?nash .
  }

  # Step 3: Find a settlement in that administration
  OPTIONAL {
    ?settlement dbo:partOf ?administration ;
                rdf:type dbo:Settlement .
  }

  # Step 4: Identify the writer of ""Where It's At"" by Dustin Lynch
  ?album dbo:title ""Where It's At""@en ;
         dbo:song ?song .

  ?song dbp:lyricsBy ?songwriter .

  # Ensure there is a connection between the songwriter and the settlement
  OPTIONAL {
    ?settlement dbo:location ?location .
    ?location foaf:name ?songwriterName .
    FILTER(?songwriterName = ?songwriter)
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
528,70,test,Give me the war of the commander in the work of --01-09 and force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
# Step 1: Identify the work or event on January 9th
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?work WHERE {
  ?event rdfs:label ""January 9""@en .
  ?event dbo:date ?date .
  FILTER (STRSTARTS(STR(?date), ""199-01-09""))
  ?event dbo:subject ?work .
}

# Step 2: Find the commander's war
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?war WHERE {
  ?commander dbo:commanded ?unit .
  ?unit dbo:participatedIn ?war .
  ?work dbo:commander ?commander .
}

# Step 3: Identify Narciso Campero's military force
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?militaryForce WHERE {
  ?person rdfs:label ""Narciso Campero""@en .
  ?person dbo:militaryService ?militaryForce .
}

# Step 4: Find the war associated with the Battle of Pisagua
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?war WHERE {
  ?battle rdfs:label ""Battle of Pisagua""@en .
  ?battle dbo:participatedIn ?war .
}
```",8,8,9,3,3,3,3,71,0,0,2,0,0.0,0
404,48,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?princess dbo:birthName ""Princess Victoria Louise of Prussia""@en .
  ?princess rdf:type dbo:Monarch .
  ?father dbo:child ?ernestAugustus .
  ?ernestAugustus rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?person dbo:birthName ?birthName .
  ?person rdf:type dbo:Monarch .
  ?person dbo:spouse ?spouse .
  FILTER(?birthName = ""Princess Victoria Louise of Prussia""@en)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,38,test,Give me the spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?antiochusIII rdfs:label ""Antiochus III the Great""@en .
  ?child dbo:parent ?antiochusIII ;
         dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?anotherChild rdfs:label ""Antiochus (son of Antiochus III the Great)""@en ;
                  dbo:parent ?antiochusIII .
  }
}
```",4,4,5,2,2,3,3,71,2,3,0,0.4,1.0,0.5714285714285715
528,63,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile and war of the commander in Battle of La Rinconada de Ate.","SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?force ?chileWar ?battleCommander ?battleWar WHERE {
  # Find Narciso Campero Leyes' birth details and military force
  ?person rdfs:label ""Narciso Campero Leyes""@en .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?person dbo:militaryForce ?force . }

  # Link the military force to a societal event (war) in Chile
  OPTIONAL {
    ?force dbo:placeOfBirth ?chilePlace .
    ?chilePlace dbo:country dbc:Chile .
    ?force dbo:war ?chileWar .
  }
  
  # Find the commander of the Battle of La Rinconada de Ate and associated war
  ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
  OPTIONAL { ?battle dbo:commander ?battleCommander . }
  OPTIONAL { ?battle dbo:war ?battleWar . }
}
```",7,8,8,3,3,3,3,71,0,2,2,0.0,0.0,0
712,18,test,"Give me the resting place of the awardee of Hero of the Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?restingPlace WHERE {
  # Find the awardee of Hero of the Soviet Union
  ?person dbo:honoraryTitle ?title .
  FILTER(CONTAINS(LCASE(STR(?title)), ""hero of the soviet union"")) .

  # Identify military force associated with Vyoshenskaya Uprising
  ?militaryForce rdfs:label ?forceLabel .
  FILTER(CONTAINS(LCASE(STR(?forceLabel)), ""vyoshenskaya uprising"")) .

  # Find country of this military force
  ?militaryForce dbo:country ?country .

  # Get the capital city of that country
  ?country dbp:capital ?capitalCity .

  # Finally, find the resting place (burial site) of the awardee
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,42,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?awardeeWar ?heatherRoyProfession ?heatherRoyWar WHERE {
  # Find the awardee of Knight Grand Cross of the Order of the Bath
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  
  # Find wars involving this person in New Zealand
  OPTIONAL {
    ?war dbo:place dbr:Colony_of_New_Zealand .
    ?war dbo:participant ?person .
    BIND(?war AS ?awardeeWar)
  }
  
  # Find Heather Roy's profession related to a military unit and associated wars
  ?heatherRoy rdfs:label ""Heather Roy""@en .
  OPTIONAL {
    ?profession dbo:militaryUnit ?unit .
    ?heatherRoy dbo:profession ?profession .
    ?war dbo:participant ?heatherRoy .
    BIND(?profession AS ?heatherRoyProfession)
    BIND(?war AS ?heatherRoyWar)
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
360,27,test,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to the author of Blinded by the Light.",SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writerOfRoaringSilence ?nativeOfDeathPlace ?authorOfBlindedByTheLight WHERE {
  # Find the writer of ""The Roaring Silence""
  ?book rdfs:label ""The Roaring Silence""@en .
  ?book dbo:author ?writerOfRoaringSilence .

  # Find Winnie Madikizela-Mandela's death place and ensure it is a settlement
  ?winnie dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:PopulatedPlace .
  
  # Get the native place of her death place (ensuring it's a settlement)
  ?deathPlace dbo:nativeOf ?nativeOfDeathPlace .

  # Find the author of ""Blinded by the Light""
  ?blindedBook rdfs:label ""Blinded by the Light""@en .
  ?blindedBook dbo:author ?authorOfBlindedByTheLight
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
701,69,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?result WHERE {
  # Amun-her-khepeshef's spouse and their child's parent
  ?amunHerKhepeshef dbo:spouse ?spouse .
  ?childOfSpouse dbo:parent ?parentOfChildOfSpouse .
  
  # Ramesses II's child and the parent of that child (Ramesses II) and their spouse
  ?ramessesII dbo:child ?childOfRamessesII .
  ?parentOfChildOfRamessesII dbo:spouse ?spouseOfParentOfChildOfRamessesII .

  # Linking both parts to find a common individual who is royalty in the Battle of Perire
  FILTER (?parentOfChildOfSpouse = ?ramessesII || ?spouseOfParentOfChildOfRamessesII = ?parentOfChildOfSpouse)
  
  # Ensuring the result is royalty involved in the Battle of Perire
  ?result dbo:royalty ""true""^^xsd:boolean .
  ?result dbo:battle ?battle .
  ?battle rdfs:label ""Battle of Perire""@en .

  # Linking to ensure the same individual satisfies both conditions
  FILTER (?parentOfChildOfSpouse = ?result || ?spouseOfParentOfChildOfRamessesII = ?result)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
528,50,test,Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?birthPlace WHERE {
  # Assuming --01-09 refers to a specific work with a commander
  <http://dbpedia.org/resource/Work> dbo:commander ?commander .
  
  # Find the war associated with the commander
  OPTIONAL { ?commander dbo:participatedInWar ?war . }
  
  # Find the birthplace of Narciso Campero Leyes
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> dbo:birthPlace ?birthPlace .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,51,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional ?personWithSameBirthName WHERE {
  # Find Satomi Ishihara's profession
  ?satomi dbo:profession ?profession .
  VALUES ?satomi { <http://dbpedia.org/resource/Satomi_Ishihara> }
  
  # Find an alumnus of Ohio State University and their birth name
  ?alumnus dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> ;
           foaf:name ?birthName .
  
  # Find a person with the same birth name as the alumnus
  ?personWithSameBirthName foaf:name ?birthName .
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
378,63,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
# Step 1: Get Carl Pontus Gahn's birth name
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthName WHERE {
  dbp:Carl_Pontus_Gahn dbo:birthName ?birthName .
}

# Step 2: Identify the commander in both wars
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?commander WHERE {
  ?commander dbo:occupation ""Military commander""@en .
  ?gibraltarEvent dbo:commander ?commander ;
                  rdfs:label ""Great Siege of Gibraltar""@en .
  ?peninsularWarEvent dbo:commander ?commander ;
                      rdfs:label ""Peninsular War""@en .
}

# Step 3: Find the wars associated with this commander
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?war WHERE {
  ?commander dbo:occupation ""Military commander""@en .
  ?event dbo:commander ?commander ;
         a dbo:MilitaryConflict .
  ?event rdfs:label ?war .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
767,27,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?alterEgo WHERE {
  ?person rdfs:label ""Matthew Burland""@en .
  ?person dbo:fictionalCharacter ?alterEgo .
}
```",3,4,4,3,1,3,3,71,0,0,98447,0,0.0,0
281,30,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and war of the profession, that is a military unit, of Heather Roy and entity in Colony of New Zealand.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war1 ?war2 ?militaryUnit WHERE {
  ?person1 rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .
  ?person1 dbo:participatedIn ?war1 .

  ?person2 rdfs:label ""Heather Roy""@en .
  ?person2 dbo:militaryUnit ?militaryUnit .
  
  OPTIONAL {
    ?militaryUnit dbo:participatedIn ?war2 .
  }

  ?entity rdfs:label ""Colony of New Zealand""@en .
  OPTIONAL {
    ?entity dbo:relatedEntity ?relatedEntity .
    ?relatedEntity rdfs:label ?label .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
488,56,test,"Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?birthPlaceOfCommander ?deathPlaceOfIeyasu ?administrationOfFather WHERE {
  # Part 1: Birth place of the commander in Boshin War
  ?commander dbo:occupation ""Military personnel""@en .
  ?commander dbo:participatedInBattle [
    dbo:name ""Boshin War""@en ;
    dbo:participant ?commander .
  ].
  ?commander dbo:birthPlace ?birthPlaceOfCommander .

  # Part 2: Death place of Tokugawa Ieyasu
  dbpedia:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceOfIeyasu .

  # Part 3: Administration of the father of the spouse, who is royalty, of Tokugawa Masako
  dbpedia:Tokugawa_Masako dbo:spouse ?spouse .
  
  OPTIONAL {
    ?spouse dbo:royalTitle ?title .
    FILTER EXISTS { ?title }
  }

  OPTIONAL {
    ?spouse dbo:father ?father .
    ?father dbo:administration ?administrationOfFather .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,34,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?authorDecedent ?algiersDecedent WHERE {
  # Find the author of ""French Algeria"" and their decedent
  ?book rdfs:label ""French Algeria""@en .
  ?book dbo:author ?author .
  OPTIONAL { 
    ?author dbo:deathPlace ?deathPlace .
    ?author rdfs:seeAlso ?decedentResource .
    ?decedentResource rdfs:label ?authorDecedent .
  }

  # Find the person decedent at Algiers
  ?location rdfs:label ""Algiers""@en .
  OPTIONAL {
    ?person dbo:deathPlace ?location .
    ?person rdfs:seeAlso ?decedentResource2 .
    ?decedentResource2 rdfs:label ?algiersDecedent .
  }
}
```",4,4,5,3,2,3,3,71,0,0,16,0,0.0,0
10,26,test,"Give me the band member of Luke Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v4 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?bandMember ?associatedArtist ?birthName WHERE {
  # Band member of Luke Vibert
  ?lukeVibert rdfs:label ""Luke Vibert""@en .
  ?lukeVibert dbo:bandMember ?bandMember .

  # Associated musical artist of Matt Colton
  ?mattColton rdfs:label ""Matt Colton""@en .
  ?mattColton dbo:birthPlace ?birthPlace .
  OPTIONAL { ?associatedArtist dbo:associatedBand ?mattColton . }

  # Birth name of Sharon Kao
  ?sharonKao rdfs:label ""Sharon Kao""@en .
  ?sharonKao rdfs:label ?birthName .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
9,59,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?almaMater WHERE {
  # Pattern for mayor's alma mater
  {
    ?organization dbo:locationCity ""Belfast"" .
    ?mayor dbo:positionHeld ?organization ;
           dbo:almaMater ?almaMater .
  }
  
  UNION
  
  # Pattern for Royal Medals awardee's alma mater
  {
    ?awardee dbo:award <http://dbpedia.org/resource/Royal_Medals> ;
             dbo:almaMater ?almaMater .
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
115,8,test,Give me the alma mater of Vladimir Cerrón and alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?personLabel ?almaMaterLabel WHERE {
  # Part 1: Alma Mater of Vladimir Cerrón
  { 
    ?vCerron dbo:almaMater ?almaMater .
    ?vCerron rdfs:label ""Vladimir Cerrón""@en .
    SERVICE <http://dbpedia.org/sparql> {
      ?almaMater rdfs:label ?almaMaterLabel .
    }
  }

  UNION

  # Part 2: Alma Mater of Awardee of National Order of Scientific Merit
  { 
    ?award dbo:recipient ?person .
    ?award rdfs:label ""National Order of Scientific Merit""@en .
    ?person dbo:almaMater ?almaMater .
    SERVICE <http://dbpedia.org/sparql> {
      ?person rdfs:label ?personLabel .
      ?almaMater rdfs:label ?almaMaterLabel .
    }
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
232,65,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actor WHERE {
  ?person dbo:child ?child .
  ?child rdfs:label ""Jon Pertwee""@en .
  
  ?sylvie dbo:residence ?settlement .
  ?settlement rdf:type dbo:Settlement ;
              dbo:country dbc:United_Kingdom .
  ?sylvie rdfs:label ""Sylvie Bermann""@en .

  ?actor dbo:profession dbr:Actor ;
         dbo:narrator true ;
         dbo:producer true ;
         dbo:film ?film ;
         dbo:militaryConflict ?conflict .

  FILTER(?person = ?actor)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,24,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Find the leader of People's Commissariat of Defense
  ?organization rdfs:label ""People's Commissariat of Defense of the Soviet Union""@en .
  ?organization dbo:head ?leader .

  # Find commanders under Ferenc Szálasi
  ?szalasi rdfs:label ""Ferenc Szálasi""@en .
  ?commanderRelation dbo:commander ?szalasi .
  
  # Check if the same person held both roles
  FILTER (?leader = ?commanderRelation)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,63,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?figure WHERE {
  # Queen's University Belfast and its nickname
  ?university rdfs:label ""Queen's University Belfast""@en .
  ?university dbo:nickname ?figure .

  # Mayor of an organization in Belfast, who is a politician, and their alma mater
  ?mayor dbo:almaMater ?figure ;
         dbo:position ?position ;
         dbo:organization ?org .
  ?org rdfs:label ""Belfast""@en .
  ?position rdfs:label ""Mayor""@en .

  # Awardee of the Royal Medal and their alma mater
  ?awardee dbo:almaMater ?figure ;
           dbo:honoraryTitle ?title .
  ?title rdfs:label ""Royal Medal""@en .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,57,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29 and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?band WHERE {
  # Part 1: Band of Tracey Elizabeth McSween
  { 
    ?person dbo:birthName ""Tracey Elizabeth McSween""@en .
    OPTIONAL { ?person dbo:band ?band . }
  }

  UNION

  # Part 2: Band of the person born on 1985-04-29
  {
    ?person dbo:birthday ?date .
    FILTER (xsd:date(?date) = ""1985-04-29""^^xsd:date)
    OPTIONAL { ?person dbo:band ?band . }
  }

  UNION

  # Part 3: Band of the writer of a song by Amba Shepherd
  {
    ?song dbo:writer ?writer .
    ?song rdfs:label ?title .
    FILTER (CONTAINS(LCASE(?title), ""amba shepherd""))
    OPTIONAL { ?writer dbo:band ?band . }
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,61,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander WHERE {
  ?gustavJonson a dbo:OfficeHolder ;
                foaf:name ""Gustav Jonson"" .
  
  ?office dbo:leader ?gustavJonson ;
          a dbo:GovernmentAgency .

  ?commander dbo:commandedForceAtBudapest ?force ;
             dbo:ledOffice ?office .

}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
994,48,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Step 1: Identify Donald Maynard Dokken
  ?dokken dbo:birthName ""Donald Maynard Dokken""@en .
  
  # Step 2: Find band members of Donald Maynard Dokken
  ?dokken dbo:bandMember ?bandMember .

  # Step 3: Reference to Watchtower and find associated musical artists
  ?watchtower rdfs:label ""Watchtower""@en .
  ?watchtower dbo:associatedBand ?associatedArtist .

  # Step 4: Find the associated musical artist of each band member that is linked to Watchtower
  OPTIONAL {
    ?bandMember dbo:associatedBand ?intermediateArtist .
    ?intermediateArtist dbo:associatedBand ?associatedArtist .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,65,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?almaMater WHERE {
  ?award dbo:recipient ?figure .
  ?award rdfs:label ""Royal Medal""@en .
  
  ?figure rdfs:label ?nickname .
  FILTER(CONTAINS(?nickname, ""Queen's University Belfast"")).
  
  ?politician dbo:almaMater ?almaMater .
  ?politician dbo:position ?mayorPosition .
  ?mayorPosition rdfs:label ""Mayor of Northern Ireland Forum""@en .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,46,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nativeOfResidenceCountry ?almaMater WHERE {
  ?person rdf:type dbo:Person ;
          rdfs:label ""Yōichi Masuzoe""@en .
  
  OPTIONAL {
    ?residence dbo:resident ?person ;
               dbo:country ?residenceCountry .
    ?residenceCountry dbo:native ?nativeOfResidenceCountry .
  }
  
  OPTIONAL {
    ?almaMater rdf:type dbo:University ;
               rdfs:label ?almaMaterLabel ;
               dbo:location ?location .
    ?location dbo:country dbc:Japan .
    FILTER EXISTS { ?almaMater rdf:type dbo:EducationalOrganization } .
    FILTER EXISTS { ?almaMater rdf:type dbo:Organisation } .
  }
}
```",5,10,6,3,2,3,3,71,0,0,167,0,0.0,0
547,68,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v5 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?grandchildRestingPlace ?actorRestingPlace ?awardeeRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  ?william dbo:birthName ""William Haliburton""@en .
  ?williamChild dbo:parent ?william .
  ?grandchild dbo:parent ?williamChild .
  OPTIONAL { ?grandchild dbo:restingPlace ?grandchildRestingPlace . }

  # Resting place of the actor from a show with Emily Richard
  ?show dbo:actor ?emilyRichard .
  ?emilyRichard rdfs:label ""Emily Richard""@en .
  ?show dbo:actor ?actor .
  OPTIONAL { ?actor dbo:restingPlace ?actorRestingPlace . }

  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?awardee dbo:honoraryTitle ?knightGrandCross .
  ?knightGrandCross rdfs:label ""Knight Grand Cross of the Order of St Michael and St George""@en .
  OPTIONAL { ?awardee dbo:restingPlace ?awardeeRestingPlace . }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
659,62,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of Napoleonic Wars and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander WHERE {
  ?unit rdfs:label ""Polish Horse""@en .
  ?unit dbo:militaryConflict ?napoleonicWar .
  ?napoleonicWar rdfs:label ?warLabel .
  FILTER(CONTAINS(LCASE(?warLabel), ""napoleonic wars"")) .

  ?unit dbo:commander ?commander .
  
  OPTIONAL {
    ?otherWar rdf:type dbo:MilitaryConflict ;
              dbo:event ?event .
    ?commander dbo:commanderInMilitaryConflict ?otherWar .
  }
  
  ?officeHolder dbo:nativeCountry <http://dbpedia.org/resource/Kingdom_of_Ireland> ;
                dbo:positionHeld ?position .
  ?commander dbo:officeHolder ?officeHolder .
}
```",7,12,8,3,3,3,3,71,0,0,13,0,0.0,0
54,60,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?individual WHERE {
  ?thinkhaya rdfs:label ""Thinkhaya of Pagan""@en .
  ?child dbo:father ?thinkhaya .
  ?predecessor dbo:predecessor ?child .
  ?predecessor rdf:type dbo:OfficeHolder ;
               rdf:type dbo:Royalty .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
427,64,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to the name of the party of Michele Pinto and party of Giulio Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?prodiParty ?pintoParty ?andreottiParty WHERE {
  ?prodi rdfs:label ""Romano Prodi""@en .
  ?prodi dbo:party ?prodiParty .
  ?prodi dbo:officeHolder true .

  ?pinto rdfs:label ""Michele Pinto""@en .
  ?pinto dbo:party ?pintoParty .
  ?pinto dbo:officeHolder true .

  ?andreotti rdfs:label ""Giulio Andreotti""@en .
  ?andreotti dbo:party ?andreottiParty .
  ?andreotti dbo:officeHolder true .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
9,47,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?almaMater WHERE {
  # Find the mayor of Northern Ireland Forum and their alma mater
  ?mayor a dbo:Politician ;
         dbo:officeHolderOf ?forum .
  ?forum rdfs:label ""Northern Ireland Forum""@en .
  
  OPTIONAL { 
    ?mayor dbo:almaMater ?almaMater1 .
  }
  
  # Find the awardee of Royal Medals and their alma mater
  ?awardee dbo:awardReceived ?medal ;
           dbo:almaMater ?almaMater2 .
  ?medal rdfs:label ""Royal Medal""@en .

  FILTER(?almaMater1 = ?almaMater2)
  
  BIND(COALESCE(?almaMater1, ?almaMater2) AS ?almaMater)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
184,63,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild ?parentOfNative ?childOfJosephFrancis WHERE {
  # Archduke Joseph Karl's child and grandchild
  ?josephKarl dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .

  # Landmark details
  ?landmark a dbo:Settlement ;
            dbo:elevation ""96.0""^^xsd:float ;
            rdfs:label ?landmarkLabel .
  
  # Native of the landmark and their parent
  ?native dbo:nativePlace ?landmark .
  ?parentOfNative dbo:child ?native .

  # Archduke Joseph Francis's child
  ?josephFrancis dbo:child ?childOfJosephFrancis .

  # The person who is both a grandchild of Joseph Karl and parent to the native
  FILTER (?grandchild = ?parentOfNative)

  # Ensure this person is also related to Joseph Francis's child
  OPTIONAL { ?parentOfNative dbo:child ?childOfJosephFrancis }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
994,65,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Fredrik Thordendal's band
  ?meshuggah dbo:bandMember ?thordendal .
  ?thordendal rdfs:label ""Fredrik Thordendal""@en .

  # Step 2: Associated musical artist of Meshuggah
  OPTIONAL { ?meshuggah dbp:associatedBand ?associatedMeshuggah . }

  # Step 3: Don Dokken's band
  ?dokken dbo:bandMember ?dokkenPerson .
  ?dokkenPerson rdfs:label ""Don Dokken""@en .

  # Step 4: Associated musical artist of Dokken
  OPTIONAL { ?dokken dbp:associatedBand ?associatedDokken . }

  # Step 5: Watchtower's associated musical artist
  ?watchtower dbo:bandMember ?watchtowerPerson .
  ?watchtowerPerson rdfs:label ""Watchtower (band)""@en .
  OPTIONAL { ?watchtower dbp:associatedBand ?associatedWatchtower . }

  # Step 6: Associated musical artist of the result from step 5
  OPTIONAL { ?associatedWatchtower dbp:associatedBand ?finalArtist . }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
492,48,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?decedentWork ?decedentCapital WHERE {
  # Find the author of ""French Algeria""
  ?work rdfs:label ""French Algeria""@en .
  ?work dbo:author ?author .

  OPTIONAL {
    ?author dbo:work ?relatedWork .
    ?relatedWork dbo:decedent ?decedentWork .
  }

  # Find the capital city of Algeria
  ?country rdfs:label ""Algeria""@en .
  ?country dbo:capital ?capitalCity .
  
  FILTER EXISTS { ?capitalCity a dbo:Settlement } .

  OPTIONAL {
    ?capitalCity dbo:decedent ?decedentCapital .
  }
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
617,51,test,Give me the parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfChild ?spouse WHERE {
  # Part 1: Parent of the child of the commander in Battle of Panium
  ?battle dbo:commander ?commander .
  FILTER(STR(?battle) = ""Battle_of_Panium""^^xsd:string)
  
  OPTIONAL { 
    ?child dbo:parent ?parentOfChild .
    ?commander dbo:child ?child .
  }

  # Part 2: Spouse of the child of Antiochus III the Great
  ?antiochus rdfs:label ""Antiochus_III_the_Great""@en .
  
  OPTIONAL {
    ?childOfAntiochus dbo:parent ?antiochus .
    ?spouse dbo:spouse ?childOfAntiochus .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,61,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?professional WHERE {
  # Find actor of ""Unnatural (TV series)""
  ?tvSeries rdfs:label ""Unnatural (TV series)""@en .
  ?tvSeries dbo:actor ?actor .

  # Get the profession of this actor
  ?actor rdf:type ?professionType .
  
  # Find an alumnus of Ohio State University and their birth name
  ?alumnus dbo:alumnusOf <http://dbpedia.org/resource/Ohio_State_University> ;
           dbo:birthName ?birthName .

  # Find a person with the same birth name as this alumnus
  ?person dbo:birthName ?birthName .
  
  # Ensure that the profession of the actor matches the profession of the person found
  ?person rdf:type ?professionType .
}
```",6,6,7,3,2,3,3,71,0,0,3,0,0.0,0
378,36,test,"Give me the war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war ?commanderFame WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:participatedIn ?war .
  
  OPTIONAL {
    ?war dbo:commander ?commander .
    ?commander rdfs:label ""Thomas Trigge""@en .
    ?commander dbo:famousFor ?commanderFame .
  }
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
801,68,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  ?rapper foaf:name ""The Shadow""@en .
  ?rapper dbo:profession ?profession .
  FILTER(?profession IN (dbo:MusicalArtist, dbo:Rapper)) .

  ?song dbo:title ""40 Dayz & 40 Nightz""@en ;
        a dbo:Songs ;
        dbo:producer ?artist ;
        dbo:writer ?artist .

  ?artist a dbo:MusicalArtist .
}
```",8,14,9,3,3,3,3,71,0,0,8,0,0.0,0
547,52,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchildRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    ?williamHaliburton rdfs:label ""William Haliburton""@en .
    ?williamHaliburton dbo:child ?child1 .
    ?child1 dbo:child ?grandchild .
    OPTIONAL { ?grandchild dbo:restingPlace ?grandchildRestingPlace . }
  }

  UNION

  # Resting place of Alan Cunningham
  {
    ?alanCunningham rdfs:label ""Alan Cunningham""@en .
    OPTIONAL { ?alanCunningham dbo:restingPlace ?alanRestingPlace . }
    BIND(?alanRestingPlace AS ?grandchildRestingPlace)
  }

  UNION

  # Resting place of the actor of ""Enemy at the Door""
  {
    ?film rdfs:label ""Enemy at the Door""@en .
    ?film dbo:starring ?actor .
    OPTIONAL { ?actor dbo:restingPlace ?actorRestingPlace . }
    BIND(?actorRestingPlace AS ?grandchildRestingPlace)
  }
}
```",6,6,7,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
528,35,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?force ?war WHERE {
  # Part 1: Force of Narciso Campero Leyes
  OPTIONAL {
    ?person rdfs:label ""Narciso Campero Leyes""@en .
    ?person dbo:militaryForce ?force .
  }

  # Part 2: War of the Military Force at the Battle of Pisagua
  OPTIONAL {
    ?battle rdfs:label ""Battle of Pisagua""@en .
    ?battle dbo:militaryForce ?militaryForce .
    ?militaryForce dbo:participatedInWar ?war .
  }
}
```",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
92,70,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v7 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbo:birthName ""Joseph Michael"" .
  
  OPTIONAL { 
    ?person dbo:bandMember ?band .
  }
  
  OPTIONAL {
    ?person dbo:associatedBand <http://dbpedia.org/resource/Nevermore_(band)> .
  }

  OPTIONAL {
    ?film rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
    ?film dbo:actor ?person .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,62,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentIlona ?nativePerson ?parentNativePerson ?childOfChildLadislaus ?finalRoyalty
WHERE {
  # Step 1: Find the parent of Archduchess Ilona of Austria
  ?ilona dbo:spouse ?parentIlona .
  FILTER (CONTAINS(LCASE(?ilona), ""archduchess ilona of austria""))

  OPTIONAL {
    # Step 2: Find a settlement at elevation 96.0 and its notable native person
    ?settlement dbo:elevationAboveSeaLevel ?elevation ;
                rdfs:label ?settlementLabel .
    FILTER (?elevation = ""96.0""^^xsd:float)
    
    OPTIONAL {
      ?person dbo:nativePlace ?settlement ;
              rdfs:label ?personLabel .
      ?parentNativePerson dbo:spouse ?person .
    }
  }

  # Step 3: Find the child of the child of the parent of Archduke Ladislaus Philipp
  ?ladislaus dbo:child ?childLadislaus .
  FILTER (CONTAINS(LCASE(?ladislaus), ""archduke ladislaus philipp of austria""))
  
  OPTIONAL {
    ?grandChildLadislaus dbo:parent ?childLadislaus ;
                         rdfs:label ?grandChildLabel .
    
    OPTIONAL {
      ?finalRoyalty dbo:spouse ?grandChildLadislaus .
      FILTER (CONTAINS(LCASE(?finalRoyalty), ""royalty""))
    }
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
303,22,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party ?country WHERE {
  # Part 1: Find the party of the commander in the United States invasion of Panama
  ?operation dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(STR(?operation)), ""united states invasion of panama""))
  ?commander dbo:partyAffiliation ?party .

  # Part 2: Find the country of El Valle de Antón
  ?place rdfs:label ""El Valle de Antón""@en .
  ?place dbo:country ?country .
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
547,44,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actorRestingPlace ?jamesBurtonRestingPlace ?knightRestingPlace WHERE {
  # Resting place of the actor of ""Enemy at the Door""
  ?film dbo:title ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .
  FILTER(CONTAINS(LCASE(?actorLabel), ""enemy at the door""))
  OPTIONAL { ?actor dbo:deathPlace ?actorRestingPlace }

  # Resting place of James Burton (Egyptologist)
  ?jamesBurton rdfs:label ""James Burton""@en .
  ?jamesBurton dbo:occupation dbr:Egyptology .
  OPTIONAL { ?jamesBurton dbo:deathPlace ?jamesBurtonRestingPlace }

  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?knight rdfs:label ?knightLabel .
  ?knight dbo:honours dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  OPTIONAL { ?knight dbo:deathPlace ?knightRestingPlace }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
492,26,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?conflictCommander WHERE {
  # Find the commander of the Battle of Verdun
  ?verdunEvent a dbo:MilitaryEngagement ;
               rdfs:label ""Battle of Verdun""@en .
  
  ?verdunEvent dbo:commander ?verdunCommander .

  # Find other military conflicts/events where this commander was involved as a commander
  ?otherConflict a dbo:MilitaryEngagement ;
                 dbo:commander ?verdunCommander ;
                 rdfs:label ?conflictLabel .
  
  # Get the commander of that conflict/event
  ?otherConflict dbo:commander ?conflictCommander .

}
```",3,5,4,3,1,3,3,71,0,0,92,0,0.0,0
339,17,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?father WHERE {
  ?olga dbo:label ""Princess Olga of Greece and Denmark""@en .
  ?olga dbo:parent ?parent1 .
  ?parent1 dbo:child ?siblingOrOlga .
  ?siblingOrOlga dbo:parent ?parent2 .
  ?parent2 dbo:child ?georgeChild .
  ?georgeChild dbo:father ?father .
  ?georgeChild dbo:label ""George I of Greece""@en .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
959,21,test,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager ?almaMater WHERE {
  ?team dbo:season ""2013"" .
  ?team dbo:manager ?manager .
  ?manager rdfs:label ""Eiji Ōtsuka""@en .
  
  ?person rdfs:label ""Eiji Ōtsuka""@en .
  ?person dbo:almaMater ?almaMater .
  
  FILTER EXISTS { ?almaMater rdf:type dbo:EducationalOrganization }
  FILTER EXISTS { ?almaMater rdf:type dbo:University }
  FILTER EXISTS { ?almaMater rdfs:label ?label . 
                  BIND(STRLEN(?label) AS ?len)
                  FILTER(langMatches(lang(?label), ""ja"") && ?len > 0) }
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
427,71,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fatherParty ?michelePintoParty ?politicianParty WHERE {
  # Find the father's party of an MIT alumnus
  ?alumnus dbo:almaMater <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  OPTIONAL { 
    ?parent foaf:child ?alumnus .
    ?parent dbo:partyAffiliation ?fatherParty .
  }

  # Find Michele Pinto's party
  <http://dbpedia.org/resource/Michele_Pinto> dbo:partyAffiliation ?michelePintoParty .

  # Find the politician with birth name Romano Prodi
  ?politician foaf:name ""Romano Prodi""@en .
  ?politician dbo:birthName ""Romano Prodi"" .
  ?politician dbo:officeHolder true .
  ?politician dbo:partyAffiliation ?politicianParty .
}
```",9,11,10,3,3,3,3,71,0,0,2,0,0.0,0
281,55,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?heatherProfession ?bobBirthCountry ?awardee WHERE {
  # Heather Roy's profession as a military unit
  ?heather dbo:profession ?heatherProfession .
  FILTER EXISTS { ?heatherProfession rdf:type dbo:MilitaryUnit } .

  # Bob Heffron's birthplace country
  ?bob dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country ?bobBirthCountry .

  # Awardee of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:award ?orderAward .
  FILTER (str(?orderAward) = ""Knight Grand Cross of the Order of the Bath"") .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
16,46,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession ?spouse WHERE {
  # Find Satomi Ishihara's profession
  ?satomi rdfs:label ""Satomi Ishihara""@en .
  ?satomi dbo:occupation ?profession .

  # Find Ted McGinley by his birth name and get his spouse
  ?ted rdfs:label ""Ted McGinley""@en .
  ?ted dbo:spouse ?spouse .
}
```",5,5,6,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
959,50,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?manager ?country WHERE {
  # Takashi Sekizuka's team and its manager
  ?team dbo:member dbr:Takashi_Sekizuka .
  ?team dbo:coach ?manager .

  # Leader of the 2010 Japanese House of Councillors election
  ?leader rdfs:label ""Leader of the 2010 Japanese House of Councillors election""@en .
  ?leader dbo:residenceCountry ?country .
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
161,65,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?emilioMolaEvent ?francoEvent ?prietoPredecessorEvent WHERE {
  # Emilio Mola's event and military force
  ?event1 dbo:commander ?emilioMola .
  ?emilioMola rdfs:label ""Emilio Mola""@en .
  ?event1 a dbo:MilitaryConflict .

  # Francisco Franco's societal event, military conflict, and military force
  ?event2 dbo:commander ?franco .
  ?franco rdfs:label ""Francisco Franco""@en .
  ?event2 a dbo:SocietalEvent ;
          a dbo:MilitaryConflict .

  # Predecessor of Indalecio Prieto's event and military conflict
  ?prietoPredecessor dbo:predecessor ?indalecioPrieto .
  ?indalecioPrieto rdfs:label ""Indalecio Prieto""@en .
  ?event3 dbo:commander ?prietoPredecessor .
  ?event3 a dbo:MilitaryConflict ;
          a dbo:SocietalEvent .

}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
492,69,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander WHERE {
  ?war dbo:commander ?commander .
  ?herr dbo:participatedInMilitaryConflict ?war ;
        rdfs:label ""Frédéric-Georges Herr""@en .

  ?book dbo:author ?author .
  ?book rdfs:label ""French Algeria""@en .

  ?decedent foaf:mbox ?workLocation .
  ?workLocation dbo:location ?capital .
  ?capital dbo:country ?district .
  ?district rdfs:label ""Khemis Miliana District""@en .

  FILTER(?herr != ?commander)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
54,57,test,"Give me the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childOfThinkhaya WHERE {
  # Step 1: Find Thinkhaya of Pagan's child
  ?thinkhaya rdfs:label ""Thinkhaya""@en .
  ?thinkhaya dbo:child ?childOfThinkhaya .

  # Step 2: Find Thado Minsaw of Prome's parent and the child of this parent
  ?thadoMinsaw rdfs:label ""Thado Minsaw""@en .
  ?thadoMinsaw dbo:parent ?parentOfThadoMinsaw .
  ?parentOfThadoMinsaw dbo:child ?childOfParent .

  # Step 3: Find the predecessor of the child from step 2
  ?childOfParent dbo:predecessor ?predecessor .

  # Step 4: Identify office holder and royalty related to Thihapate of Mohnyin
  ?thihapate rdfs:label ""Thihapate""@en .
  ?officeHolder dbo:officeHolder ?thihapate ;
                a dbo:Royalty ;
                dbo:predecessor ?predecessor .

  # Step 5: Combine relationships to find the final answer
  FILTER (?childOfThinkhaya = ?parentOfThadoMinsaw)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,67,test,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entityInBadenWurttemberg WHERE {
  ?matthewBurland dbo:alterEgo ?fictionalCharacter .
  
  ?georgeKilbonNash dbo:almaMater ?almaMater .
  
  ?entityInBadenWurttemberg dbo:location dbc:Baden-Württemberg .
  
  OPTIONAL { ?fictionalCharacter dbo:relatedEntity ?entityInBadenWurttemberg . }
  OPTIONAL { ?almaMater dbo:relatedEntity ?entityInBadenWurttemberg . }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,55,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander WHERE {
  ?conflict a dbo:MilitaryConflict ;
            dbo:participant ?herr .
  ?herr rdfs:label ""Frédéric-Georges Herr""@en .
  
  ?satterthwaite rdfs:label ""Joseph C. Satterthwaite""@en ;
                 dbo:officeHolderOf ?role .
  ?role rdfs:label ""US Assistant Secretary of State for African Affairs""@en .

  ?capital rdfs:label ""Algiers""@en ;
           dbo:country dbr:Algeria .
  
  ?conflict dbo:commander ?commander .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
360,24,test,"Give me the reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?author ?nativePlace WHERE {
  # Find the director of ""Blinded by the Light""
  ?film rdfs:label ""Blinded by the Light""@en .
  ?film dbo:director ?author .

  # Find Winnie Madikizela-Mandela's death place
  ?person rdfs:label ""Winnie Madikizela-Mandela""@en .
  ?person dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find her native place (birthplace)
  OPTIONAL { 
    ?person dbo:nativePlace ?nativePlace .
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
959,39,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?nativeOfJapan WHERE {
  ?manager dbo:manager ?kashimaAntlers .
  FILTER(STRSTARTS(LCASE(?kashimaAntlers), ""kashima antlers""))
  FILTER(YEAR(?kashimaAntlers) = 1998)
  
  ?manager rdf:type dbo:SportsManager .

  ?team dbo:manager ?manager .
  
  ?person dbo:nationality <http://dbpedia.org/resource/Japan> .
  ?person rdfs:label ?nativeOfJapanLabel .
  FILTER(LANG(?nativeOfJapanLabel) = ""en"")
  
  OPTIONAL { ?person dbo:manager ?team . }
}
```",4,5,5,3,2,3,3,71,0,0,6,0,0.0,0
339,19,test,Give me the child of the child of Christian IX of Denmark and father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commonPerson WHERE {
  # Christian IX's children
  ?child1 dbo:spouse* ?christianIX .
  ?christianIX rdfs:label ""Christian IX of Denmark""@en .

  # Grandchildren of Christian IX (child of his child)
  ?grandchild dbo:parent ?child1 .

  # Princess Olga's parent and her father
  ?olgaParent dbo:spouse* ?princessOlga .
  ?princessOlga rdfs:label ""Princess Olga of Greece and Denmark""@en .
  
  ?father dbo:spouse ?olgaParent .
  FILTER (?father != ?olgaParent) # Ensure it's the father, not the mother

  # Match the common person
  VALUES ?commonPerson { ?grandchild ?father }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
55,25,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify the producer of ""Used to Love Her""
  ?song rdfs:label ""Used to Love Her""@en .
  ?song dbo:producer ?producer .

  # Step 2: Find a band member of the producer's band
  ?producerBand dbo:bandMember ?producerMember ;
               rdf:type dbo:MusicalArtist .
  
  OPTIONAL {
    ?producerMember dbo:band ?producerBand .
  }

  # Step 3: Identify Newsted's band
  ?newstedBand rdfs:label ""Metallica""@en .
  ?newstedBand dbo:bandMember ?newsted .

  FILTER(?newsted = <http://dbpedia.org/resource/Jason_Newsted>)

  # Step 4: Find a common band member who is also part of the San Francisco Symphony
  ?symphony rdfs:label ""San Francisco Symphony""@en .
  ?symphony dbo:musicalArtistGroup ?groupMember .

  FILTER(?producerMember = ?groupMember)
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
547,58,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?restingPlace WHERE {
  # Actor of ""Enemy at the Door""
  ?film rdfs:label ""Enemy at the Door""@en .
  ?film dbo:actor ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }

  UNION

  # James Burton (Egyptologist)
  ?person rdfs:label ""James Burton (Egyptologist)""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }

  UNION

  # Awardee of Gerald Graham's Award
  ?award rdfs:label ""Gerald Graham""@en ;
         dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:deathPlace ?restingPlace . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,59,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace ?deathPlace WHERE {
  # Saitō Hajime's birthplace and military conflict
  ?saitoHajime rdfs:label ""Saitō Hajime""@en .
  ?saitoHajime dbo:birthPlace ?birthPlace .

  OPTIONAL {
    ?conflict dbo:commander ?saitoHajime ;
              a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .
  }

  # Matsudaira Tadamasa's father
  ?matsudairaTadamasa rdfs:label ""Matsudaira Tadamasa""@en .
  ?father dbo:fatherOf ?matsudairaTadamasa ;
          a dbo:Politician, dbo:OfficeHolder .

  OPTIONAL {
    ?father dbo:deathPlace ?deathPlace .
  }
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
528,48,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?militaryForce ?war WHERE {
  ?person rdfs:label ""Narciso Campero Leyes""@en .
  OPTIONAL { ?person dbo:militaryForce ?militaryForce . }
  OPTIONAL {
    ?event dbo:societalEvent ?war ;
           dbo:country <http://dbpedia.org/resource/Chile> .
    FILTER (CONTAINS(LCASE(?war), ""war""))
  }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
488,51,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace ?administration WHERE {
  # Find Yūki Hideyasu's father who is a politician and his death place
  ?yukiHideyasu dbo:father ?father .
  ?father rdf:type dbo:Politician .
  OPTIONAL { ?father dbo:deathPlace ?deathPlace . }

  # Find Tokugawa Masako's spouse who is royalty, then find the administration of that spouse's father
  ?tokugawaMasako dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Royalty .
  ?spouse dbo:father ?royalFather .
  OPTIONAL { ?royalFather dbo:administration ?administration . }
  
  # Link Yūki Hideyasu and Tokugawa Masako to ensure they are the correct individuals
  ?yukiHideyasu rdfs:label ""Yūki Hideyasu""@en .
  ?tokugawaMasako rdfs:label ""Tokugawa Masako""@en .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,57,test,"Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?partitoPopolareItaliano ?fatherParty ?prodiBirthplaceParty
WHERE {
  # Reference to Partito Popolare Italiano
  ?party rdf:type dbo:PoliticalParty ;
         rdfs:label ""Partito Popolare Italiano""@en .
  
  BIND(?party AS ?partitoPopolareItaliano)

  OPTIONAL {
    # Find an alumnus of MIT and their father's party
    ?alumnus dbo:almaMater <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> ;
             dbo:father ?father .
    ?father dbo:partyAffiliation ?fatherParty .
  }

  OPTIONAL {
    # Find Romano Prodi's birthplace and associated party
    ?prodi rdf:type dbo:Politician ;
           rdfs:label ""Romano Antonio Prodi""@en ;
           dbo:birthPlace ?birthPlace .
    
    ?birthPlace dbo:country ?country .
    ?party2 rdf:type dbo:PoliticalParty ;
            dbo:country ?country .
    BIND(?party2 AS ?prodiBirthplaceParty)
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
498,8,test,"Give me the band of the member, that is an artist, of Mortician (band) and band of Malevolent Creation.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?band WHERE {
  ?person dbo:member ?morticianBand .
  ?morticianBand rdfs:label ""Mortician (band)""@en .
  
  OPTIONAL { 
    ?person dbo:artist ?artistRole .
  }
  
  OPTIONAL {
    ?person dbo:member ?malevolentCreationBand .
    ?malevolentCreationBand rdfs:label ""Malevolent Creation""@en .
  }

  FILTER EXISTS { ?person dbo:artist ?artistRole } .

  ?malevolentCreationBand dbo:band ?band .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
485,23,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?country ?birthRegion WHERE {
  # Part 1: Find the country in the region of Western European Time
  ?timeZone rdfs:label ""Western European Time""@en .
  ?region dbo:timeZone ?timeZone .
  ?place rdf:type dbo:Place .
  ?place dbo:locatedIn ?region .
  ?place dbo:country ?country .

  # Part 2: Find the region of birth for Joseph Whitaker (naturalist)
  ?whitaker rdfs:label ""Joseph Whitaker (naturalist)""@en .
  ?whitaker dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Region .
  BIND(?birthPlace AS ?birthRegion)

}
```",4,6,5,2,2,2,3,28,0,0,357,0,0.0,0
547,30,test,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?burialPlace WHERE {
  {
    ?person rdfs:label ""James Burton (Egyptologist)""@en .
    ?person dbo:burialPlace ?burialPlace .
  }
  UNION
  {
    ?person rdfs:label ""Simon Cadell""@en .
    ?person dbo:burialPlace ?burialPlace .
  }
  UNION
  {
    ?person dbo:award ?award .
    ?award rdfs:label ""Knight Grand Cross of the Order of St Michael and St George""@en .
    OPTIONAL { ?person dbo:burialPlace ?burialPlace . }
  }
}
```",4,4,5,2,3,3,3,71,0,62,1,0.0,0.0,0
492,40,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentAtWorkOfAuthor ?personDecedentAtAlgiers ?commanderInFrancoHovaWars WHERE {
  # Person decedent at the work of the author of ""French Algeria""
  ?work rdfs:label ""French Algeria""@en .
  ?work dbo:author ?author .
  ?author dbo:deathPlace ?deceasedPerson .

  BIND(?deceasedPerson AS ?personDecedentAtWorkOfAuthor)

  # Person decedent at Algiers
  ?individual dbo:deathPlace dbr:Algiers .
  BIND(?individual AS ?personDecedentAtAlgiers)

  # Commander in Franco-Hova Wars
  {
    SELECT DISTINCT ?commander WHERE {
      ?commander dbo:occupation ""Military commander""@en .
      ?commander dbo:wikiPageWikiLink dbr:Franco-Hova_Wars .
    }
  } UNION {
    SELECT DISTINCT ?commander WHERE {
      ?event dbo:participatedIn dbr:Franco-Hova_Wars .
      ?event dbo:agent ?commander .
    }
  }

  BIND(?commander AS ?commanderInFrancoHovaWars)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
54,66,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapateChild dbo:childOf ?thihapate .
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .
  
  FILTER EXISTS { ?thihapateChild dbo:officeHolder true . }
  FILTER EXISTS { ?thihapateChild dbo:royalty true . }

  # Find the predecessor of this child
  ?thihapateChild dbo:predecessor ?predecessor .

  # Narapati I of Ava's child
  ?narapatiIChild dbo:childOf ?narapatiI .
  ?narapatiI rdfs:label ""Narapati I of Ava""@en .

  # Soe Min Wimala Dewi's father and his child
  ?soeMinFather dbo:parentOf ?soeMinWimalaDewi .
  ?soeMinWimalaDewi rdfs:label ""Soe Min Wimala Dewi""@en .
  
  ?soeMinFatherChild dbo:childOf ?soeMinFather .

  # Ensure the predecessor is related to these individuals
  FILTER EXISTS { ?predecessor dbo:childOf ?narapatiIChild . }
  FILTER EXISTS { ?predecessor dbo:childOf ?soeMinFatherChild . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
92,50,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorMusicalArtist ?furneyBand WHERE {
  # Find the actor for ""Return to Nuke 'Em High Volume 1""
  ?movie dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:actor ?actor .

  # Check if this actor is also a musical artist
  OPTIONAL { 
    ?actor dbo:musicalArtist ?actorMusicalArtist .
  }

  # Find Joseph Michael Furney and his band
  ?furney foaf:name ""Joseph Michael Furney""@en .
  OPTIONAL {
    ?furney dbo:band ?furneyBand .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
54,27,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor WHERE {
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .
  
  ?child dbo:parent ?thihapate ;
         rdf:type dbo:RoyalPerson ;
         dbo:officeHolder ?office .

  ?office dbo:predecessor ?predecessor .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
314,25,test,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/restingPlace> ?v3 . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardee WHERE {
  # Sergei Makovetsky's awards
  ?award dbo:recipient ?makAwardee .
  ?makAwardee rdfs:label ""Sergei Makovetsky""@en .

  # Commander in Spanish Civil War
  ?commander dbo:commanderOf ?civilWar .
  ?civilWar rdfs:label ""Spanish Civil War""@en .
  
  # Person deceased at House of Sombrerete
  ?deceased dbo:deathPlace ?sombrereteHeadquarter .
  ?sombrereteHeadquarter rdfs:label ""House of Sombrerete""@en .

  # Ensure all conditions are met by a single individual
  FILTER (?makAwardee = ?commander && ?commander = ?deceased)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
767,60,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?settlement ?fictionalCharacter WHERE {
  # Find the writer of ""Where It's At"" by Dustin Lynch
  ?album rdfs:label ""Where It's At""@en .
  ?album dbo:artist dbr:Dustin_Lynch ;
         dbo:writer ?writer .

  # Find a settlement in the administration of the writer
  OPTIONAL { 
    ?settlement dbo:settlement ?adminArea .
    ?adminArea dbo:administrator ?writer .
  }

  # Identify Matthew Burland's alter ego
  ?person rdfs:label ""Matthew Burland""@en .
  ?person dbo:fictionalCharacter ?fictionalCharacter .

  # Ensure the settlement and fictional character are connected
  FILTER(?settlement != NULL && ?fictionalCharacter != NULL)
}
```",6,8,7,3,2,3,3,71,0,0,8,0,0.0,0
547,59,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchildRestingPlace ?actorRestingPlace WHERE {
  # Part 1: Resting place of the child of the child of William Haliburton
  ?williamHaliburton rdfs:label ""William Haliburton""@en .
  ?williamHaliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  OPTIONAL { ?grandchild dbo:restingPlace ?grandchildRestingPlace . }

  # Part 2: Resting place of the actor of the show with Emily Richard
  ?emilyRichard rdfs:label ""Emily Richard""@en .
  ?show dbo:actor ?emilyRichard ;
        dbo:castMember ?actor .
  OPTIONAL { ?actor dbo:restingPlace ?actorRestingPlace . }
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
251,27,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of Battle of Marengo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?deathPlace ?rulingPartyAdministration ?battleLocation WHERE {
  # Part 1: Death place of the author of ""The Twelve Abbots of Challant""
  ?author dbo:title ""The Twelve Abbots of Challant""@en .
  ?author dbo:deathPlace ?deathPlace .

  # Part 2: Administration of the ruling party in Sicily
  ?region rdfs:label ""Sicily""@en .
  ?region dbo:rulingParty ?party .
  ?party dbo:administration ?rulingPartyAdministration .

  # Part 3: Location of the Battle of Marengo
  ?battle rdfs:label ""Battle of Marengo""@en .
  ?battle dbo:location ?battleLocation .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
747,20,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person ?band WHERE {
  # Part 1: Find the person born on 1985-04-29
  ?person dbo:birthDate ""1985-04-29""^^xsd:date .
  
  # Part 2: Find the writer of the song ""Apollo"" by Hardwell and their band
  OPTIONAL {
    ?song rdfs:label ""Apollo (Hardwell song)""@en .
    ?song dbo:lyricsBy ?writer .
    ?writer dbo:band ?band .
  }
}
```",3,3,4,2,2,3,3,71,1,29,0,0.03333333333333333,1.0,0.06451612903225806
712,17,test,Give me the capital of South Russia (1919–1920) and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?capital ?restingPlace WHERE {
  # Capital of South Russia (1919–1920)
  ?city dbo:country dbr:Ukrainian_People%27s_Republic ;
        rdfs:label ""Kharkiv""@en .
  
  OPTIONAL { 
    ?city dbo:capital ?capital .
  }
  
  # Resting place of an awardee of the Soviet Union
  ?person dbo:awards dbr:Soviet_Order_of_Lenin ;
          dbo:deathPlace ?restingPlace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
16,56,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?person dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> .
  ?spouse rdfs:label ""Ted Martin McGinley""@en .
  ?spouse dbo:profession <http://dbpedia.org/ontology/Actress> .
  ?person dbo:spouse ?spouse .
  ?person rdfs:label ?birthName .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
959,54,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?member WHERE {
  # Eiji Ōtsuka's alma mater
  ?almaMater dbo:alumni ?eijiOotsuka .
  ?eijiOotsuka rdfs:label ""Eiji Ōtsuka""@en .

  # Alma mater is Japanese, an organization, a university, and an educational institution
  ?almaMater rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""japanese""))
  ?almaMater rdf:type dbo:University ;
             rdf:type dbo:EducationalOrganization .

  # Leader of the 2010 Japanese House of Councillors election
  ?electionEvent dbo:leader ?leader .
  ?electionEvent rdfs:label ""2010 Japanese House of Councillors election""@en .
  ?leader rdf:type dbo:Politician .

  # Country of residence for this leader
  ?leader dbo:nationality ?countryResidence .

  # Manager of the 2013 Júbilo Iwata season
  ?team dbo:manager ?member .
  ?team rdfs:label ""Júbilo Iwata""@en .
  ?season dbo:season ?year .
  ?season dbo:team ?team .
  ?year rdfs:label ""2013""@en .

  # Ensure the member is Japanese
  ?member dbo:nationality ?countryMember .
  FILTER (CONTAINS(LCASE(?countryMember), ""japanese""))
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
801,47,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?producer WHERE {
  ?artist rdf:type dbo:MusicalArtist ;
          dbo:alias ""The Shadow""@en .
  ?work dbo:musicalWork ?song ;
        dbo:performer ?artist ;
        a dbo:Songs .
  ?song dbo:producer ?producer .
}
```",5,9,6,3,2,3,3,71,0,0,473,0,0.0,0
488,70,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?administration ?birthPlace ?deathPlace WHERE {
  # Tokugawa Masako's spouse and their royal father
  ?spouse dbo:spouse ?masako .
  ?masako rdfs:label ""Tokugawa Masako""@en .
  
  ?father dbo:child ?spouse .
  ?father rdf:type dbo:Monarch .

  ?administration dbo:headOfGovernment ?father .

  # Boshin War commander's birthplace
  ?commander dbo:commandedMilitaryConflict ?boshinWar .
  ?boshinWar rdfs:label ""Boshin War""@en .
  
  ?birthPlace dbo:birthPlace ?commander .

  # Matsudaira Tadamasa's ancestry and the death place of his great-grandfather
  ?officeHolder dbo:child ?matsudairaTadamasa .
  ?matsudairaTadamasa rdfs:label ""Matsudaira Tadamasa""@en .
  
  ?politicianFather dbo:child ?officeHolder .
  ?politicianFather rdf:type dbo:Politician .

  ?deathPlace dbo:deathPlace ?politicianFather .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
285,16,test,Give me the parent of the child of Tina Onassis Niarchos and spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  ?tina rdfs:label ""Tina Onassis Niarchos""@en .
  ?child dbo:child ?tina .
  ?child dbo:parent ?parent .
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
659,70,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?polishHorse rdfs:label ""Polish Horse""@en .
  ?polishHorse a dbo:MilitaryUnit ;
               dbo:militaryConflict ?conflict .

  ?conflict dbo:commander ?welshCommander ;
            a dbo:MilitaryConflict .

  ?welshCommander rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .

  ?societalEvent dbo:militaryConflict ?conflict ;
                 a dbo:SocietalEvent .

  ?force dbo:societalEvent ?societalEvent ;
         a dbo:MilitaryForce .

  ?schimmelpenninck rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  ?force dbo:commander ?schimmelpenninck .
}
```",8,15,9,3,3,3,3,71,0,0,15,0,0.0,0
328,59,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander WHERE {
  ?person dbo:award ?award .
  ?award dbo:campaign [
    rdf:type dbo:MilitaryCampaign ;
    rdfs:label ""Volcano Campaign""@en ;
    dbo:location ?volcanoLocation
  ] .
  ?award dbo:campaign [
    rdf:type dbo:MilitaryCampaign ;
    rdfs:label ""Ryukyu Islands Campaign""@en ;
    dbo:location ?ryukyuLocation
  ] .

  ?person dbo:commanderOfForce ?force .
  ?force dbo:location ?budaLocation .
  ?budaLocation rdfs:label ""Budapest""@en .

  ?commander dbo:award ?award .
}
```",6,6,7,3,2,3,3,71,0,0,15,0,0.0,0
54,64,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?person WHERE {
  # Thinkhaya of Pagan and his child
  ?thinkhaya rdfs:label ""Thinkhaya""@en .
  ?thinkhaya dbo:child ?child1 .

  # Child of Thinkhaya's child (grandchild)
  ?child1 dbo:child ?grandchild .

  # Predecessor of the grandchild
  ?predecessor dbo:predecessor ?grandchild .

  # Ensure predecessor is an office holder and royalty
  ?predecessor rdf:type dbo:Monarch .
  ?predecessor dbo:officeHolder ?office .

  # Reference to Thihapate of Mohnyin
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .
  OPTIONAL { ?predecessor dbo:sibling|dbo:parent ?thihapate . }

  # Parent of Thado Minsaw of Prome
  ?thadoMinsaw rdfs:label ""Thado Minsaw of Prome""@en .
  ?predecessor dbo:child ?thadoMinsaw .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
232,61,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?native WHERE {
  ?person rdf:type dbo:Politician ;
          dbo:nationality dbc:France ;
          dbo:birthPlace ?birthPlace .
  ?person dbo:profession dbr:Actor ;
          dbo:claimToFame ?filmOrConflict .
  FILTER (CONTAINS(LCASE(STR(?filmOrConflict)), ""film"") || CONTAINS(LCASE(STR(?filmOrConflict)), ""military conflict""))
  
  OPTIONAL { ?person dbo:residence ?residence . }
  OPTIONAL { ?residence dbo:country dbc:United_Kingdom ;
                      rdfs:label ?settlementLabel .
              FILTER (CONTAINS(LCASE(STR(?settlementLabel)), ""settlement"")) }
  
  ?residence dbo:native ?native .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
184,45,test,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfGéza ?childOfParentOfMargaret ?childOfJosephAugust WHERE {
  # Géza von Habsburg's parent
  ?géza rdfs:label ""Géza von Habsburg""@en .
  ?géza dbo:parent ?parentOfGéza .

  # Archduchess Margaret of Austria (born 1925)
  ?margaret rdfs:label ""Archduchess Margaret of Austria (born 1925)""@en .
  ?margaret dbo:parent ?parentOfMargaret .
  
  # Child of the parent of Archduchess Margaret
  OPTIONAL {
    ?childOfParentOfMargaret dbo:parent ?parentOfMargaret .
  }

  # Archduke Joseph August of Austria's children
  ?josephAugust rdfs:label ""Archduke Joseph August of Austria""@en .
  ?childOfJosephAugust dbo:parent ?josephAugust .

}
```",5,5,6,3,3,3,3,71,1,5,0,0.16666666666666666,1.0,0.2857142857142857
747,58,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song) and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?bandOfWriter ?bandOfShena WHERE {
  # Part 1: Person born on 1985-04-29
  {
    SELECT ?person WHERE {
      ?person dbo:birthDate ""1985-04-29""^^xsd:date .
    }
  }

  UNION

  # Part 2: Band of the writer of Apollo (Hardwell song)
  {
    SELECT ?bandOfWriter WHERE {
      ?song dbo:lyricsAuthor ?writer .
      ?song rdfs:label ""Apollo""@en .
      ?writer dbo:bandMember ?bandOfWriter .
    }
  }

  UNION

  # Part 3: Band of the person born as the persona of Shèna
  {
    SELECT ?person ?bandOfShena WHERE {
      ?person foaf:nick ""Shèna"" .
      ?person dbo:birthDate ?date .
      OPTIONAL { ?person dbo:bandMember ?bandOfShena }
    }
  }
}
```",6,6,7,3,3,3,3,71,1,29,0,0.03333333333333333,1.0,0.06451612903225806
488,60,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  # Saitō Hajime's birthplace
  ?saitoHajime rdf:type dbo:MilitaryPerson .
  ?saitoHajime rdfs:label ""Saitō Hajime""@en .
  ?saitoHajime dbo:birthPlace ?birthPlace .

  OPTIONAL {
    # Saitō Hajime's military conflict
    ?militaryConflict rdf:type dbo:MilitaryConflict ;
                      dbo:commander ?saitoHajime ;
                      rdf:type dbo:Event ;
                      rdf:type dbo:SocietalEvent .
  }

  OPTIONAL {
    # Tokugawa Masako's spouse's father (a royalty figure)
    ?tokugawaMasako rdfs:label ""Tokugawa Masako""@en .
    ?spouse dbo:spouse ?tokugawaMasako ;
            dbo:father ?royaltyFather .

    ?royaltyFather rdf:type dbo:Royalty ;
                   dbo:administration ?administration .
  }
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
54,24,test,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Find a child of Narapati I of Ava
  ?narapatiI dbo:child ?child .
  FILTER (str(?narapatiI) = ""Narapati_I_of_Ava"") .

  # Find the parent of that child
  OPTIONAL { ?child dbo:parent ?parent . }

  # Find Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor
  ?ameittaThiri dbo:predecessor ?predecessor .
  FILTER (str(?ameittaThiri) = ""Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava"") .

  # Check if the parent is the same as the predecessor
  FILTER (?parent = ?predecessor)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
328,56,test,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander WHERE {
  # Commander in Eastern Front (World War II)
  ?commander dbo:militaryCommanderOf ?easternFront .
  ?easternFront rdfs:label ""Eastern Front (World War II)""@en .

  # Awardee of Bruce Fraser, 1st Baron Fraser of North Cape
  OPTIONAL {
    ?awards dbo:recipient ?commander ;
            dbo:awardTitle ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  }

  # Leader of a government agency
  OPTIONAL {
    ?agency dbo:head ?commander ;
            rdf:type dbo:GovernmentAgency .
  }

  # Leader of Gustav Jonson
  OPTIONAL {
    ?jonson foaf:name ""Gustav Jonson"" ;
            dbo:leader ?commander .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
534,17,test,"Give me the birth place of Garret FitzGerald and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?v3 . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
# Query to get the birth place of Garret FitzGerald
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Garret FitzGerald""@en .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query to get the headquarters of the owner of the venue for the 2012 Pro12 Grand Final
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?headquarters WHERE {
  ?event dbo:eventLocation ?venue .
  ?event rdfs:label ""2012 Pro12 Grand Final""@en .
  ?venue rdf:type ?type1, ?type2 .
  FILTER (?type1 = dbo:Venue && ?type2 = dbo:ArchitecturalStructure) .
  ?venue dbo:owner ?owner .
  ?owner dbo:headquarters ?headquarters .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,65,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander WHERE {
  ?unit rdfs:label ""Polish Horse""@en .
  ?war dbo:militaryUnit ?unit ;
       a dbo:MilitaryConflict .
  
  ?commander dbo:commanderOf ?war .

  ?welForce dbo:commander ?commander ;
            dbo:commander [rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en] .

  ?schimmEvent dbo:participatedIn ?commander ;
               a dbo:SocietalEvent , dbo:MilitaryConflict .
}
```",7,14,8,3,3,3,3,71,0,0,15,0,0.0,0
994,59,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Fredrik Thordendal's band
  ?meshuggah dbo:member ?thordendal .
  ?thordendal foaf:name ""Fredrik Thordendal""@en .

  # Step 2: Watchtower's associated musical artist
  ?watchtower dbp:associatedMusicalArtist ?johnZazula .
  ?johnZazula foaf:name ""John Zazula""@en .

  # Step 3: John Zazula's associated musical artist
  ?johnZazula dbp:associatedMusicalArtist ?metallica .
  ?metallica foaf:name ?metallicaName .

  # Step 4: Meshuggah members who are bands/groups/organizations
  ?meshuggah dbo:member ?member .
  ?member a dbo:Band ;
          a dbo:Organization .

  # Step 5: Associated musical artist of that member
  ?member dbp:associatedMusicalArtist ?associatedArtist .
}
```",6,10,7,3,2,3,3,71,0,0,5,0,0.0,0
712,20,test,"Give me the resting place of the awardee of the show of Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?restingPlace WHERE {
  # Step 1: Identify the military force related to Vyoshenskaya Uprising
  ?militaryForce rdfs:label ""Vyoshenskaya Uprising""@en .
  
  # Step 2: Find the country of this military force
  ?militaryForce dbo:country ?country .

  # Step 3: Determine the capital of that country
  ?capital dbp:capital ?country .

  # Step 4: Identify an awardee from a Soviet Union show
  ?awardee dbo:award ?show .
  ?show rdfs:label ""Soviet Union television program""@en .

  # Step 5: Find the resting place of this awardee
  ?awardee dbo:finalRestingPlace ?restingPlace .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
435,28,test,"Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?authorWork ?timeZoneRegion WHERE {
  # Find the Icelandic author known for writing about Iceland
  ?author dbo:nationality dbr:Iceland ;
          dbo:work ?authorWork .
  
  FILTER(CONTAINS(LCASE(?authorWork), ""iceland"")) .

  # Find Bombali Shebora Chiefdom and its time zone region
  ?chiefdom rdfs:label ""Bombali Shebora Chiefdom""@en .
  ?chiefdom dbo:timeZoneRegion ?timeZoneRegion .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
534,18,test,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex and headquarter of the owner of RDS Arena.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  # Step 1: Find native politician from Essex
  ?politician dbo:nationality ?essex ;
              a dbo:Politician .
  ?essex rdfs:label ""Essex""@en .

  # Step 2: Identify the owner of RDS Arena and its headquarters
  ?arena rdfs:label ""RDS Arena""@en .
  ?arena dbo:owner ?owner .
  ?owner dbo:headquartersLocation ?hqLocation .

  # Step 3: Find child who is a politician and office holder
  ?child dbo:parent ?politician ;
         a dbo:Politician ;
         dbo:officeHolder true .

  # Step 4: Retrieve the birth place of this child
  ?child dbo:birthPlace ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
339,18,test,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?fatherOfElenaChild ?grandchildOfPredecessor WHERE {
  # Find Grand Duchess Elena Vladimirovna of Russia's child
  ?elenaChild dbo:parent ?elena .
  ?elena rdfs:label ""Grand Duchess Elena Vladimirovna of Russia""@en .

  # Find the father of that child
  OPTIONAL { ?elenaChild dbo:father ?fatherOfElenaChild . }
  
  # Identify Frederick VIII's predecessor (Christian IX)
  ?frederickVIII dbo:predecessor ?predecessor .
  ?frederickVIII rdfs:label ""Frederick VIII of Denmark""@en .

  # Find the child of the predecessor
  OPTIONAL { ?childOfPredecessor dbo:parent ?predecessor . }

  # Find the grandchild of the predecessor
  OPTIONAL { ?grandchildOfPredecessor dbo:parent ?childOfPredecessor . }
  
  # Check if there is any connection between the father and the grandchild
  FILTER(?fatherOfElenaChild = ?grandchildOfPredecessor)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
666,20,test,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England and player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?nickname WHERE {
  ?coach rdf:type dbo:SoccerManager ;
         foaf:name ""Leonid Slutsky""@en .
  ?team dbo:manager ?coach ;
        a dbo:SoccerClub ;
        dbo:country ?country .
  OPTIONAL { ?team rdfs:label ?nickname . }
  FILTER(?country = dbpedia:England)
}
```",6,12,7,3,2,3,2,20,0,0,2,0,0.0,0
16,67,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional WHERE {
  # Step 1: Find the actor of ""Unnatural"" (TV series)
  ?unnaturalSeries rdfs:label ""Unnatural (TV series)""@en .
  ?unnaturalSeries dbo:actor ?actor .

  # Get the profession of this actor
  ?actor dbo:profession ?actorProfession .

  # Step 2: Find Ted McGinley's spouse
  ?tedMcGinley rdfs:label ""Ted McGinley""@en .
  ?tedMcGinley dbo:spouse ?spouse .

  # Get the birth name of this spouse
  ?spouse foaf:name ?birthName .

  # Step 3: Find an alumnus of Ohio State University with the same birth name
  ?alumnus dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> .
  ?alumnus foaf:name ?birthName .

  # Step 4: Find a professional in the same profession as the actor from ""Unnatural""
  ?professional dbo:profession ?actorProfession .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,52,test,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?warOfCrillon ?fameOfCrillon WHERE {
  ?crillon rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  OPTIONAL { 
    ?crillon dbo:participatedIn ?warOfCrillon .
    FILTER regex(str(?warOfCrillon), ""Peninsular War"", ""i"")
  }
  OPTIONAL {
    ?crillon rdfs:comment ?fameOfCrillon .
  }
}

UNION

SELECT DISTINCT ?warOfGahn WHERE {
  ?gahn rdfs:label ""Carl Pontus Gahn""@en .
  ?gahn dbo:participatedIn ?warOfGahn .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
328,60,test,"Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?campaign dbo:name ""Volcano and Ryukyu Islands campaign""@en .
  ?award dbo:relatedEvent ?campaign .
  ?award dbo:recipient ?awardee .

  ?office dbo:leader ?awardee ;
          rdf:type dbo:GovernmentAgency .

  ?awardee rdf:type dbo:OfficeHolder, dbo:Politician .

  ?gustavJonson dbo:associatedWith ?awardee ;
                rdf:type dbo:Person .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
391,60,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?native WHERE {
  ?jackson rdfs:label ""Jackson, Tennessee""@en .
  ?jackson dbo:nickName ?nickname .
  ?person rdfs:label ?nickname .
  ?movie dbo:actor ?person ;
         rdf:type dbo:Film ;
         rdf:type dbo:TelevisionSeries .
  ?person dbo:nativePlace ?native .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
184,46,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of Archduke Joseph Karl of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?parent WHERE {
  # Find the landmark at elevation 96.0 that is a settlement
  ?landmark rdf:type dbo:Settlement ;
            dbo:elevation ""96.0""^^xsd:float .
  
  # Identify a native of this landmark
  ?native dbo:nativePlace ?landmark .

  # Get the parent of this native
  ?parent dbo:child ?native .

  # Find Archduke Joseph Karl of Austria and his descendants
  ?archduke rdfs:label ""Archduke Joseph Karl of Austria""@en .
  
  # First child of the archduke
  ?firstChild dbo:child ?archduke .
  
  # Second child (grandchild) of the archduke
  ?secondChild dbo:child ?firstChild .

  # Find any connection between this grandchild and the parent identified earlier
  ?secondChild dbo:parent ?parent .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,53,test,Give me the spouse of the father of Merneptah and parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?merneptah dbo:father ?ramessesII .
  ?ramessesII rdfs:label ""Ramesses II""@en .
  
  ?ramessesII dbo:spouse ?spouse .

  OPTIONAL { 
    ?henuttawy dbo:parent ?spouse ;
               rdfs:label ""Henuttawy (19th dynasty)""@en .
  }

  OPTIONAL {
    ?amunHerKhepeshef dbo:childOf ?spouse ;
                      rdfs:label ""Amun-her-khepeshef""@en .
    
    ?spouseOfAmunHerKhepeshef dbo:spouse ?amunHerKhepeshef .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,46,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace ?birthPlace WHERE {
  # Part 1: Death place of Yūki Hideyasu's father
  ?yuki rdfs:label ""Yūki Hideyasu""@en .
  ?yuki dbo:father ?father .
  ?father rdf:type dbo:Politician .
  ?father dbo:deathPlace ?deathPlace .

  # Part 2: Birth place of Saitō Hajime's commander in war
  ?saito rdfs:label ""Saitō Hajime""@en .
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:Event ;
       rdf:type dbo:SocietalEvent .
  ?saito dbo:commanderInWar ?war .
  ?war dbo:commander ?commander .
  ?commander dbo:birthPlace ?birthPlace
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
659,35,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryForce WHERE {
  ?schimmelpenninck dbo:commander ?militaryForce .
  ?welshellsey dbo:commander ?militaryForce .
  
  VALUES ?schimmelpenninck { <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> }
  VALUES ?welshellsey { <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> }

  OPTIONAL {
    ?militaryForce dbo:participatedIn ?event .
    FILTER (rdf:type(?event, dbo:SocietalEvent) || rdf:type(?event, dbo:Event) || rdf:type(?event, dbo:MilitaryConflict))
  }
}
```",4,7,5,2,2,3,3,71,0,0,38,0,0.0,0
659,48,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?officeHolder rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  ?officeHolder dbo:country dbr:Kingdom_of_Ireland .
  
  OPTIONAL { 
    ?militaryForce dbo:commander ?commander .
    ?officeHolder dbo:militaryForce ?militaryForce .
  }
}
```",5,9,6,3,2,3,3,71,0,0,40,0,0.0,0
64,8,test,"Give me the alma mater of Jovan Hristić and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater ?country WHERE {
  # Part 1: Alma Mater of Jovan Hristić
  ?person rdfs:label ""Jovan Hristić""@en .
  ?person dbo:almaMater ?almaMater .

  # Part 2: Countries in the Central European Time zone
  ?country a dbo:Country ;
           dbo:timeZone ?timezone .
  FILTER(CONTAINS(LCASE(str(?timezone)), ""cet""))
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
232,41,test,"Give me the native of London and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?claimToFameFilm ?claimToFameConflict ?childOfJohn WHERE {
  ?sean a dbo:Actor ;
        rdfs:label ""Sean Pertwee""@en ;
        dbo:birthPlace ?london .
  
  OPTIONAL { ?sean dbo:claimToFame ?claimToFame . 
             ?claimToFame dbo:title ?claimToFameFilm ;
                          dbo:genre ?filmGenre .
             FILTER(?filmGenre = ""Film"") }
  
  OPTIONAL { ?sean dbo:claimToFame ?claimToFame2 .
             ?claimToFame2 dbo:title ?claimToFameConflict ;
                           dbo:genre ?conflictGenre .
             FILTER(?conflictGenre = ""Military conflict"") }

  ?john a dbo:Person ;
        rdfs:label ""John Devon Roland Pertwee""@en .

  ?sean dbo:childOf ?john .
  
  OPTIONAL { ?john dbo:child ?childOfJohn }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
92,62,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?associatedArtist WHERE {
  ?actor dbo:actorInFilm ?film .
  ?film rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
  
  ?artist dbo:birthPlace ?place .
  ?actor dbo:birthPlace ?place .

  ?bandMember dbo:bandMemberOf ?band .
  ?bandMember rdfs:label ?actorLabel .
  ?band rdfs:label ""Nevermore (2006 film)""@en .
  
  ?associatedArtist dbo:bandMember ?bandMember .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,25,test,Give me the native of Japan and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nativeCountry ?team WHERE {
  ?person rdfs:label ""Takashi Sekizuka""@en .
  ?person dbo:nationality ?nativeCountry .
  FILTER (lang(?nativeCountry) = 'ja') # Ensures the nationality is in Japanese
  OPTIONAL { 
    ?person dbo:manager ?team .
  }
}
```",3,3,4,2,2,3,3,71,0,0,6,0,0.0,0
427,61,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?party1 ?party2 WHERE {
  # Part 1: Party of Romano Prodi
  ?person rdfs:label ""Romano Prodi""@en .
  ?person dbo:birthName ?birthName .
  ?person dbo:officeHolder true .
  ?person dbo:politician true .
  OPTIONAL { ?person dbo:party ?party1 . }
  
  # Part 2: Party of the Father of an MIT Alumnus
  ?alumnus dbo:alumniOf <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?father dbo:child ?alumnus .
  OPTIONAL { ?father dbo:party ?party2 . }
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
626,18,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award ?conflict WHERE {
  ?yermolov rdfs:label ""Aleksey Petrovich Yermolov""@en .
  
  # Find the award received by Aleksey Petrovich Yermolov
  ?yermolov dbo:award ?award .

  # Find his role as a commander in a military conflict related to Battle of Paris (1814)
  ?battle rdfs:label ""Battle of Paris (1814)""@en .
  ?conflict rdfs:label ?conflictLabel .
  
  OPTIONAL {
    ?yermolov dbo:commanderOf ?conflict .
    FILTER(?conflict = ?battle || ?conflict != ?battle)
  }
}
```",5,6,6,3,2,3,2,20,3,1048574,20,2.8610202207372468e-06,0.13043478260869565,5.721914934197978e-06
959,48,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of Takashi Sekizuka.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?person dbo:birthYear ""1958""^^xsd:gYear .
  ?person dbo:managerOf ?team .
  ?team dbo:member Takashi_Sekizuka .

  ?person dbo:almaMater ?almaMater .
  
  FILTER(CONTAINS(LCASE(?almaMaterLabel), ""japan""))
  ?almaMater rdfs:label ?almaMaterLabel .
  ?almaMater rdf:type dbo:EducationalOrganization .
  ?almaMater rdf:type dbo:University .
  ?almaMater rdf:type dbo:Organisation .
}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
754,20,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of the parent of the parent of Min Linka.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Find a child of Ram Khamhaeng the Great
  ?child dbo:parent dbc:Ram_Khamhaeng_the_Great .
  
  # Step 2: Find the parent of that child
  ?childParent dbo:parent ?child .

  # Step 3: Trace back three generations for Min Linka
  ?minLinka dbo:birthName ""Min Linka"" .
  ?minLinkaParent dbo:parent ?minLinka .
  ?grandparent dbo:parent ?minLinkaParent .
  ?greatGrandparent dbo:parent ?grandparent .

  # Step 4: Find the common parent
  ?commonParent dbo:parent ?childParent .
  ?commonParent dbo:parent ?greatGrandparent .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
528,62,test,"Give me the force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?event WHERE {
  ?person rdfs:label ""Narciso Campero""@en .
  ?person dbo:commander ?force .
  
  ?event a dbo:MilitaryConflict ;
         dbo:location dbr:Chile ;
         dbo:date ?date .

  FILTER (STRSTARTS(STR(?date), ""-01-09""))

  OPTIONAL { ?force dbo:participatedIn ?event }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
767,70,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?settlement ?fictionalCharacter ?almaMater WHERE {
  # Find the settlement in Green's administration
  ?green dbo:administrativeRegion ?admin .
  ?admin dbo:settlement ?settlement .

  # Identify Matthew Burland's fictional character alter ego
  ?matthew rdfs:label ""Matthew Burland""@en .
  ?matthew dbo:fictionalCharacter ?fictionalCharacter .

  # Find George Kilbon Nash's alma mater and link it to the administration
  ?george rdfs:label ""George Kilbon Nash""@en .
  ?george dbo:almaMater ?almaMater .
  ?admin dbo:almaMater ?almaMater .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
392,25,test,"Give me the province of Schio and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?provinceOfSchio ?regionOfTimeZone ?cetCountry WHERE {
  # Province of Schio
  ?schio rdfs:label ""Schio""@en .
  ?schio dbo:administrativeUnit ?provinceOfSchio .

  # Region of the time zone for Aguilar de Segarra
  ?aguilar rdfs:label ""Aguilar de Segarra""@en .
  ?aguilar dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?regionOfTimeZone .

  # Entity in the region of Central European Time (CET)
  ?cetRegion rdfs:label ""Central European Time Zone""@en .
  ?cetRegion dbo:country ?cetCountry .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,23,test,"Give me the reference to the author of Blinded by the Light and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorOfBlindedByTheLight ?writerOfWorkAlbum WHERE {
  # Find the author of ""Blinded by the Light""
  ?song rdfs:label ""Blinded by the Light""@en .
  ?song dbo:lyricist|dbo:composer ?authorOfBlindedByTheLight .

  # Find the writer of an album titled ""Work"" by Dave Flett
  ?album rdfs:label ""Work (Dave Flett album)""@en .
  ?album dbo:artist ?writerOfWorkAlbum .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
547,45,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardeeRestingPlace ?jamesBurtonRestingPlace ?simonCadellRestingPlace WHERE {
  # Assuming we know the award and awardee relationship
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Award of Gerald Graham""@en .
  
  OPTIONAL { 
    ?awardee dbo:deathPlace ?awardeeRestingPlace .
  }
  
  ?jamesBurton rdfs:label ""James Burton (Egyptologist)""@en .
  ?jamesBurton dbo:deathPlace ?jamesBurtonRestingPlace .

  ?simonCadell rdfs:label ""Simon Cadell""@en .
  ?simonCadell dbo:deathPlace ?simonCadellRestingPlace .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
391,51,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  # Find Michael Ballhaus and his films
  ?ballhaus rdfs:label ""Michael Ballhaus""@en .
  ?film dbo:director ?ballhaus ;
        a dbo:Film .

  # Find actors in those films
  ?film dbo:starring ?actor .

  OPTIONAL {
    # Check if the film is also categorized as a television show
    ?film a dbo:TelevisionShow .
  }
}
```",5,9,6,3,2,3,3,71,0,0,11,0,0.0,0
391,59,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?native WHERE {
  ?hormann a dbo:Person ;
           foaf:surname ""Hormann"" .
  ?hormann dbo:spouse ?spouse .
  
  ?work dbo:actor ?actor .
  ?actor dbo:claimToFame ?work .
  
  ?place rdfs:label ""Jackson, Tennessee""@en .
  ?place dbo:nickname ?nickname .
  
  ?figure rdfs:label ?nickname ;
          dbo:nativeCountryOrRegion ?native .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,66,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professional WHERE {
  # Satomi Ishihara's profession
  ?satomi rdfs:label ""Satomi Ishihara""@en .
  ?satomi dbo:profession ?profession .

  # Ted Martin McGinley's spouse
  ?ted rdfs:label ""Ted Martin McGinley""@en .
  ?ted dbo:spouse ?spouse .

  # Alumnus of Ohio State University and their birth name
  ?alumnus dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> .
  ?alumnus dbo:birthName ?birthName .

  # Ensure the professional is the same person as Ted's spouse and the alumnus' birth name
  FILTER (?spouse = ?professional && ?professional rdfs:label ?birthName)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
421,22,test,Give me the native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?native WHERE {
  ?person rdfs:label ""Samir Bekrić""@en .
  ?person dbo:birthPlace ?place .
  ?native dbo:nativeOf ?place .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
54,30,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .
  
  ?child dbo:parent ?thihapate ;
         dbo:officeHolder true ;
         dbo:royalty true .

  ?adoMinsaw dbo:parent ?child ;
             rdfs:label ""Thado Minsaw of Prome""@en .

  ?thinkhaya rdfs:label ""Thinkhaya of Pagan""@en .
  
  ?child dbo:parent ?thinkhaya .

  ?child dbo:predecessor ?predecessor .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,53,test,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war1 ?commander ?claimToFame ?war2 WHERE {
  # Joaquín Blake's war involvement
  ?joaquin a dbo:MilitaryPerson ;
           rdfs:label ""Joaquín Blake""@en .
  ?joaquin dbo:participatedIn ?war1 .

  # Commander in the Great Siege of Gibraltar and their claim to fame
  ?siege dbo:commander ?commander ;
         rdfs:label ""Great Siege of Gibraltar""@en .
  ?commander dbo:claimToFame ?claimToFame .

  # Carl Pontus Gahn's war involvement
  ?carl a dbo:MilitaryPerson ;
        rdfs:label ""Carl Pontus Gahn""@en .
  ?carl dbo:participatedIn ?war2 .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
801,59,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?artist rdf:type dbo:MusicalArtist .
  ?artist dbo:musicalGenre dbc:Hip_hop_music .
  ?artist dbo:alias ?alterEgo .
  ?alterEgo rdfs:label ""The Shadow""@en .
  
  ?work dbo:creator ?artist ;
        a dbo:Song, dbo:Work .

  OPTIONAL { ?work dbo:producer ?producer }
}
```",6,10,7,3,2,3,3,71,0,0,473,0,0.0,0
767,68,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?gothamCity ?middleTennesseeStateUniversity ?princetonUniversity WHERE {
  # Gotham City as Batman's fictional city
  ?batman dbo:fictionalResidence ?gothamCity .
  ?gothamCity rdfs:label ""Gotham City""@en .

  # Middle Tennessee State University as Dustin Lynch's alma mater
  ?dustinLynch dbo:almaMater ?middleTennesseeStateUniversity .
  ?middleTennesseeStateUniversity rdfs:label ""Middle Tennessee State University""@en .

  # Princeton University associated with George Kilbon Nash
  ?georgeKilbonNash dbo:positionHeld ?princetonUniversity .
  ?princetonUniversity rdfs:label ""Princeton University""@en .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,66,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?producer WHERE {
  ?album rdfs:label ""What U See Is What U Get""@en .
  ?album dbo:producer ?producer .

  OPTIONAL { 
    ?producer rdfs:label ""The Shadow""@en .
  }

  ?writer dbo:associatedMusicalArtist ?producer ;
          a dbo:MusicArtist, dbo:Artist .

  FILTER EXISTS {
    ?producer rdfs:label ?producerLabel .
    FILTER regex(?producerLabel, ""The Shadow"", ""i"")
  }
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
378,32,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war WHERE {
  # Part 1: Wars involving a Peninsular War commander (e.g., Arthur Wellesley)
  OPTIONAL {
    ?commander rdfs:label ""Arthur Wellesley""@en .
    ?commander dbo:participatedIn ?war .
  }
  
  # Part 2: Wars associated with Carl Pontus Gahn
  OPTIONAL {
    ?person rdfs:label ""Carl Pontus Gahn""@en .
    ?person dbo:birthPlace ?birthPlace .
    ?person dbo:deathPlace ?deathPlace .
    ?person dbo:participatedIn ?war .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
9,23,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?organisation dbo:locationCity ""Belfast"" .
  ?organisation dbo:mayor ?mayor .
  ?mayor rdf:type dbo:Politician .
  ?mayor dbo:almaMater ?almaMater .
}
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
328,53,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person WHERE {
  ?person dbo:commanderOf ?easternFront .
  ?easternFront rdfs:label ""Eastern Front (World War II)""@en .

  OPTIONAL { 
    ?office dbo:head ?person ;
            dbo:leader ""Joseph Stalin""@en .
  }

  OPTIONAL {
    ?award dbo:recipient ?person ;
           dbo:campaign [dbo:name ""Volcano and Ryukyu Islands campaign""@en] .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,70,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person WHERE {
  # Joseph C. Satterthwaite's role
  ?satterthwaite rdfs:label ""Joseph C. Satterthwaite""@en .
  ?satterthwaite dbo:positionHeld ?role .
  ?role rdfs:label ""Assistant Secretary of State for African Affairs""@en .

  # Commander in the Battle of Verdun
  ?battle rdfs:label ""Battle of Verdun""@en .
  ?battle dbo:commander ?commander .
  
  # Ensure commander is involved in a military conflict (event)
  ?conflict dbo:event ?battle .
  ?conflict rdf:type dbo:MilitaryConflict .

  # Decedent at the capital of Khemis Miliana District
  ?district rdfs:label ""Khemis Miliana District""@en .
  ?district dbo:capital ?capital .
  ?capital rdf:type dbo:Settlement .
  
  ?decedent dbo:deathPlace ?capital .
  
  # Linking all together to find the person who fits all criteria
  FILTER (?commander = ?person && ?decedent = ?person)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
184,70,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?individual WHERE {
  # Archduke Ladislaus Philipp of Austria's parent and their child who is royalty
  ?ladislaus dbo:parent ?parent1 .
  ?parent1 dbo:child ?royaltyChild .
  ?royaltyChild rdf:type dbo:Royal .

  # Archduchess Margaret of Austria (born 1925) and her child's parent
  ?margaret rdfs:label ""Archduchess Margaret of Austria""@en .
  ?margaret dbo:birthday ?birthday .
  FILTER(YEAR(?birthday) = 1925)
  ?margaret dbo:child ?child1 .
  ?child1 dbo:parent ?parent2 .

  # The individual must be a parent of someone native to Budapest
  ?individual dbo:parent ?nativeChild .
  ?nativeChild dbo:nationality <http://dbpedia.org/resource/Budapest> .

  # Combine conditions
  FILTER(?royaltyChild = ?individual)
  FILTER(?parent2 = ?individual)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
492,58,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Decedent at French Algeria
  ?place1 rdfs:label ""French Algeria""@en .
  ?person dbo:decedent ?place1 .

  # Decedent at the capital of Khemis Miliana District
  ?district rdfs:label ""Khemis Miliana District""@en .
  ?capital dbo:capital ?district ;
           a dbo:Settlement .
  ?person dbo:decedent ?capital .

  # Commander in a war involving Frédéric-Georges Herr
  ?war dbo:eventType dbo:MilitaryConflict ;
       dbo:commander ?person ;
       dbo:participantFrédéric-GeorgesHerr ?herr .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,50,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Identify Antiochus IV Epiphanes
  ?antiochusIV rdfs:label ""Antiochus IV Epiphanes""@en .
  
  # Find his successor
  ?successor dbo:predecessor ?antiochusIV .

  # Find the child of the successor
  ?child dbo:parent ?successor .

  # Determine the spouse of this child
  ?spouse dbo:spouse ?child .

  # Ensure the spouse is royalty (optional, based on available data)
  OPTIONAL { ?spouse rdfs:label ?label . FILTER regex(?label, ""royalty"", ""i"") }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
345,18,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15 and figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.","SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?team ?nickname WHERE {
  ?person rdfs:label ""Armando Heeb""@en .
  ?person dbo:birthDate ?birthdate .
  FILTER (YEAR(?birthdate) = 1978 && MONTH(?birthdate) = 9 && DAY(?birthdate) = 15)
  ?person dbo:soccerPlayer ?playerRole .
  ?person dbo:soccerManager ?managerRole .
  OPTIONAL { ?person dbo:team ?team . }
  OPTIONAL { ?team rdfs:label ?nickname . FILTER (lang(?nickname) = ""en"") }
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
528,59,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war ?commander WHERE {
  ?militaryForce dbo:participatedIn ?war .
  ?war a dbo:MilitaryConflict ;
       dbo:location ?location .
  ?location rdfs:label ""Chile""@en .
  
  OPTIONAL { 
    ?war dbo:commander ?commander .
  }
}
```",6,7,7,3,2,3,3,71,0,0,14,0,0.0,0
281,50,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?militaryUnit ?birthPlaceCountry WHERE {
  # Heather Roy's profession and related military unit
  ?heather dbo:profession ?profession .
  FILTER (str(?heather) = ""Heather_Roy"") .
  
  OPTIONAL {
    ?profession rdfs:subClassOf* dbo:MilitaryUnit .
    ?militaryUnit rdf:type ?profession .
  }
  
  # Leader of the 1962 New South Wales state election and their birthplace country
  ?election dbo:leader ?leader .
  FILTER (str(?election) = ""1962_New_South_Wales_state_election"") .

  OPTIONAL {
    ?leader dbo:birthPlace ?birthPlace .
    ?birthPlace dbo:country ?birthPlaceCountry .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,52,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country ?nzWar ?awardWar WHERE {
  # Bob Heffron's birthplace country
  ?heffron dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country ?country .

  FILTER(?heffron = <http://dbpedia.org/resource/Bob_Heffron>)

  # New Zealand Army wars
  ?nzArmy dbo:participatedInWar ?nzWar .

  FILTER(?nzArmy = <http://dbpedia.org/resource/New_Zealand_Army>)

  # Jonathon Band's award and associated war
  ?band dbo:award ?award .
  ?award dbo:relatedTo ?war .
  BIND(?war AS ?awardWar)
  
  FILTER(?band = <http://dbpedia.org/resource/Jonathan_Band>)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,48,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leader WHERE {
  ?office dbo:leader ?leader .
  ?stalin dbo:positionHeld ?office .
  FILTER(STR(?stalin) = ""Joseph Stalin"") .

  ?award dbo:awardee ?leader .
  ?campaign dbo:relatedAward ?award .
  FILTER(CONTAINS(LCASE(STR(?campaign)), ""volcano"") && CONTAINS(LCASE(STR(?campaign)), ""ryukyu islands""))
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
391,71,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v1 . ?v7 <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v8 <http://dbpedia.org/property/starring> ?result . ?v8 <http://dbpedia.org/property/starring> ?v7 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v4 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?native WHERE {
  ?nickname rdfs:label ""Nickname of Jackson, Tennessee""@en .
  ?figure dbo:nickName ?nickname ;
          dbo:birthPlace ?place .
  ?movie dbo:starring ?figure ;
         a dbo:Film ;
         dbo:workExample ?tvShow .
  ?spouse dbo:spouseOfSherryHormann ?figure .
  ?claimToFame dbo:claimToFame ?spouse .
  ?place rdfs:label ?native .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
659,24,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  ?regiment dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         dbo:partOf ?war .
  ?war rdfs:label ""Napoleonic Wars""@en .
  ?regiment dbo:commander ?commander .
}
```",3,5,4,2,2,3,3,71,0,0,29,0,0.0,0
232,62,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?jonPertwee foaf:name ""Jon Pertwee""@en .
  ?child dbo:parent ?jonPertwee ;
         dbo:birthPlace ?london ;
         rdf:type dbo:Actor ;
         dbo:profession dbo:Narrator ;
         dbo:profession dbo:Producer .

  ?claimToFame dbo:associatedWith ?film ;
               dbo:associatedWith ?conflict .
  
  ?child dbo:claimToFame ?claimToFame .

  ?film dbo:actor ?actor .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
659,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?event1 rdf:type dbo:SocietalEvent .
  ?event1 rdf:type dbo:Event .
  ?event1 rdf:type dbo:MilitaryConflict .
  ?event1 dbo:commander ?schimmelpenninck .

  ?schimmelpenninck rdfs:label ""Rutger Jan Schimmelpenninck""@en .

  ?war rdf:type dbo:Event .
  ?war rdf:type dbo:MilitaryConflict .
  ?war dbo:commander ?polishHorseCommander .

  ?polishHorseCommander rdfs:label ""Polish Horse""@en .
  
  ?officeHolder dbo:nativeCountry ?kingdomOfIreland .
  ?kingdomOfIreland rdfs:label ""Kingdom of Ireland""@en .
  ?officeHolder dbo:commanderInForce ?militaryForce .

  OPTIONAL { ?event1 dbo:militaryForce ?militaryForce }
}
```",9,17,10,3,3,3,3,71,0,0,15,0,0.0,0
427,46,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?michelePartyLabel ?fatherPartyLabel WHERE {
  # Find the party of Michele Pinto
  ?michele a dbo:Person ;
           rdfs:label ""Michele Pinto""@en .
  ?michele dbo:party ?micheleParty .
  ?micheleParty rdfs:label ?michelePartyLabel .

  # Find the father of Lamberto Andreotti and his party
  ?lamberto a dbo:Person ;
            rdfs:label ""Lamberto Andreotti""@en .
  ?lamberto dbo:father ?father .
  ?father a dbo:Person ;
          rdfs:label ?fatherLabel .
  ?father dbo:party ?fatherParty .
  ?fatherParty rdfs:label ?fatherPartyLabel .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
161,62,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor ?commander ?militaryForce1 ?decedent ?militaryForce2 WHERE {
  # Find Indalecio Prieto's predecessor in a political context
  ?prieto dbo:officeHolderOf ?position .
  ?prieto dbp:predecessor ?predecessor .

  # Biscay Campaign details
  ?campaign rdfs:label ""Biscay Campaign""@en ;
            dbo:commander ?commander ;
            dbo:militaryForce ?militaryForce1 .

  # Ensure the campaign is a societal event and military conflict
  ?campaign rdf:type ?type .
  FILTER (?type = dbp:SocietalEvent || ?type = dbo:MilitaryConflict) .

  # Find a person who died during Francoist Spain
  ?decedent dbo:deathPlace ?place ;
           dbo:causeOfDeath ?cause .
  ?place rdfs:label ""Francoist Spain""@en .

  # Military force associated with the decedent's event
  ?event rdf:type ?eventType .
  FILTER (?eventType = dbp:SocietalEvent || ?eventType = dbo:MilitaryConflict) .
  ?decedent dbo:militaryForce ?militaryForce2 ;
            dbo:participatedIn ?event .

}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
435,25,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v4 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?territory WHERE {
  ?country rdfs:label ""Iceland""@en .
  ?country dbo:officialName ?name .
  FILTER(CONTAINS(LCASE(?name), ""land of fire and ice"")) .
  
  OPTIONAL { 
    ?constitution rdfs:label ""Constitution of Iceland""@en .
    ?article rdfs:label ""Article 62, Section IV""@en .
    ?constitution dbo:part ?article .
  }
  
  ?territory dbo:country ?country .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,35,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?heatherRoyMilitaryUnit ?knightGrandCrossMilitaryUnit WHERE {
  # Heather Roy's profession-related military unit
  ?heatherRoy dbo:profession ?profession .
  OPTIONAL { ?profession dbo:militaryUnit ?heatherRoyMilitaryUnit . }

  # Knight Grand Cross of the Order of the Bath and their military unit
  ?knightGrandCross dbo:title ""Knight Grand Cross of the Order of the Bath"" .
  OPTIONAL { ?knightGrandCross dbo:militaryUnit ?knightGrandCrossMilitaryUnit . }
}
```",4,5,5,2,2,3,3,71,0,0,9,0,0.0,0
281,69,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?awardWar ?militaryUnitWar ?birthCountry WHERE {
  # Jonathon Band's award and associated war
  ?award dbo:recipient ""Jonathon Band"" .
  ?award dbo:associatedWar ?awardWar .

  # Military unit in New Zealand Army that is an office holder and politician
  ?unit dbo:militaryUnit ?militaryUnit ;
        rdfs:label ""New Zealand Army""@en .
  OPTIONAL { ?unit dbo:officeHolder ?officeHolder . }
  OPTIONAL { ?unit dbo:politician ?politician . }
  ?unit dbo:associatedWar ?militaryUnitWar .

  # Bob Heffron's birthplace country
  ?heffron dbo:birthPlace ?birthPlace .
  ?heffron rdfs:label ""Bob Heffron"" .
  ?birthPlace dbo:country ?birthCountry .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
547,69,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchildRestingPlace ?awardeeRestingPlace ?actorRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  ?william dbo:child ?child .
  FILTER (str(?william) = ""William_Haliburton"")
  ?child dbo:child ?grandchild .
  OPTIONAL { ?grandchild dbo:finalRestingPlace ?grandchildRestingPlace . }

  # Resting place of the awardee of the award of Gerald Graham
  ?gerald dbo:award ?award .
  FILTER (str(?gerald) = ""Gerald_Graham"")
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:finalRestingPlace ?awardeeRestingPlace . }

  # Resting place of the actor of Enemy at the Door
  ?movie rdfs:label ""Enemy at the Door""@en .
  ?movie dbo:actor ?actor .
  OPTIONAL { ?actor dbo:finalRestingPlace ?actorRestingPlace . }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
492,65,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?decedent1 ?decedent2 ?warCommander WHERE {
  # Joseph C. Satterthwaite's decedent
  ?officeHolder dbo:officeHolderPosition [
    rdfs:label ""US Assistant Secretary of State for African Affairs""@en ;
    dbo:decedent ?decedent1 .
  ].
  FILTER(STR(?officeHolder) = STR(<http://dbpedia.org/resource/Joseph_C._Satterthwaite>)).

  # Decedent at the capital of Algeria
  ?capital rdfs:label ""Algiers""@en ;
           dbo:country <http://dbpedia.org/resource/Algeria> .
  ?decedent2 dbo:placeOfBirth ?capital .

  # Commander in Battle of Verdun and related war
  ?battle dbo:eventParticipant [
    a dbo:MilitaryCommander ;
    rdfs:label ?warCommander .
  ].
  FILTER(STR(?battle) = STR(<http://dbpedia.org/resource/Battle_of_Verdun>)).

  ?war dbo:militaryConflictParticipant ?battle .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
981,16,test,"Give me the entity in the region of Time in Indonesia and birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person ?birthPlace WHERE {
  ?region rdfs:label ""Time""@en .
  ?region dbo:country dbr:Indonesia .
  
  ?person dbo:birthPlace ?birthPlace ;
          dbo:locatedInRegion ?region .

  OPTIONAL { 
    ?event dbo:winner ?person .
    ?event rdf:type dbo:BeautyContest .
  }
}
```",4,5,5,2,2,3,2,20,0,0,19,0,0.0,0
391,35,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?nativePlace WHERE {
  ?city rdfs:label ""Hub City""@en .
  ?actor dbo:nativePlace ?nativePlace .
  ?production dbo:starring ?actor ;
              dbo:starring [dbo:name ""Roz Ryan""@en] .
  ?movie dbo:title ?title .
  ?tvShow dbo:title ?title .
  FILTER EXISTS { ?production rdf:type dbo:Film . }
  FILTER EXISTS { ?production rdf:type dbo:TelevisionSeries . }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
485,27,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlace WHERE {
  ?awardee dbo:award ""Eric Gregory Award""@en .
  ?awardee rdf:type dbo:Writer ;
           rdf:type dbo:Poet .
  
  ?awardee dbo:birthPlace ?birthPlace .

  OPTIONAL { 
    ?whitaker rdfs:label ""Joseph Whitaker (naturalist)""@en .
    ?whitaker dbo:birthPlace ?region .
    FILTER EXISTS { ?region dbo:country dbp:United_Kingdom }
    
    ?birthPlace rdfs:seeAlso ?region .
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
435,23,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of the author of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?territory WHERE {
  ?iceland rdfs:label ""Iceland""@en .
  ?iceland a dbo:Civilization ;
           dbo:administrativeTerritory ?territory .
  ?territory a dbo:Settlement, dbo:Town .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
378,42,test,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?carlWar ?joaquinCommander1 ?joaquinCommander2 WHERE {
  # Find the war associated with Carl Pontus Gahn
  ?person dbo:birthName ""Carl Pontus Gahn""@en .
  OPTIONAL { ?person dbo:militaryConflict ?carlWar . }

  # Find Joaquín Blake's command in the Great Siege of Gibraltar and another war
  ?joaquin dbo:birthName ""Joaquín Blake y Joyes""@en .
  ?joaquin dbo:commanderOfMilitaryConflict ?joaquinCommander1 .
  FILTER(?joaquinCommander1 rdfs:label = ""Great Siege of Gibraltar""@en)
  
  OPTIONAL { 
    ?joaquin dbo:commanderOfMilitaryConflict ?joaquinCommander2 .
    FILTER(?joaquinCommander2 != ?joaquinCommander1)
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
360,25,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v3 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?albumWriter ?deathPlace WHERE {
  ?album dbo:writer ?writer .
  ?writer rdfs:label ""Dave Flett""@en .
  OPTIONAL { 
    ?album dbo:referenceManfredMann ?manfredReference .
  }
  
  ?person dbo:deathPlace ?deathLocation .
  ?person rdfs:label ""Winnie Madikizela-Mandela""@en .
  ?deathLocation a dbo:Settlement .

  BIND(?writer AS ?albumWriter)
  BIND(?deathLocation AS ?deathPlace)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
318,9,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  # Find the profession of Robert Xavier Rodriguez
  ?robert a dbo:Person ;
          rdfs:label ""Robert Xavier Rodríguez""@en .
  ?robert dbo:profession ?profession .

  # Find the founding year of Eel Pie Publishing
  ?eelPie a dbo:Company ;
          rdfs:label ""Eel Pie Publishing""@en .
  ?eelPie dbo:foundingYear ?foundingYear .

  # Find a person born in that founding year
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate .
  BIND(YEAR(?birthDate) AS ?birthYear)
  
  FILTER (?birthYear = ?foundingYear)
}
```",4,4,5,2,2,2,2,9,0,0,7,0,0.0,0
701,55,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfChildOfRamessesII WHERE {
  # Step 1: Find a child of Ramesses II
  ?child dbo:father dbr:Ramesses_II .
  
  # Step 2: Find the parent of this child (should be Ramesses II)
  ?child dbo:motherOrFather ?parentOfChildOfRamessesII .

  OPTIONAL {
    # Step 3: Identify the father of Merneptah
    dbr:Merneptah dbo:father dbr:Ramesses_II .
    
    # Step 4: Find the spouse of Ramesses II (Nefertari)
    ?spouse dbo:spouse dbr:Ramesses_II .
    FILTER(?spouse = dbr:Nefertari) .

    # Step 5: Identify a child of Nefertari
    ?childOfNefertari dbo:motherOrFather ?spouse .
    
    # Step 6: Find the parent of this child (should be Ramesses II)
    ?childOfNefertari dbo:motherOrFather ?parentOfChildOfRamessesII .
  }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
285,20,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfChild ?spouseOfProfessional WHERE {
  # Aristotle Onassis and his spouse
  ?aristotleOnassis rdfs:label ""Aristotle Onassis""@en .
  ?aristotleOnassis dbo:spouse ?spouse .

  # Child of the spouse
  OPTIONAL { ?spouse dbo:child ?child . }

  # Parent of the child (could be Aristotle Onassis or his spouse)
  OPTIONAL { ?child dbo:parent ?parentOfChild . }
  
  # Stan Lee's award and associated professional
  ?stanLee rdfs:label ""Stan Lee""@en .
  ?stanLee dbo:award ?award .
  ?professional dbo:award ?award .
  ?professional dbo:spouse ?spouseOfProfessional .

}
```",6,6,7,3,2,3,2,20,3,18,0,0.14285714285714285,1.0,0.25
487,18,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of the person born on 1955-01-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?administration1 ?country1 ?administration2 ?country2 WHERE {
  # Part 1: Philip Brian Scott's administration
  ?person rdfs:label ""Philip Brian Scott""@en .
  ?person dbo:soccerPlayer true .
  OPTIONAL { ?person dbo:team ?administration1 . }
  OPTIONAL { ?administration1 dbo:country ?country1 . }

  # Part 2: Person born on 1955-01-26
  ?person2 dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1955 && MONTH(?date) = 1 && DAY(?date) = 26)
  OPTIONAL { ?person2 dbo:team ?administration2 . }
  OPTIONAL { ?administration2 dbo:country ?country2 . }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
465,9,test,"Give me the death place of the native of Prague and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?deathPlace WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Prague""@en .
  
  ?party dbo:leader ?person ;
         dbo:administrates ?chamber .
  
  ?chamber rdfs:label ""Chamber of Deputies of the Czech Republic""@en .
  
  ?person dbo:deathPlace ?deathPlace .
}
```",4,6,5,2,2,2,2,9,0,0,8,0,0.0,0
161,69,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?event WHERE {
  # Francisco Largo Caballero's military force during a societal event and military conflict
  ?person dbo:societalEvent ?societalEvent .
  ?person dbo:militaryConflict ?militaryConflict .
  ?militaryConflict dbo:participatingMilitaryUnit ?militaryForce1 .

  FILTER (?person = <http://dbpedia.org/resource/Francisco_Largo_Caballero>)

  # Francisco Largo Caballero's military force during a societal event and military conflict
  ?person2 dbo:militaryConflict ?militaryConflict2 .
  ?militaryConflict2 dbo:participatingMilitaryUnit ?militaryForce2 .

  FILTER (?person2 = <http://dbpedia.org/resource/Francisco_Largo_Caballero>)

  # El Director's event as a commander
  ?figure rdfs:label ""El Director""@en .
  ?figure dbo:event ?event .
  ?event dbo:commander ?commander .

  FILTER (?commander = <http://dbpedia.org/resource/Francisco_Largo_Caballero>)
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
488,28,test,Give me the death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace ?administration ?birthPlace WHERE {
  # Death place of Tokugawa Ieyasu
  ?tokugawaIeyasu rdfs:label ""Tokugawa Ieyasu""@en .
  ?tokugawaIeyasu dbo:deathPlace ?deathPlace .

  # Administration of Emperor Go-Yōzei
  ?goYozei rdfs:label ""Emperor Go-Yōzei""@en .
  ?goYozei dbo:reign ?administration .

  # Birth place of a commander in the Boshin War (e.g., Saigō Takamori)
  ?commander rdfs:label ""Saigō Takamori""@en .
  ?commander dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
701,68,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v5 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Seti I's grandchildren and their parents
  ?setiIChild dbo:child ?merneptah .
  ?merneptah dbo:child ?grandchild1 .
  ?grandchild1 dbo:parent ?parent .

  OPTIONAL {
    # Ramesses II's spouse
    ?ramessesII rdfs:label ""Ramesses II""@en .
    ?ramessesIISpouse dbo:spouse ?ramessesII .
    
    # Amun-her-khepeshef's spouse and their child
    ?amunHerKhepeshefSpouse dbo:spouse ?amunHerKhepeshef .
    ?childOfAmunHerKhepeshef dbo:parent ?amunHerKhepeshefSpouse .
    ?childOfAmunHerKhepeshef dbo:parent ?parent2 .

    # Ensure the parent is common
    FILTER (?parent = ?parent2)
  }
}
```",8,8,9,3,3,3,3,71,0,8337,1,0.0,0.0,0
754,19,test,Give me the parent of the parent of May Hnin Htapi and parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grandparentMayHninHtapi ?parentChildRamKhamhaeng WHERE {
  # Part 1: Parent of the parent of May Hnin Htapi
  OPTIONAL {
    ?mayHninHtapi dbo:parent ?parentMayHninHtapi .
    ?parentMayHninHtapi dbo:parent ?grandparentMayHninHtapi .
    VALUES ?mayHninHtapi { <http://dbpedia.org/resource/May_Hnin_Htapi> }
  }

  # Part 2: Parent of the child of Ram Khamhaeng the Great
  OPTIONAL {
    ?ramKhamhaeng dbo:child ?childRamKhamhaeng .
    ?childRamKhamhaeng dbo:parent ?parentChildRamKhamhaeng .
    VALUES ?ramKhamhaeng { <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> }
  }
}
```",5,5,6,3,2,3,2,20,1,0,0,1.0,1.0,1.0
701,51,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?battle rdfs:label ""Battle of Perire""@en .
  ?battle dbo:commander ?commander .

  ?father dbo:child ?commander .
  
  ?spouse dbo:spouse ?father ;
          a dbo:RoyalFamilyMember .  # Assuming there's a class for royalty

  ?ramesses rdfs:label ""Ramesses II""@en .
  ?child dbo:parent ?ramesses ;
         dbo:parent ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
747,48,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  # Find Tracey Elizabeth McSween's birth date
  ?tracey a dbo:Person ;
          rdfs:label ""Tracey Elizabeth McSween""@en .
  ?tracey dbo:birthDate ?traceyBirthDate .

  # Find the decedent who is an athlete and soccer player from Zolotonosha
  ?decedent a dbo:Person ;
            dbo:sport ?sport ;
            dbo:nationalityPlace ?place .
  ?place rdfs:label ""Zolotonosha""@en .
  FILTER(?sport = dbo:Soccer)
  
  # Get the decedent's birth date
  ?decedent dbo:birthDate ?decedentBirthDate .

  # Find a person born on the same date as the decedent
  ?person a dbo:Person ;
          dbo:birthDate ?decedentBirthDate .
  
  # Check if this person is an athlete and soccer player, then find their band
  OPTIONAL {
    ?person dbo:sport ?sport .
    FILTER(?sport = dbo:Soccer)
    ?person dbo:band ?band .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,52,test,"Give me the manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  # Find the manager of Júbilo Iwata in 2013
  ?team dbo:manager ?manager .
  ?team rdfs:label ""Júbilo Iwata""@en .
  
  # Find Yōichi Masuzoe's residence and its country
  dbr:Yōichi_Masuzoe dbo:residence ?residence .
  ?residence dbo:country ?country .

  # Find the alma mater of a person born in 1958, ensuring it is Japanese
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1958)
  ?person dbo:almaMater ?university .
  
  # Ensure the university is Japanese and an educational institution
  ?university rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""japan"") && 
          CONTAINS(LCASE(STR(?university)), ""university"") &&
          CONTAINS(LCASE(STR(?university)), ""educational institution""))
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
16,68,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  ?gigiResource rdfs:label ""Gigi Rice""@en .
  ?gigiResource dbo:birthName ?birthName .

  # Find Ted McGinley's spouse
  ?tedResource rdfs:label ""Ted McGinley""@en .
  ?tedResource dbo:spouse ?spouse .

  # Identify the actor from Unnatural TV series and ensure their profession is an actor
  ?unnaturalActor dbo:actor ?unnaturalRole .
  ?unnaturalRole rdfs:label ""Unnatural (TV series)""@en .
  ?unnaturalActor dbo:profession ?profession .
  FILTER(?profession = <http://dbpedia.org/ontology/Actor>)

  # Find the person who matches all criteria
  ?person dbo:birthName ?birthName ;
          dbo:spouse ?spouse .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
328,57,test,"Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:awardee dbr:Order_of_Suvorov .
  
  ?commanderInForce dbo:location dbr:Budapest .
  ?commanderInForce dbo:commanderInForce ?person .

  ?office dbo:leaderOf ?person ;
          a dbo:GovernmentAgency ;
          dbo:headOfState dbr:Joseph_Stalin .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
161,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?militaryForce3 WHERE {
  # Part 1: Military force of Francoist Spain
  ?event1 dbo:socialEvent true .
  ?event1 dbo:militaryConflict true .
  ?event1 dbo:associatedMilitaryForce ?militaryForce1 .
  ?militaryForce1 rdfs:label ""Francoist Spain""@en .

  # Part 2: Military force of the predecessor of Indalecio Prieto
  ?personIndalecio dbo:predecessor ?predecessor .
  ?event2 dbo:socialEvent true .
  ?event2 dbo:militaryConflict true .
  ?event2 dbo:associatedMilitaryForce ?militaryForce2 .
  ?predecessor rdfs:label ""Indalecio Prieto""@en .

  # Part 3: Commander in the force of El Director
  ?figureElDirector rdfs:label ""El Director""@en .
  ?event3 dbo:event true .
  ?event3 dbo:commander ?commander .
  ?commander dbo:associatedMilitaryForce ?militaryForce3 .
}
```",9,15,10,3,3,3,3,71,0,0,32,0,0.0,0
915,17,test,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?grandparent WHERE {
  ?lizzie rdfs:label ""Lizzie Spaulding""@en .
  ?lizzie dbo:childOf ?parent .
  
  ?parent a dbo:FictionalCharacter ;
          dbo:soapCharacter true .

  ?parent dbo:childOf ?grandparent .
  
  ?grandparent a dbo:FictionalCharacter ;
               dbo:soapCharacter true ;
               dbo:residence ?springfieldResidence .
               
  ?springfieldResidence rdfs:label ""Springfield, Illinois""@en .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
617,46,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Find children of Antiochus III the Great
  ?childAntiochusIII a dbo:Person ;
                     dbo:parent ""Antiochus III the Great""@en .

  # Step 2: Find grandchildren of Antiochus III the Great
  ?grandchildAntiochusIII a dbo:Person ;
                          dbo:parent ?childAntiochusIII ;
                          dbo:royalty true .

  # Step 3: Get spouse of these royal grandchildren
  ?spouseAntiochusIII dbo:spouse ?grandchildAntiochusIII .

  UNION

  # Step 4: Find successors of Antiochus II Theos who are royalty
  ?successorAntiochusII a dbo:Person ;
                        dbo:royalty true ;
                        dbo:predecessor ""Antiochus II Theos""@en .

  # Step 5: Find grandchildren of these royal successors
  ?grandchildSuccessor a dbo:Person ;
                       dbo:parent ?successorAntiochusII ;
                       dbo:royalty true .

  # Step 6: Get spouse of these royal grandchildren
  ?spouseSuccessor dbo:spouse ?grandchildSuccessor .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
767,38,test,Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgo ?almaMater WHERE {
  # Find the alter ego of Black Hood
  ?character rdfs:label ""Black Hood""@en .
  ?character dbo:alias ?alterEgo .

  # Find the alma mater of George K. Nash
  ?person foaf:name ""George K. Nash"" .
  ?person dbo:almaMater ?almaMater .

  # Check if the alter ego matches the alma mater
  FILTER(?alterEgo = ?almaMater)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
161,67,test,"Give me the military force of Rif War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?rifWarMilitaryForce ?rifWarCommander ?caballeroPredecessor ?caballeroConflict WHERE {
  # Rif War and El Director (Abd el-Krim)
  ?rifWar dbo:militaryConflict ?rifWarEvent .
  ?rifWarEvent rdfs:label ""Rif War""@en .
  
  ?rifWarMilitaryForce dbo:commander ?rifWarCommander .
  ?rifWarCommander rdfs:label ""El Director""@en .

  # Francisco Largo Caballero's predecessor and related conflict
  ?caballeroPredecessor dbo:predecessor ?franciscoLargoCaballero .
  ?franciscoLargoCaballero rdfs:label ""Francisco Largo Caballero""@en .

  ?caballeroConflict dbo:militaryConflict ?societalEvent .
  ?societalEvent rdf:type dbo:SocietalEvent ;
                 dbo:militaryConflict ?militaryConflict .
}
```",7,10,8,3,3,3,3,71,0,0,11,0,0.0,0
767,55,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?almaMater ?settlement ?alterEgo WHERE {
  # Alma mater of George K. Nash
  ?nash a dbo:Person ;
        foaf:name ""George K. Nash""@en .
  ?nash dbo:almaMater ?almaMater .

  OPTIONAL {
    # Entity in the administration of Green that is a settlement
    ?green a dbo:Person ;
           foaf:name ""Green""@en .
    ?administration dbo:member ?green ;
                    dbo:settlement ?settlement .
    FILTER EXISTS { ?settlement a dbo:Settlement }
  }

  OPTIONAL {
    # Alter ego of Black Hood
    ?blackHood a dbo:Character ;
               rdfs:label ""Black Hood""@en .
    ?alterEgo dbo:alias ?blackHood .
    ?alterEgo rdfs:label ?alterEgoLabel .
  }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
429,8,test,"Give me the administration of Andrew Johnson and country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration ?country WHERE {
  # Find Andrew Johnson's administration
  ?person rdfs:label ""Andrew Johnson""@en .
  ?person dbo:president ?administration .

  # Find the country of the military force involved in the Camden Expedition
  ?expedition rdfs:label ""Camden Expedition""@en .
  ?expedition dbo:militaryConflict ?conflict .
  ?conflict dbo:country ?country .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
701,48,test,Give me the spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?merneptah dbo:father ?father .
  FILTER(STR(?merneptah) = ""Merneptah"") .

  ?father dbo:spouse ?spouse .

  OPTIONAL { 
    ?amunHerKhepeshef dbo:spouse ?spouse2 .
    FILTER(STR(?amunHerKhepeshef) = ""Amun-her-khepeshef"") .

    ?child dbo:parent ?spouse2 .
    
    ?parent dbo:parent ?child .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,55,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find band members of Donald Maynard Dokken (Dokken)
  ?dokken dbo:birthName ""Donald Maynard Dokken""@en .
  ?dokken dbo:associatedBand ?dokkenBand .
  ?dokkenBand dbo:bandMember ?bandMember .

  # Step 2: Find associated musical artists of Watchtower
  ?watchtower dbp:name ""Watchtower (band)""@en .
  ?watchtower dbo:associatedMusicalArtist ?watchtowerArtist .

  # Step 3: Find band members of Meshuggah who are also bands or organizations
  ?meshuggah dbp:name ""Meshuggah""@en .
  ?meshuggah dbo:bandMember ?meshuggahBandMember .
  FILTER EXISTS { ?meshuggahBandMember a dbo:Band . }
  FILTER EXISTS { ?meshuggahBandMember a dbo:Organization . }

  # Step 4: Find common entities among the results
  VALUES ?commonEntity {
    ?bandMember
    ?watchtowerArtist
    ?meshuggahBandMember
  }
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
747,26,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?band WHERE {
  ?work dbo:author dbr:Amba_Shepherd .
  ?work rdf:type dbo:Songs .
  ?work dbo:band ?band .
}
```",3,4,4,3,1,3,3,71,0,0,13,0,0.0,0
528,30,test,Give me the war of Irene Morales and force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?war ?birthPlace WHERE {
  # Irene Morales wars
  OPTIONAL {
    ?irene rdfs:label ""Irene Morales""@en .
    ?irene dbo:participatedIn ?war .
    BIND(?irene AS ?person)
  }
  
  # Narciso Campero Leyes birthplace and wars
  OPTIONAL {
    ?narciso rdfs:label ""Narciso Campero Leyes""@en .
    ?narciso dbo:birthPlace ?birthPlace .
    ?narciso dbo:participatedIn ?war .
    BIND(?narciso AS ?person)
  }
  
  # Orozimbo Barbosa wars
  OPTIONAL {
    ?orozimbo rdfs:label ""Orozimbo Barbosa""@en .
    ?orozimbo dbo:participatedIn ?war .
    BIND(?orozimbo AS ?person)
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
378,30,test,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?carlPontusGahnWar ?joaquinBlakeClaimToFame WHERE {
  # Carl Pontus Gahn's War
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL { 
    ?person dbo:participatedIn ?carlPontusGahnWar .
  }

  # Joaquín Blake's Claim to Fame in the Great Siege of Gibraltar and other wars
  ?joaquinBlake rdfs:label ""Joaquín Blake y Joyes""@en .
  
  OPTIONAL {
    ?siege dbo:commander ?joaquinBlake ;
           rdfs:label ""Great Siege of Gibraltar""@en .
    BIND(""Commander in the Great Siege of Gibraltar"" AS ?joaquinBlakeClaimToFame)
  }
  
  OPTIONAL {
    ?war dbo:participatedIn ?joaquinBlake .
    FILTER NOT EXISTS { 
      ?siege dbo:commander ?joaquinBlake .
    }
    BIND(""Participated in "" + str(?war) AS ?joaquinBlakeClaimToFame)
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
16,58,test,Give me the spouse of Ted McGinley and professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse ?professionPerson ?personWithSameBirthName WHERE {
  # Part 1: Spouse of Ted McGinley
  ?tedMcGinley dbo:spouse ?spouse .
  FILTER (str(?tedMcGinley) = ""Ted_McGinley"")

  # Part 2: Professional in the profession of Satomi Ishihara
  ?satomiIshihara dbo:profession ?profession .
  ?professionPerson dbo:profession ?profession .
  FILTER (str(?satomiIshihara) = ""Satomi_Ishihara"")
  
  # Part 3: Person born as the birth name of an alumnus of Ohio State University
  ?alumnus dbo:alumniOf <http://dbpedia.org/resource/Ohio_State_University> .
  ?alumnus foaf:name ?birthName .
  ?personWithSameBirthName foaf:name ?birthName .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,27,test,Give me the child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?spouse .
  
  OPTIONAL { ?spouse dbo:father ?father . }
  
  OPTIONAL { ?father dbo:child ?child . }
}
```",3,3,4,3,1,3,3,71,3,44098,0,6.802566835219156e-05,1.0,0.00013604208235080717
281,65,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?leader dbo:electedDuring ?election .
  ?election rdfs:label ""1962 New South Wales state election""@en .
  
  ?leader dbo:award ?orderOfBath .
  ?orderOfBath rdfs:label ""Knight Grand Cross of the Order of the Bath""@en .

  ?heather dbp:profession ?militaryUnit .
  ?militaryUnit a dbo:MilitaryUnit .
  
  ?war dbo:participant ?leader ;
       dbo:participant ?heather .
  
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
  ?birthPlace rdfs:label ?country .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,49,test,"Give me the professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professional ?associatedArtist WHERE {
  ?shadow dbo:alterEgo ?writer .
  FILTER (CONTAINS(LCASE(?shadow), ""the shadow""))
  
  ?writer dbo:associatedMusicalArtist ?artist .
  ?artist a dbo:MusicalArtist ;
          a dbo:Artist .

  OPTIONAL { 
    ?album rdfs:label ""What U See Is What U Get""@en .
    ?album dbo:work ?musicalWork .
    ?musicalWork a dbo:MusicalWork ;
                 a dbo:Work .
  }

  BIND(?writer AS ?professional)
  BIND(?artist AS ?associatedArtist)
}
```",5,9,6,3,2,3,3,71,0,0,22,0,0.0,0
659,58,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander ?militaryForce WHERE {
  # Find commanders in the 1813 German campaign
  ?campaign dbo:eventType ?eventType .
  FILTER(?eventType IN (dbo:MilitaryConflict, dbo:SocietalEvent)) .
  ?campaign rdfs:label ""German campaign of 1813""@en .
  
  ?commander dbo:commanderOf ?campaign .
  
  # Link to Rutger Jan Schimmelpenninck
  ?schimmelpenninck dbo:commanderIn ?relatedCampaign .
  FILTER(?relatedCampaign != ?campaign) .
  ?schimmelpenninck rdfs:label ""Rutger Jan Schimmelpenninck""@en .

  # Find military force related to the 1st Light Cavalry Lancers Regiment
  OPTIONAL {
    ?commander dbo:militaryForce ?militaryForce .
    ?regiment dbo:participatedIn ?campaign .
    ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  }
}
```",6,11,7,3,3,3,3,71,0,0,7,0,0.0,0
294,26,test,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?keeblesRestingPlace ?marionsBirthSettlement ?awardeesRestingPlace WHERE {
  # Resting place of Edwin A. Keeble
  ?keeblesDeathPlace dbo:deathOf ?edwinAkeeble .
  ?edwinAkeeble rdfs:label ""Edwin A. Keeble""@en .
  ?keeblesDeathPlace rdf:type dbo:BurialSite .

  # Entity in the birth place of Marion James that is a settlement
  ?marionsBirthPlace dbo:birthPlaceOf ?marionJames .
  ?marionJames rdfs:label ""Marion James""@en .
  ?marionsBirthPlace rdf:type dbo:PopulatedPlace .

  # Resting place of an awardee who is a politician and received the Distinguished Service Medal (U.S. Army)
  ?awardeesDeathPlace dbo:deathOf ?politicianAwardee .
  ?politicianAwardee dbo:occupation ?occupation .
  ?occupation rdfs:label ""Politician""@en .
  ?awardeesDeathPlace rdf:type dbo:BurialSite .

  ?award dbo:recipient ?politicianAwardee ;
         dbo:name ?awardName .
  FILTER(CONTAINS(LCASE(?awardName), ""distinguished service medal (u.s. army)""))
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
16,22,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse ?person WHERE {
  # Query for the spouse of Ted McGinley
  {
    ?tedMcGinley rdfs:label ""Ted McGinley""@en .
    ?tedMcGinley dbo:spouse ?spouse .
  }
  
  UNION
  
  # Query for a person born as Gigi Rice
  {
    ?person dbo:birthName ""Gigi Rice"" .
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
801,61,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?producer WHERE {
  ?album rdfs:label ""What U See Is What U Get""@en .
  ?song dbo:partOfAlbum ?album ;
        a dbo:Songs .
  ?producer dbo:produced ?song .
  ?rapper dbo:musicalArtist ?song ;
          a dbo:Rapper .
  ?writer dbo:associatedMusicalArtist ?rapper ;
          a dbo:MusicalArtist, dbo:Artist .
}
```",6,14,7,3,2,3,3,71,0,0,9,0,0.0,0
182,23,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war ?entity WHERE {
  # Find the author of the 2019 Sri Lanka Easter bombings and their associated war
  ?author dbo:associatedWithEvent dbr:2019_Sri_Lanka_Easter_bombings .
  OPTIONAL { ?author dbo:participatedInWar ?war . }

  # Find Tamara Kunanayakam's nationality and related entity
  dbr:Tamara_Kunanayakam dbo:nationality ?nationality .
  ?entity rdfs:label ?nationalityLabel .
  FILTER(LANG(?nationalityLabel) = ""en"")
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
303,26,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?arnulfoParty ?commanderParty WHERE {
  # Arnulfo Arias Madrid's party
  ?arnulfo a dbo:Politician ;
           rdfs:label ""Arnulfo Arias Madrid""@en .
  OPTIONAL { ?arnulfo dbp:partyAffiliation ?arnulfoParty . }
  
  # Commander during the United States Invasion of Panama
  ?invasion dbo:commander ?commander ;
            rdfs:label ""United States invasion of Panama""@en .
  ?commander a dbo:Politician ;
             rdfs:label ?commanderLabel .
  OPTIONAL { ?commander dbp:partyAffiliation ?commanderParty . }
  
  # Ensure Arnulfo Arias Madrid is associated with Panama
  ?arnulfo dbo:nationality <http://dbpedia.org/resource/Panama> .

  FILTER(lang(?arnulfoLabel) = 'en')
  FILTER(lang(?commanderLabel) = 'en')
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
767,62,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?almaMaterGeorge ?almaMaterSettlement WHERE {
  # George F. Kennan's alma mater
  ?person rdfs:label ""George F. Kennan""@en .
  ?person dbo:almaMater ?almaMaterGeorge .

  OPTIONAL {
    # Dustin Lynch's settlement (likely birthplace)
    ?dustin rdfs:label ""Dustin Lynch""@en .
    ?dustin dbo:birthPlace ?settlement .
    
    # Alma mater of the settlement
    ?settlement dbo:almaMater ?almaMaterSettlement .
  }
}
```",7,8,8,3,3,3,3,71,0,1,1,0.0,0.0,0
801,36,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist WHERE {
  ?album rdfs:label ""What U See Is What U Get""@en .
  ?album a dbo:MusicalWork ;
         dbo:composer ?writer .

  ?writer a dbo:MusicalArtist, dbo:Artist ;
          foaf:name ?artist .
}
```",4,8,5,3,2,3,3,71,0,0,22,0,0.0,0
617,30,test,Give me the child of Antiochus III the Great and spouse of Laodice IV and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?child WHERE {
  ?antiochusIII rdfs:label ""Antiochus III the Great""@en .
  ?antiochusIII dbo:child ?child .

  ?laodiceIV rdfs:label ""Laodice IV""@en .
  ?spouse dbo:spouse ?laodiceIV .
  FILTER (?child = ?spouse)

  ?antiochus rdfs:label ""Antiochus""@en .
  ?antiochus dbo:parent ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,60,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?artist WHERE {
  # Find The Shadow's alter ego or true self
  ?shadow dbo:alterEgo ?trueSelf .
  
  # Identify the album ""What U See Is What U Get""
  ?album rdfs:label ""What U See Is What U Get""@en ;
         a dbo:MusicalWork, dbo:Album .

  # Find the writer of this album
  ?album dbo:composer ?writer .

  # Determine if the writer is associated with any musical artist who is also an artist
  ?artist dbo:associatedMusicalArtist ?writer ;
          a dbo:Musician, dbo:Artist .
}
```",6,10,7,3,2,3,3,71,0,0,22,0,0.0,0
421,21,test,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?band dbo:member ?person .
  ?band rdfs:label ""Senidah""@en .
  
  OPTIONAL { 
    ?person dbo:nationality ?nationality .
    ?nationality rdfs:label ""Socialist Federal Republic of Yugoslavia""@en .
  }
  
  FILTER EXISTS {
    ?dino foaf:name ""Dino Merlin""@en .
    ?person foaf:name ?name .
    FILTER (?name = ""Dino Merlin""@en)
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
48,18,test,"Give me the band of the writer of the work, that is a work, of Shellback (record producer) and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?band1 ?band2 WHERE {
  # Part 1: Find the band of a writer of a work produced by Shellback
  ?work dbo:producer _:shellback .
  FILTER(CONTAINS(LCASE(str(?work)), ""shellback"")) .
  
  ?writer dbo:writer ?work .
  OPTIONAL { ?writer dbo:musicalArtist ?band1 } .

  # Part 2: Find the band of an actor in ""Honor Up""
  ?movie rdfs:label ""Honor Up""@en .
  ?actor dbo:roleInMovie ?movie .
  
  OPTIONAL { ?actor dbo:musicalArtist ?band2 } .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
747,64,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandShena ?bandAthlete ?bandAmba WHERE {
  # Find the band of Shèna (Shena Easton)
  ?shena rdfs:label ""Shena""@en .
  OPTIONAL { ?shena dbo:band ?bandShena . }

  # Find a decedent born in Zolotonosha who is an athlete and soccer player
  ?decedent dbo:birthPlace ?zolotonosha ;
            dbo:deathDate ?deathDate ;
            dbo:sport ?sport .
  ?zolotonosha rdfs:label ""Zolotonosha""@en .
  FILTER EXISTS { ?decedent dbo:athlete true . }
  FILTER EXISTS { ?decedent dbo:soccerPlayer true . }

  # Find",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
54,47,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?person WHERE {
  # Find the father of Soe Min Wimala Dewi and his child
  ?soeMinWimalaDewi dbo:father ?father .
  ?father dbo:child ?child1 .

  # Find Thado Minsaw of Prome's parent and their child
  ?thadoMinsawOfProme dbo:parent ?parent .
  ?parent dbo:child ?child2 .

  # The person we are looking for is both a child of Soe Min Wimala Dewi's father and a parent of Thado Minsaw of Prome's parent's child
  FILTER (?child1 = ?person)
  FILTER (?person = ?parent)
}
```",5,5,6,3,2,3,3,71,0,162,1,0.0,0.0,0
404,60,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?childBirthName WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia by her birth name
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  # Step 2: Find her spouse
  ?princess dbo:spouse ?spouse .

  # Step 3: Determine the father of her spouse
  ?spouse dbo:father ?father .

  # Step 4: Identify a child of this father who is royalty
  ?child dbo:parent ?father .
  ?child rdf:type dbo:Royal .

  # Step 5: Retrieve the birth name of this royal child
  ?child rdfs:label ?childBirthName .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
197,9,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of the member of FC Politehnica Timișoara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person1Label ?birthPlace1Label ?person2Label ?birthPlace2Label WHERE {
  # Part 1: Leroy P. Steele Prize Awardee
  ?awardee dbo:award ""Leroy P. Steele Prize""@en .
  ?awardee rdfs:label ?person1Label .
  ?awardee dbo:birthPlace ?birthPlace1 .
  ?birthPlace1 rdfs:label ?birthPlace1Label .

  # Part 2: Member of FC Politehnica Timișoara
  ?member dbo:team ""FC Politehnica Timișoara""@en .
  ?member rdfs:label ?person2Label .
  ?member dbo:birthPlace ?birthPlace2 .
  ?birthPlace2 rdfs:label ?birthPlace2Label .

  FILTER(LANG(?person1Label) = 'en')
  FILTER(LANG(?birthPlace1Label) = 'en')
  FILTER(LANG(?person2Label) = 'en')
  FILTER(LANG(?birthPlace2Label) = 'en')
}
```",4,4,5,2,2,2,2,9,0,0,4,0,0.0,0
54,31,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?individual WHERE {
  # Find Thinkhaya of Pagan's child
  ?thinkhaya rdfs:label ""Thinkhaya""@en .
  ?child dbo:parent ?thinkhaya ;
         rdfs:label ?childLabel .

  # Find Thado Minsaw of Prome's parent
  ?thadoMinsaw rdfs:label ""Thado Minsaw""@en .
  ?individual dbo:child ?thadoMinsaw ;
              rdfs:label ?individualLabel .

  # Match the individual who is both Thinkhaya's child and Thado Minsaw's parent
  FILTER (?child = ?individual)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,26,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?awardee ?almaMater WHERE {
  ?awardee dbo:award ?award .
  ?award rdfs:label ""Royal Medal""@en .
  OPTIONAL { ?awardee dbo:almaMater ?almaMater . }
}
```",3,4,4,3,1,3,3,71,31,370,0,0.0773067331670823,1.0,0.14351851851851852
391,54,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons and native of the figure known as Hub City.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?sherry a dbo:FilmDirector ;
          dbo:spouse ?spouse .
  
  ?work dbo:claimNotability ?spouse ;
        dbo:actor ?actor .

  ?actor dbo:nativePlace ?hubCity ;
         rdfs:label ?actorLabel .

  FILTER(CONTAINS(LCASE(?actorLabel), ""all about the andersons""))
  FILTER(STRSTARTS(LCASE(?hubCity), ""hub city""))

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,20,test,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?nickname WHERE {
  # Get Eiður Guðjohnsen's birth date
  ?eiður dbo:birthDate ?birthDate .
  FILTER (str(?birthDate) = ""1978-11-15""^^xsd:date)

  # Find players/managers with the same birth date
  ?person dbo:birthDate ?birthDate ;
          a dbo:SoccerPlayer ;
          a dbo:SoccerManager .

  # Identify Armando Heeb's team and find associated players/managers
  ?team dbo:member ?armandoHeeb .
  ?armandoHeeb rdfs:label ""Armando Heeb""@en .
  ?person dbo:playsFor ?team .

  # Retrieve the nickname that is a sports club/organisation/soccer club
  ?person dbo:nickname ?nickname .
  ?nickname a dbo:SportsClub ;
            a dbo:Organisation ;
            a dbo:SoccerClub .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
617,43,test,"Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  ?antiochusIII rdfs:label ""Antiochus III the Great""@en .
  ?child dbo:childOf ?antiochusIII ;
         rdf:type dbo:Monarch .

  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  ?parent dbo:parentOf ?nysa .

  ?successor dbo:childOf ?antiochusIII .
  ?successorChild dbo:childOf ?successor ;
                  rdf:type dbo:Monarch .

  ?person = ?child ;
           dbo:spouse ?successorChild .

}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
801,20,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?producer WHERE {
  ?work dbo:musicalArtist dbr:50_Cent ;
        a dbo:Song .
  OPTIONAL { ?work dbo:producer ?producer . }
}
```",3,6,4,2,2,3,3,71,0,0,27,0,0.0,0
360,21,test,Give me the writer of The Roaring Silence and native of Johannesburg and reference to the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer ?nativePlace WHERE {
  ?book rdfs:label ""The Roaring Silence""@en .
  ?book dbo:author ?writer .
  ?writer dbo:nativePlace ?place .
  FILTER (CONTAINS(LCASE(?place), LCASE(""Johannesburg"")))
  
  OPTIONAL {
    ?blindedBook rdfs:label ""Blinded by the Light""@en .
    ?blindedBook dbo:author ?writer .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
801,39,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of Westside Story (song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedArtist WHERE {
  # Find the album ""What U See Is What U Get""
  ?album rdfs:label ""What U See Is What U Get""@en .
  
  # Identify its writer who is both a musical artist and an artist
  ?writer dbo:musicalArtist true ;
          dbo:artist true ;
          dbo:work ?album .

  # Find the producer of ""Westside Story"" (song)
  ?producer dbo:producer ?westsideStorySong .
  
  # Identify ""Westside Story"" as a song
  ?westsideStorySong rdfs:label ""Westside Story""@en .

  # Find the associated musical artist between the writer and the producer
  ?writer dbo:associatedMusicalArtist ?associatedArtist ;
          dbo:musicalArtist true .
  
  ?producer dbo:associatedMusicalArtist ?associatedArtist ;
            dbo:musicalArtist true .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
314,26,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of 30.","SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?deathEvent dbo:place ?location .
  ?location rdfs:label ""House of Sombrerete""@en .
  
  ?deathEvent rdf:type dbo:Death .
  ?deathEvent dbo:agent ?person .

  ?person dbo:profession ?commanderRole .
  FILTER EXISTS { ?commanderRole rdfs:label ""Commander""@en } .

  ?event dbo:eventType ?eventType .
  ?event dbo:societalEvent ?societalEvent .
  ?event dbo:participant ?lisaGavric .
  ?lisaGavric rdfs:label ""Lisa Gavrić""@en .

  ?person dbo:award ?award .
  ?award dbo:number ""30""^^xsd:int .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
281,57,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?warOfBeauchampSeymour ?countryOfBirthLeader ?professionHeatherRoy WHERE {
  # Beauchamp Seymour, 1st Baron Alcester's war
  ?beauchamp dbo:participatedIn ?warOfBeauchampSeymour .
  ?beauchamp rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .

  # Leader of the 1962 New South Wales state election
  ?election dbo:leader ?leader .
  ?election rdfs:label ""1962 New South Wales state election""@en .
  ?leader rdf:type dbo:Politician .
  ?leader dbo:birthPlace ?birthPlaceLeader .
  
  # Ensure birthplace is a country
  ?birthPlaceLeader dbo:country ?countryOfBirthLeader .

  # Heather Roy's profession as a military unit
  ?heather dbo:profession ?professionHeatherRoy .
  ?heather rdfs:label ""Heather Roy""@en .
  ?professionHeatherRoy rdf:type dbo:MilitaryUnit .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,63,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativeOfResidence WHERE {
  # Sylvie Bermann's residence
  ?sylvie a dbo:Person ;
          foaf:name ""Sylvie Bermann"" .
  ?residence dbo:resident ?sylvie ;
             a dbo:Settlement ;
             dbo:country ?britishCountry .
  FILTER(?britishCountry = dbpedia:United_Kingdom) .

  # Sean Pertwee's claim to fame
  ?sean a dbo:Actor ;
        foaf:name ""Sean Pertwee"" .
  OPTIONAL {
    ?filmRole dbo:actor ?sean ;
              a dbo:Film .
  }
  OPTIONAL {
    ?militaryConflict dbo:participant ?sean ;
                      a dbo:MilitaryConflict .
  }

  # Jon Pertwee's child
  ?jon a dbo:Person ;
       foaf:name ""Jon Pertwee"" .
  ?child dbo:parent ?jon .

  # Connecting the elements
  ?residence dbo:nativeOf ?nativeOfResidence .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
659,63,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander WHERE {
  ?event1 dbo:type dbr:Military_conflict ;
         dbo:participatingMilitaryUnit dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
  
  ?force dbo:militaryConflict ?event2 ;
         dbo:commander ?commander .

  ?event2 rdfs:label ""Rutger Jan Schimmelpenninck""@en ;
          a dbo:Military_conflict, dbo:Societal_event .

  ?officeHolder dbo:nativeCountry dbr:Kingdom_of_Ireland ;
                dbo:positionHeld ?commander .
}
```",7,13,8,3,3,3,3,71,0,0,15,0,0.0,0
232,31,test,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?child 
WHERE {
  # Part 1: Find the actor of ""Dog Soldiers""
  ?film rdfs:label ""Dog Soldiers""@en .
  ?film dbo:actor ?actor .

  # Part 2: Find Jon Pertwee's birth name and his child
  ?person rdfs:label ""Jon Pertwee""@en .
  ?person dbo:birthName ?birthName .
  ?person dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
528,60,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?militaryForce ?war WHERE {
  ?person rdfs:label ""Narciso Campero""@en .
  ?person dbo:militaryForce ?militaryForce .
  
  OPTIONAL { 
    ?militaryForce dbo:participatedIn ?event .
    ?event rdf:type dbo:SocietalEvent ;
           dbo:location ?location .
    FILTER (CONTAINS(LCASE(?location), ""chile""))
    BIND(?event AS ?war)
  }
}
```",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
232,24,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?film ?militaryConflict WHERE {
  ?person rdfs:label ""Sean Pertwee""@en .
  ?person dbo:nationality ?nationality .
  ?nationality rdfs:label ""United Kingdom"" .
  
  OPTIONAL { 
    ?person dbo:birthPlace ?place .
    ?place rdfs:label ""London""@en .
  }
  
  ?film dbo:actor ?person .
  ?militaryConflict dbo:participant ?person .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
659,53,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander WHERE {
  # Find a commander associated with the Kingdom of Ireland
  ?kingdom rdfs:label ""Kingdom of Ireland""@en .
  ?kingdom dbo:militaryForce ?force .
  ?force dbo:commander ?commander .

  # Ensure the commander is an office holder
  ?commander dbo:officeHolder true .

  # Check if the commander participated in the Battle of Leipzig
  ?battle rdfs:label ""Battle of Leipzig""@en .
  ?battle dbo:participant ?commander .

  # Link to Rutger Jan Schimmelpenninck through a societal event or military conflict
  ?event rdfs:label ?eventName .
  ?event rdf:type (dbo:SocietalEvent|dbo:MilitaryConflict) .
  ?event dbo:participant ?commander ;
         dbo:participant <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .

}
```",6,10,7,3,3,3,3,71,0,0,6,0,0.0,0
54,59,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?individual WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:childOf ?thinkhaya .
  ?thinkhaya rdfs:label ""Thinkhaya""@en .

  # Thado Minsaw of Prome's parent
  ?thadoParent dbo:parentOf ?thadoMinsaw .
  ?thadoMinsaw rdfs:label ""Thado Minsaw""@en .

  # The individual who is both the child of Thinkhaya and the parent of Thado Minsaw
  ?individual dbo:childOf ?thinkhaya .
  ?individual dbo:parentOf ?thadoMinsaw .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
10,25,test,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember ?associatedMusicalArtist WHERE {
  ?person1 dbo:birthName ""Luke Francis Vibert""@en .
  ?person1 a dbo:Artist .
  OPTIONAL { 
    ?person1 dbo:bandMember ?bandMember .
  }
  
  ?person2 dbo:birthName ""Matt Colton""@en .
  ?person2 a dbo:Person .
  ?person2 dbo:profession dbo:MusicProduction .
  OPTIONAL {
    ?person2 dbo:associatedMusicalArtist ?associatedMusicalArtist .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
801,54,test,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producer WHERE {
  ?shadow dbo:alterEgo ""The Shadow""@en .
  ?shadow dbo:profession ?profession .
  FILTER(?profession IN (dbo:MusicalArtist, dbo:Rapper)) .

  ?work dbo:producer ?producer ;
        a dbo:Songs .

  ?producer foaf:worksFor ?association .
  ?association dbo:associatedMusicalArtist ?chrisTaylor .
  ?chrisTaylor rdfs:label ""Chris Taylor (music producer)""@en .
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
994,49,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalArtist WHERE {
  # Step 1: Find Watchtower's associated musical artist
  ?watchtower dbo:associatedBand ?artist1 .
  
  # Step 2: Find the associated musical artist of that artist
  ?artist1 dbo:associatedBand ?artist2 .

  # Step 3: Identify Don Dokken's band membership
  ?dokken rdfs:label ""Don Dokken""@en .
  ?dokken dbo:bandMember ?donDokkenBand .

  # Step 4: Find a person who is a musical artist, born, and a member of Don Dokken's band
  ?person dbo:birthDate ?birthDate ;
          dbo:bandMember ?donDokkenBand ;
          rdfs:label ?name .
  
  # Ensure the final artist is associated with the second artist found in step 2
  ?artist2 dbo:associatedBand ?finalArtist .

  FILTER (lang(?name) = 'en')
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,28,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v5 . ?v5 <http://dbpedia.org/ontology/province> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity WHERE {
  ?region dbo:timeZone ?tz .
  ?tz rdfs:label ""Central European Time""@en .

  OPTIONAL { 
    ?event dbo:eventLocation ?place .
    ?place rdfs:label ""Aguilar de Segarra""@en .
    ?entity dbo:sportEvent ?event .
  }

  OPTIONAL {
    ?person dbo:residence ?province .
    ?person rdfs:label ""Sebastiano Bianchetti""@en .
    ?province dbo:country dbc:Italy .
    ?province a dbo:Settlement .
    ?entity dbo:region ?province .
  }
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
356,18,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find a person native to Wolverhampton who is both a player and manager
  ?person dbo:nativePlace ?wolverhampton .
  ?wolverhampton rdfs:label ""Wolverhampton""@en .

  ?person dbo:playerFor ?playerTeam .
  ?person dbo:managerOf ?managerTeam .

  # Find the predecessor of the 2015 Sacramento Republic FC season
  ?sacramento2015 dbp:sportTeam <http://dbpedia.org/resource/Sacramento_Republic_FC> ;
                  dbp:season ""2015""@en ;
                  dbp:predecessorSeason ?predecessor .

  # Find the successor of that predecessor
  ?predecessor dbp:successorSeason ?successor .

  # Ensure the person played for a team in this successor season
  ?playerTeam dbp:sportTeam <http://dbpedia.org/resource/Sacramento_Republic_FC> ;
              dbp:season ?successor .
  
  BIND(?playerTeam AS ?team)
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
312,8,test,Give me the entity in the birthplace of Giorgio Grigolli and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthEntity WHERE {
  ?person rdfs:label ""Giorgio Grigolli""@en .
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ?birthEntity .
}

UNION

SELECT ?provinceEntity WHERE {
  ?province rdfs:label ""Province of Bergamo""@en .
  ?province rdfs:label ?provinceEntity .
}
```",3,3,4,2,2,2,2,9,0,0,228,0,0.0,0
314,22,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?awardee WHERE {
  # Find awards received by Sergei Makovetsky
  ?s dbr:Sergei_Makovetsky dbo:award ?award .
  
  # Find the awardee of that award
  ?award dbo:recipient ?awardee .

  OPTIONAL {
    # Identify a person who died at the headquarters of House of Sombrerete
    ?person dbo:deathPlace dbr:House_of_Sombrerete .
    
    # Ensure the awardee is the same as the deceased person
    FILTER (?awardee = ?person)
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
54,51,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Identify Thihapate of Mohnyin
  ?thihapate rdfs:label ""Thihapate""@en .
  
  # Find Thihapate's child who is an office holder and a royalty
  ?child dbo:parent ?thihapate ;
         dbo:officeHolder true ;
         dbo:royalty true .

  # Identify Narapati I of Ava
  ?narapati rdfs:label ""Narapati I of Ava""@en .
  
  # Find Narapati I's child
  ?narapatisChild dbo:parent ?narapati .

  # Find the predecessor of Thihapate's child
  ?predecessor dbo:successor ?child ;
              dbo:officeHolder true ;
              dbo:royalty true .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
182,28,test,Give me the war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?work ?nationality ?eventAuthor WHERE {
  # Gotabhaya Rajapaksa's works
  ?work dbo:author ?rajapaksa .
  ?rajapaksa rdfs:label ""Gotabhaya Rajapaksa""@en .

  # Tamara Kunanayakam's nationality
  ?kunanayakam dbo:nationality ?nationality .
  ?kunanayakam rdfs:label ""Tamara Kunanayakam""@en .

  # Author related to the 2019 Sri Lanka Easter bombings
  OPTIONAL {
    ?event rdfs:label ""2019 Sri Lanka Easter bombings""@en .
    ?event dbo:subject ?author .
    ?author rdfs:label ?eventAuthor .
  }
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
959,61,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?manager WHERE {
  ?team rdfs:label ""Kashima Antlers""@en .
  ?team dbo:sportTeamSeason ?season .
  ?season dbo:year ""1998""^^xsd:gYear .
  ?team dbo:manager ?manager .
  ?manager rdf:type dbo:SportsManager .

  OPTIONAL {
    ?election rdfs:label ""2010 Japanese House of Councillors election""@en .
    ?election dbo:leader ?politician .
    ?politician dbo:nationality ?country .
  }
}
```",6,9,7,3,2,3,3,71,0,0,6,0,0.0,0
179,18,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of Bhumibol Adulyadej.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?child dbo:parent ""Nakkhatra Mangala""@en ;
         a dbo:Royal .
  ?child rdfs:label ?birthName .
  
  ?bhumibolChild dbo:parent ""Bhumibol Adulyadej""@en .
  ?bhumibolChild dbo:parent ?person .

  FILTER (?person = ?child)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
547,36,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?restingPlace WHERE {
  # Resting place of James Burton (Egyptologist)
  { 
    ?burton rdfs:label ""James Burton""@en .
    ?burton dbo:occupation dbr:Egyptology .
    ?burton dbo:finalBurialPlace ?restingPlace .
    BIND(?burton AS ?person)
  }
  
  UNION
  
  # Resting place of the awardee of Gerald Graham's award
  { 
    ?graham rdfs:label ""Gerald Graham""@en .
    ?award dbo:recipient ?awardee .
    ?graham dbo:receivedAward ?award .
    ?awardee dbo:finalBurialPlace ?restingPlace .
    BIND(?awardee AS ?person)
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
427,51,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of Lamberto Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?prodiParty ?andreottiFatherParty WHERE {
  # Romano Prodi's party
  ?prodi dbo:birthName ""Romano Prodi""@en .
  OPTIONAL { ?prodi dbo:officeHolder true . }
  OPTIONAL { ?prodi dbo:politician true . }
  OPTIONAL { ?prodi dbo:party ?prodiParty . }

  # Lamberto Andreotti's father's party
  ?andreotti rdfs:label ""Lamberto Andreotti""@en .
  ?andreotti dbo:father ?father .
  OPTIONAL { ?father dbo:officeHolder true . }
  OPTIONAL { ?father dbo:politician true . }
  OPTIONAL { ?father dbo:party ?andreottiFatherParty . }
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
747,50,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?traceyBand ?songwriter ?bandOfSongWriter WHERE {
  # Part 1: Find the band of Tracey Elizabeth McSween
  ?person rdfs:label ""Tracey Elizabeth McSween""@en .
  OPTIONAL { ?person dbo:band ?traceyBand . }

  # Part 2: Find the writer of a song by Amba Shepherd and their band
  ?work rdfs:label ?songLabel .
  ?work dbo:lyricsBy ?songwriter .
  FILTER(CONTAINS(LCASE(?songLabel), ""amba shepherd""))
  OPTIONAL { ?songwriter dbo:band ?bandOfSongWriter . }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,28,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?mayor a dbo:Mayor ;
         dbo:almaMater ?almaMater .
  
  ?scientist a dbo:Scientist ;
             foaf:name ""Allen Hill"" ;
             dbo:almaMater ?almaMater .

  FILTER(?almaMater = <http://dbpedia.org/resource/Queen's_University_Belfast>)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
9,70,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbo:country dbc:Northern_Ireland ;
               rdfs:label ?name .
  
  ?politician dbo:almaMater ?institution ;
              rdf:type dbo:Politician ;
              dbo:positionTitle ""Mayor""@en ;
              dbo:memberOf ?forum .
              
  ?awardee dbo:almaMater ?institution ;
           dbo:awardReceived ?medals .

  ?forum rdfs:label ""Northern Ireland Forum""@en .
  
  ?medals rdfs:label ""Royal Medal""@en .
  
  OPTIONAL { ?institution rdfs:label ?nickname . }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
184,52,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Find Archduke Joseph Karl's child
  ?child1 dbo:parent dbr:Archduke_Joseph_Karl_of_Austria ;
          dbo:child ?grandChild .

  # Find the parent of Archduchess Ilona
  ?ilonaParent dbo:child dbr:Archduchess_Ilona_of_Austria .

  # The person we are looking for is both the grandchild of Joseph Karl and the parent of Ilona
  ?person dbo:parent ?grandChild ;
          dbo:child ?ilonaParent .

  # Find a landmark that is a settlement at an elevation of 96.0 meters
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            rdf:type dbo:Settlement .
  
  # The person must be native to this landmark
  ?person dbo:nativePlace ?landmark .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
391,52,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of All About the Andersons and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?native WHERE {
  # Step 1: Find the nickname of Jackson, Tennessee
  ?location rdfs:label ""Jackson""@en .
  ?location dbo:country dbc:Tennessee .
  ?location dbo:alias ?nickname .

  # Step 2: Identify the actor known for ""All About the Andersons"" and Michael Ballhaus's claim to fame
  ?movie rdfs:label ""All About the Andersons""@en .
  ?actor dbo:starring ?movie .
  
  ?ballhausWork rdfs:label ?claimToFame .
  ?ballhausWork dbo:director ?ballhaus .
  ?ballhaus foaf:name ""Michael Ballhaus"" .
  ?actor dbo:starring ?ballhausWork .

  # Step 3: Retrieve the birthplace of this actor
  ?actor dbo:birthPlace ?native .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
994,47,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Find Watchtower's associated musical artist
SELECT ?watchtowerArtist WHERE {
  ?band rdfs:label ""Watchtower""@en .
  ?band dbo:associatedMusicalArtist ?watchtowerArtist .
}

# Step 2: Find the associated musical artist of Watchtower's associated artist
SELECT ?secondLevelArtist WHERE {
  ?artist1 rdfs:label ?watchtowerArtistLabel .
  ?artist1 dbo:associatedMusicalArtist ?secondLevelArtist .
}

# Step 3: Identify Fredrik Thordendal's band that is an organization
SELECT ?thordendalBand WHERE {
  ?person rdfs:label ""Fredrik Thordendal""@en .
  ?person dbo:memberOf ?band .
  ?band a dbo:MusicalGroup ;
        a dbo:Organization .
}

# Step 4: Find the associated musical artist of Fredrik Thordendal's band
SELECT ?thordendalBandArtist WHERE {
  ?band rdfs:label ?thordendalBandLabel .
  ?band dbo:associatedMusicalArtist ?thordendalBandArtist .
}
```",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
659,66,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander ?militaryForce ?event WHERE {
  # Arthur Wellesley's command
  ?welshCommander rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  ?welshCommander dbo:commander ?commander .

  # Military force involved in societal events and conflicts
  ?militaryForce dbo:militaryConflict ?event ;
                 a dbo:MilitaryUnit ;
                 dbo:commander ?commander .

  OPTIONAL {
    ?militaryForce dbo:societalEvent ?societalEvent .
  }

  # Rutger Jan Schimmelpenninck as a commander in a military conflict
  ?schimmelpenninck rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  ?schimmelpenninck dbo:commander ?conflictCommander .

  OPTIONAL {
    ?conflictCommander dbo:militaryConflict ?event .
  }

  # 1st Light Cavalry Lancers Regiment involvement
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  ?regiment dbo:militaryConflict ?event .
}
```",7,12,8,3,3,3,3,71,0,0,15,0,0.0,0
547,65,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlaceActor ?restingPlaceKnight ?restingPlaceChild WHERE {
  # Resting place of the actor from the show with Emily Richard
  OPTIONAL {
    ?show dbo:actor ?actor .
    ?show rdfs:label ""Emily Richard""@en .
    ?actor dbo:deathPlace ?restingPlaceActor .
  }

  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  OPTIONAL {
    ?person dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    ?person dbo:deathPlace ?restingPlaceKnight .
  }

  # Resting place of the child of James Burton (property developer)
  OPTIONAL {
    ?james a dbo:PropertyDeveloper ;
           foaf:name ""James Burton""@en .
    ?child dbo:parent ?james ;
           dbo:deathPlace ?restingPlaceChild .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
547,71,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v8 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?restingPlace1 ?restingPlace2 ?restingPlace3 WHERE {
  # Resting place of the awardee of Gerald Graham's award
  ?award dbo:recipient ?awardee .
  ?award dbo:givenBy ""Gerald Graham"" .
  OPTIONAL { ?awardee dbo:burialPlace ?restingPlace1 . }

  # Resting place of an actor in a show with Emily Richard
  ?show dbo:actor ?actor .
  ?show dbo:castMember ""Emily Richard""@en .
  OPTIONAL { ?actor dbo:burialPlace ?restingPlace2 . }

  # Resting place of the grandchild of William Haliburton
  ?parent dbo:childOf ""William Haliburton"" .
  ?grandchild dbo:childOf ?parent .
  OPTIONAL { ?grandchild dbo:burialPlace ?restingPlace3 . }
}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
55,28,test,"Give me the band of the reference, that is a band, to Newsted and band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?band WHERE {
  # Newsted's band
  ?newsted dbo:memberOfBand ?metallica .
  ?metallica rdfs:label ""Metallica""@en .

  # Producer of Used to Love Her
  ?song dbo:producer ?elizondo .
  ?song rdfs:label ""Used to Love Her""@en .
  ?elizondo foaf:name ""Mike Elizondo"" .

  # Band of the producer
  ?elizondo dbo:memberOfBand ?train .
  ?train rdfs:label ""Train""@en .

  # Members of San Francisco Symphony who are also in a band
  ?symphonyMember dbo:memberOfGroup ?sfsymphony ;
                  dbo:memberOfBand ?band .
  ?sfsymphony rdfs:label ""San Francisco Symphony""@en .

  OPTIONAL {
    ?band rdfs:label ?bandLabel .
  }
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
303,25,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?place rdfs:label ""El Valle de Antón""@en .
  ?place dbo:country ?country .

  ?person rdfs:label ""Arnulfo Arias""@en .
  ?person dbo:party ?party .
  ?person dbo:role ?role .

  FILTER(?country = <http://dbpedia.org/resource/Panama>)

  OPTIONAL {
    ?commander rdfs:label ?labelCommander .
    ?commander dbo:role ""politician""@en .
    ?commander dbo:invasion ?invasion .
    ?invasion rdfs:label ""United States invasion of Panama""@en .

    FILTER(?party = ?commander)
  }

  BIND(CONCAT(""Entity in "", STR(?country), "": "", STR(?person)) AS ?entity)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
404,49,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?spouse .
  
  ?spouse rdfs:label ?spouseLabel .
  FILTER regex(?spouseLabel, ""born as royalty"", ""i"") .

  ?father dbo:child ?spouse .
  ?father dbo:child ?child .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,62,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?micheleParty ?fatherParty ?prodiParty WHERE {
  # Michele Pinto's party
  ?person rdfs:label ""Michele Pinto""@en .
  ?person dbo:party ?micheleParty .

  # Father of an MIT alumnus' party
  ?alumni dbo:alumniOf <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?alumni foaf:parent ?father .
  OPTIONAL { ?father dbo:party ?fatherParty . }

  # Romano Prodi's party
  ?prodi rdfs:label ""Romano Prodi""@en .
  ?prodi dbo:party ?prodiParty .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,48,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchildRestingPlace ?awardeeRestingPlace WHERE {
  # Part 1: Resting place of the child of the child of William Haliburton
  ?williamHaliburton rdfs:label ""William Haliburton""@en .
  ?williamHaliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  OPTIONAL { ?grandchild dbo:restingPlace ?grandchildRestingPlace . }

  # Part 2: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?awardee dbo:honoraryTitle ?title .
  FILTER(CONTAINS(LCASE(str(?title)), ""knight grand cross of the order of st michael and st george""))
  OPTIONAL { ?awardee dbo:restingPlace ?awardeeRestingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,38,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  ?satomi dbo:profession ?profession .
  FILTER (str(?satomi) = ""Satomi_Ishihara"")

  # Find Gigi Rice's birth name
  ?gigi foaf:name ?birthName .
  FILTER (str(?gigi) = ""Gigi_Rice"")

  # Find a professional with the same profession and birth name
  ?professional dbo:profession ?profession ;
                foaf:name ?birthName .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
404,31,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parent ?spouse ?birthName WHERE {
  ?person rdfs:label ""Prince Ernest Augustus of Hanover""@en .
  ?person dbo:birthday ?birthday .
  FILTER(YEAR(?birthday) = 1914)
  
  ?person dbo:parent ?parent .

  ?parent dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Monarch .

  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess rdfs:label ?birthName .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,49,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?decedentCapital ?decedentWork WHERE {
  # Part 1: Decedent at the capital of Khemis Miliana District
  ?district dbo:capital ?capital .
  FILTER (STR(?district) = ""Khemis Miliana District"") .
  ?capital rdfs:label ?capitalLabel .
  FILTER (LANG(?capitalLabel) = 'en') .
  OPTIONAL {
    ?decedentCapital dbo:deathPlace ?capital .
  }

  # Part 2: Decedent at the work of Joseph C. Satterthwaite
  ?person dbo:occupation ""US Assistant Secretary of State for African Affairs""@en .
  FILTER (STR(?person) = ""Joseph C. Satterthwaite"") .
  OPTIONAL {
    ?decedentWork dbo:deathPlace ?workLocation .
    ?workLocation rdfs:label ?workLabel .
    FILTER (?workLabel = ""US Department of State""@en)
  }
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
10,20,test,"Give me the professional in  and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist ?bandMember WHERE {
  ?mattColton rdfs:label ""Matt Colton""@en .
  ?mattColton dbo:professional ?profession .
  FILTER(?profession = dbo:MasteringEngineer) .
  
  ?mattColton dbo:associatedMusicalArtist ?associatedArtist .

  ?lukeVibert rdfs:label ""Luke Francis Vibert""@en .
  ?lukeVibert dbo:birthName ""Luke Francis Vibert"" .
  
  ?bandMember dbo:bandMember ?lukeVibert .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,66,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?individual WHERE {
  # Find commander in Ferenc Szálasi's force
  ?szalasiForce dbo:commander ?individual .
  ?szalasiForce dbo:leader ""Ferenc Szálasi"" .

  # Find awardee of Bruce Fraser, 1st Baron Fraser of North Cape
  ?fraserAward dbo:recipient ?individual .
  ?fraserAward dbo:awardedBy ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .

  # Find leader of the government agency led by Gustav Jonson
  ?governmentAgency dbo:leader ?individual .
  ?governmentAgency dbo:headOfGovernmentAgency ""Gustav Jonson"" .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
427,34,test,Give me the party of Romano Prodi and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?prodiParty ?pintoPartyName WHERE {
  ?prodi dbo:party ?prodiParty .
  ?prodi rdfs:label ""Romano Prodi""@en .

  ?pinto dbo:party ?pintoParty .
  ?pintoParty rdfs:label ?pintoPartyName .
  ?pinto rdfs:label ""Michele Pinto""@en .
}
```",4,4,5,3,2,3,3,71,2,7,0,0.2222222222222222,1.0,0.3636363636363636
617,70,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochus rdfs:label ""Antiochus IV Epiphanes""@en .
  
  # Successor of Antiochus
  ?successor dbo:successorOf ?antiochus .

  # Child of the successor, that is royalty
  ?royalChild dbo:childOf ?successor ;
              a dbo:Royalty .

  # Spouse of this royal child
  ?royalChild dbo:spouse ?spouse .

  # Parent of the child of the commander in Battle of Panium
  ?commander rdfs:label ""Ptolemy V""@en .
  ?childOfCommander dbo:childOf ?commander ;
                   dbo:parent ?parentOfChildOfCommander .

  # Child of the child, that is royalty, of Seleucus II Callinicus
  ?seleucusII rdfs:label ""Seleucus II Callinicus""@en .
  ?grandchild dbo:childOf ?royalChild ;
              a dbo:Royalty .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
184,58,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret rdfs:label ""Archduchess Margaret of Austria""@en .
  FILTER(YEAR(?margaret dbo:birthday) = 1925) .

  # Parent of Margaret
  ?parent1 dbo:child ?margaret .
  
  # Child of the parent of Margaret
  ?grandchild1 dbo:parent ?parent1 .

  # Géza von Habsburg
  ?geza rdfs:label ""Géza von Habsburg""@en .

  # Parent of Géza
  ?parent2 dbo:child ?geza .

  # Archduke Joseph Karl of Austria
  ?josephKarl rdfs:label ""Archduke Joseph Karl of Austria""@en .

  # Child of Joseph Karl
  ?child1 dbo:parent ?josephKarl .
  
  # Child of the child of Joseph Karl
  ?grandchild2 dbo:parent ?child1 .

  # Find common person fitting all criteria
  VALUES ?person { ?grandchild1 ?parent2 ?grandchild2 }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,69,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?spouse WHERE {
  # Identify Princess Victoria Louise of Prussia by her birth name and royalty status
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:birthName ?birthName .
  
  # Find her spouse
  ?princess dbo:spouse ?spouse .

  # Identify Ernest Augustus, Duke of Brunswick's child who is royalty
  ?ernestAugustus rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?child dbo:parent ?ernestAugustus ;
         a dbo:RoyalFamilyMember .

  # Find the father of Princess Victoria Louise's spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Ensure the child is also related to the father of the spouse
  OPTIONAL { ?child dbo:parent ?fatherOfSpouse }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,24,test,Give me the parent of Archduchess Ilona of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?individual WHERE {
  # Find the parent of Archduchess Ilona of Austria
  ?ilona dbo:parent ?parent .
  ?ilona rdfs:label ""Archduchess Ilona of Austria""@en .

  # Find the child of Archduke Joseph Karl of Austria
  ?josephKarl dbo:child ?child .
  ?josephKarl rdfs:label ""Archduke Joseph Karl of Austria""@en .

  # Find the grandchild (child of the child) of Archduke Joseph Karl of Austria
  ?child dbo:child ?grandchild .

  # The individual must satisfy both conditions
  FILTER (?parent = ?grandchild)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
820,17,test,Give me the child of the parent of the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?child WHERE {
  ?actor dbo:profession dbo:Actor .
  ?parent dbo:child ?actor .
  ?parent dbo:child ?child .
}
```",4,4,5,3,2,3,2,20,0,0,128,0,0.0,0
767,71,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v8 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?v5 <http://dbpedia.org/property/governor> ?v4 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v7 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?alterEgo WHERE {
  # Matthew Burland's fictional alter ego
  ?burland dbo:creator ?alterEgo .
  ?burland rdfs:label ""Matthew Burland""@en .

  # George Kilbon Nash's alma mater and its administrator
  ?nash dbo:almaMater ?institution .
  ?nash rdfs:label ""George Kilbon Nash""@en .
  ?administrator dbo:administratorOf ?institution .

  # Writer of the song from Dustin Lynch's album and associated settlement
  ?album dbo:song ?song .
  ?album rdfs:label ""Where It's At (Dustin Lynch album)""@en .
  ?song dbo:writer ?writer .
  ?administration dbo:settlement ?settlement .
  ?writer dbo:administratorOf ?administration .

  # Linking the alter ego to the settlement
  ?alterEgo dbo:associatedWith ?settlement .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
77,17,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of Alexander Chechenskiy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?mayor ?organisation ?force WHERE {
  ?territory dbo:administrativeAuthority ?organisation .
  ?organisation dbo:location ?location .
  ?location rdfs:label ""Warsaw""@en .
  
  ?mayor dbo:positionHeld ?position .
  ?position dbo:officeHolder ?person .
  ?person rdfs:label ?mayorLabel .
  FILTER(CONTAINS(LCASE(?mayorLabel), ""mayor"")) .

  OPTIONAL {
    ?organisation dbo:force ?force .
  }

  ?chechenskiy dbo:birthPlace ?place .
  ?place rdfs:label ""Warsaw""@en .
  ?chechenskiy dbo:participatedInWar ?war .
  
  FILTER(?person = ?chechenskiy)
}
```",4,5,5,3,2,3,2,20,0,0,6,0,0.0,0
54,58,test,"Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:childOf ?thinkhaya .
  ?thinkhaya rdfs:label ""Thinkhaya of Pagan""@en .

  # Narapati I of Ava and his parent (Narapati I himself)
  ?narapatiIChild dbo:childOf ?narapatiI .
  ?narapatiI rdfs:label ""Narapati I of Ava""@en .
  
  # Predecessor of Narapati I
  ?predecessor dbo:predecessor ?narapatiI .

  # Ensure the person is an office holder and royalty
  ?predecessor rdf:type dbo:Royalty ;
               dbo:officeHolder ?office .

  # Reference to Thihapate of Mohnyin
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .
  ?reference dbo:relatedTo ?thihapate .
  ?predecessor ?reference ?thihapate .

  # Ensure the person is the same in all contexts
  FILTER (?thinkhayaChild = ?narapatiI)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,55,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?nativeCity WHERE {
  # Find the city known as ""Hub City""
  ?city rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""hub city""))

  # Identify movies that are both films and television shows involving Roz Ryan and Michael Ballhaus
  ?movie dbo:starring ?actor ;
         dbo:director ?director .
  OPTIONAL { ?movie dbo:writer ?writer . }
  FILTER (?writer = <http://dbpedia.org/resource/Roz_Ryan> || ?director = <http://dbpedia.org/resource/Michael_Ballhaus>)
  
  # Find the native city of the actor
  ?actor foaf:birthPlace ?nativeCity .
  FILTER(?nativeCity = ?city)
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
701,28,test,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentHenuttawy ?spouseRamessesII ?childNefertari ?parentChildNefertari WHERE {
  # Parent of Henuttawy (19th dynasty)
  ?henuttawy rdfs:label ""Henuttawy (19th dynasty)""@en .
  OPTIONAL { ?henuttawy dbo:parent ?parentHenuttawy . }

  # Spouse of Ramesses II
  ?ramessesII rdfs:label ""Ramesses II""@en .
  ?ramessesII dbo:spouse ?spouseRamessesII .

  # Parent of the child of Nefertari
  ?nefertari rdfs:label ""Nefertari""@en .
  OPTIONAL { ?nefertari dbo:child ?childNefertari . }
  OPTIONAL { ?childNefertari dbo:parent ?parentChildNefertari . }
}
```",4,4,5,2,3,3,3,71,1,57292,0,1.745413924912293e-05,1.0,3.4907669214926526e-05
16,45,test,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse ?alumna WHERE {
  # Find Ted McGinley's spouse
  ?person rdfs:label ""Ted McGinley""@en .
  ?person dbo:spouse ?spouse .

  # Find an actress who is an alumnus of Ohio State University and has a birth name
  ?alumna dbo:birthName ?birthName ;
          dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> ;
          dbo:occupation dbc:Actresses .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,64,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?finalLeader WHERE {
  ?gustavJonson foaf:name ""Gustav Jonson""@en .
  ?gustavJonson dbo:officeHolder ?office .
  ?office dbo:leader ?intermediateLeader .

  ?intermediateLeader dbo:officeHolder ?agency .
  ?agency dbo:leader ?finalLeader .

  OPTIONAL {
    ?gustavJonson dbo:militaryCommanderOf ""Eastern Front (World War II)""@en .
  }

  OPTIONAL {
    ?gustavJonson dbo:award ""Volcano and Ryukyu Islands campaign""@en .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
54,52,test,Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?commonEntity WHERE {
  # Narapati I of Ava's child and its parent
  ?narapatiI dbo:child ?childNarapati .
  ?parentChildNarapati dbo:child ?childNarapati .
  
  # Thinkhaya of Pagan's child, father of that child, and predecessor of Ameitta Thiri Maha Dhamma Dewi
  ?thinkhaya dbo:child ?childThinkhaya .
  ?fatherChildThinkhaya dbo:child ?childThinkhaya .
  ?predecessorAmeitta dbo:successor <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi> .

  # Find the common entity
  FILTER (?parentChildNarapati = ?fatherChildThinkhaya)
  BIND(?parentChildNarapati AS ?commonEntity)

  OPTIONAL {
    ?narapatiI rdfs:label ""Narapati I of Ava""@en .
    ?thinkhaya rdfs:label ""Thinkhaya of Pagan""@en .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,54,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?almaMater WHERE {
  # Royal Medal awardee's alma mater
  ?awardee dbo:awardReceived ?royalMedal .
  ?royalMedal rdfs:label ""Royal Medal""@en .
  ?awardee foaf:almaMater ?almaMater .

  UNION

  # Mayor of Northern Ireland Forum's alma mater
  ?politician dbo:officeHolder ?mayorPosition .
  ?mayorPosition rdfs:label ""Mayor of the Northern Ireland Forum""@en .
  ?politician foaf:almaMater ?almaMater .

  FILTER EXISTS {
    ?institution rdfs:label ""Queen's University Belfast""@en .
    OPTIONAL { ?awardee foaf:almaMater ?institution . }
    OPTIONAL { ?politician foaf:almaMater ?institution . }
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,68,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v5 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commander WHERE {
  # Find the commander of the Battle of Verdun
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Verdun""@en .

  # Ensure this commander is involved in a military conflict and an event
  ?conflict dbo:commander ?commander .
  ?event dbo:commander ?commander .
  
  # Find the capital of Algeria (Algiers) and check for decedents there
  ?capital rdfs:label ""Algiers""@en ;
           dbo:country <http://dbpedia.org/resource/Algeria> .

  OPTIONAL {
    ?decedent foaf:name ?commander ;
              dbo:deathPlace ?capital .
  }

  # Find the author of ""French Algeria"" and their work location
  ?author rdfs:label ""Jean-Baptiste Dumas""@en ; # Assuming Jean-Baptiste Dumas as an example author
          dbo:workLocation ?workLocation .

  OPTIONAL {
    ?decedent foaf:name ?commander ;
              dbo:deathPlace ?workLocation .
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
488,55,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlaceOfFather ?birthPlaceOfCommander ?administrationOfGoMizunooFather WHERE {
  # Yūki Hideyasu's father
  ?yukiHideyasu dbo:father ?father .
  ?yukiHideyasu rdfs:label ""Yūki Hideyasu""@en .

  # Death place of Yūki Hideyasu's father
  ?father dbo:deathPlace ?deathPlaceOfFather .

  # Commander in Boshin War
  ?commander dbo:positionHeld ?boshinWarRole .
  ?boshinWarRole rdfs:label ""Commander""@en .
  
  # Birth place of the commander
  ?commander dbo:birthPlace ?birthPlaceOfCommander .

  # Father of Emperor Go-Mizunoo
  ?goMizunoo dbo:father ?goMizunooFather .
  ?goMizunoo rdfs:label ""Emperor Go-Mizunoo""@en .

  # Administration or role of Emperor Go-Mizunoo's father
  ?goMizunooFather dbo:positionHeld ?administrationOfGoMizunooFather .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
378,70,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?triggeWar ?triggeClaimToFame ?gahnWar WHERE {
  # Thomas Trigge's claim to fame in a war
  ?trigge dbo:claimToFame ?triggeWar .
  ?triggeWar rdf:type dbo:MilitaryConflict .
  ?triggeWar rdfs:label ""Peninsular War""@en .
  
  OPTIONAL {
    ?triggeClaimToFame dbo:relatedEvent ?societalEvent .
    ?societalEvent rdf:type dbo:SocietalEvent .
  }
  
  # Carl Pontus Gahn's wars
  ?gahn dbo:birthName ""Carl Pontus Gahn""@en .
  ?gahnWar dbo:commander ?gahn .
  ?gahnWar rdf:type dbo:MilitaryConflict .
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
617,67,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parentOfChild ?spouse
WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochus rdfs:label ""Antiochus""@en .
  
  # His successor and child
  ?successor dbo:succeededBy ?antiochus .
  ?child dbo:parent ?successor .

  # Commander in Battle of Panium and their child's parent
  ?commander dbo:commanderInBattleOfPanium ?battle .
  ?child2 dbo:child ?commander .
  ?parentOfChild dbo:parent ?child2 .

  # Spouse of the child of the successor, that is a royalty
  ?spouse dbo:spouse ?child .
  FILTER EXISTS { ?spouse rdf:type dbo:Monarch } 

  # Ensure Antiochus III the Great is the parent of Antiochus and his successor
  ?antiochus dbo:parent ?antiochusIII .
  ?successor dbo:parent ?antiochusIII .

}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
747,60,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  # Find Shèna and her band
  ?shena rdfs:label ""Shèna""@en .
  ?shena dbo:memberOfBand ?band .

  # Find the decedent's birth date
  ?decedent rdf:type dbo:Person ;
            dbo:dateOfBirth ?birthDate .

  # Find an athlete and soccer player born in Zolotonosha with the same birth date
  ?athlete rdf:type dbo:Athlete, dbo:SoccerPlayer ;
           dbo:birthPlace ?place ;
           dbo:dateOfBirth ?birthDate .
  
  FILTER (str(?place) = ""Zolotonosha"")

}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
492,66,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Query 1: Find the capital of Khemis Miliana District
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?capital WHERE {
  ?district rdfs:label ""Khemis Miliana District""@en .
  ?district dbo:administrativeCapital ?capital .
}

# Query 2: Find person decedent at the capital
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT DISTINCT ?decedent WHERE {
  ?place rdfs:label ?capitalLabel .
  FILTER(?capitalLabel = ""Capital Name""@en) # Replace with actual capital name from Query 1
  ?event dbo:location ?place ;
         a dbo:Death .
  ?event dbo:agent ?decedent .
}

# Query 3: Find Joseph C. Satterthwaite's work and associated decedents
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?work ?decedent WHERE {
  ?person rdfs:label ""Joseph C. Satterthwaite""@en ;
          dbo:positionHeld ?work .
  OPTIONAL { 
    ?event dbo:location ?work ;
           a dbo:Death .
    ?event dbo:agent ?decedent .
  }
}

# Query 4: Find Frédéric-Georges Herr's military command and associated decedents
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?conflict ?decedent WHERE {
  ?person rdfs:label ""Frédéric-Georges Herr""@en ;
          dbo:commanderOf ?conflict .
  OPTIONAL { 
    ?event dbo:location ?conflict ;
           a dbo:Death .
    ?event dbo:agent ?decedent .
  }
}
```

Note: The above queries are structured to be executed sequentially. You will need to manually replace placeholders (e.g., ""Capital Name"") with actual results from previous queries and combine the results to find common individuals.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
778,19,test,"Give me the author of the work, that is a software, of the author of Pushd and popd and entity in the award of Ralph L. Brinster.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?author WHERE {
  # Step 1: Find Ken Thompson as the creator of Pushd and Popd
  ?thompson rdfs:label ""Ken Thompson""@en .
  ?thompson dbo:creatorOf ?unix .

  # Step 2: Identify Unix as a software work by Ken Thompson
  ?unix rdfs:label ""Unix""@en .

  # Step 3: Find Dennis Ritchie as co-author of Unix
  ?unix dbo:author ?ritchie .
  ?ritchie rdfs:label ?authorLabel .

  # Step 4: Identify Ralph L. Brinster's award and its entity
  ?brinster rdfs:label ""Ralph L. Brinster""@en .
  ?brinster dbo:award ?award .
  ?award dbo:name ?awardName .
  
  FILTER regex(?awardName, ""National Medal of Science"", ""i"")
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
360,22,test,"Give me the writer of the work, that is an album, of Dave Flett and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?albumWriter WHERE {
  ?album dbo:writer ?person .
  ?person rdfs:label ""Dave Flett""@en .

  ?winnie dbo:deathPlace ?settlement .
  ?winnie rdfs:label ""Winnie Madikizela-Mandela""@en .

  FILTER(?album = ?work) # Assuming the album is also considered a work
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
666,18,test,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as the nickname of England national beach soccer team.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?playerInManager ?sportsManager ?nickname WHERE {
  # Find the team managed by Leonid Slutsky
  ?team dbo:manager ?slutsky .
  ?slutsky rdfs:label ""Leonid Slutsky""@en .

  # Ensure the team is a soccer club and has seasons
  ?team rdf:type dbo:SoccerClub ;
        dbo:sportTeamSeason ?season .

  # Find the player in manager of this sports manager
  ?playerInManager dbo:manager ?sportsManager .
  ?sportsManager rdfs:label ?managerLabel .

  OPTIONAL {
    # Find the nickname of England national beach soccer team
    ?team2 rdfs:label ""England national beach soccer team""@en ;
           rdfs:label ?nickname .
  }
}
```",5,8,6,3,2,3,2,20,0,0,2,0,0.0,0
701,20,test,Give me the parent of the child of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?grandParent WHERE {
  # Find a child of Ramesses II
  ?child dbo:parent dbr:Ramesses_II .
  
  # Find the parent of this child (i.e., grandparent)
  ?child dbo:parent ?grandParent .

  # Find a parent of Meritamen
  dbr:Meritamen dbo:parent ?meritamenParent .

  # Check if the grandparent is also a parent of Meritamen
  FILTER (?grandParent = ?meritamenParent)
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
659,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?person rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  ?person dbo:militaryForce ?militaryForce .
  
  FILTER (CONTAINS(LCASE(STR(?militaryForce)), ""societal event"") && CONTAINS(LCASE(STR(?militaryForce)), ""event"") && CONTAINS(LCASE(STR(?militaryForce)), ""military conflict""))
  
  OPTIONAL {
    ?commander dbo:commanderOf ?militaryForce .
    ?commander dbo:nativeCountry ?nativeCountry .
    
    ?officeHolder rdfs:label ""Kingdom of Ireland""@en ;
                  dbo:officeHolder ?commander .
    
    ?war dbo:militaryConflict ;
         dbo:commander ?commander .
    
    ?figure rdfs:label ""Polish Horse""@en ;
            a dbo:MilitaryUnit, dbo:Organization ;
            dbo:partOf ?war .
  }
}
```",8,16,9,3,3,3,3,71,0,0,15,0,0.0,0
9,45,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?almaMaterJohnAlderdice ?almaMaterAllenHill ?organisation ?nickname WHERE {
  # Alma mater of John Alderdice
  ?johnAlderdice dbo:almaMater ?almaMaterJohnAlderdice .
  ?johnAlderdice rdfs:label ""John Alderdice""@en .

  # Alma mater of Allen Hill (scientist)
  ?allenHill dbo:almaMater ?almaMaterAllenHill .
  ?allenHill rdfs:label ""Allen Hill (scientist)""@en .

  # Organisation or educational institution in Northern Ireland with a nickname
  ?organisation dbo:nickname ?nickname ;
                dbo:location ?location .
  ?location rdfs:label ""Northern Ireland""@en .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
281,25,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?militaryUnit ?war WHERE {
  ?person rdfs:label ""Heather Roy""@en .
  ?person dbo:profession ?profession .
  ?profession dbo:militaryUnit ?militaryUnit .
  OPTIONAL { ?militaryUnit dbo:relatedTo ?entity . FILTER (str(?entity) = ""Colony of New Zealand"") }
  OPTIONAL { ?militaryUnit dbo:relatedTo ?war }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
182,24,test,Give me the entity in the nationality of Tamara Kunanayakam and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?entity WHERE {
  # Part 1: Nationality of Tamara Kunanayakam
  { 
    ?person rdfs:label ""Tamara Kunanayakam""@en .
    ?person dbo:nationality ?entity .
  }
  
  UNION
  
  # Part 2: War related to Gotabhaya Rajapaksa's work
  {
    ?individual rdfs:label ""Gotabhaya Rajapaksa""@en .
    ?individual ?property ?relatedEntity .
    ?relatedEntity rdf:type dbo:War .
    BIND(?relatedEntity AS ?entity)
  }
}
```",4,4,5,2,2,2,3,28,0,1,5,0.0,0.0,0
994,19,test,Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonArtist WHERE {
  # Find associated artists for Watchtower
  ?watchtower dbo:associatedMusicalArtist ?artist1 .
  ?watchtower rdfs:label ""Watchtower (band)""@en .

  # Find associated artists for Red Tide
  ?redTide dbo:associatedMusicalArtist ?artist2 .
  ?redTide rdfs:label ""Red Tide (band)""@en .

  # Match the common artist between both bands
  FILTER (?artist1 = ?artist2)
  
  # Retrieve the name of the common associated artist
  ?commonArtist rdfs:label ?label .
  FILTER(lang(?label) = 'en')
  FILTER(?artist1 = ?commonArtist || ?artist2 = ?commonArtist)
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
747,41,test,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?personBornOnSameDate ?shenaBand ?apolloSongWriterBand WHERE {
  # Find Pavlo Khudzik's birth date
  ?pavloKhudzik dbo:birthDate ?birthDate .
  FILTER (str(?pavloKhudzik) = ""Pavlo_Khudzik"") .

  # Find any person born on the same date as Pavlo Khudzik
  ?person dbo:birthDate ?sameBirthDate .
  FILTER (?sameBirthDate = ?birthDate && str(?person) != ""Pavlo_Khudzik"")
  BIND(str(?person) AS ?personBornOnSameDate)

  # Find Shèna's band
  ?shena dbo:band ?shenaBand .
  FILTER (str(?shena) = ""Shèna"")

  # Find the writer of Apollo by Hardwell and their band
  ?apolloSong rdf:type dbo:Song ;
              rdfs:label ""Apollo""@en ;
              dbo:lyricsBy ?writer .
  ?writer dbo:band ?apolloSongWriterBand .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
915,16,test,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?resident WHERE {
  ?verona dbo:birthPlace ?place .
  ?place rdf:type dbo:Settlement .
  ?place dbo:resident ?resident .

  ?spauldingChild dbo:fictionalCharacter true ;
                  dbo:soapCharacter true ;
                  dbo:father ?father .

  ?spaulding dbo:child ?spauldingChild .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
184,49,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Find Archduchess Margaret of Austria (born 1925)
  ?margaret rdfs:label ""Margaret, Archduchess of Austria""@en .
  ?margaret dbo:birthday ?birthday .
  FILTER(YEAR(?birthday) = 1925)

  # Step 2: Find her parent
  ?parent1 dbo:child ?margaret .

  # Step 3: Find the child of her parent (could be Margaret or a sibling)
  ?sibling dbo:parent ?parent1 .

  # Step 4: Find the parent of this child (should be ?parent1)
  ?parent2 dbo:child ?sibling .
  
  # Step 5: Identify a native of Budapest
  ?budaPerson dbo:nativePlace ?place .
  ?place rdfs:label ""Budapest""@en .

  # Step 6: Find the parent of this native
  ?parent3 dbo:child ?budaPerson .

  # Step 7: Determine if there is a common parent between these paths
  FILTER(?parent1 = ?parent2 && ?parent2 = ?parent3)
  BIND(?parent2 AS ?commonParent)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
994,41,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
# Step 1: Find associated musical artist of Watchtower
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?watchtower dbo:musicalArtist ?associatedArtist .
  ?watchtower rdfs:label ""Watchtower (band)""@en .
}

# Step 2: Identify a band member of Don Dokken
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember WHERE {
  ?donDokkenBand dbo:musicalArtist ?bandMember .
  ?donDokkenBand rdfs:label ""Don Dokken""@en .
}

# Step 3: Find the associated musical artist of that band member
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?associatedArtist WHERE {
  ?bandMember dbo:musicalArtist ?associatedArtist .
  FILTER(?bandMember IN (VALUES ?bandMember) {<result_from_step_2>})
}

# Step 4: Determine the band and group and organization of Meshuggah
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?band WHERE {
  ?meshuggah dbo:musicalArtist ?band .
  ?band rdf:type/rdfs:subClassOf* dbo:Band ;
        rdf:type/rdfs:subClassOf* dbo:Group ;
        rdf:type/rdfs:subClassOf* dbo:Organization .
  ?meshuggah rdfs:label ""Meshuggah""@en .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
161,56,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director and military force of Spanish Civil War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?militaryForce WHERE {
  # Francisco Franco as a commander in military conflicts
  OPTIONAL { 
    dbr:Francisco_Franco dbo:militaryConflict ?conflict .
    ?conflict dbo:commander dbr:Francisco_Franco .
    ?conflict dbo:militaryForce ?militaryForce .
  }
  
  # Francisco Franco as an event and societal event
  OPTIONAL {
    dbr:Francisco_Franco rdfs:seeAlso ?event .
    ?event a dbo:SocietalEvent .
    ?event dbo:militaryConflict ?conflict .
    ?conflict dbo:militaryForce ?militaryForce .
  }
  
  # El Director as an event during the Spanish Civil War
  OPTIONAL {
    dbr:Francisco_Franco rdfs:label ""El Director""@en .
    ?civilWar dbo:event dbr:Spanish_Civil_War .
    ?civilWar dbo:militaryConflict ?conflict .
    ?conflict dbo:militaryForce ?militaryForce .
  }
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
318,8,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?robert rdfs:label ""Robert Xavier Rodriguez""@en .
  ?robert dbo:profession ?profession .

  ?person a dbo:Person ;
          dbo:birthYear ?year ;
          dbo:profession ?profession .
  
  FILTER(?year = 1970)
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
659,43,test,"Give me the military force of Napoleonic Wars and commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?polishHorse ?germanCampaignCommander ?warCommander WHERE {
  ?polishHorse a dbo:MilitaryUnit ;
               rdfs:label ""Polish Horse""@en .
  
  OPTIONAL {
    ?campaign dbo:name ""German Campaign of 1813"" ;
              dbo:commander ?germanCampaignCommander .
    ?polishHorse dbo:participatedIn ?campaign .
  }
  
  OPTIONAL {
    ?war dbo:name ""Napoleonic Wars"" ;
         dbo:commander ?warCommander .
    ?polishHorse dbo:participatedIn ?war .
  }
}
```",5,9,6,3,3,3,3,71,0,0,6,0,0.0,0
963,19,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of Central European Time.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?rulingParty ?administration WHERE {
  ?location dbo:postalCode ""21205"" .
  ?location dbo:rulingParty ?rulingParty .
  ?rulingParty rdf:type dbo:PoliticalParty .
  ?location dbo:country ?country .
  ?country dbo:timeZone dbr:CET .

  OPTIONAL { 
    ?rulingParty dbo:administration ?administration .
  }
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
391,53,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?native WHERE {
  # Find the nickname for Jackson, Tennessee
  ?place rdfs:label ""Jackson""@en .
  ?place dbo:locatedIn ?state .
  ?state rdfs:label ""Tennessee""@en .
  OPTIONAL { ?place dbo:alias ?nickname . }

  # Find actors from ""The Office"" (TV series)
  ?officeWork rdfs:label ""The Office (American TV series)""@en .
  ?officeWork dbo:starring ?actor1 .

  # Find actor of ""The Departed""
  ?departedMovie rdfs:label ""The Departed""@en .
  ?departedMovie dbo:starring ?actor2 .

  # Check if the actors are the same person
  FILTER (?actor1 = ?actor2)

  # Find native place related to nickname
  OPTIONAL { ?actor1 dbo:nativePlace ?native . }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,70,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Find John Pertwee's child who is an actor, narrator, and producer
  ?child dbo:parent dbr:John_Pertwee ;
         rdf:type dbo:Person .
  
  FILTER EXISTS { ?child dbo:profession dbr:Actor . }
  FILTER EXISTS { ?child dbo:profession dbr:Narrator . }
  FILTER EXISTS { ?child dbo:profession dbr:Producer . }

  # Find the child's claim to fame involving a film and military conflict
  ?fame dbo:associatedWith ?child ;
        rdf:type dbo:Film .
  
  OPTIONAL {
    ?militaryConflict dbo:associatedWith ?child ;
                      rdf:type dbo:MilitaryConflict .
  }
  
  # Determine the residence of this child, ensuring it is a settlement in the UK
  ?residence dbo:resident ?child ;
             rdf:type dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Find the native of this residence
  ?native dbo:native ?residence .
  
  # Ensure the native is a politician and office holder from France
  ?native rdf:type dbo:Politician ;
          dbo:officeHolder true ;
          dbo:birthPlace dbr:France .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
16,69,test,Give me the spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?tedSpouse ?alumnaSpouse WHERE {
  # Ted McGinley's spouse
  ?ted dbo:birthName ""Ted McGinley""@en .
  OPTIONAL { ?ted dbo:spouse ?tedSpouse . }
  
  # Alumnus of Ohio State University who is an actress
  ?alumna dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> ;
          a dbo:Actor .
  FILTER (lang(?label) = 'en' && strStarts(str(?label), ""Satomi Ishihara""))
  OPTIONAL { ?alumna dbo:spouse ?alumnaSpouse . }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
701,45,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen and parent of Henuttawy (19th dynasty).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?spouse WHERE {
  ?battle dbo:eventLocation ?location .
  FILTER(CONTAINS(LCASE(?location), ""perire"")) .
  
  ?commander dbo:commanded ?battle .
  ?father dbo:child ?commander .
  
  ?parent rdf:type dbo:RoyalFamilyMember ;
          dbo:child ?meritamen, ?henuttawy .
  FILTER(STRSTARTS(STR(?meritamen), ""http://dbpedia.org/resource/Meritamen"") &&
         STRSTARTS(STR(?henuttawy), ""http://dbpedia.org/resource/Henuttawy"")) .

  ?father dbo:spouse ?spouse .
  ?parent rdf:type/rdfs:subClassOf*+ dbo:RoyalFamilyMember ;
          dbo:child ?meritamen, ?henuttawy .
  
  FILTER(?spouse = ?parent)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
232,68,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Find Sylvie Bermann's residence
  ?sylvie dbo:residence ?settlement .
  ?settlement rdfs:label ?labelSettlement ;
              dbo:country dbc:United_Kingdom .

  # Find Jon Pertwee's parent
  ?jon foaf:name ""Jon Pertwee""@en .
  ?parent foaf:child ?jon .
  
  # Identify the claim to fame involving a film and military conflict
  ?claimToFame dbo:film ?film ;
               dbo:militaryConflict ?conflict .

  # Find the actor associated with this claim
  ?actor dbo:profession dbr:Actor ;
         dbo:claimToFame ?claimToFame .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
378,51,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in Peninsular War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?achievement WHERE {
  ?person rdfs:label ""Thomas Trigge""@en .
  ?person dbo:nationality ?nationality .
  ?person dbo:role ?role .
  ?war rdfs:label ""Peninsular War""@en .
  ?person dbo:participatedIn ?war .
  
  OPTIONAL {
    ?person dbo:award ?achievement .
  }
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
528,42,test,Give me the war of Orozimbo Barbosa and force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?orozimboWar ?camperoWar ?pisaguaWar WHERE {
  # Orozimbo Barbosa's War
  ?person rdfs:label ""Orozimbo Barbosa""@en .
  ?person dbo:birthName ""Orozimbo Barbosa"" .
  OPTIONAL { ?person dbo:participatedIn ?orozimboWar . }

  # Narciso Campero Leyes' Military Force
  ?camperoPerson rdfs:label ""Narciso Campero Leyes""@en .
  ?camperoPerson dbo:birthName ""Narciso Campero Leyes"" .
  OPTIONAL { ?camperoPerson dbo:participatedIn ?camperoWar . }

  # Battle of Pisagua's War
  ?battle rdfs:label ""Battle of Pisagua""@en .
  OPTIONAL { ?battle dbo:partOf ?pisaguaWar . }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
747,68,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person WHERE {
  ?decedent dbo:birthDate ?date .
  ?decedent dbo:birthPlace ?place .
  FILTER(?place = dbpedia:Zolotonosha)

  ?person dbo:birthDate ?date .
  ?person dbo:birthPlace ?place .
  ?person dbo:athlete true .
  ?person dbo:soccerPlayer true .

  ?band dbo:member ?person .
  ?bandMember dbo:name ""Tracey Elizabeth McSween"" .
  ?band dbo:member ?bandMember .

  ?song dbo:title ""Amba Shepherd""@en .
  ?song dbo:lyricist ?writer .
  ?band dbo:song ?song .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
427,47,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alumnus ?father ?party WHERE {
  ?alumnus dbo:alumnusOf db:MIT .
  ?alumnus foaf:parent ?father .
  OPTIONAL { ?father dbo:partyAffiliation ?party . }
  
  FILTER EXISTS { 
    ?party rdfs:label ""Italian People's Party (1994)""@en .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,66,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?finalBandMember WHERE {
  # Step 1: Identify Don Dokken as a musical artist
  ?donDokken dbo:birthName ""Don Dokken"" .
  
  # Step 2: Find band members of Don Dokken
  ?band dbo:member ?donDokken ;
        dbo:member ?bandMember .

  # Step 3: Identify associated artists of Watchtower (band)
  ?watchtowerArtist dbo:associatedBand ?watchtower ;
                    foaf:name ?artistName .
  
  FILTER(?watchtower = <http://dbpedia.org/resource/Watchtower_(band)>)

  # Step 4: Find band members who are also part of Meshuggah
  ?meshuggahMember dbo:member ?meshuggahBand ;
                   foaf:name ?meshuggahArtistName .
  
  FILTER(?meshuggahBand = <http://dbpedia.org/resource/Meshuggah>)

  # Step 5: Chain connections to find the final band member
  ?bandMember foaf:name ?finalBandMember .

  OPTIONAL {
    ?watchtowerArtist dbo:associatedBand ?intermediateBand .
    ?intermediateBand dbo:member ?meshuggahMember .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
356,16,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of 2014 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?currentTeam WHERE {
  ?person dbo:nativePlace ?wolverhampton .
  ?wolverhampton rdfs:label ""Wolverhampton""@en .

  ?person dbo:playerForTeam ?sacramento2014 .
  ?sacramento2014 dbo:succeededBy ?successorTeam .
  
  OPTIONAL { ?person dbo:managerOfTeam ?team . }
  
  ?person dbo:playerForTeam ?currentTeam .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
92,66,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist1 ?band1 ?artist2 ?band2 WHERE {
  # Find the artist associated with Jim Sheppard
  ?person1 dbo:birthName ""Jim Sheppard"" .
  ?person1 dbo:associatedBand ?band1 .
  ?person1 rdfs:label ?artist1 .

  # Find the artist associated with Joseph Michael
  ?person2 dbo:birthName ""Joseph Michael"" .
  ?person2 dbo:associatedBand ?band2 .
  ?person2 rdfs:label ?artist2 .

  # Check if either person is a member of Nevermore
  OPTIONAL { ?person1 dbo:member <http://dbpedia.org/resource/Nevermore> . }
  OPTIONAL { ?person2 dbo:member <http://dbpedia.org/resource/Nevermore> . }

  FILTER (?band1 != ?band2) # Ensure different bands are selected
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
701,29,test,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentMeritamen ?spouseRamessesII ?childParent WHERE {
  # Parent of Meritamen
  ?meritamen rdfs:label ""Meritamen""@en .
  OPTIONAL { 
    ?meritamen dbo:parent ?parentMeritamen .
  }

  # Spouse of Ramesses II
  ?ramessesII rdfs:label ""Ramesses II""@en .
  OPTIONAL {
    ?ramessesII dbo:spouse ?spouseRamessesII .
  }
  
  # Parent of the child of Ramesses II
  OPTIONAL {
    ?child dbo:parent ?childParent ;
           dbo:father|dbo:mother ?ramessesII .
  }
}
```",4,4,5,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
617,53,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  # Step 1: Identify Antiochus IV
  ?antiochusIV rdfs:label ""Antiochus IV""@en .
  
  # Step 2: Find a child of Antiochus IV
  ?child dbo:parent ?antiochusIV .

  # Step 3: Parent of this child is Antiochus IV (already known)

  # Step 4: Identify the grandchild who is royalty
  ?grandchild dbo:parent ?child .
  FILTER EXISTS { ?grandchild rdfs:label ?title . 
                 VALUES ?title { ""king""@en ""queen""@en } }

  # Step 5: Find successor of Antiochus II Theos who is royalty
  ?antiochusII rdfs:label ""Antiochus II Theos""@en .
  ?successor dbo:succeededBy ?antiochusII .
  FILTER EXISTS { ?successor rdfs:label ?title . 
                 VALUES ?title { ""king""@en ""queen""@en } }

  # Step 6: Find spouse of Laodice IV
  ?laodiceIV rdfs:label ""Laodice IV""@en .
  ?spouse dbo:spouse ?laodiceIV .

  # Step 7: Combine relationships
  FILTER (?grandchild = ?successor && ?grandchild = ?spouse)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,33,test,"Give me the military force of Rif War and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?rifWarForces WHERE {
  ?rifWar dbo:militaryConflict ""Rif War"" .
  ?rifWar dbo:opposingMilitaryForce ?rifWarForces .
}

UNION

SELECT ?civilWarForces WHERE {
  ?civilWar dbo:militaryConflict ""Spanish Civil War""@en .
  ?civilWar dbo:opposingMilitaryForce ?civilWarForces .
}
```",4,6,5,3,2,3,3,71,0,0,34,0,0.0,0
801,26,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?producer WHERE {
  ?artist a dbo:MusicalArtist ;
          rdfs:label ?artistLabel .
  FILTER(CONTAINS(LCASE(?artistLabel), ""rapper"")) .

  ?work dbo:musicalArtist ?artist ;
        a dbo:MusicalWork, dbo:Song .

  ?work dbo:producer ?producer .
}
```",3,7,4,3,1,3,3,71,0,0,956,0,0.0,0
547,46,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchildRestingPlace ?actorRestingPlace WHERE {
  # Part 1: Resting place of the child of the child of William Haliburton
  ?williamHaliburton rdfs:label ""William Haliburton""@en .
  ?williamHaliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild dbo:deathPlace ?grandchildRestingPlace .

  # Part 2: Resting place of the actor of ""Enemy at the Door""
  ?film rdfs:label ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:deathPlace ?actorRestingPlace
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
294,24,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?restingPlace ?entityInBirthplace WHERE {
  # Part 1: Resting place of the architect of P. D. Houston Jr. House
  ?house dbo:architect ?architect .
  FILTER (str(?house) = ""P._D._Houston_Jr._House"")
  OPTIONAL { ?architect dbo:restingPlace ?restingPlace . }

  # Part 2: Entity in the birthplace of Marion James, ensuring it's a settlement
  ?marion dbo:birthPlace ?birthPlace .
  FILTER (str(?marion) = ""Marion_James"")
  ?birthPlace rdf:type dbo:Settlement .
  OPTIONAL { ?birthPlace ?property ?entityInBirthplace . }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
492,51,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?war dbo:commander ?commander .
  ?war dbo:participant ""Frédéric-Georges Herr"" .
  
  ?district dbo:capital ?capital .
  ?district rdfs:label ""Khemis Miliana District""@en .

  ?country dbo:administrativeDivision ?district .
  ?capital dbo:settlementType dbc:Settlements_in_Algeria .
  
  ?commander dbo:deathPlace ?capital .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,67,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Identify the person born as Joseph Michael
  ?person dbo:birthName ""Joseph Michael""@en .
  
  # Step 2: Find the associated musical artist of that person
  OPTIONAL { ?person dbo:musicalArtist ?artist . }
  
  # Step 3: Determine the actor of Return to Nuke 'Em High Volume 1
  ?actor dbo:film ?movie .
  ?movie rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
  
  # Step 4: Identify the band member of Nevermore and the band associated with Joseph Michael
  ?nevermoreMember dbo:bandMember <http://dbpedia.org/resource/Nevermore> .
  OPTIONAL { ?person dbo:musicalBand ?band . }
  
  # Combine these elements to find a common musical artist or association
  FILTER (?artist = ?associatedArtist)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,48,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?saitoHajime rdfs:label ""Saitō Hajime""@en .
  ?saitoHajime dbo:birthPlace ?birthPlace .

  OPTIONAL { 
    ?boshinWar rdfs:label ""Boshin War""@en ;
               a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .
  }

  OPTIONAL {
    ?toyotomiHideyoshi rdfs:label ""Toyotomi Hideyoshi""@en ;
                       dbo:child ?emperorGoMizunoo .
    ?emperorGoMizunoo rdfs:label ""Emperor Go-Mizunoo""@en .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
232,59,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?person dbo:birthName ""Jon Pertwee""@en .
  
  ?famousPerson dbo:claimNotability dbr:Actor ;
                dbo:film ?film ;
                dbo:militaryConflict ?conflict .

  ?famousPerson dbo:child ?child .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
182,20,test,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake and entity in Sri Lanka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?gotabhayaWork ?maheshWork ?entity WHERE {
  # Gotabhaya Rajapaksa's works related to war
  ?gotabhaya dbo:work ?gotabhayaWork .
  ?gotabhaya rdfs:label ""Gotabhaya Rajapaksa""@en .
  
  # Mahesh Senanayake's works related to war
  ?mahesh dbo:work ?maheshWork .
  ?mahesh rdfs:label ""Mahesh Senanayake""@en .

  # Entity in Sri Lanka connected to the context of war
  ?entity dbo:country <http://dbpedia.org/resource/Sri_Lanka> .
  
  OPTIONAL {
    ?gotabhayaWork rdfs:comment ?gotabhayaComment .
    FILTER(CONTAINS(LCASE(?gotabhayaComment), ""war""))
  }
  OPTIONAL {
    ?maheshWork rdfs:comment ?maheshComment .
    FILTER(CONTAINS(LCASE(?maheshComment), ""war""))
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
161,52,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?militaryForce WHERE {
  ?person rdfs:label ""Francisco Largo Caballero""@en .
  
  # Link person to military conflict during Francoist Spain
  ?conflict dbo:participatedIn ?francoistSpain ;
            rdf:type dbo:MilitaryConflict .
  ?francoistSpain rdfs:label ""Francoist Spain""@en .

  # Link person to Biscay Campaign
  ?campaign dbo:commander ?person ;
            rdf:type dbo:MilitaryCampaign .
  ?campaign rdfs:label ""Biscay Campaign""@en .

  # Find military force associated with the conflict and campaign
  ?conflict dbo:militaryForce ?militaryForce .
  OPTIONAL { ?campaign dbo:militaryForce ?militaryForce . }
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
391,20,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actor ?work WHERE {
  ?ballhaus a dbo:Person ;
            dbo:nationality dbr:United_States ;
            dbo:claimToFame ?work .
  
  ?actor a dbo:Actor ;
         dbo:birthPlace dbr:Compton,_California ;
         dbo:profession dbr:Acting .

  FILTER(?work = ?actorWork)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
345,16,test,"Give me the figure known as the nickname of FC Vaduz and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?nickname ?team WHERE {
  # Part 1: Nickname of FC Vaduz
  { 
    ?club rdfs:label ""FC Vaduz""@en .
    ?club dbo:nickname ?nickname .
  }
  
  UNION
  
  # Part 2: Team of a soccer player and manager born on 1978-09-15
  {
    ?person dbo:birthDate ?date .
    FILTER (YEAR(?date) = 1978 && MONTH(?date) = 9 && DAY(?date) = 15)
    
    OPTIONAL { ?person dbo:player ?playerRole . }
    OPTIONAL { ?person dbo:manager ?managerRole . }
    
    ?person dbo:team ?team .
    
    FILTER EXISTS { ?person dbo:player ?playerRole } .
    FILTER EXISTS { ?person dbo:manager ?managerRole } .
  }
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
232,25,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?native WHERE {
  # Find Sylvie Bermann's residence
  ?sylvie dbo:residence ?residence .
  
  # Ensure the residence is a settlement and British
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbc:United_Kingdom .

  # Identify an actor from ""Dog Soldiers""
  ?film dbo:title ""Dog Soldiers""@en ;
        dbo:actor ?actor .
  FILTER(?actor != ?sylvie) # Ensure the actor is not Sylvie Bermann

  # Find the native of the residence
  ?residence dbo:nativeCitizen ?native .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
404,50,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfRoyalChild WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?princeGeorge rdfs:label ""Prince George William of Hanover""@en .
  
  # Step 2: Find his parent who is royalty
  ?royalParent dbo:child ?princeGeorge ;
               a dbo:Monarch .

  # Step 3: Identify the child of this royal parent
  ?royalChild dbo:parent ?royalParent .

  # Step 4: Identify Ernest Augustus, Duke of Brunswick's father
  ?ernestAugustus rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?fatherOfErnestAugustus dbo:child ?ernestAugustus .

  # Step 5: Find the child of this father who is royalty
  ?royalChild2 dbo:parent ?fatherOfErnestAugustus ;
               a dbo:Monarch .

  # Step 6: Determine the parent of this royal child
  ?parentOfRoyalChild dbo:child ?royalChild2 .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
16,64,test,Give me the professional in Actress and person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actress ?birthName WHERE {
  ?actress a dbo:Actress ;
           foaf:name ?birthName .
  
  ?alumnus dbo:alumniOf <http://dbpedia.org/resource/Ohio_State_University> ;
           dbo:spouse ?actress .

  ?ted foaf:name ""Edward Joseph McGinley"" ;
       dbo:spouse ?alumnus .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,34,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentIlona ?parentNative WHERE {
  # Part 1: Parent of Archduchess Ilona of Austria
  ?ilona a dbo:Person ;
         rdfs:label ""Archduchess Ilona of Austria""@en .
  
  OPTIONAL { 
    ?ilona dbo:parent ?parentIlona .
  }
  
  # Part 2: Parent of the native of a landmark at elevation 96.0
  ?landmark a dbo:PopulatedPlace ;
            dbo:elevationAboveSeaLevel ""96.0""^^xsd:float ;
            rdfs:label ?landmarkLabel .
  
  OPTIONAL {
    ?native dbo:nativeOf ?landmark ;
            dbo:parent ?parentNative .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
617,61,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfChild ?spouseOfSuccessorChild WHERE {
  # Find the commander in Battle of Panium
  ?battle rdfs:label ""Battle of Panium""@en .
  ?battle dbo:commander ?commander .

  # Find the child of the commander
  ?child dbo:parent ?commander .

  # Find the parent of that child
  ?parentOfChild dbo:child ?child .

  # Find Antiochus (son of Antiochus III the Great)
  ?antiochus rdfs:label ""Antiochus (son of Antiochus III the Great)""@en .
  
  # Find the successor of Antiochus
  ?successor dbo:succesorOf ?antiochus .

  # Find the child of the successor
  ?childOfSuccessor dbo:parent ?successor .

  # Find the spouse of that child, ensuring they are royalty
  ?spouseOfSuccessorChild dbo:spouse ?childOfSuccessor .
  ?spouseOfSuccessorChild a dbo:RoyalFamilyMember .  # Assuming this class indicates royalty

}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
659,56,test,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?battleCommander ?welshCommander ?force ?societalEvent ?event ?militaryConflict WHERE {
  # Find commanders in the Battle of Leipzig
  ?battle rdf:type dbo:MilitaryConflict ;
          rdfs:label ""Battle of Leipzig""@en .
  ?battle dbo:commander ?battleCommander .

  # Find Arthur Wellesley's commander and force
  ?welshForce rdf:type dbo:MilitaryForce ;
              dbo:commander ?welshCommander .
  ?welshCommander rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .

  # Ensure the military conflict is a societal event, an event, and a military conflict
  ?battle rdf:type dbo:SocietalEvent ;
          rdf:type dbo:Event ;
          rdf:type dbo:MilitaryConflict .

  # Find any reference to Rutger Jan Schimmelpenninck
  OPTIONAL {
    ?reference rdfs:label ""Rutger Jan Schimmelpenninck""@en .
    ?battle dbo:reference ?reference .
  }

  # Ensure the force is a societal event, an event, and a military conflict
  ?welshForce rdf:type dbo:SocietalEvent ;
              rdf:type dbo:Event ;
              rdf:type dbo:MilitaryConflict .

}
```",6,9,7,3,3,3,3,71,0,0,6,0,0.0,0
747,34,test,"Give me the band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band ?person WHERE {
  # Find the band associated with Shèna
  ?shena rdfs:label ""Shèna""@en .
  ?shena dbo:member ?band .

  # Find an athlete and soccer player from Zolotonosha
  ?athlete dbo:birthPlace ?place ;
           dbo:occupation ?occupation1, ?occupation2 .
  FILTER (CONTAINS(LCASE(?occupation1), ""athlete"") && CONTAINS(LCASE(?occupation2), ""soccer player""))
  ?place rdfs:label ""Zolotonosha""@en .

  # Get the birth date of this athlete
  ?athlete dbo:birthDate ?birthDate .

  # Find another person born on that same date
  ?person dbo:birthDate ?birthDate .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
994,69,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?meshuggahMember ?associatedArtist ?watchtowerMember ?dokkenAssociatedArtist WHERE {
  # Meshuggah members
  ?meshuggah dbo:member ?meshuggahMember .
  
  # Associated musical artists for each Meshuggah member
  OPTIONAL { 
    ?meshuggahMember dbo:band ?associatedBand .
    ?associatedBand rdfs:label ?associatedArtist .
  }
  
  # Watchtower members
  ?watchtower dbo:member ?watchtowerMember .
  
  # Associated musical artists for each Watchtower member
  OPTIONAL {
    ?watchtowerMember dbo:band ?watchtowerAssociatedBand .
    ?watchtowerAssociatedBand rdfs:label ?watchtowerAssociatedArtist .
  }
  
  # Don Dokken as a persona and his birth details
  ?dokken foaf:name ""Don Dokken""@en .
  ?dokken dbo:birthPlace ?birthPlace .
  
  # Linking the associated artists through band members
  OPTIONAL {
    ?watchtowerAssociatedArtist dbo:bandMember ?meshuggahMember .
  }
  
  OPTIONAL {
    ?associatedArtist dbo:bandMember ?watchtowerMember .
  }

  FILTER (lang(?associatedArtist) = 'en' && lang(?watchtowerAssociatedArtist) = 'en')
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
10,28,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v3 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?sharonKao rdfs:label ""Sharon Kao""@en .
  ?sharonKao dbo:birthName ?birthName .
}

UNION

SELECT ?associatedArtist WHERE {
  ?mattColton rdfs:label ""Matt Colton""@en .
  ?mattColton dbo:associatedBand ?band .
  ?band dbo:member ?associatedArtist .
}

UNION

SELECT ?bandMember WHERE {
  ?lukeVibert rdfs:label ""Luke Francis Vibert""@en .
  ?band dbo:member ?lukeVibert ;
        dbo:member ?bandMember .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
16,48,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?gigi rdfs:label ""Gigi Rice""@en .
  ?gigi dbo:birthName ?birthName .

  ?ted rdfs:label ""Ted McGinley""@en .
  ?ted dbo:spouse ?spouse .

  FILTER (?spouse = ?gigi)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
328,52,test,Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?szalasiForce dbo:commander ?person .
  FILTER (str(?szalasiForce) = ""Ferenc Szálasi's force"") .

  ?person dbo:awardReceived ?volcanoAward .
  ?volcanoAward rdfs:label ""Commander in the Volcano and Ryukyu Islands campaign""@en .

  ?sovietDefenseLeader dbo:leader ?person .
  FILTER (str(?sovietDefenseLeader) = ""People's Commissariat of Defense of the Soviet Union"") .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
314,20,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?awardee WHERE {
  # Sergei Makovetsky's awards
  ?s dbr:Sergei_Makovetsky dbo:award ?award .
  
  # Awardee of the award
  ?award dbo:recipient ?awardee .

  # Person deceased at Madrid
  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . FILTER (CONTAINS(LCASE(str(?deathPlace)), ""madrid"")) }

  # Commander in Spanish Civil War
  OPTIONAL {
    ?awardee dbo:role ?role .
    ?role rdfs:label ?roleLabel .
    FILTER (CONTAINS(LCASE(?roleLabel), ""commander"") && CONTAINS(LCASE(?roleLabel), ""spanish civil war""))
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
712,16,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?capital ?restingPlace WHERE {
  # Part 1: Capital of the country associated with Armed Forces of South Russia
  ?forces rdfs:label ""Armed Forces of South Russia""@en .
  ?forces dbo:country ?country .
  ?country dbo:capital ?capital .

  # Part 2: Resting place of an awardee of Hero of the Soviet Union
  ?person dbo:awardedTitle ?title .
  FILTER(CONTAINS(LCASE(STR(?title)), ""hero of the soviet union""))
  OPTIONAL { 
    ?person dbo:deathPlace ?restingPlace .
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
547,25,test,Give me the resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?personLabel ?restingPlace WHERE {
  # Resting place of Simon Cadell
  { 
    ?cadell rdfs:label ""Simon Cadell""@en .
    ?cadell dbo:finalBurial ?restingPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  UNION

  # Resting place of an awardee of Knight Grand Cross
  {
    ?person dbo:honours ?honour .
    ?honour rdfs:label ""Knight Grand Cross of the Order of St Michael and St George""@en .
    ?person dbo:finalBurial ?restingPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
659,31,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:officeHolder ?office .
  ?office rdfs:label ""Kingdom of Ireland""@en .
  
  ?person dbo:commanderOfMilitaryConflict ?conflict .
  ?conflict rdfs:label ""Battle of Leipzig""@en .
}
```",4,5,5,3,2,3,3,71,0,0,19,0,0.0,0
328,22,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?awardee ?agency WHERE {
  ?stalin rdfs:label ""Joseph Stalin""@en .
  ?stalin dbo:awardee ?order .
  ?order rdfs:label ""Order of Suvorov""@en .
  ?stalin dbo:head ?agency .
  ?agency a dbo:GovernmentAgency .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
339,16,test,Give me the child of the child of Christian IX of Denmark and father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonIndividual WHERE {
  # Find Christian IX's children
  ?christianIX dbo:spouse ?wife .
  ?child1 dbo:parent ?christianIX ;
          dbo:parent ?wife .

  # Find Christian IX's grandchildren (children of his children)
  ?grandChild dbo:parent ?child1 .

  # Find Grand Duchess Elena Vladimirovna's child
  ?elenaVladimirovna dbo:spouse ?husband .
  ?child2 dbo:parent ?elenaVladimirovna ;
          dbo:parent ?husband .

  # Find the father of Grand Duchess Elena's child
  ?fatherOfChild2 dbo:parent ?child2 .

  # Match the common individual who is both a grandchild of Christian IX and the father of Elena's child
  FILTER (?grandChild = ?commonIndividual && ?commonIndividual = ?fatherOfChild2)

  # Bind names to ensure correct entities are being queried
  VALUES ?christianIX { <http://dbpedia.org/resource/Christian_IX_of_Denmark> }
  VALUES ?elenaVladimirovna { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
177,9,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in the residence of Alexander Gamelin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://dbpedia.org/ontology/location> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?headquarter ?residence WHERE {
  ?person rdfs:label ""Joo Don-sik""@en .
  ?organisation dbo:member ?person ;
                dbo:headquarter ?headquarter .
  
  ?entity rdfs:label ""Alexander Gamelin""@en .
  ?entity dbo:residence ?residence .
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
617,47,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?grandchildSpouse WHERE {
  # Seleucus II Callinicus and his royal child
  ?seleucus rdfs:label ""Seleucus II Callinicus""@en .
  ?seleucus dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # Royal grandchild of Seleucus II Callinicus
  ?royalChild dbo:child ?grandchild .
  ?grandchild rdf:type dbo:Monarch .

  # Spouse of the royal grandchild
  ?grandchild dbo:spouse ?grandchildSpouse .

  # Antiochus (son of Antiochus III) and his successor's child who is royalty
  ?antiochus rdfs:label ""Antiochus (son of Antiochus III the Great)""@en .
  ?successor dbo:predecessor ?antiochus .
  ?successor dbo:child ?royalSuccessorChild .
  ?royalSuccessorChild rdf:type dbo:Monarch .

  # Ensure the spouse is the child of the successor
  FILTER (?grandchildSpouse = ?royalSuccessorChild)
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
492,60,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?decedent1 ?decedent2 WHERE {
  # Part 1: Decedent at the capital of Khemis Miliana District
  ?district rdfs:label ""Khemis Miliana District""@en .
  ?district dbo:capital ?capital .
  ?capital rdf:type dbo:Settlement .
  ?decedent1 dbo:decedentAtLocation ?capital .

  # Part 2: Decedent at the work of the author of French Algeria
  ?author rdfs:label ""French Algeria""@en .
  ?work dbo:author ?author .
  ?decedent2 dbo:decedentAtLocation ?work .
}
```",6,7,7,3,2,3,3,71,0,0,16,0,0.0,0
391,57,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  ?person dbo:nativePlace ?compton .
  ?compton rdfs:label ""Compton, California""@en .
  
  ?work dbo:starring ?actor .
  ?spouse dbo:spouse ?hormann .
  ?hormann foaf:name ""Sherry Hormann"" .
  ?work dbo:starring ?spouse .

  ?movie dbo:starring ?actor ;
         dbo:starring <http://dbpedia.org/resource/Roz_Ryan> ;
         rdf:type dbo:Film, dbo:TelevisionSeries .

}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
767,45,test,"Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?almaMater ?entityInBadenWuerttemberg ?alterEgo WHERE {
  # Alma mater of Carl L. Nippert
  ?person rdfs:label ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?almaMater .

  # Entity in Baden-Württemberg
  ?entityInBadenWuerttemberg dbo:location ?place .
  ?place rdfs:label ?placeLabel FILTER (CONTAINS(LCASE(?placeLabel), ""baden-württemberg""))

  # Alter ego of Matthew Burland's persona
  OPTIONAL {
    ?burland rdfs:label ""Matthew Burland""@en .
    ?burland foaf:alterEgo ?fictionalCharacter .
    ?fictionalCharacter rdfs:label ?alterEgoLabel .
  }
}
```",5,6,6,3,3,3,3,71,1,213,0,0.004672897196261682,1.0,0.009302325581395347
92,26,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actor ?musicalArtist WHERE {
  ?movie dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:actor ?actor .
  
  OPTIONAL { 
    ?actor dbo:musicalArtist ?musicalArtist .
  }
}
```",3,4,4,3,1,3,3,71,0,0,126,0,0.0,0
281,46,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?country ?war WHERE {
  # Part 1: Bob Heffron's birth place country
  ?bob a dbo:Person ;
       foaf:name ""Bob Heffron""@en .
  OPTIONAL { 
    ?bob dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:Country ;
               rdfs:label ?country .
  }

  # Part 2: Jonathon Band's award war
  ?jon a dbo:Person ;
       foaf:name ""Jonathon Band""@en .
  OPTIONAL {
    ?jon dbo:award ?award .
    ?award dbo:war ?war .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,55,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?forceLargoCaballero ?commanderEmilioMola ?forceFranco WHERE {
  # Francisco Largo Caballero's military force
  ?personLargo rdfs:label ""Francisco Largo Caballero""@en .
  ?personLargo dbo:participatedIn ?forceLargoCaballero .
  FILTER (EXISTS { ?forceLargoCaballero rdf:type dbo:MilitaryConflict } &&
          EXISTS { ?forceLargoCaballero rdf:type dbo:SocietalEvent })

  # Emilio Mola's event as a commander
  ?personMola rdfs:label ""Emilio Mola""@en .
  ?eventEmilio dbo:commander ?personMola .
  BIND(?eventEmilio AS ?commanderEmilioMola)

  # Francisco Franco's military force/event
  ?personFranco rdfs:label ""Francisco Franco""@en .
  ?forceFranco dbo:participatedIn ?personFranco .
  FILTER (EXISTS { ?forceFranco rdf:type dbo:MilitaryConflict } &&
          EXISTS { ?forceFranco rdf:type dbo:SocietalEvent } &&
          EXISTS { ?forceFranco rdf:type dbo:Event })
}
```",6,12,7,2,3,3,3,71,0,0,32,0,0.0,0
378,45,test,"Give me the war of Joaquín Blake and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?joaquinBlakeWar ?carlPontusGahnWar ?thomasTriggeFame WHERE {
  # Wars involving Joaquín Blake
  ?joaquinBlakeWar dbo:commander ?joaquinBlake .
  ?joaquinBlake rdfs:label ""Joaquín Blake""@en .

  # Wars involving Carl Pontus Gahn
  ?carlPontusGahnWar dbo:commander ?carlPontusGahn .
  ?carlPontusGahn rdfs:label ""Carl Pontus Gahn""@en .

  # Thomas Trigge's claim to fame as a commander in a military conflict that is also a societal event
  ?thomasTriggeFame dbo:commander ?thomasTrigge .
  ?thomasTrigge rdfs:label ""Thomas Trigge""@en .
  ?thomasTriggeFame rdf:type dbo:MilitaryConflict ;
                   dbo:socialEvent ?event .

}
```",5,8,6,3,3,3,3,71,0,0,2,0,0.0,0
161,32,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?francoMilitaryForce ?caballeroMilitaryForce WHERE {
  # Francisco Franco's military force
  ?francoEntity dbo:associatedWith dbr:Francisco_Franco .
  ?francoEntity rdf:type dbo:MilitaryConflict .
  ?francoEntity rdfs:seeAlso ?societalEvent1 .

  # Francisco Largo Caballero's military force
  ?caballeroEntity dbo:associatedWith dbr:Francisco_Largo_Caballero .
  ?caballeroEntity rdf:type dbo:MilitaryConflict .
  ?caballeroEntity rdfs:seeAlso ?societalEvent2 .

  # Ensure the societal event is also a military conflict
  FILTER (?francoEntity = ?societalEvent1)
  FILTER (?caballeroEntity = ?societalEvent2)

  BIND(?francoEntity AS ?francoMilitaryForce)
  BIND(?caballeroEntity AS ?caballeroMilitaryForce)
}
```",4,9,5,2,2,3,3,71,0,0,514,0,0.0,0
617,54,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?targetPerson WHERE {
  # Identify Nysa
  ?nysa rdfs:label ""Nysa""@en .
  
  # Find parent of Nysa
  OPTIONAL { ?nysa dbo:parent ?parentOfNysa . }
  
  # Identify Antiochus IV Epiphanes as successor of Antiochus III's son
  ?antiochusIV rdfs:label ""Antiochus IV Epiphanes""@en .
  ?antiochusIV dbo:successorOf ?antiochusIIIson .

  # Find child of Antiochus IV who is royalty
  OPTIONAL { ?childOfAntiochusIV dbo:child ?antiochusIV . }
  FILTER EXISTS { ?childOfAntiochusIV dbo:royalty ""true""^^xsd:boolean }

  # Spouse of the royal child
  OPTIONAL { ?spouseOfChild dbo:spouse ?childOfAntiochusIV . }

  # Identify Seleucus II Callinicus' descendant who is royalty
  ?seleucusII rdfs:label ""Seleucus II Callinicus""@en .
  OPTIONAL {
    ?grandchildOfSeleucusII dbo:parent ?childOfSeleucusII .
    ?childOfSeleucusII dbo:parent ?seleucusII .
    FILTER EXISTS { ?grandchildOfSeleucusII dbo:royalty ""true""^^xsd:boolean }
  }

  # Spouse of the grandchild
  OPTIONAL { ?spouseOfGrandchild dbo:spouse ?grandchildOfSeleucusII . }

  # Find target person who is parent of Nysa's parent and spouse of royal descendant
  ?targetPerson dbo:parent ?parentOfNysa .
  ?targetPerson dbo:spouse ?spouseOfGrandchild .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
617,19,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  ?boleslaus1 rdfs:label ""Boleslaus I, Duke of Bohemia""@en .
  
  ?boleslaus1 dbo:child ?child .
  FILTER EXISTS { ?child a dbo:Monarch . }
  
  ?child dbo:child ?grandchild .
  FILTER EXISTS { ?grandchild a dbo:Monarch . }
  
  ?grandchild dbo:father ?father .
  ?father dbo:parent ?parent .
  FILTER EXISTS { ?parent a dbo:Monarch . }

  OPTIONAL {
    ?reference rdfs:label ""Richeza of Poland""@en .
    ?parent dbo:spouse ?reference .
  }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
666,17,test,"Give me the player in Steve Bruce and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?player ?nickname WHERE {
  ?manager rdfs:label ""Steve Bruce""@en .
  ?team dbo:manager ?manager .
  ?player dbo:memberOfTeam ?team ;
          dbo:nickname ?nickname .
  OPTIONAL { ?organization rdfs:label ?nickname .
             a dbo:Organization ;
             dbo:locationCountry dbc:England . }
  OPTIONAL { ?soccerClub rdfs:label ?nickname .
             a dbo:SoccerClub ;
             dbo:locationCountry dbc:England . }
  OPTIONAL { ?sportsClub rdfs:label ?nickname .
             a dbo:SportsClub ;
             dbo:locationCountry dbc:England . }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,37,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commanderInVerdun ?conflictOrEvent ?decedentAtAlgiers WHERE {
  # Find the commander in the Battle of Verdun
  ?battle rdfs:label ""Battle of Verdun""@en .
  ?battle dbo:commander ?commanderInVerdun .

  # Find a military conflict or event involving this commander
  OPTIONAL { 
    ?conflictOrEvent dbo:commander ?commanderInVerdun .
    FILTER(?conflictOrEvent != ?battle)
  }

  # Find a person who decedent at Algiers
  ?person dbo:deathPlace ?algiers .
  ?algiers rdfs:label ""Algiers""@en .

  # Check if the commander in Verdun is related to this person through another conflict or event
  OPTIONAL {
    ?conflictOrEvent dbo:commander ?decedentAtAlgiers .
    FILTER(?decedentAtAlgiers != ?commanderInVerdun)
  }
}
```",4,6,5,3,2,3,3,71,1,53855,0,1.8568033273915628e-05,1.0,3.713537701691517e-05
9,57,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater ?nickname WHERE {
  # Find John Alderdice's alma mater
  ?john dbo:almaMater ?almaMater .
  FILTER(STR(?john) = ""John_Alderdice"")

  OPTIONAL {
    # Get the nickname of Queen's University Belfast
    ?university rdfs:label ""Queen's University Belfast""@en ;
               dbp:nickname ?nickname .
    FILTER(STR(?almaMater) = STR(?university))
  }

  OPTIONAL {
    # Find awardees of Royal Medals and their alma maters
    ?medalist dbo:award ?royalMedal .
    ?royalMedal rdfs:label ""Royal Medal""@en .
    ?medalist dbo:almaMater ?almaMater2 .
    FILTER(STR(?almaMater) = STR(?almaMater2))
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,70,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/office> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?fraser rdfs:label ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  
  OPTIONAL { 
    ?fraser dbo:award ?award .
    ?award dbo:recipient ?awardee .
  }
  
  OPTIONAL {
    ?fraser dbo:commanderOf ?force .
    ?force rdfs:label ""Budapest""@en .
  }

  OPTIONAL {
    ?agency a dbo:GovernmentAgency ;
            dbo:leader ?gustavJonson .
    
    ?gustavJonson rdfs:label ""Gustav Jonson""@en .

    ?fraser dbo:leaderOf ?agency .
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
534,20,test,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/headquarter> ?result . ?v4 <http://dbpedia.org/ontology/owner> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?headquarters WHERE {
  # Step 1: Identify the venue and architectural structure of the 2012 Pro12 Grand Final
  ?venue rdfs:label ""2012 Pro12 Grand Final""@en .
  ?venue dbo:venue true .
  ?venue dbo:architecturalStructure true .

  # Step 2: Find the owner of this location
  ?venue dbo:owner ?owner .

  # Step 3: Locate the headquarter of the owner
  ?owner dbo:headquarters ?headquarters .

  # Step 4: Identify the native politician from Essex
  ?essexPolitician dbo:nativePlace ?essex .
  ?essex rdfs:label ""Essex""@en .
  ?essexPolitician rdf:type dbo:Politician .

  # Step 5: Determine the child of this politician who is also a politician and office holder
  ?child dbo:parent ?essexPolitician ;
         rdf:type dbo:Politician, dbo:OfficeHolder .

  # Step 6: Find the birth place of this child
  ?child dbo:birthPlace ?birthPlace .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
528,64,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?warInChile ?orozimboWar ?narcisoForce WHERE {
  # Wars in Chile
  ?warInChile a dbo:MilitaryConflict ;
              dbo:location ?chileLocation .
  ?chileLocation rdfs:label ""Chile""@en .

  # Orozimbo Barbosa's war involvement
  ?orozimboWar a dbo:MilitaryConflict ;
               dbo:militaryForce ?barbosaForce .
  ?barbosaPerson rdfs:label ""Orozimbo Barbosa""@en .
  ?barbosaPerson dbo:militaryForce ?barbosaForce .

  # Narciso Campero's military force
  ?narcisoPerson rdfs:label ""Narciso Campero""@en ;
                 foaf:name ""Narciso Campero"" .
  ?narcisoPerson dbo:militaryForce ?narcisoForce .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
421,27,test,Give me the band member of Senidah and person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember ?personWithBirthName ?nativePerson 
WHERE {
  # Band member of Senidah
  ?senidah dbo:member ?bandMember .
  ?senidah rdfs:label ""Senidah""@en .

  # Person born as Dino Merlin's birth name
  ?dinoMerlin foaf:name ?birthName .
  ?dinoMerlin rdfs:label ""Dino Merlin""@en .
  ?personWithBirthName foaf:name ?birthName .

  # Native of Samir Bekrić's birthplace
  ?samirBekric dbo:birthPlace ?birthPlace .
  ?samirBekric rdfs:label ""Samir Bekrić""@en .
  ?nativePerson dbo:nativePlace ?birthPlace .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,57,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandparent WHERE {
  ?princeGeorge rdfs:label ""Prince George William of Hanover""@en .
  ?princeGeorge dbo:spouse ?princessVictoriaLouise .
  ?princessVictoriaLouise rdfs:label ""Princess Victoria Louise of Prussia""@en .

  ?child dbo:parent ?princeGeorge ;
         dbo:parent ?princessVictoriaLouise .

  ?royalParent dbo:parent ?child ;
               a dbo:Monarch .

  ?secondChild dbo:parent ?royalParent ;
               a dbo:Monarch .

  ?grandparent dbo:parent ?secondChild .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
547,21,test,Give me the resting place of Alan Cunningham and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alanCunninghamBurial ?childOfJamesBurtonBurial WHERE {
  # Resting place of Alan Cunningham
  OPTIONAL {
    ?alanCunningham a dbo:Person ;
                   rdfs:label ""Alan Cunningham""@en .
    ?alanCunningham dbo:finalBurial ?alanCunninghamBurial .
  }

  # Resting place of the child of James Burton (property developer)
  OPTIONAL {
    ?jamesBurton a dbo:Person ;
                 rdfs:label ""James Burton (property developer)""@en .
    ?childOfJamesBurton dbo:parent ?jamesBurton ;
                        dbo:finalBurial ?childOfJamesBurtonBurial .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,33,test,Give me the spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseName ?actorName ?profession WHERE {
  # Find Ted McGinley's spouse
  ?ted a dbo:Person ;
       rdfs:label ""Ted McGinley""@en .
  ?ted dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .

  # Find the actor of ""Unnatural"" and their profession
  ?unnaturalSeries rdfs:label ""Unnatural (TV series)""@en ;
                   dbo:actor ?actor .
  ?actor rdfs:label ?actorName ;
         dbo:profession ?profession .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
696,16,test,Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?landmark WHERE {
  # Part 1: Nie Rongzhen's Award and associated landmark elevation
  {
    ?person rdfs:label ""Nie Rongzhen""@en .
    ?person dbo:award ?award .
    ?award dbo:elevation ?elevation .
    ?landmark dbo:elevation ?elevation .
  }
  
  UNION
  
  # Part 2: Dropkick Murphys' Member Birthplace and associated landmark elevation
  {
    ?band rdfs:label ""Dropkick Murphys""@en .
    ?member dbo:member ?band ;
            dbo:birthPlace ?birthPlace .
    ?birthPlace dbo:elevation ?elevation .
    ?landmark dbo:elevation ?elevation .
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
767,39,test,"Give me the alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater ?fictionalCharacter WHERE {
  # Query for Carl L. Nippert's alma mater
  ?person rdfs:label ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?almaMater .

  # Query for Matthew Burland's fictional character alter ego
  OPTIONAL {
    ?burland rdfs:label ""Matthew Burland""@en .
    ?burland dbo:fictionalCharacter ?fictionalCharacter .
  }
}
```",4,5,5,3,2,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
77,16,test,Give me the force of the mayor of Congress Poland and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mayorForce ?war WHERE {
  # Part 1: Mayor of Congress Poland
  ?place rdfs:label ""Congress Poland""@en .
  ?mayor dbo:position ?position ;
         dbo:officeHolderOf ?place .
  OPTIONAL { ?position rdfs:label ?mayorForce . }

  # Part 2: War of the Awardee of Golden Weapon for Bravery
  ?person dbo:award ?award .
  ?award rdfs:label ""Golden Weapon for Bravery""@en .
  ?person dbo:participatedIn ?war .
}
```",4,4,5,2,2,3,2,20,0,0,13,0,0.0,0
54,55,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?predecessor WHERE {
  ?thihapateChild dbo:childOf ?thihapate ;
                  rdf:type dbo:RoyalPerson, dbo:OfficeHolder .
  
  ?narapatiGrandparent dbo:childOf ?narapatiI ;
                       dbo:parentOf ?narapatiParent .
  
  ?soeMinFather dbo:parentOf ?soeMinWimalaDewi .

  ?thihapateChild dbo:predecessor ?predecessor .

  FILTER (?narapatiGrandparent = ?soeMinFather)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
55,27,test,"Give me the band of the reference, that is a band, to Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?metallicaBand ?commonBandMember WHERE {
  # Identify Metallica as the band of Newsted
  ?newsted dbo:bandMember ?metallicaBand .
  ?metallicaBand rdfs:label ""Metallica""@en .

  # Find a common band member who is part of both San Francisco Symphony and Guns N' Roses
  ?commonBandMember dbo:bandMember ?symphonyBand .
  ?commonBandMember dbo:bandMember ?gunsNrosesBand .
  
  ?symphonyBand rdfs:label ""San Francisco Symphony""@en .
  ?gunsNrosesBand rdfs:label ""Guns N' Roses""@en .

  # Ensure the common band member is also a band
  ?commonBandMember dbo:type ?bandType .
  FILTER (?bandType IN (dbo:Band, dbo:MusicalGroup))
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
492,47,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commanderInVerdun ?otherConflictOrEvent WHERE {
  # Find the commander in the Battle of Verdun
  ?battle rdfs:label ""Battle of Verdun""@en .
  ?battle dbo:commander ?commanderInVerdun .

  # Check if this commander is involved in another military conflict or event
  OPTIONAL { 
    ?otherEvent dbo:commander ?commanderInVerdun .
    FILTER(?otherEvent != ?battle)
    BIND(IF(BOUND(?otherEvent), ""conflict"", ""event"") AS ?typeOfOtherEvent)
  }

  # Find the decedent at Joseph C. Satterthwaite's workplace
  ?satterthwaite dbo:officeLocation ?workplace .
  ?decedent dbo:deathPlace ?workplace .

  # Check if this decedent is the same as any commander in Verdun
  FILTER(?commanderInVerdun = ?decedent)

  BIND(IF(BOUND(?otherEvent), ?otherEvent, ""No other conflict or event"") AS ?otherConflictOrEvent)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
404,67,test,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?finalChild WHERE {
  # Step 1: Find the spouse of Princess Victoria Louise of Prussia
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?spouse .

  # Step 2: Find a child of the spouse and ensure one parent is royalty
  ?child dbo:parent ?spouse ;
         dbo:parent ?royalParent .
  FILTER EXISTS { ?royalParent rdfs:label ?label . FILTER regex(?label, ""King|Queen|Prince|Princess"", ""i"") }

  # Step 3: Find a parent of Prince George William of Hanover that is royalty
  ?prince rdfs:label ""Prince George William of Hanover""@en .
  ?prince dbo:parent ?royalParent2 .
  FILTER EXISTS { ?royalParent2 rdfs:label ?label . FILTER regex(?label, ""King|Queen|Prince|Princess"", ""i"") }

  # Step 4: Find the child of the father of Princess Victoria Louise's spouse
  ?spouse dbo:father ?fatherOfSpouse .
  ?childOfFather dbo:parent ?fatherOfSpouse .

  # Final result: The child from step 4 is our answer
  BIND(?childOfFather AS ?finalChild)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
378,65,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?carlWar ?commanderWar WHERE {
  # Find Carl Pontus Gahn and his notable war
  ?carl a dbo:Person ;
        rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL { ?carl dbo:notableWork ?notableWork . }
  OPTIONAL { ?notableWork dbo:subject ?carlWar . }

  # Find the commander of the Great Siege of Gibraltar
  ?siege a dbo:MilitaryConflict ;
         rdfs:label ""Great Siege of Gibraltar""@en .
  ?commander a dbo:Person ;
             dbo:commanded ?siege .
  
  # Find wars associated with the commander
  OPTIONAL { ?commander dbo:notableWork ?notableWorkCmd . }
  OPTIONAL { ?notableWorkCmd dbo:subject ?commanderWar . }

  # Filter for overlap with Peninsular War
  FILTER(?carlWar = ?commanderWar)
  OPTIONAL {
    ?peninsularWar a dbo:MilitaryConflict ;
                   rdfs:label ""Peninsular War""@en .
    FILTER(?carlWar = ?peninsularWar || ?commanderWar = ?peninsularWar)
  }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
54,32,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  # Part 1: Child of the father of Soe Min Wimala Dewi
  ?soeMinWimalaDewi dbo:father ?father .
  ?father dbo:child ?childOfFather .

  # Part 2: Parent of a child of Narapati I of Ava
  ?narapatiI dbo:child ?childOfNarapatiI .
  ?childOfNarapatiI dbo:parent ?parentOfChildOfNarapatiI .

  # Find the common entity between these two parts
  FILTER (?childOfFather = ?parentOfChildOfNarapatiI)
  BIND(?childOfFather AS ?commonEntity)

  # Ensure we are dealing with the correct individuals by using labels
  ?soeMinWimalaDewi rdfs:label ""Soe Min Wimala Dewi""@en .
  ?narapatiI rdfs:label ""Narapati I of Ava""@en .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
161,64,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?militaryForce ?commander ?event WHERE {
  ?person rdfs:label ""Francisco Franco""@en .
  ?person dbo:militaryConflict ?civilWar .
  ?civilWar rdfs:label ""Spanish Civil War""@en .
  
  ?militaryForce dbo:commander ?commander ;
                 dbo:militaryConflict ?civilWar .

  FILTER(?commander = ?person)
}
```",7,11,8,3,3,3,3,71,0,0,32,0,0.0,0
92,49,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?memberArtist WHERE {
  ?band rdfs:label ""Nevermore""@en .
  ?band dbo:bandMember ?member .
  OPTIONAL { ?member dbo:artist ?artistRole . }
  FILTER EXISTS { ?member dbo:artist ?artistRole } # Ensure the member is recognized as an artist
}

UNION

SELECT DISTINCT ?band WHERE {
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbo:birthName ""Joseph Michael"" .
  ?person dbo:band ?band .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,59,test,Give me the parent of the child of the child of Seti I and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonParent WHERE {
  # Seti I's lineage
  ?setiI rdfs:label ""Seti I""@en .
  ?child1 dbo:childOf ?setiI .
  ?grandChild dbo:childOf ?child1 .
  ?parentOfGrandChild dbo:childOf ?grandChild .

  # Amun-her-khepeshef's lineage
  ?amunHerKhepeshef rdfs:label ""Amun-her-khepeshef""@en .
  ?spouse dbo:spouse ?amunHerKhepeshef .
  ?child2 dbo:childOf ?spouse .
  ?parentOfChild2 dbo:childOf ?child2 .

  # Find common parent
  VALUES (?commonParent) {
    (?parentOfGrandChild)
    (?parentOfChild2)
  }
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
378,47,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:birthPlace ?birthPlace .
  
  OPTIONAL { 
    ?person dbo:commanderOf ?war .
    FILTER (strstarts(str(?war), str(""Peninsular War"")) || ?war = <http://dbpedia.org/resource/Peninsular_War>)
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
701,71,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonIndividual WHERE {
  # Amun-her-khepeshef's spouse and their child's parent
  ?amunHerKhepeshef dbo:spouse ?spouse .
  ?spouse dbo:child ?childOfSpouse .
  ?childOfSpouse dbo:parent ?parentOfChildOfSpouse .

  # Seti I's child, then the parent (Seti I), and spouse of this parent
  ?setiI dbo:child ?childOfSetiI .
  ?childOfSetiI dbo:parent ?parentOfChildOfSetiI .
  ?parentOfChildOfSetiI rdfs:label ""Seti I""@en .
  ?parentOfChildOfSetiI dbo:spouse ?spouseOfParent .

  # Common individual who is royalty and participated in the Battle of Perire
  FILTER (?parentOfChildOfSpouse = ?commonIndividual || ?spouseOfParent = ?commonIndividual)
  ?commonIndividual a dbo:Royal .
  ?commonIndividual dbo:participatedInBattle ?battle .
  ?battle rdfs:label ""Battle of Perire""@en .
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
92,61,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName ?band ?actor ?musicalArtist WHERE {
  # Find Joseph Michael's birth name and band
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbo:birthName ?birthName .
  
  OPTIONAL { 
    ?person dbo:band ?band .
  }
  
  # Find the actor of ""Return to Nuke 'Em High Volume 1"" and their musical artist association
  ?film rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
  ?film dbo:actor ?actor .

  OPTIONAL {
    ?actor dbo:musicalArtist ?musicalArtist .
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
701,58,test,"Give me the parent of the child of Ramesses II and parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfChild ?spouseOfFather WHERE {
  # Ramesses II and his child (Meritamen)
  ?ramesses2 rdfs:label ""Ramesses II""@en .
  ?child dbo:child ?ramesses2 ;
         rdfs:label ""Meritamen""@en .

  # Parent of the child is Ramesses II
  ?parentOfChild dbo:spouse ?ramesses2 .

  # Commander in Battle of Perire and his father's spouse
  ?battle dbo:commander ?commander .
  FILTER (CONTAINS(LCASE(?battle), ""perire"")) .
  
  ?father dbo:child ?commander .
  ?spouseOfFather dbo:spouse ?father .

  # Ensure the parent is royalty
  OPTIONAL { ?parentOfChild dbo:title ?royaltyTitle . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,24,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration ?deathPlace WHERE {
  # Part 1: Administration of the ruling party in Sicily
  ?party a dbo:PoliticalParty ;
         dbo:politicalPartyInCountryOrRegion ?sicily .
  ?sicily rdfs:label ""Sicily""@en .
  
  OPTIONAL { 
    ?party dbo:administration ?administration .
  }
  
  # Part 2: Death place of the author of The Twelve Abbots of Challant
  ?book dbo:title ""The Twelve Abbots of Challant"" ;
        dbo:author ?author .
  
  OPTIONAL {
    ?author dbo:deathPlace ?deathPlace .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
994,45,test,"Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedArtistRedTide ?associatedArtistSASlayer ?bandMemberDonDokken WHERE {
  # Associated musical artist of Red Tide
  ?redTideBand rdfs:label ""Red Tide""@en .
  OPTIONAL { 
    ?redTideBand dbo:bandMember ?associatedArtistRedTide .
  }

  # Associated musical artist of S.A. Slayer
  ?sASlayerBand rdfs:label ""S.A. Slayer""@en .
  OPTIONAL {
    ?sASlayerBand dbo:bandMember ?associatedArtistSASlayer .
  }
  
  # Band member who is a musical artist, persona of Don Dokken
  ?donDokkenPerson rdfs:label ""Don Dokken""@en .
  ?donDokkenPerson dbo:birthPlace ?birthPlace .
  OPTIONAL {
    ?bandMemberDonDokken dbo:bandMember ?donDokkenPerson ;
                         dbo:birthPlace ?birthPlace .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
16,54,test,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series) and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Ted Martin McGinley""@en .
  ?person dbo:birthName ""Ted Martin McGinley"" .
  ?person dbo:spouse ?spouse .

  OPTIONAL { 
    ?actor dbo:title ?title .
    ?title rdfs:label ""Unnatural (TV series)""@en .
    ?actor dbo:profession ?profession1 .
  }

  OPTIONAL {
    ?rice rdfs:label ""Georgeanne Marie Rice""@en .
    ?rice dbo:birthName ""Georgeanne Marie Rice"" .
    ?rice dbo:profession ?profession2 .
  }

  FILTER EXISTS { ?person dbo:profession ?profession }
  FILTER (?profession = ?profession1)
  FILTER (?profession = ?profession2)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,64,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of Red Tide (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find an artist associated with Watchtower
  ?watchtowerArtist dbo:associatedBandMember ?bandMember .
  ?bandMember rdfs:label ""Watchtower""@en .

  # Step 2: Find the associated musical artist of that artist
  ?artist1 dbo:associatedMusicalArtist ?intermediateArtist .

  # Step 3: Identify Don Dokken's persona and find band members who are also artists
  ?dokkenPerson rdfs:label ""Don Dokken""@en .
  ?bandMember2 dbo:member ?dokkenPerson ;
               a dbo:Band ;
               dbo:associatedMusicalArtist ?artist2 .

  # Step 4: Find an artist associated with Red Tide
  ?redTideArtist dbo:associatedBandMember ?redTideMember .
  ?redTideMember rdfs:label ""Red Tide""@en .
  ?redTideArtist dbo:associatedMusicalArtist ?artist3 .

  # Step 5: Connect the results from steps 2 and 4
  FILTER (?intermediateArtist = ?artist2)
  ?finalArtist dbo:associatedMusicalArtist ?artist3 .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
161,63,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?emilioMola rdfs:label ""Emilio Mola""@en .
  ?francoistSpain rdfs:label ""Francoist Spain""@en .
  ?emilioMola dbo:decedent ?francoistSpain .
  
  ?event1 dbo:militaryConflict ?militaryForce ;
          dbo:event ?commanderEvent .

  ?commanderEvent dbo:commanderIn ?emilioMola .

  ?franciscoLargoCaballero rdfs:label ""Francisco Largo Caballero""@en .
  ?event2 dbo:militaryConflict ?militaryForce ;
          dbo:event ?franciscoLargoCaballero .

  FILTER(?militaryForce != null)
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
54,69,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v4 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?individual WHERE {
  # Narapati I of Ava's child
  ?narapatiI dbo:child ?narapatiChild .
  
  # Thinkhaya of Pagan's child and predecessor
  ?thinkhaya dbo:child ?thinkhayaChild .
  ?thinkhayaChild dbo:father ?thinkhayaFather .
  ?thinkhayaFather dbo:predecessor ?thinkhayaPredecessor .

  # Common link between Narapati I's child and Thinkhaya's predecessor
  ?narapatiChild dbo:parent ?commonLink .
  ?thinkhayaPredecessor dbo:child ?commonLink .

  # Thihapate of Mohnyin reference
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .
  
  # Office holder and royalty condition
  ?individual rdf:type/rdfs:subClassOf* dbo:OfficeHolder ;
              rdf:type/rdfs:subClassOf* dbo:Royalty ;
              dbo:relatedTo ?thihapate .

  # Ensure the individual is the common link
  FILTER (?commonLink = ?individual)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
801,65,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?work rdfs:label ""40 Dayz & 40 Nightz""@en .
  ?work dbo:writer ?writer .
  
  ?writer rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist .

  ?work dbo:producer ?producer .
  
  ?producer rdf:type dbo:MusicalArtist ;
            rdf:type dbo:Rapper .

  ?producer rdfs:label ?associatedArtistLabel .
  
  OPTIONAL {
    ?producer dbo:alterEgo ?alterEgo .
    ?alterEgo rdfs:label ""The Shadow""@en .
  }
}
```",7,13,8,3,3,3,3,71,0,0,8,0,0.0,0
44,8,test,"Give me the band member of Undertow (band) and band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?undertowMember ?associatedBandMember WHERE {
  # Find band members of Undertow
  ?band rdf:type dbo:MusicalArtist ;
        rdfs:label ""Undertow""@en .
  ?band dbo:bandMember ?undertowMember .

  OPTIONAL {
    # Find associated musical artist with Queensrÿche that is a group and an organization
    ?queensryche rdf:type dbo:MusicalArtist ;
                 rdfs:label ""Queensrÿche""@en .
    ?associatedBand rdf:type dbo:MusicalGroup, dbo:Organization ;
                    dbo:associatedBand ?queensryche .
    
    # Find band members of the associated musical artist
    ?associatedBand dbo:bandMember ?associatedBandMember .
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
92,47,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?bandMemberArtist ?actorArtist WHERE {
  
  # Part 1: Band member of Nevermore who is an artist
  ?person dbo:bandMember ?nevermore .
  ?nevermore rdfs:label ""Nevermore""@en .
  ?person rdf:type <http://dbpedia.org/ontology/MusicalArtist> .

  # Part 2: Actor from Return to Nuke 'Em High Volume 1 who is an artist
  ?actor dbo:actor ?nukeFilm .
  ?nukeFilm rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
  ?actor rdf:type <http://dbpedia.org/ontology/MusicalArtist> .

  BIND(?person AS ?bandMemberArtist)
  BIND(?actor AS ?actorArtist)

}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
378,57,test,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in Great Siege of Gibraltar.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?warOfGahn ?commander ?peninsularWar ?gibraltarSiege WHERE {
  # Find the war involving Carl Pontus Gahn
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:participatedIn ?warOfGahn .

  # Find a commander involved in both Peninsular War and Great Siege of Gibraltar
  ?commander rdfs:label ?name .
  ?commander dbo:participatedIn ?peninsularWar ;
             dbo:participatedIn ?gibraltarSiege .
  
  FILTER(?peninsularWar = <http://dbpedia.org/resource/Peninsular_War> &&
         ?gibraltarSiege = <http://dbpedia.org/resource/Great_Siege_of_Gibraltar>)
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
801,51,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedMusicalArtist WHERE {
  # Step 1: Identify the album ""What U See Is What U Get""
  ?album rdfs:label ""What U See Is What U Get""@en .
  
  # Step 2: Find the writer of this album
  ?album dbo:writer ?writer .

  # Step 3: Check if the writer is also a musical artist and an artist
  ?writer rdf:type dbo:MusicalArtist ;
          rdfs:label ?writerLabel .
  
  OPTIONAL {
    ?writer dbo:musicArtist ?associatedMusicalArtist .
  }
  
  # Step 4: Identify the producer of any work by 50 Cent that is a musical work and a song
  ?work rdfs:label ""50 Cent""@en ;
        rdf:type dbo:Songs ;
        dbo:producer ?producer .

  # Step 5: Check if the writer is associated with this producer as a musical artist
  FILTER (?writer = ?associatedMusicalArtist)
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
404,58,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  # Identify Ernest Augustus, Duke of Brunswick
  ?ernestAugustus rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  
  # Find his children who are royalty
  ?child dbo:childOf ?ernestAugustus ;
         a dbo:Royal .

  # Identify Princess Victoria Louise of Prussia and her spouse
  ?princessVictoriaLouise rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?spouse dbo:spouse ?princessVictoriaLouise .

  # Find the father of this spouse
  ?father dbo:childOf ?spouse .

  # The child we are interested in is both a child of Ernest Augustus and the child of the father of Princess Victoria Louise's spouse
  ?interestedChild dbo:childOf ?ernestAugustus ;
                   dbo:childOf ?father .
  
  # Find the parent of this child
  ?parent dbo:parentOf ?interestedChild .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,29,test,Give me the reference to  and entity in Baden-Württemberg and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity ?entityLabel WHERE {
  ?nash rdfs:label ""George K. Nash""@en .
  ?nash dbo:almaMater ?university .
  ?university dbo:location ?location .
  ?location rdfs:label ?locationLabel .
  FILTER (CONTAINS(LCASE(?locationLabel), ""baden-württemberg""))
  ?entity dbo:location ?location .
  ?entity rdfs:label ?entityLabel .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
232,57,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?native WHERE {
  # Sylvie Bermann's residence
  ?sylvie dbo:residence ?place .
  FILTER (CONTAINS(LCASE(STR(?place)), ""british"")) .

  # Actor known for a film about a military conflict and child of Jon Pertwee
  ?actor dbo:child ?jonPertwee ;
         dbo:film ?film .
  ?film rdfs:label ?filmLabel .
  FILTER (CONTAINS(LCASE(STR(?filmLabel)), ""military conflict"")) .

  # Ensure the actor is a professional in acting, narration, and production
  ?actor rdf:type dbo:Actor ;
         rdf:type dbo:Narrator ;
         rdf:type dbo:Producer .

  # Jon Pertwee's child
  ?jonPertwee rdfs:label ""Jon Pertwee""@en .

  # Actor's residence native
  ?actor dbo:residence ?actorPlace .
  ?actorPlace dbo:native ?native .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
801,64,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?musicalArtist WHERE {
  # Step 1: Identify The Shadow's true self
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?trueSelf .

  # Step 2: Find the producer of Westside Story (song)
  ?producer foaf:name ?nameProducer ;
            dbo:producedBySong ?westsideStory .
  ?westsideStory rdfs:label ""Westside Story""@en .

  # Step 3: Link this producer to a writer
  ?writer dbo:associatedWithArtist ?producer ;
          dbo:writtenAlbum ?album .

  # Step 4: Identify the album ""What U See Is What U Get""
  ?album rdfs:label ""What U See Is What U Get""@en .

  # Step 5: Find the associated musical artist
  ?album dbo:associatedMusicalArtist ?musicalArtist .
  ?musicalArtist a dbo:MusicalArtist ;
                 a foaf:Agent .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
281,63,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?entity WHERE {
  # Bob Heffron's birth place that is a country
  ?heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Jonathon Band's award and associated war
  ?band dbo:award ?award .
  ?award dbo:war ?war1 .

  # Heather Roy's profession as a military unit and associated war
  ?roy dbo:profession ?profession .
  ?profession rdf:type dbo:MilitaryUnit .
  ?profession dbo:participatedIn ?war2 .

  # Ensure the wars are the same entity
  FILTER (?war1 = ?war2)

  # Return the common war entity
  BIND(?war1 AS ?entity)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
767,56,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?settlement ?alterEgo ?almaMater WHERE {
  # Settlement of Green
  ?green dbo:administrativeUnit ?admin .
  ?admin dbo:settlement ?settlement .

  # Alter ego of Matthew Burland
  ?burland foaf:name ""Matthew Burland""@en .
  ?burland dbo:fictionalCharacter ?alterEgo .

  # Alma mater of Carl L. Nippert
  ?nippert foaf:name ""Carl L. Nippert""@en .
  ?nippert dbo:almaMater ?almaMater .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
9,61,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?medal rdf:type dbo:Award .
  ?medal rdfs:label ""Royal Medal""@en .
  
  ?recipient dbo:award ?medal .
  ?recipient dbo:almaMater ?university .
  
  ?university rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""queen's university belfast""))
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
378,49,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war ?commanderFame WHERE {
  # Find the military conflict associated with Pontus Wiktorin
  ?wiktorin dbo:birthName ""Carl Pontus Gahn""@en .
  ?wiktorin dbo:militaryConflict ?war .

  # Find Thomas Trigge's involvement in the same war and his claim to fame
  ?trigge rdfs:label ""Thomas Trigge""@en .
  ?trigge dbo:militaryConflict ?war .
  OPTIONAL { ?trigge dbo:claimToFame ?commanderFame . }
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
996,18,test,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardeeForce ?awardEntity WHERE {
  # Part 1: Awardee of the elevation of Lac d'Avoriaz
  OPTIONAL {
    ?place rdfs:label ""Lac d'Avoriaz""@en .
    ?place dbo:award ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:field ?awardeeField .
    BIND(STR(?awardeeField) AS ?awardeeForce)
  }
  
  # Part 2: Entity in the award of Ekrem Akurgal
  OPTIONAL {
    ?person rdfs:label ""Ekrem Akurgal""@en .
    ?person dbo:award ?ekremAward .
    ?ekremAward dbo:organization ?awardEntity .
  }
}
```",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
328,55,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?individual WHERE {
  # Ferenc Szálasi's commander in the force
  ?szalasi dbo:commanderInForce ?individual .
  
  # Joseph Stalin's office leader who is a government agency
  ?stalin dbo:headOfGovernmentAgency ?officeLeader .
  FILTER (?officeLeader = ?individual)
  
  # Awardee of Bruce Fraser, 1st Baron Fraser of North Cape
  ?fraser dbo:awardee ?individual .
  FILTER (str(?fraser) = ""Bruce Fraser, 1st Baron Fraser of North Cape""@en)

}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
959,32,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?university WHERE {
  ?eiji dbo:almaMater ?university .
  ?university rdf:type dbo:University ;
              dbo:country dbc:Japan .
  FILTER (LANG(?universityLabel) = ""en"" && ?universityLabel = ""Eiji Ōtsuka"") .

  ?yoshi dbo:residence ?country .
  ?country rdfs:label ?countryLabel .
  FILTER (LANG(?countryLabel) = ""en"" && ?countryLabel = ""Japan"") .
}
```",4,9,5,2,2,3,3,71,0,0,84,0,0.0,0
232,60,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  # Identify Jon Pertwee by his birth name
  ?person rdfs:label ""John Julian Pertwee""@en .
  
  # Find the child of Jon Pertwee
  ?person dbo:child ?child .

  # Identify a French politician who is also an office holder
  ?politician dbo:nationality dbr:France ;
              rdf:type dbo:Politician ;
              dbo:officeHolder true .

  # Ensure their residence is a settlement and British
  ?residence dbo:resident ?politician ;
             rdf:type dbo:Settlement ;
             dbo:country dbr:United_Kingdom .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
959,41,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?native WHERE {
  # Yōichi Masuzoe's residence and its country
  ?yMasuzoe dbo:residence ?place .
  ?place dbo:country ?country .

  # Native of the country where Yōichi Masuzoe resides
  ?native dbo:nationality ?country .

  # Eiji Ōtsuka's alma mater as an organization, university, and educational institution in Japan
  ?eOtsuka dbo:almaMater ?university .
  ?university rdf:type dbo:EducationalOrganization ;
              rdfs:label ?labelUniv .
  FILTER (CONTAINS(LCASE(?labelUniv), ""japan"") && 
          CONTAINS(LCASE(?labelUniv), ""university""))

}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
492,31,test,Give me the commander in Franco-Hova Wars and person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Query for Commander in Franco-Hova Wars
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?event rdf:type dbo:MilitaryConflict .
  ?event dbo:participatedIn [
    a dbo:MilitaryConflict ;
    rdfs:label ""Franco-Hova Wars""@en
  ] .
  ?event dbo:commander ?commander .
}

UNION

# Query for Person Decedent at the Work of the Author of French Algeria
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author ?decedent WHERE {
  ?work dbo:subject dbc:French_Algeria .
  ?work dbo:author ?author .
  ?author foaf:name ?name .
  
  OPTIONAL {
    ?relatedWork dbo:about ?author .
    ?relatedWork dbo:death ?decedent .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
378,69,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthNameWar ?peninsularCommander ?commanderFame WHERE {
  # Find Carl Pontus Gahn's birth name
  ?gahn dbo:birthName ?birthName .
  
  # Find any war associated with his birth name
  OPTIONAL { 
    ?birthName dbo:associatedWith ?war .
    ?war rdfs:label ?birthNameWar .
  }
  
  # Find a commander in the Peninsular War and their claim to fame
  ?peninsularCommander dbo:commandedPeninsularWar true ;
                      dbo:claimToFame ?fame .
  ?fame rdf:type dbo:MilitaryConflict ;
        rdfs:label ?commanderFame .

  # Check if Thomas Trigge was involved in such a war
  OPTIONAL {
    ?trigge dbo:involvedIn ?war .
    FILTER(?war = ?birthNameWar || ?war = ?fame)
  }
  
  # Bind known individuals
  VALUES ?gahn { <http://dbpedia.org/resource/Carl_Pontus_Gahn> }
  VALUES ?trigge { <http://dbpedia.org/resource/Thomas_Trigge> }
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
391,63,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?native WHERE {
  # Step 1: Find the nickname of Jackson, Tennessee
  ?jackson dbo:nickname ?nickname .
  FILTER (str(?nickname) = ""The City of Soul"")

  # Step 2: Find a work associated with Michael Ballhaus
  ?ballhaus dbp:filmography ?work .
  ?work rdfs:label ?workLabel .
  FILTER CONTAINS(LCASE(str(?workLabel)), LCASE(""cinematographer""))

  # Step 3: Identify a movie/TV show involving both Michael Ballhaus and Roz Ryan
  ?project dbo:director ?ballhaus ;
           dbo:castMember ?actor .
  OPTIONAL { ?project dbo:writer ?rozRyan . }
  FILTER (CONTAINS(LCASE(str(?rozRyan)), LCASE(""Roz Ryan"")))

  # Step 4: Find the native place of this actor
  ?actor dbo:nativePlace ?native .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
701,56,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of Nefertari and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?henuttawyParent ?nefertariChildsParent ?royalSpouse WHERE {
  # Henuttawy (19th dynasty) parent
  ?henuttawy dbo:parent ?henuttawyParent .
  ?henuttawy rdfs:label ""Henuttawy""@en .

  # Nefertari's child's parent
  ?nefertari dbo:child ?nefertarisChild .
  ?nefertarisChild dbo:parent ?nefertariChildsParent .
  ?nefertari rdfs:label ""Nefertari""@en .

  # Commander in Battle of Perire and his father's spouse
  ?battle dbo:commander ?commander .
  ?commander dbo:father ?commandersFather .
  ?commandersFather dbo:spouse ?royalSpouse .
  ?battle rdfs:label ""Battle of Perire""@en .
  
  # Ensure the spouse is royalty
  ?royalSpouse a dbo:RoyalPerson .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,67,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  ?person dbo:leaderOf ?election .
  ?election rdfs:label ""2010 Japanese House of Councillors election""@en .
  
  ?person dbo:managerOf ?team1 .
  ?sportsManager dbo:managerOf ?team2 .
  ?team2 dbp:season ""1998 Kashima Antlers season"" .
  ?team1 dbp:managedBy ?sportsManager .

  ?person dbp:almaMater ?university .
  ?university rdfs:label ""University of Tsukuba""@en .

  ?person dbo:residence ?residence .
  ?residence dbo:country ?country .
  
  ?country dbo:nativePlace ?nativePerson .
  ?nativePerson dbo:nationality ?nativeCountry .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
184,60,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandParentOfMargaret ?childOfGrandParent ?parentOfChild ?landmarkNative ?nativeParent WHERE {
  # Step 1: Find Archduchess Margaret of Austria's parent
  ?margaret dbo:birthYear ""1925""^^xsd:gYear ;
           rdfs:label ""Archduchess Margaret of Austria""@en .
  
  ?parentOfMargaret dbo:child ?margaret .
  
  # Step 2 and 3: Find the child of that parent, then their parent
  ?childOfParent dbo:parent ?parentOfMargaret ;
                 a dbo:Person .
  
  ?grandParentOfChild dbo:parent ?childOfParent .

  BIND(?parentOfMargaret AS ?grandParentOfMargaret)
  BIND(?childOfParent AS ?childOfGrandParent)
  BIND(?grandParentOfChild AS ?parentOfChild)

  # Step 4: Find the landmark at elevation 96.0 meters
  ?landmark dbo:elevation ""96.0""^^xsd:decimal ;
            a dbo:Settlement .

  # Step 5: Identify the native of this landmark
  ?native dbp:nativePlace ?landmark .
  
  # Step 6: Determine the parent of this native
  ?parentOfNative dbo:child ?native .
  
  BIND(?native AS ?landmarkNative)
  BIND(?parentOfNative AS ?nativeParent)

}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
747,23,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:sport dbr:Soccer ;
          dbo:athlete true ;
          dbo:birthPlace dbr:Zolotonosha .
  
  ?person dbo:birthDate ?birthDate .

  ?decedent dbo:deathDate ?birthDate .
}
```",3,5,4,3,1,3,3,71,0,0,30,0,0.0,0
16,53,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Step 1: Find Gigi Rice's birth name
  ?gigiRice rdfs:label ""Gigi Rice""@en .
  ?gigiRice dbo:birthName ?birthName .

  # Step 2: Find Ted McGinley's spouse
  ?tedMcGinley rdfs:label ""Ted McGinley""@en .
  ?tedMcGinley dbo:spouse ?spouse .

  # Step 3: Ensure the spouse is an actress
  ?spouse dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""actress""))

  # Step 4: Check if this person was born with Gigi Rice's birth name
  ?person dbo:birthName ?birthName .

  # Ensure that we are not matching the same individual (Gigi Rice herself)
  FILTER(?gigiRice != ?spouse)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,44,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?heatherProfession ?bobBirthCountry ?beauchampWar WHERE {
  # Heather Roy's profession that is a military unit
  ?heather dbo:profession ?heatherProfession .
  ?heather rdfs:label ""Heather Roy""@en .
  ?militaryUnit rdfs:label ?heatherProfession .
  ?militaryUnit rdf:type dbo:MilitaryUnit .

  # Bob Heffron's birthplace country
  ?bob dbo:birthPlace ?birthPlace .
  ?bob rdfs:label ""Bob Heffron""@en .
  ?birthPlace dbo:country ?bobBirthCountry .

  # Beauchamp Seymour, 1st Baron Alcester's war
  ?beauchamp dbo:war ?beauchampWar .
  ?beauchamp rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
294,21,test,"Give me the resting place of Edwin A. Keeble and resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?keeblesRestingPlace ?leasRestingPlace ?marionsBirthSettlement WHERE {
  # Resting place of Edwin A. Keeble
  ?keeblesPerson rdfs:label ""Edwin A. Keeble""@en .
  ?keeblesPerson dbo:burialPlace ?keeblesRestingPlace .

  # Resting place of Luke Lea (American politician, born 1879)
  ?leasPerson rdfs:label ""Luke Lea (American politician, born 1879)""@en .
  ?leasPerson dbo:birthYear ""1879""^^xsd:gYear .
  ?leasPerson dbo:burialPlace ?leasRestingPlace .

  # Entity in the birth place that is a settlement of Marion James
  ?marionsPerson rdfs:label ""Marion James""@en .
  ?marionsPerson dbo:birthPlace ?birthPlace .
  OPTIONAL {
    ?settlement rdf:type dbo:Settlement ;
                dbo:location ?birthPlace .
    BIND(?settlement AS ?marionsBirthSettlement)
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,69,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander WHERE {
  # Find a commander in Ferenc Szálasi's force
  ?szalasi dbo:commander ?commander .
  ?szalasi rdfs:label ""Ferenc Szálasi""@en .

  # Ensure the commander is an awardee of the Volcano and Ryukyu Islands campaign award
  OPTIONAL {
    ?award dbo:recipient ?commander ;
           rdfs:label ?awardLabel .
    FILTER(CONTAINS(LCASE(?awardLabel), ""volcano"") && CONTAINS(LCASE(?awardLabel), ""ryukyu islands""))
  }

  # Find the leader of a government agency led by Gustav Jonson
  ?agency dbo:leader ?gustavJonsonLeader ;
          rdf:type dbo:GovernmentAgency .
  ?gustavJonsonLeader rdfs:label ""Gustav Jonson""@en .

  OPTIONAL {
    ?office dbo:head ?commander ;
            rdf:type dbo:GovernmentOffice .
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,32,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild ?spouse WHERE {
  # Seleucus II Callinicus and his children
  ?seleucus2 rdfs:label ""Seleucus II Callinicus""@en .
  ?seleucus2 dbo:child ?child .

  # Child's child (grandchild of Seleucus II)
  ?child dbo:child ?grandchild .

  # Check if grandchild is royalty
  OPTIONAL { ?grandchild dbo:royalty true . }

  # Antiochus III the Great and his children
  ?antiochus3 rdfs:label ""Antiochus III the Great""@en .
  ?antiochus3 dbo:child ?antiochusChild .

  # Spouse relationship between grandchild and Antiochus III's child
  ?grandchild dbo:spouse ?spouse .
  FILTER (?spouse = ?antiochusChild)
}
```",4,5,5,2,2,3,3,71,3,0,1,1.0,0.75,0.8571428571428571
392,27,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?province ?region ?entity WHERE {
  # Sebastiano Bianchetti's residence that is a settlement and Italian
  ?residence dbo:resident dbr:Sebastiano_Bianchetti ;
             rdf:type dbo:Settlement ;
             dbo:country dbr:Italy .
  
  # Get the province of this residence
  ?residence dbo:administrativeTerritory ?province .

  OPTIONAL {
    # Aguilar de Segarra's time zone and its region that is a sports event
    ?place rdfs:label ""Aguilar de Segarra""@en ;
           dbo:timeZone ?timezone .
    
    ?timezone dbo:region ?region .
    
    FILTER (?region rdf:type dbo:SportsEvent)
  }
  
  # Entity in Italy
  ?entity dbo:country dbr:Italy .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,60,test,"Give me the reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?micheleParty ?romanoBirthName ?romanoParty WHERE {
  # Query for Michele Pinto's party
  ?michele dbo:party ?micheleParty .
  ?michele rdfs:label ""Michele Pinto""@en .

  # Query for Romano Prodi's birth name and political affiliation
  ?romano rdf:type dbo:Person ;
          rdfs:label ?romanoBirthName ;
          dbo:birthName ?romanoBirthName .
  ?romano rdfs:label ""Romano Prodi""@en .
  OPTIONAL { ?romano dbo:party ?romanoParty }
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
404,26,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandparent WHERE {
  # Prince George William of Hanover
  ?prince rdfs:label ""Prince George William of Hanover""@en .
  
  # His parent who is a royalty
  ?prince dbo:parent ?parent .
  ?parent rdf:type dbo:Monarch .

  # The child of that parent who is also a royalty
  ?parent dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # The parent of this royal child
  ?royalChild dbo:parent ?grandparent .
  ?grandparent rdf:type dbo:Monarch .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
767,57,test,Give me the entity in Baden-Württemberg and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?entityInBadenWurttemberg ?alterEgoOfBlackHood ?almaMater ?administration WHERE {
  # Find entities in Baden-Württemberg
  ?entityInBadenWurttemberg dbo:location ?place .
  ?place rdfs:label ""Baden-Württemberg""@en .

  # Find the alter ego of Black Hood
  ?blackHood dbo:alias ""Black Hood"" .
  ?blackHood foaf:name ?alterEgoOfBlackHood .

  # Find the alma mater of George Kilbon Nash
  ?nash foaf:name ""George Kilbon Nash""@en .
  ?nash foaf:almaMater ?almaMater .

  # Find the administration related to the alma mater
  ?administration dbo:administers ?almaMater .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,68,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Fredrik Thordendal's band
  ?meshuggah dbo:bandMember ?thordendal .
  ?thordendal rdfs:label ""Fredrik Thordendal""@en .

  # Step 2: Meshuggah's associated musical artist
  ?meshuggah dbo:associatedBand ?associatedArtist1 .

  # Step 3: Donald Maynard Dokken's birth information
  ?dokken dbp:birthPlace ?birthPlace .
  ?dokken rdfs:label ""Don Dokken""@en .
  
  # Step 4: Watchtower's associated musical artist
  ?watchtower dbo:associatedBand ?associatedArtist2 .

  # Step 5: Band member of Meshuggah who is also a band/group/organization
  ?meshuggahMember dbo:bandMember ?thordendal ;
                   dbo:associatedBand ?bandGroupOrg .
  
  # Step 6: Associated musical artist for this band/group/organization
  ?bandGroupOrg dbo:associatedBand ?finalAssociatedArtist .

  FILTER(?associatedArtist1 = ?finalAssociatedArtist)
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
391,22,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?actor WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Compton, California""@en .
  
  ?movie dbo:starring ?person ;
         rdf:type dbo:Film ;
         dbo:workExample ?work ;
         dbo:televisionShow ?tvshow .

  ?work rdf:type dbo:Work .
  ?tvshow rdf:type dbo:TelevisionSeries .

  ?movie dbo:starring ?roz .
  ?roz rdfs:label ""Roz Ryan""@en .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,46,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  # Find Sean Pertwee's claim to fame (film or conflict)
  ?work dbo:actor ?person .
  ?person rdfs:label ""Sean Pertwee""@en .

  OPTIONAL { 
    ?work rdf:type dbo:Film . 
    ?work dbo:starring ?actor .
  }
  
  OPTIONAL {
    ?work rdf:type dbo:MilitaryConflict .
    ?work dbo:participant ?actor .
  }

  # Identify Jon Pertwee's birth name and his child
  ?jon rdfs:label ""Jon Pertwee""@en .
  ?jon foaf:birthName ?birthName .
  
  ?child dbo:parent ?jon ;
         rdfs:label ""Sean Pertwee""@en .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,67,test,"Give me the parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentMeritamen ?spouseRoyalFather WHERE {
  # Meritamen's parent
  ?meritamen dbo:parent ?parentMeritamen .
  ?meritamen rdfs:label ""Meritamen""@en .

  # Commander in the Battle of Perire and their royal father
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Perire""@en .
  
  ?commander dbo:father ?royalFather .
  ?royalFather rdf:type dbo:RoyalPerson .

  # Spouse of the royal father
  ?royalFather dbo:spouse ?spouseRoyalFather .

  # Parent of the child of the child of Seti I
  ?setiI rdfs:label ""Seti I""@en .
  ?child1 dbo:parent ?setiI .
  ?grandChild dbo:parent ?child1 .
  OPTIONAL { ?grandChild dbo:parent ?parentGrandChild . }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,42,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  ?schimmelpenninck dbo:commander ?battleOfLeipzig .
  ?battleOfLeipzig rdfs:label ""Battle of Leipzig""@en .
  
  ?wellington dbo:commander ?militaryForce .
  ?wellington rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .

  ?schimmelpenninck rdfs:label ""Rutger Jan Schimmelpenninck""@en .

  OPTIONAL { ?battleOfLeipzig dbo:militaryConflict ?militaryForce . }
}
```",5,8,6,2,3,3,3,71,0,0,6,0,0.0,0
547,23,test,Give me the resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?grandchildRestingPlace WHERE {
  ?williamHaliburton rdfs:label ""William Haliburton""@en .
  ?williamHaliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild dbo:finalRestingPlace ?grandchildRestingPlace .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,28,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?profession ?event ?societalEvent ?award ?deathLocation WHERE {
  ?person rdfs:label ""Lisa Gavrić""@en .
  
  OPTIONAL { ?person dbo:profession ?profession . }
  OPTIONAL { ?person dbo:event ?event . }
  OPTIONAL { ?person dbo:socialRole ?societalEvent . }
  
  ?award dbo:recipient ?person ;
         dbo:awardedBy ?makovetsky .
  ?makovetsky rdfs:label ""Sergei Makovetsky""@en .

  ?deathLocation dbo:placeOfDeath ?person ;
                 rdfs:label ?locationLabel .
  FILTER regex(?locationLabel, ""House of Sombrerete"", ""i"")
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
184,35,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Part 1: Parent of the child of Archduke Joseph Francis of Austria
  OPTIONAL {
    ?archduke rdfs:label ""Archduke Joseph Francis of Austria""@en .
    ?child dbo:childOf ?archduke .
    ?child dbo:parent ?parent1 .
  }

  # Part 2: Parent of the native of Budapest
  OPTIONAL {
    ?native dbo:nativePlace ?place .
    ?place rdfs:label ""Budapest""@en .
    ?native dbo:parent ?parent2 .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
801,55,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?song rdfs:label ""40 Dayz & 40 Nightz""@en .
  ?song dbo:writer ?writer .
  ?writer a dbo:MusicalArtist ;
          a dbo:Artist ;
          dbo:producer ?work ;
          dbo:alterEgo ?shadow .
  ?work rdfs:label ""50 Cent""@en .
  ?shadow rdfs:label ""The Shadow""@en .
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
488,42,test,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace ?administration ?birthPlace WHERE {
  # Death place of Tokugawa Ieyasu
  ?tokugawaIeyasu rdfs:label ""Tokugawa Ieyasu""@en .
  ?tokugawaIeyasu dbo:deathPlace ?deathPlace .

  # Administration of Toyotomi Hideyoshi (father of Emperor Go-Mizunoo)
  ?goMizunoo rdfs:label ""Emperor Go-Mizunoo""@en .
  ?goMizunoo dbo:father ?toyotomiHideyoshi .
  OPTIONAL {
    ?toyotomiHideyoshi dbo:positionHeld ?administration .
  }

  # Birth place of Saigō Takamori (commander in Boshin War)
  ?saigoTakamori rdfs:label ""Saigō Takamori""@en .
  ?saigoTakamori dbo:birthPlace ?birthPlace .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
528,46,test,"Give me the war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?war WHERE {
  ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
  ?battle dbo:commander ?commander .

  OPTIONAL {
    ?conflict dbo:militaryConflict ?war ;
              dbo:country <http://dbpedia.org/resource/Chile> .
  }
}
```",5,6,6,3,2,3,3,71,0,2,14,0.0,0.0,0
701,52,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Find the spouse of Amun-her-khepeshef
  ?amunHerKhepeshef dbo:spouse ?spouseAmun .
  
  # Step 2: Identify a child of this spouse
  ?childOfSpouse dbo:parent ?spouseAmun ;
                a dbo:Person .

  # Step 3: The parent of this child is the spouse of Amun-her-khepeshef
  BIND(?spouseAmun AS ?parent1)

  # Step 4: Find the spouse of Ramesses II
  ?ramessesII dbo:spouse ?spouseRamesses .

  # Step 5: Identify a child of Ramesses II
  ?childOfRamesses dbo:parent ?spouseRamesses ;
                  a dbo:Person .

  # Step 6: The parent of this child is one of Ramesses II’s spouses
  BIND(?spouseRamesses AS ?parent2)

  # Step 7: Find the common parent fitting both descriptions
  FILTER (?parent1 = ?commonParent)
  FILTER (?parent2 = ?commonParent)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,54,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?alumnus ?father ?partyFather ?italianParty ?prodiParty WHERE {
  # Find an alumnus of MIT
  ?alumnus dbo:alumnusOf dbpedia:Massachusetts_Institute_of_Technology .
  
  # Identify the father of this alumnus
  ?alumnus foaf:parent ?father .

  # Determine the political party of the father
  OPTIONAL { ?father dbo:partyAffiliation ?partyFather . }

  # Reference to Italian People's Party (1994)
  ?italianParty rdfs:label ""Italian People's Party""@en .
  FILTER(YEAR(?italianParty) = 1994)

  # Find Romano Prodi and his party affiliation
  dbpedia:Romano_Prodi dbo:partyAffiliation ?prodiParty .

}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
963,16,test,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration ?countryInCET WHERE {
  # Find administration of ruling party in Sremski Karlovci
  ?place rdfs:label ""Sremski Karlovci""@en .
  ?place dbo:politicalParty ?party .
  ?party dbo:headOfGovernment ?administration .

  OPTIONAL {
    # Find a country in the Central European Time zone
    ?countryInCET dbo:timeZone ?timezone .
    FILTER (CONTAINS(LCASE(str(?timezone)), ""central european time""))
  }
}
```",4,6,5,2,2,3,2,20,0,0,84,0,0.0,0
435,27,test,Give me the territory administered from Reykjavík and work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?territory ?work ?region WHERE {
  # Territory administered from Reykjavík
  OPTIONAL {
    ?territory dbo:capital dbr:Reykjavík .
    BIND(""Territory Administered from Reykjavík"" AS ?label)
  }

  # Work of the author of ""Iceland""
  OPTIONAL {
    ?book rdfs:label ""Iceland""@en .
    ?book dbo:author ?author .
    ?author dbo:notableWorks ?work .
    FILTER(?work != ?book) 
    BIND(""Work of Author of Iceland"" AS ?label)
  }

  # Region of the time zone in Bombali Shebora Chiefdom
  OPTIONAL {
    ?chiefdom rdfs:label ""Bombali Shebora Chiefdom""@en .
    ?chiefdom dbo:timeZone ?timezone .
    ?timezone dbo:region ?region .
    BIND(""Region of Time Zone in Bombali Shebora Chiefdom"" AS ?label)
  }
}
```",5,5,6,2,3,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
184,48,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Part 1: Parent of the child of Archduke Joseph Francis of Austria
  ?archduke rdfs:label ""Archduke Joseph Francis of Austria""@en .
  ?child dbo:childOf ?archduke .
  ?child dbo:parent ?parent1 .

  # Part 2: Parent of the native of a landmark at elevation 96.0 that is a settlement
  ?landmark rdf:type dbo:PopulatedPlace ;
            geo:elevation ""96.0""^^xsd:float ;
            dbo:nativeOf ?native .
  ?native dbo:parent ?parent2 .

}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,47,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander ?event WHERE {
  ?welsh rdf:type dbo:MilitaryPerson .
  ?welsh rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  
  OPTIONAL { 
    ?welsh dbo:commander ?commander .
  }
  
  ?event rdf:type dbo:MilitaryConflict ;
         dbo:participatedIn ?welsh ;
         dbo:participatingUnit ?unit .

  ?unit rdfs:label ""Polish Horse""@en .
}
```",5,9,6,3,2,3,3,71,0,0,71,0,0.0,0
534,16,test,"Give me the headquarter of the owner of RDS Arena and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?headquarter ?birthPlace WHERE {
  # Step 1: Find the owner of RDS Arena
  ?arena rdfs:label ""RDS Arena""@en .
  ?arena dbo:owner ?owner .

  # Step 2: Get the headquarter of the owner
  ?owner dbo:headquarters ?headquarter .

  # Step 3: Identify Desmond FitzGerald's child who is a politician and office holder
  ?desmond rdfs:label ""Desmond FitzGerald (politician)""@en .
  ?child dbo:parent ?desmond ;
         dbo:officeHolder ?office ;
         dbo:birthPlace ?birthPlace .

  # Ensure the child is both a politician and an office holder
  FILTER EXISTS { ?child dbo:politician ?pol }
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
754,16,test,Give me the parent of the child of Ram Khamhaeng and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfChildOfRamKhamhaeng ?grandparentOfMayHninHtapi WHERE {
  # Ram Khamhaeng's child's parent
  ?ramKhamhaeng dbo:child ?child .
  ?child dbo:spouse|dbo:partner ?parentOfChildOfRamKhamhaeng .

  # May Hnin Htapi's grandparent
  ?mayHninHtapi dbo:child ?parentOfMayHninHtapi .
  ?parentOfMayHninHtapi dbo:spouse|dbo:partner ?grandparentOfMayHninHtapi .
  
  FILTER(STR(?ramKhamhaeng) = ""Ram Khamhaeng""^^xsd:string)
  FILTER(STR(?mayHninHtapi) = ""May Hnin Htapi""^^xsd:string)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
92,64,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?band ?film WHERE {
  # Find Joe Satriani's band
  ?satriani rdfs:label ""Joe Satriani""@en .
  ?satriani dbo:birthName ""Joseph Michael Satriani"" .
  ?satriani dbo:associatedBand ?band .

  # Find Jim Sheppard's association with Nevermore
  ?sheppard rdfs:label ""Jim Sheppard""@en .
  ?sheppard dbo:associatedBand ?nevermoreBand .
  FILTER(?nevermoreBand = <http://dbpedia.org/resource/Nevermore_(band)>)

  # Find reference to the film ""Nevermore"" (2006)
  ?film rdfs:label ""Nevermore (2006 film)""@en .

  # Optional connection between Nevermore and the film
  OPTIONAL {
    ?nevermoreBand dbo:reference ?film .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,30,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?person dbo:nativePlace ?compton .
  ?compton rdfs:label ""Compton, California""@en .

  ?movie dbo:starring ?actor ;
         a dbo:Film ;
         dbo:workExample ?work ;
         dbo:televisionShow ?tvshow .

  ?movie dbo:starring ?rozRyan .
  ?rozRyan rdfs:label ""Roz Ryan""@en .

  ?departed dbo:starring ?actor .
  ?departed rdfs:label ""The Departed""@en .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
92,59,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist WHERE {
  ?film rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
  ?film dbo:actor ?person .
  
  OPTIONAL { 
    ?person dbo:bandMember ?band .
    ?band rdfs:label ?bandLabel .
  }
  
  OPTIONAL {
    ?nevermoreFilm rdfs:label ""Nevermore (2006 film)""@en .
    ?nevermoreFilm dbo:reference ?reference .
    ?reference dbo:artist ?artist .
  }

  FILTER(?person = ?artist)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
801,63,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?song rdfs:label ""40 Dayz & 40 Nightz""@en .
  ?song dbo:writer ?writer .
  
  ?producer rdfs:label ""Dr. Dre""@en ;
            dbo:alterEgo ?shadow .
  ?shadow rdfs:label ""The Shadow""@en .

  ?work rdfs:label ""50 Cent""@en ;
        dbo:producer ?producer ;
        rdf:type dbo:Songs .

  FILTER(?writer = ?producer)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
783,17,test,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist ?bandMember WHERE {
  # Find Appietus's associated musical artist
  ?appietus rdfs:label ""Appietus""@en .
  ?appietus dbo:associatedMusicalArtist ?associatedArtist .

  # Find the person who is both an artist and a musical artist, related to Ebony Reigns' persona
  ?person rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""ebony reigns"") || CONTAINS(LCASE(?label), ""artist"") && CONTAINS(LCASE(?label), ""musical artist""))
  
  # Find the band member of this person
  ?bandMember dbo:bandMember ?person .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
9,46,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?almaMater WHERE {
  # Find the mayor of Belfast
  ?organization dbo:location dbr:Belfast .
  ?mayor dbo:positionHeld ?organization ;
         a dbo:Politician .

  # Get the alma mater of the mayor
  OPTIONAL { ?mayor dbo:almaMater ?mayorAlmaMater . }

  # Find the awardee of the Royal Medal
  ?awardee dbo:award dbr:Royal_Medal ;
           a dbo:Person .

  # Get the alma mater of the Royal Medal awardee
  OPTIONAL { ?awardee dbo:almaMater ?awardeeAlmaMater . }

  # Check for common alma mater
  FILTER (?mayorAlmaMater = ?awardeeAlmaMater)
  BIND(?mayorAlmaMater AS ?almaMater)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
9,50,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?nickname WHERE {
  # Find the nickname of Queen's University Belfast
  ?university rdfs:label ""Queen's University Belfast""@en .
  OPTIONAL { ?university dbo:nickName ?nickname . }
  
  # Find individuals who have received the Royal Medal and their alma maters
  ?recipient foaf:almaMater ?almaMater ;
             dbo:awardReceived ?medal .
  ?medal rdfs:label ""Royal Medal""@en .

  FILTER(?almaMater = ?university)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,18,test,Give me the resting place of Alan Cunningham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?restingPlace WHERE {
  VALUES ?personLabel { ""Alan Cunningham"" ""James Burton (Egyptologist)"" ""Simon Cadell"" }
  
  ?person rdfs:label ?personLabel .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }

  FILTER(LANG(?personLabel) = 'en')
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
617,49,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfRoyalChild WHERE {
  # Seleucus II Callinicus and his child who is royalty
  ?seleucus rdfs:label ""Seleucus II Callinicus""@en .
  ?child dbo:child ?seleucus ;
         dbo:royalty ?royalStatus .

  # Parent of the royal child's child
  ?grandchild dbo:child ?child ;
              dbo:parent ?parentOfRoyalChild .

  # Commander in Battle of Panium and their child
  ?battle rdfs:label ""Battle of Panium""@en .
  ?commander dbo:commander ?battle ;
             dbo:child ?commandersChild .

  # Linking the two parts together
  FILTER(?parentOfRoyalChild = ?commandersChild)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
801,58,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?professionalIn ?associatedArtist ?writer WHERE {
  # Identify the album and its association with 50 Cent
  dbr:What_U_See_Is_What_U_Get dbo:artist dbr:50_Cent .
  
  # Find songs in this album
  ?song dbo:album dbr:What_U_See_Is_What_U_Get ;
        a dbo:Songs .

  # Identify producers of these songs
  OPTIONAL { ?song dbo:producer ?producer . }

  # Determine professional roles related to the producer
  OPTIONAL { ?producer dbo:professionalIn ?professionalIn . }
  
  # Find associated musical artists for the writer
  ?writer dbo:musicalArtist dbr:50_Cent ;
          dbo:associatedMusicalArtist ?associatedArtist .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
92,63,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember ?furneyBand ?sheppardArtist WHERE {
  # Part 1: Band member of the reference to ""Nevermore"" (2006 film)
  OPTIONAL {
    ?film dbo:title ""Nevermore""@en .
    ?film dbo:starring ?actor .
    ?actor foaf:name ?bandMember .
  }

  # Part 2: Band associated with Joseph Michael Furney
  OPTIONAL {
    ?person foaf:name ""Joseph Michael Furney"" .
    ?person dbo:memberOfBand ?furneyBand .
  }
  
  # Part 3: Musical artist associated with Jim Sheppard
  OPTIONAL {
    ?sheppardPerson foaf:name ""Jim Sheppard"" .
    ?sheppardPerson dbo:associatedMusicalArtist ?sheppardArtist .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
492,52,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander WHERE {
  ?conflict a dbo:MilitaryConflict ;
            dbo:participant [
              dbo:name ""Frédéric-Georges Herr"" ;
              dbo:commander ?commander .
            ].
  
  OPTIONAL { 
    ?person dbo:deathPlace ?place1 .
    FILTER (str(?place1) = str(""Algiers""))
  }
  
  OPTIONAL {
    ?author dbo:work [
      dbo:subject ""French Algeria"" ;
      dbo:creator ?person
    ]
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
626,17,test,Give me the awardee of the award of the military force of Battle of Borodino and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Find individuals who received awards related to the Battle of Borodino
  ?award dbo:recipient ?person .
  ?award dbo:event ?event1 .
  ?event1 rdfs:label ""Battle of Borodino""@en .

  # Find individuals who were commanders in the Battle of Leipzig
  OPTIONAL {
    ?commander dbo:commanded ?battle2 .
    ?battle2 rdfs:label ""Battle of Leipzig""@en .
    ?commander rdfs:label ?personLabel .
  }

  FILTER EXISTS { ?commander rdfs:label ?personLabel }
}
```",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
701,49,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?spouse WHERE {
  ?battle rdfs:label ""Battle of Perire""@en .
  ?battle dbo:commander ?commander .
  
  ?father dbo:child ?commander .
  ?father rdf:type dbo:Person .

  OPTIONAL { 
    ?parent dbo:child ?child .
    ?child rdfs:label ""Nefertari""@en .
    ?parent ?spouseRole ?spouse .
    FILTER (?spouseRole IN (dbo:mother, dbo:father))
  }

  ?father dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse rdf:type dbo:Royalty }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
994,60,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify Don Dokken
  ?dokken rdfs:label ""Don Dokken""@en .
  
  # Step 2: Find associated musical artist of Watchtower
  ?watchtower rdfs:label ""Watchtower""@en .
  ?watchtower dbo:associatedMusicalArtist ?associatedArtist .

  # Step 3: Identify persona related to Don Dokken and the associated artist from Watchtower
  ?persona dbo:associatedMusicalArtist ?dokken ;
           dbo:associatedMusicalArtist ?associatedArtist .

  # Step 4: Find a band member of this persona
  ?bandMember dbo:bandMember ?persona .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,28,test,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice and professional in Actress.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person (GROUP_CONCAT(?spouseLabel; separator="", "") AS ?spouses) WHERE {
  VALUES (?name ?profession) { (""Ted Martin McGinley""^^xsd:string) (null) }
  ?person rdfs:label ?name .
  OPTIONAL { ?person dbo:spouse ?spouse . ?spouse rdfs:label ?spouseLabel . FILTER(LANG(?spouseLabel) = ""en"") }

  VALUES (?name ?profession) { (""Georgeanne Marie Rice""^^xsd:string) (dbo:Actor) }
  ?person rdfs:label ?name .
  ?person dbo:occupation ?occupation .
  FILTER(?occupation = ?profession)
  OPTIONAL { ?person dbo:spouse ?spouse . ?spouse rdfs:label ?spouseLabel . FILTER(LANG(?spouseLabel) = ""en"") }

} GROUP BY ?person
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,52,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?professional ?associatedArtist ?producer WHERE {
  # Find the alter ego of ""The Shadow""
  ?shadow rdfs:label ""The Shadow""@en .
  ?shadow dbo:alterEgo ?trueSelf .

  # Link true self to a professional identity
  ?trueSelf dbo:profession ?professional .

  # Identify Chris Taylor's associated musical artist
  ?chrisTaylor rdfs:label ""Chris Taylor (music producer)""@en .
  ?chrisTaylor dbo:musicalArtist ?associatedArtist .

  # Find a producer of 50 Cent's work that links to the above elements
  ?fiftyCent rdfs:label ""50 Cent""@en .
  ?work dbo:producer ?producer ;
        dbo:artist ?fiftyCent ;
        rdf:type dbo:Song .

  # Ensure the producer is linked to both the professional and associated artist
  ?producer dbo:musicalArtist ?associatedArtist .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
492,54,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?satterthwaite dbo:officeHolder ?position .
  FILTER(CONTAINS(LCASE(STR(?position)), ""us assistant secretary of state for african affairs"")) .

  ?verdunEvent dbo:commander ?person .
  ?verdunEvent rdf:type dbo:MilitaryConflict .

  ?algiersDeath dbo:deathPlace <http://dbpedia.org/resource/Algiers> .
  ?algiersDeath dbo:decedent ?person .

  FILTER(?person = ?verdunCommander)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,61,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nashAlmaMater ?alterEgoAlmaMater WHERE {
  # George Kilbon Nash's alma mater
  ?nash dbo:almaMater ?nashAlmaMater .
  ?nash rdfs:label ""George Kilbon Nash""@en .

  OPTIONAL {
    # Matthew Burland's alter ego (fictional character)
    ?burland dbo:fictionalCharacter ?alterEgo .
    ?alterEgo dbo:almaMater ?alterEgoAlmaMater .
    ?burland rdfs:label ""Matthew Burland""@en .
  }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
365,8,test,Give me the band of Phil Alvin and reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band ?reference WHERE {
  # Find the band associated with Phil Alvin
  ?person rdfs:label ""Phil Alvin""@en .
  ?person dbo:member ?band .

  OPTIONAL {
    # Find reference related to The Blasters
    ?blasters rdfs:label ""The Blasters""@en .
    ?blasters ?property ?reference .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
10,24,test,"Give me the professional in the birth name of Sharon Kao and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?artist rdfs:label ""Luke Francis Vibert""@en .
  ?band dbo:member ?artist ;
        dbo:member ?sharonKao .
  ?sharonKao rdfs:label ""Sharon Kao""@en .
  ?sharonKao dbo:birthName ?birthName .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
617,63,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfChild 
WHERE {
  # Antiochus II Theos and his successor
  ?antiochus2 rdfs:label ""Antiochus II Theos""@en .
  ?antiochus2 dbo:successor ?successor .

  # Successor's child who is royalty
  ?successor dbo:child ?childOfSuccessor .
  ?childOfSuccessor rdf:type dbo:Monarch .

  # Child of Antiochus III the Great and their spouse
  ?antiochus3 rdfs:label ""Antiochus III the Great""@en .
  ?antiochus3 dbo:child ?childOfAntiochus3 .
  ?childOfSuccessor dbo:spouse ?spouse .

  # Parent of Antiochus (son of Antiochus III the Great)
  ?antiochus rdfs:label ""Antiochus""@en .
  ?antiochus dbo:parent ?parentOfAntiochus .
  FILTER (?childOfSuccessor = ?spouse) .

  # Final relationship
  ?parentOfAntiochus dbo:child ?childOfChild .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
963,18,test,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?canton rdfs:label ""Herzegovina-Neretva Canton""@en .
  ?canton dbo:timeZone ?timezone .
  ?region dbo:timeZone ?timezone ;
          dbo:country ?country .
  
  ?karlovci rdfs:label ""Sremski Karlovci""@en .
  ?karlovci dbo:rulingParty ?party .

  FILTER (?entity = ?country || ?entity = ?party)
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
528,61,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?force ?war WHERE {
  ?person rdfs:label ""Narciso Campero""@en .
  OPTIONAL { ?person dbo:militaryForce ?force . }
  OPTIONAL { ?person dbo:commandedWar ?war . }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
404,59,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfChild WHERE {
  # Step 1: Find Prince George William of Hanover and his royal parent
  ?princeGeorge rdfs:label ""Prince George William of Hanover""@en .
  ?princeParent dbo:child ?princeGeorge ;
                a dbo:Monarch .

  # Step 2: Find Princess Victoria Louise of Prussia and her spouse who is royalty
  ?princessVictoria rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?spouse dbo:spouse ?princessVictoria ;
          a dbo:Monarch .

  # Step 3: Identify the child of the royal parent from step 1 who is also royalty
  ?child dbo:parent ?princeParent ;
         a dbo:Monarch .

  # Step 4: Find the parent of this child
  ?parentOfChild dbo:child ?child .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
427,38,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherParty ?prodiParty WHERE {
  # Part 1: Party of Lamberto Andreotti's father
  ?andreotti rdfs:label ""Lamberto Andreotti""@en .
  ?andreotti dbo:father ?father .
  ?father dbo:party ?fatherParty .

  # Part 2: Party of Romano Prodi
  ?prodi rdfs:label ""Romano Prodi""@en .
  ?prodi a dbo:OfficeHolder ;
         a dbo:Politician .
  ?prodi dbo:party ?prodiParty .
}
```",4,6,5,2,2,3,3,71,0,0,3,0,0.0,0
645,16,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?mrs jamesWilkesMaurice dbo:residence ?residence .
  ?residence rdf:type dbo:Country ;
             rdfs:label ?countryLabel .
  
  ?pankhurst richardPankhurst dbo:child ?child .
  ?child dbo:almaMater ?residence .

}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
435,22,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?territory WHERE {
  ?country rdfs:label ""Iceland""@en .
  ?territory dbo:administeredBy ?country ;
             (rdfs:label ?label) FILTER (
               CONTAINS(LCASE(?label), ""settlement"") || 
               CONTAINS(LCASE(?label), ""town"")
             ) .
  OPTIONAL {
    ?territory dbo:timeZone ?timezone .
    ?timezone rdfs:label ?tzLabel .
    FILTER(CONTAINS(LCASE(?tzLabel), ""bombali shebora chiefdom""))
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,24,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?lisa a dbo:Person ;
        rdfs:label ""Lisa Gavrić""@en .
  
  ?profession dbo:event true ;
              dbo:societalEvent true ;
              dbo:hasOccupation ?lisa .

  ?award dbo:recipient ?lisa ;
         dbo:givenBy ?sergeiMakovetsky .

  ?sergeiMakovetsky rdfs:label ""Sergei Makovetsky""@en .
  
  ?commander dbo:profession ?profession .
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
488,71,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT 
  ?administration 
  ?deathPlace 
  ?birthPlace 
WHERE {
  # Tokugawa Masako's spouse's father (royalty) administration
  ?masako dbo:spouse ?spouse .
  ?spouse dbo:father ?fatherSpouse .
  ?fatherSpouse rdf:type dbo:RoyalFamilyMember .
  ?fatherSpouse dbo:administration ?administration .

  # Matsudaira Tadamasa's father's death place (politician)
  ?tadamasa dbo:father ?fatherTadamasa .
  ?fatherTadamasa rdf:type dbo:Politician .
  ?fatherTadamasa dbo:deathPlace ?deathPlace .

  # Saitō Hajime's commander in a war
  ?hajime dbo:militaryConflict ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict ;
            rdfs:label ?conflictLabel .
  FILTER(CONTAINS(LCASE(?conflictLabel), ""war"") && 
         CONTAINS(LCASE(?conflictLabel), ""event"") &&
         CONTAINS(LCASE(?conflictLabel), ""societal event""))
  ?conflict dbo:commander ?commander .
  ?commander dbo:birthPlace ?birthPlace
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
485,22,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Writer ;
          a dbo:Poet ;
          dbo:award ?award .
  
  ?award rdfs:label ""Eric Gregory Award""@en .

  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }

  ?country dbo:timeZone dbp:timeZone ""Western European Time"" .
  ?person dbo:nationality ?nationality ;
          ?nationality dbo:country ?country .
}
```",4,7,5,2,2,2,3,28,0,0,5,0,0.0,0
617,56,test,"Give me the parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of Laodice IV.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfChild ?royalDescendant ?spouse WHERE {
  # Find the commander in Battle of Panium and their child's parent
  ?battle dbo:event ""Battle of Panium"" .
  ?commander dbo:commanderIn ?battle .
  ?child dbo:childOf ?commander .
  ?parentOfChild dbo:parentOf ?child .

  # Find Seleucus II Callinicus' grandchild who is royalty
  ?seleucus rdfs:label ""Seleucus II Callinicus""@en .
  ?child2 dbo:childOf ?seleucus .
  ?grandchild dbo:childOf ?child2 .
  ?royalDescendant dbo:parentOf ?grandchild .
  FILTER EXISTS { ?royalDescendant a dbo:Monarch } .

  # Find Laodice IV's spouse
  ?laodice rdfs:label ""Laodice IV""@en .
  ?spouse dbo:spouse ?laodice .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,20,test,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils and landmark at elevation of the award of the commander in Battle of Chishui River.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member ?birthPlace WHERE {
  ?band rdfs:label ""The Boils""@en .
  ?band a dbo:Band ;
        dbo:member ?member .
  ?member dbo:birthPlace ?birthPlace .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
959,69,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?nativeCountry WHERE {
  # Identify Yōichi Masuzoe's residence and its native country
  ?yoshi rdfs:label ""Yōichi Masuzoe""@en .
  ?yoshi dbo:residence ?residence .
  ?residence dbo:native ?nativePerson .
  ?nativePerson dbo:nationality ?nativeCountry .

  # Identify the manager of the 1998 Kashima Antlers season
  ?manager rdfs:label ""Manager of the 1998 Kashima Antlers season""@en .
  ?manager dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1958)

  # Ensure the manager's alma mater is a Japanese university and educational organization
  ?manager dbo:almaMater ?university .
  ?university rdfs:label ?uniLabel .
  ?university rdf:type dbo:EducationalOrganization ;
              rdf:type dbo:University .
  FILTER (CONTAINS(LCASE(?uniLabel), ""japan""))

  # Ensure the manager's alma mater matches Yōichi Masuzoe's alma mater
  ?yoshi dbo:almaMater ?sameUniv .
  FILTER (?university = ?sameUniv)
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
251,28,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?deathPlace ?rulingParty ?warLocation WHERE {
  # Find the author of ""The Twelve Abbots of Challant""
  ?work rdfs:label ""The Twelve Abbots of Challant""@en .
  ?work dbo:author ?author .

  # Get the death place of the author
  ?author dbo:deathPlace ?deathPlace .

  # Find a political party that is an organization and ruling in Sicily
  ?party rdf:type dbo:PoliticalParty ;
         dbo:country dbr:Sicily ;
         rdfs:label ?rulingPartyLabel .
  
  # Find the military conflict associated with Louis François Félix Musnier
  ?musnier rdfs:label ""Louis François Félix Musnier""@en .
  ?musnier dbo:conflict ?war .
  ?war dbo:location ?warLocation .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
747,65,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?band WHERE {
  # Part 1: Band of Tracey Elizabeth McSween
  { 
    ?person dbo:birthName ""Tracey Elizabeth McSween""@en .
    OPTIONAL { ?person dbo:band ?band . }
  }

  UNION

  # Part 2: Person born on Pavlo Khudzik's birth date and their band
  {
    ?pavlo dbo:birthDate ?date .
    ?otherPerson dbo:birthDate ?date .
    OPTIONAL { ?otherPerson dbo:band ?band . }
  }

  UNION

  # Part 3: Band of the writer of a song by Amba Shepherd
  {
    ?song dbo:song ""Amba Shepherd""@en .
    ?song dbo:writer ?writer .
    OPTIONAL { ?writer dbo:band ?band . }
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
294,20,test,"Give me the entity in Nashville, Tennessee and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?entityInNashville ?architectRestingPlace ?lukeLeaRestingPlace WHERE {
  # Find the architect of P. D. Houston Jr. House
  ?house dbo:location ?nashvilleEntity .
  ?house rdfs:label ""P. D. Houston Jr. House""@en .
  ?house dbo:architect ?architect .

  # Find the resting place of the architect
  ?architect dbo:deathPlace ?architectRestingPlace .

  # Find Luke Lea and his death place
  ?lukeLea rdfs:label ""Luke Lea (American politician, born 1879)""@en .
  ?lukeLea dbo:deathPlace ?lukeLeaRestingPlace .

  # Ensure the entity is in Nashville, Tennessee
  ?nashvilleEntity rdfs:label ?locationLabel .
  FILTER(CONTAINS(LCASE(?locationLabel), ""nashville, tennessee""))

  # Bind the common entity in Nashville
  BIND(?nashvilleEntity AS ?entityInNashville)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
339,20,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?father WHERE {
  # Step 1: Identify Princess Olga of Greece and Denmark
  ?olga rdfs:label ""Princess Olga of Greece and Denmark""@en .
  
  # Step 2: Find her parent
  ?parent dbo:child ?olga .

  # Step 3: Determine the child of this parent
  ?child1 dbo:child ?parent .

  # Step 4: Identify Frederick VIII of Denmark and his predecessor
  ?frederickVIII rdfs:label ""Frederick VIII of Denmark""@en .
  ?predecessor dbo:successor ?frederickVIII .

  # Step 5: Find the child of the predecessor (Frederick VII)
  ?child2 dbo:child ?predecessor .

  # Step 6: Identify the parent of this child, which should be Frederick VII
  ?parent2 dbo:child ?child2 .
  
  # Step 7: Determine the father of the child from both identified relationships
  ?father dbo:spouse ?mother1 ;
          dbo:child ?child1 .
  OPTIONAL { 
    ?father dbo:spouse ?mother2 ;
            dbo:child ?child2 .
  }
}
```",6,6,7,3,2,3,2,20,0,6,1,0.0,0.0,0
142,8,test,Give me the entity in Japan and birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor ?entityInJapan ?birthplace WHERE {
  # Find the anime ""Papa wa Newscaster""
  ?anime rdfs:label ""Papa wa Newscaster""@en .
  
  # Get actors associated with the anime
  ?anime dbo:castMember ?actor .

  # Check if any entity related to the actor is in Japan
  OPTIONAL {
    ?entityInJapan dbo:country <http://dbpedia.org/resource/Japan> .
    ?entityInJapan dbo:associatedWith ?actor .
  }

  # Get birthplace of the actor
  ?actor dbo:birthPlace ?birthplace .

  FILTER EXISTS { ?anime rdfs:label ""Papa wa Newscaster""@en }
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
820,18,test,Give me the child of the parent of Jason Schwartzman and professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfParent WHERE {
  ?parent dbo:child ?jason .
  ?jason rdfs:label ""Jason Schwartzman""@en .
  
  ?parent dbo:child ?childOfParent .
  FILTER(?childOfParent != ?jason)

  ?book dbo:author ?author .
  ?book rdfs:label ""Understanding Comics""@en .

  ?award dbo:recipient ?author .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
10,23,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist WHERE {
  # Identify Sharon Kao by her birth name and profession as an artist
  ?sharonKao rdfs:label ""Sharon Kao""@en .
  ?sharonKao dbo:birthName ""Sharon Kao"" .
  ?sharonKao dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""artist""))

  # Find Matt Colton's associated musical artists
  ?mattColton rdfs:label ""Matt Colton""@en .
  ?mattColton dbo:associatedMusicalArtist ?artist .

  # Check if Sharon Kao is connected to any of these artists
  OPTIONAL {
    ?sharonKao dbo:associatedMusicalArtist ?artist .
  }
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
391,48,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?native WHERE {
  ?person rdfs:label ""The nickname of Jackson, Tennessee""@en .
  ?movie dbo:starring ?person ;
         dbo:starring ?rozRyan .
  ?rozRyan rdfs:label ""Roz Ryan""@en .
  ?movie rdf:type dbo:Film .
  OPTIONAL { ?movie dbo:work ?work . }
  OPTIONAL { ?movie dbo:televisionSeries ?tvShow . }
  ?person foaf:nationality ?native .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
9,69,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?nickname WHERE {
  ?institution rdf:type dbo:EducationalOrganization ;
               dbo:almaMater ?politician ;
               dbo:almaMater ?royalMedalist .
  ?politician dbo:position ?mayorPosition ;
              rdfs:label ?politicianLabel .
  ?mayorPosition rdfs:label ""Mayor""@en .
  ?organization dbo:location ?belfastLocation ;
                dbo:head ?politician .
  ?belfastLocation rdfs:label ""Belfast""@en .
  ?royalMedalist dbo:award ?royalAward .
  ?royalAward rdfs:label ""Royal Medal""@en .
  ?institution rdfs:label ?institutionLabel .
  FILTER regex(?institutionLabel, ""Northern Ireland"", ""i"")
  OPTIONAL { ?institution rdfs:label ?nickname }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
232,51,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?nativeOfSettlement WHERE {
  # Step 1: Find Sean Pertwee's claims to fame (films and military conflicts)
  ?pertwee dbo:birthName ""Sean Pertwee""@en .
  
  OPTIONAL { 
    ?pertwee dbo:film ?film .
    FILTER EXISTS { ?film a dbo:Film . }
  }

  OPTIONAL {
    ?pertwee dbo:militaryConflict ?conflict .
    FILTER EXISTS { ?conflict a dbo:MilitaryConflict . }
  }

  # Step 2: Find the French native who is both a politician and an office holder
  ?person dbo:nationality dbr:France ;
          dbo:birthPlace ?placeBirth ;
          dbo:residence ?residence .
  
  FILTER EXISTS { ?person dbo:officeHolder true . }
  FILTER EXISTS { ?person dbo:politician true . }

  # Link this person to Sean Pertwee's claim to fame
  OPTIONAL {
    ?film dbo:actor ?person .
  }
  OPTIONAL {
    ?conflict dbo:soldier ?person .
  }

  # Step 3: Ensure the residence is a British settlement
  ?residence dbo:country dbr:United_Kingdom ;
             a dbo:Settlement .

  # Step 4: Find the native of this settlement
  ?nativeOfSettlement dbo:nativePlace ?residence .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
378,67,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?conflict ?claimToFame WHERE {
  # Find conflicts involving Thomas Trigge and Carl Pontus Gahn
  { 
    ?person rdfs:label ""Thomas Trigge""@en .
    ?person dbo:militaryConflict ?conflict .
    OPTIONAL { ?conflict dbp:commander ?commander . FILTER(?commander = ?person) }
  } UNION {
    ?person rdfs:label ""Carl Pontus Gahn""@en .
    ?person dbo:militaryConflict ?conflict .
    OPTIONAL { ?conflict dbp:commander ?commander . FILTER(?commander = ?person) }
  }

  # Find claims to fame of these commanders
  OPTIONAL {
    ?conflict dbo:claimToFame ?claimToFame .
  }

  # Check if the conflict is related to Peninsular War
  OPTIONAL {
    ?peninsularWar rdfs:label ""Peninsular War""@en .
    ?peninsularWar dbo:militaryConflict ?relatedConflict .
    FILTER(?conflict = ?relatedConflict)
  }
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
659,51,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?militaryForce WHERE {
  # Find the commander of the 1st Light Cavalry Lancers Regiment during a war
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  ?regiment dbo:militaryConflict ?war .
  ?war rdf:type dbo:MilitaryConflict .
  ?regiment dbo:commander ?commander .

  # Find the military force associated with Rutger Jan Schimmelpenninck during a societal event
  ?individual rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  ?event rdf:type dbo:SocietalEvent, dbo:MilitaryConflict .
  ?individual dbo:militaryForce ?militaryForce .
  ?militaryForce dbo:event ?event .
}
```",5,10,6,3,2,3,3,71,0,0,31,0,0.0,0
959,30,test,Give me the native of Japan and manager of the team of Takashi Sekizuka and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person dbo:nationality dbr:Japan .
  ?team dbo:manager ?person .
  ?team dbo:member dbr:Takashi_Sekizuka .
  ?person dbo:almaMater dbr:University_of_Tsukuba .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
421,28,test,Give me the band member of the awardee of [[#Awards and nominations and native of the birthplace of Samir Bekrić and person born as the birth name of Dino Merlin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  # Find the birthplace of Samir Bekrić
  ?samirBekric dbo:birthPlace ?birthPlace .
  
  # Find people native to this place and born with Dino Merlin's name
  ?person dbo:birthPlace ?birthPlace ;
          dbo:birthName ?dinoMerlinBirthName .
  
  # Get Dino Merlin's birth name
  wd:Q123456 dbo:birthName ?dinoMerlinBirthName .  # Replace Q123456 with the actual DBpedia ID for Dino Merlin
  
  # Check if these individuals have received awards
  ?person dbo:award ?award .
  
  # Find band members of these awardees
  ?bandMember dbo:member ?person .
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
378,18,test,"Give me the war of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?war ?claimToFame WHERE {
  VALUES ?person { 
    dbr:C_Pontus_Gahn 
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón 
    dbr:Joaquín_Blake
  }
  
  OPTIONAL {
    ?person dbo:participatedIn ?war .
  }

  OPTIONAL {
    ?person dbo:claimToFame ?claimToFame .
  }
}
```",3,3,4,1,3,3,3,71,0,3,2,0.0,0.0,0
767,50,test,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of Black Hood.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?almaMater WHERE {
  # George Kilbon Nash's alma mater
  { 
    ?person rdfs:label ""George Kilbon Nash""@en .
    ?person dbo:almaMater ?almaMater .
  }
  
  UNION
  
  # Alter ego of Black Hood (assuming it refers to Batman/Bruce Wayne)
  {
    ?character rdfs:label ""Batman""@en .
    ?character dbo:birthName ""Bruce Wayne""@en .
    ?character dbo:almaMater ?almaMater .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,68,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person WHERE {
  # Find the person who was a commander at Budapest
  ?commanderEvent dbo:eventLocation ?location .
  ?location rdfs:label ""Budapest""@en .
  ?commanderEvent dbo:commander ?person .

  # Ensure this person led an office that is a government agency of Joseph Stalin
  ?office dbo:head ?person ;
          a dbo:GovernmentAgency ;
          dbo:leaderOf ?stalin .
  ?stalin rdfs:label ""Joseph Stalin""@en .

  # Check if the person received an award in the Volcano and Ryukyu Islands campaign
  ?awardEvent dbo:eventLocation ?campaignLocation .
  ?campaignLocation rdfs:label ?campaignLabel .
  FILTER (?campaignLabel IN (""Volcano Islands"", ""Ryukyu Islands""))
  ?awardEvent dbo:recipient ?person ;
              a dbo:Award .

}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
92,51,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band1 ?band2 WHERE {
  # Query for Joseph Michael's band
  ?person1 rdfs:label ""Joseph Michael""@en .
  ?person1 dbo:musicalArtist ?band1 .

  # Query for Jim Sheppard's band
  ?person2 rdfs:label ""Jim Sheppard""@en .
  ?person2 dbo:musicalArtist ?band2 .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,52,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel ?partyLabel WHERE {
  VALUES ?person { 
    dbpedia:Michele_Pinto_(politician) 
    dbpedia:Giovanni_Andreotti 
    dbpedia:Romano_Prodi
  }
  
  ?person rdfs:label ?personLabel .
  FILTER(LANG(?personLabel) = 'en')
  
  OPTIONAL {
    ?person dbo:partyAffiliation ?party .
    ?party rdfs:label ?partyLabel .
    FILTER(LANG(?partyLabel) = 'en')
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
184,65,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royalty WHERE {
  # Archduke Joseph Francis of Austria
  ?joseph rdf:type dbo:Archduke ;
          dbo:child ?child1 .
  
  OPTIONAL { ?child1 dbo:parent ?parent1 . }
  
  # Archduke Ladislaus Philipp of Austria
  ?ladislaus rdf:type dbo:Archduke ;
             dbo:parent ?parent2 .

  ?parent2 dbo:child ?child2 .
  ?child2 dbo:nativePlace ?budaPest .
  FILTER (str(?budaPest) = ""Budapest"")

  ?child2 dbo:child ?grandChild .
  
  # Find the royalty
  ?grandChild rdf:type dbo:Royal ;
              rdfs:label ?royaltyLabel .

  # Ensure the same person is found in both branches
  FILTER (?parent1 = ?grandChild || ?parent1 = ?ladislaus)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
9,64,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?mayorAlmaMater ?organisationNickname WHERE {
  # Find the mayor of Belfast
  ?belfast dbo:mayor ?mayor .
  ?belfast rdfs:label ""Belfast""@en .

  # Get the alma mater of the mayor
  ?mayor dbo:almaMater ?mayorAlmaMater .

  # Find an organisation in Belfast with a nickname that is also an educational institution
  ?organisation dbo:location ?belfast .
  ?organisation rdfs:label ?orgLabel .
  ?organisation foaf:nick ?organisationNickname .
  ?organisation rdf:type dbo:EducationalOrganization .

  # Ensure the organisation's alma mater matches Allen Hill's alma mater
  ?allenHill dbo:almaMater ?mayorAlmaMater .
  ?allenHill rdfs:label ""Allen Hill (scientist)""@en .

  FILTER(lang(?orgLabel) = 'en')
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
487,20,test,"Give me the country of the administration of the person born on 1955-01-26 and administration of the person born, that is a soccer player, as the birth name of Phil Scott.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/country> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country1 ?country2 WHERE {
  # Pattern for the person born on 1955-01-26
  ?person1 dbo:birthday ""1955-01-26""^^xsd:date .
  ?person1 dbo:administrativeOffice ?office1 .
  ?office1 dbo:country ?country1 .

  # Pattern for Phil Scott, a soccer player
  ?person2 rdfs:label ""Phil Scott""@en .
  ?person2 rdf:type dbo:SoccerPlayer .
  ?person2 dbo:birthName ""Phil Scott"" .
  ?person2 dbo:administrativeOffice ?office2 .
  ?office2 dbo:country ?country2 .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
54,61,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Identify Thihapate of Mohnyin
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .
  
  # Step 2: Find Thihapate's child who is an office holder and royalty
  ?child dbo:parent ?thihapate ;
         a dbo:OfficeHolder, dbo:Royal .

  # Step 3: Identify the predecessor of this child
  ?predecessor dbo:successor ?child .
  
  # Step 4: Find Thado Minsaw of Prome
  ?thadoMinsaw rdfs:label ""Thado Minsaw of Prome""@en .

  # Step 5: Determine Thado Minsaw's parent
  ?parent dbo:child ?thadoMinsaw .
  
  # Step 6: Identify the child of this parent
  ?grandChild dbo:parent ?parent .

  # Step 7: Link to the predecessor
  ?predecessor dbo:parent ?grandChild .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
92,38,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band ?artist WHERE {
  # Find the band associated with Joe Satriani (Joseph Michael Furney)
  ?person dbo:birthName ""Joseph Michael Furney""@en .
  OPTIONAL { 
    ?person dbo:musicalArtist ?band .
  }
  
  # Find the musical artist associated with Jim Sheppard
  ?sheppard dbo:birthName ""Jim Sheppard""@en .
  OPTIONAL {
    ?sheppard dbo:musicalArtist ?artist .
  }

  FILTER(?band != ?artist) # Ensure we don't get the same result for both queries
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
827,18,test,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childFather WHERE {
  # Step 1: Identify Charles Augustus and his children who are royalty
  ?charlesAugustus rdfs:label ""Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?charlesAugustus dbo:child ?royalChild .
  
  # Step 2: Find the father of each royal child of Charles Augustus
  ?royalChild dbo:father ?childFather .

  # Step 3: Identify Charles Alexander and his parent
  ?charlesAlexander rdfs:label ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?parent dbo:child ?charlesAlexander .

  # Step 4: Find the children of the parent who are royalty
  ?parentChild dbo:child ?royalParentChild .
  
  # Step 5: Determine the father of each royal child from step 4
  OPTIONAL { ?royalParentChild dbo:father ?finalFather }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
435,21,test,Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?author ?gmtRegion ?administeredTerritory WHERE {
  # Find the author of a work titled ""Iceland""
  ?work rdfs:label ""Iceland""@en .
  ?work dbo:author ?author .

  # Find regions where GMT is used
  ?region dbp:timeZone ""GMT"" .
  BIND(?region AS ?gmtRegion)

  # Find territories administered from Reykjavík (Iceland)
  ?territory dbo:administrativeCapital <http://dbpedia.org/resource/Reykjavík> .
  BIND(?territory AS ?administeredTerritory)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
547,64,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?restingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    ?grandchild dbo:parent ?child .
    ?child dbo:parent ?williamHaliburton .
    ?williamHaliburton rdfs:label ""William Haliburton""@en .
    OPTIONAL { ?grandchild dbo:restingPlace ?restingPlace }
  }

  UNION

  # Resting place of the awardee of the award of Gerald Graham
  {
    ?award dbo:recipient ?awardee .
    ?geraldGraham dbo:award ?award .
    ?geraldGraham rdfs:label ""Gerald Graham""@en .
    OPTIONAL { ?awardee dbo:restingPlace ?restingPlace }
  }

  UNION

  # Resting place of Simon Cadell
  {
    ?simonCadell rdfs:label ""Simon Cadell""@en .
    OPTIONAL { ?simonCadell dbo:restingPlace ?restingPlace }
  }
}
```",7,7,8,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
701,47,test,Give me the parent of the child of the child of Seti I and parent of the child of Nefertari.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?commonParent WHERE {
  # Seti I's family tree
  ?setiI dbo:child ?child1 .
  ?child1 dbo:child ?grandChild1 .
  ?grandChild1 dbo:parent ?commonParent .

  # Nefertari's family tree
  ?nefertari dbo:child ?child2 .
  ?child2 dbo:parent ?commonParent .

  # Bind Seti I and Nefertari to their respective DBpedia resources
  VALUES (?setiI ?nefertari) {
    (dbo:Seti_I dbo:Nefertari)
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
161,54,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?francoCommander ?biscayForce ?prietoPredecessor ?predecessorForce WHERE {
  # Francisco Franco's involvement in the Biscay Campaign
  ?campaign dbo:commander ?francoCommander .
  ?campaign rdfs:label ""Biscay Campaign""@en .
  
  OPTIONAL { 
    ?campaign dbo:militaryConflict ?biscayForce .
    FILTER EXISTS { ?biscayForce a dbo:SocietalEvent } .
    FILTER EXISTS { ?biscayForce a dbo:MilitaryConflict } .
  }
  
  # Francisco Franco's military force
  ?francoForce dbo:commander ""Francisco Franco"" .
  OPTIONAL {
    ?francoForce dbo:militaryConflict ?force .
    FILTER EXISTS { ?force a dbo:SocietalEvent } .
    FILTER EXISTS { ?force a dbo:MilitaryConflict } .
  }
  
  # Indalecio Prieto's predecessor
  ?prietoPredecessor dbo:successor ""Indalecio Prieto"" .
  
  OPTIONAL {
    ?predecessorForce dbo:militaryConflict ?predecessorMilitary .
    FILTER EXISTS { ?predecessorMilitary a dbo:SocietalEvent } .
    FILTER EXISTS { ?predecessorMilitary a dbo:MilitaryConflict } .
  }
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
701,46,test,Give me the parent of the child of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Find a child of Ramesses II
  ?child dbo:childOf ?ramessesII .
  ?ramessesII rdfs:label ""Ramesses II""@en .

  # Step 2: Find the parent of that child (should be Ramesses II or another relevant figure)
  OPTIONAL { ?child dbo:parent ?parent1 . }

  # Step 3: Identify Amun-her-khepeshef's spouse
  ?spouse dbo:spouseOf ?amunHerKhepeshef .
  ?amunHerKhepeshef rdfs:label ""Amun-her-khepeshef""@en .

  # Step 4: Find a child of that spouse
  OPTIONAL { ?child2 dbo:childOf ?spouse . }

  # Step 5: Determine the parent of that child
  OPTIONAL { ?child2 dbo:parent ?parent2 . }

  FILTER (?parent1 = ?parent2)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
232,52,test,"Give me the native of London and child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?nativeOfLondon WHERE {
  ?jonPertwee rdfs:label ""Jon Pertwee""@en .
  ?jonPertwee dbo:birthName ?birthName .
  
  ?seanPertwee rdfs:label ""Sean Pertwee""@en .
  ?seanPertwee dbo:claimToFame ?fame .
  ?fame rdf:type/rdfs:subClassOf* (dbo:Film|dbo:MilitaryConflict) .

  ?child dbo:parent ?jonPertwee ;
         dbo:nativePlace ?london ;
         rdfs:label ?nativeOfLondon .
  
  FILTER(?london = dbpedia:London)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,37,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?artist ?work WHERE {
  ?producer rdfs:label ""Chris Taylor (music producer)""@en .
  ?producer dbo:musicArtist ?artist .
  ?producer dbo:producer ?work .
  ?work rdf:type dbo:Songs .
  ?work dbo:genre ?genre .
  FILTER EXISTS { ?artist dbo:profession dbo:Rapper } .
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
778,17,test,"Give me the entity in United States and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?software ?author WHERE {
  ?person rdfs:label ""Bill Joy""@en .
  ?person dbo:creator ?work .
  ?work rdfs:label ?workLabel .
  
  OPTIONAL { 
    ?work dbo:country ?country .
    FILTER (CONTAINS(LCASE(?country), ""united states""))
  }
  
  OPTIONAL {
    ?work a dbo:Software .
    BIND(?work AS ?software)
  }

  ?software dbo:creator ?author .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,24,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?party WHERE {
  ?person rdfs:label ""Arnulfo Arias Madrid""@en .
  ?person rdf:type dbo:Politician .
  ?person dbo:country ?country .
  
  ?place rdfs:label ""El Valle de Antón""@en .
  ?place dbo:country ?elValleCountry .

  FILTER (?country = ?elValleCountry)
  ?person dbo:party ?party
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
378,59,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person foaf:name ?birthName .
  ?person dbo:commanderOf ?war .
  ?war a dbo:MilitaryConflict ;
       dbo:reference ?peninsularWarReference .
  ?peninsularWarReference rdfs:label ""Peninsular War""@en .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
232,71,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/property/residence> ?v8 . ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v4 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?jonPertwee rdfs:label ""Jon Pertwee""@en .
  ?jonPertwee dbo:birthName ?birthName .
  
  ?jonPertwee dbo:child ?child .

  ?actor dbo:claimToFame ?fame .
  ?film rdf:type dbo:Film ;
        rdfs:label ?filmLabel .
  ?conflict rdf:type dbo:MilitaryConflict ;
            rdfs:label ?conflictLabel .
  
  FILTER (?fame = ?film || ?fame = ?conflict) .

  ?actor dbo:residence ?settlement .
  ?settlement rdf:type dbo:Settlement ;
              dbo:country dbc:United_Kingdom .
  
  ?politician dbo:nativePlace ?settlement ;
              rdf:type dbo:Politician ;
              dbo:birthPlace dbc:France .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
356,19,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in the successor of 2014 Sacramento Republic FC season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/manager> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?team WHERE {
  # Step 1: Identify Gary Williams' birthplace
  ?gW dbo:birthPlace ?birthPlace .
  FILTER (CONTAINS(LCASE(?gW), ""gary williams"") && CONTAINS(LCASE(?gW), ""footballer"") && CONTAINS(LCASE(?gW), ""1960""))
  
  # Step 2: Ensure the birthplace is an English settlement
  ?birthPlace dbo:country dbc:England .
  ?birthPlace rdfs:label ?settlementLabel .
  FILTER (LANG(?settlementLabel) = 'en')

  # Step 3: Identify a soccer player and manager from this place
  ?person dbo:nationality dbc:England ;
          dbo:soccerPlayer true ;
          dbo:soccerManager true .

  # Step 4: Find the successor of Sacramento Republic FC in 2014
  ?sacramento dbo:successor ?successor .
  FILTER (CONTAINS(LCASE(?sacramento), ""sacramento republic fc"") && CONTAINS(LCASE(?sacramento), ""2014""))

  # Step 5: Determine the current team of this player/manager
  ?person dbo:team ?team .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
528,53,test,"Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?camperoForce ?barbosaWar ?chileEvent WHERE {
  # Find Narciso Campero Leyes and his military force
  ?person rdfs:label ""Narciso Campero Leyes""@en .
  OPTIONAL { ?person dbo:militaryRank ?rank . }
  OPTIONAL { ?person dbo:memberOf ?force . BIND(?force AS ?camperoForce) }

  # Find Orozimbo Barbosa and his war
  ?barbosa rdfs:label ""Orozimbo Barbosa""@en .
  ?barbosa dbo:militaryConflict ?conflict .
  BIND(?conflict AS ?barbosaWar)

  # Identify societal events in Chile that are wars
  ?event dbp:country ""Chile"" ;
         a dbo:MilitaryConflict .

  FILTER EXISTS { ?event rdfs:label ?chileEvent }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
9,38,test,Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?person dbo:award ?royalMedal .
  ?royalMedal rdfs:label ""Royal Medal""@en .
  
  OPTIONAL { 
    ?person rdfs:label ?nickname .
    FILTER(CONTAINS(LCASE(?nickname), ""queen's university belfast""))
  }
  
  ?person dbo:almaMater ?almaMater .
}
```",4,4,5,2,2,3,3,71,1,126,0,0.007874015748031496,1.0,0.015625
487,19,test,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott and country of the administration of Patricia McCoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?result <http://dbpedia.org/property/governor> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?philAdministration ?patriciaCountry WHERE {
  # Phil Scott's details
  ?person rdfs:label ""Phil Scott""@en .
  ?person dbo:birthName ""Phil Scott"" .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:administration ?philAdministration .

  # Patricia McCoy's details
  ?adminPerson rdfs:label ""Patricia McCoy""@en .
  ?adminPerson dbo:administration ?patriciaAdmin .
  ?patriciaAdmin dbo:country ?patriciaCountry .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
404,56,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfErnest ?spouseOfVictoriaLouise ?childOfFather WHERE {
  # Find the parent of Prince Ernest Augustus of Hanover
  ?ernest a dbo:Person ;
          rdfs:label ""Prince Ernest Augustus of Hanover""@en .
  ?ernest dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1914)
  
  OPTIONAL {
    ?parentOfErnest dbo:child ?ernest .
    BIND(?parentOfErnest AS ?parentOfErnestResult)
  }
  
  # Find the spouse of Princess Victoria Louise of Prussia
  ?victoriaLouise a dbo:Person ;
                  rdfs:label ""Princess Victoria Louise of Prussia""@en .
  OPTIONAL {
    ?spouseOfVictoriaLouise dbo:spouse ?victoriaLouise .
    BIND(?spouseOfVictoriaLouise AS ?spouseOfVictoriaLouiseResult)
  }
  
  # Find the child of the father of the spouse of Princess Victoria Louise of Prussia
  OPTIONAL {
    ?fatherOfSpouse dbo:child ?spouseOfVictoriaLouiseResult .
    ?childOfFather dbo:parent ?fatherOfSpouse .
    BIND(?childOfFather AS ?childOfFatherResult)
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,20,test,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?location WHERE {
  ?battle rdfs:label ""Battle of Marengo""@en .
  ?battle dbo:location ?location .
}

UNION

SELECT ?administration WHERE {
  ?party rdfs:label ?partyLabel .
  FILTER(CONTAINS(LCASE(?partyLabel), ""ruling party sicily""))
  ?party dbo:headquarters ?administration .
}

UNION

SELECT ?deathPlace WHERE {
  ?person rdfs:label ""Laura Mancinelli""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,27,test,Give me the force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?force WHERE {
  ?person rdfs:label ""Narciso Campero""@en .
  OPTIONAL { ?person dbo:militaryForce ?force . }
  OPTIONAL { ?person dbo:politicalAffiliation ?force . }
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
328,58,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?awardee WHERE {
  ?award dbo:awardee ?awardee .
  FILTER (str(?award) = ""Order_of_Suvorov"") .

  ?force dbo:commander ?awardee .
  ?szalasi foaf:name ""Ferenc Szálasi"" .
  ?force dbo:leader ?szalasi .

  ?office dbo:leader ?gustavJonson ;
          a dbo:GovernmentAgency .
  ?gustavJonson foaf:name ""Gustav Jonson"" ;
                a dbo:OfficeHolder, dbo:Politician .

  ?awardee dbo:leaderOf ?office .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,30,test,"Give me the spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse ?child ?parent WHERE {
  # Find the spouse of Princess Victoria Louise of Prussia
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?spouse .

  # Find the father of Ernest Augustus, Duke of Brunswick and one of his children
  ?ernestAugustusFather rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?child dbo:parent ?ernestAugustusFather .

  # Find the parent of Prince Ernest Augustus of Hanover born in 1914
  ?prince rdfs:label ""Prince Ernest Augustus of Hanover (born 1914)""@en .
  ?prince dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1914)
  ?prince dbo:parent ?parent .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
54,48,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?childOfThinkhaya ?predecessor ?officeHolderRoyalty WHERE {
  # Thinkhaya of Pagan and his child
  ?thinkhaya dbo:child ?childOfThinkhaya .
  FILTER (STRSTARTS(STR(?thinkhaya), ""http://dbpedia.org/resource/Thihathu_of_Pagan""))

  # Predecessor of the child of Thinkhaya
  ?predecessor dbo:successor ?childOfThinkhaya .

  # Thihapate of Mohnyin and his child
  ?thihapate dbo:child ?childOfThihapate .
  FILTER (STRSTARTS(STR(?thihapate), ""http://dbpedia.org/resource/Thihapate_of_Mohnyin""))

  # The office holder and royalty condition
  ?predecessor rdf:type dbo:Monarch ;
               dbo:officeHolder ?office .

  # Ensure the predecessor is also a child of Thihapate's child
  ?childOfThihapate dbo:child ?predecessor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
392,24,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?province ?region WHERE {
  # Sebastiano Bianchetti's residence
  ?person rdfs:label ""Sebastiano Bianchetti""@en .
  ?person dbo:residence ?residence .
  FILTER (?residence rdf:type dbo:Settlement) .
  ?residence dbo:country dbr:Italy .
  ?residence dbo:province ?province .

  # Aguilar de Segarra's time zone region
  ?place rdfs:label ""Aguilar de Segarra""@en .
  ?place dbo:timeZone ?timezone .
  ?timezone dbo:region ?region .
  
  OPTIONAL {
    ?event rdf:type dbo:SportsEvent .
    ?event dbo:location ?timezone .
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,23,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?event rdf:type dbo:Event ;
         dbo:deathPlace ?place ;
         dbo:profession ?profession .
  
  ?place rdfs:label ""House of Sombrerete""@en .
  ?profession rdfs:label ""Commander""@en .

  ?event rdf:type dbo:SocietalEvent .
  ?person dbo:associatedWith ?event .
  ?person rdfs:label ""Lisa Gavrić""@en .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,51,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?almaMater WHERE {
  ?person dbo:awardReceived ?royalMedal .
  ?person rdfs:label ?nickname .
  FILTER (CONTAINS(LCASE(?nickname), ""the nickname"")) # Replace with actual nickname if known
  ?person dbo:almaMater ?almaMater .
  
  ?almaMater rdf:type dbo:EducationalOrganization ;
             dbo:location ?location .
  ?location rdfs:label ""Northern Ireland""@en .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
617,58,test,Give me the child of Antiochus III the Great and spouse of the child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child ?spouse WHERE {
  # Step 1: Identify Antiochus III the Great
  ?antiochus rdfs:label ""Antiochus III the Great""@en .
  
  # Step 2: Find his child
  ?antiochus dbo:child ?child .

  # Step 3: Identify spouse of the child
  ?child dbo:spouse ?spouse .

  OPTIONAL {
    # Step 4: Identify commander in Battle of Panium and their parent
    ?battle rdfs:label ""Battle of Panium""@en .
    ?battle dbo:commander ?commander .
    
    ?commander dbo:parent ?parent .
    
    FILTER (?child = ?parent)
  }
}
```",6,6,7,3,3,3,3,71,2,4,0,0.3333333333333333,1.0,0.5
767,65,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?settlement WHERE {
  ?greenArrow rdfs:label ""Green Arrow""@en .
  ?nash rdfs:label ""George Kilbon Nash""@en .
  
  ?adminEntity dbo:location ?location .
  ?location a dbo:Settlement .

  OPTIONAL { ?greenArrow dbo:almaMater ?university . }
  OPTIONAL { ?nash dbo:almaMater ?university . }

  FILTER(?university = ?university)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
182,22,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?authorWar ?gotabhayaWorkWar WHERE {
  # Find the author linked to the 2019 Sri Lanka Easter bombings
  ?event rdfs:label ""2019 Sri Lanka Easter bombings""@en .
  ?event dbo:associatedWith ?person .
  
  OPTIONAL {
    ?person dbo:occupation ?occupation .
    FILTER(?occupation = ""Author"" || ?occupation = ""Writer"")
    # Find the war associated with this author
    ?authorWar dbo:relatedTo ?person .
  }
  
  # Find works related to Gotabhaya Rajapaksa
  ?gotabhaya dbo:work ?work .
  OPTIONAL {
    # Find the war associated with this work
    ?gotabhayaWorkWar dbo:relatedTo ?work .
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,46,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander1 ?commander2 WHERE {
  # Part 1: Commander of the regiment during a war
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  ?war dbo:militaryConflict true .
  ?regiment dbo:commander ?commander1 ;
            dbo:participatedIn ?war .

  # Part 2: Commander who was also an office holder in Kingdom of Ireland
  ?officeHolder dbo:country <http://dbpedia.org/resource/Kingdom_of_Ireland> ;
                dbo:officeHolder ?commander2 .
  OPTIONAL { ?commander2 dbo:commander ?regiment }
}
```",5,8,6,3,2,3,3,71,0,0,71,0,0.0,0
485,20,test,"Give me the entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Writer ;
          dbo:poet true ;
          dbo:award ?award .
  
  ?award rdfs:label ""Eric Gregory Award""@en .

  ?person dbo:birthPlace ?birthPlace .
  
  ?birthPlace rdfs:label ?placeLabel .
  
  FILTER (CONTAINS(LCASE(?placeLabel), ""nottinghamshire"") && 
          EXISTS { ?birthPlace dbo:country ?country . 
                   ?country rdfs:label ""United Kingdom""@en } )
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,68,test,"Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war ?force ?birthPlace WHERE {
  # Find wars involving Narciso Campero Leyes
  ?person rdfs:label ""Narciso Campero Leyes""@en .
  ?person dbo:militaryForce ?force .
  
  OPTIONAL { 
    ?person dbo:birthPlace ?birthPlace .
  }
  
  # Find wars in Chile that are societal events
  ?war dbo:location ?chile ;
       dbo:type dbr:Societal_event ;
       dbo:participatedIn ?person .

  FILTER (lang(?chile) = 'en' && contains(str(?chile), ""Chile""))
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
547,34,test,Give me the resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alanCunninghamRestingPlace ?greatGrandchildRestingPlace WHERE {
  # Resting place of Alan Cunningham
  ?alanCunningham rdfs:label ""Alan Cunningham""@en .
  OPTIONAL { 
    ?alanCunningham dbo:finalBurial ?alanCunninghamRestingPlace .
  }

  # Resting place of the great-grandchild of William Haliburton
  ?williamHaliburton rdfs:label ""William Haliburton""@en .
  OPTIONAL {
    ?williamHaliburton dbo:child ?child1 .
    OPTIONAL {
      ?child1 dbo:child ?grandChild .
      OPTIONAL {
        ?grandChild dbo:child ?greatGrandchild .
        OPTIONAL {
          ?greatGrandchild dbo:finalBurial ?greatGrandchildRestingPlace .
        }
      }
    }
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,58,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash and entity in Baden-Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?alterEgo WHERE {
  ?person rdfs:label ""Matthew Burland""@en .
  ?person dbo:alterEgo ?alterEgo .

  OPTIONAL { 
    ?nash rdfs:label ""George K. Nash""@en .
    ?nash dbo:almaMater ?institution .
    
    ?institution dbo:location ?location .
    ?location rdfs:label ?stateLabel .
    FILTER (CONTAINS(LCASE(?stateLabel), ""baden-württemberg""))
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,20,test,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?region ?sport WHERE {
  # Aguilar de Segarra
  { 
    ?place1 rdfs:label ""Aguilar de Segarra""@en .
    ?place1 dbo:timeZone ?tz1 .
    ?tz1 dbo:region ?region .
    OPTIONAL { ?place1 dbo:sport ?sport . }
  }

  # Entity in Italy (assuming a generic entity, e.g., Rome)
  UNION
  {
    ?place2 rdfs:label ""Rome""@en .
    ?place2 dbo:timeZone ?tz2 .
    ?tz2 dbo:region ?region .
    OPTIONAL { ?place2 dbo:sport ?sport . }
  }

  # Province of Schio
  UNION
  {
    ?place3 rdfs:label ""Province of Schio""@en .
    ?place3 dbo:timeZone ?tz3 .
    ?tz3 dbo:region ?region .
    OPTIONAL { ?place3 dbo:sport ?sport . }
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
547,55,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?restingPlace1 ?restingPlace2 ?restingPlace3 WHERE {
  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?person dbo:awardedBy <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
  OPTIONAL { ?person dbo:finalRestingPlace ?restingPlace1 . }

  # Resting place of the child of James Burton (property developer)
  ?james rdfs:label ""James Burton""@en .
  ?james rdf:type <http://dbpedia.org/ontology/PropertyDeveloper> .
  ?child dbo:childOf ?james .
  OPTIONAL { ?child dbo:finalRestingPlace ?restingPlace2 . }

  # Resting place of the actor of ""Enemy at the Door""
  ?film rdfs:label ""Enemy at the Door""@en .
  ?actor dbo:actorIn ?film .
  OPTIONAL { ?actor dbo:finalRestingPlace ?restingPlace3 . }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
232,48,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""Jon Pertwee""@en .
  ?person dbo:birthName ?birthName .
  ?person dbo:child ?child .

  ?sylvie rdfs:label ""Sylvie Bermann""@en .
  ?sylvie dbo:residence ?residence .
  
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  ?child dbo:birthPlace ?residence
}
```",5,7,6,3,2,3,3,71,1,0,0,1.0,1.0,1.0
488,39,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?administration ?deathPlace WHERE {
  # Find Tokugawa Masako's spouse
  ?masako dbo:spouse ?spouse .
  FILTER (str(?masako) = ""Tokugawa_Masako"") .

  # Check if the spouse is royalty and find their father
  OPTIONAL {
    ?spouse rdf:type dbo:Monarch .
    ?spouse dbo:father ?father .
    
    # Find the administration of the father if he has one
    OPTIONAL {
      ?father dbo:administrativePost ?administration .
    }
  }

  # Find Tokugawa Ieyasu's death place
  ?ieyasu dbo:deathPlace ?deathPlace .
  FILTER (str(?ieyasu) = ""Tokugawa_Ieyasu"") .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
9,71,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v7 <http://dbpedia.org/property/nickname> ?v8 . ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v8 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?nickname WHERE {
  ?institution rdf:type dbo:EducationalOrganization ;
               dbo:location ?location .
  ?location rdfs:label ""Northern Ireland""@en .

  OPTIONAL { 
    ?mayor dbo:almaMater ?institution ;
           dbo:position ?mayorPosition .
    ?mayorPosition rdfs:label ""Mayor of Belfast""@en .
  }

  OPTIONAL {
    ?awardee dbo:almaMater ?institution ;
             dbo:award ?royalMedals .
    ?royalMedals rdfs:label ""Royal Medal""@en .
  }
  
  ?institution rdfs:label ?nickname .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
427,49,test,"Give me the reference to the name of Italian People's Party (1994) and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?italianPeopleParty ?prodiBirthName ?prodiParty WHERE {
  # Find the Italian People's Party (1994)
  ?italianPeopleParty rdfs:label ""Italian People's Party""@en .
  
  # Find Romano Prodi's birth name and party affiliation
  ?prodi dbo:birthName ?prodiBirthName ;
         dbo:partyAffiliation ?prodiParty .

  FILTER regex(str(?italianPeopleParty), ""1994"", ""i"")
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
747,63,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?band1 ?band2 ?band3 WHERE {
  # Tracey Elizabeth McSween's band
  ?person1 rdfs:label ""Tracey Elizabeth McSween""@en .
  OPTIONAL { ?person1 dbo:band ?band1 . }

  # Writer of Apollo (Hardwell song)
  ?song dbo:title ""Apollo"" ;
        dbo:lyricsBy ?writer .
  OPTIONAL { ?writer dbo:band ?band2 . }

  # Athlete and soccer player born in Zolotonosha
  ?athlete dbo:sport dbr:Soccer ;
           dbo:birthPlace dbr:Zolotonosha ;
           dbo:birthDate ?birthDate .

  # Person with the same birth date as the athlete
  ?person3 dbo:birthDate ?birthDate .
  OPTIONAL { ?person3 dbo:band ?band3 . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
328,62,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person rdfs:label ?name .
  
  # Commander in the force at Budapest
  ?command1 dbo:militaryCommand ?budaforce .
  ?budaforce dbo:location ""Budapest"" .

  # Awardee of the award for Volcano and Ryukyu Islands campaign
  ?award1 dbo:awardee ?person .
  ?award1 dbo:campaign ""Volcano Islands Campaign""@en ;
          dbo:campaign ""Ryukyu Islands Campaign""@en .

  # Leader of People's Commissariat of Defense of the Soviet Union
  ?leadership dbo:headOf <http://dbpedia.org/resource/People%27s_Commissariat_of_Defence> .
  ?leadership dbo:leader ?person .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,37,test,Give me the war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?person rdfs:label ""Narciso Campero""@en .
  ?war dbo:commander ?person .
}
```",4,4,5,3,2,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
378,71,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/commander> ?v8 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v7 . ?v8 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?gahn a dbo:Person ;
        dbo:birthName ""Carl Pontus Gahn"" ;
        dbo:militaryConflict ?war .
  
  ?trigge a dbo:Person ;
          dbo:commander ?peninsularWar ;
          rdfs:label ""Thomas Trigge""@en .

  FILTER(?peninsularWar = <http://dbpedia.org/resource/Peninsular_War>)

  OPTIONAL { ?war rdfs:label ?warLabel . }
}
```",9,13,10,3,3,3,3,71,0,0,2,0,0.0,0
528,38,test,Give me the war of the commander in Battle of La Rinconada de Ate and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?force WHERE {
  # Part 1: Find the war associated with the Battle of La Rinconada de Ate
  ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
  ?battle dbo:partOf ?war .

  # Part 2: Find the military force or rank of Narciso Campero Leyes
  ?person rdfs:label ""Narciso Campero Leyes""@en .
  OPTIONAL { ?person dbo:militaryRank ?force . }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
404,45,test,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfErnest ?childOfFather WHERE {
  # Step 1: Identify Prince Ernest Augustus of Hanover (born 1914)
  ?ernest a dbo:Person ;
          rdfs:label ""Prince Ernest Augustus of Hanover""@en ;
          dbo:birthYear ""1914""^^xsd:gYear .

  # Step 2: Find his parent
  ?ernest dbo:parent ?parentOfErnest .

  # Step 3: Identify Princess Victoria Louise of Prussia's spouse
  ?princess a dbo:Person ;
            rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?spouseOfVictoria .

  # Step 4: Find the father of her spouse
  ?spouseOfVictoria dbo:parent ?fatherOfSpouse .

  # Step 5: Determine the child of this father who is also a spouse of Princess Victoria Louise of Prussia
  ?childOfFather dbo:parent ?fatherOfSpouse ;
                 dbo:spouse ?princess .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
659,36,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in German campaign of 1813.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?militaryForce WHERE {
  ?schimmelpenninck rdf:type dbo:Person ;
                    rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  
  ?campaign rdf:type dbo:MilitaryConflict ;
            rdfs:label ""German campaign of 1813""@en .

  ?campaign dbo:commander ?schimmelpenninck .
  ?campaign dbo:militaryForce ?militaryForce .
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
488,22,test,Give me the administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration ?birthPlace WHERE {
  # Part 1: Administration of the father of Emperor Go-Mizunoo
  ?emperor rdfs:label ""Go-Mizunoo""@en .
  ?emperor dbo:father ?father .
  OPTIONAL { 
    ?father dbo:positionHeld ?administration .
  }

  # Part 2: Birth place of Enomoto Takeaki
  ?person rdfs:label ""Enomoto Takeaki""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,36,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?institution ?nickname WHERE {
  ?person foaf:name ""John Alderdice""@en .
  ?person dbo:almaMater ?institution .
  ?institution dbo:location ?location .
  ?location rdfs:label ?placeLabel .
  FILTER (CONTAINS(LCASE(?placeLabel), ""northern ireland""))
  
  OPTIONAL {
    ?institution rdfs:label ?nickname .
    FILTER (LANG(?nickname) = 'en')
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,61,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?decedent WHERE {
  ?district dbo:capital ?capital .
  FILTER(STR(?district) = ""Khemis Miliana District"") .
  
  ?capital rdf:type dbo:Settlement .

  ?person dbo:deathPlace ?capital ;
          rdfs:label ?decedentLabel .
  
  OPTIONAL { 
    ?war rdf:type dbo:MilitaryConflict, dbo:Event ;
         dbo:commander ?person .
  }
  
  ?verdunEvent dbo:commander ?verdunCommander .
  FILTER(STR(?verdunEvent) = ""Battle of Verdun"") .

  FILTER(?person = ?verdunCommander)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
54,26,test,Give me the parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?grandGrandParent WHERE {
  ?person rdfs:label ""Thado Minsaw""@en .
  ?person dbo:parent ?parent1 .
  ?parent1 dbo:child ?child .
  ?child dbo:parent ?grandGrandParent .
}
```",3,3,4,3,1,3,3,71,0,2,2,0.0,0.0,0
959,71,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/manager> ?v7 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?university WHERE {
  ?person dbo:birthYear ""1958""^^xsd:gYear ;
          dbo:nationality ?nationality .
  
  ?nationality rdfs:label ""Japan""@en .

  ?person dbo:almaMater ?university ;
          rdf:type dbo:Politician ;
          dbo:officeHolder ?office .

  ?office dbo:electionDate ?electionDate ;
          dbo:electedAs ?position .

  FILTER (?electionDate >= ""2010-01-01""^^xsd:date && ?electionDate <= ""2010-12-31""^^xsd:date) .
  
  ?person dbo:managerOfTeam ?teamManager .

  ?teamManager dbo:managedTeam ?kashimaAntlers ;
               dbo:season ?season .

  FILTER (?season = ""1998""^^xsd:gYear) .

  ?university rdf:type dbo:EducationalOrganization, dbo:University ;
              rdfs:label ?uniLabel .
  
  FILTER (CONTAINS(LCASE(?uniLabel), ""japan""))
}
```",9,16,10,3,3,3,3,71,0,0,3,0,0.0,0
959,68,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  # Takashi Sekizuka's details
  dbr:Takashi_Sekizuka dbo:birthYear ""1958""^^xsd:gYear ;
                       dbo:nationality dbr:Japan .

  # Team managed by Takashi Sekizuka
  ?team dbo:manager dbr:Takashi_Sekizuka ;
        a (dbo:Organization|dbo:University) ;
        dbo:country dbr:Japan .

  # Manager of the team who is also a member of its alma mater
  ?teamManager dbo:position ""manager""@en ;
               dbo:almaMater ?university .
  
  ?university a dbo:University ;
              dbo:country dbr:Japan .

  # The manager we are looking for
  ?manager dbo:position ""manager""@en ;
           dbo:almaMater ?university .
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
232,38,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  # Sean Pertwee's film and military conflict
  ?pertwee dbo:film ?film .
  ?pertwee dbo:militaryConflict ?conflict .

  # Sylvie Bermann's native settlement that is British
  ?bermann dbo:nativePlace ?settlement .
  ?settlement dbo:country dbc:United_Kingdom .

  # Find the actor involved in both contexts
  ?film dbo:actor ?actor .
  ?conflict dbo:actor ?actor .

  # Ensure Sean Pertwee and Sylvie Bermann are correctly identified
  ?pertwee rdfs:label ""Sean Pertwee""@en .
  ?bermann rdfs:label ""Sylvie Bermann""@en .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
378,21,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?claimToFame WHERE {
  # Find the war associated with Carl Pontus Gahn
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:birthName ""Carl Pontus Gahn"" .
  OPTIONAL { 
    ?person dbo:participatedInWar ?war .
  }

  # Find the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  ?duke rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  OPTIONAL {
    ?duke dbo:claimToFame ?claimToFame .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
54,65,test,"Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?person WHERE {
  # Soe Min Wimala Dewi's father and his child
  ?soeMinWimalaDewi dbo:father ?father .
  ?father dbo:child ?child1 .

  # Thado Minsaw of Prome's parent and their child's parent
  ?thadoMinsawOfProme dbo:parent ?parent2 .
  ?parent2 dbo:child ?child2 .
  ?child2 dbo:parent ?person .

  # Thihapate of Mohnyin's child and predecessor
  ?thihapateOfMohnyin dbo:child ?child3 .
  ?child3 dbo:predecessor ?person .

  # Person is an office holder and royalty
  ?person rdf:type dbo:OfficeHolder ;
          rdf:type dbo:Royalty .
}
```",7,9,8,3,3,3,3,71,0,522,1,0.0,0.0,0
645,18,test,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?country WHERE {
  # Find the commander in the Battle of Diamond Rock and their residence country
  ?battle dbo:commander ?commander .
  FILTER(STRSTARTS(LCASE(?battle), ""battle_of_diamond_rock""))
  ?commander dbo:residence ?residenceCountry .
  ?residenceCountry a dbo:Country .

  # Find the child of Richard Pankhurst and their alma mater
  ?pankhurst rdfs:label ""Richard Pankhurst""@en .
  ?child dbo:parent ?pankhurst .
  ?child dbo:almaMater ?university .
  ?university a dbo:Country .

  # Ensure the residence country of the commander is the same as the alma mater country
  FILTER(?residenceCountry = ?university)
  BIND(?residenceCountry AS ?country)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
767,64,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?settlement WHERE {
  # Find the writer of ""Where It's At"" album by Dustin Lynch
  ?album rdfs:label ""Where It's At""@en .
  ?album dbo:artist dbr:Dustin_Lynch ;
         dbo:writer ?writer .

  # Find Carl L. Nippert's alma mater
  ?nippert foaf:name ""Carl L. Nippert"" ;
           dbo:almaMater ?almaMater .

  # Identify Matthew Burland's alter ego (fictional character)
  ?burland foaf:name ""Matthew Burland"" ;
           dbo:fictionalCharacter ?alterEgo .

  # Find a settlement in the administration of both the writer and alma mater
  ?settlement dbo:administrativeUnit ?writer ;
              dbo:administrativeUnit ?almaMater ;
              rdf:type dbo:Settlement .

  # Ensure the settlement is related to the fictional character's persona
  OPTIONAL { ?alterEgo dbo:settlement ?settlement }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
528,55,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query 1: Find the military force of Narciso Campero Leyes
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?person rdfs:label ""Narciso Campero Leyes""@en .
  ?person dbo:militaryService ?service .
  ?service dbo:militaryUnit ?militaryForce .
}

# Query 2: Find the war of the Battle of Pisagua
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?battle rdfs:label ""Battle of Pisagua""@en .
  ?battle dbo:participatedInWar ?war .
}

# Query 3: Find the war and commander in Battle of La Rinconada de Ate
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?commander WHERE {
  ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
  ?battle dbo:participatedInWar ?war .
  OPTIONAL { ?battle dbo:commander ?commander . }
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
427,67,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?prodiParty ?fatherParty WHERE {
  # Part for Romano Prodi's political party at birth
  ?prodi rdfs:label ""Romano Prodi""@en .
  ?prodi dbo:birthName ?birthName .
  ?prodi dbo:party ?prodiParty .
  ?prodi dbo:officeHolder true .
  ?prodi dbo:politician true .

  # Part for the father's political party of an MIT alumnus
  ?alumnus dbo:almaMater <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?father dbo:party ?fatherParty .
  ?father rdfs:label ""Partito Popolare Italiano""@en .
  ?alumnus dbo:father ?father .

}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
177,8,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in South Korea.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/location> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?headquarters WHERE {
  ?person rdfs:label ""Joo Don-sik""@en .
  ?organization dbo:member ?person .
  ?organization dbo:headquarters ?headquarters .
  FILTER EXISTS { 
    ?headquarters dbo:country <http://dbpedia.org/resource/South_Korea> 
  }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
328,54,test,"Give me the commander in the force of the person decedent at Budapest and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:leader dbr:People's_Commissariat_of_Defense_of_the_Soviet_Union .
  ?person dbo:commander dbr:Budapest_Offensive_(1945) .
  ?award dbo:recipient ?person ;
         dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,56,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardeeRestingPlace ?simonCadellRestingPlace ?childRestingPlace WHERE {
  # Gerald Graham's awardee
  ?geraldGraham dbo:award ?award .
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:deathPlace ?awardeeRestingPlace . }

  # Simon Cadell's resting place
  ?simonCadell rdfs:label ""Simon Cadell""@en .
  OPTIONAL { ?simonCadell dbo:deathPlace ?simonCadellRestingPlace . }

  # Child of James Burton (property developer)
  ?jamesBurton rdfs:label ""James Burton (property developer)""@en .
  ?child dbo:parent ?jamesBurton ;
         dbo:deathPlace ?childRestingPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
783,16,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of Ofori Amponsah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonBandMember WHERE {
  # Find Priscilla Opoku-Kwarteng's band members
  ?priscilla a dbo:MusicalArtist ;
             rdfs:label ""Priscilla Opoku-Kwarteng""@en .
  
  OPTIONAL { 
    ?priscilla dbo:bandMember ?priscillaBandMember .
  }
  
  # Find Ofori Amponsah's band members
  ?ofori a dbo:MusicalArtist ;
         rdfs:label ""Ofori Amponsah""@en .

  OPTIONAL {
    ?ofori dbo:bandMember ?oforiBandMember .
  }

  # Determine common band members
  VALUES (?commonBandMember) { 
    ?priscillaBandMember 
    ?oforiBandMember 
  }
  
  FILTER(?priscillaBandMember = ?oforiBandMember)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
827,19,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild ?father WHERE {
  # Step 1: Find children of Grand Duchess Maria Pavlovna who are royalty
  ?mariaPavlovna dbo:spouse ?husband .
  FILTER (str(?mariaPavlovna) = ""Maria_Pavlovna_of_Russia_(1786-1859)""^^xsd:string)
  
  # Step 2: Find grandchildren of Maria Pavlovna who are royalty
  ?child dbo:parent ?mariaPavlovna .
  ?grandchild dbo:parent ?child .
  FILTER EXISTS { ?grandchild a dbo:Monarch } .

  # Step 3: Identify spouse of Princess Pauline of Saxe-Weimar-Eisenach
  ?pauline dbo:spouse ?princeAlfred .
  FILTER (str(?pauline) = ""Pauline_of_Saxe-Weimar-Eisenach""^^xsd:string)
  
  # Step 4: Find children of Prince Alfred who are royalty
  ?childPrinceAlfred dbo:parent ?princeAlfred .
  FILTER EXISTS { ?childPrinceAlfred a dbo:Monarch } .

  # Step 5: Match the grandchild with the father (Prince Alfred)
  BIND(?princeAlfred AS ?father)

  # Final match condition
  FILTER (?grandchild = ?childPrinceAlfred)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
747,46,test,"Give me the band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?athlete WHERE {
  # Find the writer of ""Apollo"" by Hardwell
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ""Apollo""@en .
  
  # Find the band associated with this writer
  OPTIONAL { ?writer dbo:member ?band . }
  
  # Find a person who is an athlete and soccer player born on the same date as a decedent from Zolotonosha
  ?decedent dbo:dateOfBirth ?birthDate .
  ?athlete dbo:dateOfBirth ?birthDate ;
           dbo:nationality dbr:Ukraine ;
           dbo:placeOfBirth dbr:Zolotonosha ;
           dbo:sport dbp:Soccer ;
           a dbo:Athlete .

}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,61,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?spouse WHERE {
  # Find the commander in the Battle of Perire
  ?battle dbo:eventParticipant ?commander .
  ?battle rdfs:label ""Battle of Perire""@en .

  # Find the father of the commander
  ?commander dbo:father ?father .

  # Ensure the spouse is royalty
  ?father dbo:spouse ?spouse .
  ?spouse a dbo:RoyalFamilyMember .

  # Additional condition for generational link (if applicable)
  OPTIONAL {
    ?setiI rdfs:label ""Seti I""@en .
    ?child1 dbo:parent ?setiI .
    ?grandchild dbo:parent ?child1 .
    ?spouse dbo:parent ?grandchild .
  }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
44,9,test,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche and band member of the band of John Pettibone.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member WHERE {
  # Find band members of Queensrÿche
  ?queensMember dbo:bandMember ?queensBand .
  ?queensBand rdfs:label ""Queensrÿche""@en .

  # Find the band associated with John Pettibone
  ?pettiboneBand dbp:member ?pettiboneMember .
  ?pettiboneMember foaf:name ""John Pettibone""@en .

  # Check if there is an overlap in members
  FILTER (?queensMember = ?pettiboneMember)
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
378,48,test,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commanderFame ?gahnFame WHERE {
  # Part 1: Commander in the Great Siege of Gibraltar
  ?event dbo:wikiPageRedirects db:Q123456 . # Assuming Q123456 is the DBpedia ID for the Great Siege of Gibraltar
  ?event dbo:agent ?commander .
  ?commander rdfs:label ?commanderLabel .
  FILTER (LANG(?commanderLabel) = ""en"")
  OPTIONAL {
    ?commander dbo:notableFor ?commanderFame .
  }

  # Part 2: Carl Pontus Gahn's birth name and claim to fame
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:birthName ?gahnBirthName .
  OPTIONAL {
    ?person dbo:notableFor ?gahnFame .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
996,17,test,Give me the force of Dagobert Sigmund von Wurmser and entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?force ?award ?entity WHERE {
  ?person rdfs:label ""Dagobert Sigmund von Wurmser""@en .
  
  OPTIONAL { 
    ?person dbo:militaryCommand ?force .
  }
  
  OPTIONAL {
    ?person dbo:awardsReceived ?award .
  }

  OPTIONAL {
    ?region rdfs:label ""Palestine (region)""@en .
    ?entity dbo:nativePlace ?region .
    ?person dbo:birthPlace ?entity .
  }
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
9,67,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?nickname WHERE {
  # Find John Alderdice's alma mater
  ?john dbo:almaMater ?almaMater .
  ?john rdfs:label ""John Alderdice""@en .

  OPTIONAL {
    # Find the organization/educational institution in Northern Ireland with a nickname
    ?institution dbo:location ?location ;
                dbo:nickname ?nickname ;
                rdf:type dbo:EducationalInstitution .
    ?location rdfs:label ""Northern Ireland""@en .
    
    # Ensure it is also an alma mater of someone who received Royal Medals
    ?recipient dbo:almaMater ?institution ;
               dbp:award ""Royal Medal""@en .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
838,18,test,"Give me the band member of the band, that is a group, of YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMemberOfYUGrupa ?bandOfBandMember 
WHERE {
  # Step 1: Identify YU Grupa
  ?yugrupa rdfs:label ""YU Grupa""@en .
  
  # Step 2: Find band members of YU Grupa who are bands or groups
  ?member dbo:bandMember ?yugrupa ;
          a dbo:Band ;
          rdfs:label ?bandMemberOfYUGrupaLabel .
  
  BIND (URI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?bandMemberOfYUGrupaLabel), "" "", ""_""))) AS ?bandMemberOfYUGrupa)
  
  # Step 3: Identify Žika Jelić's band
  ?zikaJelic dbo:memberOfBand ?zikaBand ;
            rdfs:label ""Žika Jelić""@en .
  
  # Step 4: Find members of this band who are artists and musical artists
  ?artist dbo:bandMember ?zikaBand ;
          a dbo:Artist, dbo:MusicalArtist ;
          rdfs:label ?artistLabel .
  
  BIND (URI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?artistLabel), "" "", ""_""))) AS ?artist)
  
  # Step 5: Identify bands associated with these artists
  ?bandOfBandMember dbo:member ?artist ;
                   a dbo:Band ;
                   rdfs:label ?bandOfBandMemberLabel .
  
  BIND (URI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?bandOfBandMemberLabel), "" "", ""_""))) AS ?bandOfBandMember)
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
427,18,test,Give me the party of Giulio Andreotti and party of Romano Prodi and reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?andreottiParty ?prodiParty WHERE {
  ?andreotti rdf:type dbo:Person ;
             rdfs:label ""Giulio Andreotti""@en .
  ?andreotti dbo:partyAffiliation ?andreottiParty .

  ?prodi rdf:type dbo:Person ;
         rdfs:label ""Romano Prodi""@en .
  ?prodi dbo:partyAffiliation ?prodiParty .

  OPTIONAL {
    ?pippo rdf:type dbo:PoliticalParty ;
           rdfs:label ""Partito Popolare Italiano""@en .
    FILTER (?andreottiParty = ?pippo || ?prodiParty = ?pippo)
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,49,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?alterEgo ?adminEntity WHERE {
  # Query for Matthew Burland's alter ego
  OPTIONAL {
    ?person rdfs:label ""Matthew Burland""@en .
    ?person dbo:fictionalCharacter ?alterEgo .
  }
  
  # Query for an entity in the administration of Green
  OPTIONAL {
    ?settlement rdfs:label ""Green""@en .
    ?settlement dbo:administrativeUnit ?adminEntity .
  }
}
```",5,7,6,3,2,3,3,71,0,0,7,0,0.0,0
488,47,test,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceOfCommander ?deathPlaceOfGreatGrandfather WHERE {
  # Matsudaira Tadamasa and his father
  ?matsudairaTadamasa rdfs:label ""Matsudaira Tadamasa""@en .
  ?matsudairaTadamasa dbo:child ?father .

  # Father is a politician (office holder)
  ?father dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""politician"") || CONTAINS(LCASE(STR(?occupation)), ""office holder""))

  # Grandfather of Matsudaira Tadamasa
  ?father dbo:child ?grandfather .

  # Grandfather is also a politician (office holder)
  ?grandfather dbo:occupation ?occupation2 .
  FILTER(CONTAINS(LCASE(STR(?occupation2)), ""politician"") || CONTAINS(LCASE(STR(?occupation2)), ""office holder""))

  # Great-grandfather of Matsudaira Tadamasa
  ?grandfather dbo:child ?greatGrandfather .

  # Death place of the great-grandfather
  ?greatGrandfather dbo:deathPlace ?deathPlaceOfGreatGrandfather .

  # Commander in Boshin War and his birthplace
  ?commander rdfs:label ?label .
  FILTER(CONTAINS(LCASE(STR(?label)), ""commander"") && CONTAINS(LCASE(STR(?label)), ""boshin war""))
  ?commander dbo:birthPlace ?birthPlaceOfCommander .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
492,71,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v4 . ?v7 <http://dbpedia.org/ontology/capital> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person WHERE {
  # Find the capital of Khemis Miliana District
  ?district rdfs:label ""Khemis Miliana District""@en .
  ?capital dbo:administrativeCapital ?district ;
           a dbo:Settlement .

  # Person decedent at this capital
  ?decedent dbo:placeOfDeath ?capital ;
            a dbo:Person ;
            rdfs:label ?personLabel .

  # Find the author related to French Algeria and their work
  ?author dbo:nationality dbr:French_Algérie ;
          dbo:work ?work .
  
  # Link person to being a commander in a military conflict, specifically connected to Battle of Verdun
  ?commander dbo:rank ?militaryRank ;
             dbo:participatedInMilitaryConflict ?conflict ;
             rdfs:label ?personLabel .

  ?verdunEvent dbo:name ""Battle of Verdun""@en ;
               dbo:commander ?commander .
  
  # Ensure the person is the same in both contexts
  FILTER(?decedent = ?commander)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
328,43,test,Give me the commander in the force of the person decedent at Budapest and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?person WHERE {
  ?person dbo:commanderInForceOfBudapest ?event .
  ?person dbo:awardeeOfOrderOfSuvorov true .
  ?person dbo:leaderOfPeopleCommissariatDefenseOfTheSovietUnion true .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
378,43,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?claimToFame ?conflict WHERE {
  ?person rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  
  # Claim to fame
  OPTIONAL { 
    ?person dbo:knownFor ?claimToFame .
  }
  
  # Command roles in specific wars
  OPTIONAL {
    ?person dbo:militaryConflict ?conflict .
    FILTER (
      ?conflict rdfs:label ""Peninsular War""@en ||
      EXISTS { ?conflict dbo:participatedIn ?war . ?war rdfs:label ""Napoleonic Wars""@en }
    )
  }
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
365,9,test,"Give me the reference to the real name of The Blasters and band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band ?realName WHERE {
  ?band rdfs:label ""The Blasters""@en .
  ?member dbo:band ?band ;
          a dbo:MusicArtist ;
          foaf:name ?realName .
  OPTIONAL { ?member dbo:role [dbo:roleType dbo:Vocalist] . }
  OPTIONAL { ?member dbo:role [dbo:roleType dbo:Musician] . }
  OPTIONAL { ?member dbo:role [dbo:roleType dbo:SingerSongwriter] . }
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
617,20,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v4 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfFather WHERE {
  # Step 1: Identify Richeza of Poland
  ?richeza rdfs:label ""Richeza of Poland""@en .
  
  # Step 2: Find Richeza's parent who is a royalty
  ?richeza dbo:child ?reference .
  ?reference rdf:type dbo:Monarch .

  # Step 3: Determine Mlada (Abbess)'s parent
  ?mlada rdfs:label ""Mlada (abbess)""@en .
  ?mlada dbo:parent ?parentOfMlada .

  # Step 4: Identify Mlada's child and grandchild who are royalties
  ?parentOfMlada dbo:child ?childOfParent .
  ?childOfParent rdf:type dbo:Monarch .
  
  ?childOfParent dbo:child ?grandChild .
  ?grandChild rdf:type dbo:Monarch .

  # Step 5: Find the father of Richeza's reference
  ?reference dbo:father ?fatherOfReference .

  # Step 6: Determine the parent of that father who is a royalty
  ?fatherOfReference dbo:parent ?parentOfFather .
  ?parentOfFather rdf:type dbo:Monarch .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
392,23,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?province WHERE {
  ?person rdfs:label ""Sebastiano Bianchetti""@en .
  ?person dbo:residence ?residence .
  
  ?residence a dbo:Settlement ;
             dbo:country ?country .
  
  ?country rdfs:label ?countryLabel .
  FILTER (CONTAINS(LCASE(?countryLabel), ""italy"")) .

  OPTIONAL { 
    ?region dbo:country ?country .
    ?region dbo:timeZone ?timezone .
    FILTER(CONTAINS(LCASE(STR(?timezone)), ""central european time""))
  }
  
  ?residence dbo:province ?province .
}
```",4,7,5,2,2,2,3,28,1,0,0,1.0,1.0,1.0
767,33,test,Give me the entity in Baden-Württemberg and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entityInBadenWurttemberg ?almaMater WHERE {
  ?person rdfs:label ""George Kilbon Nash""@en .
  
  OPTIONAL {
    ?relatedEntity dbo:location ?location .
    ?location rdfs:label ""Baden-Württemberg""@en .
    ?person dbo:associatedWith ?relatedEntity .
    BIND(?relatedEntity AS ?entityInBadenWurttemberg)
  }
  
  ?person dbo:almaMater ?almaMater .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
838,19,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  # Identify YU Grupa
  ?yuGrupa rdfs:label ""YU Grupa""@en .
  
  # Find band members of YU Grupa who are artists and musical artists
  ?member dbo:memberOfGroup ?yuGrupa ;
          a dbo:Artist, dbo:MusicalArtist .

  # Identify other bands these members belong to
  ?member dbo:memberOfGroup ?otherBand .

  # Ensure the other band is a group
  ?otherBand a dbo:Band .

  # Find references related to YU Grupa
  ?reference dbo:relatedTo ?yuGrupa ;
             a dbo:Group, dbo:Organization .
  
  # Check if the other band is associated with these references
  ?otherBand dbo:relatedTo ?reference .

  # Return the bands
  BIND(?otherBand AS ?band)
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
492,27,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?district rdfs:label ""Khemis Miliana District""@en .
  ?capital dbo:capital ?district ;
           rdf:type dbo:Settlement .
  ?person dbo:deathPlace ?capital .
}
```",3,4,4,3,1,3,3,71,0,0,122,0,0.0,0
328,34,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:head dbr:People's_Commissariat_of_Defense_of_the_Soviet_Union .
  ?person dbo:award dbr:Commander_in_the_Volcano_and_Ryukyu_Islands_campaign .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
391,58,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?person dbo:nativePlace ?place .
  ?place rdfs:label ""Compton, California""@en .

  ?work dbo:director ?ballhaus .
  ?ballhaus rdfs:label ""Michael Ballhaus""@en .
  ?work dbo:actor ?actor .

  OPTIONAL { 
    ?movie dbo:genre ?tvShowGenre .
    ?tvShowGenre rdfs:label ""Television show""@en .
    ?movie dbo:starring ?actor .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
617,22,test,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?parent WHERE {
  ?antiochus rdfs:label ""Antiochus IV Epiphanes""@en .
  ?antiochus dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,2,2,0.0,0.0,0
142,9,test,Give me the birthplace of the actor of Papa wa Newscaster and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorBirthplace ?entityInJST WHERE {
  # Part 1: Find the birthplace of the actor who played ""Papa wa Newscaster""
  ?actor dbo:characterName ""Papa wa Newscaster""@en .
  ?actor rdfs:label ?actorLabel .
  ?actor dbo:birthPlace ?actorBirthplace .

  UNION

  # Part 2: Find an entity in the region of Japan Standard Time
  ?entity dbo:timeZone ?jst .
  ?entity rdfs:label ?entityLabel .
  FILTER (CONTAINS(LCASE(?jst), ""japan standard time""))
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
915,20,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?resident WHERE {
  # Step 1: Identify Lizzie Spaulding's parent
  ?parent a dbo:FictionalCharacter ;
          a dbo:SoapCharacter ;
          dbo:child ?lizzieSpaulding .
  
  # Step 2: Find the child of this parent
  ?child a dbo:FictionalCharacter ;
         a dbo:SoapCharacter ;
         dbo:parent ?parent .

  # Step 3: Identify the director of Pipe Dreams (1976 film)
  ?film rdfs:label ""Pipe Dreams""@en .
  ?film dbo:director ?director .

  # Step 4: Determine the birthplace of the director
  ?director dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .

  # Step 5: Find the resident of this settlement
  ?resident dbo:residence ?birthPlace .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
328,67,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of the person decedent at Budapest.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?person WHERE {
  ?person dbo:awardee dbr:Order_of_Suvorov .
  ?office dbo:leaderOf ?person ;
          rdf:type dbo:GovernmentAgency .
  ?politician dbo:leaderOf ?office ;
              rdf:type dbo:OfficeHolder, dbo:Politician ;
              dbo:associatedWith dbr:Gustav_Jonson .
  ?militaryCommand dbo:commanderInForce ?person ;
                   dbo:location dbr:Budapest .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
30,8,test,Give me the native of Paris and professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Paris""@en .

  ?edouard dbo:profession ?profession .
  FILTER(STR(?edouard) = ""Édouard Alphonse James de Rothschild"")

  ?person dbo:profession ?sameProfession .
  FILTER(STR(?sameProfession) = STR(?profession))
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
547,57,test,Give me the resting place of James Burton (Egyptologist) and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?personLabel ?deathPlaceLabel WHERE {
  # Resting place of James Burton (Egyptologist)
  { 
    ?person rdfs:label ""James Burton (Egyptologist)""@en .
    OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
    BIND(""James Burton (Egyptologist)"" AS ?personLabel)
  } UNION
  # Resting place of the actor from a show with Emily Richard (""The Archers"")
  {
    ?show rdfs:label ""The Archers""@en .
    ?actor dbo:character ?role .
    ?role dbo:series ?show .
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
    BIND(""Actor of The Archers"" AS ?personLabel)
  } UNION
  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person dbo:honours ""Knight Grand Cross of the Order of St Michael and St George""@en .
    OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
    BIND(""Awardee of Knight Grand Cross of the Order of St Michael and St George"" AS ?personLabel)
  }

  SERVICE <http://dbpedia.org/sparql> {
    VALUES ?lang { en }
    ?deathPlace rdfs:label ?deathPlaceLabel .
    FILTER(LANG(?deathPlaceLabel) = ?lang)
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,71,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v8 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochus rdfs:label ""Antiochus IV Epiphanes""@en .
  
  # Successor who is royalty
  ?successor dbo:successorOf ?antiochus ;
            a dbo:Monarch .

  # Child of the successor
  ?child dbo:childOf ?successor ;
         a dbo:Person .

  # Spouse of this child
  ?spouse dbo:spouse ?child .

  OPTIONAL {
    # Commander in Battle of Panium and their child
    ?commander rdfs:label ""Ptolemy V""@en .
    ?paniumChild dbo:childOf ?commander ;
                 a dbo:Person .

    # Parent of this child (should be the spouse)
    ?parent dbo:parent ?paniumChild .

    FILTER (?spouse = ?parent)
  }

  OPTIONAL {
    # Another royal lineage connection
    ?anotherSuccessor dbo:successorOf ?antiochus ;
                     a dbo:Monarch .
    
    ?anotherChild dbo:childOf ?anotherSuccessor ;
                 a dbo:Person .

    ?royalParent dbo:parent ?anotherChild .
    
    FILTER (?spouse = ?royalParent)
  }
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
747,49,test,Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?shenaBand ?pavloBand WHERE {
  # Find Shèna (Shena Easton) and her band
  ?person rdfs:label ""Shena Easton""@en .
  OPTIONAL { ?person dbo:band ?shenaBand . }

  # Find Pavlo Khudzik's birth date
  ?pavlo dbo:birthDate ?birthDate .

  # Find a person born on the same date as Pavlo Khudzik and their band
  ?otherPerson dbo:birthDate ?sameBirthDate .
  FILTER (?sameBirthDate = ?birthDate)
  OPTIONAL { ?otherPerson dbo:band ?pavloBand . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
115,9,test,Give me the alma mater of the awardee of National Order of Scientific Merit and alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?almaMaterAwardee ?almaMaterAlumnus WHERE {
  # Find the alma mater of an awardee of the National Order of Scientific Merit
  ?person dbo:awardReceived ?award .
  ?award rdfs:label ""National Order of Scientific Merit""@en .
  OPTIONAL { ?person dbo:almaMater ?almaMaterAwardee . }

  # Find the alma mater of an alumnus of the National University of San Marcos
  ?alumnus dbo:alumniOf <http://dbpedia.org/resource/National_University_of_San_Marcos> .
  OPTIONAL { ?alumnus dbo:almaMater ?almaMaterAlumnus . }
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
996,20,test,Give me the entity in the award of the native of Palestine (region) and force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?person dbo:nationality dbc:Palestine_(region) .
  ?person dbo:awardsReceived ?award .
  ?award dbo:recipient ?entity .
  
  OPTIONAL { 
    ?entity dbo:occupation ?force .
  }
  
  ?location rdfs:label ""Lac d'Avoriaz""@en .
  ?location dbo:elevation ?elevation .
  
  FILTER EXISTS {
    ?entity dbo:residence ?location .
  }
}
```",6,6,7,3,2,3,2,20,0,0,4,0,0.0,0
820,16,test,Give me the professional in the award of Scott McCloud and child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?professional WHERE {
  # Scott McCloud's awards
  ?award dbo:recipient ?scott .
  ?scott rdfs:label ""Scott McCloud""@en .

  # Jason Schwartzman's parents
  ?parent dbo:child ?jason .
  ?jason rdfs:label ""Jason Schwartzman""@en .

  # The professional who is a child of one of Jason's parents and associated with Scott's award
  ?professional rdf:type dbo:Person .
  ?professional dbo:award ?award .
  ?professional dbo:parent ?parent .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
701,35,test,Give me the parent of the child of Nefertari and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfChild ?spouseOfFather WHERE {
  # Find Nefertari's child and their parent
  ?nefertari dbo:child ?child .
  OPTIONAL { ?child dbo:parent ?parentOfChild . }
  
  # Find Merneptah's father and his spouse
  ?merneptah dbo:father ?father .
  OPTIONAL { ?father dbo:spouse ?spouseOfFather . }
}
```",4,4,5,2,2,3,3,71,1,17312,0,5.7760064691272456e-05,1.0,0.00011551345731777751
767,46,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of George K. Nash.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?settlement WHERE {
  # Find Dustin Lynch's settlement
  ?album dbo:writer ?dustinLynch .
  FILTER(STR(?album) = ""Where It's At (Dustin Lynch album)"")
  
  ?dustinLynch foaf:based_near ?settlement .

  # Find George K. Nash's alma mater and its administration
  ?georgeK nfo:almaMater ?almaMater .
  FILTER(STR(?georgeK) = ""George K. Nash"")
  
  ?almaMater dbo:administrativeRegion ?adminEntity .
  
  # Link the settlement to the administrative entity
  ?settlement dbo:partOf ?adminEntity .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,61,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actorRestingPlace ?awardeeRestingPlace WHERE {
  # Part 1: Resting place of the actor from the show with Emily Richard
  ?show dbo:starring ?emily .
  ?emily rdfs:label ""Emily Richard""@en .
  ?show dbo:actor ?actor .
  
  OPTIONAL { 
    ?actor dbo:finalRestingPlace ?actorRestingPlace .
  }
  
  # Part 2: Resting place of the awardee of the award received by Gerald Graham
  ?gerald dbo:award ?award .
  ?gerald rdfs:label ""Gerald Graham""@en .
  
  ?otherAwardee dbo:award ?award .
  
  OPTIONAL {
    ?otherAwardee dbo:finalRestingPlace ?awardeeRestingPlace .
  }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
54,67,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Identify Thihapate of Mohnyin
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .
  
  # Step 2: Find Thihapate's child who is an office holder and royalty
  ?child dbo:parent ?thihapate ;
         a dbo:OfficeHolder, dbo:Royalty .

  # Step 3: Identify the predecessor of this child
  ?predecessor dbo:successor ?child .
  
  # Step 4: Identify Thado Minsaw of Prome and his parent
  ?thadoMinsaw rdfs:label ""Thado Minsaw of Prome""@en ;
               dbo:parent ?parentOfThado .

  # Step 5: Identify Thinkhaya of Pagan and one of his children
  ?thinkhaya rdfs:label ""Thinkhaya of Pagan""@en .
  ?childOfThinkhaya dbo:parent ?thinkhaya .

  # Step 6: Find the common child between parent of Thado Minsaw and a child of Thinkhaya
  FILTER (?parentOfThado = ?childOfThinkhaya)

  # The predecessor found in step 3 is our answer
}
```",7,9,8,3,3,3,3,71,1,0,0,1.0,1.0,1.0
994,24,test,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  ?donDokkenBand rdf:type dbo:MusicalBand ;
                 rdfs:label ""Don Dokken""@en .
  
  ?bandMember dbo:bandMember ?donDokkenBand .

  ?associatedArtist dbo:musicalArtist ?bandMember ;
                    rdf:type dbo:MusicalGroup, dbo:Organization .

  FILTER EXISTS { ?associatedArtist dbo:member ?meshuggahMember }
  FILTER EXISTS { ?meshuggahMember dbo:bandMember ?meshuggahBand }
  FILTER (STR(?meshuggahBand) = ""Meshuggah"")
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,56,test,"Give me the actor of Dog Soldiers (film) and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find the actor of ""Dog Soldiers""
  ?movie dbo:title ""Dog Soldiers""@en .
  ?movie dbo:starring ?actor .

  # Step 2: Identify John Pertwee and his child
  ?john foaf:name ""John Pertwee"" .
  ?john dbo:child ?child .

  # Step 3: Find a French politician with a British settlement as their place of origin
  ?politician dbo:nationality dbc:France ;
              dbo:officeHolder true ;
              dbo:birthPlace ?settlement .
  
  ?settlement rdf:type dbo:Settlement ;
              dbo:country dbc:United_Kingdom .

  # Step 4: Combine the information to find the matching actor
  FILTER (?actor = ?child)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
547,47,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actorRestingPlace ?childRestingPlace WHERE {
  # Part 1: Resting place of the actor from the show with Emily Richard
  ?show dbo:starring ?actor .
  ?show rdfs:label ?showLabel .
  FILTER(CONTAINS(LCASE(?showLabel), ""emily richard"")) .
  
  OPTIONAL { 
    ?actor dbo:deathPlace ?actorRestingPlace .
  }
  
  # Part 2: Resting place of the child of James Burton (property developer)
  ?james a dbo:Person ;
         rdfs:label ""James Burton""@en ;
         dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""property developer"")) .

  ?child dbo:parent ?james ;
         dbo:deathPlace ?childRestingPlace .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,66,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party1994Label ?fatherPartyLabel ?prodiBirthPartyLabel WHERE {
  # Italian People's Party (1994)
  ?party1994 rdfs:label ""Italian People's Party""@en .
  ?party1994 rdfs:label ?party1994Label .

  # Lamberto Andreotti's father's party
  ?andreotti dbo:birthName ""Lamberto Andreotti"" .
  ?andreotti dbo:father ?father .
  ?father dbo:party ?fatherParty .
  ?fatherParty rdfs:label ?fatherPartyLabel .

  # Romano Prodi's birth party
  ?prodi foaf:name ""Romano Prodi""@en ;
         dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country ?country .
  ?country dbo:politicalParty ?prodiBirthParty .
  ?prodiBirthParty rdfs:label ?prodiBirthPartyLabel .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
184,51,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonAncestor WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret rdfs:label ""Archduchess Margaret of Austria""@en .
  FILTER(YEAR(?margaret dbo:birthday) = 1925) .

  # Parent of Archduchess Margaret
  ?parentMargaret dbo:child ?margaret .
  
  # Child of the parent of Archduchess Margaret (her sibling)
  ?sibling dbo:parent ?parentMargaret .

  # Archduke Joseph Karl of Austria
  ?josephKarl rdfs:label ""Archduke Joseph Karl of Austria""@en .

  # Child of Archduke Joseph Karl
  ?childJosephKarl dbo:parent ?josephKarl .
  
  # Grandchild of Archduke Joseph Karl (child of his child)
  ?grandchild dbo:parent ?childJosephKarl .

  # Find a common ancestor or relationship between the sibling and grandchild
  OPTIONAL { ?sibling dbo:parent ?commonAncestor . }
  OPTIONAL { ?grandchild dbo:parent ?commonAncestor . }

  FILTER(?commonAncestor != ?sibling && ?commonAncestor != ?grandchild)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
547,50,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?restingPlaceOfAwardee ?restingPlaceOfActor WHERE {
  # Part 1: Resting place of the awardee
  ?person dbo:awardedBy dbpedia:Order_of_St_Michael_and_St_George .
  FILTER EXISTS { ?person dbo:order ""Knight Grand Cross"" }
  OPTIONAL { ?person dbo:deathPlace ?restingPlaceOfAwardee }

  # Part 2: Resting place of the actor from a show with Emily Richard
  ?show dbo:actor ?emilyRichard .
  ?emilyRichard rdfs:label ""Emily Richard""@en .
  ?show dbo:actor ?actor .
  FILTER (?emilyRichard != ?actor)
  OPTIONAL { ?actor dbo:deathPlace ?restingPlaceOfActor }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
528,71,test,"Give me the war of the commander in the work of --01-09 and war of the military force of the entity, that is a societal event, in Chile and force of the person born as the birth name of Narciso Campero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v8 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war ?commander ?militaryForceChile ?narcisoMilitaryForce
WHERE {
  # Placeholder for the work of --01-09, assuming it refers to a specific war or event
  OPTIONAL { 
    ?work rdfs:label ""Work of --01-09""@en .
    ?work dbo:relatedWar ?war .
    ?war dbo:commander ?commander .
  }

  # Military force involved in societal events (wars) in Chile
  ?event a dbo:SocietalEvent ;
         dbo:militaryForce ?militaryForceChile ;
         dbo:country dbc:Chile .

  # Narciso Campero's military force
  ?narciso foaf:name ""Narciso Campero""@en .
  ?narciso dbo:birthPlace ?birthPlace .
  ?narciso dbo:militaryForce ?narcisoMilitaryForce .
}
```",9,10,10,3,3,3,3,71,0,0,2,0,0.0,0
528,67,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09 and war of Irene Morales.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName ?force WHERE {
  ?person rdfs:label ""Narciso Campero""@en .
  ?person dbo:birthName ?birthName .
  OPTIONAL { ?person dbo:militaryUnit ?force . }
}

SELECT ?work ?commander WHERE {
  ?event dbo:date ?date .
  FILTER (STRSTARTS(STR(?date), ""-01-09""))
  ?event rdfs:label ?work .
  ?event dbo:commander ?commander .
}

SELECT ?war WHERE {
  ?person rdfs:label ""Irene Morales""@en .
  ?person dbo:commanderOf ?war .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
994,20,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedBand1 ?associatedBand2 WHERE {
  # Part 1: Associated musical artist of S.A. Slayer
  ?sab dbo:associatedBand ?band .
  ?band rdfs:label ""Slayer""@en .
  ?band dbo:associatedBand ?associatedBand1 .

  UNION

  # Part 2: Associated musical artist of a band member of Meshuggah
  ?meshMember dbo:memberOf ?meshuggah .
  ?meshuggah rdfs:label ""Meshuggah""@en .
  ?meshMember dbo:associatedBand ?bandMember .
  ?bandMember dbo:associatedBand ?associatedBand2 .
}
```",3,6,4,2,2,3,3,71,0,0,2,0,0.0,0
626,19,test,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  # Step 1: Find Alexander I's command roles
  ?alexander rdfs:label ""Alexander I of Russia""@en .
  
  # Step 2: Identify military conflicts he commanded
  ?conflict dbo:commander ?alexander ;
           a dbo:MilitaryConflict .

  # Step 3: Find the award associated with the Battle of Borodino
  ?battle rdfs:label ""Battle of Borodino""@en .
  ?award dbo:awardedFor ?battle ;
         a dbo:Award .

  # Step 4: Determine who received that award
  ?recipient dbp:receivedAward ?award .
  
  # Ensure the recipient is also a commander in the conflict
  ?recipient dbo:commander ?conflict .
}
```",5,6,6,3,2,3,2,20,0,0,44,0,0.0,0
485,28,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?birthPlaceAwardee ?country WHERE {
  # Joseph Whitaker's birth place that is a region
  ?whitaker dbo:birthPlace ?placeWhitaker .
  ?placeWhitaker rdfs:label ""Joseph Whitaker""@en .
  ?placeWhitaker dbo:region ?region .

  # Awardee of Eric Gregory Award who is a writer and poet, and their birth place
  ?award dbp:recipient ?awardee .
  ?awardee dbo:birthPlace ?birthPlaceAwardee .
  ?awardee rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""writer"") && CONTAINS(LCASE(?name), ""poet""))
  ?award rdfs:label ""Eric Gregory Award""@en .

  # Country in the Western European Time zone
  ?timeZone dbo:country ?country .
  ?timeZone rdfs:label ""Western European Time""@en .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
92,53,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMemberArtist ?jimSheppardArtist ?furneyBand
WHERE {
  # Part 1: Find band member who is an artist related to the film ""Nevermore"" (2006)
  ?film rdfs:label ""Nevermore""@en .
  FILTER(YEAR(?film) = 2006) .
  
  OPTIONAL {
    ?band dbo:member ?person .
    ?person foaf:name ?name .
    ?person dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(STR(?occupation)), ""artist"")) .
    BIND(?person AS ?bandMemberArtist)
  }
  
  # Part 2: Find musical artist associated with Jim Sheppard
  ?jimSheppard foaf:name ""Jim Sheppard""@en .
  ?jimSheppard dbo:musicalArtist ?jimSheppardArtist .

  # Part 3: Find the band of Joseph Michael Furney (born)
  ?furney foaf:name ""Joseph Michael Furney""@en .
  ?furney dbo:member ?furneyBand .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
626,20,test,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814) and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalCommander WHERE {
  # Step 1: Find the commander of the Battle of Paris (1814)
  ?battle rdfs:label ""Battle of Paris (1814)""@en .
  ?battle dbo:commander ?parisCommander .

  # Step 2: Identify the military conflict associated with this commander
  ?parisCommander dbo:militaryConflict ?conflict .

  # Step 3: Find an awardee from the Battle of Borodino and their award
  ?borodinoBattle rdfs:label ""Battle of Borodino""@en .
  ?borodinoBattle dbo:award ?award .
  ?awardee dbo:receivedAward ?award .

  # Step 4: Determine who commanded that specific military conflict
  ?conflict dbo:commander ?finalCommander .
}
```",6,7,7,3,2,3,2,20,0,0,62,0,0.0,0
767,48,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?settlement WHERE {
  ?dustin a dbo:Singer ;
          dbo:song ""Where It's At""@en .
  OPTIONAL { ?dustin dbo:birthPlace ?place . }
  ?place a dbo:Settlement ;
         dbo:administrativeUnit ?adminEntity .
}
```",5,6,6,3,2,3,3,71,0,0,8,0,0.0,0
54,56,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is also a parent of Thado Minsaw of Prome
  ?officeHolder dbo:child ?thihapate .
  ?officeHolder dbo:parent ?thadoMinsaw .
  
  # Ensure the office holder is royalty and an office holder
  ?officeHolder rdf:type dbo:RoyalFamilyMember .
  OPTIONAL { ?officeHolder dbo:officeHolder ?office . }
  
  # Thado Minsaw of Prome's parent
  ?thadoMinsaw rdfs:label ""Thado Minsaw of Prome""@en .

  # Soe Min Wimala Dewi's father and the office holder's parent
  ?soeMinWimalaDewi dbo:parent ?officeHolderParent .
  ?officeHolderParent dbo:child ?soeMinWimalaDewiFather .
  
  # Thihapate of Mohnyin
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .

  # Soe Min Wimala Dewi
  ?soeMinWimalaDewi rdfs:label ""Soe Min Wimala Dewi""@en .
  
  # Find the predecessor (parent) of the office holder
  ?officeHolder dbo:parent ?predecessor .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,70,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?bandShena ?bandSameBirthDate ?bandSongWriter WHERE {
  # Find the band of Shèna
  ?person rdfs:label ""Shèna""@en .
  OPTIONAL { ?person dbo:band ?bandShena . }

  # Find Pavlo Khudzik's birth date
  ?pavlo rdfs:label ""Pavlo Khudzik""@en .
  ?pavlo dbo:birthDate ?birthDate .

  # Find a person born on the same date as Pavlo Khudzik and their band
  ?sameBirthPerson dbo:birthDate ?birthDate .
  OPTIONAL { ?sameBirthPerson dbo:band ?bandSameBirthDate . }

  # Find Amba Shepherd's song and its writer
  ?work rdfs:label ""Amba Shepherd""@en ;
        a dbo:Songs .
  ?work dbo:title ?songTitle .
  ?work dbo:writer ?writer .

  # Find the band of the song's writer
  OPTIONAL { ?writer dbo:band ?bandSongWriter . }
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,57,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?producer WHERE {
  ?work rdf:type dbo:MusicalWork ;
        rdf:type dbo:Song ;
        rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  ?work dbo:producer ?producer .

  ?rapper rdf:type dbo:MusicalArtist, dbo:Rapper ;
          dbo:associatedBandMember ?work ;
          dbo:writer ?writer .

  ?writer rdf:type dbo:MusicalArtist, dbo:Artist .
}
```",6,12,7,3,3,3,3,71,0,0,8,0,0.0,0
528,47,test,Give me the war of the commander in the work of --01-09 and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?workCommanderWar ?pisaguaCommanderWar WHERE {
  # Find the work related to January 9th and its commander's war
  ?work dbo:date ""2009-01-09""^^xsd:date .
  ?work dbo:creator ?commander .
  ?commander dbo:participatedInWar ?workCommanderWar .

  # Find the Battle of Pisagua and its commander's war
  ?battle rdfs:label ""Battle of Pisagua""@en .
  ?battle dbo:commander ?pisaguaCommander .
  ?pisaguaCommander dbo:participatedInWar ?pisaguaCommanderWar .
}
```",5,5,6,3,2,3,3,71,0,0,8,0,0.0,0
617,59,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?antiochusIII rdfs:label ""Antiochus III the Great""@en .
  ?antiochus dbo:child ?antiochusIV .
  ?antiochusIV rdfs:label ""Antiochus IV Epiphanes""@en .
  
  OPTIONAL { ?antiochusIV dbo:successor ?successor1 . }
  FILTER EXISTS { ?successor1 dbo:royalty true } .

  OPTIONAL { ?successor1 dbo:child ?child1 . }
  FILTER EXISTS { ?child1 dbo:royalty true } .

  OPTIONAL { ?child1 dbo:child ?grandChild . }
  FILTER EXISTS { ?grandChild dbo:royalty true } .

  OPTIONAL { ?grandChild dbo:spouse ?spouse . }
}
```",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
659,54,test,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?militaryForce ?conflict WHERE {
  ?commander rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  
  ?militaryForce rdfs:label ""Polish Horse""@en ;
                 dbo:commander ?commander .

  ?conflict rdfs:label ""Napoleonic Wars""@en ;
            dbo:participatedIn ?militaryForce ;
            dbo:commander ?commander .
}
```",6,10,7,3,3,3,3,71,0,0,13,0,0.0,0
767,53,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?entity WHERE {
  # Dustin Lynch's administration and settlement
  ?album dbo:writer ?dustin .
  FILTER (str(?dustin) = ""Dustin Lynch"")
  ?dustin dbo:residence ?settlement .
  
  # Carl L. Nippert's alma mater
  ?nippert dbo:almaMater ?university .
  FILTER (str(?nippert) = ""Carl L. Nippert"")
  
  # Batman as the alter ego of Black Hood
  ?batman rdfs:label ""Batman""@en .
  
  # Find common entity in administration
  ?settlement dbo:partOf ?administration .
  ?university dbo:location ?administration .

  OPTIONAL {
    ?batman dbo:residence ?commonEntity .
    FILTER (?commonEntity = ?administration)
  }
  
  BIND(?administration AS ?entity)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
435,24,test,Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?author ?work ?country ?timezone WHERE {
  # Part 1: Find the author of ""Iceland""
  ?work rdfs:label ""Iceland""@en .
  ?work dbo:author ?author .

  # Part 2: Find the time zone region for Bombali Shebora Chiefdom
  ?chiefdom rdfs:label ""Bombali Shebora Chiefdom""@en .
  ?chiefdom dbo:country ?country .
  
  OPTIONAL {
    ?country dbo:timeZone ?timezone .
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,64,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander ?event WHERE {
  # Find the commander in the force of the Kingdom of Ireland who is an office holder
  ?officeHolder a dbo:OfficeHolder ;
               dbo:country dbr:Kingdom_of_Ireland .
  ?force dbo:commander ?commander .
  ?commander rdfs:label ?commanderLabel .

  # Find events related to Rutger Jan Schimmelpenninck and the Battle of Leipzig
  OPTIONAL {
    ?event a dbo:MilitaryConflict ;
           dbo:eventParticipant ?schimmelpenninck ;
           dbo:eventParticipant dbr:Battle_of_Leipzig .
    ?schimmelpenninck rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  }

  # Ensure the event is a societal event
  ?event a dbo:SocietalEvent .

  FILTER (lang(?commanderLabel) = 'en')
}
```",7,11,8,3,3,3,3,71,0,0,6,0,0.0,0
959,64,test,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?person dbo:birthDate ?date .
  FILTER(YEAR(?date) = 1958)
  
  ?person dbo:nationality ?nationality .
  ?nationality rdfs:label ""Japan""@en .

  ?person rdf:type dbo:SportsManager .
  ?person dbo:managerOfTeam ?team .
  ?team dbo:season ?season .
  FILTER(YEAR(?season) = 1998)
  ?team rdfs:label ""Kashima Antlers""@en .

  ?person dbo:almaMater ?almaMater .
  
  ?almaMater rdf:type dbo:EducationalOrganization ;
             rdf:type dbo:University .
  ?almaMater dbo:country ?country .
  ?country rdfs:label ""Japan""@en .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
184,66,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonParent WHERE {
  # Part 1: Archduchess Margaret of Austria (born 1925)
  ?margaret rdfs:label ""Archduchess Margaret of Austria""@en .
  FILTER(YEAR(?margaret dbo:birthday) = 1925) .

  # Find her parent
  ?parent1 dbo:child ?margaret .

  # Find the child of that parent (grandchild of Archduchess Margaret)
  ?grandchild dbo:parent ?parent1 .

  # Find the parent of this grandchild
  ?parent2 dbo:child ?grandchild .

  # Part 2: Native of Budapest and child of the child of Archduke Joseph Karl of Austria
  ?josephKarl rdfs:label ""Archduke Joseph Karl of Austria""@en .
  
  # Find his child
  ?child1 dbo:parent ?josephKarl .

  # Find a person who is both a child of this grandchild and native of Budapest
  ?budaChild dbo:parent ?child1 ;
             dbo:nativePlace ?budaCity .
  FILTER(STR(?budaCity) = ""Budapest"") .

  # Find the parent of this individual
  ?parent3 dbo:child ?budaChild .

  # Find common parent between the two identified individuals
  VALUES (?commonParent) { ?parent2 ?parent3 }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
92,40,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of Joseph Michael.",SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?bandMemberArtist ?jimSheppardArtist ?josephMichaelBand WHERE {
  # Find the band Nevermore associated with the film
  ?film rdfs:label ""Nevermore""@en .
  FILTER(YEAR(?film) = 2006)
  
  # Get members of the band Nevermore who are also artists
  ?band dbo:associatedMusicalArtist ?film ;
        a dbo:Band .
  ?member dbo:bandMember ?band ;
          a dbo:MusicArtist .
  BIND(?member AS ?bandMemberArtist)

  # Find Jim Sheppard's associated musical artist
  ?jimSheppard rdfs:label ""Jim Sheppard""@en .
  ?artist dbo:associatedMusicalArtist ?jimSheppard .
  BIND(?artist AS ?jimSheppardArtist)
  
  # Find Joseph Michael's band
  ?josephMichael rdfs:label ""Joseph Michael""@en .
  ?band2 dbo:bandMember ?josephMichael ;
         a dbo:Band .
  BIND(?band2 AS ?josephMichaelBand)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,66,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?manager WHERE {
  ?team dbo:season ""1998"" .
  ?team rdfs:label ""Kashima Antlers""@en .
  ?team dbo:manager ?manager .
  
  ?manager a dbo:SportsManager .

  ?eiji dbo:almaMater ?university .
  ?eiji rdfs:label ""Eiji Ōtsuka""@en .
  ?university dbo:country <http://dbpedia.org/resource/Japan> ;
              a dbo:EducationalOrganization, dbo:University .

  ?yoshi dbo:nationality ?country .
  ?yoshi rdfs:label ""Yōichi Masuzoe""@en .
  ?country rdfs:label ?residenceLabel .
  
  FILTER(?university = ?manager)
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
427,27,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?person rdf:type dbo:OfficeHolder .
  ?person rdf:type dbo:Politician .
  ?person dbo:birthName ""Romano Prodi""@en .
  ?person dbo:politicalParty ?party .
}
```",3,5,4,3,1,3,3,71,0,0,7,0,0.0,0
492,57,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Person decedent at Algiers (capital of Algeria)
  ?person dbo:decedentPlace ?algiers .
  ?algiers rdfs:label ""Algiers""@en .

  # Person decedent at French Algeria
  ?person dbo:decedentPlace ?frenchAlgeria .
  ?frenchAlgeria rdfs:label ""French Algeria""@en .

  # Person commander in a war that includes Battle of Verdun
  ?war dbo:participatedInBattle ?verdun .
  ?verdun rdfs:label ""Battle of Verdun""@en .
  ?person dbo:commanderInWar ?war .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,17,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandfather WHERE {
  # Step 1: Identify Richeza of Poland
  ?richeza rdfs:label ""Richeza of Poland""@en .
  
  # Step 2: Find her father who is royalty
  ?richeza dbo:parent ?father .
  ?father a dbo:Monarch .

  # Step 3: Determine the parent (grandfather) of her father, ensuring he is royalty
  ?father dbo:parent ?grandfather .
  ?grandfather a dbo:Monarch .

  # Step 4: Identify Doubravka of Bohemia's child who is royalty
  ?doubravka rdfs:label ""Doubravka of Bohemia""@en .
  ?doubravka dbo:child ?reference .
  ?reference a dbo:Monarch .

  # Step 5: Match the grandfather with the reference
  FILTER (?grandfather = ?reference)
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
54,63,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?individual WHERE {
  # Narapati I of Ava's child and parent relationship
  ?narapatiI dbo:child ?narapatiChild .
  ?narapatiChild dbo:parent ?narapatiParent .

  # Thinkhaya of Pagan's child and father relationship
  ?thinkhaya dbo:child ?thinkhayaChild .
  ?thinkhayaChild dbo:father ?thinkhayaFather .

  # Thihapate of Mohnyin's child and predecessor relationship
  ?thihapate dbo:child ?thihapateChild .
  ?thihapateChild dbo:predecessor ?thihapatePredecessor .

  # Find the individual who is both an office holder and royalty
  ?individual dbo:officeHolder true .
  ?individual dbo:royalty true .

  # Linking all relationships to find the common individual
  FILTER (?narapatiParent = ?thinkhayaFather)
  FILTER (?thinkhayaFather = ?thihapatePredecessor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,53,test,"Give me the band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?ambaBand ?traceyBand ?sameBirthDatePerson WHERE {
  # Find Amba Shepherd's band
  ?amba a dbo:MusicArtist ;
        rdfs:label ""Amba Shepherd""@en .
  OPTIONAL { ?amba dbo:band ?ambaBand . }

  # Find Tracey Elizabeth McSween's band
  ?tracey a dbo:Person ;
          foaf:name ""Tracey Elizabeth McSween"" ;
          dbo:birthName ""Tracey Elizabeth McSween"" .
  OPTIONAL { ?tracey dbo:band ?traceyBand . }

  # Identify the birth date of an athlete and soccer player from Zolotonosha
  ?athlete a dbo:Athlete ;
           dbo:sport dbo:Soccer ;
           dbo:placeOfBirth ?zolotonosha .
  ?zolotonosha rdfs:label ""Zolotonosha""@en .
  ?athlete dbo:birthDate ?birthDate .

  # Find another person born on the same date
  ?sameBirthDatePerson a dbo:Person ;
                       dbo:birthDate ?birthDate .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
16,41,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professional WHERE {
  ?satomi rdfs:label ""Satomi Ishihara""@en .
  ?satomi dbo:profession ?profession .

  ?ted rdfs:label ""Ted Martin McGinley""@en .
  ?ted dbo:spouse ?commonSpouse .

  ?georgeanne rdfs:label ""Georgeanne Marie Rice""@en .
  ?georgeanne dbo:spouse ?commonSpouse .

  ?professional dbo:profession ?profession .
  ?professional dbo:spouse ?commonSpouse .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
404,40,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914) and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Victoria Louise of Prussia""@en .
  ?person a dbo:Monarch .
  ?person dbo:parent ?father .
  ?father rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .
  ?person dbo:child ?child .
  ?child rdfs:label ""Prince Ernest Augustus of Hanover (1914)""@en .
  ?person dbo:spouse ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
92,55,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?furney rdfs:label ""Joseph Michael Furney""@en .
  ?furney dbo:bandMember ?nevermore .
  
  ?sheppard rdfs:label ""Jim Sheppard""@en .
  ?sheppard dbo:bandMember ?nevermore .

  OPTIONAL { 
    ?sheppard dbo:associatedBand ?artist .
  }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
488,52,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace ?deathPlace ?administration WHERE {
  # Birth place of Saitō Hajime
  { 
    ?person rdfs:label ""Saitō Hajime""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Death place of Yūki Hideyasu's father (who is a politician)
  {
    ?yuki rdfs:label ""Yūki Hideyasu""@en .
    ?yuki dbo:father ?father .
    ?father rdf:type dbo:Politician .
    ?father dbo:deathPlace ?deathPlace .
  }
  
  UNION
  
  # Administration of Emperor Go-Yōzei
  {
    ?emperor rdfs:label ""Emperor Go-Yōzei""@en .
    ?emperor dbo:administration ?administration .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
404,63,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Get the birth name of Princess Victoria Louise of Prussia
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:birthName ?birthName .

  # Find the father of Ernest Augustus, Duke of Brunswick
  ?ernestAugustus rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?father dbo:child ?ernestAugustus .
  
  # Identify a person who is royalty and born with that birth name
  ?person dbo:birthName ?birthName ;
          dbo:spouse ?spouse ;
          rdfs:label ?label .
  FILTER CONTAINS(LCASE(?label), ""royalty"") .

  # Ensure this person is the child of Ernest Augustus's father
  ?father dbo:child ?person .

  # Ensure this person is a parent to a royal child of Ernest Augustus, Duke of Brunswick
  ?child rdfs:label ?childLabel .
  FILTER CONTAINS(LCASE(?childLabel), ""royalty"") .
  ?person dbo:parent ?ernestAugustus ;
          dbo:child ?child .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
404,34,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?person dbo:birthName ?birthName .
  ?person dbo:royalty true .
  ?person dbo:parent ?parent .
  ?parent rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .
  ?person dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,51,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?nativeCountry WHERE {
  # Find Yōichi Masuzoe's residence and its country
  ?yoshi rdfs:label ""Yōichi Masuzoe""@en .
  ?yoshi dbo:residence ?residence .
  ?residence dbo:country ?country .

  # Identify the sports manager of the 1998 Kashima Antlers season
  ?season rdfs:label ""Kashima Antlers 1998 season""@en .
  ?season dbo:sportsManager ?sportsManager .

  # Find the team managed by this sports manager
  ?team dbo:manager ?sportsManager .
  
  # Find the manager of that team
  ?team dbo:manager ?teamManager .

  # Get the native country of this manager
  ?teamManager dbo:nationality ?nativeCountry .
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
617,65,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalIndividual WHERE {
  # Identify Antiochus (son of Antiochus III the Great)
  ?antiochus rdfs:label ""Antiochus""@en .
  ?antiochus dbo:father ?antiochusIII .

  # Find child of Antiochus
  ?child1 dbo:parent ?antiochus .
  
  # Identify parent of this child
  ?parent1 dbo:child ?child1 .

  # Identify Seleucus II Callinicus
  ?seleucus2 rdfs:label ""Seleucus II Callinicus""@en .

  # Find child of the child of Seleucus II Callinicus who is royalty
  ?grandChild1 dbo:parent ?childOfSeleucus .
  ?childOfSeleucus dbo:parent ?seleucus2 .
  
  # Identify successor of Antiochus and their royal child
  ?successor dbo:succeededBy ?antiochus .
  ?royalChild dbo:parent ?successor .

  # Find spouse of the royal child
  ?spouse dbo:spouse ?royalChild .

  # Final individual is the parent of the child of Antiochus and spouse of the royal child
  ?finalIndividual rdf:type/rdfs:subClassOf* dbo:Person .
  FILTER (?parent1 = ?spouse)
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
767,51,test,"Give me the alma mater of the administration of George K. Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater ?fictionalCharacter WHERE {
  ?person rdfs:label ""George K. Nash""@en .
  ?person dbo:almaMater ?almaMater .

  OPTIONAL {
    ?burland rdfs:label ""Matthew Burland""@en .
    ?burland dbo:fictionalCharacter ?fictionalCharacter .
  }
}
```",5,6,6,3,2,3,3,71,0,1,2,0.0,0.0,0
617,16,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  # Boleslaus I, Duke of Bohemia
  ?boleslaus rdfs:label ""Boleslaus I, Duke of Bohemia""@en .
  
  # Child of Boleslaus I
  ?child dbo:parent ?boleslaus ;
         a dbo:Person .

  # Grandchild (Child of the Child)
  ?grandchild dbo:parent ?child ;
              a dbo:Person .

  # Check if grandchild is royalty
  OPTIONAL { ?grandchild dbo:royalTitle ?title . }

  # Richeza of Poland, Queen of Hungary
  ?richeza rdfs:label ""Richeza of Poland, Queen of Hungary""@en .
  
  # Father of Richeza
  ?father dbo:parent ?richeza ;
          a dbo:Person .

  # Parent of Richeza's father
  ?parentOfFather dbo:child ?father ;
                  a dbo:Person .

  # Check if parent of Richeza's father is royalty
  OPTIONAL { ?parentOfFather dbo:royalTitle ?title2 . }

  # Match the grandchild and the parent of Richeza's father
  FILTER (?grandchild = ?parentOfFather)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
16,35,test,Give me the spouse of the person born as Ted Martin McGinley and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseTed ?spouseGigi WHERE {
  ?personTed rdfs:label ""Ted Martin McGinley""@en .
  ?personTed dbo:spouse ?spouseTed .

  ?personGigi rdfs:label ""Gigi Rice""@en .
  ?personGigi dbo:spouse ?spouseGigi .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
959,65,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Takashi Sekizuka's team and manager
  ?team dbo:member dbr:Takashi_Sekizuka .
  ?team dbo:manager ?manager .

  # Eiji Ōtsuka's alma mater, ensuring it is a Japanese university
  OPTIONAL { 
    ?university dbo:almaMater dbr:Eiji_Ōtsuka ;
                rdf:type dbo:University ;
                dbo:country dbr:Japan .
  }

  # Leader of the 2010 Japanese House of Councillors election and their country of residence
  ?election dbp:leader ?politician .
  ?politician dbo:nationality dbr:Japan ;
              dbo:residenceCountry ?country .

  FILTER(?university != UNDEF && ?country != UNDEF)
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
378,50,test,"Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?claimToFame ?conflict WHERE {
  # Part 1: Claim to fame of George Augustus Eliott in the Great Siege of Gibraltar
  { 
    ?person rdfs:label ""George Augustus Eliott""@en .
    ?person dbo:claimToFame ?claimToFame .
  }
  
  UNION
  
  # Part 2: Military conflict involving Arthur Wellesley, who also participated in the Peninsular War
  {
    ?conflict rdfs:label ?conflictLabel .
    ?conflict dbo:participatedIn [
      a dbo:MilitaryConflict ;
      rdfs:label ""Peninsular War""@en
    ] .
    ?person rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
    ?person dbo:participatedIn ?conflict .
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,57,test,"Give me the commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander1813 ?warCommander WHERE {
  ?unit rdfs:label ""Polish Horse""@en .
  
  # Find the commander in the German campaign of 1813
  ?campaign dbo:name ?campaignName ;
            dbo:date ?date .
  FILTER (CONTAINS(LCASE(?campaignName), ""german campaign"") && ?date >= ""18130101""^^xsd:date && ?date <= ""18131231""^^xsd:date)
  
  ?unit dbo:commander ?commander1813 ;
        dbo:participatedIn ?campaign .
  
  # Find the commander in the war associated with Rutger Jan Schimmelpenninck
  ?schimmelpenninck rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  ?force dbo:militaryForceOf ?schimmelpenninck ;
         dbo:participatedIn ?war .
  
  ?unit dbo:participatedIn ?war ;
        dbo:commander ?warCommander .
}
```",6,13,7,3,3,3,3,71,0,0,7,0,0.0,0
767,23,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?settlement WHERE {
  ?song rdfs:label ""Where It's At""@en .
  ?song dbo:lyricist ?writer .
  ?writer dbo:settlement ?settlement .
}
```",3,4,4,3,1,3,3,71,0,0,66,0,0.0,0
492,25,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person WHERE {
  ?capital dbo:country dbr:Algeria ;
           rdf:type dbo:Settlement .
  ?person dbo:deathPlace ?capital ;
          dbo:occupation dbr:Commander ;
          dbo:wikiPageDisambiguates ?francoHovaWar .
  FILTER EXISTS { 
    ?francoHovaWar rdfs:label ""Franco-Hova Wars""@en .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
294,23,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?restingPlace ?entityInBirthplace WHERE {
  ?person dbo:recipient dbr:Distinguished_Service_Medal_(U.S._Army) .
  ?person rdf:type dbo:Politician .
  ?person dbo:restingPlace ?restingPlace .

  ?marionJames rdfs:label ""Marion James""@en .
  ?marionJames dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement .

  OPTIONAL {
    ?entityInBirthplace dbo:location ?birthPlace .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
77,19,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of the awardee of Golden Weapon for Bravery.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?mayor ?force ?awardee ?war WHERE {
  # Find the mayor of Warsaw and their associated force or organization
  ?mayor dbo:position ""Mayor""@en .
  ?mayor dbo:city ?warsaw .
  ?warsaw rdfs:label ""Warsaw""@en .
  OPTIONAL { ?mayor dbo:memberOf ?force . }

  # Find the awardee of the Golden Weapon for Bravery and their involvement in a war
  ?awardee dbo:award ""Golden Weapon for Bravery""@en .
  OPTIONAL { ?awardee dbo:participatedInWar ?war . }
}
```",5,6,6,3,2,3,2,20,0,0,14,0,0.0,0
184,22,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # For Archduke Joseph Francis of Austria's child and their parent
  ?child dbo:childOf ?archduke .
  ?archduke rdfs:label ""Archduke Joseph Francis of Austria""@en .
  ?child dbo:parent ?parent .

  UNION

  # For Géza von Habsburg's child and their parent
  ?child2 dbo:childOf ?geza .
  ?geza rdfs:label ""Géza von Habsburg""@en .
  ?child2 dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
303,23,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query for the party of the U.S. commander during the United States invasion of Panama
SELECT ?commander ?party WHERE {
  ?event rdfs:label ""United States invasion of Panama""@en .
  ?event dbo:agent ?commander .
  ?commander rdf:type dbo:MilitaryPerson ;
             dbp:country ""United States"" .
  OPTIONAL { ?commander dbo:politicalParty ?party . }
}

UNION

# Query for the party of Arnulfo Arias Madrid
SELECT ?person ?party WHERE {
  ?person rdfs:label ""Arnulfo Arias Madrid""@en ;
          rdf:type dbo:Politician ;
          dbo:birthPlace ?place .
  OPTIONAL { ?person dbo:politicalParty ?party . }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,58,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?institution WHERE {
  ?person dbo:awardReceived ?royalMedal .
  ?person rdfs:label ?nickname .
  ?person dbo:almaMater ?institution .
  ?institution dbo:country dbc:Northern_Ireland .
  ?institution rdf:type dbo:EducationalInstitution ;
               rdf:type dbo:Organisation .
  ?johnAlderdice dbo:almaMater ?institution .
  FILTER (str(?nickname) != """")
  FILTER (CONTAINS(LCASE(str(?person)), ""royal medal""))
  FILTER (CONTAINS(LCASE(str(?johnAlderdice)), ""john alderdice""))
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,48,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?heatherProfession ?jonathonAwardWar WHERE {
  ?heather dbo:profession ?heatherProfession .
  ?heather rdfs:label ""Heather Roy""@en .
  FILTER regex(str(?heatherProfession), ""military unit"", ""i"") .

  ?jonathon dbo:award ?jonathonAward .
  ?jonathon rdfs:label ""Jonathon Band""@en .
  
  ?jonathonAward dbo:war ?jonathonAwardWar .
}
```",5,6,6,3,2,3,3,71,0,0,9,0,0.0,0
54,71,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v8 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         a dbo:OfficeHolder, dbo:Royalty .

  # Predecessor of the identified child
  ?predecessor dbo:successor ?child .

  # Thado Minsaw of Prome's parent is himself
  OPTIONAL { ?thadoMinsawChild dbo:parent dbr:Thado_Minsaw_of_Prome . }

  # Thinkhaya of Pagan's father is himself
  OPTIONAL { ?thinkhayaChild dbo:father dbr:Thinkhaya_of_Pagan . }
}
```",9,11,10,3,3,3,3,71,1,0,0,1.0,1.0,1.0
959,53,test,"Give me the manager of the team of Takashi Sekizuka and native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?team dbo:member Takashi_Sekizuka .
  ?team dbo:manager ?manager .

  ?manager dbo:nationality ?nationality .
  FILTER (str(?nationality) = ""Japan"")

  ?almaMater dbo:alumni ?manager ;
             rdf:type dbo:EducationalOrganization, dbo:University ;
             rdfs:label ?universityLabel .
  FILTER (langMatches(lang(?universityLabel), ""en"") && 
          strStarts(str(?universityLabel), ""Japanese""))

}
```",6,10,7,3,3,3,3,71,0,0,3,0,0.0,0
778,18,test,"Give me the author of the work, that is a software, of Bill Joy and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?softwareAuthor ?awardEntity WHERE {
  # Part 1: Find the author of Unix
  dbr:Unix dbo:author ?person .
  ?person rdfs:label ""Bill Joy""@en .

  BIND(?person AS ?softwareAuthor)

  # Part 2: Find an American awardee of the Wolf Prize in Medicine and their award entity
  {
    SELECT DISTINCT ?awardee WHERE {
      ?award dbo:category dbr:Wolf_Prize_in_Medicine .
      ?award dbo:recipient ?awardee .
      ?awardee dbo:nationality dbr:United_States .
    }
    
    # Get the award entity for this awardee
    ?award dbo:entity ?awardEntity .
  }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
161,51,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce ?commander WHERE {
  ?person rdfs:label ""Francisco Largo Caballero""@en .
  ?person dbo:commander ?commander .
  
  ?militaryForce a dbo:MilitaryConflict ;
                 dbo:commander ?person ;
                 rdf:type/rdfs:subClassOf* dbo:SocietalEvent .

  FILTER(?commander != ?person)
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
92,65,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Find Joseph Michael Furney and his band
  ?person dbo:birthName ""Joseph Michael Furney""@en .
  ?person dbo:bandMember ?band .

  # Step 2: Link the band to Nevermore
  ?reference rdfs:label ""Nevermore""@en ;
             dbo:reference ?band .

  # Step 3: Find actor of Return to Nuke 'Em High Volume 1
  ?movie rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
  ?actor dbo:actor ?movie .

  # Step 4: Ensure the actor is also a musician
  ?actor dbo:musicArtist ?musicianRole .

  # Step 5: Find common musical artist associated with both
  ?band dbo:musicArtist ?associatedArtist ;
        dbo:reference ?reference .
  
  ?actor dbo:musicArtist ?associatedArtist .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,59,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person WHERE {
  # Step 1: Find Amba Shepherd's song
  ?song dbo:writer ?ambashepherd .
  ?ambashepherd rdfs:label ""Amba Shepherd""@en .

  # Step 2: Find the band of the writer (Amba Shepherd)
  OPTIONAL { ?band dbo:member ?ambashepherd . }

  # Step 3: Identify Zolotonosha and find a person born there who is an athlete and soccer player
  ?zolotonosha rdfs:label ""Zolotonosha""@en .
  ?athlete dbo:placeOfBirth ?zolotonosha ;
           rdf:type dbo:Athlete ;
           dbo:sportType dbo:SoccerPlayer .

  # Step 4: Match the birth date of this athlete with another person
  ?decedent dbo:birthDate ?birthdate .
  ?person dbo:birthDate ?birthdate ;
          rdf:type dbo:Athlete ;
          dbo:sportType dbo:SoccerPlayer .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
838,12,val,"Give me the band member of the band, that is a group, of YU Grupa and band of Raša Đelmaš.",SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?member WHERE {
  ?yugrupa dbo:bandMember ?member .
  ?rasadelmash dbo:bandMember ?member .
  FILTER (STR(?yugrupa) = ""http://dbpedia.org/resource/YU_Grupa"")
  FILTER (STR(?rasadelmash) = ""http://dbpedia.org/resource/Raša_Đelmaš"")
}
```",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
10,14,val,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of Matt Colton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember ?associatedArtist WHERE {
  # Find band members of Luke Francis Vibert
  ?vibert a dbo:MusicArtist ;
          foaf:name ""Luke Francis Vibert""@en .
  ?vibert dbo:bandMember ?bandMember .

  OPTIONAL {
    # Find associated musical artists with Matt Colton
    ?colton a dbo:Person ;
            foaf:name ""Matt Colton""@en .
    ?colton dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
963,11,val,"Give me the administration of Serbian Progressive Party and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?leader ?country WHERE {
  # Find the leader of the Serbian Progressive Party
  ?party rdfs:label ""Serbian Progressive Party""@en .
  ?party dbo:leader ?leader .

  # Find countries using Central European Time
  ?country dbo:timeZone ?timezone .
  FILTER(CONTAINS(LCASE(str(?timezone)), ""central european time""))
}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,22,val,Give me the force of the person born as Narciso Campero Leyes and war of Irene Morales.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?force WHERE {
  ?person rdfs:label ""Narciso Campero Leyes""@en .
  OPTIONAL { ?person dbo:militaryUnit ?force . }
}

UNION

SELECT DISTINCT ?war WHERE {
  ?person rdfs:label ""Irene Morales""@en .
  OPTIONAL { ?person dbo:participatedIn ?war . }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
294,18,val,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?restingPlace ?birthPlaceEntity WHERE {
  # Part 1: Resting place of Edwin A. Keeble
  ?keeblesResource rdfs:label ""Edwin A. Keeble""@en .
  ?keeblesResource dbo:finalBurial ?restingPlace .

  # Part 2: Entity in the birthplace that is a settlement for Marion James
  ?jamesResource rdfs:label ""Marion James""@en .
  ?jamesResource dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement .
  ?birthPlace dbo:location ?birthPlaceEntity .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
48,11,val,Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?writerBand ?murdaMookBand WHERE {
  # Part 1: Find the band of a songwriter from Carly Rae Jepsen's album ""Emotion""
  ?song dbo:lyricsBy ?writer .
  ?album dbo:song ?song .
  ?album rdfs:label ""Emotion""@en .
  
  OPTIONAL { 
    ?writer foaf:name ?writerName .
    ?writer dbo:band ?writerBand .
  }
  
  # Part 2: Find the band of Murda Mook
  ?murdaMook foaf:name ""Murda Mook"" .
  OPTIONAL {
    ?murdaMook dbo:band ?murdaMookBand .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
404,32,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?princess rdfs:label ""Victoria Louise, Princess Royal""@en .
  ?princess a dbo:Person ;
            dbo:spouse ?spouse .

  ?child rdfs:label ?childLabel .
  ?erik rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?erik dbo:child ?child .
  
  FILTER CONTAINS(?childLabel, ""royalty"") .

  ?spouse dbo:child ?child .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
54,35,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Find Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin .
  ?child a dbo:RoyalFamilyMember ;
         (dbo:royaltyTitle|dbo:officeHolder) ?role .

  # Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi dbo:parent ?father .

  # Determine the predecessor of the identified child in their role
  ?child dbo:predecessor ?predecessor .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
626,12,val,Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Query to find the award(s) received by Aleksey Petrovich Yermolov
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?award WHERE {
  ?person rdfs:label ""Aleksey Petrovich Yermolov""@en .
  ?person dbo:award ?award .
}

# Query to find the commander in the Battle of Leipzig
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?battle rdfs:label ""Battle of Leipzig""@en .
  ?battle dbp:commander ?commander .
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
392,14,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?place rdfs:label ""Aguilar de Segarra""@en .
  ?place dbo:timeZone ?timezone .
  ?timezone geo:region ?region .

  OPTIONAL { 
    ?event dbo:sport ?sport .
    ?region dbo:location ?event .
  }

  OPTIONAL {
    ?italianEntity rdfs:label ?label .
    ?italianEntity dbo:country <http://dbpedia.org/resource/Italy> .
    ?region dbo:location ?italianEntity .
  }
}
```",3,4,4,2,2,2,3,28,0,0,513,0,0.0,0
392,19,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity WHERE {
  ?entity rdf:type dbo:Country .
  ?entity dbo:timeZone ?tz .
  ?tz rdfs:label ""Central European Time""@en .
  ?entity dbo:province ?province .
  ?province rdfs:label ""Schio""@it .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
9,39,val,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?person rdfs:label ""Allen Hill (scientist)""@en .
  ?person dbo:almaMater ?almaMater .
}

UNION

SELECT ?institution ?nickname WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbo:locationLocatedIn ?location .
  ?location rdfs:label ""Northern Ireland""@en .
  OPTIONAL { ?institution rdfs:label ?nickname . }
  FILTER (CONTAINS(LCASE(?nickname), ""queen's university belfast""))
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,30,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Find the capital of Algeria, which is Algiers
  ?algeria dbo:capital ?algiers .
  FILTER (str(?algiers) = ""Algiers"")

  # Ensure Algiers is a settlement
  ?algiers rdf:type dbo:Settlement .

  # Person who died in Algiers and was a commander in the Franco-Hova Wars
  ?person rdf:type dbo:Person ;
          dbo:deathPlace ?algiers ;
          dbo:commanderInWar ?francoHovaWar .
  
  # Ensure the war is the Franco-Hova War
  ?francoHovaWar rdfs:label ""Franco-Hova Wars""@en .

  OPTIONAL {
    # Person who died in French Algeria (Algiers)
    ?person dbo:deathPlace ?frenchAlgeria .
    FILTER (str(?frenchAlgeria) = ""French Algeria"")
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,33,val,Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?award ?commanderRole WHERE {
  ?person dbo:award ?award .
  ?award rdfs:label ""Order of Suvorov""@en .

  OPTIONAL {
    ?person dbo:militaryCommand ?commanderRole .
    ?commanderRole rdfs:label ?roleLabel .
    FILTER(CONTAINS(LCASE(?roleLabel), ""buda""))
  }
}
```",4,4,5,3,2,3,3,71,3,124,0,0.023622047244094488,1.0,0.046153846153846156
64,7,val,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica and entity in Serbia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?almaMater WHERE {
  ?person rdf:type dbo:Writer .
  ?person dbo:birthPlace ?place .
  FILTER (CONTAINS(LCASE(?place), ""sremska kamenica"") && CONTAINS(LCASE(STR(?place)), ""serbia"")) .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  ?person dbo:almaMater ?almaMater .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
427,28,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994) and party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?prodiParty ?andreottiParty ?ipp1994Label WHERE {
  # Romano Prodi's party affiliation
  ?prodi dbo:partyAffiliation ?prodiParty .
  ?prodi rdfs:label ""Romano Prodi""@en .

  # Giulio Andreotti's party affiliation
  ?andreotti dbo:partyAffiliation ?andreottiParty .
  ?andreotti rdfs:label ""Giulio Andreotti""@en .

  # Italian People's Party (1994)
  ?ipp1994 dbo:wikiPageRedirects ?redirect .
  ?redirect rdfs:label ""Italian People's Party (1994)""@en .
  ?ipp1994 rdfs:label ?ipp1994Label .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,27,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?artist WHERE {
  ?album rdfs:label ""What U See Is What U Get""@en .
  ?album rdf:type dbo:MusicalWork ;
         dbo:work ?work .
  
  ?writer dbo:composer ?album ;
          rdf:type dbo:MusicalArtist, dbo:Artist .

  ?writer rdfs:label ?artist .
}
```",3,7,4,3,1,3,3,71,0,0,50,0,0.0,0
328,28,val,"Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person rdfs:label ""Joseph Stalin""@en .
  
  OPTIONAL { 
    ?person dbo:commanderOf ?easternFront . 
    FILTER EXISTS { ?easternFront rdfs:label ""Eastern Front (World War II)""@en }
  }

  OPTIONAL {
    ?person dbo:leaderOf ?defenseCommissariat .
    FILTER EXISTS { ?defenseCommissariat rdfs:label ""People's Commissariat of Defense of the Soviet Union""@en }
  }

  OPTIONAL {
    ?person dbo:awardee ?award .
    ?award dbo:awardedBy ?fraser .
    FILTER EXISTS { ?fraser rdfs:label ""Bruce Fraser, 1st Baron Fraser of North Cape""@en }
  }
}
```",4,4,5,2,3,3,3,71,0,2,1,0.0,0.0,0
488,35,val,Give me the administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?administration ?birthPlace WHERE {
  # Part 1: Administration of the father of Emperor Go-Mizunoo
  ?emperor rdfs:label ""Go-Mizunoo""@en .
  ?emperor dbo:father ?father .
  OPTIONAL { ?father dbo:positionHeld ?administration . }

  # Part 2: Birthplace of a commander in the Boshin War
  ?commander rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""boshin war"") && CONTAINS(LCASE(?label), ""commander""))
  OPTIONAL { ?commander dbo:birthPlace ?birthPlace . }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
345,12,val,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person ?team WHERE {
  ?person rdfs:label ""Stolz von Liechtenstein""@en .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1978 && MONTH(?date) = 9 && DAY(?date) = 15)
  ?person dbo:soccerPlayer ?playerRole .
  ?person dbo:manager ?managerRole .
  OPTIONAL { ?person dbo:birthPlace ?place . }
  OPTIONAL { ?place dbo:team ?team . }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
488,40,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceSaito ?deathPlaceTokugawa ?administrationGoYozei WHERE {
  # Birth place of Saitō Hajime
  ?saito a dbo:Person ;
         rdfs:label ""Saitō Hajime""@en .
  ?saito dbo:birthPlace ?birthPlaceSaito .

  # Death place of Tokugawa Ieyasu
  ?tokugawa a dbo:Person ;
            rdfs:label ""Tokugawa Ieyasu""@en .
  ?tokugawa dbo:deathPlace ?deathPlaceTokugawa .

  # Administration of Emperor Go-Yōzei
  ?goYozei a dbo:Monarch ;
           rdfs:label ""Emperor Go-Yōzei""@en .
  ?office dbo:head ?goYozei ;
          dbo:administration ?administrationGoYozei .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
360,15,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?album ?writer WHERE {
  ?album dbo:artist dave_flett ;
         dbo:writer ?writer .
  OPTIONAL { 
    ?album dbo:member/manfred_mann* ?manfredMannConnection .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
314,12,val,Give me the commander in Spanish Civil War and awardee of 30 and person deceased at Madrid.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person dbo:commanderInWar ?war .
  ?war rdfs:label ""Spanish Civil War""@en .
  
  OPTIONAL { 
    ?person dbo:award ?award .
    ?award rdfs:label ""Order of the Golden Fleece""@en .
  }
  
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Madrid""@en .

  FILTER EXISTS {
    ?person dbo:award ?award .
    ?award rdfs:label ""Order of the Golden Fleece""@en .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
232,22,val,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of Jon Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?native WHERE {
  ?sylvie dbo:birthName ""Sylvie Bermann""@en .
  ?residence dbo:resident ?sylvie ;
             a dbo:Settlement ;
             dbo:nationality dbc:United_Kingdom .
  ?child dbo:parent ?jonPertwee ;
         dbo:residence ?residence .
  ?jonPertwee dbo:birthName ""Jon Pertwee""@en .
  ?native dbo:birthPlace ?residence .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
838,13,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?memberBand WHERE {
  ?person rdfs:label ""Žika Jelić""@en .
  ?person dbo:bandMember ?band .

  FILTER EXISTS { ?band a dbo:Band . }
  FILTER EXISTS { ?band a dbo:Group . }

  ?band dbo:bandMember ?member .
  
  FILTER EXISTS { ?member a dbo:Artist . }
  FILTER EXISTS { ?member a dbo:MusicalArtist . }

  ?member dbo:band ?memberBand .
}
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
16,23,val,Give me the spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Ted McGinley""@en .
  ?person dbo:birthName ?birthName .
  ?person dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,3,71,1,0,0,1.0,1.0,1.0
427,25,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?prodiPartyLabel ?andreottiPartyLabel WHERE {
  ?prodi dbo:partyAffiliation ?prodiParty .
  ?prodi rdfs:label ""Romano Prodi""@en .
  ?prodiParty rdfs:label ?prodiPartyLabel .

  ?andreotti dbo:partyAffiliation ?andreottiParty .
  ?andreotti rdfs:label ""Giulio Andreotti""@en .
  ?andreottiParty rdfs:label ?andreottiPartyLabel .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
427,43,val,Give me the reference to Partito Popolare Italiano and party of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?partyProdi ?partyFather WHERE {
  # Partito Popolare Italiano reference
  VALUES (?partitoPopolare) { 
    dbpedia-it:Partito_Popolare_Italiano 
  }

  # Party of Romano Prodi
  OPTIONAL {
    ?prodi dbo:member ?partyProdi .
    FILTER (str(?prodi) = ""Romano_Prodi"")
  }
  
  # Alumnus from MIT and their father's party
  ?alumnus foaf:alumniOf dbpedia:Massachusetts_Institute_of_Technology ;
           foaf:parent ?father .
  OPTIONAL {
    ?father dbo:member ?partyFather .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
30,7,val,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder and native of the birthplace of Silvia Cohen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professional WHERE {
  # Step 1: Find Silvia Cohen's birthplace
  ?silviaCohen rdfs:label ""Silvia Cohen""@en .
  ?silviaCohen dbo:birthPlace ?birthPlace .

  # Step 2: Identify a professional with the specified roles
  ?professional rdfs:label ?name .
  ?professional dbo:occupation ?occupation1 .
  ?professional dbo:occupation ?occupation2 .
  ?professional dbo:occupation ?occupation3 .
  ?professional dbo:occupation ?occupation4 .
  ?professional dbo:occupation ?occupation5 .

  FILTER (
    (str(?occupation1) = ""financier"" || str(?occupation1) = ""Financier"") &&
    (str(?occupation2) = ""businessman"" || str(?occupation2) = ""Businessman"") &&
    (str(?occupation3) = ""vineyard owner"" || str(?occupation3) = ""Vineyard owner"") &&
    (str(?occupation4) = ""art collector"" || str(?occupation4) = ""Art collector"") &&
    (str(?occupation5) = ""racehorse owner/breeder"" || str(?occupation5) = ""Racehorse owner/breeder"")
  )

  # Step 3: Ensure the professional is native to Silvia Cohen's birthplace
  ?professional dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
314,16,val,"Give me the person deceased at Madrid and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?event WHERE {
  ?person rdfs:label ""Lisa Gavrić""@en .
  ?person dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""commander"")) .

  ?deathEvent rdf:type dbo:Event ;
              rdf:type dbpedia-owl:SocietalEvent ;
              dbo:place ?place ;
              dbo:agent ?person .
  
  ?place rdfs:label ""Madrid""@en .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
994,25,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedArtist ?bandMember WHERE {
  # Part 1: Associated musical artist of Red Tide (band)
  ?redTideBand rdfs:label ""Red Tide""@en .
  ?redTideBand dbo:associatedMusicalArtist ?associatedArtist .

  # Part 2: Band member of Donald Maynard Dokken
  ?donaldDokken rdfs:label ""Donald Maynard Dokken""@en .
  ?donaldDokken dbo:bandMember ?bandMember .
  
  FILTER(?bandMember != ?associatedArtist) # Ensure distinct results if needed
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
801,24,val,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist ?musicalWork WHERE {
  ?producer rdfs:label ""Chris Taylor (music producer)""@en .
  ?producer dbo:associatedMusicalArtist ?artist .
  ?artist rdfs:label ""50 Cent""@en .
  
  OPTIONAL {
    ?work dbo:musicalWork ?musicalWork ;
          dbo:producer ?producer ;
          a dbo:Songs .
    FILTER(LANG(?musicalWork) = 'en')
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
696,11,val,Give me the landmark at elevation of 50 and birth place of the member of Dropkick Murphys.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?landmark ?birthPlace WHERE {
  # Part 1: Landmark at elevation of 50
  {
    ?landmark a dbo:Lighthouse ;
              dbo:elevation ""50""^^xsd:integer .
  }
  
  UNION
  
  # Part 2: Birth place of Dropkick Murphys members
  {
    ?member dbo:bandMemberOf <http://dbpedia.org/resource/Dropkick_Murphys> .
    ?member dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,31,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  # Step 1: Identify Laodice IV's spouse
  ?laodiceIV rdfs:label ""Laodice IV""@en .
  ?laodiceIV dbo:spouse ?spouse .

  # Step 2: Find the child of this spouse
  OPTIONAL { ?child dbo:parent ?spouse . }

  # Step 3: Determine the successor of Antiochus II Theos
  ?antiochusII rdfs:label ""Antiochus II Theos""@en .
  ?successor dbo:succeededBy ?antiochusII .

  # Step 4: Identify the child of this successor
  OPTIONAL { ?childOfSuccessor dbo:parent ?successor . }

  # Step 5: Find the grandchild (child of the child) who is royalty and matches criteria from step 4
  OPTIONAL { ?grandchild dbo:parent ?child . }
  
  FILTER(?grandchild = ?childOfSuccessor)
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
328,30,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person rdfs:label ""Georgy Zhukov""@en .
  OPTIONAL { ?person dbo:office ?office . }
  OPTIONAL { ?person dbo:awardedAward ?award . }
  FILTER EXISTS { 
    ?commanderRole dbo:rank ""Commander""@en ;
                   dbo:place ?location .
    ?location rdfs:label ""Eastern Front (World War II)""@en .
  }
  FILTER EXISTS {
    ?office rdfs:label ?agencyLabel .
    FILTER regex(?agencyLabel, ""government agency"", ""i"")
  }
  FILTER EXISTS { 
    ?award rdfs:label ""Order of Suvorov""@en .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
427,23,val,Give me the reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?party WHERE {
  ?person rdfs:label ""Michele Pinto""@en .
  ?person dbo:politicalParty ?party .
}
```",3,3,4,3,1,3,3,71,0,0,8,0,0.0,0
328,39,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II).",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?leader WHERE {
  ?gustavJonson dbo:officeHolder ?office .
  ?office dbo:leader ?leader .
  ?leader rdf:type dbo:GovernmentAgency .
  
  OPTIONAL { 
    ?leader dbo:commanderInWar ?war .
    ?war rdfs:label ""Eastern Front (World War II)""@en .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
232,34,val,Give me the child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""Jon Pertwee""@en .
  ?person dbo:nativePlace ?place .
  FILTER(CONTAINS(LCASE(str(?place)), ""london""))
  OPTIONAL { ?person dbo:child ?child . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,31,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?war ?entityInNewZealand WHERE {
  ?jonathonBand rdfs:label ""Jonathon Band""@en .
  ?award dbo:recipient ?jonathonBand ;
         dbo:awardee ?awardee .
  OPTIONAL { ?awardee dbo:war ?war . }
  OPTIONAL {
    ?newZealandEntity dbo:country <http://dbpedia.org/resource/Colony_of_New_Zealand> ;
                      rdfs:label ?entityLabel .
    FILTER (lang(?entityLabel) = 'en')
    BIND(?newZealandEntity AS ?entityInNewZealand)
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,24,val,Give me the figure known as QUB and alma mater of the awardee of Royal Medal.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMaterLabel WHERE {
  ?awardee dbo:award ?royalMedal .
  ?royalMedal rdfs:label ""Royal Medal""@en .
  ?awardee dbo:almaMater ?almaMater .
  ?almaMater rdfs:label ?almaMaterLabel .
  FILTER regex(?almaMaterLabel, ""Queen's University Belfast"", ""i"")
}
```",3,3,4,2,2,3,3,71,0,1,1,0.0,0.0,0
404,38,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child ?parent WHERE {
  ?ernestAugustus rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  
  ?father dbo:father ?ernestAugustus .
  
  ?child dbo:child ?father ;
         rdf:type ?royaltyType .

  FILTER (
    ?royaltyType IN (dbo:Monarch, dbo:RoyalFamilyMember)
  )
  
  ?parent dbo:parent ?child .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
232,33,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?child dbo:parent Jon_Pertwee ;
         rdf:type dbo:Actor ;
         rdfs:label ?name .
  
  OPTIONAL { ?child dbo:claimToFame ?fame . }
  
  ?film dbo:genre ""War""@en ;
        dbo:starring ?actor .

  FILTER(CONTAINS(LCASE(?fame), ""war"") && CONTAINS(LCASE(?fame), ""film""))
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,40,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of New Zealand Army.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?award ?war WHERE {
  ?person rdfs:label ""Jonathon Band""@en .
  ?person dbo:award ?award .
  
  OPTIONAL {
    ?award dbo:relatedWar ?war .
  }
  
  OPTIONAL {
    ?entity rdfs:label ?locationLabel .
    FILTER(CONTAINS(LCASE(?locationLabel), ""colony of new zealand""))
    ?entity dbo:relatedWar ?war .
  }

  OPTIONAL {
    ?nzArmy rdfs:label ""New Zealand Army""@en .
    ?nzArmy dbo:participatedIn ?war .
  }
}
```",5,5,6,3,3,3,3,71,0,1,1,0.0,0.0,0
421,17,val,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?samir a dbo:Person ;
         rdfs:label ""Samir Bekrić""@en .
  ?samir dbo:birthPlace ?birthplace .

  ?edin a dbo:Person ;
        dbo:birthName ""Edin Dervišhalidović"" ;
        dbo:birthPlace ?birthplace .

  BIND(?edin AS ?person)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,14,val,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?princess rdfs:label ""Princess Pauline of Saxe-Weimar-Eisenach""@en .
  
  ?princess dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?spouse rdfs:label ?spouseLabel .
    FILTER regex(?spouseLabel, ""royalty"", ""i"")
  }
  
  ?child dbo:parent ?spouse ;
         dbo:father ?father .
  
  OPTIONAL {
    ?child rdfs:label ?childLabel .
    FILTER regex(?childLabel, ""royalty"", ""i"")
  }
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
485,14,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?birthPlace WHERE {
  ?person dbo:award ?award .
  ?award rdfs:label ""Eric Gregory Award""@en .
  
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  FILTER (
    (str(?occupation1) = str(""Writer"") || str(?occupation1) = str(""Poet"")) &&
    (str(?occupation2) = str(""Writer"") || str(?occupation2) = str(""Poet""))
  )
  
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  
  ?person dbo:country ?country .
  ?country rdfs:label ""United Kingdom""@en .
}
```",3,5,4,2,2,2,3,28,0,0,5,0,0.0,0
404,18,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?child dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  ?child rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .

  ?person dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .
  
  ?parent dbo:child ?person .
  ?parent dbo:child dbr:Prince_Ernest_Augustus_of_Hanover_(1914-1987) .

  FILTER(?child = ?parent)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,26,val,Give me the alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/governor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?almaMater WHERE {
  ?person rdfs:label ""George Kilbon Nash""@en .
  ?person dbo:almaMater ?almaMater .
}
```",3,3,4,3,1,3,3,71,0,0,6,0,0.0,0
915,11,val,"Give me the father of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  # Find Lizzie Spaulding's father
  ?lizzie a dbo:LizzieSpaulding ;
          dbo:father ?father .

  # Find Stephen Verona's birthplace and ensure it is a settlement
  ?stephen a dbo:StephenVerona ;
           dbo:birthPlace ?birthPlace .
  
  ?birthPlace rdf:type ?settlementType .
  FILTER (?settlementType IN (dbo:City, dbo:Town, dbo:Village)) .

  # Check if Lizzie Spaulding's father resides in Stephen Verona's birthplace
  OPTIONAL { ?father dbo:residence ?residence . }
  FILTER(?residence = ?birthPlace)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
617,40,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?finalPerson WHERE {
  # Step 1: Identify Laodice IV's spouse
  ?laodiceIV rdfs:label ""Laodice IV""@en .
  ?laodiceIV dbo:spouse ?spouse .

  # Step 2: Find the child of this spouse
  ?spouse dbo:child ?childOfSpouse .

  # Step 3: Identify successor of Antiochus II Theos and ensure they are royalty
  ?antiochusII rdfs:label ""Antiochus II Theos""@en .
  ?successor dbo:succeededBy ?antiochusII .
  ?successor a dbo:Monarch .

  # Step 4: Identify the parent of Nysa (wife of Pharnaces I of Pontus)
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  ?parent dbo:child ?nysa .
  ?parent a dbo:Monarch .

  # Step 5: Find the child of the successor's royalty
  ?successorChild dbo:child ?successorRoyalty .
  ?successorRoyalty a dbo:Monarch .

  # Step 6: Combine information to identify the final person
  ?finalPerson rdf:type dbo:Monarch ;
               (dbo:child|dbo:spouse) ?childOfSpouse ;
               (dbo:child|dbo:spouse) ?successorRoyalty .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
492,32,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?decedent ?militaryEvent WHERE {
  # Find Joseph C. Satterthwaite's position and associated person (decedent)
  ?position dbo:positionHeld ?satterthwaite .
  ?satterthwaite dbp:name ""Joseph C. Satterthwaite"" .
  ?position dbo:employee ?decedent .

  # Find Frédéric-Georges Herr's military conflicts or events
  ?herr dbp:name ""Frédéric-Georges Herr"" .
  ?militaryEvent dbo:commander ?herr .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
838,11,val,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of Kerber.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?member ?primaryBand WHERE {
  ?member rdf:type dbo:Artist .
  ?member rdf:type dbo:MusicalArtist .
  ?member dbo:bandMember <http://dbpedia.org/resource/YU_Grupa> .
  ?member dbo:bandMember <http://dbpedia.org/resource/Kerber_(band)> .
  OPTIONAL { ?member dbo:band ?primaryBand . }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
659,27,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?event rdf:type dbo:Event ;
         rdf:type dbo:SocietyEvent ;
         rdf:type dbo:MilitaryConflict .
  ?event dbo:referenceToRutgerJanSchimmelpenninck ?schimmelpenninckRef .
  ?schimmelpenninckRef rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  ?event dbo:militaryForce ?militaryForce .
}
```",3,6,4,3,1,3,3,71,0,0,1127,0,0.0,0
767,37,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to .,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?almaMater WHERE {
  ?person rdfs:label ""George Kilbon Nash""@en .
  ?person dbo:almaMater ?almaMater .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
994,36,val,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?bandMember WHERE {
  # Find the entity related to S.A. Slayer
  ?sAEntity rdfs:label ""S.A. Slayer""@en .
  
  # Identify band members of this entity
  ?sAEntity dbo:member ?bandMember .

  # Check if the band member is also a musical artist and has a birth name or persona similar to Don Dokken
  ?bandMember rdf:type dbo:MusicalArtist .
  OPTIONAL { 
    ?bandMember dbo:birthName ?birthName .
    FILTER regex(?birthName, ""Don Dokken"", ""i"")
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,15,val,"Give me the birth place of Novia Indriani Mamuaja and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?birthPlace ?entity WHERE {
  # Part 1: Birth place of Novia Indriani Mamuaja
  ?person rdfs:label ""Novia Indriani Mamuaja""@en .
  ?person dbo:birthPlace ?birthPlace .

  # Part 2: Entity in the region of the time zone in Salak, North Sumatra
  OPTIONAL {
    ?location rdfs:label ""Salak, North Sumatra""@en .
    ?location geo:lat ?latitude ;
              geo:long ?longitude .
    ?region dbo:containsPlace ?location .
    ?entity dbo:locatedIn ?region .
  }
}
```",4,4,5,3,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
659,34,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  OPTIONAL { ?person dbo:officeHolder ?office . FILTER regex(str(?office), ""Kingdom of Ireland"", ""i"") }
  OPTIONAL { ?person dbo:militaryCommander ?command . FILTER regex(str(?command), ""Napoleonic Wars"", ""i"") }
}
```",4,5,5,3,2,3,3,71,0,2,34,0.0,0.0,0
184,37,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Archduchess Ilona of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childOfChild WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria
  ?ladislaus a dbo:Person ;
             rdfs:label ""Archduke Ladislaus Philipp of Austria""@en .

  # Step 2: Find his parent
  ?parent dbo:child ?ladislaus .

  # Step 3: Find the child of that parent who is royalty
  ?childOfParent dbo:child ?parent ;
                 a dbo:RoyalFamilyMember .

  # Step 4: Determine the parent of Archduchess Ilona of Austria
  ?ilona a dbo:Person ;
         rdfs:label ""Archduchess Ilona of Austria""@en .
  ?ilonaParent dbo:child ?ilona .

  # Ensure consistency: The person identified in step 3 should also be the parent of Archduchess Ilona
  FILTER (?childOfParent = ?ilonaParent)
  
  # Step 5: Return the child of the child who is royalty and matches the criteria
  ?childOfChild dbo:parent ?childOfParent .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
182,17,val,Give me the entity in Sri Lanka and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entityInSriLanka ?war WHERE {
  ?person rdfs:label ""Gotabhaya Rajapaksa""@en .
  ?person dbo:country ?sriLanka .
  FILTER (STR(?sriLanka) = STR(<http://dbpedia.org/resource/Sri_Lanka>))
  
  OPTIONAL { ?person dbo:role ?entityInSriLanka . }
  OPTIONAL { ?person dbo:occupation ?war . FILTER regex(str(?war), ""War"", ""i"") }
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
161,36,val,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?person rdfs:label ""Abd el-Krim""@en .
  ?person dbo:alias ""El Director"" .
  
  ?event rdfs:label ""Rif War""@en ;
         dbo:participatedInMilitaryForce ?militaryForce .

  ?militaryForce dbo:commander ?commander .
  
  FILTER (?commander = ?person)
}
```",4,5,5,3,2,3,3,71,0,0,12,0,0.0,0
547,33,val,Give me the resting place of the actor of the show with Emily Richard and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorRestingPlaceLabel ?egyptologistRestingPlaceLabel WHERE {
  # Part 1: Resting place of Dan Stevens (actor from a show with Emily Richard)
  OPTIONAL {
    ?show dbo:starring ?person .
    ?person rdfs:label ""Dan Stevens""@en .
    ?person dbo:deathPlace ?actorDeathPlace .
    ?actorDeathPlace rdfs:label ?actorRestingPlaceLabel .
  }
  
  # Part 2: Resting place of James Burton (Egyptologist)
  OPTIONAL {
    ?person rdfs:label ""James Burton (Egyptologist)""@en .
    ?person dbo:deathPlace ?egyptologistDeathPlace .
    ?egyptologistDeathPlace rdfs:label ?egyptologistRestingPlaceLabel .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
701,40,val,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfHenuttawy ?spouseOfRamessesII ?childOfSpouseAmunHerKhepeshef ?parentOfChild WHERE {
  # Parent of Henuttawy (19th dynasty)
  ?henuttawy rdfs:label ""Henuttawy (19th dynasty)""@en .
  ?henuttawy dbo:parent ?parentOfHenuttawy .

  # Spouse of Ramesses II
  ?ramessesII rdfs:label ""Ramesses II""@en .
  ?ramessesII dbo:spouse ?spouseOfRamessesII .

  # Child of the spouse of Amun-her-khepeshef
  ?amunHerKhepeshef rdfs:label ""Amun-her-khepeshef""@en .
  ?spouseOfAmunHerKhepeshef dbo:spouse ?amunHerKhepeshef .
  ?childOfSpouseAmunHerKhepeshef dbo:parent ?spouseOfAmunHerKhepeshef .

  # Parent of the child from step 3
  ?childOfSpouseAmunHerKhepeshef dbo:parent ?parentOfChild .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,37,val,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember ?associatedBand ?organization WHERE {
  # Find Don Dokken's band
  ?dokken dbo:bandMember ?band .
  
  # For each member of that band, find associated musical artists
  ?band dbo:bandMember ?bandMember .
  ?bandMember dbo:musicalArtist ?associatedBand .

  # Ensure the associated entity is both a Band and an Organization
  ?associatedBand rdf:type dbo:Band ;
                 rdf:type dbo:Organization .

  # Find organization linked to Fredrik Thordendal
  ?fredrik dbo:organization ?organization .
  
  FILTER(?dokken = <http://dbpedia.org/resource/Don_Dokken>)
  FILTER(?fredrik = <http://dbpedia.org/resource/Fredrik_Thordendal>)
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
421,13,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  ?person dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .
  ?person dbo:award ?award .
  
  OPTIONAL { 
    ?band dbo:member ?bandMember .
    ?band dbo:member ?person .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
378,38,val,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?claimToFame WHERE {
  VALUES ?person { 
    dbr:George_Augustus_Eliott_1st_Baron_Heathfield
    dbr:Arthur_Wellesley_1st_Duke_of_Wellington
  }
  
  ?person dbo:notableFor ?claimToFame .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
626,13,val,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?conflictCommander WHERE {
  ?battle rdfs:label ""Battle of Paris (1814)""@en .
  ?battle dbo:commander ?firstCommander .

  ?militaryConflict dbo:commander ?firstCommander .
  
  ?militaryConflict dbo:commander ?conflictCommander .
}
```",3,4,4,3,1,3,2,20,364,0,0,1.0,1.0,1.0
356,11,val,Give me the player in the successor of 2014 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player ?team WHERE {
  ?markBriggs a dbo:FootballPlayer ;
              rdfs:label ""Mark Briggs""@en .
  
  ?season dbo:year ""2015""^^xsd:gYear ;
          dbo:clubTeam ?sacramentoRepublic2015 .

  ?sacramentoRepublic2015 dbo:player ?player .

  OPTIONAL {
    ?markBriggs dbo:team ?team .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
9,41,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?qub WHERE {
  # Identify QUB
  VALUES ?qub { <http://dbpedia.org/resource/Queen's_University_Belfast> }

  OPTIONAL {
    # Find the alma mater of a politician who was mayor in the Northern Ireland Forum
    ?person dbo:almaMater ?qub .
    ?person dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""politician"") && CONTAINS(LCASE(?occupation), ""mayor""))
    ?person dbo:memberOf <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  }

  OPTIONAL {
    # Find the alma mater of an awardee of the Royal Medal
    ?recipient dbo:almaMater ?qub .
    ?recipient dbo:honoraryTitle ""Royal Medal"" .
  }
}
```",5,6,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
54,33,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commonParent WHERE {
  # Step 1: Find Thado Minsaw's parent
  ?thadoMinsaw dbo:childOf ?parentThadoMinsaw .
  FILTER (str(?thadoMinsaw) = ""Thado Minsaw of Prome""^^xsd:string)

  # Step 2: Find the child of Thado Minsaw's parent
  ?parentThadoMinsaw dbo:child ?childOfParentThado .

  # Step 3: Find Thinkhaya's child
  ?thinkhaya dbo:childOf ?parentThinkhaya .
  FILTER (str(?thinkhaya) = ""Thinkhaya of Pagan""^^xsd:string)
  
  ?parentThinkhaya dbo:child ?childOfParentThinkhaya .

  # Step 4: Find the common parent
  ?commonParent dbo:child ?childOfParentThado .
  ?commonParent dbo:child ?childOfParentThinkhaya .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,34,val,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?rice dbo:birthName ""Georgeanne Marie Rice"" .
  ?ted dbo:birthName ""Ted McGinley"" .
  ?ted dbo:spouse ?person .
  FILTER (?person = ?rice)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,14,val,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?team WHERE {
  # Identify Gary Williams' birthplace
  ?garryWilliams dbo:birthPlace ?birthPlace .
  ?garryWilliams rdfs:label ""Gary Williams (footballer, born 1960)""@en .

  # Ensure the birthplace is an English settlement
  ?birthPlace rdfs:label ?settlementLabel ;
              dbo:country dbc:England .
  
  FILTER(LANG(?settlementLabel) = 'en')

  # Find natives of this place who are both soccer players and managers
  ?native dbo:nationality dbc:England ;
          dbo:birthPlace ?birthPlace ;
          dbo:soccerPlayer true ;
          dbo:soccerManager true .

  # Retrieve the team associated with these individuals
  OPTIONAL { ?native dbo:team ?team . }
}
```",3,7,4,3,1,3,2,20,0,0,46,0,0.0,0
617,35,val,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parentOfChildOfAntiochus ?grandchildParent WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus rdfs:label ""Antiochus IV Epiphanes""@en .
  
  # Step 2: Find a child of this Antiochus
  ?child dbo:parent ?antiochus .

  # Step 3: Parent of the child is Antiochus himself
  ?parentOfChildOfAntiochus dbo:child ?child .
  
  # Step 4: Identify Seleucus II Callinicus
  ?seleucus rdfs:label ""Seleucus II Callinicus""@en .

  # Step 5: Find a child of Seleucus II Callinicus
  ?childOfSeleucus dbo:parent ?seleucus .
  
  # Step 6: Ensure the child is royalty and find their child (grandchild)
  ?royalChild rdf:type dbo:Monarch ;
              dbo:parent ?childOfSeleucus .
  ?grandchild dbo:parent ?royalChild .

  # Step 7: Find parent of this grandchild
  ?grandchildParent dbo:child ?grandchild .
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
232,39,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?native WHERE {
  ?actor dbo:actorInFilm ?film .
  ?film rdfs:label ""Dog Soldiers""@en .
  
  ?actor dbo:nationality ?nationality .
  ?nationality rdfs:label ""France""@en .

  ?actor dbo:officeHolder ?office .
  ?actor a dbo:Politician .

  ?actor dbo:residence ?residence .
  ?residence a dbo:Settlement .
  ?residence dbo:country ?country .
  ?country rdfs:label ""United Kingdom""@en .

  ?residence dbo:native ?native .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
626,11,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?orderAwardee ?militaryConflict WHERE {
  ?person rdfs:label ""Alexander I of Russia""@en .
  
  OPTIONAL {
    ?person dbo:awardee ?orderAwardee .
    ?orderAwardee rdfs:label ""Order of St. Andrew""@en .
  }
  
  OPTIONAL {
    ?person dbo:commanderInMilitaryConflict ?militaryConflict .
  }
}
```",3,4,4,2,2,3,2,20,0,0,9,0,0.0,0
547,22,val,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?finalBurial WHERE {
  # Resting place of James Burton (Egyptologist)
  { 
    ?person rdfs:label ""James Burton (Egyptologist)""@en .
    ?person dbo:finalBurial ?finalBurial .
  }
  
  UNION
  
  # Resting place of awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?recipient dbo:title ""Knight Grand Cross of the Order of St Michael and St George"" ;
               rdfs:label ?name .
    OPTIONAL { ?recipient dbo:finalBurial ?finalBurial . }
    FILTER (lang(?name) = 'en')
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
701,42,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  # Find Henuttawy (19th dynasty) and her parent
  ?henuttawy rdfs:label ""Henuttawy""@en .
  ?henuttawy dbo:birthPlace ?place .
  FILTER regex(str(?place), ""19th dynasty"", ""i"") .
  ?henuttawy dbo:parent ?parent .

  # Find Merneptah's father
  ?merneptah rdfs:label ""Merneptah""@en .
  ?merneptah dbo:father ?father .

  # Find the spouse of Merneptah's father (Nefertari)
  ?spouse rdfs:label ""Nefertari""@en .
  ?father dbo:spouse ?spouse .

  # Ensure Seti I is the parent of Nefertari's child
  ?seti rdfs:label ""Seti I""@en .
  ?seti dbo:spouse ?spouse .
  ?seti dbo:child ?child .

  FILTER (?parent = ?father)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
959,18,val,Give me the member of University of Tsukuba and native of Japan and manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:almaMater <http://dbpedia.org/resource/University_of_Tsukuba> .
  ?person dbo:nationality <http://dbpedia.org/resource/Japan> .
  ?person dbo:managerOfSeason <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,20,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?spouse WHERE {
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?spouse .

  OPTIONAL {
    ?duke rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
    ?child dbo:parent ?duke ;
           rdf:type dbo:Monarch .
    FILTER(?spouse = ?child)
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
232,26,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor ?film ?militaryConflict WHERE {
  ?person rdf:type dbo:Actor .
  ?person dbo:narrator true .
  ?person dbo:producer true .
  ?person rdfs:label ?actor .

  ?film dbo:starring ?person ;
        a dbo:Film .

  ?film dbo:militaryConflict ?militaryConflict .

  FILTER(LANG(?actor) = 'en')
}
```",3,5,4,3,1,3,3,71,0,0,3,0,0.0,0
281,21,val,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war WHERE {
  # Find wars associated with Winston Churchill as a Knight Grand Cross of the Order of the Bath
  ?person dbo:award ""Knight Grand Cross of the Order of the Bath""@en .
  ?person rdfs:label ""Winston Churchill""@en .
  
  OPTIONAL { 
    ?person dbo:participatedInMilitaryConflict ?war1 .
  }
  
  # Find wars associated with the New Zealand Army
  ?nzArmy dbp:name ""New Zealand Army"" .
  ?nzArmy dbo:participatedInMilitaryConflict ?war2 .

  # Find common wars between Churchill and the New Zealand Army
  FILTER (?war1 = ?war2)
  BIND(?war1 AS ?war)
}
```",3,3,4,2,2,3,3,71,0,0,9,0,0.0,0
488,41,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?administration ?birthPlace ?deathPlace WHERE {
  # Administration of Emperor Go-Yōzei
  OPTIONAL {
    ?emperor rdfs:label ""Go-Yōzei""@en .
    ?emperor dbo:reign ?administration .
  }
  
  # Birth place of a commander in the Boshin War
  OPTIONAL {
    ?commander rdfs:label ?labelCommander .
    FILTER(CONTAINS(LCASE(?labelCommander), ""boshin war"") && CONTAINS(LCASE(?labelCommander), ""commander""))
    ?commander dbo:birthPlace ?birthPlace .
  }
  
  # Death place of Yūki Hideyasu's father (a politician)
  OPTIONAL {
    ?yuki rdfs:label ""Yūki Hideyasu""@en .
    ?yuki dbo:father ?father .
    ?father a dbo:Politician ;
            dbo:deathPlace ?deathPlace .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
767,31,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert.",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?entity WHERE {
  # Find Dustin Lynch's residence or administrative settlement
  ?dustinLynch dbo:birthPlace ?place1 .
  FILTER (CONTAINS(LCASE(?dustinLynch), ""dustin lynch""))

  OPTIONAL { ?place1 dbo:administrativeUnit ?entity . }

  # Find Carl L. Nippert's alma mater
  ?carlNippert dbo:almaMater ?place2 .
  FILTER (CONTAINS(LCASE(?carlNippert), ""carl l. nippert""))

  OPTIONAL { ?place2 dbo:administrativeUnit ?entity . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
994,34,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find the associated musical artist of Watchtower
  ?watchtower dbo:associatedBand ?artist1 .
  
  # Step 2: Find the associated musical artist of that artist
  OPTIONAL { ?artist1 dbo:associatedBand ?artist2 . }
  
  # Step 3: Identify Don Dokken's band member and check association
  ?dokkenMember dbo:member ?donDokken ;
               dbo:associatedBand ?artist2 .
  
  # Ensure the labels are correct for Watchtower, Don Dokken, and their members
  FILTER (lang(?watchtowerLabel) = 'en' && str(?watchtowerLabel) = ""Watchtower"")
  FILTER (lang(?dokkenLabel) = 'en' && str(?dokkenLabel) = ""Don Dokken"")
  
  # Bind labels for clarity in results
  ?watchtower rdfs:label ?watchtowerLabel .
  ?donDokken rdfs:label ?dokkenLabel .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
251,12,val,Give me the death place of Laura Mancinelli and location of Battle of Marengo and administration of Forza Italia (2013).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?person rdfs:label ""Laura Mancinelli""@en .
  ?person dbo:deathPlace ?deathPlace .
}

UNION

SELECT ?location WHERE {
  ?battle rdfs:label ""Battle of Marengo""@en .
  ?battle dbp:location ?location .
}

UNION

SELECT ?head WHERE {
  ?party rdfs:label ""Forza Italia (2013)""@en .
  ?party dbo:head ?head .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
659,33,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?unit rdfs:label ""Polish Horse""@en .
  ?campaign rdfs:label ""German campaign of 1813""@en .
  ?campaign dbo:commander ?commander .
  ?unit dbo:commander ?commander .
}
```",4,8,5,3,2,3,3,71,0,0,30,0,0.0,0
547,42,val,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?childRestingPlace ?knightRestingPlace ?simonCadellRestingPlace WHERE {
  # Resting place of the child of James Burton (property developer)
  ?jamesBurton rdfs:label ""James Burton (property developer)""@en .
  ?jamesBurton dbo:child ?child .
  OPTIONAL { ?child dbo:deathPlace ?childRestingPlace . }

  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?knightAward rdfs:label ""Knight Grand Cross of the Order of St Michael and St George""@en .
  ?person dbo:award ?knightAward .
  OPTIONAL { ?person dbo:deathPlace ?knightRestingPlace . }

  # Resting place of Simon Cadell
  ?simonCadell rdfs:label ""Simon Cadell""@en .
  OPTIONAL { ?simonCadell dbo:deathPlace ?simonCadellRestingPlace . }
}
```",5,5,6,2,3,3,3,71,0,5,1,0.0,0.0,0
9,29,val,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMaterJohnAlderdice WHERE {
  ?johnAlderdice rdfs:label ""John Alderdice, Baron Alderdice""@en .
  ?johnAlderdice dbo:almaMater ?almaMaterJohnAlderdice .
}

UNION

SELECT ?almaMaterRoyalMedalist WHERE {
  ?person rdfs:label ?name .
  ?person dbo:almaMater ?almaMaterRoyalMedalist .
  ?person dbo:honoraryTitle ""Royal Medal"" .
  ?person dbo:affiliation <http://dbpedia.org/resource/Queen's_University_Belfast> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,30,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMaterAllenHill ?almaMaterJohnAlderdice ?nickname WHERE {
  # Alma mater of Allen Hill (Scientist)
  ?allenHill dbo:almaMater ?almaMaterAllenHill .
  ?allenHill rdfs:label ""Allen Hill (scientist)""@en .

  # Alma mater of John Alderdice, Baron Alderdice
  ?johnAlderdice dbo:almaMater ?almaMaterJohnAlderdice .
  ?johnAlderdice rdfs:label ""John Alderdice, Baron Alderdice""@en .

  # Nickname of Queen's University Belfast
  ?university rdfs:label ?nickname .
  FILTER(CONTAINS(LCASE(?nickname), ""queen's university belfast""))
}
```",4,4,5,2,3,3,3,71,1,28,0,0.034482758620689655,1.0,0.06666666666666667
492,20,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?conflict WHERE {
  ?person rdfs:label ""Frédéric-Georges Herr""@en .
  ?person dbo:decedent ?conflict .
  FILTER EXISTS { ?conflict dbo:placeOfBirth ?location . 
                 ?location rdfs:label ""French Algeria""@en }
  OPTIONAL { ?conflict dbo:commander ?person }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
9,18,val,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?university WHERE {
  ?john dbo:almaMater ?university .
  ?allen dbo:almaMater ?university .
  
  ?john rdfs:label ""John Alderdice""@en .
  ?allen rdfs:label ""Allen Hill (scientist)""@en .

  FILTER(?university = <http://dbpedia.org/resource/Queen's_University_Belfast>)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
378,29,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?claimToFame ?peninsularWarRole ?warOfCarlPontusGahnRole WHERE {
  # Claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  ?person rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  OPTIONAL { ?person dbo:claimToFame ?claimToFame . }

  # Role in the Peninsular War
  ?peninsularWar rdfs:label ""Peninsular War""@en .
  OPTIONAL {
    ?person dbo:commanderOf ?peninsularWarRole .
    FILTER(?peninsularWarRole = ?peninsularWar)
  }
  
  # Involvement in any war related to Carl Pontus Gahn
  ?carlPontusGahn rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL {
    ?war rdfs:label ?warLabel .
    ?person dbo:commanderOf ?war .
    ?carlPerson dbo:commanderOf ?war .
    FILTER(?carlPerson = ?carlPontusGahn)
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
10,15,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?person rdfs:label ""Matt Colton""@en .
  ?person a dbo:Musician ; 
          dbo:associatedMusicalArtist ?associatedArtist .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
378,39,val,"Give me the war of Joaquín Blake and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war ?joaquinBlakeFame ?thomasTriggeEvent WHERE {
  ?joaquinBlake a dbo:MilitaryPerson ;
                rdfs:label ""Joaquín Blake""@en .
  ?joaquinBlake dbo:participatedIn ?war ;
                dbo:claimToFame ?joaquinBlakeFame .

  ?thomasTrigge a dbo:MilitaryPerson ;
                rdfs:label ""Thomas Trigge""@en .
  ?thomasTrigge dbo:participatedIn ?war ;
                dbo:event ?thomasTriggeEvent .

  FILTER(?thomasTriggeEvent = ?joaquinBlakeFame)
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
994,18,val,Give me the associated musical artist of Red Tide (band) and band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist1 ?bandMember1 ?artist2 ?bandMember2 WHERE {
  # Associated musical artist of Red Tide (band)
  ?redTideBand rdfs:label ""Red Tide""@en .
  ?redTideBand dbo:associatedBand ?artist1 .

  OPTIONAL {
    # Band member of Don Dokken
    ?dokkenBand rdfs:label ""Dokken""@en .
    ?dokkenBand dbo:bandMember ?bandMember1 .
  }

  OPTIONAL {
    # Associated musical artist of S.A. Slayer
    ?saSlayerBand rdfs:label ""S.A. Slayer""@en .
    ?saSlayerBand dbo:associatedBand ?artist2 .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
783,12,val,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist ?bandMember WHERE {
  # Find Appietus's associated musical artist
  ?appietus rdfs:label ""Appietus""@en .
  ?appietus dbo:associatedMusicalArtist ?associatedArtist .

  # Find Priscilla Opoku-Kwarteng's birth information and ensure she is an artist and a musical artist
  ?priscilla rdfs:label ""Priscilla Opoku-Kwarteng""@en .
  ?priscilla dbo:birthPlace ?birthPlace .
  
  OPTIONAL {
    ?priscilla dbo:bandMember ?bandMember .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
485,19,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query to find the birth place of Thomas Warner (poet)
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Thomas Warner""@en .
  ?person dbo:occupation dbo:Poet .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query to find countries in the Western European Time zone
SELECT ?country WHERE {
  ?country a dbo:Country ;
           dbp:timeZone ""Europe/London"" .
}

UNION

# Query to find an entity in Nottinghamshire
SELECT ?entity WHERE {
  ?entity rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""nottinghamshire""))
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
427,37,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fatherParty ?prodiParty WHERE {
  # Find a notable alumnus of MIT and their father's political party
  ?alumnus dbo:alumniOf dbpedia:Massachusetts_Institute_of_Technology .
  OPTIONAL { 
    ?alumnus foaf:parent ?father .
    ?father dbo:party ?fatherParty .
  }

  # Find Romano Prodi's political party
  dbpedia:Romano_Prodi dbo:party ?prodiParty .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
378,24,val,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?fame WHERE {
  ?person rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  
  # Find wars he commanded during the Peninsular War
  OPTIONAL { 
    ?person dbo:commander ?war .
    FILTER(CONTAINS(LCASE(STR(?war)), ""peninsular war""))
  }
  
  # Find his claim to fame (notable achievements or recognitions)
  OPTIONAL {
    ?person dbo:knownFor ?fame .
  }
}
```",3,3,4,2,2,3,3,71,2,0,0,1.0,1.0,1.0
617,11,val,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of Mieszko II Lambert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  ?boleslausI rdfs:label ""Boleslaus I, Duke of Bohemia""@en .
  
  ?boleslausI dbo:child ?child .
  
  ?child dbo:child ?grandchild .
  
  OPTIONAL { ?grandchild dbo:royalTitle ?title . FILTER (BOUND(?title)) }
  
  ?grandchild dbo:parent ?mieszkoII .
  ?mieszkoII rdfs:label ""Mieszko II Lambert""@en .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
659,22,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?militaryForce WHERE {
  ?person rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  ?campaign dbo:militaryConflict ?conflict ;
            rdf:type dbo:MilitaryCampaign .
  ?conflict dbo:commander ?person ;
            dbo:name ""German campaign of 1813""@en .
  ?conflict dbo:militaryForce ?militaryForce .
}
```",3,6,4,2,2,3,3,71,0,0,7,0,0.0,0
281,37,val,"Give me the war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war WHERE {
  ?election dbo:year ""1962"" ;
            dbo:state dbr:New_South_Wales ;
            dbo:leader ?leader .
  
  ?leader rdf:type dbo:Politician .

  OPTIONAL { 
    ?leader dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:Country .
  }

  ?war dbo:participatedIn [
      a dbo:MilitaryConflict ;
      dbo:country ?birthPlace ;
      dbo:army dbr:New_Zealand_Army
  ] .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
378,37,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war WHERE {
  ?person rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  ?person dbo:commander ?war .
  ?war a dbo:MilitaryConflict ;
       rdfs:seeAlso <http://dbpedia.org/resource/Peninsular_War> .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,20,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist WHERE {
  ?person rdfs:label ""Jim Sheppard""@en .
  ?person dbo:bandMember ?nevermore .
  ?nevermore rdfs:label ""Nevermore""@en .
  
  OPTIONAL { 
    ?person dbo:associatedBand ?artist .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
54,41,val,Give me the parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  # Narapati I of Ava's child and their parent
  ?narapatiI dbo:child ?childNarapati .
  ?childNarapati dbo:parent ?parent .

  # Soe Min Wimala Dewi's father and his other child
  ?soeMinWimalaDewi dbo:father ?fatherSoeMin .
  ?fatherSoeMin dbo:child ?otherChild .
  
  # Ameitta Thiri Maha Dhamma Dewi's predecessor
  ?ameittaThiriMahaDhammaDewi dbo:predecessor ?predecessor .

  # Ensure the child of Narapati I and the other child are the same person
  FILTER (?childNarapati = ?otherChild)

  # Ensure the parent is also related to Ameitta Thiri Maha Dhamma Dewi's predecessor
  OPTIONAL { ?parent dbo:predecessor ?predecessor }
}
```",5,5,6,2,3,3,3,71,0,3,1,0.0,0.0,0
251,14,val,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?location ?partyName WHERE {
  # Part 1: Location of the Battle of Marengo
  dbpedia:Battle_of_Marengo dbo:location ?location .

  # Part 2: Ruling party in Sicily that is a political party and an organization
  ?party a dbo:PoliticalParty ;
        dbo:country <http://dbpedia.org/resource/Italy/Sicily> ;
        rdfs:label ?partyName .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
712,13,val,"Give me the capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?capital WHERE {
  ?militaryForce rdfs:label ""Vyoshenskaya Uprising""@en .
  ?militaryForce dbo:organization ?organization .
  ?militaryForce dbo:militaryUnit ?unit .
  ?organization dbo:country ?country .
  OPTIONAL { ?unit dbo:country ?country . }
  ?country dbo:capital ?capital .
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
9,31,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?allenHillAlmaMater ?mayorAlmaMater WHERE {
  # Alma mater of Allen Hill (scientist)
  ?person rdfs:label ""Allen Hill""@en .
  ?person dbo:occupation dbo:Scientist .
  OPTIONAL { ?person dbo:almaMater ?allenHillAlmaMater . }

  # Organization in Belfast with a mayor
  ?organization dbo:locationCity ?city .
  ?city rdfs:label ""Belfast""@en .
  OPTIONAL { ?organization dbo:mayor ?mayor . }
  
  # Alma mater of the mayor
  OPTIONAL { ?mayor dbo:almaMater ?mayorAlmaMater . }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,33,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?decedent WHERE {
  ?battle rdfs:label ""Battle of Verdun""@en .
  ?battle dbo:commander ?verdunCommander .

  ?verdunCommander dbo:decedent ?decedent .
  
  ?war dbo:commander ?decedent ;
       dbo:event _:event ;
       dbo:militaryConflict _:conflict ;
       dbo:location ?location .

  ?location rdfs:label ""French Algeria""@en .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,36,val,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?person rdfs:label ""Romano Prodi""@en .
  ?person dbo:birthName ?birthName .
  FILTER(CONTAINS(LCASE(?birthName), LCASE(""romano prodi"")))
  
  OPTIONAL { ?person dbo:officeHolder ?office . }
  OPTIONAL { ?person dbo:partyAffiliation ?party . }

  FILTER EXISTS {
    ?party rdfs:label ""Partito Popolare Italiano""@en .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
778,14,val,"Give me the author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?softwareAuthor WHERE {
  ?command1 rdfs:label ""pushd""@en .
  ?command2 rdfs:label ""popd""@en .
  ?command1 dbo:creator ?author .
  ?command2 dbo:creator ?author .
  
  ?work dbo:creator ?author .
  ?work rdf:type dbo:Software .
  
  ?softwareWork dbo:creator ?softwareAuthor .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
959,29,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?person rdfs:label ""Yōichi Masuzoe""@en .
  ?person dbo:almaMater ?university .
  ?university rdfs:label ""University of Tsukuba""@en .
  ?person dbp:managerOfSeason ?season .
  ?season dbp:team ""Júbilo Iwata""@en ;
          dbp:year ""2013""^^xsd:gYear .
  ?person dbo:residence ?residence .
  ?residence dbo:country ?country .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
820,12,val,Give me the professional in  and child of the parent of Jason Schwartzman.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?professional ?child WHERE {
  ?jason rdf:type dbo:Person ;
         rdfs:label ""Jason Schwartzman""@en .
  
  ?parent dbo:spouse ?jason ;
          dbo:child ?sibling .

  FILTER(?sibling != ?jason)

  OPTIONAL { ?sibling dbo:profession ?professional . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
801,18,val,Give me the professional in  and producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?producer ?profession WHERE {
  ?song rdfs:label ""Westside Story (song)""@en .
  ?song dbo:producer ?producer .
  
  OPTIONAL { 
    ?producer dbo:profession ?profession .
  }
}

UNION

SELECT DISTINCT ?artist WHERE {
  ?person rdfs:label ""Chris Taylor (music producer)""@en .
  ?person dbo:associatedMusicalArtist ?artist .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
184,20,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?grandchild ?parent WHERE {
  # Find a child of Archduke Joseph Karl of Austria
  ?child dbo:childOf ?archduke .
  FILTER (str(?archduke) = ""Archduke_Joseph_Karl_of_Austria"") .

  # Find the grandchild of Archduke Joseph Karl of Austria
  ?grandchild dbo:childOf ?child .

  # Find the parent of Géza von Habsburg
  ?parent dbo:childOf ?geza .
  FILTER (str(?geza) = ""G%C3%A9za_von_Habsburg"") .

  # Match the grandchild with the parent to find the common person
  FILTER (?grandchild = ?parent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,28,val,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi rdfs:label ""Soe Min Wimala Dewi""@en .
  ?father dbo:child ?soeMinWimalaDewi .

  # Find Ameitta Thiri Maha Dhamma Dewi's predecessor
  OPTIONAL {
    ?ameittaThiriMahaDhammaDewi rdfs:label ""Ameitta Thiri Maha Dhamma Dewi""@en .
    ?predecessor dbo:successor ?ameittaThiriMahaDhammaDewi .
  }

  # Find Thado Minsaw's parent
  OPTIONAL {
    ?thadoMinsaw rdfs:label ""Thado Minsaw""@en .
    ?parent dbo:child ?thadoMinsaw .
  }

  # The person we are looking for must satisfy all conditions
  ?person = ?father ;
           = ?predecessor ;
           = ?parent .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
161,21,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?force WHERE {
  ?franco rdfs:label ""Francisco Franco""@en .
  ?campaign rdfs:label ""Biscay Campaign""@en .
  
  ?franco dbo:commander ?force .
  ?force dbo:participatedIn ?campaign .

  FILTER (isLiteral(?franco) && isLiteral(?campaign))
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
435,13,val,"Give me the region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?gmtRegion ?administeredTerritory WHERE {
  ?country rdfs:label ""Land of fire and ice""@is .
  ?country dbo:timeZone ?timezone .
  ?timezone rdfs:label ""Greenwich Mean Time""@en .
  OPTIONAL { ?country dbo:governmentCountry ?administeredTerritory . }
  BIND(""GMT Region"" AS ?gmtRegion)
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
54,40,val,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?individual WHERE {
  # Thinkhaya of Pagan's grandchild and their parent
  ?thinkhayasChild dbo:parent ?grandparent .
  ?thinkhayasChild dbo:child ?thinkhayaGrandchild .
  ?thinkhayaGrandchild dbo:parent ?individual .

  # Individual is the parent of Thado Minsaw of Prome
  ?thadoMinsaw rdfs:label ""Thado Minsaw""@en .
  ?thadoMinsaw dbo:parent ?individual .

  # Individual is predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameittaThiri rdfs:label ""Ameitta Thiri Maha Dhamma Dewi""@en .
  ?ameittaThiri dbo:predecessor ?individual .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,37,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  ?prieto rdfs:label ""Indalecio Prieto""@en .
  ?prieto dbo:predecessor ?predecessor .
  
  ?predecessor dbo:militaryConflict ?conflict .
  FILTER(CONTAINS(LCASE(STR(?conflict)), ""biscay campaign"")) .

  OPTIONAL { 
    ?predecessor dbo:commanderOf ?militaryForce .
  }
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
421,14,val,Give me the native of the birthplace of Samir Bekrić and band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?native WHERE {
  ?samir dbo:birthPlace ?place .
  FILTER (str(?samir) = ""Samir Bekrić"")
  
  OPTIONAL { 
    ?person dbo:nativeOf ?place .
    ?person rdfs:label ?native .
    FILTER (lang(?native) = 'en')
  }
  
  OPTIONAL {
    ?bandMember dbo:bandMember ?senidahBand .
    ?senidahBand rdfs:label ""Senidah""@en .
    ?bandMember rdfs:label ?native .
    FILTER (?person = ?bandMember)
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
9,25,val,Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?nickname ?almaMater WHERE {
  # Query for the nickname of Queen's University Belfast
  ?university rdfs:label ""Queen's University Belfast""@en .
  OPTIONAL { ?university dbo:commonName ?nickname . }

  # Query for Allen Hill's alma mater
  ?scientist rdfs:label ""Allen Hill (scientist)""@en .
  OPTIONAL { ?scientist dbo:almaMater ?almaMater . }
  
  FILTER (?nickname = ?almaMater)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,43,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse ?royalChild ?parentOfRoyalChild ?parentOfPrinceGeorgeWilliam ?childOfErnestAugustus
WHERE {
  # Princess Victoria Louise of Prussia's spouse
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?spouse .

  # Child of her spouse who is a royalty
  OPTIONAL { 
    ?spouse dbo:child ?royalChild .
    ?royalChild rdf:type dbo:RoyalFamilyMember .
  }

  # Parent of this royal child
  OPTIONAL {
    ?royalChild dbo:parent ?parentOfRoyalChild .
  }

  # Prince George William of Hanover's parent
  ?prince rdfs:label ""Prince George William of Hanover""@en .
  ?prince dbo:parent ?parentOfPrinceGeorgeWilliam .

  # Child of Ernest Augustus, Crown Prince of Hanover
  ?ernestAugustus rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .
  ?ernestAugustus dbo:child ?childOfErnestAugustus .
}
```",5,7,6,3,3,3,3,71,1,57289,0,1.7455053237912374e-05,1.0,3.4909497128693856e-05
959,26,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nativeCountry WHERE {
  ?politician dbo:office ?office .
  ?office dbo:electionYear ""2010""^^xsd:gYear .
  ?office dbo:country dbc:Japan .
  ?politician rdf:type dbo:Politician .
  
  OPTIONAL { 
    ?politician dbo:residence ?residence .
    ?residence rdf:type dbo:Country .
  }
  
  ?politician dbo:nationality ?nativeCountry .
}
```",3,5,4,3,1,3,3,71,0,0,8419,0,0.0,0
391,42,val,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  # Find actors of ""The Departed""
  ?departedMovie rdfs:label ""The Departed""@en .
  ?departedMovie dbo:starring ?actor .

  # Identify notable figure from Hub City (Columbia, SC)
  ?hubCityPerson dbo:nativePlace/resource <http://dbpedia.org/resource/Columbia,_South_Carolina> .
  
  # Check if the actor is the same as the notable person
  FILTER (?actor = ?hubCityPerson)

  # Find works involving Roz Ryan that are movies or TV shows
  ?work rdfs:label ?title .
  ?work dbo:starring ?actor .
  OPTIONAL { ?work dbo:writer <http://dbpedia.org/resource/Roz_Ryan> }
  
  # Ensure the work is a movie or television show
  FILTER EXISTS { ?work rdf:type/rdfs:subClassOf* dbo:Film . } 
  FILTER EXISTS { ?work rdf:type/rdfs:subClassOf* dbo:TelevisionShow . }

}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
378,22,val,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war ?commander ?claimToFame WHERE {
  # Part 1: Find the war Carl Pontus Gahn was involved in
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL { 
    ?person dbo:participatedIn ?war .
  }

  # Part 2: Identify the commander of the Great Siege of Gibraltar and their claim to fame
  ?siege rdfs:label ""Great Siege of Gibraltar""@en .
  ?siege dbo:commander ?commander .
  OPTIONAL {
    ?commander rdfs:comment ?claimToFame .
  }
}
```",3,3,4,2,2,3,3,71,0,14,2,0.0,0.0,0
232,37,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  ?person a dbo:Actor ;
          dbo:nativePlace ?place ;
          dbo:occupation ?occupation .
  
  FILTER (?place = dbpedia:London)
  FILTER CONTAINS(?occupation, ""Actor"")
  FILTER CONTAINS(?occupation, ""Narrator"")
  FILTER CONTAINS(?occupation, ""Producer"")

  ?person dbo:famousFor ?claimToFame .

  ?film a dbo:Film ;
        dbo:subject ?militaryConflict .
  
  ?claimToFame rdfs:label ?filmLabel .
  FILTER (CONTAINS(LCASE(?filmLabel), ""film"") && CONTAINS(LCASE(?filmLabel), ""conflict""))

  ?film dbo:actor ?actor .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
959,28,val,"Give me the native of Japan and manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?person rdfs:label ""Eiji Ōtsuka""@en .
  ?person dbo:nationality ?nationality .
  FILTER (CONTAINS(LCASE(?nationality), ""japan""))
  
  OPTIONAL { 
    ?person dbo:manager [
      dbo:team <http://dbpedia.org/resource/Júbilo_Iwata> ;
      dbo:season ""2013""^^xsd:string
    ] .
  }
  
  ?person dbo:almaMater ?almaMater .
  ?almaMater a dbo:University ;
             rdfs:label ?universityLabel .
  FILTER (CONTAINS(LCASE(?universityLabel), ""japan""))
}
```",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
232,40,val,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor ?child WHERE {
  # Find the actor(s) of ""Dog Soldiers""
  ?movie rdfs:label ""Dog Soldiers""@en .
  ?movie dbo:starring ?actor .

  # Identify Jon Pertwee's birth name
  ?jonPertwee rdfs:label ""Jon Pertwee""@en .
  ?jonPertwee dbo:birthName ?birthName .

  # Find Jon Pertwee's children and filter by those native of London
  ?jonPertwee dbo:child ?child .
  ?child dbo:birthPlace ?place .
  FILTER(CONTAINS(LCASE(?place), ""london""))
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
77,11,val,Give me the force of Alexander I of Russia and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?war WHERE {
  # Alexander I's force
  ?alexander rdfs:label ""Alexander I""@en .
  ?alexander dbo:commander ?force .

  # Golden Weapon for Bravery and associated wars
  ?award rdfs:label ""Golden Weapon for Bravery""@en .
  ?recipient dbo:awarded ?award ;
             dbo:awardedDuring ?war .
}
```",3,3,4,2,2,3,2,20,0,0,11,0,0.0,0
959,33,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?native WHERE {
  # Step 1: Identify the politician from the 2010 Japanese House of Councillors election
  ?politician dbo:election ?election .
  ?election rdfs:label ""House of Councillors (Japan)""@en .
  ?election dbp:date ""2010""^^xsd:gYear .

  # Step 2: Ensure the politician is associated with University of Tsukuba
  ?politician dbo:almaMater ?university .
  ?university rdfs:label ""University of Tsukuba""@en .

  # Step 3: Find the residence country of the politician
  ?politician dbo:residenceCountry ?country .

  # Step 4: Identify natives of this country
  ?native dbo:nationality ?country .
  
  FILTER (lang(?election) = 'en' && lang(?university) = 'en')
}
```",4,6,5,3,2,3,3,71,0,0,84,0,0.0,0
16,29,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Satomi Ishihara's profession
  ?satomi dbo:profession ?profession .
  FILTER (str(?satomi) = ""Satomi_Ishihara"")

  # Georgeanne Marie Rice's birth name
  ?rice foaf:name ""Georgeanne Marie Rice""@en .
  
  # Ted McGinley's spouse
  ?ted dbo:spouse ?professional .

  # Ensure the professional matches all criteria
  FILTER (str(?profession) = str(?rice))
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
427,44,val,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherParty ?prodiParty WHERE {
  # Find Lamberto Andreotti's father and his party affiliation
  ?lamberto dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .

  # Find Romano Prodi, ensure he is an office holder and politician, then get his party affiliation
  ?prodi rdfs:label ""Romano Antonio Prodi""@en .
  ?prodi dbo:officeHolder true .
  ?prodi dbo:partyAffiliation ?prodiParty .

  # Optional filter to reference Partito Popolare Italiano
  OPTIONAL {
    ?fatherParty rdfs:label ""Partito Popolare Italiano""@it .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
666,13,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?playerInManager WHERE {
  ?team a dbo:SoccerClub ;
        a dbo:SportsTeamSeason .
  ?manager rdfs:label ""Leonid Slutsky""@en .
  ?manager dbo:manager ?team .
  ?team dbo:playerInManager ?playerInManager .
}
```",3,6,4,3,1,3,2,20,0,0,28,0,0.0,0
801,43,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?professional WHERE {
  ?song rdf:type dbo:Song .
  ?song dbo:producer ?professional .
  ?professional rdf:type dbo:MusicalArtist ;
                dbo:genre ?genre .
  FILTER (CONTAINS(LCASE(?genre), ""rapper"")) .
  
  ?associatedArtists dbo:associatedMusicalArtist ?professional .
  ?associatedArtists rdfs:label ""Chris Taylor""@en .

}
```",5,9,6,3,3,3,3,71,0,0,2,0,0.0,0
767,19,val,"Give me the entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?entity WHERE {
  ?green rdfs:label ""Green""@en .
  ?green dbo:administrativeUnit ?entity .
  ?entity rdf:type dbo:Settlement .
  ?nippert dbo:almaMater ?entity .
  ?nippert rdfs:label ""Carl L. Nippert""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
427,35,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?ippReference WHERE {
  dbr:Romano_Prodi dbo:politicalParty ?party .
  
  OPTIONAL {
    ?party rdfs:label ?partyLabel .
    FILTER(CONTAINS(LCASE(?partyLabel), ""italian people's party (1994)""))
    BIND(""Italian People's Party (1994)"" AS ?ippReference)
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,26,val,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse WHERE {
  ?antiochusIV rdfs:label ""Antiochus IV""@en .
  ?antiochusIV dbo:successor ?successor .
  
  ?successor dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  ?royalChild dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
9,19,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?allenHillAlmaMater ?mayorAlmaMater WHERE {
  # Alma mater of Allen Hill (Scientist)
  ?person rdfs:label ""Allen Hill""@en .
  FILTER NOT EXISTS { ?person dbo:occupation ?occupation . FILTER(?occupation != dbpedia:Scientist) }
  OPTIONAL { ?person dbo:almaMater ?allenHillAlmaMater }

  # Alma mater of the Mayor associated with Northern Ireland Forum
  ?mayor rdfs:label ?mayorLabel .
  ?mayor dbo:officeHolder ?office .
  ?office dbo:position ""Mayor""@en ;
          dbo:organization dbpedia:Northern_Ireland_Forum .
  OPTIONAL { ?mayor dbo:almaMater ?mayorAlmaMater }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
281,24,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthCountry ?war WHERE {
  # Find Bob Heffron's birth place that is a country
  ?heffron dbo:birthPlace ?place .
  FILTER (CONTAINS(LCASE(?heffron), ""bob heffron""))
  
  OPTIONAL { 
    ?place rdf:type dbo:Country .
    ?place rdfs:label ?birthCountryLabel .
    FILTER (LANG(?birthCountryLabel) = 'en')
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?birthCountryLabel), "" "", ""_""))) AS ?birthCountry)
  }
  
  # Find the war involving New Zealand Army
  ?nzArmy dbo:participatedIn ?war .
  FILTER (CONTAINS(LCASE(?nzArmy), ""new zealand army""))
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
994,43,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?meshuggahArtist ?slayerArtist WHERE {
  # Find Fredrik Thordendal's band (Meshuggah)
  ?thordendal dbo:memberOfBand ?meshuggah .
  ?meshuggah rdfs:label ""Meshuggah""@en .

  # Find associated musical artists of Meshuggah
  OPTIONAL { 
    ?meshuggahArtist dbo:associatedMusicalArtist ?meshuggah ;
                     dbp:name ?artistName .
  }

  # Find S.A. Slayer's band (Slayer)
  ?slayerMember dbo:memberOfBand ?slayer .
  ?slayer rdfs:label ""Slayer""@en .

  # Find associated musical artists of Slayer
  OPTIONAL { 
    ?slayerArtist dbo:associatedMusicalArtist ?slayer ;
                  dbp:name ?artistName .
  }

  # Find Don Dokken's band (Dokken)
  ?dokkenMember dbo:memberOfBand ?dokken .
  ?dokken rdfs:label ""Dokken""@en .

  # Bind Fredrik Thordendal, S.A. Slayer, and Don Dokken
  VALUES ?thordendal { <http://dbpedia.org/resource/Fredrik_Thordendal> }
  VALUES ?slayerMember { <http://dbpedia.org/resource/S._A._Slayer> }
  VALUES ?dokkenMember { <http://dbpedia.org/resource/Don_Dokken> }
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
701,32,val,Give me the parent of the child of Nefertari and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?parentNefertariChild ?parentRamessesIIChild WHERE {
  # Find Nefertari's children and their parents
  ?childNefertari dbo:mother dbr:Nefertari .
  ?childNefertari dbo:parent ?parentNefertariChild .

  # Find Ramesses II's children and their parents
  ?childRamessesII dbo:father dbr:Ramesses_II .
  ?childRamessesII dbo:parent ?parentRamessesIIChild .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
55,18,val,"Give me the band of the reference, that is a band, to Newsted and band member of Metallica.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?band WHERE {
  ?newsted rdfs:label ""Jason Newsted""@en .
  ?newsted dbo:member ?band .
  
  OPTIONAL { 
    ?metallica rdfs:label ""Metallica""@en .
    ?metallica dbo:member ?newsted .
  }
}
```",3,4,4,2,2,2,3,28,0,0,3,0,0.0,0
92,25,val,Give me the band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band ?associatedArtist WHERE {
  # Query for Joe Satriani's band
  ?satriani rdfs:label ""Joe Satriani""@en .
  ?satriani dbo:band ?band .

  OPTIONAL {
    # Query for Jim Sheppard's associated musical artist
    ?sheppard rdfs:label ""Jim Sheppard""@en .
    ?sheppard dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,36,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryUnit WHERE {
  ?person rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .
  ?person dbo:officeHolder ?office .
  ?person dbo:politician ?politics .
  ?person dbo:militaryService ?service .
  ?service dbp:army ""New Zealand Army"" .
  ?service dbo:militaryUnit ?militaryUnit .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,39,val,"Give me the actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actorOfDeparted ?actorOfWorkAndShow WHERE {
  # Part 1: Actor of ""The Departed""
  ?departed rdfs:label ""The Departed""@en .
  ?departed dbo:starring ?actorOfDeparted .

  # Part 2: Actor of a movie that is both a work and a television show
  ?work rdf:type dbo:Film ;
        rdf:type dbo:TelevisionShow ;
        dbo:starring ?actorOfWorkAndShow .
}
```",4,7,5,3,2,3,3,71,7,12274,0,0.0005699861574790326,1.0,0.0011393229166666665
767,41,val,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater ?settlement WHERE {
  # Find George K. Nash's alma mater
  ?nash a dbo:Person ;
        rdfs:label ""George K. Nash""@en .
  
  OPTIONAL { 
    ?nash dbo:almaMater ?almaMater .
  }
  
  # Find an entity in his administration that is a settlement
  OPTIONAL {
    ?position dbo:agent ?nash ;
              dbo:place ?settlement .
    
    FILTER (?settlement a dbo:Settlement)
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
659,44,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?militaryForce ?commander1 ?commander2 WHERE {
  # Rutger Jan Schimmelpenninck's military force
  ?person rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  ?person dbo:militaryService ?service .
  ?service dbo:force ?militaryForce .
  
  # Commander of the military force associated with Rutger Jan Schimmelpenninck
  ?commander1 dbo:commanded ?militaryForce .

  # 1st Light Cavalry Lancers Regiment's involvement in a war
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  ?regiment dbo:participatedIn ?war .
  
  # Commander during the German campaign of 1813
  ?campaign rdfs:label ""German campaign of 1813""@en .
  ?commander2 dbo:commanded ?regiment ;
              dbo:participatedIn ?campaign .

}
```",5,10,6,2,3,3,3,71,0,0,7,0,0.0,0
528,32,val,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?warPisagua ?militaryForce ?warAte ?commander WHERE {
  # Battle of Pisagua
  ?pisagua rdfs:label ""Battle of Pisagua""@en .
  ?pisagua dbo:partOf ?warPisagua .
  OPTIONAL { ?pisagua dbo:militaryUnit ?militaryForce . }

  # Battle of La Rinconada de Ate
  ?ate rdfs:label ""Battle of La Rinconada de Ate""@en .
  ?ate dbo:partOf ?warAte .
  OPTIONAL { ?ate dbo:commander ?commander . }
}
```",4,4,5,2,2,3,3,71,0,0,8,0,0.0,0
294,12,val,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?leaRestingPlace ?keebleRestingPlace WHERE {
  ?lea dbo:birthDate ?leaBirth .
  FILTER (YEAR(?leaBirth) = 1879)
  ?lea dbo:deathPlace ?leaRestingPlace .
  
  ?keeble dbo:deathPlace ?keebleRestingPlace .

  # Ensure the individuals are Luke Lea and Edwin A. Keeble
  ?lea rdfs:label ""Luke Lea""@en .
  ?keeble rdfs:label ""Edwin A. Keeble""@en .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
48,15,val,"Give me the band of Murda Mook and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?murdaMookBand ?shellbackWriterBand WHERE {
  # Find Murda Mook's band
  ?murdaMook dbo:member ?band .
  ?band rdfs:label ""Murda Mook""@en .

  # Find a work by Shellback and its writer
  ?work dbo:producer ?shellback ;
        dbo:writer ?writer .
  ?shellback rdfs:label ""Shellback (record producer)""@en .

  # Find the band of the writer
  ?writer dbo:member ?band2 .
  
  BIND(?band AS ?murdaMookBand)
  BIND(?band2 AS ?shellbackWriterBand)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
547,40,val,Give me the resting place of Simon Cadell and resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?restingPlace WHERE {
  # Resting place of Simon Cadell
  { 
    ?simonCadell rdfs:label ""Simon Cadell""@en .
    OPTIONAL { ?simonCadell dbo:finalBurial ?restingPlace . }
    BIND(?simonCadell AS ?person)
  }

  UNION

  # Resting place of Alan Cunningham
  {
    ?alanCunningham rdfs:label ""Alan Cunningham""@en .
    OPTIONAL { ?alanCunningham dbo:finalBurial ?restingPlace . }
    BIND(?alanCunningham AS ?person)
  }

  UNION

  # Resting place of the child of the child of William Haliburton
  {
    ?williamHaliburton rdfs:label ""William Haliburton""@en .
    ?child1 dbo:child ?williamHaliburton .
    ?grandChild dbo:child ?child1 .
    OPTIONAL { ?grandChild dbo:finalBurial ?restingPlace . }
    BIND(?grandChild AS ?person)
  }
}
```",5,5,6,3,3,3,3,71,0,2,1,0.0,0.0,0
994,40,val,Give me the band member of Don Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember ?associatedArtist ?finalAssociatedArtist WHERE {
  # Step 1: Find band members of Don Dokken
  ?dokkenBand dbo:bandMember ?bandMember .
  FILTER(STRSTARTS(STR(?dokkenBand), ""http://dbpedia.org/resource/Don_Dokken""))

  OPTIONAL {
    # Step 2: Find associated musical artist(s) of Red Tide
    ?redTideBand dbo:associatedBand ?associatedArtist .
    FILTER(STRSTARTS(STR(?redTideBand), ""http://dbpedia.org/resource/Red_Tide_(band)""))
    
    OPTIONAL {
      # Step 3: Find associated artists of the above result
      ?artist dbo:associatedBand ?finalAssociatedArtist .
      FILTER(?artist = ?associatedArtist)
      
      OPTIONAL {
        # Step 4: Check if these are related to Watchtower
        ?watchtowerRelation dbo:bandMember ?finalAssociatedArtist ;
                           rdfs:label ""Watchtower""@en .
      }
    }
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,15,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of Alessandro Mangiarratti.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?nickname WHERE {
  # Find clubs or organizations associated with Armando Heeb
  ?heebClub dbo:member ?armandoHeeb .
  ?heebClub dbo:nickname ?nickname .

  # Find clubs or organizations associated with Alessandro Mangiarratti
  ?mangiarrattiTeam dbo:member ?alessandroMangiarratti .
  ?mangiarrattiTeam rdfs:label ?teamLabel .

  FILTER (CONTAINS(LCASE(?teamLabel), ""soccer"") || CONTAINS(LCASE(?teamLabel), ""football""))

  # Ensure the club is a sports club and an organization
  ?heebClub rdf:type dbo:SportsClub .
  ?mangiarrattiTeam rdf:type dbo:Organization .

  # Check if both clubs are the same entity with a nickname
  FILTER (?heebClub = ?mangiarrattiTeam)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,21,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor ?algiersPerson WHERE {
  # Find the successor of Joseph C. Satterthwaite as US Assistant Secretary of State for African Affairs
  ?satterthwaite dbo:title ""Assistant Secretary of State for African Affairs""@en ;
                 dbo:successor ?successor .
  
  # Find a notable person associated with Algiers
  OPTIONAL {
    ?algiersPerson rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""algiers"") || CONTAINS(LCASE(?label), ""algeria""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,16,0,0.0,0
994,21,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Step 1: Find band members of Don Dokken
  ?donDokkenBand rdfs:label ""Don Dokken""@en .
  ?donDokkenBand dbo:bandMember ?bandMember .

  # Step 2: Find associated bands/artists of Watchtower
  ?watchTowerBand rdfs:label ""Watchtower (band)""@en .
  ?watchTowerBand dbo:associatedBand ?associatedBand .

  # Step 3: Check if any band member is associated with the bands found in step 2
  OPTIONAL {
    ?bandMember dbo:associatedBand ?associatedBand .
  }

  # Step 4: Find associated artists of the bands from step 3
  ?associatedBand dbo:associatedArtist ?associatedArtist .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
44,7,val,Give me the band member of the band of John Pettibone and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMemberJohnPettibone ?bandMemberSledgeback WHERE {
  OPTIONAL {
    ?person rdfs:label ""John Pettibone""@en .
    ?person dbo:bandMember ?band1 .
    ?band1 dbo:member ?bandMemberJohnPettibone .
    FILTER(?bandMemberJohnPettibone != ?person)
  }
  
  OPTIONAL {
    ?person2 rdfs:label ""Sledgeback""@en .
    ?person2 dbo:bandMember ?band2 .
    ?band2 dbo:member ?bandMemberSledgeback .
    FILTER(?bandMemberSledgeback != ?person2)
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
645,11,val,"Give me the alma mater of Sylvia Pankhurst and entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater ?country WHERE {
  # Part 1: Alma Mater of Sylvia Pankhurst
  { 
    ?person rdfs:label ""Sylvia Pankhurst""@en .
    ?person dbo:almaMater ?almaMater .
    FILTER NOT EXISTS { ?almaMater a dbo:Country } # Ensure alma mater is not a country
  }
  
  UNION
  
  # Part 2: Country of Residence of James Wilkes Maurice
  {
    ?individual rdfs:label ""James Wilkes Maurice""@en .
    ?individual dbo:residence ?place .
    ?place dbo:country ?country .
    FILTER EXISTS { ?country a dbo:Country } # Ensure the place is categorized as a country
  }
}
```",3,4,4,2,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
712,12,val,Give me the capital of South Russia (1919–1920) and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?capital WHERE {
  # Query for the capital of South Russia (1919–1920)
  ?entity rdfs:label ""South Russia""@en .
  ?entity dbo:governmentHead ?head .
  ?head dbo:officeLocation ?capital .
}

UNION

SELECT DISTINCT ?restingPlace WHERE {
  # Query for a Hero of the Soviet Union's resting place
  ?hero dbo:honoredAs <http://dbpedia.org/resource/Category:Heroes_of_the_Soviet_Union> .
  ?hero dbo:deathPlace ?restingPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
485,17,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in Nottinghamshire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?birthPlace WHERE {
  ?person rdf:type dbo:Writer .
  OPTIONAL { ?person rdf:type dbo:Poet . }
  ?person dbo:award ?award .
  ?award rdfs:label ""Eric Gregory Award""@en .
  ?person dbo:location ?location .
  ?location rdfs:label ""Nottinghamshire""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
488,44,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of Enomoto Takeaki and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?deathPlaceYukiFather ?birthPlaceEnomoto ?administrationGoMizunooFather WHERE {
  # Part 1: Death place of Yūki Hideyasu's father
  ?yuki rdfs:label ""Yūki Hideyasu""@en .
  ?yuki dbo:father ?fatherYuki .
  OPTIONAL { ?fatherYuki dbo:deathPlace ?deathPlaceYukiFather . }

  # Part 2: Birth place of Enomoto Takeaki
  ?enomoto rdfs:label ""Enomoto Takeaki""@en .
  ?enomoto dbo:birthPlace ?birthPlaceEnomoto .

  # Part 3: Administration of Emperor Go-Mizunoo's father
  ?goMizunoo rdfs:label ""Emperor Go-Mizunoo""@en .
  ?goMizunoo dbo:father ?fatherGoMizunoo .
  OPTIONAL { ?office dbo:positionHeldBy ?fatherGoMizunoo .
             ?office rdfs:label ?administrationGoMizunooFather . }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
303,18,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?party WHERE {
  ?person rdfs:label ""Arnulfo Arias Madrid""@en .
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ?placeLabel .
  FILTER (CONTAINS(LCASE(?placeLabel), ""panama""))
  ?person dbo:politician true .
  ?person dbo:partyAffiliation ?party .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,17,val,"Give me the professional in  and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?profession ?band WHERE {
  ?person rdfs:label ""Luke Francis Vibert""@en .
  ?person dbo:birthName ""Luke Francis Vibert"" .
  ?person rdf:type dbo:Artist .
  OPTIONAL { ?person dbo:profession ?profession . }
  OPTIONAL { ?person dbo:bandMember ?band . }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
92,22,val,Give me the band member of Nevermore and band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember ?band WHERE {
  # Part 1: Find a band member of Nevermore
  ?member dbo:bandMember ?nevermore .
  ?nevermore rdfs:label ""Nevermore""@en .

  # Part 2: Find the band associated with Joseph Michael Furney (Warrel Dane)
  OPTIONAL {
    ?person foaf:name ""Joseph Michael Furney"" .
    ?person dbo:bandMember ?band .
  }

  # Bind results
  BIND(?member AS ?bandMember)
  BIND(COALESCE(?band, ""Unknown"") AS ?band)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
251,18,val,Give me the administration of Forza Italia (2013) and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration ?deathPlace WHERE {
  # Part 1: Administration of Forza Italia in 2013
  ?party rdfs:label ""Forza Italia""@en .
  ?party dbo:memberOf ?administration .
  FILTER(YEAR(?administrationStartDate) <= 2013 && YEAR(?administrationEndDate) >= 2013)

  OPTIONAL {
    ?administration dbo:startDate ?administrationStartDate ;
                   dbo:endDate ?administrationEndDate .
  }

  # Part 2: Death place of the author of The Twelve Abbots of Challant
  ?book rdfs:label ""The Twelve Abbots of Challant""@en .
  ?book dbo:author ?author .
  ?author dbo:deathPlace ?deathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,11,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  ?williamErnest rdfs:label ""William Ernest, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?williamErnest dbo:father ?father .

  ?father dbo:child ?child .
  
  ?child a dbo:RoyalFamilyMember ; # Assuming there's a class or property indicating royalty
        dbo:child ?grandchild .

  ?mariaPavlovna rdfs:label ""Maria Pavlovna of Russia (1786–1859)""@en .
  ?mariaPavlovna dbo:child ?parentOfChild .
  
  FILTER (?parentOfChild = ?father)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
184,43,val,"Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonAncestor ?royaltyChild WHERE {
  # Find the parent of Géza von Habsburg
  ?geza dbo:child ?parent1 .
  ?geza rdfs:label ""Géza von Habsburg""@en .

  # Find the parent of Archduchess Ilona of Austria
  ?ilona dbo:child ?parent2 .
  ?ilona rdfs:label ""Archduchess Ilona of Austria""@en .

  # Ensure both parents are related (common ancestor)
  FILTER (?parent1 = ?parent2)
  BIND(?parent1 AS ?commonAncestor)

  # Find the child of the child of this common ancestor
  ?childOfChild dbo:child ?grandchild .
  ?commonAncestor dbo:child ?childOfChild .

  # Ensure the grandchild is a royalty and related to Archduke Ladislaus Philipp of Austria
  ?grandchild rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""royalty""))
  
  OPTIONAL {
    ?ladislaus dbo:parent ?commonAncestor .
    ?ladislaus rdfs:label ""Archduke Ladislaus Philipp of Austria""@en .
  }

  BIND(?grandchild AS ?royaltyChild)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
488,23,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Saitō Hajime""@en .
  ?person dbo:birthPlace ?birthPlace .

  ?war dbo:commander ?person ;
       a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .
}
```",3,6,4,3,1,3,3,71,0,0,17,0,0.0,0
492,39,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?commander WHERE {
  ?war dbo:commander ?commander .
  FILTER regex(str(?war), ""Franco-Hova Wars"", ""i"") .

  ?district dbo:capital ?capital .
  FILTER (str(?district) = ""Khemis Miliana District""@en) .

  ?capital rdf:type dbo:Settlement .
  
  ?person dbo:decedentAt ?capital .
  ?commander rdfs:label ?name .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,24,val,Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?force WHERE {
  ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
  ?battle dbo:partOf ?war .

  OPTIONAL {
    ?commander rdfs:label ""Narciso Campero""@en .
    ?commander dbo:commander ?force .
    ?battle dbo:commander ?commander .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
712,11,val,Give me the capital of the country of Armed Forces of South Russia and resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for the capital of the country associated with Armed Forces of South Russia
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?capital WHERE {
  ?entity rdfs:label ""Armed Forces of South Russia""@en .
  ?entity dbo:country ?country .
  ?country dbo:capital ?capital .
}

UNION

# Query for the resting place of Nina Onilova
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?restingPlace WHERE {
  ?person rdfs:label ""Nina Onilova""@en .
  ?person dbo:deathPlace ?restingPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
281,43,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Find the politician associated with the 1962 New South Wales state election
  ?electionEvent rdfs:label ""1962 New South Wales state election""@en .
  ?politician dbo:officeHolder ?electionEvent ;
              a dbo:Politician .

  # Get the birth place of this politician if it is a country
  ?politician dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country ;
              rdfs:label ?countryLabel .

  # Find wars involving Beauchamp Seymour, 1st Baron Alcester
  ?beauchamp dbp:name ""Beauchamp Seymour, 1st Baron Alcester""@en ;
            dbo:participatedInWar ?war1 .

  # Find wars involving the New Zealand Army
  ?nzArmy rdfs:label ""New Zealand Army""@en .
  ?nzArmy dbo:participatedInWar ?war2 .

  # Ensure there is a common war between Beauchamp Seymour and the New Zealand Army
  FILTER (?war1 = ?war2)

  # Bind the country label to the result
  BIND(?countryLabel AS ?country)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
318,7,val,Give me the person born in the founding year of Eel Pie Publishing and professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthYear WHERE {
  # Find the founding year of Eel Pie Publishing
  ?company rdf:type dbo:Company .
  ?company rdfs:label ""Eel Pie Publishing""@en .
  OPTIONAL { ?company dbo:foundingDate ?foundingDate . }
  
  BIND(YEAR(?foundingDate) AS ?foundYear)

  # Find people born in the founding year of Eel Pie Publishing
  ?person rdf:type dbo:Person .
  ?person dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = ?foundYear)
  
  # Filter by profession as Composer
  OPTIONAL { ?person dbo:occupation ?occupation . }
  FILTER(CONTAINS(LCASE(str(?occupation)), ""composer""))
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
404,39,val,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  # Step 1: Find Prince Ernest Augustus of Hanover (born 1914) and his parent
  ?prince rdfs:label ""Prince Ernest Augustus of Hanover""@en .
  FILTER(YEAR(?prince dbo:birthday) = 1914)
  ?prince dbo:parent ?parent .

  # Step 2: Find Princess Victoria Louise of Prussia's spouse and the father of that spouse
  ?vl rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?vl dbo:spouse ?spouse .
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 3: Find the child of this father
  ?fatherOfSpouse dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
339,12,val,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child1Father ?child2Father WHERE {
  # Find a child of Grand Duchess Elena Vladimirovna of Russia
  ?eChild dbo:parent ?elena .
  ?elena rdfs:label ""Grand Duchess Elena Vladimirovna of Russia""@en .

  # Determine the father of this child
  ?eChild dbo:father ?child1Father .

  # Find a child of George I of Greece
  ?gChild dbo:parent ?george .
  ?george rdfs:label ""George I of Greece""@en .

  # Determine the father of this child
  ?gChild dbo:father ?child2Father .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
328,32,val,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?szalasi dbo:name ""Ferenc Szálasi""@en .
  ?force dbo:commander ?szalasi .
  ?force dbo:commander ?person .

  ?fraser dbo:name ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  ?award dbo:awardee ?fraser ;
         dbo:recipient ?person .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
981,13,val,"Give me the entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?entity WHERE {
  ?location rdfs:label ""Salak, North Sumatra""@en .
  ?location dbo:timeZone ?timezone .
  
  ?region dbo:timeZone ?timezone .
  ?region dbo:country ?country .

  ?entity dbo:locatedIn ?region .
}
```",3,3,4,3,1,3,2,20,0,0,2949,0,0.0,0
754,14,val,Give me the parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?grandParent WHERE {
  ?ramKhamhaeng rdfs:label ""Ram Khamhaeng the Great""@en .
  ?child dbo:childOf ?ramKhamhaeng .
  OPTIONAL { 
    ?parent dbo:parentOf ?child .
    ?grandParent dbo:parentOf ?parent .
  }
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
16,27,val,Give me the person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person dbo:almaMater dbpedia:Ohio_State_University .
  OPTIONAL { ?person foaf:name ?birthName . }
  FILTER (BOUND(?birthName))
}
```",3,3,4,3,1,3,3,71,0,0,90,0,0.0,0
303,19,val,"Give me the entity in Panama and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?politician ?party WHERE {
  # Arnulfo Arias and his party
  { 
    ?arias rdfs:label ""Arnulfo Arias""@en .
    ?arias dbo:nationality <http://dbpedia.org/resource/Panama> ;
           a dbo:Politician ;
           dbo:partyAffiliation ?partyArias .
    BIND(?arias AS ?politician)
  }
  
  UNION
  
  # Manuel Noriega and his party
  { 
    ?noriega rdfs:label ""Manuel Noriega""@en .
    ?noriega dbo:nationality <http://dbpedia.org/resource/Panama> ;
             a dbo:Politician ;
             dbo:partyAffiliation ?partyNoriega .
    BIND(?noriega AS ?politician)
  }
  
  # Return the party affiliations
  {
    VALUES ?politician { ?arias ?noriega }
    OPTIONAL { ?politician dbo:partyAffiliation ?party }
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
617,21,val,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  ?seleucus rdfs:label ""Seleucus II Callinicus""@en .
  ?seleucus dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild dbo:royalTitle ?title .
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  ?grandchild dbo:spouse ?nysa .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
996,15,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?force WHERE {
  ?lake rdfs:label ""Lac d'Avoriaz""@en .
  ?lake dbo:elevation ?elevation .

  OPTIONAL { 
    ?award dbo:elevation ?elevation .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:force ?force .
  }
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
92,36,val,Give me the band of the person born as the birth name of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?person dbo:birthName ""Joseph Michael""@en .
  ?person dbo:member <http://dbpedia.org/resource/Nevermore_(band)> .
  ?person dbo:bandMemberOf ?band .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,28,val,"Give me the commander in Franco-Hova Wars and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander ?decedentSatterthwaite ?decedentAlgiers WHERE {
  # Commander in Franco-Hova Wars
  ?event dbo:commander ?commander .
  ?event rdfs:label ""Franco-Hova Wars""@en .

  OPTIONAL {
    # Person decedent at work of Joseph C. Satterthwaite
    ?person dbo:deathPlace ?placeSatterthwaite ;
            dbo:associatedWith <http://dbpedia.org/resource/Joseph_C._Satterthwaite> .
    BIND(?person AS ?decedentSatterthwaite)
  }

  OPTIONAL {
    # Person decedent at Algiers
    ?person dbo:deathPlace <http://dbpedia.org/resource/Algiers> ;
            rdfs:label ?name .
    FILTER(lang(?name) = 'en')
    BIND(?person AS ?decedentAlgiers)
  }
}
```",4,4,5,2,3,3,3,71,1,120,0,0.008264462809917356,1.0,0.01639344262295082
232,21,val,Give me the native of London and child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?person dbo:birthName ""John Devon Roland Pertwee""@en .
  ?person dbo:child ?child .
  ?child dbo:nativePlace ?place .
  FILTER (str(?place) = str(""London""@en))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
645,15,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of Sylvia Pankhurst.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country WHERE {
  # Find the residence country of the commander in Battle of Diamond Rock
  ?battle rdfs:label ""Battle of Diamond Rock""@en .
  ?battle dbo:commander ?commander .
  ?commander dbo:residence ?residence1 .
  ?residence1 dbo:country ?country .

  # Find the residence country of Sylvia Pankhurst's alma mater
  ?sylvia rdfs:label ""Sylvia Pankhurst""@en .
  ?sylvia dbo:almaMater ?almaMater .
  ?almaMater dbo:location ?residence2 .
  ?residence2 dbo:country ?country .

}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
488,24,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?deathPlace WHERE {
  ?yukiHideyasu rdfs:label ""Yūki Hideyasu""@en .
  ?yukiHideyasu dbo:father ?father .
  ?father a dbo:Politician ;
          dbo:deathPlace ?deathPlace .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
435,15,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?settlement ?country WHERE {
  ?settlement rdfs:label ""Reykjavik""@en .
  ?settlement dbo:country ?country .
}
```

Note: The query retrieves information about Reykjavik and its country. However, DBpedia may not directly contain detailed constitutional references like Article 62, Section IV of the Constitution of Iceland. This part might require additional resources or manual lookup.",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
838,15,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić and band member of Kerber.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandOfCommonMember WHERE {
  # Step 1: Find Žika Jelić's band
  ?zikasBand rdf:type dbo:MusicalArtist ;
             dbo:bandMember ?zikaJelic .
  
  # Ensure Žika Jelić is the person we are looking for
  ?zikaJelic rdfs:label ""Žika Jelić""@en .

  # Step 2: Find Kerber's members
  ?kerber rdf:type dbo:MusicalArtist ;
          dbo:bandMember ?commonMember .
  
  # Ensure Kerber is the band we are looking for
  ?kerber rdfs:label ""Kerber""@en .

  # Step 3: Identify common member between Žika Jelić's band and Kerber
  ?zikasBand dbo:bandMember ?commonMember .

  # Step 4: Find the band of this common member
  ?commonMember rdf:type dbo:MusicalArtist ;
                dbo:bandMember ?bandOfCommonMember .
  
  # Ensure the band is both an artist and a musical artist
  ?bandOfCommonMember rdf:type dbo:MusicalArtist, dbo:Band .

}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,35,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?molaEvent ?francoForce WHERE {
  ?molaEvent a dbo:MilitaryConflict ;
             dbo:commander ?emilioMola .
  ?emilioMola rdfs:label ""Emilio Mola""@en .

  OPTIONAL { 
    ?francoForce a dbo:MilitaryConflict, dbo:SocietalEvent ;
                 dbo:militaryConflict ?militaryConflict ;
                 dbo:member ?franciscoFranco .
    ?franciscoFranco rdfs:label ""Francisco Franco""@en .
  }
}
```",4,8,5,2,2,3,3,71,0,10,34,0.0,0.0,0
421,12,val,Give me the native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović and band member of Senidah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthName ""Edin Dervišhalidović""@en .
  ?person dbo:nationality ?yugoslavia .
  ?yugoslavia rdfs:label ""Socialist Federal Republic of Yugoslavia""@en .
  ?person dbo:bandMemberOf ?senidah .
  ?senidah rdfs:label ""Senidah""@en .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
391,41,val,"Give me the actor of All About the Andersons and native of the figure known as Hub City and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  # Find actor of ""All About the Andersons""
  ?movie rdfs:label ""All About the Andersons""@en .
  ?movie dbo:starring ?actor .

  # Find native of Hub City
  ?person dbo:birthPlace ?hubCity .
  ?hubCity rdfs:label ""Hub City""@en .
  
  # Ensure actor is the same person as the native of Hub City
  FILTER (?actor = ?person)

  # Find Michael Ballhaus' claim to fame
  ?ballhausFilm dbo:director <http://dbpedia.org/resource/Michael_Ballhaus> .
  OPTIONAL { ?ballhausFilm dbo:starring ?actor . }

}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
115,7,val,Give me the alma mater of the alumnus of National University of San Marcos and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?foundingUniversity WHERE {
  ?person rdfs:label ""Jorge Sotomayor Tello""@en .
  ?person dbo:almaMater [
    a dbo:EducationalInstitution ;
    dbo:almaMater ?foundingUniversity
  ] .
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
303,12,val,Give me the party of Guillermo Endara and party of Arnulfo Arias and entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?endaraParty WHERE {
  ?person rdfs:label ""Guillermo Endara""@en .
  ?person dbo:party ?endaraParty .
}

UNION

SELECT ?ariasParty WHERE {
  ?person rdfs:label ""Arnulfo Arias""@en .
  ?person dbo:party ?ariasParty .
}

UNION

SELECT ?entity WHERE {
  ?entity dbo:country <http://dbpedia.org/resource/Panama> .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
294,14,val,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of the architect of P. D. Houston Jr. House.","SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel ?restingPlace1Label ?architectLabel ?restingPlace2Label WHERE {
  # Resting place of Luke Lea
  ?person rdfs:label ""Luke Lea""@en .
  ?person dbo:birthYear ?birthYear .
  FILTER(?birthYear = 1879)
  
  OPTIONAL { 
    ?person dbo:deathPlace ?restingPlace1 .
    ?restingPlace1 rdfs:label ?restingPlace1Label .
  }
  
  # Resting place of the architect of P. D. Houston Jr. House
  ?building rdfs:label ""P. D. Houston Jr. House""@en .
  OPTIONAL {
    ?building dbo:architect ?architect .
    ?architect rdfs:label ?architectLabel .
    
    OPTIONAL { 
      ?architect dbo:deathPlace ?restingPlace2 .
      ?restingPlace2 rdfs:label ?restingPlace2Label .
    }
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,27,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?finalLeader WHERE {
  # Step 1: Identify Gustav Jonson's office
  ?gustav dbo:officeHolder ?office .
  
  # Step 2: Find the leader of Gustav Jonson's office
  OPTIONAL { ?office dbo:leader ?intermediateLeader . }
  
  # Step 3: Ensure the intermediate leader's office is a government agency
  OPTIONAL {
    ?intermediateOffice rdf:type dbo:GovernmentAgency .
    ?intermediateLeader dbo:officeHolder ?intermediateOffice .
  }
  
  # Step 4: Find the leader of this government agency
  OPTIONAL { ?intermediateOffice dbo:leader ?finalLeader . }
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
778,12,val,"Give me the entity in United States and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?software WHERE {
  ?software rdf:type dbo:Software .
  ?software dbo:creator ?person .
  ?person rdfs:label ""Bill Joy""@en .
  OPTIONAL { ?software dbo:country ?country . FILTER (lang(?country) = 'en' && str(?country) = ""United States"") }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
161,30,val,"Give me the military force of Rif War and military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?rifWarForce ?civilWarForce ?commander WHERE {
  # Military forces in the Rif War
  ?rifEvent rdfs:label ""Rif War""@en .
  ?rifEvent dbo:participatingMilitaryForce ?rifWarForce .

  # Military forces in the Spanish Civil War
  ?civilEvent rdfs:label ""Spanish Civil War""@en .
  ?civilEvent dbo:participatingMilitaryForce ?civilWarForce .

  # Emilio Mola's command role
  ?militaryForce dbo:commander ?emilioMola .
  ?emilioMola rdfs:label ""Emilio Mola""@en .

  FILTER (?rifWarForce = ?militaryForce || ?civilWarForce = ?militaryForce)
}
```",4,5,5,2,3,3,3,71,0,0,11,0,0.0,0
994,30,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedArtistRedTide ?bandMemberDokken ?associatedArtistSA_Slayer WHERE {
  # Associated musical artist of Red Tide (band)
  ?redTideBand rdfs:label ""Red Tide""@en .
  ?redTideBand dbo:associatedBand ?associatedArtistRedTide .

  # Band member of Donald Maynard Dokken who is a musical artist
  ?dokkenPerson rdfs:label ""Donald Maynard Dokken""@en .
  ?bandMemberDokken dbo:member ?dokkenPerson ;
                    a dbo:MusicalArtist .

  # Associated musical artist of S.A. Slayer
  ?saSlayerBand rdfs:label ""S.A. Slayer""@en .
  ?saSlayerBand dbo:associatedBand ?associatedArtistSA_Slayer .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
161,22,val,"Give me the military force of Rif War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?force ?commander WHERE {
  ?event rdfs:label ""Rif War""@en .
  ?event dbo:militaryForce ?force .
  ?force dbo:commander ?commander .
  ?commander rdfs:label ""Emilio Mola""@en .
}
```",3,4,4,2,2,3,3,71,0,0,12,0,0.0,0
9,20,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?almaMater WHERE {
  { 
    ?person rdfs:label ?name .
    FILTER(CONTAINS(LCASE(?name), ""royal medal"") && CONTAINS(LCASE(?name), ""awardee""))
    OPTIONAL { ?person dbo:almaMater ?almaMater }
  } UNION {
    ?person rdfs:label ""John Alderdice, Baron Alderdice""@en .
    OPTIONAL { ?person dbo:almaMater ?almaMater }
  }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
360,17,val,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to Manfred Mann.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?nativeOfDeathPlace ?manfredMannReference WHERE {
  ?winnie dbo:deathPlace ?deathPlace .
  FILTER (strstarts(str(?deathPlace), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?deathPlace rdf:type dbo:Settlement }).
  
  ?person dbo:nativeOf ?nativeOfDeathPlace .
  FILTER (?person = ?winnie).

  OPTIONAL {
    ?manfredMann rdfs:label ""Manfred Mann""@en .
    ?manfredMannReference ?property ?manfredMann .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
378,33,val,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?warOfGahn ?otherWar ?peninsularConnection WHERE {
  # Find the war associated with Carl Pontus Gahn
  ?gahn dbo:participatedIn ?warOfGahn .
  ?gahn rdfs:label ""Carl Pontus Gahn""@en .

  OPTIONAL {
    # Find a commander related to another military conflict
    ?commander dbo:participatedIn ?otherWar .
    
    # Check if this commander has any connection to the Peninsular War
    ?peninsularWar rdfs:label ""Peninsular War""@en .
    ?commander dbo:participatedIn ?peninsularConnection .
    FILTER(?peninsularConnection = ?peninsularWar)
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
996,13,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?force WHERE {
  ?lake rdfs:label ""Lac d'Avoriaz""@en .
  ?lake dbo:elevation ?elevation .

  OPTIONAL { 
    ?award dbo:subject ?elevation ;
           dbo:recipient ?awardee .
    
    ?awardee dbo:force ?force .
  }
}
```",3,3,4,3,1,3,2,20,0,0,11,0,0.0,0
281,34,val,Give me the war of the awardee of the award of Jonathon Band and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardWar ?nzArmyWar WHERE {
  # Part 1: Find the war associated with Jonathan Band's award
  OPTIONAL {
    ?band dbo:award ?award .
    ?award dbo:awardedFor ?awardWar .
  }

  # Part 2: Find wars involving the New Zealand Army
  ?newZealandArmy dbo:participatedInWar ?nzArmyWar .

  FILTER(?band = <http://dbpedia.org/resource/Jonathan_Band>)
}
```",4,4,5,3,2,3,3,71,0,0,9,0,0.0,0
55,15,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band of Newsted.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify the producer of ""Used to Love Her""
  ?song dbo:producer ?producer .
  ?song rdfs:label ""Used to Love Her""@en .

  # Check if the producer is a band
  OPTIONAL { 
    ?producer rdf:type dbo:Band .
    ?producer dbo:member ?bandMember .
  }

  # Step 2: Identify Newsted's band
  ?newstedProject dbp:associatedBand ?newstedBand .
  ?newstedProject rdfs:label ""Newsted""@en .

  # Check if the associated band has members
  OPTIONAL {
    ?newstedBand dbo:member ?bandMember .
  }

  # Step 3: Find common band members
  FILTER (?producer = ?newstedBand)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
981,12,val,"Give me the birth place of the person born, that is a beauty queen, as  and entity in Indonesia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?person dbo:country dbr:Indonesia .
  ?person dbo:occupation dbr:Beauty_queen .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,4,4,2,2,3,2,20,0,0,19,0,0.0,0
534,11,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?headquarters ?childBirthPlace WHERE {
  # Part 1: Headquarter of Royal Dublin Society
  ?society rdfs:label ""Royal Dublin Society""@en .
  ?society dbo:headquarters ?headquarters .

  # Part 2: Birth Place of a Politician's Child of Desmond FitzGerald
  ?desmond rdfs:label ""Desmond FitzGerald (politician)""@en .
  ?child dbo:parent ?desmond ;
         a dbo:Politician ; # Assuming the child is also categorized as a politician
         dbo:birthPlace ?childBirthPlace .

}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
161,42,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander WHERE {
  ?molaForce dbo:militaryConflict dbr:Spanish_Civil_War ;
             dbo:commander ?commander .
  
  ?francoForce dbo:militaryConflict dbr:Spanish_Civil_War ;
               dbo:societalEvent ?societalEvent ;
               dbo:commander ?commander .

  FILTER(?molaForce != ?francoForce)
}
```",5,9,6,2,3,3,3,71,0,0,32,0,0.0,0
801,35,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?artist WHERE {
  ?writer dbo:work ?album .
  ?album rdfs:label ""40 Dayz & 40 Nightz""@en .
  ?writer rdfs:label ?writerLabel .
  FILTER(CONTAINS(LCASE(?writerLabel), ""the shadow""))
  
  ?writer dbo:associatedMusicalArtist ?artist .
  ?artist a dbo:MusicArtist ;
          a dbo:Artist .
}
```",4,6,5,2,2,3,3,71,0,0,22,0,0.0,0
801,32,val,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?professional WHERE {
  # Find The Shadow's alter ego
  ?shadow dbo:alterEgoOf ?person .
  
  # Find 50 Cent's professional role in producing a musical work or song
  ?work dbo:producer ?professional ;
        rdf:type ?type .
  FILTER(?type IN (dbo:Songs, dbo:MusicalWork)) .

  # Ensure the professional is linked to both The Shadow and 50 Cent
  VALUES ?person { <http://dbpedia.org/resource/Bricktop> } # Assuming Bricktop as an example alter ego of The Shadow

  # Linking the professional role with 50 Cent's work
  ?work dbo:artist <http://dbpedia.org/resource/50_Cent> .
}
```",4,7,5,2,2,3,3,71,0,0,27,0,0.0,0
534,12,val,Give me the birth place of Garret FitzGerald and headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace ?headquarter WHERE {
  # Query for the birth place of Garret FitzGerald
  ?person rdfs:label ""Garret FitzGerald""@en .
  ?person dbo:birthPlace ?birthPlace .

  # Query for the headquarters of the owner of RDS Arena
  ?arena rdfs:label ""RDS Arena""@en .
  ?arena dbo:owner ?owner .
  ?owner dbo:headquarter ?headquarter .
}
```",3,3,4,2,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
392,16,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in Italy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?province WHERE {
  ?person rdfs:label ""Sebastiano Bianchetti""@en .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement .
  ?residence dbo:country dbr:Italy .
  ?residence dbo:province ?province .
}
```",3,5,4,2,2,2,3,28,1,0,0,1.0,1.0,1.0
421,18,val,Give me the person born as the birth name of Dino Merlin and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthName ""Dino Merlin""@en .
  OPTIONAL { ?person dbo:nationality ?nationality . }
  FILTER (
    EXISTS { ?person dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia } ||
    EXISTS { ?place dbo:country dbr:Socialist_Federal_Republic_of_Yugoslavia ;
              dbo:birthPlace ?person }
  )
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
488,25,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace ?fatherAdministration WHERE {
  # Part 1: Death place of Tokugawa Ieyasu
  ?tokugawaIeyasu rdfs:label ""Tokugawa Ieyasu""@en .
  ?tokugawaIeyasu dbo:deathPlace ?deathPlace .

  # Part 2: Administration of the father of Emperor Go-Mizunoo
  ?goMizunoo rdfs:label ""Emperor Go-Mizunoo""@en .
  ?goMizunoo dbo:father ?father .
  ?father dbo:occupation ?administration .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,23,val,Give me the child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?person rdfs:label ""Jon Pertwee""@en .
  ?person dbo:birthName ?birthName .
  ?person dbo:child ?child .
}
```",3,3,4,3,1,3,3,71,1,0,0,1.0,1.0,1.0
488,18,val,Give me the birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace ?deathPlace ?administration WHERE {
  ?enomotoTakeaki rdfs:label ""Enomoto Takeaki""@en .
  ?enomotoTakeaki dbo:birthPlace ?birthPlace .

  ?tokugawaIeyasu rdfs:label ""Tokugawa Ieyasu""@en .
  ?tokugawaIeyasu dbo:deathPlace ?deathPlace .

  ?emperorGoYozei rdfs:label ""Emperor Go-Yōzei""@en .
  ?emperorGoYozei dbo:reign ?administration .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
820,13,val,Give me the professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?professional WHERE {
  ?comic dbo:author ?author .
  ?author rdfs:label ""Scott McCloud""@en .
  ?comic rdfs:label ""Understanding Comics""@en .
  OPTIONAL { ?award dbo:recipient ?author . }
  OPTIONAL { ?award dbo:presentedBy ?professional . }
}
```",3,3,4,3,1,3,2,20,0,0,39650,0,0.0,0
378,25,val,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war ?claimToFame WHERE {
  ?joaquinBlake a dbo:Person ;
                rdfs:label ""Joaquín Blake""@en .
  
  OPTIONAL { 
    ?joaquinBlake dbo:participatedInWar ?war .
  }
  
  OPTIONAL {
    ?joaquinBlake dbo:claimToFame ?event .
    ?event rdfs:label ""Great Siege of Gibraltar""@en ;
           dbo:role ?claimToFame .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
281,32,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceCountry ?war WHERE {
  # Part 1: Bob Heffron's birth place country
  ?heffron dbo:birthPlace ?birthPlace .
  FILTER (str(?heffron) = ""Bob_Heffron"")
  
  OPTIONAL {
    ?birthPlace rdf:type dbo:Country .
    BIND(?birthPlace AS ?birthPlaceCountry)
  }
  
  # Part 2: War associated with Knight Grand Cross of the Order of the Bath
  ?awardee dbo:award <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
  OPTIONAL {
    ?awardee dbo:militaryConflict ?war .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
492,41,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander WHERE {
  ?conflict a dbo:MilitaryConflict ;
            dbo:commander ?commander .
  
  ?herr dbo:militaryConflict ?conflict ;
        rdfs:label ""Frédéric-Georges Herr""@en .

  OPTIONAL { 
    ?satterthwaite dbo:decedentAt ?algiersEvent ;
                   rdfs:label ""Joseph C. Satterthwaite""@en .
    ?algiersEvent a dbo:Event ;
                  dbo:location ?algiersLocation .
    ?algiersLocation rdfs:label ""Algiers""@en .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
232,43,val,"Give me the native of London and child of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  FILTER(CONTAINS(LCASE(?place), ""london""))
  
  ?parent foaf:name ""Jon Pertwee""@en .
  ?child foaf:parent ?parent .
  FILTER(?child = ?person)
  
  ?film dbo:actor ?person ;
        a dbo:Film ;
        dbo:militaryConflict ?conflict .
  
  ?profession rdfs:label ?role .
  VALUES ?role { ""Actor"" ""Narrator"" ""Producer"" }
  ?person dbo:profession ?profession .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
747,19,val,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Find Pavlo Khudzik's birth date
  ?pavloKhudzik rdfs:label ""Pavlo Khudzik""@en .
  ?pavloKhudzik dbo:birthDate ?birthDate .

  # Find Amba Shepherd's band and its birth date
  ?ambaShepherd rdfs:label ""Amba Shepherd""@en .
  ?ambaShepherd dbo:band ?band .
  ?band dbo:birthDate ?bandBirthDate .

  # Find a person born on the same day as the band associated with Amba Shepherd
  ?person dbo:birthDate ?sameBirthDate .
  FILTER (?sameBirthDate = ?bandBirthDate)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,11,val,Give me the spouse of Aristotle Onassis and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseOfAristotle ?parentOfChild WHERE {
  ?aristotleOnassis rdfs:label ""Aristotle Onassis""@en .
  ?aristotleOnassis dbo:spouse ?spouseOfAristotle .

  OPTIONAL {
    ?tinaNiarchos rdfs:label ""Tina Onassis Niarchos""@en .
    ?tinaNiarchos dbo:child ?child .
    ?parentOfChild dbo:child ?child .
  }
}
```",3,3,4,2,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
547,43,val,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?burialPlaceJamesBurton ?burialPlaceAlanCunningham ?actorName ?showName ?burialPlaceActor WHERE {
  # James Burton (Egyptologist)
  ?jamesBurton rdfs:label ""James Burton (Egyptologist)""@en .
  OPTIONAL { ?jamesBurton dbo:deathPlace ?burialPlaceJamesBurton . }

  # Alan Cunningham
  ?alanCunningham rdfs:label ""Alan Cunningham""@en .
  OPTIONAL { ?alanCunningham dbo:deathPlace ?burialPlaceAlanCunningham . }

  # Show with Emily Richard and an actor from that show
  ?show rdfs:label ?showName ;
        dbo:actor ?actor .
  FILTER(CONTAINS(LCASE(?showName), ""emily richard""))
  
  OPTIONAL { ?actor rdfs:label ?actorName . }
  OPTIONAL { ?actor dbo:deathPlace ?burialPlaceActor . }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
801,21,val,Give me the associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist WHERE {
  ?person rdfs:label ""Chris Taylor (music producer)""@en .
  ?person dbo:associatedBand ?band .
  ?band dbo:member ?artist .
}

UNION

SELECT DISTINCT ?alias WHERE {
  ?person rdfs:label ""Chris Taylor (music producer)""@en .
  ?person foaf:name ?alias .
  FILTER(CONTAINS(LCASE(?alias), ""the shadow""))
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
435,18,val,Give me the region of Greenwich Mean Time and work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region ?work WHERE {
  # Part 1: Region of Greenwich Mean Time
  {
    ?location dbo:timeZone ?timezone .
    FILTER (str(?timezone) = ""Greenwich Mean Time"")
    ?location rdfs:label ?region .
  }
  
  UNION
  
  # Part 2: Work of the Author of Iceland
  {
    ?book rdfs:label ""Iceland""@en .
    ?book dbo:author ?author .
    ?author dbo:notableWorks ?work .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,20,val,Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?person dbo:awardee ?award .
  ?award rdfs:label ""Order of Suvorov""@en .

  OPTIONAL {
    ?person dbo:commanderOf ?force .
    ?force dbo:leader ?szalasi .
    ?szalasi rdfs:label ""Ferenc Szálasi""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
754,12,val,Give me the parent of the child of Ram Khamhaeng and parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Find the child of Ram Khamhaeng and their parent
  ?ramKhamhaeng dbo:child ?child1 .
  FILTER (str(?ramKhamhaeng) = ""Ram_Khamhaeng"") .
  ?child1 dbo:parent ?parent1 .

  # Find the child of Loe Thai and their parent
  ?loeThai dbo:child ?child2 .
  FILTER (str(?loeThai) = ""Loe_Thai"") .
  ?child2 dbo:parent ?parent2 .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
994,32,val,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist1 ?associatedArtist1 ?artist2 ?associatedArtist2 WHERE {
  # Step 1: Find Watchtower's associated musical artist
  ?watchtower dbo:associatedBand ?band .
  ?band rdfs:label ""Watchtower""@en .

  # Step 2: Find the associated musical artist of that artist
  ?band dbo:associatedBand ?artist1 .
  OPTIONAL { ?artist1 dbo:associatedBand ?associatedArtist1 . }

  # Step 3: Identify Meshuggah band members who are bands/groups/organizations
  ?meshuggahMember dbo:memberOfGroup ?meshuggah .
  ?meshuggah rdfs:label ""Meshuggah""@en .
  
  FILTER (?meshuggahMember rdf:type/(dbo:Band|dbo:MusicalArtist) && 
          EXISTS { ?meshuggahMember rdf:type/rdf:type* dbo:Organization })

  # Step 4: Find associated musical artist for each identified member
  OPTIONAL { ?meshuggahMember dbo:associatedBand ?artist2 . }
  OPTIONAL { ?artist2 dbo:associatedBand ?associatedArtist2 . }

}
```",4,7,5,2,2,3,3,71,0,0,5,0,0.0,0
391,19,val,Give me the native of the figure known as Hub City and actor of The Departed.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor ?birthPlace WHERE {
  ?movie dbo:title ""The Departed""@en .
  ?movie dbo:starring ?actor .
  OPTIONAL { ?actor dbo:birthPlace ?birthPlace . }
  ?city rdfs:label ""Boston, Massachusetts""@en .
  ?city dbo:nickname ?nickname .
  FILTER(?nickname = ""Hub City"")
  ?actor dbo:birthPlace ?place .
  ?place dbo:country ?city
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,18,val,Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander ?civilWarForce ?rifWarForce WHERE {
  # Find the commander of the Biscay Campaign during the Spanish Civil War
  ?campaign dbo:militaryConflict dbc:Spanish_Civil_War ;
            rdfs:label ""Biscay Campaign""@en .
  ?campaign dbo:commander ?commander .

  # Find military forces involved in the Spanish Civil War
  ?civilWarForce dbo:militaryConflict dbc:Spanish_Civil_War .

  # Find military forces involved in the Rif War
  ?rifWarForce dbo:militaryConflict dbc:Rif_War .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
48,13,val,"Give me the band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Identify Shellback as a record producer
  ?producer rdfs:label ""Shellback""@en .
  
  # Find works produced by Shellback
  ?work dbo:recordProducer ?producer .

  # Determine the writer of each work
  ?work dbr:writer ?writer .

  # Identify the band associated with the writer
  OPTIONAL { 
    ?writer dbo:band ?band .
  }
}
```",3,4,4,3,1,3,2,20,0,0,922,0,0.0,0
54,23,val,Give me the child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?grandchild WHERE {
  ?thinkhaya rdfs:label ""Thinkhaya of Pagan""@en .
  ?thinkhaya dbo:child ?child1 .
  ?child1 dbo:father ?father .
  ?father dbo:child ?grandchild .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
435,19,val,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?territory WHERE {
  ?iceland rdfs:label ""Iceland""@en .
  ?iceland a dbo:Settlement ;
           a dbo:Town .

  ?territory dbo:administeredByTerritory ?iceland .
}
```",4,7,5,2,3,2,3,28,0,0,1,0,0.0,0
314,14,val,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?awardee WHERE {
  # Part 1: Find the awardee of Sergei Makovetsky's award
  {
    ?s foaf:name ""Sergei Makovetsky""@en .
    ?s dbo:award ?award .
    ?award dbo:recipient ?awardee .
  }
  
  UNION
  
  # Part 2: Find a person deceased at Madrid
  {
    ?person dbo:deathPlace ?place .
    ?place rdfs:label ""Madrid""@en .
    BIND(?person AS ?awardee)
  }
}
```",3,3,4,2,2,2,3,28,0,1346,1,0.0,0.0,0
617,15,val,"Give me the parent of Mieszko II Lambert and child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentMieszkoII ?royalChildOfParentMlada
WHERE {
  # Find Mieszko II Lambert's parent
  ?mieszko2 dbo:parent ?parentMieszkoII .
  ?mieszko2 rdfs:label ""Mieszko II Lambert""@en .

  # Find a child of Mieszko II Lambert's parent who is royalty
  OPTIONAL {
    ?childParent rdf:type dbo:Monarch .
    ?childParent dbo:parent ?parentMieszkoII .
  }

  # Find Mlada (Abbess)'s parent
  ?mlada dbo:parent ?parentMlada .
  ?mlada rdfs:label ""Mlada (abbess)""@en .

  # Find a child of Mlada's parent who is royalty
  OPTIONAL {
    ?childParent2 rdf:type dbo:Monarch .
    ?childParent2 dbo:parent ?parentMlada .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,17,val,"Give me the party of Arnulfo Arias and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party ?country WHERE {
  # Query for Arnulfo Arias's political party
  ?person rdfs:label ""Arnulfo Arias""@en .
  ?person dbo:party ?party .

  # Query for the country of El Valle de Antón
  ?place rdfs:label ""El Valle de Antón""@en .
  ?place dbo:country ?country .

  FILTER (isLiteral(?party))
  FILTER (isURI(?country) && strStarts(str(?country), ""http://dbpedia.org/resource/Category:""))
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
392,12,val,Give me the region of Central European Time and entity in Italy and province of Schio.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
# Query for the region associated with Central European Time (CET)
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?region WHERE {
  ?timeZone rdfs:label ""Central European Time""@en .
  ?timeZone dbo:region ?region .
}

# Query for an entity in Italy
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:Italy .
}

# Query for the province of Schio
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?province WHERE {
  dbp:Schio dbo:partOf ?province .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
285,12,val,Give me the spouse of the professional in  and parent of Alexander Onassis.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?spouse WHERE {
  ?alexander dbo:child ?parent .
  ?parent rdfs:label ""Alexander Onassis""@en .
  ?parent rdfs:label ""Aristotle Onassis""@en .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
492,22,val,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?personInFrenchAlgeria ?personInAlgiers WHERE {
  ?personInFrenchAlgeria dbo:deathPlace ?place .
  ?place rdfs:label ""French Algeria""@en .

  OPTIONAL { 
    ?personInAlgiers dbo:deathPlace ?algiers .
    ?algiers rdfs:label ""Algiers""@en .
  }
}
```",3,4,4,2,2,3,3,71,16,120,0,0.11764705882352941,1.0,0.21052631578947367
16,32,val,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of Satomi Ishihara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Ted Martin McGinley""@en .
  ?person dbo:spouse ?spouse .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
378,35,val,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?commanderFame WHERE {
  # Part 1: Find the war associated with Carl Pontus Gahn
  ?person dbo:birthName ""Carl Pontus Gahn""@en .
  OPTIONAL { ?person dbo:participatedInWar ?war . }

  # Part 2: Find the commander of the Great Siege of Gibraltar and their claim to fame
  ?siege rdfs:label ""Great Siege of Gibraltar""@en .
  ?siege dbo:commander ?commander .
  OPTIONAL { ?commander rdfs:comment ?commanderFame . }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
747,40,val,"Give me the band of Amba Shepherd and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?ambaBand ?shenaBand ?person WHERE {
  # Find Amba Shepherd's band
  ?amba a dbo:Person ;
        rdfs:label ""Amba Shepherd""@en .
  OPTIONAL { ?amba dbo:band ?ambaBand . }

  # Find Shèna's band
  ?shena a dbo:Person ;
         rdfs:label ""Shèna""@en .
  OPTIONAL { ?shena dbo:band ?shenaBand . }

  # Find decedent and their birth date
  ?decedent a dbo:Person ;
            dbo:dateOfBirth ?birthDate ;
            dbo:deathDate ?deathDate .

  # Find person born on the same date as the decedent, who is an athlete and soccer player from Zolotonosha
  ?person a dbo:Person ;
          dbo:dateOfBirth ?birthDate ;
          dbo:sport ?sport .
  FILTER EXISTS { ?person dbo:placeOfBirth ?zolotonosha }
  FILTER (CONTAINS(LCASE(?sport), ""soccer"") || CONTAINS(LCASE(?sport), ""football""))
  FILTER (?zolotonosha rdfs:label ""Zolotonosha""@en)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
783,14,val,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember WHERE {
  ?person rdfs:label ""Ebony Reigns""@en .
  ?person a dbo:MusicalArtist ;
          dbo:bandMember ?bandMember .
}
```",3,5,4,3,1,3,2,20,0,0,7,0,0.0,0
161,27,val,"Give me the commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?director rdfs:label ""El Director""@en .
  ?event dbo:commander ?commander .
  ?director dbo:participatedIn ?event .
}
```",3,4,4,3,1,3,3,71,0,0,85,0,0.0,0
427,31,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?andreottiParty ?pintoPartyLabel WHERE {
  ?andreotti dbo:partyAffiliation ?andreottiParty .
  FILTER (str(?andreotti) = ""Giulio_Andreotti""^^xsd:string)
  
  OPTIONAL {
    ?pinto dbo:partyAffiliation ?pintoParty .
    ?pintoParty rdfs:label ?pintoPartyLabel .
    FILTER (str(?pinto) = ""Michele_Pinto""^^xsd:string)
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
54,25,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parent ?predecessor WHERE {
  # Part 1: Find the parent of Thado Minsaw of Prome
  ?thadoMinsaw dbo:parent ?parent .
  ?thadoMinsaw rdfs:label ""Thado Minsaw""@en .
  
  FILTER EXISTS { ?parent rdf:type dbo:Royalty }
  FILTER EXISTS { ?parent dbo:officeHolder ?office }

  # Part 2: Find the predecessor of Thihapate of Mohnyin's child
  ?thihapate dbo:child ?child .
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .

  OPTIONAL {
    ?child dbo:predecessor ?predecessor .
    FILTER EXISTS { ?predecessor rdf:type dbo:Royalty }
    FILTER EXISTS { ?predecessor dbo:officeHolder ?office }
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
820,11,val,Give me the child of Jack Schwartzman and professional in the award of Scott McCloud.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?award WHERE {
  ?person rdfs:label ""Jack Schwartzman""@en .
  ?person dbo:child ?child .

  OPTIONAL {
    ?mccloud rdfs:label ""Scott McCloud""@en .
    ?mccloud dbo:award ?award .
  }
}
```",3,3,4,2,2,3,2,20,1,6,0,0.14285714285714285,1.0,0.25
617,25,val,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfChild WHERE {
  # Find Antiochus (son of Antiochus III the Great)
  ?antiochus rdfs:label ""Antiochus IV""@en .
  ?antiochus dbo:father <http://dbpedia.org/resource/Antiochus_III_the_Great> .

  # Find his child
  ?child dbo:parent ?antiochus .

  # Identify Laodice IV and her spouse
  ?laodice rdfs:label ""Laodice IV""@en .
  ?spouse dbo:spouse ?laodice .

  # Check if the child's parent is the same as Laodice IV's spouse
  ?child dbo:parent ?spouse .

  # Find the parent of this child (which should be Antiochus)
  ?parentOfChild dbo:parent ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,39,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?andreottiParty ?prodiBirthName ?sharedPersonParty WHERE {
  # Find Giulio Andreotti's party
  ?andreotti rdfs:label ""Giulio Andreotti""@en .
  ?andreotti dbo:party ?andreottiParty .

  # Find Romano Prodi's birth name
  ?prodi rdfs:label ""Romano Prodi""@en .
  ?prodi foaf:name ?prodiBirthName .

  # Find a person with the same birth name who is an office holder and a politician
  ?sharedPerson foaf:name ?prodiBirthName ;
                rdf:type dbo:Politician, dbo:OfficeHolder .
  ?sharedPerson dbo:party ?sharedPersonParty .
}
```",4,6,5,3,2,3,3,71,3,7,0,0.3,1.0,0.4615384615384615
54,43,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commonEntity WHERE {
  # Thado Minsaw of Prome's parent and child relationships
  ?thadoMinsaw dbo:parent ?parentOfThado .
  ?parentOfThado dbo:child ?childOfParent .

  # Ameitta Thiri Maha Dhamma Dewi's predecessor
  ?ameitta rdfs:label ""Ameitta Thiri Maha Dhamma Dewi""@en .
  ?predecessor dbo:successor ?ameitta .

  # Thinkhaya of Pagan's child
  ?thinkhaya rdfs:label ""Thinkhaya of Pagan""@en .
  ?thinkhaya dbo:child ?childOfThinkhaya .

  # Find the common entity that fits all criteria
  FILTER (?childOfParent = ?predecessor)
  FILTER (?childOfThinkhaya = ?commonEntity)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
184,38,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfChild1 ?grandchild2 WHERE {
  # Find a child of Archduke Joseph Francis of Austria
  ?child1 dbo:child ?person1 .
  ?person1 rdfs:label ""Archduke Joseph Francis of Austria""@en .

  # Find the parent (spouse) of that child
  OPTIONAL { ?child1 dbo:parent ?parentOfChild1 . }
  OPTIONAL { ?parentOfChild1 dbo:spouse ?person2 . }

  # Find a child of Archduke Joseph Karl of Austria
  ?child2 dbo:child ?person3 .
  ?person3 rdfs:label ""Archduke Joseph Karl of Austria""@en .

  # Find the grandchild (child of that child)
  OPTIONAL { ?child2 dbo:child ?grandchild2 . }
}
```",4,4,5,2,2,3,3,71,0,8,1,0.0,0.0,0
528,19,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?battleWar ?barbosaWar WHERE {
  # Find the war associated with the Battle of Pisagua
  ?battle rdfs:label ""Battle of Pisagua""@en .
  ?battle dbo:participatedIn ?battleWar .

  # Find the war associated with Orozimbo Barbosa
  ?person rdfs:label ""Orozimbo Barbosa""@en .
  ?person dbo:militaryConflict ?barbosaWar .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
659,30,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813 and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryForce WHERE {
  ?person rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  
  OPTIONAL {
    ?campaign dbo:militaryConflict ?conflict ;
              dbo:commander ?person .
    ?conflict rdf:type dbo:MilitaryConflict .
    FILTER (CONTAINS(LCASE(?conflict), ""german campaign of 1813"") || CONTAINS(LCASE(?conflict), ""battle of leipzig""))
  }
  
  OPTIONAL {
    ?event dbo:eventType ?eventType ;
           dbo:commander ?person .
    ?eventType rdf:type/rdfs:subClassOf* dbo:SocietalEvent, dbo:Event, dbo:MilitaryConflict .
  }

  ?campaign dbo:militaryForce ?militaryForce .
}
```",4,7,5,2,3,3,3,71,0,0,6,0,0.0,0
801,31,val,Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer ?profession WHERE {
  # Query for the producer of ""Westside Story"" (song)
  ?song rdfs:label ""Westside Story""@en .
  ?song dbo:producer ?producer .

  # Query for the profession of The Shadow's alter ego
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:profession ?profession .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
251,15,val,"Give me the death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace ?warLocation WHERE {
  # Laura Mancinelli's death place
  ?mancinelli rdfs:label ""Laura Mancinelli""@en .
  ?mancinelli dbo:deathPlace ?deathPlace .

  # Louis François Félix Musnier's war location
  ?musnier rdfs:label ""Louis François Félix Musnier""@en .
  ?event dbo:participatedIn ?musnier ;
         a dbo:MilitaryConflict .
  ?event dbo:location ?warLocation .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
996,12,val,Give me the entity in the award of Ekrem Akurgal and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?entity WHERE {
  ?ekremAkurgal dbo:award ?entity .
  FILTER (str(?ekremAkurgal) = ""Ekrem_Akurgal"") .

  ?dagobertSigmundVonWurmser dbo:militaryCommanderOf ?entity .
  FILTER (str(?dagobertSigmundVonWurmser) = ""Dagobert_Sigmund_von_Wurmser"") .
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
404,35,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?ernestAugustus rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?father dbo:father ?ernestAugustus .
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?child dbo:spouse ?princess ;
         dbo:childOf ?father .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
92,33,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?associatedArtist WHERE {
  ?movie dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:actor ?person .

  ?band dbo:name ""Nevermore"" .
  ?band dbo:bandMember ?person .

  ?person dbo:musicalArtist ?musicalArtist .
  
  OPTIONAL {
    ?person dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
232,29,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London and child of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actor WHERE {
  ?person rdfs:label ""Sean Pertwee""@en .
  ?person dbo:nationality dbc:Citizens_of_London .
  ?person dbo:parent ?parent .
  ?parent rdfs:label ""Jon Pertwee""@en .
  
  ?work dbo:genre dbc:Military_films ;
        dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .

  FILTER(CONTAINS(LCASE(?actorLabel), ""private pike""))
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
161,34,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?militaryForce WHERE {
  ?person dbo:decedentAt ""Francoist Spain"" .
  ?person dbo:commanderIn ?campaign .
  FILTER(STRSTARTS(LCASE(?campaign), LCASE(""Biscay Campaign"")))
  
  ?event dbo:eventType ?eventType .
  ?event dbo:militaryConflict ?militaryConflict .
  ?event rdfs:label ?eventName .

  FILTER(CONTAINS(LCASE(?eventType), ""societal event""))
  FILTER(CONTAINS(LCASE(?militaryConflict), ""military conflict""))

  ?militaryForce dbo:participatedIn ?event .
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
281,39,val,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?militaryUnit ?professional WHERE {
  ?militaryUnit rdf:type dbo:MilitaryUnit ;
                dbo:militaryBranch ?branch .
  ?branch rdfs:label ""New Zealand Army""@en .

  ?professional rdf:type dbo:OfficeHolder, dbo:Politician ;
                 dbo:profession ?warProfession ;
                 dbo:militaryUnit ?militaryUnit .

  ?warProfession rdfs:label ?warLabel .
  
  OPTIONAL {
    ?militaryUnit dbo:country ?colony .
    ?colony rdfs:label ""Colony of New Zealand""@en .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
77,15,val,Give me the force of Alexander I of Russia and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?force ?war WHERE {
  # Alexander I's force
  ?alexander rdfs:label ""Alexander I of Russia""@en .
  OPTIONAL { 
    ?alexander dbo:commander ?force .
  }
  
  # Maxim Vlasov and the war
  ?vlasov rdfs:label ""Maxim Grigorievich Vlasov""@en .
  OPTIONAL {
    ?vlasov dbo:participatedInWar ?war .
  }
}
```",4,4,5,3,2,3,2,20,0,0,20,0,0.0,0
184,23,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent WHERE {
  ?landmark rdf:type dbo:PopulatedPlace ;
            geo:elevation ?elevation .
  FILTER (?elevation = ""96.0""^^xsd:float)
  
  ?person dbo:nativePlace ?landmark .
  ?birthplace dbo:birthPlace ?person .

  ?birthplace dbo:parentCountry ?parent .
}
```",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
404,28,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?parent rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .
  ?parent dbo:child ?child .
  
  ?child rdfs:label ?name .
  FILTER regex(?name, ""Princess Viktoria Luise of Prussia"", ""i"")

  OPTIONAL {
    ?child dbo:spouse ?spouse .
    ?spouse rdfs:label ""Ernst August, Duke of Brunswick""@en .
  }

  OPTIONAL {
    ?child dbo:parentOf ?grandChild .
    ?grandChild rdfs:label ""Prince Ernest Augustus of Hanover (1914)""@en .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
487,12,val,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of 2022 Vermont House of Representatives election.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration ?country WHERE {
  # Pattern for Philip Brian Scott's administration
  ?person rdfs:label ""Philip Brian Scott""@en .
  ?person dbo:sport ""Soccer""@en .
  OPTIONAL { 
    ?person dbo:office ?administration .
  }

  # Pattern for the country of the 2022 Vermont House of Representatives election
  ?election rdfs:label ""2022 Vermont House of Representatives election""@en .
  ?election dbo:electionCountry ?country .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
666,12,val,Give me the player in Steve Bruce and figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?player ?nickname WHERE {
  ?team dbo:manager ?bruce .
  ?bruce rdfs:label ""Steve Bruce""@en .
  
  OPTIONAL { 
    ?team rdfs:label ?nickname .
    FILTER(CONTAINS(LCASE(?nickname), ""england national beach soccer team""))
  }
  
  ?player dbo:memberOfTeam ?team .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
994,23,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?secondAssociatedArtist WHERE {
  ?watchtower dbo:associatedBand ?firstAssociatedArtist .
  ?firstAssociatedArtist dbo:associatedBand ?secondAssociatedArtist .
  
  FILTER regex(str(?watchtower), ""Watchtower"", ""i"")
}
```",3,3,4,3,1,3,3,71,16,0,0,1.0,1.0,1.0
701,33,val,Give me the parent of Meritamen and parent of the child of the child of Seti I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentMeritamen ?grandchildParent WHERE {
  # Part 1: Parent of Meritamen
  OPTIONAL {
    ?meritamen rdfs:label ""Meritamen""@en .
    OPTIONAL { ?meritamen dbo:mother ?parentMeritamen . }
    OPTIONAL { ?meritamen dbo:father ?parentMeritamen . }
  }

  # Part 2: Parent of the child of the child of Seti I
  ?setiI rdfs:label ""Seti I""@en .
  ?childOfSeti dbo:child ?grandchild .
  ?grandchild dbo:child ?greatGrandchild .
  OPTIONAL { ?greatGrandchild dbo:mother ?grandchildParent . }
  OPTIONAL { ?greatGrandchild dbo:father ?grandchildParent . }
}
```",4,4,5,3,2,3,3,71,0,219,1,0.0,0.0,0
285,13,val,Give me the parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?parent WHERE {
  ?aristotleOnassis rdfs:label ""Aristotle Onassis""@en .
  ?aristotleOnassis dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?child dbo:parent ?spouse .
    ?child dbo:parent ?parent .
  }
}
```",3,3,4,3,1,3,2,20,4,0,1,1.0,0.8,0.888888888888889
994,35,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember ?associatedArtist ?finalAssociatedArtist WHERE {
  # Step 1: Identify Donald Maynard Dokken
  ?dokken dbo:birthName ""Donald Maynard Dokken"" .
  
  # Step 2: Find band members of Donald Maynard Dokken
  ?dokken dbo:bandMember ?bandMember .

  # Step 3: Identify Watchtower (band)
  ?watchtower rdfs:label ""Watchtower""@en .

  # Step 4: Find associated musical artists of Watchtower
  ?watchtower dbo:associatedBand ?associatedArtist .

  # Step 5: Determine associated musical artists of those artists
  ?associatedArtist dbo:associatedMusicalArtist ?finalAssociatedArtist .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,36,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leaderOfLeader WHERE {
  ?gustav a dbo:OfficeHolder ;
          foaf:name ""Gustav Jonson"" ;
          dbo:awardReceived ?orderSuvorov .
  
  FILTER (CONTAINS(LCASE(STR(?orderSuvorov)), ""order of suvorov""))

  ?gustav dbo:office ?office .

  ?office a dbo:GovernmentAgency .

  ?officeLeader dbo:leader ?gustav ;
                foaf:name ?officeLeaderName .
  
  ?officeLeader2 dbo:leader ?officeLeader ;
                 foaf:name ?leaderOfLeader .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
312,7,val,"Give me the entity in Italy and entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?settlement ?region WHERE {
  ?entity a dbo:Settlement ;
          dbo:country dbr:Italy ;
          rdfs:label ?name .
  
  OPTIONAL { 
    ?entity dbo:politicalParty dbr:Democratic_Party_(Italy) . 
  }
  
  FILTER (CONTAINS(LCASE(?name), ""region"") || CONTAINS(LCASE(?name), ""settlement""))
  
  OPTIONAL {
    ?entity a dbo:Region ;
            rdfs:label ?region .
  }

  OPTIONAL {
    ?entity a dbo:State ;
            rdfs:label ?state .
  }
}
```",3,7,4,2,2,2,2,9,0,0,587,0,0.0,0
747,27,val,Give me the band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?person rdfs:label ""Shèna""@en .
  ?person dbo:band ?band .
}
```",3,3,4,3,1,3,3,71,0,0,8,0,0.0,0
391,44,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actorName WHERE {
  ?movie a dbo:Film ;
         dbo:workType ?workType .
  
  FILTER (?workType IN (dbo:Work, dbo:TelevisionShow))
  
  ?movie dbo:starring RozRyan ;
         dbo:claimToFame ?ballhausClaim .

  ?ballhausClaim dbo:creator MichaelBallhaus .

  ?actor dbo:nativeCountry ?comptonNative .
  ?actor rdfs:label ?actorName .
  FILTER (CONTAINS(LCASE(?actorName), ""actor"") && LCASE(?actorName) != ""roz ryans"")

  ?movie dbo:starring ?actor .
  
  ?comptonNative rdfs:label ""Compton, California""@en .

}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,18,val,Give me the native of London and child of Jon Pertwee and actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""London""@en .

  ?child dbo:parent ?jonPertwee .
  ?jonPertwee rdfs:label ""Jon Pertwee""@en .
  ?child rdfs:label ?personLabel .

  ?film dbo:actor ?person .
  ?film rdfs:label ""Dog Soldiers (2002 film)""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
547,27,val,Give me the resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalRestingPlace WHERE {
  ?person rdfs:label ""Gerald Graham""@en .
  ?award dbo:recipient ?person ;
         dbo:awardee ?awardee .
  ?awardee dbo:finalRestingPlace ?finalRestingPlace .
}
```",3,3,4,3,1,3,3,71,0,0,704,0,0.0,0
16,19,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Ted Martin McGinley""@en .
  ?person dbo:birthName ""Ted Martin McGinley"" .
  ?person dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""actress""))
  ?person dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,15,val,Give me the spouse of Aristotle Onassis and parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?spouse ?parent WHERE {
  ?onassis rdfs:label ""Aristotle Onassis""@en .
  ?onassis dbo:spouse ?spouse .

  OPTIONAL {
    ?child dbo:parent ?spouse ;
           dbo:parent ?parent .
  }
}
```",4,4,5,3,2,3,2,20,2,2,0,0.5,1.0,0.6666666666666666
696,12,val,Give me the birth place of Tim Brennan and landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Tim Brennan""@en .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

SELECT ?landmark WHERE {
  ?award dbo:recipient ?nieRongzhen .
  ?nieRongzhen rdfs:label ""Nie Rongzhen""@en .
  ?award dbo:elevation ?elevation .
  
  ?landmark dbo:elevation ?elevation .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
328,37,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
# Query to find the leader of the People's Commissariat of Defense of the Soviet Union
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?leader WHERE {
  ?office rdfs:label ""People's Commissariat for Defence (Soviet Union)""@en .
  ?office dbo:head ?person .
  ?person rdfs:label ?leader .
}

UNION

# Query to find a commander involved in operations at Budapest and check if they died there
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?battle rdfs:label ""Battle of Budapest (1944–45)""@en .
  ?person dbo:commanded ?battle ;
          rdfs:label ?commander .
  OPTIONAL { 
    ?person dbo:deathPlace ?place .
    FILTER(CONTAINS(LCASE(STR(?place)), ""budapest""))
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,12,val,"Give me the player in 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?result <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?team WHERE {
  ?player dbo:birthPlace ?wolverhampton .
  ?wolverhampton rdfs:label ""Wolverhampton""@en .
  
  ?player dbo:sport dbp:Soccer .
  
  OPTIONAL { 
    ?player dbo:playerForTeam ?sacramento2015 .
    ?sacramento2015 dbp:teamName ""Sacramento Republic FC"" ;
                   dbp:season ""2015"" .
  }
  
  OPTIONAL {
    ?player dbo:managerOfTeam ?team .
  }

  FILTER EXISTS { 
    ?player dbo:sport dbp:Soccer .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
492,18,val,Give me the commander in Franco-Hova Wars and person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander ?deathPlaceAlgeria ?deathPlaceAlgiers WHERE {
  ?commander dbo:role ""Commander""@en .
  ?commander dbo:participatedInWar <http://dbpedia.org/resource/Franco-Hova_Wars> .
  
  OPTIONAL {
    ?commander dbo:deathPlace ?deathPlaceAlgeria .
    FILTER(CONTAINS(LCASE(STR(?deathPlaceAlgeria)), ""algeria""))
  }
  
  OPTIONAL {
    ?commander dbo:deathPlace ?deathPlaceAlgiers .
    FILTER(CONTAINS(LCASE(STR(?deathPlaceAlgiers)), ""algiers""))
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
55,14,val,"Give me the band member of Guns N' Roses and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member ?band WHERE {
  # Step 1: Identify members of Guns N' Roses
  ?gnrMember dbo:memberOfBand ?gnr .
  ?gnr rdfs:label ""Guns N' Roses""@en .

  # Step 2: Find bands associated with these members
  ?member dbp:band ?band .
  FILTER(?member = ?gnrMember)

  # Step 3: Ensure the band is both a 'band' and a 'group'
  ?band rdf:type dbo:Band ;
        rdf:type dbo:MusicalGroup .

  # Step 4: Check association with San Francisco Symphony
  OPTIONAL {
    ?band dbp:associatedWith ?symphony .
    ?symphony rdfs:label ""San Francisco Symphony""@en .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
16,30,val,Give me the person born as the birth name of Gigi Rice and professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?person WHERE {
  ?person dbo:birthName ""Gigi Rice""@en .
  ?person rdf:type dbo:Actor .
  ?person dbo:spouse ?ted .
  ?ted rdfs:label ""Ted McGinley""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
92,44,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as Joseph Michael Furney and band member of Nevermore.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artistBand ?bandMember 
WHERE {
  # Jim Sheppard's associated band
  ?person rdfs:label ""Jim Sheppard""@en .
  ?person dbo:birthName ""Jim Sheppard"" .
  ?person dbo:associatedBand ?artistBand .

  # Joe Duplantier's bands
  ?member rdfs:label ""Joe Duplantier""@en .
  ?member dbo:birthName ""Joseph Michael Furney"" .
  OPTIONAL { 
    ?member dbo:bandMember ?bandMember .
    FILTER regex(str(?bandMember), ""Nevermore"", ""i"")
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
404,23,val,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?spouse WHERE {
  ?person rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?person dbo:birthName ?birthName .
  ?person rdf:type dbo:Monarch .
  ?person dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
161,40,val,"Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander ?militaryForce ?societalEvent WHERE {
  ?campaign rdfs:label ""Biscay Campaign""@en .
  ?campaign dbo:commander ?commander .
  ?campaign dbo:militaryConflict ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict .
  
  OPTIONAL { 
    ?militaryForce dbo:participatedIn ?campaign .
    ?militaryForce rdfs:label ?forceLabel .
  }
  
  OPTIONAL {
    ?societalEvent dbo:relatedEvent ?campaign .
    ?societalEvent rdf:type dbo:SocietalEvent .
  }

  FILTER (lang(?commander) = ""en"" && lang(?forceLabel) = ""en"")
}
```",5,8,6,3,3,3,3,71,0,0,3,0,0.0,0
184,19,val,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?person dbo:birthPlace ?place .
  ?person dbo:childOf ?archduke .
  ?archduke rdfs:label ""Archduke Joseph August of Austria""@en .
  ?place rdfs:label ""Budapest""@en .
  
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
303,14,val,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country ?party WHERE {
  ?place rdfs:label ""El Valle de Antón""@en .
  ?place dbo:country ?country .

  ?person rdfs:label ""Guillermo Endara""@en .
  ?person dbo:party ?party .

  FILTER(?country = ?party)
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
645,12,val,Give me the alma mater of the child of Richard Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?child dbo:parent ?richardPankhurst .
  ?richardPankhurst rdfs:label ""Richard Pankhurst""@en .
  
  ?child dbo:almaMater ?almaMater .
  
  FILTER EXISTS { 
    ?almaMater dbo:country ?ukCountry .
    ?ukCountry rdfs:label ""United Kingdom""@en
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
701,22,val,Give me the spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?merneptah rdfs:label ""Merneptah""@en .
  ?merneptah dbo:father ?father .
  ?father dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
492,43,val,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at French Algeria and person decedent at Algiers.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander WHERE {
  # Find the commander of the Battle of Verdun
  ?battle rdfs:label ""Battle of Verdun""@en .
  ?battle dbo:commander ?commander .

  # Ensure this commander is associated with another military conflict or event
  ?conflict dbo:commander ?commander .
  FILTER(?conflict != ?battle)

  # Check if the commander died in both French Algeria and Algiers
  ?commander dbo:deathPlace ?place1, ?place2 .
  VALUES ?place1 { <http://dbpedia.org/resource/French_Algeria> }
  VALUES ?place2 { <http://dbpedia.org/resource/Algiers> }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
77,13,val,Give me the war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Step 1: Identify Maxim Grigorievich Vlasov and his award
  dbr:Maxim_Grigorievich_Vlasov dbo:award ?award .

  # Step 2: Find the awardee of that award
  ?award dbo:recipient ?awardee .

  # Step 3: Determine any wars associated with this awardee
  ?awardee dbo:participatedIn ?war .
}
```",3,3,4,3,1,3,2,20,0,0,436,0,0.0,0
701,44,val,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?child dbo:father dbr:Ramesses_II .
  ?child dbo:mother ?parent .
  
  OPTIONAL { 
    ?merneptah dbo:father dbr:Ramesses_II .
    ?ramesses2 dbo:mother ?spouse .
    FILTER(?spouse = ?parent)
  }
  
  OPTIONAL {
    ?meritamen dbo:father dbr:Ramesses_II ;
               dbo:mother ?parent .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
801,42,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow and producer of Westside Story (song).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?artist WHERE {
  ?song dbo:writer ?person .
  ?song rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  OPTIONAL { ?person dbo:alias ""The Shadow"" . }
  
  ?production dbo:producer ?person ;
              rdfs:label ""Westside Story (song)""@en .
  
  ?person rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
328,21,val,"Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?leader WHERE {
  ?commis rdfs:label ""People's Commissariat of Defense (Soviet Union)""@en .
  ?commis dbo:leader ?leader .

  OPTIONAL {
    ?award dbo:awardee ?leader ;
           dbo:givenBy <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,37,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonActor WHERE {
  # Find Sherry Hormann's spouse
  ?hormann a dbo:Person ;
           rdfs:label ""Sherry Hormann""@en .
  
  ?hormann dbo:spouse ?spouse .

  # Get the claim to fame of the spouse
  ?spouse dbo:claimToFame ?work .

  # Find actors in that work
  ?work dbo:actor ?actor1 .

  # Find actors in ""All About the Andersons""
  ?andersonsWork rdfs:label ""All About the Andersons""@en .
  
  ?andersonsWork dbo:actor ?actor2 .

  # Match common actor
  FILTER (?actor1 = ?actor2)
  BIND(?actor1 AS ?commonActor)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
365,7,val,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter and reference to The Blasters.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person ?band WHERE {
  ?band rdfs:label ""The Blasters""@en .
  ?band dbo:musicalArtist ?person .
  OPTIONAL { ?person dbo:role ""Vocalist""@en . }
  OPTIONAL { ?person dbo:role ""Musician""@en . }
  OPTIONAL { ?person dbo:role ""Songwriter""@en . }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
339,14,val,Give me the father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?olga rdfs:label ""Princess Olga of Greece and Denmark""@en .
  ?parent dbo:child ?olga .
  ?parent dbo:father ?father .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
360,18,val,Give me the reference to the author of Blinded by the Light and native of Johannesburg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?author WHERE {
  ?book rdfs:label ""Blinded by the Light""@en .
  ?book dbo:author ?author .
  ?author dbo:nativePlace ?nativePlace .
  FILTER (CONTAINS(LCASE(str(?nativePlace)), LCASE(""johannesburg"")))
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,11,val,Give me the figure known as the nickname of FC Vaduz and team of Alessandro Mangiarratti.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname ?team WHERE {
  ?fcVaduz rdfs:label ""FC Vaduz""@en .
  ?fcVaduz dbo:nickname ?nickname .

  OPTIONAL {
    ?mangiarratti rdfs:label ""Alessandro Mangiarratti""@en .
    ?mangiarratti dbo:team ?team .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
303,15,val,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of Arnulfo Arias.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commanderParty ?arnulfoAriasParty WHERE {
  # Find the political party of Colin Powell, who was a commander in the invasion
  ?powell rdfs:label ""Colin Powell""@en .
  ?powell dbo:politicalAffiliation ?commanderParty .

  # Find the political party of Arnulfo Arias
  ?arias rdfs:label ""Arnulfo Arias"" .
  ?arias dbo:politicalAffiliation ?arnulfoAriasParty .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,18,val,"Give me the actor of The Departed and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?movie1 rdfs:label ""The Departed""@en .
  ?movie1 dbo:starring ?actor .

  ?movie2 rdfs:label ""All About the Andersons""@en .
  ?movie2 dbo:starring ?actor .

  ?actor dbo:nativePlace ?place .
  ?place rdfs:label ""Compton, California""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
465,7,val,Give me the administration of Czech Pirate Party and death place of the native of Prague.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?leader WHERE {
  ?party rdfs:label ""Czech Pirate Party""@en .
  ?party dbo:leader ?leader .
}

UNION

SELECT ?deathPlace WHERE {
  ?person dbo:birthPlace ?prague .
  ?prague rdfs:label ""Prague""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
92,27,val,Give me the band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?person dbo:birthName ""Joseph Michael""@en .
  ?person dbo:band ?band .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
392,18,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?province ?region WHERE {
  ?person rdfs:label ""Sebastiano Bianchetti""@en .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:Italy .
  ?residence dbo:administrativeUnit ?province .
  ?province dbo:timeZone ?timezone .
  FILTER(CONTAINS(LCASE(?timezone), ""cet""))
  OPTIONAL { ?province dbo:partOfRegion ?region }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
626,14,val,Give me the awardee of the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardee WHERE {
  ?battle rdfs:label ""Battle of Borodino""@en .
  ?battle dbo:award ?award .
  ?award dbo:recipient ?awardee .
}
```",3,3,4,3,1,3,2,20,0,0,7855,0,0.0,0
392,17,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?region ?sportEvent WHERE {
  ?aguilar rdfs:label ""Aguilar de Segarra""@en .
  ?aguilar dbo:timeZone ?timezone .
  ?timezone dbo:region ?region .

  OPTIONAL {
    ?schio rdfs:label ""Schio""@en .
    ?schio dbo:sport ?sportEvent .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
328,31,val,Give me the commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander WHERE {
  # Find the commander on the Eastern Front during World War II
  ?easternFront dbo:commander ?commander .
  ?easternFront rdfs:label ""Eastern Front (World War II)""@en .

  OPTIONAL {
    # Find individuals who were commanders in both Volcano and Ryukyu Islands campaigns
    ?volcanoCampaign dbo:commander ?candidateCommander .
    ?ryukyuCampaign dbo:commander ?candidateCommander .
    
    ?volcanoCampaign rdfs:label ""Volcano Islands campaign""@en .
    ?ryukyuCampaign rdfs:label ""Ryukyu Islands campaign""@en .

    # Ensure the candidate commander received an award
    ?candidateCommander dbo:award ?award .
  }
  
  FILTER (?commander = ?candidateCommander)
}
```",4,4,5,3,2,3,3,71,5,58,0,0.07936507936507936,1.0,0.14705882352941177
55,19,val,"Give me the band member of Metallica and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?metallicaMember ?producerBand ?bandMember 
WHERE {
  # Find Metallica band members
  ?metallica dbo:bandMember ?member .
  ?member rdfs:label ""Jason Newsted""@en .

  # Find producers of the song ""Used to Love Her""
  ?song dbp:title ""Used to Love Her"" ;
        dbo:producer ?producer .

  # Check if any producer is a band member
  OPTIONAL {
    ?producer dbo:bandMember ?band .
    ?band rdfs:label ?producerBandLabel .
    ?bandMember dbo:bandMember ?band .
    ?bandMember rdfs:label ?bandMemberLabel .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
528,43,val,Give me the war of Irene Morales and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warIreneMorales ?workCommander ?forceNarcisoCampero WHERE {
  # War involving Irene Morales
  OPTIONAL { 
    ?person rdfs:label ""Irene Morales""@en .
    ?event dbo:participant ?person ;
           a dbo:MilitaryConflict .
    BIND(?event AS ?warIreneMorales)
  }

  # Work dated January 9th and associated commander
  OPTIONAL {
    ?work dbo:date ""2000-01-09""^^xsd:date ;
          dbo:subject ?commander .
    FILTER EXISTS { ?commander a dbo:MilitaryPerson }
    BIND(?work AS ?workCommander)
  }

  # Force led by Narciso Campero
  OPTIONAL {
    ?person rdfs:label ""Narciso Campero""@en .
    ?force dbo:leader ?person ;
           a dbo:MilitaryForce .
    BIND(?force AS ?forceNarcisoCampero)
  }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
184,27,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalParent WHERE {
  ?margaret rdfs:label ""Archduchess Margaret of Austria (born 1925)""@en .
  
  # Find the parent of Archduchess Margaret
  ?margaret dbo:parent ?parent1 .

  # Find the child of that parent
  ?child dbo:parent ?parent1 .

  # Find the parent of this child
  ?child dbo:parent ?finalParent .
}
```",3,3,4,3,1,3,3,71,2,0,0,1.0,1.0,1.0
281,28,val,Give me the entity in Colony of New Zealand and war of New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?entity WHERE {
  # Entities in Colony of New Zealand
  ?nzEntity dbo:partOf ?colony .
  ?colony rdfs:label ""Colony of New Zealand""@en .

  # Wars involving the New Zealand Army
  OPTIONAL { 
    ?war dbo:militaryConflict ?nzArmy .
    ?nzArmy rdfs:label ""New Zealand Army""@en .
  }

  # Wars involving an awardee of Knight Grand Cross of the Order of the Bath
  OPTIONAL {
    ?person dbo:award ?knightGrandCross .
    ?knightGrandCross rdfs:label ""Knight Grand Cross of the Order of the Bath""@en .
    ?war dbo:militaryConflict ?person .
  }

  # Find common entities across these criteria
  FILTER (?entity = ?nzEntity || ?entity = ?war)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
767,43,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?entity WHERE {
  ?person rdfs:label ""George Kilbon Nash""@en .
  ?person dbo:almaMater ?almaMater .

  OPTIONAL {
    ?entity dbp:state ""Baden-Württemberg"" .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
783,15,val,Give me the band member of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?ebonyBandMember ?associatedArtistEbony 
               ?samuelBandMember ?associatedArtistSamuel WHERE {
  # Part 1: Ebony Reigns
  ?ebony dbo:musicalArtist ?ebonyBandMember .
  
  OPTIONAL {
    ?ebonyBandMember dbo:associatedMusicalArtist ?associatedArtistEbony .
  }
  
  # Part 2: Samuel Ofori Amponsah (Ebony Reigns)
  ?samuel rdfs:label ""Samuel Ofori Amponsah""@en .
  ?samuel dbo:musicalArtist ?samuelBandMember .

  OPTIONAL {
    ?samuelBandMember dbo:associatedMusicalArtist ?associatedArtistSamuel .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
485,15,val,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?entity WHERE {
  # Part 1: Country in the Western European Time Zone
  { 
    ?country dbo:timeZone ?tz .
    FILTER (CONTAINS(LCASE(STR(?tz)), ""western european time""))
    BIND(?country AS ?entity)
  }
  
  UNION
  
  # Part 2: Entity located in Nottinghamshire
  {
    ?entity dbo:locatedIn ?location .
    ?location rdfs:label ""Nottinghamshire""@en .
  }
}
```",3,4,4,2,2,2,3,28,0,0,357,0,0.0,0
659,32,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander1 ?commander2 WHERE {
  # Part 1: Commander of the war involving 1st Light Cavalry Lancers Regiment
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  ?regiment dbo:participatedIn ?war .
  ?war a dbo:MilitaryConflict ;
       dbo:commander ?commander1 .

  # Part 2: Commander associated with Arthur Wellesley, 1st Duke of Wellington
  ?welshCommander rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  ?welshCommander dbo:commander ?commander2 .
}
```",4,6,5,2,2,3,3,71,0,0,71,0,0.0,0
701,21,val,Give me the spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?ramesses2 rdfs:label ""Ramesses II""@en .
  ?ramesses2 dbo:spouse ?spouse .

  OPTIONAL {
    ?nefertari rdfs:label ""Nefertari""@en .
    ?nefertari dbo:child ?child .
    ?child dbo:parent ?spouse .
  }
}
```",3,3,4,2,2,3,3,71,0,1,1,0.0,0.0,0
391,28,val,Give me the native of the figure known as Hub City and actor of All About the Andersons and actor of The Departed.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Hub City""@en .
  
  ?film1 dbo:title ""All About the Andersons""@en .
  ?film2 dbo:title ""The Departed""@en .
  
  ?actor1 dbo:actor ?person .
  ?actor2 dbo:actor ?person .
  
  FILTER (?film1 != ?film2)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,38,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?person rdfs:label ""Frédéric-Georges Herr""@en .
  ?conflict dbo:militaryConflict ?person ;
            dbo:commander ?commander .
  ?capital dbo:country dbr:Algeria ;
           dbo:capital ?capitalCity .
  ?deathPlace dbo:city ?capitalCity .
  ?person dbo:deathPlace ?deathPlace .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
427,21,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party ?partyLabel WHERE {
  ?prodi rdfs:label ""Romano Prodi""@en .
  ?prodi dbo:party ?party .

  OPTIONAL { 
    ?party rdfs:label ?partyLabel .
    FILTER (CONTAINS(LCASE(?partyLabel), ""italian people's party"") && CONTAINS(LCASE(?partyLabel), ""1994""))
  }
}
```",3,3,4,2,2,3,3,71,1,7,0,0.125,1.0,0.2222222222222222
659,20,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander WHERE {
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  ?regiment dbo:commander ?commander .

  ?campaign rdfs:label ""German campaign of 1813""@en .
  ?campaign dbo:commander ?commander .
}
```",3,5,4,2,2,3,3,71,0,0,30,0,0.0,0
294,16,val,"Give me the resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?restingPlace WHERE {
  ?lukeLea rdfs:label ""Luke Lea (American politician, born 1879)""@en .
  ?lukeLea dbo:finalBurial ?restingPlace .
}

UNION

SELECT ?settlement WHERE {
  ?marionJames rdfs:label ""Marion James""@en .
  ?marionJames dbo:birthPlace ?place .
  ?place a dbo:Settlement .
  BIND(?place AS ?settlement)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
54,29,val,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?individual dbo:child ?narapatiChild .
  ?narapatiChild dbo:parent _:narapati1 .
  _:narapati1 rdfs:label ""Narapati I of Ava""@en .

  ?individual dbo:predecessor ?ameittaPredecessor .
  ?ameittaPredecessor rdfs:label ""Ameitta Thiri Maha Dhamma Dewi of Ava""@en .

  ?individual dbo:child ?thinkhayaChild .
  ?thinkhayaChild dbo:parent _:thinkhaya1 .
  _:thinkhaya1 rdfs:label ""Thinkhaya of Pagan""@en .

  ?individual dbo:parent ?parent .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
528,25,val,Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedForce WHERE {
  ?person rdfs:label ""Narciso Campero Leyes""@en .
  ?person dbo:associatedForce ?associatedForce .
}

UNION

SELECT ?war WHERE {
  ?person rdfs:label ""Orozimbo Barbosa""@en .
  ?person dbo:participatedInWar ?war .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,42,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of the team of Takashi Sekizuka and native of Japan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?university WHERE {
  # Eiji Ōtsuka's alma mater
  ?eiji dbo:almaMater ?university .
  
  # The university must be Japanese and fit the specified categories
  ?university rdf:type dbo:University ;
              rdf:type dbo:EducationalOrganization ;
              rdf:type dbo:Organisation ;
              dbo:nationality dbc:Japan .

  # The university managed Takashi Sekizuka's team
  ?university dbo:manager ?takashi .
  ?takashi rdfs:label ""Takashi Sekizuka""@en .

  # Ensure the entity is native to Japan
  ?university dbo:nationality dbc:Japan .
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
328,23,val,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?award rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""volcano and ryukyu islands campaign"")) .
  ?award dbo:recipient ?awardee .
}
```",3,3,4,3,1,3,3,71,0,0,13262,0,0.0,0
701,41,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse WHERE {
  ?ramesses2 dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?child dbo:parent ?ramesses2 ;
           dbo:parent ?spouse .
  }
  
  OPTIONAL {
    ?nefertari dbo:spouse ?ramesses2 ;
               rdfs:label ""Nefertari""@en .
    
    ?child2 dbo:parent ?nefertari ;
            dbo:parent ?ramesses2 .
  }
}
```",5,5,6,2,3,3,3,71,1,59926,0,1.668696914579405e-05,1.0,3.3373381391002534e-05
488,26,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace WHERE {
  # Step 1: Identify Matsudaira Tadamasa
  ?matsudairaTadamasa rdfs:label ""Matsudaira Tadamasa""@en .
  
  # Step 2: Find Matsudaira Tadamasa's father (Office Holder)
  ?officeHolder dbo:father ?matsudairaTadamasa ;
               a dbo:OfficeHolder .

  # Step 3: Determine the Politician Father of the Office Holder
  ?politicianFather dbo:father ?officeHolder ;
                   a dbo:Politician .
  
  # Step 4: Locate the Death Place of the Politician
  ?politicianFather dbo:deathPlace ?deathPlace .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
161,26,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?prieto dbo:predecessor ?predecessor .
  FILTER (str(?prieto) = ""Indalecio_Prieto"") .

  ?predecessor dbo:militaryForce ?militaryForce .
  
  ?militaryForce a dbo:SocietalEvent ;
                 a dbo:MilitaryConflict .
}
```",3,5,4,3,1,3,3,71,0,0,514,0,0.0,0
666,15,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as The Three Lions.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  ?team rdfs:label ""England national football team""@en .
  ?manager rdfs:label ""Leonid Slutsky""@en ;
           dbo:sportsManager ?team .
  ?player dbo:member ?team ;
          dbo:playerInTeam ?managedBy .
  ?managedBy dbo:manager ?manager .
}
```",4,7,5,3,2,3,2,20,0,0,2,0,0.0,0
547,28,val,Give me the resting place of Alan Cunningham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alanRestingPlace ?simonRestingPlace ?childName ?childRestingPlace WHERE {
  # Resting place of Alan Cunningham
  ?alan dbo:rdfsLabel ""Alan Cunningham""@en .
  ?alan dbo:finalRestingPlace ?alanRestingPlace .

  # Resting place of Simon Cadell
  ?simon dbo:rdfsLabel ""Simon Cadell""@en .
  ?simon dbo:finalRestingPlace ?simonRestingPlace .

  # Child of James Burton (property developer)
  ?james dbo:rdfsLabel ""James Burton (property developer)""@en .
  ?child dbo:parent ?james ;
         dbo:rdfsLabel ?childName .
  OPTIONAL { 
    ?child dbo:finalRestingPlace ?childRestingPlace .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
16,24,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?satomiProfession ?georgeanneProfession WHERE {
  ?satomi rdfs:label ""Satomi Ishihara""@en .
  ?satomi dbo:profession ?satomiProfession .

  ?person rdfs:label ?name .
  ?person dbo:birthName ""Georgeanne Marie Rice"" .
  ?person dbo:profession ?georgeanneProfession .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
485,16,val,"Give me the entity in United Kingdom and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?ukEntity ?birthRegion WHERE {
  ?person rdfs:label ""Joseph Whitaker (naturalist)""@en .
  ?person dbo:country ?ukEntity .
  FILTER(STR(?ukEntity) = ""United Kingdom"") .

  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type ?type .
  FILTER(STR(?type) = ""dbo:Region"" || STR(?type) = ""dbpedia-owl:Region"") .
  ?birthPlace rdfs:label ?birthRegionLabel .
}
```",3,4,4,2,2,2,3,28,0,0,357,0,0.0,0
712,15,val,"Give me the resting place of Nina Onilova and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?restingPlace ?countryCapital WHERE {
  # Part 1: Resting place of Nina Onilova
  ?ninaOnilova rdfs:label ""Nina Onilova""@en .
  OPTIONAL { ?ninaOnilova dbo:deathPlace ?restingPlace . }

  # Part 2: Capital of the country of the military force involved in Vyoshenskaya Uprising
  ?uprising rdfs:label ""Vyoshenskaya Uprising""@en .
  ?uprising dbo:militaryUnit ?militaryForce .
  ?militaryForce dbo:country ?country .
  ?country dbo:capital ?countryCapital .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
378,19,val,Give me the war of the person born as Carl Pontus Gahn and war of Joaquín Blake.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?war WHERE {
  { 
    ?person rdfs:label ""Carl Pontus Gahn""@en .
    OPTIONAL { ?person dbo:participatedIn ?war . }
  } UNION {
    ?person rdfs:label ""Joaquín Blake""@en .
    OPTIONAL { ?person dbo:participatedIn ?war . }
  }
}
```",3,3,4,2,2,3,3,71,0,2,2,0.0,0.0,0
617,39,val,Give me the spouse of Laodice IV and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?laodiceIV rdfs:label ""Laodice IV""@en .
  ?laodiceIV dbo:spouse ?spouse .

  OPTIONAL {
    ?battle rdfs:label ""Battle of Panium""@en .
    ?commander dbo:participatedIn ?battle .
    ?child dbo:parent ?commander ;
           dbo:parent ?spouse .
  }
}
```",4,4,5,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
328,25,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander WHERE {
  ?person dbo:commander ?role .
  ?person dbo:headOfState ?office .
  ?office dbo:country ?sovietUnion .
  ?sovietUnion rdfs:label ""Soviet Union""@en .
  ?person rdfs:label ?name .
  FILTER CONTAINS(?name, ""Zhukov"") .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
827,12,val,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?person rdfs:label ""Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?person dbo:father ?father .
  FILTER (lang(?person) = 'en')
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,24,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?person rdfs:label ""Frédéric-Georges Herr""@en .
  ?person dbo:commander ?war .
  ?person dbo:deathPlace ?place .
  FILTER (str(?place) = str(<http://dbpedia.org/resource/Algiers>))
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
179,11,val,Give me the parent of Ubol Ratana and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent ?personWithBirthName WHERE {
  # Find parent of Ubol Ratana
  ?ubolRatana rdfs:label ""Ubol Ratana""@en .
  ?ubolRatana dbo:parent ?parent .

  # Find person with birth name Sirikit
  ?personWithBirthName dbo:birthName ""Sirikit"" ;
                      rdfs:label ?name .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
427,40,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?andreottiParty ?pintoParty ?prodiParty WHERE {
  ?andreotti dbo:label ""Giulio Andreotti""@en .
  ?andreotti dbo:party ?andreottiParty .

  ?pinto dbo:label ""Michele Pinto""@en .
  ?pinto dbo:party ?pintoParty .

  ?prodi dbo:label ""Romano Prodi""@en .
  ?prodi dbo:party ?prodiParty .
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
747,35,val,Give me the person born on the birth date of Pavlo Khudzik and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personBornOnSameDate ?band 
WHERE {
  # Find Pavlo Khudzik's birth date
  ?pavloKhudzik rdfs:label ""Pavlo Khudzik""@en .
  ?pavloKhudzik dbo:birthDate ?birthDate .

  # Find another person born on the same date
  ?personBornOnSameDate dbo:birthDate ?birthDate .
  FILTER(?personBornOnSameDate != ?pavloKhudzik) 

  # Find Tracey Elizabeth McSween's band
  ?traceyElizabethMcSween rdfs:label ""Tracey Elizabeth McSween""@en .
  ?traceyElizabethMcSween dbo:band ?band .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
92,43,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of Joseph Michael.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedArtist WHERE {
  ?person dbo:actor :Return_to_Nuke_Em_High_Volume_1 ;
          dbo:bandMember :Nevermore ;
          a dbo:Artist .
  
  OPTIONAL { 
    ?person rdfs:label ""Jeff Loomis""@en .
  }
  
  ?person dbo:associatedBand ?associatedBand .
  ?associatedBand rdfs:label ?associatedArtist .

  FILTER(?associatedArtist = ""Joseph Michael"")
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
701,24,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?child ?parent ?spouse WHERE {
  ?ramesses2 dbo:spouse ?spouse .
  ?ramesses2 rdfs:label ""Ramesses II""@en .
  ?ramesses2 dbo:child ?child .
  ?child dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,23,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?universityName WHERE {
  ?person dbo:birthYear ""1958""^^xsd:gYear .
  ?person dbo:almaMater ?university .
  
  ?university rdf:type dbo:University ;
              rdfs:label ?universityName ;
              dbo:country dbc:Japan .

  FILTER (LANG(?universityName) = 'en')
}
```",3,7,4,3,1,3,3,71,0,0,524,0,0.0,0
251,19,val,"Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v2 <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration ?deathPlace ?warLocation WHERE {
  # Administration of Forza Italia (2013)
  OPTIONAL {
    ?party rdfs:label ""Forza Italia""@en .
    ?party dbo:member ?person .
    ?person dbo:office ?office .
    ?office dbo:startDate ?start .
    ?office dbo:endDate ?end .
    FILTER(year(?start) <= 2013 && year(?end) >= 2013)
    ?office dbo:position ?administration .
  }

  # Death place of Laura Mancinelli
  OPTIONAL {
    ?person rdfs:label ""Laura Mancinelli""@en .
    ?person dbo:deathPlace ?deathPlace .
  }
  
  # Location of the war involving Louis François Félix Musnier
  OPTIONAL {
    ?militaryPerson rdfs:label ""Louis François Félix Musnier""@en .
    ?militaryPerson dbo:militaryConflict ?conflict .
    ?conflict dbo:location ?warLocation .
  }
}
```",4,5,5,2,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
547,26,val,Give me the resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?restingPlace WHERE {
  ?actor rdfs:label ""Kate Flannery""@en .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,13,val,Give me the person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Headquarters of House of Sombrerete""@en .
  
  OPTIONAL { 
    ?person dbo:award ?award .
    FILTER regex(str(?award), ""30"", ""i"")
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,19,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  ?laodiceIV rdfs:label ""Laodice IV""@en .
  ?laodiceIV dbo:spouse ?spouse .

  OPTIONAL { 
    ?spouse dbo:child ?royalChild .
    
    FILTER EXISTS { 
      ?royalChild (dbo:king|dbo:queen) ?title .
    }
    
    ?royalChild dbo:child ?grandchild .
  }
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
16,39,val,Give me the person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthName WHERE {
  ?person dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""actress""))
  OPTIONAL { ?person dbo:birthName ?birthName }
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
528,31,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warLabel WHERE {
  # Wars involving military forces in Chile
  ?militaryForce dbo:militaryConflict ?war .
  ?militaryForce dbo:country dbr:Chile .

  # Wars associated with Orozimbo Barbosa
  OPTIONAL { 
    ?barbosa dbo:participatedIn ?war .
    FILTER (str(?barbosa) = str(dbr:Orozimbo_Barbosa))
  }

  # Ensure the war is a societal event
  ?war rdf:type dbo:MilitaryConflict .

  # Get the label of the war
  ?war rdfs:label ?warLabel .
  FILTER (lang(?warLabel) = 'en')
}
```",4,5,5,3,2,3,3,71,0,0,9,0,0.0,0
659,28,val,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in Battle of Leipzig and military force of Napoleonic Wars.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?welshley rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  ?welshley dbo:participatedInBattle ?battle .
  FILTER (str(?battle) = str(dbp:Battle_of_Leipzig))
  
  OPTIONAL { 
    ?force dbo:militaryForceOfNapoleonicWars ?true .
    ?force dbo:commander ?commander .
  }
}
```",4,4,5,2,3,3,3,71,0,0,5,0,0.0,0
9,22,val,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater ?nickname WHERE {
  # Find the alma mater of John Alderdice
  ?person rdfs:label ""John Alderdice""@en .
  ?person dbo:almaMater ?almaMater .

  OPTIONAL {
    # Find any nickname for Queen's University Belfast
    ?university rdfs:label ""Queen's University Belfast""@en .
    ?university rdfs:comment ?comment .
    FILTER(CONTAINS(LCASE(?comment), ""nickname""))
    BIND(SUBSTR(?comment, STRSTARTS(UCASE(?comment), ""NICKNAME: ""), 100) AS ?nickname)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,27,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?unit ?war WHERE {
  ?officeHolder a dbo:MinisterOfDefence ;
               dbo:country dbr:New_Zealand .
  ?officeHolder dbo:hasPosition ?position .
  ?position rdfs:label ""Minister of Defence""@en .
  
  ?unit dbo:participatedIn ?war ;
        dbo:militaryBranch dbr:New_Zealand_Army .
  
  OPTIONAL {
    ?officeHolder dbo:memberOf ?unit .
  }
}
```",3,6,4,3,1,3,3,71,0,0,14,0,0.0,0
392,13,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?country WHERE {
  ?country rdf:type dbo:Country .
  ?country dbo:timeZone ?tz .
  FILTER(CONTAINS(LCASE(?tz), ""central european time""))
}
```",3,4,4,2,2,2,3,28,0,0,28787,0,0.0,0
360,12,val,Give me the writer of The Roaring Silence and native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?writer ?birthPlace WHERE {
  ?album rdfs:label ""The Roaring Silence""@en .
  ?album dbo:artist ?band ;
         dbo:composer ?writer .
  OPTIONAL { ?writer dbo:birthPlace ?birthPlace . }
  FILTER (CONTAINS(LCASE(STR(?birthPlace)), LCASE(""johannesburg"")))
  
  # Establishing connection to Manfred Mann
  ?manfred rdfs:label ""Manfred Mann""@en .
  ?band dbo:member ?manfred ;
        dbo:member ?writer .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
161,24,val,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?militaryForce WHERE {
  ?campaign dbo:name ""Biscay Campaign""@en .
  ?campaign dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(STR(?commander)), ""francisco largo caballero"")) .

  ?commander dbo:militaryForce ?militaryForce .
  
  ?militaryForce rdf:type/rdfs:subClassOf* ?type1 .
  ?militaryForce rdf:type/rdfs:subClassOf* ?type2 .
  FILTER(CONTAINS(LCASE(STR(?type1)), ""societal event"") && CONTAINS(LCASE(STR(?type2)), ""military conflict""))
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
915,15,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?resident WHERE {
  ?film dbo:title ""Pipe Dreams""@en .
  ?film dbo:director ?director .
  
  ?director dbo:child ?lizzieSpaulding .
  ?lizzieSpaulding rdfs:label ""Lizzie Spaulding""@en .

  ?director dbo:birthPlace ?birthplace .
  ?birthplace a dbo:Settlement .

  ?birthplace dbo:resident ?resident .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
528,18,val,Give me the war of Orozimbo Barbosa and force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war WHERE {
  {
    ?person rdfs:label ""Orozimbo Barbosa""@en .
    ?person dbo:participatedIn ?war .
  }
  UNION
  {
    ?person rdfs:label ""Narciso Campero""@en .
    ?person dbo:participatedIn ?war .
  }
  UNION
  {
    ?person rdfs:label ""Irene Morales""@en .
    ?person dbo:participatedIn ?war .
  }
}
```",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
547,38,val,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actorRestingPlaceLabel ?awardeeRestingPlaceLabel WHERE {
  # Part 1: Resting place of the actor of ""Enemy at the Door""
  {
    ?movie dbo:title ""Enemy at the Door""@en .
    ?movie dbo:actor ?actor .
    OPTIONAL { ?actor dbo:deathPlace ?actorDeathPlace . }
    BIND(COALESCE(?actorDeathPlace, ""Unknown"") AS ?actorRestingPlace)
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  # Part 2: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person dbo:honoraryTitle ""Knight Grand Cross of the Order of St Michael and St George""@en .
    OPTIONAL { ?person dbo:deathPlace ?awardeeDeathPlace . }
    BIND(COALESCE(?awardeeDeathPlace, ""Unknown"") AS ?awardeeRestingPlace)
  }

  # Labels for results
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"".
    ?actorRestingPlace rdfs:label ?actorRestingPlaceLabel .
    ?awardeeRestingPlace rdfs:label ?awardeeRestingPlaceLabel .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
77,12,val,Give me the force of the mayor of Congress Poland and war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mayor ?action WHERE {
  ?mayor rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""congress poland"") && CONTAINS(LCASE(?label), ""mayor"")) .
  OPTIONAL { ?mayor dbo:hasAction ?action . }
}

UNION

SELECT ?person ?war WHERE {
  ?person rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""alexander chechenskiy"") && CONTAINS(LCASE(?label), ""war"")) .
}
```",3,3,4,2,2,3,2,20,0,0,6,0,0.0,0
404,37,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandParent ?parentOfChild ?child ?parent WHERE {
  # Prince George William of Hanover
  ?princeGeorge rdfs:label ""Prince George William of Hanover""@en .
  
  # Parent of Prince George (Royalty)
  ?parent dbo:child ?princeGeorge ;
          a dbo:Monarch .

  # Child of that parent and Ernest Augustus (Royalty)
  ?ernestAugustus rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .
  ?child dbo:parent ?parent ;
         dbo:parent ?ernestAugustus ;
         a dbo:Monarch .

  # Parent of this child
  ?parentOfChild dbo:child ?child .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
285,14,val,Give me the spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse WHERE {
  ?award dbo:recipient ?professional .
  ?stanLee dbo:award ?award .
  FILTER(?stanLee = dbpedia:Stan_Lee) .

  OPTIONAL { ?professional dbo:spouse ?spouse . }
}
```",3,3,4,3,1,3,2,20,0,0,4149,0,0.0,0
659,21,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce ?commander WHERE {
  ?wellesley rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  ?wellesley dbo:militaryCommanderOf ?militaryForce .

  OPTIONAL {
    ?militaryForce dbo:commander ?commander .
  }
}
```",3,3,4,2,2,3,3,71,0,0,32,0,0.0,0
92,29,val,"Give me the band of Joseph Michael and band member of Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?josephBand ?nevermoreMember ?sheppardArtist WHERE {
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbo:band ?josephBand .

  ?band rdfs:label ""Nevermore""@en .
  ?band dbo:member ?nevermoreMember .

  ?artist rdfs:label ""Jim Sheppard""@en .
  ?artist a dbo:Artist .
  ?artist dbo:associatedBand ?sheppardArtist .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,19,val,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Find the commander on the Eastern Front
  ?commander rdfs:label ""Georgy Zhukov""@en .
  ?commander dbo:commanderOf ?front .
  ?front rdfs:label ""Eastern Front (World War II)""@en .

  # Find awardees of Bruce Fraser, 1st Baron Fraser of North Cape
  OPTIONAL {
    ?person dbo:awardedBy <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
  }

  FILTER EXISTS { ?commander = ?person }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
184,31,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?landmark a dbo:Settlement ;
            dbo:elevation ""96.0""^^xsd:float .
  ?landmark dbo:child ?archduke .
  ?archduke rdfs:label ""Archduke Joseph August of Austria""@en .
  
  ?landmark dbo:nativeOf ?nativePlace .
  ?nativePlace dbo:parent ?parent .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
487,14,val,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration WHERE {
  ?person dbo:birthName ""Phil Scott""@en .
  ?person dbo:sportsTeam ?team .
  ?team rdf:type dbo:SoccerClub .
  OPTIONAL { ?person dbo:positionHeld ?administration . }
}
```",3,4,4,3,1,3,2,20,0,0,14,0,0.0,0
294,17,val,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?architect WHERE {
  ?house rdfs:label ""P. D. Houston Jr. House""@en .
  ?house dbo:location dbr:Nashville,_Tennessee .
  ?house dbo:architect ?architect .
}

SELECT ?deathPlace WHERE {
  ?architect dbo:deathPlace ?deathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
547,41,val,Give me the resting place of the child of James Burton (property developer) and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childRestingPlace ?alanCunninghamRestingPlace ?actorRestingPlace WHERE {
  # Resting place of James Burton's child
  ?jamesBurton rdfs:label ""James Burton (property developer)""@en .
  ?child dbo:parent ?jamesBurton ;
         dbo:finalRestingPlace ?childRestingPlace .

  # Resting place of Alan Cunningham
  ?alanCunningham rdfs:label ""Alan Cunningham""@en .
  ?alanCunningham dbo:finalRestingPlace ?alanCunninghamRestingPlace .

  # Resting place of the actor of ""Enemy at the Door""
  ?film rdfs:label ""Enemy at the Door""@en .
  ?actor dbo:actedIn ?film ;
         dbo:finalRestingPlace ?actorRestingPlace .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
645,14,val,Give me the alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?almaMater WHERE {
  ?adela rdfs:label ""Adela Pankhurst""@en .
  ?parent dbo:child ?adela .
  ?sibling dbo:parent ?parent .
  FILTER(?sibling != ?adela)
  ?sibling dbo:almaMater ?almaMater .
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
281,33,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?countryLeader ?countryBeauchamp WHERE {
  # Leader of the 1962 New South Wales state election
  ?leader rdfs:label ""1962 New South Wales state election""@en .
  ?leader dbo:leader ?personLeader .
  
  OPTIONAL {
    ?personLeader dbo:birthPlace ?birthPlaceLeader .
    ?birthPlaceLeader rdf:type dbo:Country .
    ?birthPlaceLeader rdfs:label ?countryLeader .
  }
  
  # Beauchamp Seymour, 1st Baron Alcester
  ?beauchamp rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .
  
  OPTIONAL {
    ?beauchamp dbo:birthPlace ?birthPlaceBeauchamp .
    ?birthPlaceBeauchamp rdf:type dbo:Country .
    ?birthPlaceBeauchamp rdfs:label ?countryBeauchamp .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
981,14,val,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?person dbo:authorOf ?work .
  ?work rdfs:label ""Kamikaze Girls""@en .
  ?person dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""beauty queen""))
  ?person dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,170,0,0.0,0
801,25,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song).",SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?song1 rdfs:label ""40 Dayz & 40 Nightz""@en .
  ?song1 dbo:lyricist ?person .

  ?song2 rdfs:label ""Westside Story (song)""@en .
  ?song2 dbo:producer ?person .

  ?person a dbo:MusicalArtist ;
          a dbo:Artist .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
747,18,val,Give me the band of Shèna and person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?shenaBand ?personBorn1985 ?ambaShepherdBand WHERE {
  # Find Shèna's band
  ?shena a dbo:MusicArtist ;
         rdfs:label ""Shèna""@en .
  OPTIONAL { ?shena dbo:band ?shenaBand . }

  # Find person born on 1985-04-29
  ?person a dbo:Person ;
          dbo:birthday ?birthday .
  FILTER (YEAR(?birthday) = 1985 && MONTH(?birthday) = 4 && DAY(?birthday) = 29)
  BIND(?person AS ?personBorn1985)

  # Find Amba Shepherd's band
  ?ambaShepherd a dbo:MusicArtist ;
                rdfs:label ""Amba Shepherd""@en .
  OPTIONAL { ?ambaShepherd dbo:band ?ambaShepherdBand . }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
645,13,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?battle rdfs:label ""Battle of Diamond Rock""@en .
  ?battle dbo:commander ?commander .
  
  OPTIONAL { 
    ?commander dbo:residence ?residence .
    ?residence dbo:country ?country .
  }
}
```",3,4,4,3,1,3,2,20,0,0,42999,0,0.0,0
488,19,val,Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?saigo rdfs:label ""Saigō Takamori""@en .
  ?saigo dbo:birthPlace ?birthPlace .
}

UNION

SELECT ?deathPlace WHERE {
  ?ieyasu rdfs:label ""Tokugawa Ieyasu""@en .
  ?ieyasu dbo:deathPlace ?deathPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,37,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor ?thadoParent WHERE {
  # Find Ameitta Thiri Maha Dhamma Dewi of Ava and her predecessor
  ?ameitta rdfs:label ""Ameitta Thiri Maha Dhamma Dewi""@en .
  ?ameitta dbo:predecessor ?predecessor .

  # Find Thado Minsaw of Prome and his parent
  ?thado rdfs:label ""Thado Minsaw""@en .
  ?thado dbo:parent ?thadoParent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
801,38,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?artist WHERE {
  ?song rdfs:label ""40 Dayz & 40 Nightz""@en .
  ?song dbo:writer ?writer .
  ?writer rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist .
  ?work rdfs:label ?title .
  FILTER(CONTAINS(LCASE(?title), ""50 cent"")).
  ?work dbo:producer ?writer .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
421,16,val,Give me the band member of Senidah and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember ?personWithSameBirthName WHERE {
  # Part 1: Find band member of Senidah
  ?senidah dbo:birthName ""Senidah""@en .
  ?band dbo:bandMember ?senidah .
  ?band dbo:bandMember ?bandMember .

  # Part 2: Find person born with Dino Merlin's birth name
  ?dinoMerlin dbo:birthName ?birthName .
  ?person foaf:name ?birthName .
  
  FILTER(?person != ?dinoMerlin) # Ensure it's not the same person as Dino Merlin

  BIND(?bandMember AS ?personWithSameBirthName)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
767,30,val,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?result WHERE {
  # Alma mater of Carl L. Nippert
  { 
    ?person rdfs:label ""Carl L. Nippert""@en .
    ?person dbo:almaMater ?institution .
    BIND(""Alma Mater of Carl L. Nippert"" AS ?result)
  }
  
  UNION
  
  # Entity in Baden-Württemberg
  { 
    ?entity dbo:location ?place .
    ?place rdfs:label ""Baden-Württemberg""@en .
    BIND(CONCAT(""Entity in "", STR(?entity)) AS ?result)
  }

  UNION

  # Alter ego of Black Hood
  {
    ?character rdfs:label ""Black Hood""@en .
    ?character dbo:alterEgo ?person .
    BIND(STR(?person) AS ?result)
  }
}
```",4,4,5,2,3,3,3,71,0,202,1,0.0,0.0,0
754,13,val,Give me the parent of the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandGrandParent WHERE {
  ?minLinka rdfs:label ""Min Linka""@en .
  
  # First parent (e.g., administrative division)
  ?minLinka dbo:administrativeDivision ?parent1 .

  # Second parent
  ?parent1 dbo:administrativeDivision ?parent2 .

  # Third parent
  ?parent2 dbo:administrativeDivision ?grandGrandParent .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
528,21,val,Give me the war of the military force of Battle of Pisagua and force of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?battleForce ?camperoForce WHERE {
  # Find the military force involved in the Battle of Pisagua
  ?battleEvent rdfs:label ""Battle of Pisagua""@en .
  ?battleEvent dbo:participatedIn ?battleForce .

  OPTIONAL {
    # Find the military force associated with Narciso Campero
    ?campero dbo:militaryCommander ?camperoForce .
    ?campero rdfs:label ""Narciso Campero""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
182,18,val,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?nationality WHERE {
  ?person rdfs:label ""Jagath Dias""@en .
  ?person dbo:participatedIn ?war .

  ?kunanayakam rdfs:label ""Tamara Kunanayakam""@en .
  ?kunanayakam dbo:nationality ?nationality .
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
184,41,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Find children of Archduke Joseph Karl
  ?parent rdfs:label ""Archduke Joseph Karl of Austria""@en .
  ?parent dbo:child ?child .

  # Step 2: Find grandchildren (children of the child)
  ?child dbo:child ?grandchild .

  # Step 3: Check if grandchild is a parent of someone from Budapest
  OPTIONAL {
    ?budaPerson dbo:birthPlace ?place .
    ?place rdfs:label ""Budapest""@en .
    ?grandchild dbo:parent ?budaPerson .
  }

  # Step 4: Check if grandchild is a parent of Archduchess Ilona
  ?ilona rdfs:label ""Archduchess Ilona of Austria""@en .
  ?grandchild dbo:parent ?ilona .

}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,43,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of Rif War and commander in Biscay Campaign.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryForce WHERE {
  ?indalecioPrieto dbo:predecessor ?predecessor .
  FILTER (str(?indalecioPrieto) = ""Indalecio_Prieto"") .

  ?predecessor dbo:militaryForce ?militaryForce .

  ?societalEvent dbo:participatedIn ?militaryForce ;
                 a dbo:SocietalEvent .
  
  ?conflict dbo:participatedIn ?militaryForce ;
            a dbo:MilitaryConflict .

  ?rifWar dbo:participatedIn ?militaryForce ;
          rdfs:label ""Rif_War""@en .

  ?biscayCampaign dbo:commander ?militaryForce ;
                  rdfs:label ""Biscay_Campaign""@en .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
360,16,val,Give me the writer of The Roaring Silence and reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writerOfRoaringSilence ?authorOfBlindedByTheLight WHERE {
  ?album rdfs:label ""The Roaring Silence""@en .
  ?album dbo:composer ?writerOfRoaringSilence .

  OPTIONAL {
    ?song rdfs:label ""Blinded by the Light""@en .
    ?song dbo:lyricist|dbo:writer ?authorOfBlindedByTheLight .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
9,40,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB.","SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?allenHillAlmaMater ?mayorAlmaMater WHERE {
  # Find Allen Hill's alma mater
  ?person rdfs:label ""Allen Hill (scientist)""@en .
  ?person dbo:almaMater ?allenHillAlmaMater .

  OPTIONAL {
    # Identify the mayor of Belfast who is a politician
    ?mayor dbo:positionTitle ?title ;
           dbo:officeHolderFor ?belfastEntity ;
           dbo:almaMater ?mayorAlmaMater .
    
    FILTER(CONTAINS(LCASE(?title), ""mayor"") && CONTAINS(LCASE(?title), ""politician""))
    
    # Ensure the entity is an organization in Belfast known as QUB
    ?belfastEntity rdfs:label ""Belfast""@en ;
                   dbo:location ?location .
    ?location rdfs:label ""Belfast""@en .
    OPTIONAL { ?belfastEntity rdfs:label ""Queen's University Belfast""@en . }
  }
}
```",5,7,6,3,3,3,3,71,1,0,0,1.0,1.0,1.0
184,30,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?commonChild ?parent WHERE {
  # Find children of Archduke Joseph Francis of Austria
  ?child dbo:parent <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  
  # Ensure the child is also a child of Archduke Joseph August of Austria
  ?child dbo:parent <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .

  # Find parent(s) of Géza von Habsburg
  <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> dbo:parent ?commonChild .
  
  # Ensure the common child is the same individual in both conditions
  FILTER (?child = ?commonChild)

  # Find parent(s) of this common child
  ?commonChild dbo:parent ?parent .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
281,18,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in Colony of New Zealand and war of New Zealand Army.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war WHERE {
  # Wars involving Beauchamp Seymour, 1st Baron Alcester
  { 
    ?person rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .
    ?person dbo:participatedIn ?war .
  }
  
  UNION
  
  # Wars involving the Colony of New Zealand or the New Zealand Army
  {
    ?entity rdfs:label ""Colony of New Zealand""@en ;
            dbo:participatedIn ?war .
  }
  UNION
  {
    ?entity rdfs:label ""New Zealand Army""@en ;
            dbo:participatedIn ?war .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
747,30,val,Give me the person born on 1985-04-29 and band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthDate ?band WHERE {
  # Tracey Elizabeth McSween's information
  { 
    ?tracey rdfs:label ""Tracey Elizabeth McSween""@en .
    OPTIONAL { ?tracey dbo:birthday ?birthDate . }
    FILTER (?birthDate = ""1985-04-29""^^xsd:date)
    OPTIONAL { ?tracey dbo:band ?band . }
  }

  # Amba Shepherd's information
  {
    ?amba rdfs:label ""Amba Shepherd""@en .
    OPTIONAL { ?amba dbo:band ?band . }
  }

  UNION
  {
    ?person = ?tracey .
  }
  UNION
  {
    ?person = ?amba .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
184,26,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria
  ?ladislaus rdfs:label ""Archduke Ladislaus Philipp of Austria""@en .
  
  # Step 2: Find his parent(s)
  OPTIONAL { ?ladislaus dbo:parent ?parent . }
  
  # Step 3: For each parent, find their children
  OPTIONAL { ?parent dbo:child ?royalChild . }
  
  # Step 4: Check if any of these children are royalty
  OPTIONAL { ?royalChild dbo:royalTitle ?title . FILTER (lang(?title) = 'en') }

  # Step 5: Find the child of this royal individual
  OPTIONAL { ?royalChild dbo:child ?grandchild . }
}
```",3,4,4,3,1,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
838,14,val,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember WHERE {
  ?group rdfs:label ""YU Grupa""@en .
  ?group a dbo:Band ;
         a dbo:Organization .
  ?group dbo:bandMember ?bandMember .
}
```",3,6,4,3,1,3,2,20,0,0,40,0,0.0,0
356,13,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?player WHERE {
  ?season1 rdfs:label ""2015 Sacramento Republic FC season""@en .
  ?season1 dbo:predecessor ?predecessorSeason .
  ?predecessorSeason dbo:successor ?successorSeason .
  
  FILTER EXISTS { 
    ?successorSeason rdf:type dbo:SoccerClubSeason .
  }
  
  ?successorSeason dbo:player ?player .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
754,15,val,Give me the parent of the parent of the parent of Min Linka and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?greatGrandparent WHERE {
  # Min Linka's lineage
  OPTIONAL { 
    ?minLinka dbo:birthName ""Min Linka""@en .
    ?minLinka dbo:parent ?parent1A .
    ?parent1A dbo:parent ?grandparent1A .
    ?grandparent1A dbo:parent ?greatGrandparent .
  }

  # May Hnin Thwe-Da's lineage
  OPTIONAL { 
    ?mayHninThweDa dbo:birthName ""May Hnin Thwe-Da""@en .
    ?mayHninThweDa dbo:parent ?parent1B .
    ?parent1B dbo:parent ?grandparent1B .
    ?grandparent1B dbo:parent ?greatGrandparent .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
232,27,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nativeOfBritishSettlement WHERE {
  ?politician dbo:nationality dbc:France ;
              rdf:type dbo:Politician ;
              dbo:officeHolder true .
  
  ?residence dbo:resident ?politician ;
             rdf:type dbo:Settlement ;
             dbo:country dbc:United_Kingdom .

  ?nativeOfBritishSettlement dbo:birthPlace ?residence .
}
```",3,7,4,3,1,3,3,71,0,0,9121,0,0.0,0
92,19,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?person rdfs:label ""Jim Sheppard""@en .
  ?person dbo:member ?nevermore .
  ?nevermore rdfs:label ""Nevermore""@en .
  OPTIONAL { ?person dbo:associatedBand ?artist . }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,38,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce1 ?militaryConflict1 ?militaryForce2 WHERE {
  ?person rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  ?person dbo:commander ?militaryForce1 .
  ?militaryConflict1 dbo:militaryCommander ?person ;
                    a dbo:MilitaryConflict .

  OPTIONAL { 
    ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
    ?regiment dbo:participatedIn ?militaryConflict2 .
    ?militaryConflict2 a dbo:MilitaryConflict ;
                       ?p ?militaryForce2 .
  }

  FILTER(?militaryConflict1 = ?militaryConflict2)
}
```",4,9,5,2,2,3,3,71,0,0,31,0,0.0,0
617,27,val,Give me the parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?battle rdfs:label ""Battle of Panium""@en .
  ?battle dbo:commander ?commander .
  
  OPTIONAL { 
    ?commander dbo:child ?child .
    
    OPTIONAL {
      ?child dbo:parent ?parent .
    }
  }
}
```",3,3,4,3,1,3,3,71,4,0,0,1.0,1.0,1.0
754,11,val,Give me the parent of May Hnin Thwe-Da and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentOfMayHninThweDa ?grandParentOfMayHninHtapi WHERE {
  # Find the parent of May Hnin Thwe-Da
  ?mayHninThweDa dbo:parent ?parentOfMayHninThweDa .
  FILTER (str(?mayHninThweDa) = ""May_Hnin_Thwe-Da"")

  # Find the grandparent of May Hnin Htapi
  ?mayHninHtapi dbo:parent ?parentOfMayHninHtapi .
  ?parentOfMayHninHtapi dbo:parent ?grandParentOfMayHninHtapi .
  FILTER (str(?mayHninHtapi) = ""May_Hnin_Htapi"")
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
182,14,val,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?work WHERE {
  VALUES ?person { 
    dbpedia:Gotabhaya_Rajapaksa 
    dbpedia:Mahesh_Senanayake
  }
  
  ?person dbo:work ?work .
  OPTIONAL {
    ?work rdfs:label ?workLabel .
    FILTER(CONTAINS(LCASE(?workLabel), ""war""))
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
485,18,val,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?region WHERE {
  ?whitaker dbo:birthPlace ?place1 .
  ?warner dbo:birthPlace ?place2 .
  ?place1 rdf:type dbo:Region ;
          rdfs:label ?regionLabel .
  ?place2 rdf:type dbo:Region ;
          rdfs:label ?regionLabel .
  FILTER (lang(?regionLabel) = 'en')
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?regionLabel), "" "", ""_""))) AS ?region)
}
```",3,4,4,2,2,2,3,28,0,10979,1,0.0,0.0,0
767,28,val,"Give me the reference to  and entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?settlement ?almaMater WHERE {
  ?green rdfs:label ""Green""@en .
  ?green dbo:administrativeUnit ?settlement .

  ?nippert foaf:name ""Carl L. Nippert"" .
  ?nippert foaf:almaMater ?almaMater .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
767,21,val,"Give me the entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?settlement ?reference WHERE {
  ?green rdfs:label ""Green""@en .
  ?admin dbo:administrativeUnit ?green .
  ?admin rdf:type dbo:Settlement .
  ?admin rdfs:seeAlso ?reference .
}
```",3,4,4,2,2,3,3,71,0,0,7,0,0.0,0
427,30,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?prodiParty ?ppi ?andreottiParty WHERE {
  ?prodi rdfs:label ""Romano Prodi""@en .
  ?prodi dbo:partyAffiliation ?prodiParty .

  OPTIONAL {
    ?ppi rdfs:label ""Partito Popolare Italiano""@en .
  }

  OPTIONAL {
    ?andreotti rdfs:label ""Giulio Andreotti""@en .
    ?andreotti dbo:partyAffiliation ?andreottiParty .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
712,14,val,Give me the resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?restingPlace WHERE {
  ?person dbo:award ?award .
  ?show dbo:country ?country .
  FILTER (str(?country) = ""Soviet Union"")
  ?show dbo:awardee ?person .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace }
}
```",3,3,4,3,1,3,2,20,0,0,63,0,0.0,0
528,44,val,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander ?warOfLaRinconada WHERE {
  ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
  ?battle dbo:commander ?commander .
  ?battle dbo:partOfWar ?warOfLaRinconada .
}

UNION

SELECT ?ireneMoralesWar WHERE {
  ?person rdfs:label ""Irene Morales""@en .
  ?person dbo:participatedIn ?ireneMoralesWar .
}

UNION

SELECT ?narcisoForce WHERE {
  ?person foaf:name ""Narciso Campero Leyes""@en ;
          dbo:militaryForce ?narcisoForce .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
963,15,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of Serbian Progressive Party.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country WHERE {
  ?canton rdfs:label ""Herzegovina-Neretva Canton""@en .
  ?canton dbo:timeZone ?timezone .

  ?country dbo:timeZone ?timezone ;
           a dbo:Country .

  OPTIONAL { 
    ?party rdfs:label ""Serbian Progressive Party""@en .
    ?party dbo:administration ?admin .
    ?admin dbo:country ?country .
  }
}
```",4,5,5,3,2,3,2,20,0,94,84,0.0,0.0,0
339,11,val,Give me the child of the child of Christian IX of Denmark and father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?grandchild WHERE {
  ?christianIX rdfs:label ""Christian IX of Denmark""@en .
  
  # Find children of Christian IX
  ?child dbo:parent ?christianIX ;
         a dbo:Person .

  # Find grandchildren (children of the child)
  ?grandchild dbo:parent ?child ;
              a dbo:Person .

  # Identify which grandchild is the father of Princess Elizabeth of Greece and Denmark
  ?princess rdfs:label ""Princess Elizabeth of Greece and Denmark""@en .
  ?princess dbo:father ?grandchild .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
391,31,val,"Give me the actor of The Departed and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  # Part 1: Find an actor of ""The Departed""
  ?movie rdfs:label ""The Departed""@en .
  ?movie dbo:starring ?actor .

  # Part 2: Identify the figure nicknamed after Jackson, Tennessee
  ?figure rdfs:label ?nickname .
  FILTER(CONTAINS(LCASE(?nickname), ""jackson tennessee""))

  # Check if the actor is native to this figure's place of origin
  ?actor dbo:nativePlace ?nativePlace .
  ?figure dbo:nativePlace ?nativePlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,39,val,Give me the associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist ?band WHERE {
  # Part 1: Associated musical artist of Jim Sheppard
  OPTIONAL {
    ?sheppard rdfs:label ""Jim Sheppard""@en .
    ?sheppard dbo:associatedBand ?artist .
  }

  # Part 2: Band of the person born as Joseph Michael
  OPTIONAL {
    ?person rdfs:label ""Joseph Michael""@en .
    ?person dbo:birthName ""Joseph Michael"" .
    ?person dbo:band ?band .
  }
}
```",4,4,5,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
767,25,val,Give me the alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater ?alterEgo WHERE {
  # Part 1: Alma Mater of Carl L. Nippert
  ?person rdfs:label ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?almaMater .

  # Part 2: Alter Ego of Black Hood
  OPTIONAL {
    ?character rdfs:label ""Black Hood""@en .
    ?character dbo:alterEgo ?alterEgo .
  }
}
```",3,3,4,2,2,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
801,44,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in  and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer ?associatedArtist WHERE {
  ?work rdfs:label ""40 Dayz & 40 Nightz""@en .
  ?work dbo:artist dbr:50_Cent ;
        dbo:producer ?producer ;
        dbo:writer ?writer .

  OPTIONAL { 
    ?writer dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
701,43,val,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentMeritamen ?spouseRamessesII ?grandchildParent WHERE {
  # Parent of Meritamen
  ?meritamen rdfs:label ""Meritamen""@en .
  OPTIONAL { ?meritamen dbo:parent ?parentMeritamen . }

  # Spouse of Ramesses II
  ?ramessesII rdfs:label ""Ramesses II""@en .
  OPTIONAL { ?ramessesII dbo:spouse ?spouseRamessesII . }

  # Parent of the child of the child of Seti I
  ?setiI rdfs:label ""Seti I""@en .
  ?child1 dbo:parent ?setiI ;
          dbo:child ?grandchild .
  ?grandchildParent dbo:parent ?grandchild .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
701,25,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfHenuttawy ?spouseOfFatherOfMerneptah WHERE {
  # Part 1: Parent of Henuttawy (19th dynasty)
  ?henuttawy rdfs:label ""Henuttawy""@en .
  ?henuttawy dbo:era ""19th dynasty"" .
  ?henuttawy dbo:parent ?parentOfHenuttawy .

  # Part 2: Spouse of the Father of Merneptah
  ?merneptah rdfs:label ""Merneptah""@en .
  ?merneptah dbo:father ?fatherOfMerneptah .
  ?fatherOfMerneptah dbo:spouse ?spouseOfFatherOfMerneptah .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
547,19,val,Give me the resting place of the child of James Burton (property developer) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?childRestingPlace ?simonCadellRestingPlace WHERE {
  # Find James Burton (property developer) and one of his children
  ?jamesBurton rdfs:label ""James Burton""@en .
  ?jamesBurton dbo:occupation ""Property Developer""@en .
  ?child dbo:parent ?jamesBurton .

  OPTIONAL { 
    ?child dbo:deathPlace ?childRestingPlace .
  }

  # Find Simon Cadell and his resting place
  ?simonCadell rdfs:label ""Simon Cadell""@en .
  
  OPTIONAL {
    ?simonCadell dbo:deathPlace ?simonCadellRestingPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,21,val,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?person1 rdfs:label ""Ted Martin McGinley""@en .
  ?person2 rdfs:label ""Georgeanne Marie Rice""@en .
  
  OPTIONAL { ?person1 dbo:spouse ?spouse . }
  OPTIONAL { ?person2 dbo:spouse ?spouse . }

  FILTER (?spouse = ?person1 || ?spouse = ?person2)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,41,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?militaryForce ?commanderInForce ?event WHERE {
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Napoleonic Wars""@en .
  
  OPTIONAL { 
    ?militaryForce dbo:partOfMilitaryConflicts ?event ;
                   rdfs:label ?forceLabel .
    FILTER(CONTAINS(LCASE(?forceLabel), ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""))
  }
  
  OPTIONAL {
    ?commanderInForce dbo:commander ?welshley ;
                      rdfs:label ?commanderLabel .
    ?welshley rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
    FILTER(CONTAINS(LCASE(?commanderLabel), ""military force""))
  }
  
  OPTIONAL {
    ?event dbo:commander ?welshley ;
           rdfs:label ?warCommanderLabel .
    ?welshley rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  }
}
```",5,7,6,2,3,3,3,71,0,1,13,0.0,0.0,0
54,19,val,Give me the child of the father of Soe Min Wimala Dewi and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?individual WHERE {
  ?soeMinWimalaDewi rdfs:label ""Soe Min Wimala Dewi""@en .
  ?soeMinWimalaDewi dbo:father ?father .

  ?thadoMinsawOfProme rdfs:label ""Thado Minsaw of Prome""@en .
  ?thadoMinsawOfProme dbo:parent ?individual .

  ?father dbo:child ?individual .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,36,val,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Query for the spouse of Ted McGinley
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?spouse WHERE {
  ?person rdfs:label ""Ted McGinley""@en .
  ?person dbo:spouse ?spouse .
}

UNION

# Query for an alumnus of Ohio State University and their birth name
SELECT ?alumnus ?birthName WHERE {
  ?person dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> .
  ?person rdfs:label ?alumnus .
  OPTIONAL { ?person dbo:birthName ?birthName }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
820,14,val,Give me the child of the parent of the professional in Actor.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?grandChild WHERE {
  ?actor dbo:profession dbc:Actors .
  ?parent dbo:child ?actor .
  OPTIONAL { 
    ?parent dbo:child ?grandChild .
  }
}
```",3,3,4,3,1,3,2,20,0,0,354,0,0.0,0
547,20,val,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?individual ?restingPlace WHERE {
  {
    # Query for the actor in ""Enemy at the Door""
    ?film rdfs:label ""Enemy at the Door""@en .
    ?film dbo:starring ?actor .
    ?actor dbo:finalRestingPlace ?restingPlace .
    BIND(?actor AS ?individual)
  }
  UNION
  {
    # Query for James Burton, Egyptologist
    ?person rdfs:label ""James Burton (Egyptologist)""@en .
    ?person dbo:finalRestingPlace ?restingPlace .
    BIND(?person AS ?individual)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
528,26,val,Give me the war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work ?war WHERE {
  ?work dbo:commander ?commander .
  ?commander dbo:participatedIn ?war .
}
```",3,3,4,3,1,3,3,71,0,0,14,0,0.0,0
767,24,val,Give me the reference to  and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?reference ?almaMater WHERE {
  ?administration rdfs:label ""George K. Nash""@en .
  OPTIONAL { ?administration dbo:officialWebsite ?reference . }
  OPTIONAL { ?administration dbo:almaMater ?almaMater . }
}
```",3,3,4,2,2,3,3,71,0,1,2,0.0,0.0,0
801,34,val,Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?professionalIdentity ?associatedArtist WHERE {
  # Part 1: The Shadow's alter ego
  ?character rdfs:label ""Batman""@en .
  ?character dbo:alterEgo ?identity .
  ?identity rdfs:label ?professionalIdentity .

  # Part 2: Chris Taylor and associated musical artist
  ?musician rdfs:label ""Chris Taylor (music producer)""@en .
  ?musician dbo:associatedBand ?band .
  ?band rdfs:label ?associatedArtist .
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
666,14,val,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?label ?nickname WHERE {
  ?club a dbo:SoccerClub ;
        a dbo:SportsTeam ;
        dbo:country dbc:England ;
        rdfs:label ?label ;
        dbo:nickname ?nickname .
}
```",3,6,4,3,1,3,2,20,0,0,12,0,0.0,0
492,23,val,Give me the person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?decedent WHERE {
  ?book rdfs:label ""French Algeria""@en .
  ?book dbo:author ?author .
  OPTIONAL { 
    ?author dbo:spouseOrPartner ?partner .
    ?partner dbo:deathPlace ?decedent .
  }
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
747,25,val,Give me the band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel ?bandLabel WHERE {
  VALUES ?personName { ""Tracy Bonham""@en ""Amba Shepherd""@en }
  
  ?person rdfs:label ?personName .
  OPTIONAL { ?person dbo:band ?band . }
  
  FILTER(LANG(?personLabel) = 'en')
  BIND(STR(?personName) AS ?personLabel)
  BIND(STR(?band) AS ?bandLabel)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,27,val,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?nickname WHERE {
  ?org a dbo:EducationalInstitution ;
       dbo:country dbc:Northern_Ireland ;
       dbo:nickname ?nickname .
}
```",3,5,4,3,1,3,3,71,0,0,13,0,0.0,0
378,44,val,Give me the war of the commander in Peninsular War and claim to fame of the commander in Great Siege of Gibraltar and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?peninsularWarCommander ?otherWar ?gibraltarCommander ?fame ?carlPontusGahnWar WHERE {
  # Peninsular War Commander
  ?commander dbo:participatedIn <http://dbpedia.org/resource/Peninsular_War> .
  ?commander rdfs:label ?peninsularWarCommander .
  OPTIONAL { 
    ?commander dbo:participatedIn ?otherWar .
    FILTER(?otherWar != <http://dbpedia.org/resource/Peninsular_War>)
  }

  # Great Siege of Gibraltar Commander
  ?gibraltarEvent dbo:commander ?gibraltarCommander .
  ?gibraltarEvent rdfs:label ""Great Siege of Gibraltar""@en .
  OPTIONAL {
    ?gibraltarCommander dbo:famousFor ?fame .
  }

  # Carl Pontus Gahn's War
  ?carlPontusGahn dbo:participatedIn ?carlPontusGahnWar .
  ?carlPontusGahn rdfs:label ""Carl Pontus Gahn""@en .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
801,30,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist WHERE {
  ?album dbo:writer ?artist .
  ?album rdfs:label ""40 Dayz & 40 Nightz""@en .

  ?song dbo:producer ?artist .
  ?song rdfs:label ""Westside Story (song)""@en .

  ?artist a dbo:MusicalArtist .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,20,val,Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war WHERE {
  # Part 1: Wars commanded in the Peninsular War
  {
    ?commander dbo:commanderOf ?peninsularWar .
    ?peninsularWar rdfs:label ""Peninsular War""@en .
    ?peninsularWar dbo:participatedIn ?war .
  }
  
  UNION
  
  # Part 2: Wars involving Carl Pontus Gahn
  {
    ?gahn dbp:name ""Carl Pontus Gahn"" .
    ?gahn dbo:participatedIn ?war .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
9,44,val,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?nickname WHERE {
  ?university rdfs:label ""Queen's University Belfast""@en .
  ?university dbo:nickname ?nickname .

  ?almaMater1 dbo:alumni ?johnAlderdice .
  ?johnAlderdice rdfs:label ""John Alderdice, Baron Alderdice""@en .
  
  ?almaMater2 dbo:alumni ?royalMedalist .
  ?royalMedalist dbo:award ?royalMedal .
  ?royalMedal rdfs:label ""Royal Medal""@en .

  FILTER (?almaMater1 = ?university)
  FILTER (?almaMater2 = ?university)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
339,15,val,Give me the father of Princess Elizabeth of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?fatherOfPrincessElizabeth ?grandchild WHERE {
  # Step 1: Find the father of Princess Elizabeth of Greece and Denmark
  ?princess rdfs:label ""Princess Elizabeth of Greece and Denmark""@en .
  ?princess dbo:father ?fatherOfPrincessElizabeth .

  # Step 2: Identify Frederick VIII's predecessor
  ?frederickVIII rdfs:label ""Frederick VIII of Denmark""@en .
  ?predecessor dbo:successor ?frederickVIII .

  # Step 3: Find the child of the predecessor
  ?predecessor dbo:child ?childOfPredecessor .

  # Step 4: Find the grandchild (child of the child)
  ?childOfPredecessor dbo:child ?grandchild .

  # Step 5: Check if father matches any grandchild
  FILTER (?fatherOfPrincessElizabeth = ?grandchild)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
547,39,val,Give me the resting place of Simon Cadell and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?restingPlace WHERE {
  # Resting place of Simon Cadell
  OPTIONAL {
    ?cadell rdfs:label ""Simon Cadell""@en .
    ?cadell dbo:finalBurial ?restingPlace .
    BIND(""Simon Cadell"" AS ?person)
  }
  
  # Awardee of the award associated with Gerald Graham and their resting place
  OPTIONAL {
    ?graham rdfs:label ""Gerald Graham""@en .
    ?award dbo:recipient ?awardee .
    ?graham dbo:associatedWith ?award .
    ?awardee dbo:finalBurial ?restingPlace .
    BIND(?awardee AS ?person)
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
528,36,val,Give me the war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?birthName ?force WHERE {
  # Find the war related to Irene Morales
  ?person rdfs:label ""Irene Morales""@en .
  OPTIONAL { ?person dbo:conflict ?war . }

  # Find the birth name of Narciso Campero and any associated force
  ?campero rdfs:label ""Narciso Campero""@en .
  ?campero dbo:birthName ?birthName .
  OPTIONAL { ?campero dbo:militaryUnit ?force . }
}
```",4,4,5,3,2,3,3,71,0,1,2,0.0,0.0,0
617,24,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?spouse WHERE {
  ?antiochus rdfs:label ""Antiochus III the Great""@en .
  ?child dbo:childOf ?antiochus .
  ?child dbo:spouse ?spouse .
  OPTIONAL { ?nysa dbo:parent ?spouse . }
  FILTER(CONTAINS(LCASE(?nysa), ""nysa (wife of pharnaces i of pontus)""))
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
339,13,val,Give me the child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?grandchild WHERE {
  ?frederickVIII rdfs:label ""Frederick VIII of Denmark""@en .
  ?frederickVIII dbo:predecessor ?predecessor .
  ?predecessor dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",3,3,4,3,1,3,2,20,17,0,15,1.0,0.53125,0.6938775510204082
16,20,val,Give me the professional in the profession of Satomi Ishihara and spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?satomi dbo:profession ?profession .
  FILTER (str(?satomi) = ""Satomi_Ishihara"") .

  ?ted dbo:spouse ?person .
  FILTER (str(?ted) = ""Ted_McGinley"") .

  ?person dbo:profession ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,18,val,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?laodiceIV rdfs:label ""Laodice IV""@en .
  ?laodiceIV dbo:childOf ?antiochusIII .
  ?antiochusIII rdfs:label ""Antiochus III the Great""@en .
  ?laodiceIV dbo:parentOf ?nysa .
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  ?laodiceIV dbo:spouse ?spouse .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
996,14,val,Give me the entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?award WHERE {
  ?person dbo:nationality ?nationality .
  ?nationality rdfs:label ""Palestine (region)""@en .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?birthPlace rdfs:label ""Palestine (region)""@en . }
  ?person dbo:award ?award .
}
```",3,3,4,3,1,3,2,20,0,0,292,0,0.0,0
391,21,val,Give me the native of the figure known as Hub City and actor of All About the Andersons.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  ?city rdfs:label ""Hub City""@en .
  
  ?show dbo:title ""All About the Andersons"" ;
        dbo:castMember ?actor .

  OPTIONAL { 
    ?actor dbo:nativePlace ?nativeCity .
    FILTER (?nativeCity = ?city)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
345,14,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?team WHERE {
  # Get Eiður Guðjohnsen's birth date
  ?eiður a dbo:SoccerPlayer ;
         rdfs:label ""Eiður Guðjohnsen""@en .
  ?eiður dbo:birthDate ?birthDate .

  # Find people who are both soccer players and managers born on the same date
  ?person (dbo:soccerPlayer|dbo:soccerManager) _:b1 ;
          dbo:birthDate ?birthDate ;
          rdfs:label ?name .
  
  # Get teams associated with these individuals
  OPTIONAL { ?person dbo:team ?team . }
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
9,37,val,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?almaMater WHERE {
  ?person dbo:awardReceived ?medal .
  ?medal rdfs:label ""Royal Medal""@en .
  OPTIONAL { ?person dbo:almaMater ?university . }
  FILTER EXISTS { 
    ?university rdfs:label ""Queen's University Belfast""@en .
  }
  ?person dbo:almaMater ?almaMater .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,42,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander ?decedent WHERE {
  # Part 1: Commander in Franco-Hova Wars
  ?event dbo:commander ?commander .
  ?event rdfs:label ""Franco-Hova Wars""@en .

  # Part 2: Person decedent at the capital of Algeria and work of Joseph C. Satterthwaite
  ?algeria dbo:capital ?algiers .
  ?algiers rdfs:label ""Algiers""@en .
  
  ?satterthwaite dbo:office ?workplace .
  ?satterthwaite rdfs:label ""Joseph C. Satterthwaite""@en .

  ?decedent dbo:deathPlace ?algiers ;
            dbo:deathPlace ?workplace .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
617,28,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouseOfLaodiceIV ?childOfSpouse ?royalChild WHERE {
  # Find Laodice IV's spouse
  ?laodiceIV dbo:spouse ?spouseOfLaodiceIV .
  ?laodiceIV rdfs:label ""Laodice IV""@en .

  # Find the child of this spouse who is royalty
  ?spouseOfLaodiceIV dbo:child ?childOfSpouse .
  ?childOfSpouse rdf:type dbo:Royal .

  # Ensure this royal child is a parent of Nysa and also related to Seleucus II Callinicus
  ?royalChild dbo:parent ?commonParent .
  ?commonParent dbo:child ?nysa .
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  
  ?commonParent dbo:child ?seleucusII .
  ?seleucusII rdfs:label ""Seleucus II Callinicus""@en .

  # Ensure the royal child is the same as the child of Laodice IV's spouse
  FILTER (?childOfSpouse = ?royalChild)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
534,13,val,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?parent dbo:nativeCountry dbr:Essex ;
          rdf:type dbo:Politician .
  
  ?child dbo:childOf ?parent ;
         rdf:type dbo:Politician, dbo:OfficeHolder .

  ?child dbo:birthPlace ?birthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,23,val,Give me the parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?parent WHERE {
  ?amunherkhepeshef rdfs:label ""Amun-her-khepeshef""@en .
  ?amunherkhepeshef dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?child dbo:parent ?parent .
}
```",3,3,4,3,1,3,3,71,2,0,0,1.0,1.0,1.0
48,12,val,"Give me the band of Carl Falk and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?carlFalkBand ?actor ?actorBand WHERE {
  # Find the band associated with Carl Falk
  ?person rdfs:label ""Carl Falk""@en .
  OPTIONAL { 
    ?person dbo:band ?carlFalkBand .
  }
  
  # Find the actor in Honor Up and check if they are a musical artist
  ?honorUpGroup rdfs:label ""Honor Up""@en .
  ?honorUpGroup dbo:musicalArtist ?actor .
  ?actor rdfs:label ?actorLabel .

  OPTIONAL {
    ?actor dbo:band ?actorBand .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
182,15,val,Give me the entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entityInSriLanka ?war WHERE {
  ?bombing rdfs:label ""2019 Sri Lanka Easter bombings""@en .
  ?bombing dbo:perpetrator ?author .
  
  OPTIONAL { 
    ?author dbo:nationality <http://dbpedia.org/resource/Sri_Lanka> ;
            dbo:participatedIn ?war .
  }
  
  OPTIONAL {
    ?author dbo:country <http://dbpedia.org/resource/Sri_Lanka> ;
            rdfs:label ?entityInSriLanka .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
528,23,val,"Give me the war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?war WHERE {
  ?war rdf:type dbo:War .
  ?war dbo:militaryForce ?militaryForce .
  ?war dbo:country ?chile .
  ?chile rdfs:label ""Chile""@en .
}
```",3,4,4,3,1,3,3,71,0,0,235,0,0.0,0
429,7,val,Give me the administration of the father of Martha Johnson Patterson and country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father ?administration WHERE {
  ?martha rdfs:label ""Martha Johnson Patterson""@en .
  ?martha dbo:father ?father .
  OPTIONAL { ?father dbo:positionHeld ?administration . }
}

UNION

SELECT ?country WHERE {
  ?regiment rdfs:label ""77th Ohio Infantry Regiment""@en .
  ?regiment dbo:country ?country .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
54,34,val,Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  # Find Thinkhaya of Pagan's child
  ?thinkhaya rdfs:label ""Thinkhaya""@en .
  ?thinkhaya dbo:child ?childOfThinkhaya .

  # Find Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor
  ?ameitta rdfs:label ""Ameitta Thiri Maha Dhamma Dewi of Ava""@en .
  ?predecessor dbo:predecessor ?ameitta .

  # Find the child of the predecessor
  ?predecessor dbo:child ?resultChild .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
959,20,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?yMasuzoe rdfs:label ""Yōichi Masuzoe""@en .
  ?yMasuzoe dbo:nationality ?country .

  ?university rdfs:label ""University of Tsukuba""@en ;
              dbo:alumni ?member .

  ?member dbo:nationality ?sameCountry .
  
  FILTER(?sameCountry = ?country)
}
```",3,4,4,2,2,3,3,71,0,0,84,0,0.0,0
435,14,val,Give me the territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?territory ?region WHERE {
  # Part 1: Territory administered from Reykjavík
  ?capital rdfs:label ""Reykjavík""@en .
  ?territory dbo:administrativeCapital ?capital .

  OPTIONAL {
    # Part 2: Region of the time zone in Bombali Shebora Chiefdom
    ?chiefdom rdfs:label ""Bombali Shebora Chiefdom""@en .
    ?chiefdom dbo:timeZone ?timezone .
    ?timezone dbo:region ?region .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
747,21,val,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?band WHERE {
  # Find Pavlo Khudzik's birth date
  ?pavloKhudzik rdfs:label ""Pavlo Khudzik""@en .
  ?pavloKhudzik dbo:birthDate ?birthDate .

  # Find another person with the same birth date
  ?person dbo:birthDate ?birthDate .
  
  FILTER(?person != ?pavloKhudzik)

  # Find Shèna's band
  ?shena rdfs:label ""Shèna""@en .
  ?shena dbo:band ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
994,29,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?member ?associatedArtist WHERE {
  # Find members of Meshuggah
  { 
    ?meshMember dbo:bandMemberOf dbr:Meshuggah .
    ?meshMember ?p1 ?artist1 .
    FILTER(?p1 = dbo:associatedMusicalArtist) .
    ?artist1 a ?type1 .
    FILTER(VALUES ?type1 {dbo:Band dbo:MusicalGroup dbo:Organization}) .
    BIND(?artist1 AS ?member)
  }
  
  UNION
  
  # Find members of Slayer (specifically S.A.)
  {
    ?slayerMember dbo:bandMemberOf dbr:Slayer ;
                  rdfs:label ""S.A.""@en .
    ?slayerMember ?p2 ?artist2 .
    FILTER(?p2 = dbo:associatedMusicalArtist) .
    ?artist2 a ?type2 .
    FILTER(VALUES ?type2 {dbo:Band dbo:MusicalGroup dbo:Organization}) .
    BIND(?artist2 AS ?member)
  }
  
  UNION
  
  # Find members of Don Dokken
  {
    ?dokkenMember dbo:bandMemberOf dbr:Don_Dokken .
    ?dokkenMember ?p3 ?artist3 .
    FILTER(?p3 = dbo:associatedMusicalArtist) .
    ?artist3 a ?type3 .
    FILTER(VALUES ?type3 {dbo:Band dbo:MusicalGroup dbo:Organization}) .
    BIND(?artist3 AS ?member)
  }
  
  # Find associated artists for the identified members
  {
    ?member dbo:associatedMusicalArtist ?associatedArtist .
    ?associatedArtist a ?type4 .
    FILTER(VALUES ?type4 {dbo:Band dbo:MusicalGroup dbo:Organization}) .
  }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
528,29,val,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Query for the war of Irene Morales
SELECT DISTINCT ?war WHERE {
  ?person rdfs:label ""Irene Morales""@en .
  ?person dbo:participatedIn ?war .
}

UNION

# Query for the war of the commander in Battle of La Rinconada de Ate
SELECT DISTINCT ?war WHERE {
  ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
  ?battle dbo:commander ?commander .
  ?commander dbo:participatedIn ?war .
}

UNION

# Query for the force of Narciso Campero
SELECT DISTINCT ?force WHERE {
  ?person rdfs:label ""Narciso Campero""@en .
  ?person dbo:militaryForce ?force .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
617,23,val,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  # Find Antiochus II Theos
  ?antiochus2 rdfs:label ""Antiochus II Theos""@en .
  
  # Identify his successor (assuming direct child or another royal figure)
  OPTIONAL { 
    ?antiochus2 dbo:successor ?successor .
    FILTER EXISTS { ?successor a dbo:Monarch }
  }

  # Find the child of the successor
  OPTIONAL {
    ?successor dbo:child ?secondChild .
    FILTER EXISTS { ?secondChild a dbo:Monarch }
  }

  # Identify the grandchild (child of the second child)
  ?secondChild dbo:child ?grandchild .
  FILTER EXISTS { ?grandchild a dbo:Monarch }
}
```",3,5,4,3,1,3,3,71,0,11,5,0.0,0.0,0
54,20,val,Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?individual WHERE {
  # Find Thinkhaya of Pagan's child
  ?thinkhaya rdfs:label ""Thinkhaya of Pagan""@en .
  ?thinkhaya dbo:child ?child1 .

  # Find Narapati I of Ava's grandchild (through one of his children)
  ?narapati rdfs:label ""Narapati I of Ava""@en .
  ?narapati dbo:child ?child2 .
  ?child2 dbo:child ?grandchild .

  # The individual must be both Thinkhaya's child and Narapati's grandparent
  FILTER (?child1 = ?individual && ?individual = ?child2)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,22,val,"Give me the war of the profession, that is a military unit, of Heather Roy and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?heatherProfession ?beauchampUnit WHERE {
  ?heather dbo:profession ?heatherProfession .
  ?heather rdfs:label ""Heather Roy""@en .

  OPTIONAL { 
    ?heather dbo:militaryUnit ?heatherMilitaryUnit .
  }

  ?beauchamp dbo:militaryUnit ?beauchampUnit .
  ?beauchamp rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,40,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  
  OPTIONAL { 
    ?officeHolder dbo:officeHolder ?person ;
                  dbo:country dbr:Kingdom_of_Ireland .
  }
  
  OPTIONAL {
    ?battle dbo:commanderOfMilitaryForce ?person ;
            dbp:name ""Battle of Leipzig"" .
  }

  OPTIONAL {
    ?war dbo:participatedInWar ?person ;
         dbp:name ""Napoleonic Wars"" .
  }
}
```",5,6,6,3,3,3,3,71,0,2,5,0.0,0.0,0
184,40,val,"Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  # Find the parent of Archduchess Ilona of Austria
  ?ilona dbo:parent ?parent .
  ?ilona rdfs:label ""Ilona, Archduchess of Austria""@en .

  # Ensure this parent is a child of Archduke Joseph August of Austria
  ?parent dbo:childOf ?josephAugust .
  ?josephAugust rdfs:label ""Joseph August, Archduke of Austria""@en .

  # Find the native of a settlement at elevation 96.0
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            rdf:type dbo:Settlement .
  ?native dbo:nativeOf ?landmark .
  
  # Ensure this parent is also the parent of the native
  ?parent dbo:child ?native .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
378,26,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?conflict WHERE {
  ?peninsularWar dbo:partOf dbr:Napoleonic_Wars ;
                 dbo:commander ?commander .
  
  ?otherConflict a dbo:MilitaryConflict ;
                 dbo:commander ?commander .

  FILTER(?peninsularWar != ?otherConflict)
}
```",3,4,4,3,1,3,3,71,0,0,118,0,0.0,0
767,35,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?settlement WHERE {
  ?entity dbo:administrativeUnit ?settlement .
  ?settlement rdf:type dbo:Settlement .
  ?settlement rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""green"")) .

  OPTIONAL {
    ?blackHood dbo:alterEgo ?alterEgo .
    ?alterEgo rdfs:label ?alterEgoName .
    FILTER(CONTAINS(LCASE(?alterEgoName), ""black hood""))
  }
}
```",4,5,5,2,2,3,3,71,0,0,7,0,0.0,0
747,38,val,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?writerBand ?personBand WHERE {
  # Part 1: Find the band of the writer of ""Apollo"" by Hardwell
  ?song dbo:title ""Apollo""@en .
  ?song dbo:artist ""Hardwell""@en .
  ?song dbo:lyricist ?writer .
  OPTIONAL { ?writer dbo:band ?writerBand . }
  
  # Part 2: Find the band of the person born as Tracey Elizabeth McSween
  ?person dbo:birthName ""Tracey Elizabeth McSween"" .
  OPTIONAL { ?person dbo:band ?personBand . }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
360,19,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of Johannesburg.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album ?writer WHERE {
  ?album dbo:creator ?person .
  ?person rdfs:label ""Dave Flett""@en .

  OPTIONAL { 
    ?band dbo:member ?manfredMann .
    ?manfredMann rdfs:label ""Manfred Mann""@en .
    ?band dbo:recordings ?album .
  }

  OPTIONAL {
    ?writer dbo:nativePlace ?place .
    ?place rdfs:label ""Johannesburg""@en .
    ?album dbo:creator ?writer .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
994,42,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedArtistRedTide ?bandMemberDokken ?associatedArtistWatchtower ?finalAssociatedArtist WHERE {
  # Part 1: Associated Musical Artist of Red Tide
  ?redTideBand rdfs:label ""Red Tide""@en .
  ?redTideBand dbo:associatedBand ?associatedArtistRedTide .

  OPTIONAL {
    # Part 2: Band Member of Donald Maynard Dokken who is a musical artist
    ?dokkenPerson rdfs:label ""Donald Maynard Dokken""@en .
    ?bandMemberDokken dbo:member ?dokkenPerson ;
                      rdf:type dbo:MusicalArtist .

    OPTIONAL {
      # Part 3: Associated Musical Artist of Watchtower and their associated musical artist
      ?watchTowerBand rdfs:label ""Watchtower""@en .
      ?watchTowerBand dbo:associatedBand ?associatedArtistWatchtower .
      
      ?associatedArtistWatchtower dbo:associatedBand ?finalAssociatedArtist .
    }
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
251,13,val,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration ?warLocation WHERE {
  # Part 1: Administration of Forza Italia in 2013
  OPTIONAL {
    ?party rdfs:label ""Forza Italia""@en .
    ?party dbo:partyLeader ?leader .
    ?leader dbp:office ""Prime Minister of Italy"" ;
            dbp:termStart ?startYear .
    FILTER (?startYear <= ""2013-12-31""^^xsd:date && 
            (BOUND(?endYear) ?endYear > ""2013-01-01""^^xsd:date || !BOUND(?endYear)))
  }
  
  # Part 2: Location of the war involving Louis François Félix Musnier
  OPTIONAL {
    ?person rdfs:label ""Louis François Félix Musnier""@en .
    ?conflict dbo:participant ?person ;
              dbp:location ?warLocation .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
492,35,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Part 1: Person decedent at the capital of Algeria (Algiers)
  {
    ?place rdfs:label ""Algiers""@en .
    ?place dbo:country dbr:Algeria .
    ?place a dbo:Settlement .
    ?person dbo:deathPlace ?place .
  }
  
  UNION
  
  # Part 2: Person decedent at the work location of Joseph C. Satterthwaite
  {
    ?workLocation rdfs:label ?workLabel .
    ?satterthwaite foaf:name ""Joseph C. Satterthwaite""@en ;
                   dbo:office dbr:Assistant_Secretary_of_State_for_African_Affairs .
    ?satterthwaite dbo:worksFor ?workLocation .
    ?person dbo:deathPlace ?workLocation .
  }
}
```",4,5,5,2,2,3,3,71,16,106,0,0.13114754098360656,1.0,0.23188405797101452
161,25,val,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?militaryForce ?commander WHERE {
  ?event rdfs:label ""Spanish Civil War""@en .
  ?militaryForce dbo:event ?event ;
                 dbo:commander ?commander .
  FILTER(?commander = <http://dbpedia.org/resource/Emilio_Mola>)
}
```",3,4,4,2,2,3,3,71,0,0,32,0,0.0,0
801,28,val,Give me the producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer ?associatedArtist ?shadowProfessional WHERE {
  # Producer of ""Westside Story"" (song)
  ?song rdfs:label ""Westside Story""@en .
  ?song dbo:producer ?producer .

  OPTIONAL {
    # Associated musical artist of Chris Taylor (music producer)
    ?chris a dbo:MusicProducer ;
           foaf:name ""Chris Taylor""@en .
    ?chris dbo:associatedMusicalArtist ?associatedArtist .
  }

  OPTIONAL {
    # Professional in the alter ego of The Shadow
    ?shadow rdfs:label ""The Shadow""@en .
    ?shadow dbo:alterEgo ?professional .
    ?professional a dbo:Person ;
                  foaf:name ?name .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
981,11,val,Give me the entity in the region of Time in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entityInTimeRegion ?birthPlace 
WHERE {
  # Entity in the region of Time in Indonesia
  ?region rdfs:label ""Time""@en .
  ?region dbo:country dbr:Indonesia .
  ?entityInTimeRegion dbo:locatedIn ?region .

  # Birth place of Novia Indriani Mamuaja
  ?person rdfs:label ""Novia Indriani Mamuaja""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
232,19,val,Give me the child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""John Pertwee""@en .
  ?person dbo:birthName ""John Devon Roland Pertwee"" .
  ?film dbo:title ""Dog Soldiers""@en ;
        dbo:actor ?person .
  ?person dbo:child ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,13,val,"Give me the child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  ?mlada rdfs:label ""Mlada (abbess)""@en .
  
  OPTIONAL { ?mlada dbo:parent ?parent . }
  
  OPTIONAL { 
    ?parent dbo:child ?royalChild .
    
    FILTER EXISTS { ?royalChild dbo:royalTitle ?title } .

    OPTIONAL { ?royalChild dbo:child ?grandchild . }
  }
}
```",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
801,33,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professional ?work WHERE {
  ?professional a dbo:MusicalArtist ;
                dbo:profession dbo:Rapper .
  ?professional dbo:work ?work .
  ?work rdf:type dbo:MusicalWork ;
        rdf:type dbo:Song .
}
```",4,8,5,3,2,3,3,71,0,0,473,0,0.0,0
959,38,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?yMasuzoe dbo:residence ?place .
  ?tSekizuka dbo:manager ?team .
  ?team dbo:location ?place .
  ?place dbo:country ?country .
}
```",4,5,5,2,2,3,3,71,0,0,6,0,0.0,0
959,34,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?person dbo:manager ?team .
  ?team rdfs:label ""Júbilo Iwata""@en .
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1958)
  
  ?person rdf:type <http://dbpedia.org/ontology/Japanese> .

  ?person dbo:almaMater ?almaMater .
  ?almaMater rdf:type ?type .
  FILTER (
    EXISTS { ?almaMater rdfs:label ?label . FILTER (lang(?label) = ""en"") }
    && (?type = <http://dbpedia.org/ontology/Organisation> || ?type = <http://dbpedia.org/ontology/EducationalOrganization>)
    && EXISTS { ?almaMater dbo:country <http://dbpedia.org/resource/Japan> }
  )
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
378,31,val,Give me the war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?warBlake ?birthNameGahn ?warGahn WHERE {
  # Joaquín Blake's wars
  ?joaquin a dbo:Person ;
           rdfs:label ""Joaquín Blake""@en .
  ?joaquin dbo:participatedIn ?warBlake .

  # Carl Pontus Gahn's birth name and wars
  ?carl a dbo:Person ;
        rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL { ?carl rdfs:label ?birthNameGahn FILTER (lang(?birthNameGahn) = 'en') }
  ?carl dbo:participatedIn ?warGahn
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
959,44,val,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?team dbo:manager ?manager .
  ?manager dbo:almaMater ?university .
  ?university rdfs:label ""University of Tsukuba""@en .

  ?person rdfs:label ""Takashi Sekizuka""@en .
  ?person dbo:manages ?team .

  ?yoshihiro rdfs:label ""Yōichi Masuzoe""@en .
  ?yoshihiro dbo:residence ?country .
  ?country a dbo:Country .
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
182,12,val,Give me the war of Mahesh Senanayake and entity in Sri Lanka and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?war WHERE {
  VALUES ?person { 
    dbr:Mahesh_Senanayake 
    dbr:Jagath_Dias
  }
  
  ?person dbo:participatedIn ?event .
  ?event rdf:type dbo:War .
  ?event rdfs:label ?war .
  FILTER (LANG(?war) = ""en"")
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
488,27,val,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?administration WHERE {
  ?masako rdfs:label ""Tokugawa Masako""@en .
  ?masako dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?spouse rdf:type dbo:RoyalFamilyMember . # Assuming a class for royalty
  }
  
  ?father dbo:child ?spouse .
  ?father dbo:positionHeld ?administration .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
232,20,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  ?sean a dbo:Person ;
        rdfs:label ""Sean Pertwee""@en ;
        dbo:childOf ?jon .
  
  ?jon rdfs:label ""Jon Pertwee""@en .

  ?film dbo:starring ?sean ;
        rdf:type dbo:Film .

  ?militaryConflict dbo:participant ?sean ;
                    rdf:type dbo:MilitaryConflict .

  ?film dbo:actor ?actor .

}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
328,26,val,Give me the commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?person dbo:deathPlace dbr:Budapest .
  ?person dbo:militaryUnit ?unit .
  ?unit dbo:commander ?commander .
}
```",3,3,4,3,1,3,3,71,0,0,306,0,0.0,0
16,25,val,Give me the professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  ?person rdfs:label ""Gigi Rice""@en .
  ?person dbo:birthName ""Gigi Rice"" .
  ?person dbo:profession ?profession .
  FILTER (str(?profession) = str(dbo:Actress))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,32,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  ?person rdfs:label ""Sean Pertwee""@en .
  ?claimToFame dbo:associatedWith ?person ;
               (dbo:film|dbo:militaryConflict) ?entity .
  OPTIONAL { ?entity dbo:starring ?actor . }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
767,42,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?settlement WHERE {
  ?entity dbo:administrativeUnit ?admin .
  FILTER regex(?admin, ""Green"", ""i"") .
  ?entity rdf:type dbo:Settlement .

  OPTIONAL { 
    ?character rdfs:label ""Black Hood""@en .
    ?character dbo:alterEgo ?alterEgo .
    ?alterEgo rdfs:label ?alterEgoLabel .
  }

  OPTIONAL {
    ?person rdfs:label ""Carl L. Nippert""@en .
    ?person dbo:almaMater ?university .
    ?university rdfs:label ?universityLabel .
  }
  
  FILTER EXISTS { 
    ?character dbo:alterEgo ?entity .
  }

  FILTER EXISTS {
    ?person dbo:almaMater ?entity .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,22,val,Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?band WHERE {
  OPTIONAL {
    ?person foaf:name ""Tracey Elizabeth McSween""@en .
    ?person dbo:band ?band .
  }
  
  OPTIONAL {
    ?person dbo:birthday ""1985-04-29""^^xsd:date .
    ?person dbo:band ?band .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,29,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?parent WHERE {
  ?person rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .
  ?person dbo:child ?child .

  ?child dbo:spouse ?spouse .
  ?spouse rdfs:label ""Princess Victoria Louise of Prussia""@en .

  OPTIONAL { 
    ?child dbo:parent ?parent .
  }

  FILTER EXISTS {
    ?child a dbo:Person .
  }
}
```",4,5,5,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
659,26,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?unit rdfs:label ""Polish Horse""@en .
  ?unit a dbo:MilitaryUnit ;
        dbo:participatedIn ?war .
  ?war a dbo:MilitaryConflict .
  ?war dbo:commander ?commander .
}
```",3,7,4,3,1,3,3,71,0,0,130,0,0.0,0
747,31,val,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?decedent dbo:birthDate ?birthDate .
  
  ?athlete rdf:type dbo:Athlete ;
           dbo:sport dbr:Soccer ;
           dbo:birthPlace dbr:Zolotonosha ;
           dbo:birthDate ?birthDate .

  OPTIONAL { 
    ?association dbo:bandMember ?person ;
                 rdfs:label ""Amba Shepherd""@en .
  }
  
  FILTER EXISTS {
    ?athlete rdf:type dbo:Athlete ;
             dbo:sport dbr:Soccer .
  }

  BIND(?athlete AS ?person)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,39,val,"Give me the parent of Henuttawy (19th dynasty) and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfHenuttawy ?spouseOfCommandersFather WHERE {
  # Find Henuttawy's parent
  ?henuttawy rdfs:label ""Henuttawy (19th dynasty)""@en .
  ?henuttawy dbo:parent ?parentOfHenuttawy .

  # Identify the commander in Battle of Perire and their father
  ?battle rdfs:label ""Battle of Perire""@en .
  ?battle dbo:commander ?commander .
  ?commander dbo:father ?fatherOfCommander .

  # Find the spouse of the commander's father who is royalty
  ?fatherOfCommander dbo:spouse ?spouseOfCommandersFather .
  OPTIONAL { ?spouseOfCommandersFather dbo:title ?title . FILTER regex(?title, ""royalty"", ""i"") }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
696,15,val,"Give me the landmark at elevation of 50 and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member ?birthPlace WHERE {
  ?band rdf:type dbo:MusicalArtist ;
        rdfs:label ""The Boils""@en .
  
  ?band dbo:member ?member .

  ?member dbo:birthPlace ?birthPlace .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
404,42,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?person a dbo:Monarch ;
          dbo:spouse ?spouse .

  OPTIONAL { ?person dbo:childOf ?parent . }
  
  ?parent rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  
  ?parent dbo:child ?grandChild .
  ?grandChild rdfs:label ""Prince Ernest Augustus of Hanover (1914)""@en .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
345,13,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?nickname WHERE {
  ?player rdfs:label ""Armando Heeb""@en .
  ?player dbo:nickname ?nickname .

  ?club rdfs:label ?nickname .
  ?club rdf:type dbo:SportsClub .
  ?club dbo:sport dbr:Soccer .
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
492,29,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?person rdfs:label ""Frédéric-Georges Herr""@en .
  ?person dbo:commander ?war .
  ?war rdf:type dbo:MilitaryConflict .
  ?war dbo:event ?event .
  ?person dbo:deathPlace ?place .
  FILTER (
    (CONTAINS(LCASE(STR(?place)), ""algiers"") || CONTAINS(LCASE(STR(?place)), ""french algeria""))
  )
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
184,29,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?grandchild WHERE {
  ?archduke rdfs:label ""Archduke Joseph Karl of Austria""@en .
  ?child dbo:child ?archduke .
  ?grandchild dbo:child ?child .
  ?parent dbo:parent ?geza .
  ?parent dbo:parent ?ilona .
  FILTER(?grandchild = ?parent)
  ?geza rdfs:label ""Géza von Habsburg""@en .
  ?ilona rdfs:label ""Archduchess Ilona of Austria""@en
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,21,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?almaMater WHERE {
  ?mayor rdf:type dbo:Politician ;
         dbo:officeHolder ?office .
  ?office dbo:position ""Mayor""@en ;
          dbo:organization dbpedia:Northern_Ireland_Forum .
  ?mayor dbo:almaMater ?almaMater .
  FILTER(?almaMater = <http://dbpedia.org/resource/Queen%27s_University_Belfast>)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
778,11,val,Give me the author of Chroot and entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author ?awardEntity WHERE {
  # Part 1: Find the author of ""Chroot""
  ?chroot rdfs:label ""Chroot""@en .
  ?chroot dbo:author ?author .

  UNION

  # Part 2: Find the entity in the award of Ralph L. Brinster
  ?brinster rdfs:label ""Ralph L. Brinster""@en .
  ?brinster dbo:award ?award .
  ?award dbo:entity ?awardEntity .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
16,40,val,Give me the professional in Actress and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse ?profession WHERE {
  # Ted McGinley's spouse
  ?ted a dbo:Person ;
      rdfs:label ""Ted McGinley""@en .
  ?ted dbo:spouse ?spouse .

  # Georgeanne Marie Rice's spouse
  ?georgeanne a dbo:Person ;
              rdfs:label ""Georgeanne Marie Rice""@en .
  ?georgeanne dbo:spouse ?spouse .

  # Check if the spouse is an actress
  OPTIONAL { ?spouse dbo:profession ?profession . }
  FILTER (CONTAINS(LCASE(?profession), ""actress""))
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,22,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMemberDokken ?associatedArtistSlayer WHERE {
  # Find band members of Donald Maynard Dokken
  ?dokken rdfs:label ""Donald Maynard Dokken""@en .
  ?dokken dbo:birthPlace ?birthPlace .
  ?bandMemberDokken dbo:bandMember ?dokken .

  # Find associated musical artists of Slayer
  ?slayer rdfs:label ""Slayer""@en .
  ?associatedArtistSlayer dbo:associatedBand ?slayer .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,39,val,"Give me the commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?militaryForce WHERE {
  ?battle rdf:type dbo:MilitaryConflict ;
          rdfs:label ""Battle of Leipzig""@en .
  
  ?battle rdf:type dbo:SocietalEvent ;
          rdf:type dbo:Event .

  ?battle dbo:commander ?commander .
  ?commander dbo:militaryForce ?militaryForce .

  OPTIONAL {
    ?context dbo:referenceTo ?schimmelpenninck .
    ?schimmelpenninck rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  }
}
```",4,7,5,3,2,3,3,71,0,0,6,0,0.0,0
959,36,val,"Give me the member of University of Tsukuba and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?memberOfUniversity ?managerOfManager WHERE {
  ?person dbo:almaMater ?university .
  ?university rdfs:label ""University of Tsukuba""@en .

  ?team dbo:manager ?seasonManager .
  ?seasonManager foaf:name ?name .
  FILTER(CONTAINS(?name, ""1998 Kashima Antlers""))

  OPTIONAL {
    ?seasonManager dbo:manager ?managerOfManager .
    ?managerOfManager a dbo:SportsManager .
  }

  FILTER EXISTS { ?person = ?seasonManager }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,34,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of Joseph Michael.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?memberName WHERE {
  # Find the film ""Nevermore"" (2006)
  ?film rdfs:label ""Nevermore""@en .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 2006)

  # Identify the band associated with Joseph Michael
  ?band rdfs:label ""Nevermore""@en .
  ?bandMember dbo:member ?person .
  ?bandMember dbo:band ?band .

  # Check if any member is also an artist
  ?person a dbo:Artist .

  # Get the name of the band member who is an artist
  ?person rdfs:label ?memberName .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
701,30,val,Give me the parent of Meritamen and spouse of the father of Merneptah and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentMeritamen ?spouseFatherMerneptah ?parentHenuttawy WHERE {
  # Parent of Meritamen
  ?meritamen dbo:parent ?parentMeritamen .
  ?meritamen rdfs:label ""Meritamen""@en .

  # Spouse of the father of Merneptah
  ?merneptah dbo:father ?fatherMerneptah .
  ?merneptah rdfs:label ""Merneptah""@en .
  ?fatherMerneptah dbo:spouse ?spouseFatherMerneptah .

  # Parent of Henuttawy (19th dynasty)
  ?henuttawy dbo:parent ?parentHenuttawy ;
             rdfs:label ""Henuttawy""@en .
  OPTIONAL {
    ?henuttawy dbo:birthDate ?birthDate .
    FILTER (?birthDate >= ""1300-01-01""^^xsd:date && ?birthDate <= ""1200-12-31""^^xsd:date)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,37,val,"Give me the administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?administrationPeriod ?deathPlace WHERE {
  # Matsudaira Tadamasa and his father
  ?tadamasa dbo:father ?father .
  
  # Father's father (paternal grandfather)
  ?father dbo:father ?grandfather .

  # Paternal grandfather is a politician and office holder
  ?grandfather a dbo:OfficeHolder ;
              dbo:deathPlace ?deathPlace .

  # Emperor Go-Yōzei's administration period
  ?emperor foaf:name ""Go-Yōzei""@en .
  ?emperor dbo:reign ?administrationPeriod .

  # Link Matsudaira Tadamasa to Emperor Go-Yōzei if needed (historical context)
  OPTIONAL { 
    ?tadamasa dbo:spouse|dbo:child ?relatedToEmperor .
    ?relatedToEmperor foaf:name ""Go-Yōzei""@en .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
92,32,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist WHERE {
  # Part 1: Find band members of Nevermore who are artists
  ?person dbo:bandMember ?nevermore .
  ?nevermore rdfs:label ""Nevermore""@en .
  OPTIONAL { ?person dbo:associatedBand ?otherBand . }
  
  UNION
  
  # Part 2: Find associated musical artist of Jim Sheppard
  ?sheppard dbp:name ""Jim Sheppard"" .
  ?sheppard dbo:bandMember ?nevermore .
  ?nevermore rdfs:label ""Nevermore""@en .
  OPTIONAL { ?sheppard dbo:associatedBand ?otherBand . }
  
  # Ensure the person is an artist
  FILTER EXISTS {
    ?person dbo:occupation dbp:musician .
  }

  BIND(?person AS ?artist)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
528,39,val,Give me the war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?force WHERE {
  ?person rdfs:label ""Narciso Campero""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  
  ?barbosa rdfs:label ""Orozimbo Barbosa""@en .
  ?barbosa dbo:participatedInWar ?war .

  ?camperoForce dbo:commanderOf ?force .
  ?camperoForce dbo:commander ?person .

}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
534,15,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childBirthPlace ?rdhHeadquarters WHERE {
  # Find the native politician from Essex
  ?politician a dbo:Politician ;
              dbo:nativePlace ?essex .

  FILTER regex(str(?essex), ""Essex"", ""i"")

  # Find their child who is also a politician and an office holder
  ?child dbo:parent ?politician ;
         a dbo:Politician ;
         dbo:officeHolder ?office .

  # Get the birthplace of this child
  ?child dbo:birthPlace ?childBirthPlace .

  # Get the headquarters of the Royal Dublin Society
  ?rdh a dbo:Organisation ;
       rdfs:label ""Royal Dublin Society""@en .
  ?rdh dbo:headquarters ?rdhHeadquarters .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
701,34,val,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfChild WHERE {
  ?amunHerKhepeshef rdfs:label ""Amun-her-khepeshef""@en .
  ?spouse1 dbo:spouse ?amunHerKhepeshef .
  ?child dbo:child ?spouse1 .
  ?parentOfChild dbo:parent ?child .

  ?ramessesII rdfs:label ""Ramesses II""@en .
  ?spouse2 dbo:spouse ?ramessesII .
  
  FILTER (?parentOfChild = ?spouse2)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
747,29,val,Give me the band of the writer of Apollo (Hardwell song) and person born on 1985-04-29 and band of Shèna.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  # Part 1: Band of the writer of ""Apollo"" by Hardwell
  OPTIONAL {
    ?song dbo:title ""Apollo""@en .
    ?song dbo:lyricist ?writer .
    ?writer dbo:band ?band .
  }
  
  # Part 2: Person born on 1985-04-29 and their band
  OPTIONAL {
    ?person dbp:birthday ""1985-04-29""^^xsd:date .
    ?person dbo:band ?band .
  }

  # Part 3: Band of Shèna
  OPTIONAL {
    ?s dbr:Shèna .
    ?s dbo:band ?band .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
179,14,val,Give me the parent of the child of the parent of Vajiralongkorn.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandparent WHERE {
  ?vajiralongkorn rdfs:label ""Vajiralongkorn""@en .
  ?vajiralongkorn dbo:parent ?parent .
  
  ?parent dbo:child ?vajiralongkorn ;
          dbo:parent ?grandparent .
}
```",3,3,4,3,1,3,2,20,0,4,3,0.0,0.0,0
9,32,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?awardeeAlmaMater ?mayorAlmaMater WHERE {
  ?awardee dbo:award ""Royal Medal"" .
  OPTIONAL { ?awardee dbo:almaMater ?awardeeAlmaMater . }
  
  ?mayor foaf:title ""Mayor""@en ;
         dbo:memberOf <http://dbpedia.org/resource/Northern_Ireland_Forum> ;
         a dbo:Politician .
  OPTIONAL { ?mayor dbo:almaMater ?mayorAlmaMater . }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
747,44,val,Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on 1985-04-29.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?band WHERE {
  # For Tracey Elizabeth McSween
  { 
    ?person dbo:birthName ""Tracey Elizabeth McSween""@en .
    OPTIONAL { ?person dbo:band ?band . }
  }

  UNION

  # For the writer of Apollo (Hardwell song)
  { 
    ?song dbo:title ""Apollo"" ;
          dbo:lyricist ?writer .
    ?writer dbo:band ?band .
  }

  UNION

  # For person born on 1985-04-29
  {
    ?person dbo:birthday ""1985-04-29""^^xsd:date .
    OPTIONAL { ?person dbo:band ?band . }
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
528,33,val,Give me the war of Irene Morales and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?work WHERE {
  ?work dbo:wikiPageWikiLink ?link .
  FILTER (
    EXISTS { ?link rdfs:label ""Irene Morales""@en }
    || EXISTS { ?link rdfs:label ""commander""@en }
  )
  OPTIONAL { 
    ?work rdfs:label ?title .
    FILTER (CONTAINS(LCASE(?title), ""war""))
  }
}
```",4,4,5,3,2,3,3,71,0,6,2,0.0,0.0,0
915,13,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?resident WHERE {
  ?film dbp:title ""Pipe Dreams""@en .
  ?film dbp:director ?director .
  ?director dbo:birthPlace ?birthplace .
  
  FILTER EXISTS { ?birthplace a dbo:PopulatedPlace } .

  ?residence dbo:populationTotal ?total .
  ?residence dbo:resident ?resident .
  ?residence owl:sameAs ?birthplace .
}
```",3,4,4,3,1,3,2,20,0,0,15,0,0.0,0
498,7,val,"Give me the band of Will Rahmer and band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?willBand ?solaceBand WHERE {
  # Find the band associated with Will Rahmer
  ?person rdfs:label ""Will Rahmer""@en .
  OPTIONAL { 
    ?person dbo:band ?willBand .
  }

  # Check if Solace of Requiem is both an organization and a band, then find its band
  ?solace rdfs:label ""Solace of Requiem""@en .
  FILTER EXISTS { ?solace dbo:organization . }
  FILTER EXISTS { ?solace dbo:band . }
  OPTIONAL {
    ?solace dbo:band ?solaceBand .
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
392,15,val,"Give me the entity in the region, that is a country, of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone ?timezone .
  ?province dbp:name ""Schio""@it .
  ?province dbo:locatedIn ?country .
  FILTER (str(?timezone) = ""Central European Time"")
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
534,14,val,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?headquarter WHERE {
  ?venue rdfs:label ""2012 Pro12 Grand Final""@en .
  ?venue a dbo:Venue ;
         a dbo:ArchitecturalStructure .
  
  ?venue dbo:owner ?owner .

  ?owner dbo:headquarters ?headquarter .
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
488,38,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace ?administration WHERE {
  # Yūki Hideyasu's father
  ?yukiHideyasu rdfs:label ""Yūki Hideyasu""@en .
  ?yukiHideyasu dbo:father ?fatherYuki .
  ?fatherYuki dbo:occupation ?occupationYuki .
  FILTER(CONTAINS(LCASE(?occupationYuki), ""politician"")) .
  ?fatherYuki dbo:deathPlace ?deathPlace .

  # Emperor Go-Mizunoo's father
  ?goMizunoo rdfs:label ""Emperor Go-Mizunoo""@en .
  ?goMizunoo dbo:father ?fatherGoMizunoo .
  ?fatherGoMizunoo dbo:reign ?administration .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
55,12,val,Give me the band member of Guns N' Roses and band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMemberGunsN' Roses ?bandMemberMetallica ?bandNewsted WHERE {
  # Band members of Guns N' Roses
  ?person dbo:bandMember ?gnr .
  ?gnr rdfs:label ""Guns N' Roses""@en .
  ?person rdfs:label ?bandMemberGunsN' Roses .

  UNION

  # Band members of Metallica
  ?person2 dbo:bandMember ?metallica .
  ?metallica rdfs:label ""Metallica""@en .
  ?person2 rdfs:label ?bandMemberMetallica .

  UNION

  # Bands associated with Newsted (Jason Newsted)
  ?newsted rdfs:label ""Newsted, Jason""@en .
  ?newsted dbo:bandMember ?band .
  ?band rdfs:label ?bandNewsted
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
10,13,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?person rdfs:label ""Matt Colton""@en .
  ?person dbo:bandMemberOf ?vibertBand .
  ?vibertBand dbo:member ?vibertPerson .
  ?vibertPerson rdfs:label ""Luke Vibert""@en .

  OPTIONAL { 
    ?person dbo:associatedMusicalArtist ?artist .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
77,14,val,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?force WHERE {
  ?territory dbo:administrativeUnit ?mayor .
  ?mayor rdf:type dbo:Mayor .
  ?territory rdfs:label ""Warsaw""@en .
  ?mayor dbo:force ?force .
}
```",3,4,4,3,1,3,2,20,0,0,40,0,0.0,0
963,12,val,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in Serbia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?rulingParty ?administration WHERE {
  ?town rdfs:label ""Sremski Karlovci""@en .
  ?town dbo:country dbr:Serbia .
  ?town dbo:rulingParty ?rulingParty .
  OPTIONAL { ?rulingParty dbo:administration ?administration . }
}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,34,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and force of Narciso Campero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?war WHERE {
  ?chileForce dbo:militaryForceOf dbp:Chile .
  ?camperoForce dbo:militaryForceOf ?country .
  ?narcisoCampero rdf:type dbo:MilitaryPerson ;
                  dbo:militaryService ?camperoForce .
  ?war dbo:participatedIn [
    a dbo:War ;
    dbo:participant ?chileForce ;
    dbo:participant ?camperoForce
  ] .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
404,33,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse ?royalChild ?parentOfRoyalChild ?grandchild
WHERE {
  # Step 1: Find the spouse of Princess Victoria Louise of Prussia
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?spouse .

  # Step 2: Find a child of this spouse who is royalty
  OPTIONAL {
    ?spouse dbo:child ?royalChild .
    ?royalChild rdf:type dbo:RoyalFamilyMember .
  }

  # Step 3: Find the parent of this royal child
  OPTIONAL {
    ?royalChild dbo:parent ?parentOfRoyalChild .
  }

  # Step 4: Find a child of this parent who is royalty
  OPTIONAL {
    ?parentOfRoyalChild dbo:child ?grandchild .
    ?grandchild rdf:type dbo:RoyalFamilyMember .
  }
}
```",4,6,5,3,2,3,3,71,1,57289,0,1.7455053237912374e-05,1.0,3.4909497128693856e-05
391,40,val,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?native WHERE {
  ?person rdfs:label ""Jack Nicholson""@en .
  ?person dbo:nativePlace ?native .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,41,val,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of Ferenc Szálasi and leader of People's Commissariat of Defense of the Soviet Union.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?awardee WHERE {
  ?fraser rdfs:label ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  ?award dbo:recipient ?fraser ;
         dbo:awardee ?awardee .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,23,val,Give me the war of the awardee of the award of Jonathon Band.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war WHERE {
  ?jonathonBand rdfs:label ""Jonathon Band""@en .
  ?award dbo:recipient ?jonathonBand ;
         dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:participatedInWar ?war }
}
```",3,3,4,3,1,3,3,71,0,0,450,0,0.0,0
963,13,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Identify Herzegovina-Neretva Canton and its time zone
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timezone .
  
  # Find the region associated with that time zone
  ?timezone dbo:region ?region .

  # Determine the country within that region
  ?region dbo:country ?country .
}
```",3,4,4,3,1,3,2,20,0,0,173261,0,0.0,0
701,18,val,Give me the spouse of Ramesses II and parent of Henuttawy (19th dynasty) and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?spouse WHERE {
  ?ramesses2 dbo:spouse ?spouse .
  FILTER (str(?ramesses2) = ""Ramesses II""^^xsd:string)
  
  OPTIONAL { ?spouse dbo:child ?henuttawy . }
  OPTIONAL { ?spouse dbo:child ?meritamen . }

  ?henuttawy rdfs:label ""Henuttawy (19th dynasty)""@en .
  ?meritamen rdfs:label ""Meritamen""^^xsd:string .

  FILTER EXISTS { ?spouse dbo:child ?henuttawy }
  FILTER EXISTS { ?spouse dbo:child ?meritamen }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
9,42,val,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?almaMater WHERE {
  # Identify the mayor of Northern Ireland Forum
  ?mayor a dbo:Mayor ;
         dbo:officeHolderOf ?forum .
  
  FILTER regex(str(?forum), ""Northern Ireland Forum"", ""i"")

  # Get alma mater of the identified mayor
  ?mayor dbo:almaMater ?almaMater .

  # Ensure this institution is known by a nickname related to Queen's University Belfast
  OPTIONAL {
    ?almaMater rdfs:label ?label .
    FILTER regex(?label, ""Queen's University Belfast"", ""i"")
  }

  # Check if the alma mater matches Allen Hill's alma mater
  ?allenHill dbo:almaMater ?hillAlmaMater ;
            rdfs:label ""Allen Hill""@en .

  FILTER (?almaMater = ?hillAlmaMater)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
547,32,val,Give me the resting place of the actor of Enemy at the Door and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actorRestingPlace ?childRestingPlace WHERE {
  # Part 1: Resting place of the actor in ""Enemy at the Door""
  ?movie dbo:title ""Enemy at the Door""@en .
  ?movie dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?actorDeathPlace . }
  BIND(IF(BOUND(?actorDeathPlace), STR(?actorDeathPlace), ""Unknown"") AS ?actorRestingPlace)

  # Part 2: Resting place of the child of James Burton (property developer)
  ?james rdfs:label ""James Burton (property developer)""@en .
  ?child dbo:parent ?james .
  OPTIONAL { ?child dbo:deathPlace ?childDeathPlace . }
  BIND(IF(BOUND(?childDeathPlace), STR(?childDeathPlace), ""Unknown"") AS ?childRestingPlace)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
179,15,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of Ubol Ratana.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?nak rdfs:label ""Nakkhatra Mangala""@en .
  ?child dbo:parent ?nak ;
         rdf:type dbo:RoyalFamilyMember .
  ?ubol rdfs:label ""Ubol Ratana""@en .
  ?parent dbo:child ?ubol ;
          rdfs:label ?birthName .
  FILTER (?child = ?parent)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
184,32,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild ?parent WHERE {
  # Find Archduke Joseph Karl of Austria
  ?archduke rdfs:label ""Archduke Joseph Karl of Austria""@en .
  
  # Find his child
  ?archduke dbo:child ?child .

  # Find the grandchild (child of the child)
  ?child dbo:child ?grandchild .

  # Identify a native of Budapest
  ?budaPerson dbo:birthPlace ?place .
  ?place rdfs:label ""Budapest""@en .

  # Find the parent of the native of Budapest
  ?budaPerson dbo:parent ?parent .

  # Match the grandchild with the parent
  FILTER (?grandchild = ?parent)
}
```",4,4,5,2,2,3,3,71,1,0,0,1.0,1.0,1.0
996,11,val,Give me the force of the awardee of 1778.0 and entity in France.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee ?force WHERE {
  ?awardee dbo:awardYear ""1778"" .
  OPTIONAL { ?awardee dbo:nationality dbr:France . }
  OPTIONAL { ?awardee dbo:birthPlace dbr:France . }
  OPTIONAL { ?awardee dbo:militaryRank ?force . }
  OPTIONAL { ?awardee dbo:politicalPosition ?force . }
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
915,12,val,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?character WHERE {
  ?character dbo:residence ?place .
  ?place rdfs:label ""Springfield""@en .
  ?character dbo:child ?child .
  ?child rdfs:label ""Phillip Spaulding""@en .
  ?character rdf:type ?type .
  FILTER (
    EXISTS { ?type rdfs:subClassOf* <http://dbpedia.org/ontology/FictionalCharacter> } &&
    EXISTS { ?type rdfs:subClassOf* <http://dbpedia.org/ontology/SoapOperaCharacter> }
  )
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
404,44,val,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Identify Ernest Augustus, Duke of Brunswick
  ?ernestAugustus rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  
  # Find his children
  ?child dbo:childOf ?ernestAugustus .

  # Filter for royalty among the children
  OPTIONAL { ?child dbo:royaltyStatus ?royaltyStatus . FILTER(?royaltyStatus != """") }

  # Determine the parent of this child (who is a royalty)
  ?parent dbo:spouse ?princessVictoriaLouise .
  
  # Identify Princess Victoria Louise of Prussia
  ?princessVictoriaLouise rdfs:label ""Princess Victoria Louise of Prussia""@en .

  # Ensure the parent matches the description given in the question
  FILTER(?child = ?ernestAugustusChild)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
391,27,val,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?actor WHERE {
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:Work .
  ?movie rdf:type dbo:TelevisionShow .
  ?movie dbo:starring ?actor .
}
```",3,6,4,3,1,3,3,71,6116,6164,945,0.49804560260586317,0.8661662654015012,0.6324388604518898
963,14,val,"Give me the administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?result <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?administration WHERE {
  ?location dbo:postalCode ""21205"" .
  ?location dbo:rulingParty ?party .
  ?party rdf:type dbo:PoliticalParty .
  OPTIONAL { ?party dbo:administration ?administration }
}
```",3,4,4,3,1,3,2,20,0,0,86,0,0.0,0
55,16,val,"Give me the band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?gunsnrosesMember ?associatedBand WHERE {
  # Find members of Guns N' Roses
  ?band rdfs:label ""Guns N' Roses""@en .
  ?band dbo:bandMember ?gunsnrosesMember .

  # Find bands associated with James Hetfield (Newsted)
  ?newsted rdfs:label ""James Newsted""@en .
  ?newsted dbo:bandMember ?hetfieldBand .

  # Find bands associated with the bands of James Hetfield
  OPTIONAL {
    ?hetfieldBand dbo:associatedBand ?associatedBand .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,16,val,Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName ?associatedArtist WHERE {
  # Query for Sharon Kao's birth name
  ?sharonKao rdfs:label ""Sharon Kao""@en .
  OPTIONAL { ?sharonKao dbo:birthName ?birthName . }

  # Query for Matt Colton's associated musical artist
  ?mattColton rdfs:label ""Matt Colton""@en .
  OPTIONAL {
    ?mattColton dbo:associatedBand ?band ;
                dbo:associatedArtist ?associatedArtist .
  }
}
```",3,3,4,2,2,2,3,28,0,2,2,0.0,0.0,0
547,37,val,Give me the resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alanCunninghamRestingPlace ?actorRestingPlace WHERE {
  # Resting place of Alan Cunningham
  ?alanCunningham a dbo:Person ;
                 rdfs:label ""Alan Cunningham""@en .
  OPTIONAL { 
    ?alanCunningham dbo:deathPlace ?alanCunninghamRestingPlace .
  }

  # Resting place of the actor from the show with Emily Richard
  ?show rdfs:label ""Emily's Reasons Why Not""@en ;
        dbo:actor ?actor .
  OPTIONAL {
    ?actor dbo:deathPlace ?actorRestingPlace .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
92,31,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?artist WHERE {
  ?person rdfs:label ""Jim Sheppard""@en .
  ?person dbo:associatedBand ?band .
  
  ?band rdfs:label ?bandLabel .
  FILTER(CONTAINS(LCASE(?bandLabel), ""nevermore"")) .

  ?member dbo:member ?band ;
          dbo:associatedBand ?band ;
          rdfs:label ?memberLabel .
  
  OPTIONAL {
    ?member dbo:associatedBand ?artistBand .
    ?artistBand rdfs:label ?artistBandLabel .
    FILTER(CONTAINS(LCASE(?artistBandLabel), ""nevermore"")) .
    ?member rdfs:label ?artist .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
356,15,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of Mark Briggs.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  # Find the 2015 Sacramento Republic FC Season
  ?season rdfs:label ""Sacramento Republic FC season 2015""@en .
  
  # Determine its predecessor
  ?predecessor dbo:successor ?season .

  # Identify the successor of this predecessor
  ?successorSeason dbo:predecessor ?predecessor ;
                   a dbo:SoccerClubSeason ;
                   a dbo:SportsTeamSeason .

  # Find Mark Briggs' team in that season
  ?player rdfs:label ""Mark Briggs""@en .
  ?team dbp:season ?successorSeason ;
        dbo:player ?player .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
92,23,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?bandMember WHERE {
  ?film rdfs:label ""Nevermore""@en .
  FILTER (YEAR(?film) = 2006)
  
  OPTIONAL { 
    ?film dbo:castMember ?person .
    ?person dbo:bandMember ?bandMember .
    ?bandMember rdf:type dbo:Artist .
  }
}
```",3,4,4,3,1,3,3,71,0,0,12,0,0.0,0
251,17,val,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?party ?deathPlace WHERE {
  # Part 1: Administration of the ruling party in Sicily
  ?party a dbo:PoliticalParty ;
         dbo:administrativeArea ?sicily .
  ?sicily rdfs:label ""Sicily""@en .

  OPTIONAL { 
    ?party dbo:organization ?org .
  }

  # Part 2: Death place of Laura Mancinelli
  ?mancinelli a dbo:Person ;
              rdfs:label ""Laura Mancinelli""@en ;
              dbo:deathPlace ?deathPlace .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
427,33,val,Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?partitoPopolareItaliano ?fatherParty WHERE {
  # Find the reference to Partito Popolare Italiano
  ?partitoPopolareItaliano rdfs:label ""Partito Popolare Italiano""@en .
  
  OPTIONAL {
    # Identify an alumnus of MIT
    ?alumnus dbo:alumniOf <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    
    # Find the father of this alumnus
    ?father dbo:father ?alumnus .
    
    # Determine the political party affiliation of the father
    ?fatherParty dbo:partyAffiliation ?father .
  }
}
```",4,4,5,3,2,3,3,71,0,1,1,0.0,0.0,0
404,36,val,Give me the spouse of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse ?father ?child WHERE {
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?spouse .

  OPTIONAL { 
    ?spouse dbo:parent ?father .
    ?father dbo:child ?child .
  }
}
```",4,4,5,3,2,3,3,71,1,3,0,0.25,1.0,0.4
161,23,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?person rdfs:label ""Francisco Franco""@en .
  ?event dbo:associatedWith ?person ;
         a dbo:SocietalEvent, dbo:Event, dbo:MilitaryConflict .
  ?event dbo:militaryForce ?militaryForce .
}
```",3,6,4,3,1,3,3,71,0,0,1073,0,0.0,0
617,36,val,Give me the parent of the child of the commander in Battle of Panium and child of Antiochus III the Great.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?battle rdfs:label ""Battle of Panium""@en .
  ?battle dbo:commander ?commander .
  
  ?commanderChild dbo:childOf ?commander .
  
  ?antiochus rdfs:label ""Antiochus III the Great""@en .
  ?antiochusChild dbo:childOf ?antiochus .

  FILTER (?commanderChild = ?antiochusChild)
  
  ?parent dbo:child ?commanderChild .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
54,44,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?predecessor WHERE {
  # Find Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         rdf:type dbo:Royalty, dbo:OfficeHolder .

  # Find the predecessor of this child
  ?predecessor dbo:successor ?child .

  # Find Narapati I of Ava's grandchild
  ?grandchild dbo:parent ?narapatiChild .
  ?narapatiChild dbo:parent dbr:Narapati_I_of_Ava .

  # Find Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan .

  # Ensure the predecessor is both Narapati I of Ava's grandchild and Thinkhaya of Pagan's child
  FILTER (?predecessor = ?grandchild && ?predecessor = ?thinkhayaChild)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
10,18,val,Give me the professional in the birth name of Sharon Kao and band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?sharonKao rdfs:label ""Sharon Kao""@en .
  ?sharonKao dbo:birthName ?birthName .

  OPTIONAL {
    ?band dbo:musicalArtist ?sharonKao ;
          dbo:musicalArtist ?lukeVibert .
    ?lukeVibert rdfs:label ""Luke Vibert""@en .
  }
}
```",3,3,4,2,2,2,3,28,0,2,1,0.0,0.0,0
16,37,val,Give me the person born as Georgeanne Marie Rice and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  # Find the person born as Georgeanne Marie Rice
  ?rice a dbo:Person ;
        dbo:birthName ""Georgeanne Marie Rice"" .

  # Find an actor from the TV series ""Unnatural""
  ?unnaturalSeries rdfs:label ""Unnatural (TV series)""@en .
  ?unnaturalSeries dbo:actor ?actor .

  # Check if Georgeanne Marie Rice has a profession related to acting
  OPTIONAL {
    ?rice dbo:profession ?profession .
    FILTER (?profession = <http://dbpedia.org/ontology/Actor>)
  }

  # Ensure the person found is an actor and matches the criteria
  ?person rdfs:label ?actorLabel .
  FILTER(?actorLabel = ?actor)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,18,val,Give me the band of Joseph Michael and associated musical artist of Jim Sheppard and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandOfJosephMichael ?associatedArtistJimSheppard ?nevermoreBandMember WHERE {
  # Band of Joseph Michael
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbo:band ?bandOfJosephMichael .

  # Associated Musical Artist of Jim Sheppard
  ?sheppardPerson rdfs:label ""Jim Sheppard""@en .
  ?sheppardPerson dbo:associatedMusicalArtist ?associatedArtistJimSheppard .

  # Band Member of Nevermore
  ?nevermoreBandMember dbo:band <http://dbpedia.org/resource/Nevermore> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
915,14,val,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?lizzie rdfs:label ""Lizzie Spaulding""@en .
  ?lizzie dbo:spouseOrPartner ?parent .

  OPTIONAL { ?parent dbo:child ?child . }
  
  FILTER EXISTS { ?child rdf:type dbo:FictionalCharacter . }
  FILTER EXISTS { ?child dbo:genre/dbo:subClassOf* dbo:SoapOpera . }

  OPTIONAL { ?child dbo:father ?father . }
  
  FILTER EXISTS { ?father rdf:type dbo:FictionalCharacter . }
  FILTER EXISTS { ?father dbo:genre/dbo:subClassOf* dbo:SoapOpera . }
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
303,13,val,"Give me the entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?entity ?role WHERE {
  ?event rdfs:label ""United States invasion of Panama""@en .
  ?event dbo:location ?location .
  ?location rdfs:label ""Panama""@en .
  
  ?person dbo:memberOf ?event .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician"") || CONTAINS(LCASE(?occupation), ""commander"")) .

  OPTIONAL { ?person dbo:role ?role . }
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
488,33,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki.",SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace ?birthPlace WHERE {
  # Find Matsudaira Tadamasa's father who is an office holder
  ?matsudairaTadamasa dbo:father ?father .
  ?father a dbo:OfficeHolder .

  # Get the death place of that father
  OPTIONAL { ?father dbo:deathPlace ?deathPlace . }

  # Find Enomoto Takeaki's birthplace
  ?enomotoTakeaki rdfs:label ""Enomoto Takeaki""@en .
  ?enomotoTakeaki dbo:birthPlace ?birthPlace .

  # Ensure Matsudaira Tadamasa is correctly identified
  ?matsudairaTadamasa rdfs:label ""Matsudaira Tadamasa""@en .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,26,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceCountry WHERE {
  ?election dbo:leader ?leader .
  FILTER (?election rdfs:label ""1962 New South Wales state election""@en) .
  
  ?leader rdf:type dbo:Politician .
  
  OPTIONAL { 
    ?leader dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:Country .
    BIND(?birthPlace AS ?birthPlaceCountry)
  }
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
391,25,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?movie ?actor WHERE {
  ?movie a dbo:Film ;
         a dbo:Work ;
         dbo:adaptationOfWork ?tvShow .
  
  ?movie dbo:starring ?actor .
  
  ?departedMovie rdfs:label ""The Departed""@en .
  ?departedMovie dbo:starring ?departedActor .

  ?rozRyanMovie dbo:starring <http://dbpedia.org/resource/Roz_Ryan> .
  ?rozRyanMovie dbo:starring ?actor .

  FILTER (?actor = ?departedActor)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
994,28,val,Give me the associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedArtist1 ?associatedArtist2 ?bandMember WHERE {
  # Find associated musical artist of Red Tide
  ?redTideBand rdfs:label ""Red Tide""@en .
  ?redTideBand dbo:associatedBand ?associatedArtist1 .

  OPTIONAL {
    # Find associated musical artist of Watchtower
    ?watchTowerBand rdfs:label ""Watchtower""@en .
    ?watchTowerBand dbo:associatedBand ?intermediateArtist .
    
    # Find associated musical artist of the intermediate artist
    ?intermediateArtist dbo:associatedBand ?associatedArtist2 .
  }

  # Find band member of Don Dokken
  ?donDokkenBand rdfs:label ""Don Dokken""@en .
  ?donDokkenBand dbo:bandMember ?bandMember .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
378,27,val,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?claimToFame WHERE {
  ?person rdfs:label ""Thomas Trigge""@en .
  ?person a dbo:Person ;
          dbo:claimToFame ?claimToFame .

  ?militaryConflict a dbo:MilitaryConflict ;
                    dbo:claimToFame ?claimToFame ;
                    a dbo:SocietalEvent, dbo:Event .
}
```",3,6,4,3,1,3,3,71,0,0,6,0,0.0,0
182,16,val,Give me the entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?entity WHERE {
  ?tamara dbo:nationality ?nationality .
  ?mahesh dbo:war ?war .
  FILTER(STR(?tamara) = ""Tamara_Kunanayakam""^^xsd:string)
  FILTER(STR(?mahesh) = ""Mahesh_Senanayake""^^xsd:string)
  ?entity dbo:nationality ?nationality .
  ?entity dbo:war ?war .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,13,val,"Give me the child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  # Step 1: Identify Charles Alexander
  ?charlesAlexander rdfs:label ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  
  # Step 2: Find his parent (likely father)
  ?parent dbo:child ?charlesAlexander .

  # Step 3: Find a child of this parent who is royalty
  ?royalChild dbo:child ?parent ;
              rdf:type/rdfs:subClassOf* dbo:Monarch .
  
  # Step 4: Identify the child of this royal child
  ?grandchild dbo:child ?royalChild .
}
```",3,4,4,3,1,3,2,20,0,0,8,0,0.0,0
492,19,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Query for finding the successor of Joseph C. Satterthwaite as US Assistant Secretary of State for African Affairs
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor WHERE {
  ?satterthwaite rdfs:label ""Joseph C. Satterthwaite""@en .
  ?satterthwaite dbo:position ?position .
  ?position dbo:successor ?successor .
}

UNION

# Query for finding a commander in the Franco-Hova Wars
SELECT ?commander WHERE {
  ?war rdfs:label ""Franco-Hova Wars""@en .
  ?war dbo:commander ?commander .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
696,13,val,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlace WHERE {
  # Find The Boils and their associated musical artists
  ?theBoils rdfs:label ""The Boils""@en .
  ?theBoils dbo:associatedMusicalArtist ?associatedBand .

  # Filter to find organizations or groups/bands
  ?associatedBand a ?type .
  FILTER (
    ?type = dbpedia-owl:Organization ||
    ?type = dbpedia-owl:Band || 
    ?type = dbpedia-owl:Group

  )

  # Find members of the associated band and their birthplaces
  ?member dbo:memberOf ?associatedBand ;
          dbo:birthPlace ?birthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,36,val,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?battle dbo:eventLocation ?location .
  FILTER(CONTAINS(LCASE(?location), ""perire"")) .

  ?battle dbo:commander ?commander .
  
  ?father dbo:child ?commander ;
          a dbo:Person .

  ?parent dbo:parent ?meritamen ;
          dbo:spouse ?father ;
          a dbo:Royalty .

  BIND(?parent AS ?spouse)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
328,29,val,Give me the commander in the force of Ferenc Szálasi and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person dbo:commanderOfForce ?szalasiForce .
  ?szalasiForce dbo:leader ?ferencSzalasi .
  
  ?person dbo:awardeeOrderOfSuvorov true .

  ?person dbo:positionHeld ?sovietDefenseRole .
  ?sovietDefenseRole rdfs:label ""People's Commissar for Defence""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
404,21,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?person dbo:birthName ""Princess Victoria Louise of Prussia""@en .
  ?person dbo:parent ?parent .
  ?parent rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .
  ?person dbo:spouse ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
666,11,val,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as The Three Lions.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?team a dbo:AthleticTeam ;
        dbo:sport ""Association football"" ;
        dbo:season ""?2016-17"" ;
        dbo:manager ?manager .
  FILTER (CONTAINS(LCASE(?team), ""hull city""))
}

UNION

SELECT ?figure WHERE {
  ?entity rdfs:label ""The Three Lions""@en .
  ?entity dbo:wikiPageRedirects ?figure .
}
```",3,4,4,2,2,3,2,20,0,0,2,0,0.0,0
778,13,val,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity WHERE {
  ?award rdfs:label ""Wolf Prize in Medicine""@en .
  ?award dbo:recipient ?person .
  ?person dbo:nationality ?nationality .
  FILTER (CONTAINS(LCASE(?nationality), ""united states"") || CONTAINS(LCASE(?nationality), ""america""))
  ?person dbo:honoredFor ?entity .
}
```",3,4,4,3,1,3,2,20,0,0,18629,0,0.0,0
161,44,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?emilioMolaCommander ?franciscoLargoCaballeroSocietalEvent ?rifWarMilitaryForce WHERE {
  # Emilio Mola's command in a military event
  ?event dbo:militaryConflict [
    dbo:commander ?emilioMolaCommander ;
    rdfs:label ""Emilio Mola""@en .
  ] .

  # Francisco Largo Caballero's involvement in societal events and the Rif War
  ?societalEvent dbo:societalEvent [
    dbo:participant ?franciscoLargoCaballeroParticipant ;
    rdfs:label ?franciscoLargoCaballeroSocietalEvent .
  ] .

  ?rifWarMilitaryForce dbo:militaryConflict [
    dbo:conflict [
      rdfs:label ""Rif War""@en
    ] ;
    dbo:participant ?franciscoLargoCaballeroParticipant .
  ] .

  # Link Francisco Largo Caballero to the participant variable
  ?franciscoLargoCaballeroParticipant rdfs:label ""Francisco Largo Caballero""@en .
}
```",5,8,6,2,3,3,3,71,0,0,11,0,0.0,0
48,14,val,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor ?band WHERE {
  ?show dbo:castMember ?staceyDash .
  ?staceyDash rdfs:label ""Stacey Dash""@en .
  
  ?show dbo:castMember ?actor .
  ?actor dbo:musicalArtist ?musicalArtist .
  ?musicalArtist dbo:band ?band .

  FILTER(?actor != ?staceyDash)
}
```",3,4,4,3,1,3,2,20,0,0,36,0,0.0,0
659,25,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  ?person rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  ?person dbo:militaryConflict ?conflict .
  ?conflict a dbo:MilitaryConflict ;
            dbo:commander ?commander .
  OPTIONAL { ?commander dbp:commanded ?militaryForce . }
  
  FILTER EXISTS {
    ?battle rdfs:label ""Battle of Leipzig""@en .
    ?battle dbo:commander ?commander .
  }
}
```",3,6,4,2,2,3,3,71,0,0,6,0,0.0,0
92,42,val,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?bandMemberArtist ?associatedBand ?musicalArtist 
WHERE {
  # Find band members of Nevermore who are artists
  ?person dbo:bandMember ?nevermore .
  ?nevermore rdfs:label ""Nevermore""@en .
  ?person dbo:occupation ?artistRole .
  FILTER(CONTAINS(LCASE(STR(?artistRole)), ""artist""))

  BIND(?person AS ?bandMemberArtist)

  # Find the band associated with Joseph Michael Furney (Warrel Dane)
  OPTIONAL {
    ?warrelDane dbo:birthName ""Joseph Michael Furney""@en .
    ?warrelDane rdfs:label ""Warrel Dane""@en .
    ?warrelDane dbo:associatedBand ?associatedBand .
  }

  # Find associated musical artists of Jim Sheppard
  OPTIONAL {
    ?jimSheppard rdfs:label ""Jim Sheppard""@en .
    ?jimSheppard dbo:associatedBand ?musicalArtist .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,32,val,Give me the person born on the birth date of Pavlo Khudzik and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?band WHERE {
  # Part 1: Find Pavlo Khudzik's birth date
  ?khudzik rdfs:label ""Pavlo Khudzik""@en .
  ?khudzik dbo:birthDate ?birthDate .

  # Part 2: Find other persons born on the same date
  ?person dbo:birthDate ?birthDate .
  
  FILTER(?person != ?khudzik) # Exclude Pavlo Khudzik himself

  # Part 3: Find the writer of the song ""Apollo"" by Hardwell
  ?song rdfs:label ""Apollo (Hardwell song)""@en ;
        dbo:lyricsBy ?writer .

  # Part 4: Find the band associated with that writer
  OPTIONAL { ?writer dbo:band ?band }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
232,35,val,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person dbo:birthName ""John Devon Roland Pertwee""@en .
  ?person dbo:child ?child .

  OPTIONAL {
    ?sylvie dbo:residence ?residence .
    ?residence rdf:type dbo:Settlement ;
               dbo:country ?country .
    FILTER (str(?country) = ""United Kingdom"" || str(?country) = ""Britain"")
  }
}
```",4,6,5,2,2,3,3,71,1,0,0,1.0,1.0,1.0
617,29,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?spouse WHERE {
  ?child dbo:childOf ?antiochus .
  ?antiochus rdfs:label ""Antiochus III the Great""@en .
  
  ?nysa dbo:parent ?child .
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .

  ?child dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
427,26,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party WHERE {
  ?alumnus dbo:almaMater db:Massachusetts_Institute_of_Technology .
  ?father foaf:parentOf ?alumnus .
  OPTIONAL { ?father dbo:party ?party . }
}
```",3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
179,13,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?person rdfs:label ""Nakkhatra Mangala""@en .
  ?child dbo:child ?person .
  OPTIONAL { ?child dbo:royaltyTitle ?title . FILTER EXISTS { ?title } }
  ?child dbo:birthName ?birthName .
}
```",3,4,4,3,1,3,2,20,0,0,1,0,0.0,0
378,28,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as Carl Pontus Gahn and war of Joaquín Blake.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?claimToFame ?war WHERE {
  VALUES ?person { 
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón
    dbr:Carl_Pontus_Gahn
    dbr:Joaquín_Blake
  }
  
  OPTIONAL {
    ?person dbo:claimToFame ?claimToFame .
  }

  OPTIONAL {
    ?person dbo:participatedIn ?war .
  }
}
```",4,4,5,2,3,3,3,71,0,3,2,0.0,0.0,0
783,11,val,Give me the associated musical artist of the band member of Ofori Amponsah and band member of Ebony Reigns.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist WHERE {
  # For Ofori Amponsah
  OPTIONAL {
    ?bandMember rdfs:label ""Ofori Amponsah""@en .
    ?bandMember dbo:bandMember ?band .
    ?band dbo:musicalArtist ?artist .
  }
  
  # For Ebony Reigns
  OPTIONAL {
    ?bandMember2 rdfs:label ""Ebony Reigns""@en .
    ?bandMember2 dbo:bandMember ?band2 .
    ?band2 dbo:musicalArtist ?artist .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
659,37,val,"Give me the military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce ?commander WHERE {
  ?polishHorse rdfs:label ""Polish Horse""@en .
  ?polishHorse dbo:militaryConflict ?napoleonicWars .
  ?napoleonicWars rdfs:label ""Napoleonic Wars""@en .

  OPTIONAL { ?polishHorse dbo:partOf ?militaryForce . }
  OPTIONAL { ?polishHorse dbo:commander ?commander . }

  FILTER(?militaryForce != null || ?commander != null)
}
```",4,8,5,3,2,3,3,71,0,0,29,0,0.0,0
421,15,val,Give me the band member of the awardee of [[#Awards and nominations and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  ?person rdfs:label ""Eminem""@en .
  ?award dbo:recipient ?person ;
         a dbo:Award .
  OPTIONAL { 
    ?award dbo:awardCategory ?category .
    FILTER regex(?category, ""Band|Group"", ""i"")
  }
  ?band dbo:member ?bandMember .
  ?band dbo:award ?award .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
487,15,val,Give me the country of the administration of the person born on 1955-01-26 and administration of Phil Scott.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?personLabel ?country WHERE {
  {
    ?person dbo:birthDate ""1955-01-26""^^xsd:date .
    OPTIONAL { ?person rdfs:label ?personLabel . FILTER (lang(?personLabel) = 'en') }
    ?office dbo:head ?person ;
            dbo:country ?country .
  } UNION {
    ?person rdfs:label ""Phil Scott""@en .
    OPTIONAL { ?person rdfs:label ?personLabel . FILTER (lang(?personLabel) = 'en') }
    ?office dbo:head ?person ;
            dbo:country ?country .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
404,19,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent ?spouse WHERE {
  # Find the parent of Prince Ernest Augustus of Hanover (born 1914)
  ?person rdfs:label ""Prince Ernest Augustus of Hanover""@en .
  ?person dbo:birthday ?birthday .
  FILTER(YEAR(?birthday) = 1914) .
  
  OPTIONAL { 
    ?parent dbo:child ?person .
    BIND(""Parent of Prince Ernest Augustus"" AS ?relationship1)
  }
  
  # Find the spouse of Princess Victoria Louise of Prussia
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse a dbo:RoyalFamilyMember } .
  BIND(""Spouse of Princess Victoria Louise"" AS ?relationship2)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,24,val,Give me the band of the writer of Apollo (Hardwell song) and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?writerBand ?shenaBand WHERE {
  # Find the band of the writer of ""Apollo"" by Hardwell
  ?song dbo:title ""Apollo""@en .
  ?song dbo:artist ""Hardwell""@en .
  ?song dbo:composer ?writer .
  OPTIONAL { ?writer dbo:band ?writerBand . }

  # Find the band associated with Shèna
  ?person rdfs:label ""Shèna""@en .
  OPTIONAL { ?person dbo:band ?shenaBand . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,18,val,Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person dbo:parent ?thadoMinsaw .
  FILTER(STR(?thadoMinsaw) = ""Thado Minsaw of Prome"")
  
  ?thinkhaya dbo:child ?person .
  FILTER(STR(?thinkhaya) = ""Thinkhaya of Pagan"")

  ?ameittaThiri dbo:predecessor ?person .
  FILTER(STR(?ameittaThiri) = ""Ameitta Thiri Maha Dhamma Dewi of Ava"")
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
427,19,val,Give me the party of Giulio Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party ?ipepDescription WHERE {
  # Part for Giulio Andreotti's party
  ?andreotti rdfs:label ""Giulio Andreotti""@en .
  ?andreotti dbo:party ?party .

  # Part for Italian People's Party (1994)
  ?ipep rdfs:label ""Italian People's Party (1994)""@en .
  ?ipep rdfs:comment ?ipepDescription
}
```",3,3,4,2,2,3,3,71,1,5,0,0.16666666666666666,1.0,0.2857142857142857
747,37,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandOfAmbaShepherd ?bandOfShena WHERE {
  # Find the band of Amba Shepherd as a writer
  ?song dbo:writer ?ambashepherd .
  ?ambashepherd rdfs:label ""Amba Shepherd""@en .
  OPTIONAL { ?ambashepherd dbo:band ?bandOfAmbaShepherd . }
  
  # Find the band of Shèna
  ?work dbo:artist ?shena .
  ?shena rdfs:label ""Shèna""@en .
  OPTIONAL { ?shena dbo:band ?bandOfShena . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
747,36,val,Give me the band of the person born as the persona of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?band WHERE {
  # Find Shèna (Shena McNamara)
  { 
    ?person rdfs:label ""Shena McNamara""@en .
    OPTIONAL { ?person dbo:musicalBand ?band . }
  } UNION
  # Find the person born on April 29, 1985 (Taylor Swift)
  {
    ?person dbo:birthDate ?date .
    FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
    OPTIONAL { ?person dbo:musicalBand ?band . }
  }
}
```",4,4,5,3,2,3,3,71,1,29,0,0.03333333333333333,1.0,0.06451612903225806
10,12,val,Give me the professional in  and associated musical artist of Matt Colton and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession ?band WHERE {
  # Query for Matt Colton's profession
  ?mattColton rdfs:label ""Matt Colton""@en .
  ?mattColton dbo:profession ?profession .

  # Query for Luke Vibert's band membership
  OPTIONAL {
    ?lukeVibert rdfs:label ""Luke Vibert""@en .
    ?lukeVibert dbo:bandMember ?band .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
528,28,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?battleWar ?barbosaWar ?camperoWar ?battleForce ?barbosaForce ?camperoForce WHERE {
  ?battle rdfs:label ""Battle of Pisagua""@en .
  ?battle dbo:war ?battleWar ;
          dbo:militaryForce ?battleForce .

  ?person1 rdfs:label ""Orozimbo Barbosa""@en .
  ?person1 dbo:participatedIn ?barbosaWar ;
           dbo:militaryForce ?barbosaForce .

  ?person2 rdfs:label ""Narciso Campero""@en .
  ?person2 dbo:participatedIn ?camperoWar ;
           dbo:militaryForce ?camperoForce .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
435,12,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?articleContent ?gmtRegion ?administeredTerritory WHERE {
  # Part 1: Work of Article 62, Section IV of Constitution of Iceland
  OPTIONAL {
    ?constitution rdfs:label ""Constitution of Iceland""@en .
    ?constitution dbo:text ?text .
    FILTER(CONTAINS(LCASE(?text), ""article 62 section iv""))
    BIND(SUBSTR(?text, STRSTARTS(UCASE(?text), ""ARTICLE 62 SECTION IV""), 1000) AS ?articleContent)
  }

  # Part 2: Region of Greenwich Mean Time
  OPTIONAL {
    dbr:Greenwich_Mean_Time dbo:region ?gmtRegion .
  }

  # Part 3: Territory Administered from Reykjavík
  OPTIONAL {
    dbr:Iceland dbo:capital dbr:Reykjavík .
    ?territory dbo:administrativeCapital dbr:Reykjavík ;
               rdfs:label ?administeredTerritory .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
485,13,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query to find the birth place of Thomas Warner (poet)
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Thomas Warner""@en .
  ?person dbo:occupation dbo:Poet .
  ?person dbo:birthPlace ?birthPlace .
}

# Query to find a country in the Western European Time region
PREFIX dbp: <http://dbpedia.org/property/>
SELECT DISTINCT ?country WHERE {
  ?country a dbo:Country ;
           dbp:timeZone ""Western European Time"" .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
487,11,val,Give me the country of the administration of Patricia McCoy and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country1 ?country2 WHERE {
  # For Patricia McCoy
  ?office1 dbo:officeHolder ?person1 .
  ?person1 rdfs:label ""Patricia McCoy""@en .
  OPTIONAL { ?office1 dbo:country ?country1 . }
  
  # For Phil Scott
  ?office2 dbo:officeHolder ?person2 .
  ?person2 rdfs:label ""Phil Scott""@en .
  OPTIONAL { ?office2 dbo:country ?country2 . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
959,37,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nativePlace WHERE {
  ?person dbo:officeHolder ?office .
  ?office rdfs:label ""House of Councillors""@en .
  ?person dbo:manager ?team .
  ?team rdfs:label ""Júbilo Iwata""@en .
  FILTER(YEAR(?office.start) = 2010 && YEAR(?team.seasonStart) = 2013)
  
  ?person dbo:residence ?residence .
  ?residence rdf:type/rdfs:subClassOf* dbo:Country .

  OPTIONAL { ?person dbo:nativePlace ?nativePlace . }
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
314,15,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person WHERE {
  # Part 1: Commander in the Spanish Civil War
  ?person dbo:commanderInWar ?war .
  ?war rdfs:label ""Spanish Civil War""@en .

  # Part 2: Person deceased at the headquarter of House of Sombrerete
  OPTIONAL { 
    ?deathEvent dbo:place ?location .
    ?location rdfs:label ""House of Sombrerete""@en .
    ?person dbo:death ?deathEvent .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
701,19,val,Give me the parent of the child of Nefertari and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Find Nefertari's child and their parent
  ?nefertariChild dbo:childOf ?nefertari .
  ?nefertari rdfs:label ""Nefertari""@en .
  ?nefertariChild dbo:parent ?parent .

  # Find Henuttawy (19th dynasty) and her parent
  ?henuttawy dbo:birthPlace ?place .
  ?henuttawy rdfs:label ""Henuttawy""@en .
  FILTER(CONTAINS(LCASE(?place), ""19th dynasty"")) .
  ?henuttawy dbo:parent ?henuttawyParent .

  # Check if the parents are the same
  FILTER (?parent = ?henuttawyParent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,38,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:Work .
  ?movie rdf:type dbo:TelevisionShow .
  
  ?movie dbo:starring ?rozRyan .
  ?rozRyan rdfs:label ""Roz Ryan""@en .

  ?ballhausClaim dbo:claimToFame ?movie .
  ?ballhausClaim rdfs:label ""Michael Ballhaus""@en .

  ?movie dbo:starring ?actor .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
142,7,val,Give me the birthplace of George Tokoro and entity in the region of Japan Standard Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""George Tokoro""@en .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

SELECT ?entity WHERE {
  ?entity dbo:country ?country .
  FILTER (CONTAINS(LCASE(?country), ""japan""))
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
696,14,val,Give me the landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?landmark WHERE {
  ?battle rdfs:label ""Battle of Chishui River""@en .
  ?commander dbo:commanderOf ?battle .
  ?commander dbo:award ?award .
  
  OPTIONAL { 
    ?location dbo:elevation ?elevation .
    ?location dbo:hasElevation ?elevation .
    ?landmark dbo:elevation ?elevation .
  }
}
```",3,3,4,3,1,3,2,20,0,0,1731,0,0.0,0
55,17,val,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMemberBand WHERE {
  # Find Metallica members
  ?metallicaMember dbo:memberOfBand ?metallica .
  ?metallica rdfs:label ""Metallica""@en .

  # Ensure the member is also a band or group
  ?metallicaMember dbo:memberOfBand ?bandMemberBand .
  ?bandMemberBand rdf:type dbo:MusicalArtist .

  # Check for connection to San Francisco Symphony
  OPTIONAL {
    ?bandMemberBand dbp:associatedWith ""San Francisco Symphony""@en .
  }
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
54,42,val,"Give me the parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Step 1: Find the parent of Thado Minsaw of Prome
  ?thadoMinsaw dbo:parent ?parent .
  ?thadoMinsaw rdfs:label ""Thado Minsaw of Prome""@en .

  # Step 2: Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi dbo:father ?father .
  ?soeMinWimalaDewi rdfs:label ""Soe Min Wimala Dewi""@en .

  # Step 3: Find the child of Soe Min Wimala Dewi's father
  ?child dbo:parent ?father .

  # Step 4: Identify Thihapate of Mohnyin's child
  ?thihapateChild dbo:parent ?thihapate .
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .

  # Step 5: Find predecessor of Thihapate of Mohnyin's child
  ?predecessor dbo:predecessor ?thihapateChild .
  
  # Ensure the person is an office holder and royalty
  ?predecessor a dbo:OfficeHolder ;
               a dbo:Royalty .

  # Combine information to find the matching person
  FILTER (?parent = ?person)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
378,23,val,Give me the war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName ?war WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  OPTIONAL { ?person dbo:participatedIn ?war . }
}
```",3,3,4,3,1,3,3,71,0,0,12,0,0.0,0
360,14,val,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?writer ?nativePlace WHERE {
  # Part 1: Find the writer of ""The Roaring Silence""
  ?book rdfs:label ""The Roaring Silence""@en .
  ?book dbo:author ?writer .

  # Part 2: Find the native place of Winnie Madikizela-Mandela's death place if it is a settlement
  OPTIONAL {
    ?winnie dbo:deathPlace ?deathPlace .
    ?deathPlace rdf:type dbo:Settlement .
    ?deathPlace dbo:nativeOf ?nativePlace .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,34,val,"Give me the actor of All About the Andersons and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  # Part 1: Actor of ""All About the Andersons""
  ?movie rdfs:label ""All About the Andersons""@en .
  ?movie dbo:starring ?actor .

  # Part 2: Native of the nickname city of Jackson, Tennessee
  OPTIONAL {
    ?city rdfs:label ?nickname .
    FILTER(CONTAINS(LCASE(?nickname), ""jackson"") && CONTAINS(LCASE(?nickname), ""tennessee""))
    ?person dbo:nativePlace ?city .
    ?person dbo:starring ?actor .
  }
}
```",4,4,5,3,2,3,3,71,1,3,0,0.25,1.0,0.4
16,42,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseTed ?spouseGigi WHERE {
  # Find Ted Martin McGinley's spouse
  ?person1 dbo:birthName ""Ted Martin McGinley"" .
  ?person1 dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(STR(?profession)), ""actor"") || CONTAINS(LCASE(STR(?profession)), ""actress"")) .
  OPTIONAL { ?person1 dbo:spouse ?spouseTed . }

  # Find Gigi Rice's spouse
  ?person2 dbo:birthName ""Gigi Rice"" .
  OPTIONAL { ?person2 dbo:spouse ?spouseGigi . }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
314,17,val,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Query for Sergei Makovetsky's award
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?person rdfs:label ""Sergei Makovetsky""@en .
  ?person dbo:award ?award .
}

UNION

# Query for a commander in the Spanish Civil War
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event rdfs:label ""Spanish Civil War""@en .
  ?person dbo:role ?role ;
          dbo:participatedIn ?event .
  FILTER CONTAINS(LCASE(?role), ""commander"")
  BIND(?person AS ?commander)
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
360,13,val,"Give me the writer of the work, that is an album, of Dave Flett and native of Johannesburg.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer WHERE {
  ?album dbo:creator dbr:Dave_Flett .
  ?album dbo:writer ?writer .
  ?writer dbo:nativePlace dbr:Johannesburg .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,33,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?childOfChild WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria
  ?ladislaus dbo:parent ?parent .

  # Step 2: Find the child of that parent who is royalty
  ?parent dbo:child ?child .
  FILTER EXISTS { ?child rdf:type dbo:RoyalPerson } .

  # Step 3: Ensure this person is also the parent of Géza von Habsburg
  ?child dbo:child ?geza .
  ?geza rdfs:label ""Géza von Habsburg""@en .

  # Return the child who satisfies all conditions
  BIND(?child AS ?childOfChild)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
427,32,val,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father ?partyAffiliation ?ippName WHERE {
  ?lamberto rdfs:label ""Lamberto Andreotti""@en .
  ?lamberto dbo:father ?father .

  OPTIONAL { 
    ?father dbo:partyAffiliation ?partyAffiliation .
  }

  ?ipp a dbo:PoliticalParty ;
       rdfs:label ?ippName ;
       dbo:foundingDate ?foundingDate .
  
  FILTER (YEAR(?foundingDate) = 1994)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
16,31,val,Give me the spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?spouse WHERE {
  ?person rdfs:label ""Ted McGinley""@en .
  ?person dbo:birthName ?birthName .
  ?person rdf:type dbo:Actress .
  ?person dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
232,28,val,Give me the native of London and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""John Pertwee""@en .
  ?person dbo:birthName ""John Devon Roland Pertwee"" .
  ?person dbo:actorInFilm ?film .
  ?film rdfs:label ""Dog Soldiers""@en .
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""London""@en .
  ?person dbo:child ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
747,33,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?song rdfs:label ""Amba Shepherd""@en .
  ?song dbo:creator ?writer .
  ?writer dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
  ?writer dbo:band ?band .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,40,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName ?almaMater WHERE {
  ?team dbo:manager ?person .
  ?person rdfs:label ?managerName ;
          dbo:birthDate ?birthDate ;
          dbo:nationality dbr:Japan .
  FILTER (YEAR(?birthDate) = 1958)
  
  OPTIONAL { 
    ?person dbo:almaMater ?university .
    ?university a dbo:University ;
               dbo:country dbr:Japan .
  }
  
  FILTER EXISTS {
    ?team rdfs:label ""Júbilo Iwata""@en .
    ?team dbo:sportTeamInSeason dbr:2013_J1_League
  }
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
378,34,val,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person1 ?war1 ?person2 ?war2 WHERE {
  # Find Carl Pontus Gahn and his notable events (wars)
  ?person1 rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL { ?person1 dbo:birthName ""Carl Pontus Gahn"" . }
  OPTIONAL { ?person1 dbo:notableEvents ?war1 . 
             ?war1 rdf:type dbo:MilitaryConflict . }

  # Find Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and his notable events (wars)
  ?person2 rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  OPTIONAL { ?person2 dbo:birthName ""Louis des Balbes de Berton de Crillon"" . }
  OPTIONAL { ?person2 dbo:notableEvents ?war2 . 
             ?war2 rdf:type dbo:MilitaryConflict . }

}
```",4,4,5,3,2,3,3,71,0,2,2,0.0,0.0,0
485,12,val,Give me the birth place of Thomas Warner (poet) and entity in Nottinghamshire and entity in United Kingdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace ?nottinghamshireEntity ?ukEntity WHERE {
  ?warner rdfs:label ""Thomas Warner (poet)""@en .
  ?warner dbo:birthPlace ?birthPlace .

  OPTIONAL { 
    ?entity rdfs:label ?label1 .
    ?entity dbo:locatedIn ?location .
    FILTER(CONTAINS(LCASE(?label1), ""nottinghamshire"") || CONTAINS(LCASE(?location), ""Nottinghamshire""))
    BIND(?entity AS ?nottinghamshireEntity)
  }

  OPTIONAL {
    ?entity rdfs:label ?label2 .
    ?entity dbo:locatedIn ?location .
    FILTER(CONTAINS(LCASE(?label2), ""united kingdom"") || CONTAINS(LCASE(?location), ""United Kingdom""))
    BIND(?entity AS ?ukEntity)
  }
}
```",3,3,4,1,3,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
767,36,val,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInBadenWurttemberg ?fictionalCharacter WHERE {
  ?person rdfs:label ""Matthew Burland""@en .
  OPTIONAL { ?person dbo:alterEgo ?fictionalCharacter . }
  
  ?entityInBadenWurttemberg dbp:location <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
  OPTIONAL { ?entityInBadenWurttemberg dbo:associatedWith ?fictionalCharacter . }

  FILTER(?fictionalCharacter != """")
}
```",4,5,5,3,2,3,3,71,0,0,7,0,0.0,0
959,19,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?university WHERE {
  ?eiji dbo:nationality dbr:Japan .
  ?eiji dbo:almaMater ?university .
  ?university a dbo:University ;
              a dbo:EducationalOrganization ;
              dbo:locationCountry dbr:Japan .
}
```",3,7,4,2,2,3,3,71,0,0,84,0,0.0,0
487,13,val,Give me the country of the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?country WHERE {
  ?person dbo:birthDate ?date .
  FILTER (STR(?date) = ""1955-01-26""^^xsd:date)
  
  ?person dbo:administrativePost ?post .
  ?post dbo:country ?country .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
820,15,val,Give me the professional in the award of the author of Understanding Comics and child of Jack Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professional WHERE {
  ?author rdfs:label ""Scott McCloud""@en .
  ?author dbo:award ?award .
  
  ?child dbo:parent ?jackSchwartzman ;
         dbo:profession ?professional .

  ?jackSchwartzman rdfs:label ""Jack Schwartzman""@en .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
827,15,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?grandchild WHERE {
  # Step 1: Identify William Ernest and his father
  ?william_ernest rdfs:label ""William Ernest, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?william_ernest dbo:parent ?father .

  # Step 2: Identify Charles Alexander and his parent (father)
  ?charles_alexander rdfs:label ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?charles_alexander dbo:parent ?grandfather .

  # Step 3: Find a child of the grandfather
  ?child_of_grandfather dbo:parent ?grandfather .

  # Step 4: Find that child's child (grandchild)
  ?grandchild dbo:parent ?child_of_grandfather .

  # Step 5: Ensure the grandchild is royalty
  ?grandchild rdf:type dbo:Monarch .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
391,26,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?hormann rdfs:label ""Sherry Hormann""@en .
  ?hormann dbo:spouse ?spouse .

  OPTIONAL { 
    ?spouse dbo:work ?claimToFame .
    ?claimToFame a ?type .
    FILTER(?type IN (dbo:Film, dbo:TVSeries)) # Assuming claim to fame is a film or TV series
    ?claimToFame dbo:starring ?actor .
  }
}
```",3,4,4,3,1,3,3,71,0,0,20,0,0.0,0
659,19,val,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?battleCommander ?wellingtonCommander WHERE {
  ?battle rdfs:label ""Battle of Leipzig""@en .
  ?battle dbo:commander ?battleCommander .

  ?wel rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  ?wel dbo:commander ?wellingtonCommander .
}
```",3,3,4,2,2,3,3,71,0,0,19,0,0.0,0
617,33,val,"Give me the child of Antiochus III the Great and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  # Antiochus III the Great
  ?antiochusIII rdfs:label ""Antiochus III""@en .
  
  # Child of Antiochus III the Great
  ?child dbo:parent ?antiochusIII .

  # Successor (likely his son)
  ?successor dbo:parent ?antiochusIII .

  # Child of the successor
  ?successorsChild dbo:parent ?successor .

  # Spouse of the child of the successor, ensuring they are royalty
  ?spouse dbo:spouse ?successorsChild .
  ?spouse a dbo:Monarch .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
617,12,val,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandparent WHERE {
  ?richeza rdfs:label ""Richeza of Poland, Queen of Hungary""@en .
  ?richeza dbo:father ?father .
  ?father dbo:father|dbo:mother ?grandparent .
  OPTIONAL { ?grandparent dbo:royalTitle ?title . }
  FILTER EXISTS { ?grandparent dbo:royalTitle ?title }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
281,29,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?beauchampWar ?heffronBirthCountry ?nzArmyWar WHERE {
  # Beauchamp Seymour, 1st Baron Alcester's war
  ?beauchamp dbo:participatedIn ?beauchampWar .
  FILTER (str(?beauchamp) = ""Beauchamp_Seymour,_1st_Baron_Alcester"")

  # Bob Heffron's birthplace country
  ?heffron dbo:birthPlace ?birthPlace .
  FILTER (str(?heffron) = ""Bob_Heffron"")
  ?birthPlace rdf:type dbo:Country .
  BIND(str(?birthPlace) AS ?heffronBirthCountry)

  # New Zealand Army's war
  ?nzArmy dbo:participatedIn ?nzArmyWar .
  FILTER (str(?nzArmy) = ""New_Zealand_Army"")
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
959,35,val,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?manager WHERE {
  ?team dbo:manager ?person .
  ?person rdfs:label ""Takashi Sekizuka""@en .

  ?eiji dbo:almaMater ?university .
  ?eiji rdfs:label ""Eiji Ōtsuka""@en .
  
  ?university rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""japan"") && CONTAINS(LCASE(?label), ""university""))
  FILTER EXISTS { ?university a dbo:University . }
  FILTER EXISTS { ?university a dbo:EducationalOrganization . }

  ?team dbo:member ?eiji .
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
55,13,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonMember WHERE {
  # Find the producer of ""Used to Love Her""
  ?song dbo:musicalArtist ?artist ;
        rdfs:label ""Used to Love Her""@en .
  
  ?producer dbo:producedBy ?song .

  OPTIONAL {
    # Check if the producer is a band
    ?producer a dbo:Band .
    
    # Get members of this band
    ?member dbo:bandMember ?producer .
  }
  
  # Find Metallica's band members
  ?metallicaArtist dbo:musicalArtist <http://dbpedia.org/resource/Metallica> ;
                   dbo:bandMember ?metallicaMember .

  # Check for common member between the producer (if a band) and Metallica
  OPTIONAL {
    FILTER (?member = ?metallicaMember)
    BIND(?member AS ?commonMember)
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
182,13,val,Give me the war of Jagath Dias and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war WHERE {
  # Part 1: War involving Jagath Dias
  { 
    ?person rdfs:label ""Jagath Dias""@en .
    ?person dbo:participatedIn ?war .
  }
  
  UNION
  
  # Part 2: War associated with the author of the 2019 Sri Lanka Easter bombings
  {
    ?event rdfs:label ""2019 Sri Lanka Easter bombings""@en .
    ?event dbo:author ?author .
    ?author dbo:participatedIn ?war .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
435,17,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?articleContent ?timeZoneRegion
WHERE {
  # Query for Article 62, Section IV of the Constitution of Iceland
  ?constitution rdfs:label ""Constitution of Iceland""@en .
  ?constitution dbo:article ?article .
  ?article rdfs:label ""Article 62"" .
  OPTIONAL { 
    ?section rdfs:label ""Section IV""@en ;
             dbo:partOf ?article .
    ?section dbo:text ?articleContent .
  }

  # Query for the time zone region of Bombali Shebora Chiefdom
  ?chiefdom rdfs:label ""Bombali Shebora Chiefdom""@en .
  OPTIONAL {
    ?chiefdom geo:timezone ?timeZone .
    ?timeZone rdfs:label ?timeZoneRegion .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,34,val,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalChild WHERE {
  # Step 1: Identify Nysa
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  
  # Step 2: Find Nysa's parent
  OPTIONAL { ?nysa dbo:parent ?parent . }
  
  # Step 3: Determine child of Nysa's parent who is royalty
  OPTIONAL {
    ?childOfParent dbo:parent ?parent ;
                  a dbo:Monarch .
    
    # Step 4: Identify successor of Antiochus II Theos who is royalty
    ?antiochus2 rdfs:label ""Antiochus II Theos""@en .
    OPTIONAL { ?successor dbo:predecessor ?antiochus2 ;
                        a dbo:Monarch . }
    
    # Step 5: Find child of the successor's child who is royalty
    OPTIONAL {
      ?childOfSuccessor dbo:parent ?successor ;
                       a dbo:Monarch .
      
      ?finalChild dbo:parent ?childOfSuccessor ;
                  a dbo:Monarch .
    }
  }
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
54,39,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfThadoMinsaw ?predecessor WHERE {
  # Find Thado Minsaw of Prome and his parent who is an office holder or royalty
  ?thadoMinsaw dbo:parent ?parent .
  ?parent rdfs:label ""ParentName""@en .  # Replace with actual name if known
  OPTIONAL { ?parent dbo:officeHolder ?office } .
  OPTIONAL { ?parent a dbo:RoyalFamilyMember } .

  # Find Thihapate of Mohnyin and his child who is an office holder or royalty
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .
  ?thihapate dbo:child ?child .
  OPTIONAL { ?child dbo:officeHolder ?office } .
  OPTIONAL { ?child a dbo:RoyalFamilyMember } .

  # Find the predecessor of this child
  ?child dbo:predecessor ?predecessor .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
294,19,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?entity dbo:location ?nashville .
  ?nashville rdfs:label ""Nashville, Tennessee""@en .

  ?medal dbo:awardee ?politician .
  ?medal rdf:type <http://dbpedia.org/ontology/DistinguishedServiceMedal> .
  ?politician rdf:type dbo:Politician .

  ?entity dbo:restingPlace ?keeblesRestingPlace .
  ?keeblesRestingPlace rdfs:label ""Edwin A. Keeble""@en .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,22,val,Give me the reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?alterEgo WHERE {
  ?entity rdfs:label ""Black Hood""@en .
  ?entity dbo:alias ?alias .
  FILTER(CONTAINS(LCASE(STR(?alias)), LCASE(""black hood"")))
  
  OPTIONAL { 
    ?alterEgo rdfs:label ?name .
    ?alterEgo dbo:birthPlace ?place .
    ?place rdfs:label ""Baden-Württemberg""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,7,0,0.0,0
547,24,val,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?alanCunninghamBurial ?actorName ?actorBurial WHERE {
  # Resting place of Alan Cunningham
  ?alanCunningham a dbo:Person ;
                 rdfs:label ""Alan Cunningham""@en .
  OPTIONAL { 
    ?alanCunningham dbo:finalBurial ?alanCunninghamBurial .
  }

  # Resting place of actors from ""Enemy at the Door""
  ?film rdfs:label ""Enemy at the Door""@en ;
        a dbo:Film .
  ?film dbo:starring ?actor .
  ?actor a dbo:Person ;
         rdfs:label ?actorName .
  OPTIONAL {
    ?actor dbo:finalBurial ?actorBurial .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
391,24,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of All About the Andersons.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  # Find Michael Ballhaus's claim to fame (a notable work)
  ?work dbo:director _:b1 .
  _:b1 rdfs:label ""Michael Ballhaus""@en .

  # Find actors in that work
  ?work dbo:starring ?actor .

  # Ensure the actor is also part of ""All About the Andersons""
  ?anotherWork dbo:starring ?actor .
  ?anotherWork rdfs:label ""All About the Andersons""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
547,35,val,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?restingPlace1 ?restingPlace2 WHERE {
  # Part 1: Resting place of the awardee of Knight Grand Cross
  ?person dbo:awardedBy dbpedia:Order_of_St_Michael_and_St_George .
  FILTER EXISTS { ?person dbo:order ""Knight Grand Cross"" . }
  OPTIONAL { ?person dbo:finalRestingPlace ?restingPlace1 . }

  # Part 2: Resting place of the child of James Burton (property developer)
  ?james rdfs:label ""James Burton (property developer)""@en .
  ?child dbo:parent ?james ;
         dbo:finalRestingPlace ?restingPlace2 .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
801,40,val,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?associatedArtist ?songProducer ?shadowAlterEgo WHERE {
  # Chris Taylor's associated musical artist
  ?chrisTaylor a dbo:MusicProducer ;
               rdfs:label ""Chris Taylor (music producer)""@en .
  ?chrisTaylor dbo:associatedMusicalArtist ?artist .
  ?artist rdfs:label ?associatedArtist .

  # Producer of Westside Story song
  ?song rdfs:label ""Westside Story""@en ;
        dbo:producer ?producer .
  ?producer rdfs:label ?songProducer .

  # Professional in the alter ego of The Shadow
  ?shadowAlterEgo a dbo:Person ;
                  rdfs:label ?alterEgoLabel .
  ?shadowAlterEgo dbo:alias ""The Shadow""@en .
  ?shadowAlterEgo dbo:profession ?profession .
  ?profession rdfs:label ?professionalIdentity .

  FILTER(?associatedArtist != """" && ?songProducer != """" && ?professionalIdentity != """")
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
778,15,val,"Give me the author of Chroot and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author ?entity WHERE {
  # Find the author of Chroot
  ?chroot rdfs:label ""Chroot""@en .
  ?chroot dbo:creator ?author .

  # Find American awardees of the Wolf Prize in Medicine
  ?awardee dbo:award dbr:Wolf_Prize_in_Medicine ;
           dbo:nationality dbr:United_States .

  # Find the entity associated with their award
  ?awardee dbo:award ?award .
  ?award dbo:entity ?entity .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
92,41,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMemberArtist ?associatedArtist WHERE {
  # Find Jim Sheppard's band membership in Nevermore and ensure he is an artist
  ?person rdfs:label ""Jim Sheppard""@en .
  ?person dbo:bandMember ?nevermoreBand .
  ?nevermoreBand rdfs:label ""Nevermore""@en .
  ?person rdf:type ?artistType .
  FILTER EXISTS { ?artistType rdfs:subClassOf* dbp:Artist } .

  # Get the artist associated with Jim Sheppard
  ?person dbo:associatedBand ?bandMemberArtist .
  ?bandMemberArtist rdf:type ?artistType2 .
  FILTER EXISTS { ?artistType2 rdfs:subClassOf* dbp:Artist } .

  # Find Joseph Michael's associated musical artist and ensure he is an artist
  ?josephPerson rdfs:label ""Joseph Michael""@en .
  ?josephPerson dbo:associatedBand ?associatedArtist .
  ?associatedArtist rdf:type ?artistType3 .
  FILTER EXISTS { ?artistType3 rdfs:subClassOf* dbp:Artist } .

}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
959,43,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?member WHERE {
  # Find the politician who led in the 2010 Japanese House of Councillors election and managed Júbilo Iwata in 2013
  ?politician dbo:officeHolder ?election .
  ?election rdfs:label ""2010 Japanese House of Councillors election""@en .
  ?politician dbo:manager ?team .
  ?team rdfs:label ""Júbilo Iwata""@en .
  ?politician dbo:birthPlace ?country .

  # Find a member of the University of Tsukuba
  ?member dbo:almaMater <http://dbpedia.org/resource/University_of_Tsukuba> .
  
  # Ensure the member is native to the politician's country of residence or birth
  ?member dbo:birthPlace ?country .

}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,31,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of Red Tide (band).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?watchtowerAssociatedArtist ?secondLevelArtist ?redTideAssociatedArtist WHERE {
  # Find the associated band of Watchtower
  ?watchtower dbo:associatedBand ?watchtowerAssociatedArtist .
  
  # Find the associated band of the first result
  ?watchtowerAssociatedArtist dbo:associatedBand ?secondLevelArtist .

  # Find the associated band of Red Tide
  ?redTide dbo:associatedBand ?redTideAssociatedArtist .
  
  # Bind Watchtower and Red Tide to their respective resources
  VALUES (?watchtower ?redTide) {
    (dbo:Watchtower dbo:Red_Tide_(band))
  }
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
314,19,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person WHERE {
  # Commander in the Spanish Civil War
  ?person dbo:commanderInWar ?war .
  FILTER(CONTAINS(LCASE(STR(?war)), ""spanish civil war""))

  # Deceased at the headquarter of House of Sombrerete
  OPTIONAL { 
    ?deathEvent dbo:place ?location .
    ?location rdfs:label ""House of Sombrerete""@en .
    ?person dbo:death ?deathEvent .
  }

  # Awardee of 30 (assuming this refers to a specific award or honor)
  OPTIONAL {
    ?award dbo:recipient ?person .
    FILTER(STR(?award) = ""Award_30"") # Placeholder for the actual award identifier
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
294,15,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?entity ?location ?restingPlace WHERE {
  ?entity rdf:type dbo:Politician .
  ?entity dbo:award ?award .
  ?award rdfs:label ""Distinguished Service Medal (U.S. Army)""@en .
  ?entity dbo:deathPlace ?restingPlace .
  ?entity dbo:location ?location .
  ?location rdfs:label ""Nashville, Tennessee""@en .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
294,13,val,"Give me the resting place of Edwin A. Keeble and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?keeblesRestingPlace ?awardee ?awardeesRestingPlace WHERE {
  # Resting place of Edwin A. Keeble
  ?keeblesResource rdf:type dbo:Person ;
                   rdfs:label ""Edwin A. Keeble""@en .
  OPTIONAL { 
    ?keeblesResource dbo:finalRestingPlace ?keeblesRestingPlace .
  }

  # Politician awardee of the Distinguished Service Medal (U.S. Army)
  ?awardee rdf:type dbo:Politician ;
           dbo:award ?medal .
  ?medal rdfs:label ""Distinguished Service Medal (United States Army)""@en .

  OPTIONAL {
    ?awardee dbo:finalRestingPlace ?awardeesRestingPlace .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,28,val,Give me the child of Archduke Joseph August of Austria and parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?archduke rdfs:label ""Archduke Joseph August of Austria""@en .
  ?archduke dbo:child ?child .

  OPTIONAL { 
    ?ilona rdfs:label ""Archduchess Ilona of Austria""@en .
    ?ilona dbo:parent ?child .
  }

  OPTIONAL {
    ?budaPerson dbo:birthPlace ?place .
    ?place rdfs:label ""Budapest""@en .
    ?budaPerson dbo:parent ?child .
  }
  
  FILTER (BOUND(?ilona) && BOUND(?budaPerson))
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
767,40,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?settlement WHERE {
  # Find Dustin Lynch's birthplace or residence
  ?dustinLynch dbo:birthPlace ?birthPlace .
  OPTIONAL { ?dustinLynch dbo:residence ?residence . }
  
  # Find Carl L. Nippert's alma mater and its location
  ?nippert dbo:almaMater ?almaMater .
  ?almaMater dbo:location ?almaMaterLocation .

  # Determine the settlement in the administration related to both
  OPTIONAL { ?birthPlace dbo:locatedIn ?settlement . }
  OPTIONAL { ?residence dbo:locatedIn ?settlement . }
  OPTIONAL { ?almaMaterLocation dbo:locatedIn ?settlement . }

  FILTER(?settlement != null)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
179,12,val,Give me the parent of the child of Bhumibol Adulyadej and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?king rdfs:label ""Bhumibol Adulyadej""@en .
  ?queen rdfs:label ""Sirikit of Thailand""@en ;
         foaf:name ""Mom Rajawongse Sirikit Kitiyakara"" .
  
  ?child dbo:spouseOrPartner ?king ;
         dbo:parent ?parent .

  FILTER (?parent = ?queen)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
488,34,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administrationPeriod ?birthPlace WHERE {
  # Find Emperor Go-Yōzei's administration period
  ?emperor rdfs:label ""Emperor Go-Yōzei""@en .
  ?emperor dbo:reign ?administrationPeriod .

  # Identify the war as a military conflict, event, and societal event
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:Event ;
       dbo:societalEvent true ;
       dbo:commander ?saitoHajime .

  # Find Saitō Hajime's birthplace
  ?saitoHajime rdfs:label ""Saitō Hajime""@en .
  ?saitoHajime dbo:birthPlace ?birthPlace .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
488,30,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlaceTokugawaIeyasu ?administrationHidetada ?birthPlaceEnomotoTakeaki WHERE {
  # Death place of Tokugawa Ieyasu
  ?tokugawaIeyasu rdfs:label ""Tokugawa Ieyasu""@en .
  ?tokugawaIeyasu dbo:deathPlace ?deathPlaceTokugawaIeyasu .

  # Administration of Tokugawa Hidetada (Father of Emperor Go-Mizunoo)
  ?hidetada rdfs:label ""Tokugawa Hidetada""@en .
  ?hidetada dbo:administration ?administrationHidetada .

  # Birth place of Enomoto Takeaki
  ?enomotoTakeaki rdfs:label ""Enomoto Takeaki""@en .
  ?enomotoTakeaki dbo:birthPlace ?birthPlaceEnomotoTakeaki .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
184,39,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?finalParent WHERE {
  # Step 1: Find Archduchess Margaret of Austria (born 1925)
  ?margaret rdfs:label ""Margaret, Archduchess of Austria""@en .
  
  # Step 2: Identify her parent
  ?parent1 dbo:child ?margaret .

  # Step 3: Find a child of her parent (could be Margaret herself or another sibling)
  OPTIONAL { ?sibling dbo:parent ?parent1 . }

  # Step 4: Identify the parent of that child
  ?finalParent dbo:parent ?sibling .

  # Step 5: Find Archduke Joseph August of Austria and one of his children
  ?joseph rdfs:label ""Joseph August, Archduke of Austria""@en .
  ?child2 dbo:parent ?joseph .

  # Step 6: Determine the parent of both identified individuals (common ancestor)
  FILTER (?finalParent = ?parent1) 
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,43,val,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person dbo:birthName ""Georgeanne Marie Rice""@en .
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ""Ted McGinley""@en .
  
  OPTIONAL { 
    ?unnatural dbo:actor ?actor .
    ?actor rdf:type dbo:Actor .
    ?actor dbo:profession ?profession .
    
    ?person dbo:profession ?sameProfession .
    FILTER(?sameProfession = ?profession)
  }
}
```",5,5,6,3,3,3,3,71,1,0,0,1.0,1.0,1.0
488,32,val,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlaceOfCommander ?deathPlaceOfFather WHERE {
  # Part 1: Birth place of the commander in Boshin War
  ?commander rdfs:label ""Saigō Takamori""@en .
  ?commander dbo:birthPlace ?birthPlaceOfCommander .

  # Part 2: Death place of Yūki Hideyasu's father, who is a politician
  ?yuki foaf:name ""Yūki Hideyasu""@ja ;
       dbo:parent ?father .
  ?father rdfs:label ?fatherLabel ;
          rdf:type dbo:Politician ;
          dbo:deathPlace ?deathPlaceOfFather .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
617,14,val,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?greatGrandparent WHERE {
  ?richeza rdfs:label ""Richeza of Poland""@en .
  
  # Find the reference that is royalty
  ?reference dbo:spouse|dbo:childOf ?richeza ;
             rdf:type dbo:Monarch .

  # Identify the father of this reference
  ?father dbo:parent ?reference ;
          rdf:type dbo:Monarch .

  # Determine the parent (grandparent) of this father
  ?greatGrandparent dbo:parent ?father .
}
```",3,5,4,3,1,3,2,20,0,0,4,0,0.0,0
435,16,val,Give me the work of the author of Iceland and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?author ?work WHERE {
  ?book rdfs:label ""Iceland""@en .
  ?book dbo:author ?author .
  ?author dbo:works ?work .

  OPTIONAL {
    ?territory dbo:administrativeCapital <http://dbpedia.org/resource/Reykjavík> .
    FILTER(?territory != ?place)
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
182,19,val,Give me the war of Jagath Dias and entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?individual ?war WHERE {
  # Part 1: Jagath Dias and his involvement in a war
  { 
    ?individual rdfs:label ""Jagath Dias""@en .
    OPTIONAL { ?individual dbo:wikiPageWikiLink ?war . }
  }

  UNION

  # Part 2: Author of the 2019 Sri Lanka Easter bombings and their involvement in a war
  {
    ?event rdfs:label ""2019 Sri Lanka Easter bombings""@en .
    ?event dbo:perpetrator ?author .
    OPTIONAL { ?author dbo:wikiPageWikiLink ?war . }
  }

}
```",4,4,5,2,3,2,3,28,1,37,0,0.02631578947368421,1.0,0.05128205128205127
404,25,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfErnestAugustus ?childOfFatherOfDuke WHERE {
  # Find the parent of Prince Ernest Augustus of Hanover (born 1914)
  ?person rdfs:label ""Prince Ernest Augustus of Hanover""@en .
  ?person dbo:birthYear ""1914""^^xsd:gYear .
  ?person dbo:parent ?parentOfErnestAugustus .

  # Find the father of Ernest Augustus, Duke of Brunswick
  ?duke rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?duke dbo:father ?fatherOfDuke .

  # Find a child of the father of Ernest Augustus, Duke of Brunswick
  ?child dbo:parent ?fatherOfDuke .
  BIND(?child AS ?childOfFatherOfDuke)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,19,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?francoMilitaryForce ?civilWarMilitaryForce WHERE {
  # Find Francisco Franco's military force
  ?franco dbo:commander ?militaryRole .
  ?militaryRole dbo:militaryUnit ?francoMilitaryForce .

  # Identify the Spanish Civil War and its military forces
  ?civilWar rdfs:label ""Spanish Civil War""@en .
  ?civilWar dbo:participatedIn ?conflictEvent .
  ?conflictEvent dbo:participant ?civilWarMilitaryForce .

  # Ensure that the military force of Francisco Franco is related to the Spanish Civil War
  FILTER(?francoMilitaryForce = ?civilWarMilitaryForce)
}
```",3,6,4,2,2,3,3,71,0,0,514,0,0.0,0
10,19,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?colton rdfs:label ""Matt Colton""@en .
  ?colton dbo:birthPlace ?birthPlace .

  ?person dbo:birthPlace ?birthPlace .
  ?person dbo:bandMember ?vibertBand .
  ?vibertBand dbo:member ?vibert .
  ?vibert rdfs:label ""Luke Vibert""@en .

  ?person dbo:associatedMusicalArtist ?colton .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,20,val,Give me the alma mater of the administration of George K. Nash and entity in Baden-Württemberg.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  { 
    ?person rdfs:label ""George K. Nash""@en .
    ?person dbo:almaMater ?almaMater .
  }
  UNION
  {
    ?entity dbp:state ""Baden-Württemberg"" .
    BIND(?entity AS ?almaMater)
  }
}
```",3,3,4,2,2,3,3,71,0,1,1,0.0,0.0,0
783,13,val,Give me the associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist WHERE {
  ?person rdfs:label ""Samuel Ofori Amponsah""@en .
  ?person dbo:bandMember ?band .
  OPTIONAL { 
    ?band dbo:associatedBand ?artist .
  }
}
```",3,3,4,3,1,3,2,20,0,0,35,0,0.0,0
54,21,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Find the predecessor of Ameitta Thiri Maha Dhamma Dewi
  ?ameittaThiriMahaDhammaDewi dbo:title ""Ameitta Thiri Maha Dhamma Dewi""@en ;
                               dbo:predecessor ?predecessor .

  # Find Soe Min Wimala Dewi and her father
  ?soeMinWimalaDewi dbo:title ""Soe Min Wimala Dewi""@en .
  ?soeMinWimalaDewi dbo:father ?father .

  # The predecessor should be a child of the father of Soe Min Wimala Dewi
  ?predecessor dbo:childOf ?father .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
184,36,val,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfGéza ?grandParentOfMargaret WHERE {
  # Part 1: Parent of Géza von Habsburg
  ?géza rdfs:label ""Géza von Habsburg""@en .
  ?géza dbo:parent ?parentOfGéza .

  # Part 2: Parent of the child of the parent of Archduchess Margaret of Austria (born 1925)
  ?margaret rdfs:label ""Archduchess Margaret of Austria (1925)""@en .
  ?margaret dbo:birthDate ?date .
  FILTER(YEAR(?date) = 1925)

  ?margaret dbo:parent ?parentOfMargaret .
  ?child dbo:parent ?parentOfMargaret .
  ?grandParentOfMargaret dbo:parent ?child .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
547,31,val,Give me the resting place of Simon Cadell and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?simonRestingPlace ?grandchildRestingPlace WHERE {
  # Resting place of Simon Cadell
  ?simon a dbo:Person ;
         rdfs:label ""Simon Cadell""@en .
  OPTIONAL { 
    ?simon dbo:finalBurial ?simonRestingPlace .
  }

  # Resting place of the child of the child of William Haliburton
  ?william a dbo:Person ;
           rdfs:label ""William Haliburton""@en .
  
  OPTIONAL {
    ?child1 dbo:childOf ?william .
    ?grandchild dbo:childOf ?child1 .
    
    OPTIONAL { 
      ?grandchild dbo:finalBurial ?grandchildRestingPlace .
    }
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,34,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?settlement WHERE {
  ?song dbo:title ""Where It's At""@en .
  ?song dbo:album dbr:Where_It%27s_At_(Dustin_Lynch_album) .
  ?song dbo:writer ?writer .
  OPTIONAL { 
    ?writer dbo:settlement ?settlement .
  }
}
```",4,5,5,3,2,3,3,71,0,0,8,0,0.0,0
391,29,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  # Find Michael Ballhaus's notable work
  ?work dbo:director ?ballhaus .
  ?ballhaus rdfs:label ""Michael Ballhaus""@en .

  # Identify actors in that work
  ?work dbo:starring ?actor .

  # Filter by native of Compton, California
  ?actor dbo:birthPlace ?place .
  ?place rdfs:label ""Compton, California""@en .

  # Ensure the actor is also in ""All About the Andersons""
  ?anotherWork dbo:title ""All About the Andersons""@en .
  ?anotherWork dbo:starring ?actor .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
801,41,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?associatedArtist WHERE {
  ?work dbo:performer dbr:50_Cent ;
        a dbo:Song .
  
  OPTIONAL { ?work dbo:producer ?producer . }
  OPTIONAL { ?producer rdfs:label ""Chris Taylor""@en ; 
              rdfs:label ""The Shadow""@en . }

  OPTIONAL { ?work dbo:associatedMusicalArtist ?associatedArtist . }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
251,16,val,Give me the location of Battle of Marengo and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?battleLocation ?authorDeathPlace WHERE {
  # Part 1: Location of the Battle of Marengo
  ?battle rdfs:label ""Battle of Marengo""@en .
  ?battle dbo:location ?battleLocation .

  # Part 2: Death place of the author of The Twelve Abbots of Challant
  ?work rdfs:label ""The Twelve Abbots of Challant""@en .
  ?work dbo:author ?author .
  ?author dbo:deathPlace ?authorDeathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
994,26,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtist WHERE {
  ?fredrik rdfs:label ""Fredrik Thordendal""@en .
  ?band rdf:type dbo:Band ;
        dbo:member ?fredrik ;
        rdf:type foaf:Group ;
        rdf:type dbo:Organization .

  ?otherMember dbo:member ?band ;
               dbo:associatedMusicalArtist ?secondBand .

  ?secondBand rdf:type dbo:Band ;
              rdf:type foaf:Group ;
              rdf:type dbo:Organization .
  
  ?secondBand dbo:associatedMusicalArtist ?associatedArtist .
}
```",3,7,4,3,1,3,3,71,0,0,33,0,0.0,0
427,42,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?andreottiParty ?prodiParty ?prodiBirthPlace WHERE {
  ?andreotti rdfs:label ""Giulio Andreotti""@en .
  ?andreotti dbo:party ?andreottiParty .

  ?prodi rdfs:label ""Romano Prodi""@en .
  ?prodi dbo:birthPlace ?prodiBirthPlace .
  ?prodi dbo:party ?prodiParty .

  OPTIONAL {
    ?italianPeopleParty rdfs:label ""Italian People's Party (1994)""@en .
  }
}
```",5,7,6,2,3,3,3,71,1,10,0,0.09090909090909091,1.0,0.16666666666666669
303,16,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel ?partyLabel WHERE {
  VALUES ?personLabel { ""Arnulfo Arias Madrid""@en ""Guillermo Endara""@en }
  
  ?person rdfs:label ?personLabel .
  ?person dbo:party ?party .
  ?party rdfs:label ?partyLabel .

  FILTER (lang(?personLabel) = 'en')
}
```",3,4,4,2,2,2,3,28,0,3,1,0.0,0.0,0
328,18,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:headOfState dbr:People's_Commissariat_of_Defense_of_the_Soviet_Union .
  ?person dbo:award dbr:Order_of_Suvorov .
  ?person dbo:militaryCommander dbr:Eastern_Front_(World_War_II) .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
421,19,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?bandMember WHERE {
  ?person rdfs:label ""Eminem""@en .
  ?person dbo:award ?award .
  OPTIONAL { 
    ?collaboration dbo:memberOfBand ?bandMember .
    ?collaboration dbo:artist ?person .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
626,15,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander WHERE {
  ?battle rdfs:label ""Battle of Paris (1814)""@en .
  ?battle dbo:commander ?commander .

  OPTIONAL { 
    ?awards dbo:recipient ?commander ;
            a dbo:Award ;
            rdfs:label ?awardLabel .
    FILTER(CONTAINS(LCASE(?awardLabel), ""order of st. andrew""))
  }

  OPTIONAL {
    ?conflict dbo:commander ?commander .
  }
}
```",4,5,5,3,2,3,2,20,0,11,9,0.0,0.0,0
617,44,val,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?antiochusIII rdfs:label ""Antiochus III the Great""@en .
  ?child dbo:parent ?antiochusIII ;
         dbo:parent ?anotherParent .
  ?child dbo:spouse ?spouse .
}
```",5,5,6,2,3,3,3,71,2,3,0,0.4,1.0,0.5714285714285715
959,31,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?person dbo:birthYear ""1958"" .
  ?person dbo:almaMater ?almaMater .
  ?almaMater rdf:type dbo:EducationalOrganization .
  ?almaMater rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""japan""))
}
```",4,8,5,3,2,3,3,71,0,0,167,0,0.0,0
314,18,val,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?awardee WHERE {
  ?person rdfs:label ""Lisa Gavrić""@en .
  ?award dbo:recipient ?awardee ;
         dbo:ageReceived ?age ;
         dbo:event ?event .
  FILTER (?age = 30)
  
  ?awardee dbo:profession ?profession .
  ?profession rdfs:label ?professionLabel .
  FILTER regex(?professionLabel, ""commander"", ""i"")

  ?event rdf:type/rdfs:subClassOf* dbo:Event ;
         rdf:type/rdfs:subClassOf* dbo:SocietalEvent .
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
488,43,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?deathPlace ?birthPlace ?administration WHERE {
  # Part 1: Death place of Matsudaira Tadamasa's grandfather who is a politician
  {
    ?mat1 dbo:father ?mat2 .
    ?mat2 dbo:officeHolder ?office .
    ?mat2 dbo:father ?mat3 .
    ?mat3 rdf:type dbo:Politician .
    ?mat3 dbo:deathPlace ?deathPlace .
    FILTER (str(?mat1) = ""Matsudaira Tadamasa"")
  }
  
  # Part 2: Birth place of Enomoto Takeaki
  {
    ?enomoto rdfs:label ""Enomoto Takeaki""@en .
    ?enomoto dbo:birthPlace ?birthPlace .
  }

  # Part 3: Administration of Emperor Go-Yōzei
  {
    ?emperor rdfs:label ""Emperor Go-Yōzei""@ja .
    ?emperor dbo:reign ?administration .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
197,7,val,Give me the birthplace of the member of FC Politehnica Timișoara and birthplace of George Lusztig.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthPlace 
WHERE {
  # Find members of FC Politehnica Timișoara and their birthplaces
  ?member dbo:team <http://dbpedia.org/resource/FK_Politehnica_Timi%C8%99oara> .
  OPTIONAL { ?member dbo:birthPlace ?birthPlace . }
  
  # Find George Lusztig's birthplace
  ?lusztig rdfs:label ""George Lusztig""@en .
  OPTIONAL { ?lusztig dbo:birthPlace ?birthPlaceLusztig . }

  # Bind the results to variables for clarity in output
  BIND(?member AS ?person) 
  UNION
  {
    BIND(?lusztig AS ?person)
    BIND(?birthPlaceLusztig AS ?birthPlace)
  }
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
177,7,val,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in the residence of Alexander Gamelin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?headquarters ?residence WHERE {
  # Query for the headquarters of Ministry of Culture, Sports and Tourism
  ?ministry rdfs:label ""Ministry of Culture, Sports and Tourism""@en .
  ?ministry dbo:headquarters ?headquarters .

  # Query for the residence of Alexander Gamelin
  ?person rdfs:label ""Alexander Gamelin""@en .
  ?person dbo:residence ?residence .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
701,4,train,Give me the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?childLabel WHERE {
  ?person rdfs:label ""Nefertari""@en .
  ?person dbo:child ?child .
  ?child rdfs:label ?childLabel .
}
```",1,1,2,1,1,3,3,71,0,6,6,0.0,0.0,0
959,2,train,Give me the manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?team rdfs:label ""Júbilo Iwata""@en .
  ?team dbo:coach ?manager .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
485,5,train,"Give me the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Joseph Whitaker (naturalist)""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Region .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
339,6,train,Give me the father of Princess Elizabeth of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?princess rdfs:label ""Princess Elizabeth of Greece and Denmark""@en .
  ?princess dbo:father ?father .

  ?georgeI rdfs:label ""George I of Greece""@en .
  ?child rdfs:label ?childLabel .
  ?georgeI dbo:child ?child .
  
  FILTER(?father = ?child)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
528,13,train,Give me the war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
  ?battle dbo:commander ?commander .
  ?commander dbo:participatedInWar ?war .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
994,0,train,Give me the associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?band rdfs:label ""Slayer""@en .
  ?band dbo:associatedBand ?associatedArtist .
}
```",1,1,2,1,1,3,3,71,0,3,5,0.0,0.0,0
48,10,train,"Give me the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?show dbo:actor ?staceyDash .
  ?staceyDash rdfs:label ""Stacey Dash""@en .

  ?show dbo:actor ?actor .
  FILTER(?actor != ?staceyDash)

  OPTIONAL { ?actor dbo:musicalArtist ?musicalArtist . }
  FILTER EXISTS { ?actor dbo:musicalArtist ?musicalArtist }
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
44,3,train,"Give me the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?queensrÿche rdfs:label ""Queensrÿche""@en .
  ?queensrÿche dbo:associatedBand ?associatedArtist .
  ?associatedArtist a dbo:Band ;
                   a dbo:Organization .
}
```",1,3,2,1,1,2,2,9,0,0,3,0,0.0,0
492,0,train,Give me the person decedent at French Algeria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person ?deathPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""French Algeria""@en .
}
```",1,1,2,1,1,3,3,71,30,0,0,1.0,1.0,1.0
747,1,train,Give me the band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person rdfs:label ""Amba Shepherd""@en .
  ?person dbo:band ?band .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
645,10,train,Give me the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?sibling WHERE {
  ?adela rdfs:label ""Adela Pankhurst""@en .
  ?parent dbo:child ?adela .
  ?parent dbo:child ?sibling .
  FILTER(?sibling != ?adela)
}
```",2,2,3,2,1,3,2,20,2,0,1,1.0,0.6666666666666666,0.8
617,14,train,Give me the parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  ?antiochus rdfs:label ""Antiochus (son of Antiochus III the Great)""@en .
  ?child dbo:child ?antiochus .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,4,2,0.0,0.0,0
184,13,train,Give me the child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?grandchild WHERE {
  ?archduke rdfs:label ""Archduke Joseph Karl of Austria""@en .
  ?archduke dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
177,3,train,"Give me the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?office WHERE {
  ?person rdfs:label ""Joo Don-sik""@en .
  ?person dbo:office ?office .
  ?office rdf:type dbo:Organization .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
838,0,train,Give me the band of Raša Đelmaš.,SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person rdfs:label ""Raša Đelmaš""@en .
  ?person dbo:band ?band .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
161,16,train,"Give me the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?force WHERE {
  ?prieto rdfs:label ""Indalecio Prieto""@en .
  ?prieto dbo:predecessor ?predecessor .
  ?predecessor dbo:associatedWith ?force .
  ?force a ?type1, ?type2 .
  FILTER(?type1 = dbo:SocietalEvent && ?type2 = dbo:MilitaryConflict)
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
487,9,train,Give me the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?position WHERE {
  ?person dbo:birthDate ""1955-01-26""^^xsd:date .
  ?person dbo:positionHeld ?position .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
488,2,train,Give me the administration of Emperor Go-Yōzei.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?positionHeld WHERE {
  ?emperor rdfs:label ""Go-Yōzei""@en .
  ?emperor dbo:positionHeld ?positionHeld .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
487,2,train,Give me the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ?name .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = ""1955"" && MONTH(?date) = ""01"" && DAY(?date) = ""26"")
}
```",1,1,2,1,1,3,2,20,0,0,23,0,0.0,0
820,4,train,Who is the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?actor WHERE {
  ?actor dbo:occupation dbc:Actors .
}
```",1,1,2,1,1,3,2,20,0,0,21580,0,0.0,0
392,9,train,Give me the province of Schio and region of Central European Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?province WHERE {
  ?schio rdfs:label ""Schio""@en .
  ?schio dbo:locatedIn ?province .
}

UNION

SELECT ?region WHERE {
  ?cet rdfs:label ""Central European Time Zone""@en .
  ?cet dbo:countryRegion ?region .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
981,6,train,Give me the entity in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?indonesiaEntity ?birthPlace WHERE {
  ?person rdfs:label ""Novia Indriani Mamuaja""@en .
  
  OPTIONAL { 
    ?person dbo:country ?indonesiaEntity .
    FILTER (CONTAINS(LCASE(STR(?indonesiaEntity)), ""indonesia""))
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
701,3,train,Give me the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?spouse WHERE {
  ?person rdfs:label ""Amun-her-khepeshef""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
747,6,train,Who is the writer of Apollo (Hardwell song)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?composer WHERE {
  ?song rdfs:label ""Apollo""@en .
  ?song dbo:artist ?hardwell .
  ?hardwell rdfs:label ""Hardwell""@en .
  ?song dbo:composer ?composer .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
378,17,train,"Who is the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?war ?commander WHERE {
  ?person rdfs:label ""Thomas Trigge""@en .
  ?war dbo:commander ?person ;
       rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:SocietalEvent ;
       rdf:type dbo:Event .
  OPTIONAL { ?war dbo:commander ?commander . }
}
```",2,5,3,2,1,3,3,71,0,0,169,0,0.0,0
696,7,train,Give me the birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?memberName ?birthPlace WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Dropkick Murphys""@en .
  ?band dbo:bandMember ?member .
  ?member rdfs:label ?memberName .
  OPTIONAL { ?member dbo:birthPlace ?birthPlace . }
}
```",2,2,3,2,1,3,2,20,6,6,0,0.5,1.0,0.6666666666666666
55,8,train,"Give me the band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  ?song rdfs:label ""Used to Love Her""@en .
  ?song dbo:producer ?producer .

  ?producer dbo:bandMember ?bandMember .

  OPTIONAL { 
    ?bandMember a dbo:Band .
  }
  
  FILTER EXISTS { ?bandMember a dbo:Band }
}
```",2,3,3,2,1,2,3,28,0,0,55,0,0.0,0
318,2,train,Give me the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?foundingYear WHERE {
  ?entity rdfs:label ""Eel Pie Publishing""@en .
  ?entity dbo:foundingDate ?foundingYear .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
197,4,train,Give me the birthplace of Dumitru Nadu and birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personLabel ?birthPlaceLabel WHERE {
  VALUES ?personLabel { ""Dumitru Nadu""@en ""George Lusztig""@en }
  
  ?person rdfs:label ?personLabel .
  ?person dbo:birthPlace ?birthPlace .

  SERVICE <http://dbpedia.org/sparql> {
    ?birthPlace rdfs:label ?birthPlaceLabel .
    FILTER(LANG(?birthPlaceLabel) = ""en"")
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
429,6,train,"Give me the country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?country WHERE {
  ?expedition rdfs:label ""Camden Expedition""@en .
  ?expedition dbo:organization ?org .
  ?org rdf:type dbo:MilitaryUnit .
  OPTIONAL { ?org dbo:country ?country . }
}
```",2,3,3,2,1,2,2,9,0,0,7,0,0.0,0
994,15,train,Give me the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:Watchtower dbo:artist ?artist .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
404,14,train,"Give me the child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?person rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?person dbo:father ?father .
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
328,2,train,Give me the leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?leader WHERE {
  ?organization rdfs:label ""People's Commissariat of Defense (Soviet Union)""@en .
  ?organization dbo:head ?leader .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,1,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?battle rdfs:label ""Battle of Leipzig""@en .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,21,0,0,1.0,1.0,1.0
778,9,train,"Give me the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?person ?award WHERE {
  ?person dbo:award ?award .
  ?award rdfs:label ""Wolf Prize in Medicine""@en .
  ?person dbo:nationality ?nationality .
  FILTER(CONTAINS(LCASE(?nationality), ""american""))
}
```",2,3,3,2,1,3,2,20,0,0,9,0,0.0,0
767,12,train,Give me the alma mater of Carl L. Nippert and reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?university WHERE {
  ?person rdfs:label ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?university .
}
```",2,2,3,1,2,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
626,8,train,Give me the awardee of the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?award ?awardee WHERE {
  ?person rdfs:label ""Aleksey Petrovich Yermolov""@en .
  ?person dbo:award ?award .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,230,0,0.0,0
378,13,train,Give me the war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war WHERE {
  ?person rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  ?person dbo:commander ?battle .
  ?battle dbo:participatedIn ?war .
  FILTER NOT EXISTS { 
    ?peninsularWar rdfs:label ""Peninsular War""@en .
    ?peninsularWar dbo:participatedIn ?battle .
  }
}
```",2,2,3,2,1,3,3,71,0,0,118,0,0.0,0
547,5,train,Give me the show with Emily Richard.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?show WHERE {
  ?actor rdfs:label ""Emily Richard""@en .
  ?show dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
712,9,train,"Give me the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country WHERE {
  ?uprising rdfs:label ""Vyoshenskaya Uprising""@en .
  
  OPTIONAL { 
    ?uprising dbo:organization ?org .
    ?org a dbo:MilitaryUnit ;
         dbo:country ?country .
  }
  
  OPTIONAL { 
    ?uprising dbo:militaryUnit ?unit .
    ?unit dbo:country ?country .
  }
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
534,1,train,Give me the headquarter of Royal Dublin Society.,SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?headquarters WHERE {
  ?society rdfs:label ""Royal Dublin Society""@en .
  ?society dbo:headquarters ?headquarters .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
488,14,train,Give me the administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father ?administration WHERE {
  ?emperor rdfs:label ""Emperor Go-Mizunoo""@en .
  ?emperor dbo:father ?father .

  ?administration dbo:reignStart ?start .
  ?administration dbo:reignEnd ?end .

  ?father dbo:dateOfBirth ?birthDate .
  ?father dbo:dateOfDeath ?deathDate .

  FILTER (?start <= ?birthDate && ?end >= ?deathDate)
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
356,7,train,Give me the player in the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?player WHERE {
  ?team rdfs:label ""Sacramento Republic FC""@en .
  ?team dbo:sportTeamLeague ?league .
  ?newLeague dbo:successorOf ?league ;
             dbo:memberTeam ?succeedingTeam .
  ?succeedingTeam dbo:player ?player .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
356,9,train,"Give me the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorSeason WHERE {
  # Identify the 2015 Sacramento Republic FC season
  ?season rdfs:label ""2015 Sacramento Republic FC season""@en .
  
  # Find its predecessor
  ?season dbo:predecessor ?predecessor .

  # Find the successor of this predecessor
  ?predecessor dbo:successor ?successorSeason .

  # Ensure both are sports team seasons and soccer club seasons
  ?successorSeason a dbo:SoccerClubSeason ;
                   a dbo:SportsTeamSeason .
}
```",2,4,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
712,5,train,Who is the awardee of Hero of the Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person dbo:award dbr:Hero_of_the_Soviet_Union .
}
```",1,1,2,1,1,3,2,20,819,68,18,0.923337091319053,0.978494623655914,0.9501160092807426
30,5,train,Give me the native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?native WHERE {
  ?silviaCohen rdfs:label ""Silvia Cohen""@en .
  ?silviaCohen dbo:birthPlace ?birthplace .

  OPTIONAL { 
    ?birthplace dbo:nativeOf ?native .
  }
}
```",2,2,3,2,1,2,2,9,0,0,11488,0,0.0,0
251,1,train,Give me the administration of Forza Italia (2013).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?leader WHERE {
  ?party rdfs:label ""Forza Italia""@en .
  ?party dbo:leader ?leader .
  FILTER(YEAR(?startDate) <= 2013 && (YEAR(?endDate) >= 2013 || NOT EXISTS { ?party dbo:endDate ?endDate }))
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
179,3,train,Give me the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?person rdfs:label ""Sirikit""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
232,4,train,Give me the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthName ""John Devon Roland Pertwee"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
285,2,train,Who is the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Aristotle Onassis""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
184,5,train,"Give me the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parent WHERE {
  ?person rdfs:label ""Archduke Ladislaus Philipp of Austria""@en .
  OPTIONAL { ?person dbo:father ?parent . }
  OPTIONAL { ?person dbo:mother ?parent . }
  FILTER EXISTS { 
    ?parent rdf:type ?royaltyType .
    VALUES ?royaltyType {
      dbo:Monarch
      dbo:RoyalFamilyMember
    }
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
778,10,train,"Give me the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?work WHERE {
  ?person rdfs:label ""Bill Joy""@en .
  ?person dbo:worksFor ?company .
  ?person dbo:software ?work .
  FILTER (strstarts(str(?work), str(""Software"")))
}
```",2,3,3,2,1,3,2,20,0,0,5,0,0.0,0
16,0,train,Give me the spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?spouse WHERE {
  ?person rdfs:label ""Ted McGinley""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
378,2,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?knownFor WHERE {
  ?person rdfs:label ""Louis des Balbes de Berton de Crillon""@en .
  ?person dbo:knownFor ?knownFor .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
498,2,train,"Give me the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?solace rdfs:label ""Solace of Requiem""@en .
  ?solace dbo:band ?band .
  ?band rdf:type dbo:Band ;
        rdf:type dbo:Organization .
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
391,9,train,"Give me the actor of The Departed and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  ?movie rdfs:label ""The Departed""@en .
  ?movie dbo:starring ?actor .
  ?actor dbo:nativePlace ?place .
  FILTER (str(?place) = ""Compton, California"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,3,train,Give me the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?linkedResource WHERE {
  ?resource rdfs:label ""Watchtower""@en .
  ?resource dbo:wikiPageWikiLink ?linkedResource .
}
```",1,1,2,1,1,3,3,71,0,84,3,0.0,0.0,0
712,3,train,Give me the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?country WHERE {
  ?entity rdfs:label ""Armed Forces of South Russia""@en .
  ?entity dbo:country ?country .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
666,1,train,Give me the figure known as The Three Lions.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?team WHERE {
  ?team rdfs:label ""The Three Lions""@en .
  ?team a dbo:NationalSoccerTeam ;
        dbo:country dbr:England .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
64,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?country WHERE {
  ?timeZone rdfs:label ""Central European Time""@en .
  ?region dbo:timeZone ?timeZone ;
          a dbo:Country .
  ?region rdfs:label ?country .
}
```",1,2,2,1,1,2,2,9,0,94,56,0.0,0.0,0
10,5,train,Give me the birth name of Sharon Kao.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?person rdfs:label ""Sharon Kao""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
404,0,train,Give me the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?spouse WHERE {
  ?person rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
801,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:profession ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
485,10,train,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?person dbo:award dbr:Eric_Gregory_Award .
  ?person rdf:type dbo:Writer ;
          rdf:type dbo:Poet .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,4,3,2,1,2,3,28,7,1,0,0.875,1.0,0.9333333333333333
54,12,train,Give me the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent ?predecessor WHERE {
  # Query for the parent of Thado Minsaw of Prome
  ?person rdfs:label ""Thado Minsaw""@en .
  ?person dbo:child ?child .
  ?child rdfs:label ""Thado Minsaw""@en .
  ?parent dbo:child ?person .

  UNION

  # Query for the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?successor rdfs:label ""Ameitta Thiri Maha Dhamma Dewi""@en .
  ?predecessor dbo:predecessor ?successor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
666,9,train,"Give me the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?team dbo:coach dbr:Leonid_Slutsky .
  ?team a dbo:SoccerClub ;
        dbo:sport dbr:Soccer ;
        dbo:season ?season .
  ?team dbo:sportsManager ?manager .
}
```",2,5,3,2,1,3,2,20,0,0,5,0,0.0,0
435,5,train,Give me the author of Iceland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ?author .
  FILTER (lang(?author) = 'en') .
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Iceland""@en .
}
```",1,1,2,1,1,2,3,28,0,726,1,0.0,0.0,0
827,4,train,"Who is the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouseName WHERE {
  ?princess rdfs:label ""Princess Pauline of Saxe-Weimar-Eisenach""@en .
  ?princess dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
  OPTIONAL { 
    ?spouse rdf:type ?royaltyType .
    FILTER (
      ?royaltyType IN (dbo:Monarch, dbo:RoyalFamilyMember)
    )
  }
}
```",1,2,2,1,1,3,2,20,0,1,1,0.0,0.0,0
54,16,train,Give me the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?thadoMinsaw rdfs:label ""Thado Minsaw""@en .
  ?thadoMinsaw dbo:parent ?parent .
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,1,3,0.0,0.0,0
659,0,train,Give me the commander in German campaign of 1813.,SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?campaign rdfs:label ""German campaign of 1813""@en .
  ?campaign dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,31,0,0,1.0,1.0,1.0
617,7,train,Who is the commander in Battle of Panium?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?battle rdfs:label ""Battle of Panium""@en .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
801,15,train,Give me the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?alterEgo WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgo ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
915,1,train,Give me the father of Lizzie Spaulding.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?father WHERE {
  ?person rdfs:label ""Lizzie Spaulding""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
783,9,train,Give me the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?person rdfs:label ""Shaggy""@en .
  ?person dbo:birthName ""Samuel Ofori Amponsah"" .
  ?person dbo:bandMember ?band .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
701,1,train,Give me the parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?henuttawy rdfs:label ""Henuttawy""@en .
  ?henuttawy dbo:era dbr:Egyptian_19th_dynasty .
  ?henuttawy dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,10,train,Give me the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?individual WHERE {
  ?thinkhaya rdfs:label ""Thinkhaya of Pagan""@en .
  ?thinkhaya dbo:child ?individual .

  ?ameitta rdfs:label ""Ameitta Thiri Maha Dhamma Dewi of Ava""@en .
  ?ameitta dbo:predecessor ?individual .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
778,5,train,"Give me the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?software WHERE {
  ?person rdfs:label ""Bill Joy""@en .
  ?person dbo:software ?software .
}
```",1,2,2,1,1,3,2,20,0,0,5,0,0.0,0
251,11,train,Give me the death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?work rdfs:label ""The Twelve Abbots of Challant""@en .
  ?work dbo:author ?author .
}

SELECT ?deathPlace WHERE {
  ?author dbo:deathPlace ?deathPlace .
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
314,3,train,Give me the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?headquarters WHERE {
  ?house rdfs:label ""House of Sombrerete""@en .
  ?house dbo:headquarters ?headquarters .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
391,17,train,"Give me the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?resource WHERE {
  ?resource rdf:type dbo:Film .
  ?resource rdf:type dbo:Work .
  ?resource rdf:type dbo:TelevisionShow .
}
```",2,5,3,2,1,3,3,71,1674,3157,0,0.346512109294142,1.0,0.5146810146041507
9,2,train,Give me the figure known as QUB.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?entity rdfs:label ""QUB""@en .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
392,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?country WHERE {
  ?tz rdfs:label ""Central European Time""@en .
  ?country dbo:timeZone ?tz .
}
```",1,2,2,1,1,2,3,28,52,49938,4,0.0010402080416083218,0.9285714285714286,0.002078088158893818
645,6,train,Give me the alma mater of Sylvia Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?almaMater WHERE {
  ?person rdfs:label ""Sylvia Pankhurst""@en .
  ?person dbo:almaMater ?almaMater .
  OPTIONAL { 
    ?almaMater dbo:country ?country .
    FILTER (str(?country) = ""United Kingdom"")
  }
}
```",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
645,4,train,Give me the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parent WHERE {
  ?person rdfs:label ""Adela Pankhurst""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
959,15,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?almaMater WHERE {
  ?person dbo:birthYear ""1958""^^xsd:gYear .
  ?person dbo:almaMater ?almaMater .
  ?almaMater rdf:type dbo:University ;
             dbo:country ?country .
  FILTER (str(?country) = ""Japan"")
}
```",2,6,3,2,1,3,3,71,0,0,3,0,0.0,0
303,7,train,Give me the party of Arnulfo Arias and party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?party WHERE {
  VALUES ?person { 
    dbr:Ari_Noriega 
    dbr:Guillermo_Endara
  }
  
  ?person dbo:partyAffiliation ?party .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
16,10,train,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthName ""Georgeanne Marie Rice""@en .
  ?person dbo:spouse ?ted .
  ?ted rdfs:label ""Ted McGinley""@en .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
251,6,train,Give me the administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration ?location WHERE {
  # Query for the administration of Forza Italia in 2013
  ?party rdfs:label ""Forza Italia""@en .
  OPTIONAL { 
    ?party dbo:leader ?administration .
  }
  
  # Query for the location of Battle of Marengo
  ?battle rdfs:label ""Battle of Marengo""@en .
  ?battle dbp:location ?location .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
838,1,train,Give me the band member of Kerber.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?member WHERE {
  ?band rdfs:label ""Kerber""@en .
  ?band a dbo:Band .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,1,0,7,1.0,0.125,0.2222222222222222
747,5,train,"Give me the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?song WHERE {
  ?artist rdfs:label ""Amba Shepherd""@en .
  ?work dbo:creator ?artist ;
        a dbo:Song .
  ?work rdfs:label ?song .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
339,3,train,Who is the child of Christian IX of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""Christian IX of Denmark""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,4,2,2,0.6666666666666666,0.6666666666666666,0.6666666666666666
303,8,train,"Give me the party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander ?party WHERE {
  ?event dbo:eventType dbc:Military_operations_of_the_United_States_in_Panama .
  ?event dbo:commander ?commander .
  
  OPTIONAL { 
    ?commander dbo:politicalParty ?party .
  }
  
  FILTER EXISTS { ?commander rdf:type dbo:Politician . }

  VALUES ?event {
    dbc:Invasion_of_Panama_by_the_United_States
  }
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
312,0,train,Give me the entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity ?label WHERE {
  ?entity dbo:location ?place .
  ?place rdfs:label ""Province of Bergamo""@en .
  ?entity rdfs:label ?label .
}
```",1,1,2,1,1,2,2,9,0,32,228,0.0,0.0,0
48,0,train,Give me the band of Carl Falk.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person rdfs:label ""Carl Falk""@en .
  ?person dbo:band ?band .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
487,6,train,Give me the country of 2022 Vermont House of Representatives election and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?vermont rdfs:label ""Vermont""@en .
  ?vermont dbo:country ?country .
}
```",2,2,3,1,2,3,2,20,0,1,1,0.0,0.0,0
547,13,train,Give me the resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?deathPlace WHERE {
  ?actor rdfs:label ""Liam Cunningham""@en .
  ?actor dbo:birthName ""Liam Cunningham"" .
  ?actor dbo:deathPlace ?deathPlace .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
184,2,train,Give me the parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parent WHERE {
  ?person rdfs:label ""Ilona, Archduchess of Austria""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
356,5,train,"Give me the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Wolverhampton""@en .
  
  ?person dbo:soccerPlayer ?playerRole .
  ?person dbo:soccerManager ?managerRole .
}
```",1,3,2,1,1,3,2,20,0,0,17,0,0.0,0
959,4,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?almaMater WHERE {
  ?person rdfs:label ""Eiji Ōtsuka""@en .
  ?person dbo:almaMater ?almaMater .
  
  FILTER EXISTS { ?almaMater dbo:country ?country . 
                 ?country rdfs:label ""Japan""@en }
  
  FILTER EXISTS { ?almaMater rdf:type dbo:University }
  
  FILTER EXISTS { ?almaMater rdf:type dbo:Organisation }
}
```",1,5,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
179,1,train,Give me the parent of Ubol Ratana.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parent WHERE {
  ?person rdfs:label ""Ubol Ratana""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
528,16,train,Give me the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?work ?commander WHERE {
  ?work dbo:releaseDate ?date .
  FILTER (STRSTARTS(STR(?date), ""2001-09""))
  OPTIONAL { 
    ?work dbo:character ?character .
    ?character rdfs:label ?characterLabel .
    FILTER(CONTAINS(LCASE(?characterLabel), ""commander"")) .
    ?character dbo:actor ?commander .
  }
}
```",2,2,3,2,1,3,3,71,0,345,2,0.0,0.0,0
177,6,train,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?organisation ?headquarters WHERE {
  ?person rdfs:label ""Joo Don-sik""@en .
  ?association dbo:member ?person ;
               dbo:organization ?organisation .
  OPTIONAL { ?organisation dbo:headquarters ?headquarters }
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
528,7,train,Give me the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?person rdfs:label ""Narciso Campero""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
16,6,train,Give me the profession of Satomi Ishihara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?profession WHERE {
  ?person rdfs:label ""Satomi Ishihara""@en .
  ?person dbo:profession ?profession .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
617,5,train,"Who is the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?successor WHERE {
  ?antiochus rdfs:label ""Antiochus (son of Antiochus III the Great)""@en .
  ?antiochus dbo:successor ?successor .
  ?successor rdf:type dbo:RoyalFamilyMember .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
161,1,train,Give me the military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?conflict rdfs:label ""Spanish Civil War""@en .
  ?conflict dbo:participatingMilitaryForce ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,514,0,0.0,0
404,10,train,"Give me the spouse of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?spouse .

  OPTIONAL { 
    ?ernestAugustus rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .
    ?child dbo:parent ?ernestAugustus .
    FILTER (?spouse = ?child)
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
747,12,train,Give me the band of Shèna and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?band WHERE {
  VALUES ?personLabel { ""Shèna""@en ""Amba Shepherd""@en }
  
  ?person rdfs:label ?personLabel .
  OPTIONAL { ?person dbo:band ?band . }
}
```",2,2,3,1,2,3,3,71,0,2,1,0.0,0.0,0
421,2,train,Give me the person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?currentName WHERE {
  ?person dbo:birthName ""Edin Dervišhalidović"" .
  ?person rdfs:label ?currentName .
  FILTER(LANG(?currentName) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
767,4,train,"Give me the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?administration WHERE {
  ?green rdfs:label ""Green""@en .
  ?green rdf:type dbo:Settlement .
  ?green dbo:administrativeUnit ?administration .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
485,8,train,"Give me the entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country rdfs:label ?label .
  FILTER (lang(?label) = 'en')
  OPTIONAL { 
    ?country dbo:timeZone ?timezone .
    FILTER (?timezone = ""Western European Time""^^xsd:string)
  }
}
```",2,3,3,2,1,2,3,28,96,14139,46267,0.006743940990516333,0.002070616655522723,0.0031684214000462065
488,10,train,Give me the administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?reign ?birthPlace WHERE {
  ?emperor rdfs:label ""Go-Yōzei""@en .
  ?emperor dbo:reign ?reign .

  OPTIONAL {
    ?person rdfs:label ""Enomoto Takeaki""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
16,15,train,Who is the person born as the birth name of Ted McGinley?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?person rdfs:label ""Ted McGinley""@en .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
197,3,train,Who is the awardee of Leroy P. Steele Prize?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  dbr:Leroy_P._Steele_Prize dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,2,9,0,0,21,0,0.0,0
488,13,train,"Give me the death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace WHERE {
  ?yuki rdfs:label ""Yūki Hideyasu""@en .
  ?yuki dbo:father ?father .
  ?father a dbo:Politician .
  ?father dbo:deathPlace ?deathPlace .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
701,9,train,Give me the parent of Meritamen and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?parent WHERE {
  VALUES ?individual { 
    dbpedia:Meritamen_(19th_dynasty) 
    dbpedia:Henuttawy_(wife_of_Ramesses_II)
  }
  ?individual rdfs:label ?person .
  OPTIONAL { ?individual dbo:parent ?parent . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
10,8,train,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?person rdfs:label ""Matt Colton""@en .
  ?person a dbo:Musician ;
          dbo:associatedMusicalArtist ?artist .
  ?artist rdfs:label ?associatedArtist .
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
528,8,train,Give me the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person ?label WHERE {
  ?person dbo:birthName ""Narciso Campero Leyes""@en .
  ?person rdfs:label ?label .
}
```",1,1,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
54,15,train,Give me the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?thinkhaya rdfs:label ""Thinkhaya of Pagan""@en .
  ?thinkhaya dbo:child ?child .
  ?child dbo:father ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
360,0,train,Give me the writer of The Roaring Silence.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?author WHERE {
  ?book rdfs:label ""The Roaring Silence""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,2,3,28,0,0,8,0,0.0,0
404,13,train,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  ?er nesto:child ?child .
  FILTER (str(?er) = ""Ernest Augustus, Duke of Brunswick""^^xsd:string)
  
  OPTIONAL { 
    ?child dbo:royalTitle ?title .
    FILTER EXISTS { ?title rdfs:label ?label . FILTER(langMatches(lang(?label), ""en"")) }
  }

  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
547,6,train,Give me the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actor WHERE {
  ?movie rdfs:label ""Enemy at the Door""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,7,0,1,1.0,0.875,0.9333333333333333
318,4,train,Give me the person born in 1970 and professional in Composer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthYear ""1970""^^xsd:gYear .
  ?person dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""composer""))
}
```",2,2,3,1,2,2,2,9,7,1,0,0.875,1.0,0.9333333333333333
626,6,train,Give me the commander in Battle of Leipzig and awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?battle dbp:name ""Battle of Leipzig""@en .
  ?battle dbo:commander ?commander .

  ?commander dbo:order [
    a dbo:OrderOfStAndrew ;
    rdfs:label ?awardLabel .
  ]
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,13,train,Give me the alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?almaMater WHERE {
  ?person rdfs:label ""George K. Nash""@en .
  ?person dbo:almaMater ?almaMater .
}
```",2,2,3,2,1,3,3,71,0,1,6,0.0,0.0,0
9,13,train,Give me the alma mater of the awardee of Royal Medal.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?awardeeLabel ?almaMaterLabel WHERE {
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Royal Medal""@en .
  OPTIONAL { ?awardee dbo:almaMater ?almaMater . }
  SERVICE <http://dbpedia.org/sparql> {
    ?awardee rdfs:label ?awardeeLabel .
    ?almaMater rdfs:label ?almaMaterLabel .
  }
}
```",2,2,3,2,1,3,3,71,0,0,31,0,0.0,0
182,1,train,Give me the war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?person rdfs:label ""Jagath Dias""@en .
  ?person dbo:participatedIn ?war .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
801,13,train,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?work dbo:musicalWork ?song .
  ?song rdfs:label ?labelSong .
  ?work rdfs:label ?labelWork .
  ?work dbo:producer ?producer .
  FILTER (CONTAINS(LCASE(?labelSong), ""50 cent"") || CONTAINS(LCASE(?labelWork), ""50 cent""))
}
```",2,5,3,2,1,3,3,71,0,0,38,0,0.0,0
534,4,train,"Give me the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?location WHERE {
  ?event rdfs:label ""2012 Pro12 Grand Final""@en .
  ?event dbo:venue ?location .
  ?location rdf:type dbo:ArchitecturalStructure .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,3,train,"Give me the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?person rdfs:label ""James Wilkes Maurice""@en .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  ?residence rdfs:label ?country .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
747,3,train,"Who is the person decedent, that is an athlete and a soccer player, at Zolotonosha?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person rdf:type dbo:Athlete .
  ?person dbo:sport dbr:Soccer .
  OPTIONAL { ?person dbo:placeOfBirth ?zolotonosha . }
  OPTIONAL { ?person dbo:residence ?zolotonosha . }
  FILTER (CONTAINS(LCASE(STR(?zolotonosha)), ""zolotonosha""))
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,9,train,Give me the spouse of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?spouse .

  ?child rdfs:label ""Prince Ernest Augustus of Hanover (1914)""@en .
  ?spouse dbo:child ?child
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,12,train,Give me the spouse of Laodice IV and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?spouse WHERE {
  ?laodiceIV rdfs:label ""Laodice IV""@en .
  ?laodiceIV dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
    ?nysa dbo:parent ?spouse .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
712,10,train,Who is the awardee of the show of Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?awardee WHERE {
  ?show dbo:country dbc:Soviet_Union .
  ?award dbo:recipient ?awardee ;
         dbo:relatedWork ?show .
}
```",2,2,3,2,1,3,2,20,0,0,1209,0,0.0,0
528,12,train,Give me the war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?barbosa rdfs:label ""Orozimbo Barbosa""@en .
  ?campero rdfs:label ""Narciso Campero""@en .

  ?barbosa dbo:participatedIn ?war .
  ?campero dbo:participatedIn ?war .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
30,4,train,"Give me the native of Paris and professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Paris""@en .

  VALUES ?occupation { 
    dbc:Category:Finciers
    dbc:Category:Businesspeople_from_France
    dbc:Category:Vineyard_owners
    dbc:Category:Art_collectors
    dbc:Category:Racehorse_owners_and_breeders
  }
  
  ?person dbo:occupation ?occ .
  ?occ rdfs:label ?occupationLabel .

  FILTER (
    (?occupationLabel = ""Financier""@en || 
     ?occupationLabel = ""Businessman""@en ||
     ?occupationLabel = ""Vineyard owner""@en ||
     ?occupationLabel = ""Art collector""@en ||
     ?occupationLabel = ""Racehorse owner/breeder""@en)
  )
}
```",2,2,3,1,2,2,2,9,1,3,0,0.25,1.0,0.4
303,0,train,Give me the party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?party WHERE {
  ?person rdfs:label ""Guillermo Endara""@en .
  ?person dbo:party ?party .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
754,5,train,Give me the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?person rdfs:label ""Ram Khamhaeng""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
820,1,train,Give me the child of Jack Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?childLabel WHERE {
  ?person rdfs:label ""Jack Schwartzman""@en .
  ?person dbo:child ?child .
  ?child rdfs:label ?childLabel .
}
```",1,1,2,1,1,3,2,20,0,3,2,0.0,0.0,0
10,1,train,Give me the band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?person rdfs:label ""Luke Vibert""@en .
  ?person dbo:member ?band .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
959,11,train,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?almaMater WHERE {
  ?person dbo:almaMater ?almaMater .
  ?almaMater rdfs:label ""Eiji Ōtsuka""@en .
  ?almaMater dbo:country ?country .
  FILTER (lang(?countryLabel) = 'ja' && str(?countryLabel) = '日本')
  OPTIONAL { ?almaMater rdf:type dbo:University . }
  OPTIONAL { ?almaMater rdf:type dbo:EducationalOrganization . }
}
```",2,6,3,2,1,3,3,71,0,0,267,0,0.0,0
365,4,train,Give me the reference to The Blasters and band of Phil Alvin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band ?philAlvin WHERE {
  ?band rdfs:label ""The Blasters""@en .
  ?philAlvin rdfs:label ""Phil Alvin""@en .
  OPTIONAL { ?philAlvin dbo:band ?band . }
}
```",2,2,3,1,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
963,0,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity WHERE {
  ?entity dbo:country ?serbia .
  ?serbia rdfs:label ""Serbia""@en .
}
```",1,1,2,1,1,3,2,20,5428,0,0,1.0,1.0,1.0
994,4,train,Give me the associated musical artist of Watchtower (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?artist WHERE {
  ?band rdfs:label ""Watchtower""@en .
  ?band a dbo:Band .
  ?band dbo:associatedMusicalArtist ?artist .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
392,11,train,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?province WHERE {
  ?person rdfs:label ""Sebastiano Bianchetti""@en .
  ?person dbo:residence ?settlement .
  ?settlement rdf:type dbo:Settlement ;
              dbo:country dbr:Italy .
  ?settlement dbo:province ?province .
}
```",2,4,3,2,1,2,3,28,1,0,0,1.0,1.0,1.0
427,2,train,Give me the party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?party WHERE {
  ?person rdfs:label ""Romano Prodi""@en .
  ?person dbo:party ?party .
}
```",1,1,2,1,1,3,3,71,7,0,0,1.0,1.0,1.0
92,2,train,Give me the band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person rdfs:label ""Joseph Michael""@en .
  OPTIONAL { ?person dbo:band ?band . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
303,4,train,"Give me the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?country WHERE {
  ?place rdfs:label ""El Valle de Antón""@en .
  ?place a dbo:Settlement .
  ?place dbo:country ?country .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
64,4,train,Give me the alma mater of Jovan Hristić and entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater ?entity WHERE {
  # Find Jovan Hristić's alma mater
  ?person rdfs:label ""Jovan Hristić""@en .
  ?person dbo:almaMater ?almaMater .

  # Find any entity in Serbia
  ?entity dbo:country <http://dbpedia.org/resource/Serbia> .
}
```",2,2,3,1,2,2,2,9,1,5427,0,0.00018422991893883567,1.0,0.00036839196905507466
534,8,train,Give me the headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?headquarters WHERE {
  ?arena rdfs:label ""RDS Arena""@en .
  ?arena dbo:owner ?owner .
  ?owner dbo:headquarters ?headquarters .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
48,9,train,"Give me the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?work ?writer WHERE {
  ?producer rdfs:label ""Shellback (record producer)""@en .
  ?producer a dbo:RecordProducer .

  ?producer dbo:recordProducer ?work .
  
  OPTIONAL { 
    ?work dbo:writer ?writer .
  }
}
```",2,3,3,2,1,3,2,20,0,0,1065,0,0.0,0
820,9,train,Give me the award of the author of Understanding Comics.,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?comic rdfs:label ""Understanding Comics""@en .
  ?comic dbo:author ?author .
  ?author dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,4,4,0.0,0.0,0
281,3,train,Give me the award of Jonathon Band.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?person rdfs:label ""Jonathon Band""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
77,6,train,Give me the war of Alexander Chechenskiy and force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?force WHERE {
  # Find wars associated with Alexander Chechenskiy
  ?person rdfs:label ""Alexander Chechenskiy""@en .
  OPTIONAL { 
    ?person dbo:associatedWith ?war .
  }
  
  # Find the military force commanded by Alexander I of Russia
  ?ruler rdfs:label ""Alexander I of Russia""@en .
  OPTIONAL {
    ?ruler dbo:commander ?force .
  }
}
```",2,2,3,1,2,3,2,20,0,0,6,0,0.0,0
285,7,train,Give me the parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?tina rdfs:label ""Tina Onassis Niarchos""@en .
  ?tina dbo:child ?child .
  OPTIONAL { ?child dbo:parent ?parent . }
}
```",2,2,3,2,1,3,2,20,2,0,0,1.0,1.0,1.0
64,1,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  ?entity (dbo:country|dbp:location) ?serbia .
  ?serbia rdfs:label ""Serbia""@en .
}
```",1,1,2,1,1,2,2,9,5428,482,0,0.9184433164128596,1.0,0.9574880931381197
404,8,train,"Who is the father of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?person rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?person dbo:child ?child .
  ?child foaf:parent ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,16,train,Give me the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/property/governor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?administration WHERE {
  ?person rdfs:label ""George Kilbon Nash""@en .
  ?person dbo:positionHeld ?administration .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
994,2,train,Give me the band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  ?dokken rdfs:label ""Don Dokken""@en .
  ?dokken dbo:memberOfBand ?band .
  ?bandMember dbo:memberOfBand ?band .
  FILTER(?dokken != ?bandMember)
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,8,train,Give me the war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?war WHERE {
  ?book dbo:wikiPageWikiLink <http://dbpedia.org/resource/Sri_Lanka_Easter_bombings> .
  ?book dbo:author ?author .
  OPTIONAL { 
    ?author dbo:wikiPageDisambiguates ?disambiguation .
    ?disambiguation rdfs:label ?warLabel .
    FILTER(CONTAINS(LCASE(?warLabel), ""war""))
  }
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
294,5,train,"Give me the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Marion James""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
64,2,train,"Give me the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?decedent WHERE {
  ?person a dbo:Writer ;
          dbo:deathPlace ?place ;
          dbo:occupation ?occupation .
  ?place rdfs:label ""Sremska Kamenica""@en .
  FILTER(CONTAINS(LCASE(?occupation), ""writer""))
  OPTIONAL { ?person dbo:deceased true . }
}
```",1,2,2,1,1,2,2,9,0,0,2,0,0.0,0
778,4,train,Give me the author of Pushd and popd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?utility ?creator WHERE {
  VALUES ?utilityLabel { ""Pushd""@en ""Popd""@en }
  
  ?utility rdfs:label ?utilityLabel .
  ?utility dbo:creator ?creator .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
16,8,train,Give me the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?person rdfs:label ""Gigi Rice""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
996,0,train,Give me the force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?militaryRank WHERE {
  ?person rdfs:label ""Dagobert Sigmund von Wurmser""@en .
  ?person dbo:militaryRank ?militaryRank .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
659,8,train,"Give me the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?event WHERE {
  ?person rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  ?event dbo:agent ?person ;
         rdf:type dbo:SocietalEvent, dbo:Event, dbo:MilitaryConflict .
}
```",1,4,2,1,1,3,3,71,0,0,2,0,0.0,0
488,1,train,Give me the death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?deathPlace WHERE {
  ?person rdfs:label ""Tokugawa Ieyasu""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
197,6,train,Give me the birthplace of the awardee of Leroy P. Steele Prize.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?person dbo:award dbr:Leroy_P._Steele_Prize .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,2,9,20,71,1,0.21978021978021978,0.9523809523809523,0.35714285714285715
378,14,train,Give me the claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?claimToFame WHERE {
  ?person rdfs:label ""George Augustus Eliott""@en .
  ?person dbo:claimToFame ?claimToFame .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
959,17,train,"Give me the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?managerName ?team WHERE {
  ?season rdfs:label ""1998 Kashima Antlers season""@en .
  ?season dbo:manager ?manager .
  ?manager rdfs:label ?managerName .
  FILTER(CONTAINS(LCASE(?managerName), ""sports manager""))
  OPTIONAL { ?manager dbo:team ?team . }
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
48,3,train,Give me the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer WHERE {
  ?album rdfs:label ""Emotion""@en .
  FILTER(CONTAINS(LCASE(STR(?album)), LCASE(""carly ra e jepsen"")))
  OPTIONAL { ?album dbo:composer ?writer . }
  OPTIONAL { ?album dbo:lyricist ?writer . }
}
```",1,1,2,1,1,3,2,20,0,0,48,0,0.0,0
547,3,train,Give me the child of William Haliburton.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""William Haliburton""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
959,3,train,Who is the person born in 1958?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthYear ""1958""^^xsd:gYear .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,1,2,1,1,3,3,71,2474,2474,41,0.5,0.9836978131212724,0.6630041538255393
778,3,train,Give me the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?award WHERE {
  ?person rdfs:label ""Ralph L. Brinster""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,9,0,0,1.0,1.0,1.0
547,4,train,Give me the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?person rdfs:label ""James Burton (property developer)""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
10,11,train,Give me the professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName ?occupation WHERE {
  ?person rdfs:label ""Sharon Kao""@en .
  ?person dbo:birthName ?birthName .
  ?person dbo:occupation ?occupation .
}
```",2,2,3,2,1,2,3,28,0,4,39640,0.0,0.0,0
767,7,train,"Give me the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?persona WHERE {
  ?entity rdfs:label ""Matthew Burland""@en .
  ?entity dbo:character ?persona .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
285,10,train,Who is the professional in the award of Stan Lee?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?person rdfs:label ""Stan Lee""@en .
  ?person dbo:awards ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""stan lee award""))
}
```",2,2,3,2,1,3,2,20,0,0,39640,0,0.0,0
701,8,train,Give me the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?merneptah rdfs:label ""Merneptah""@en .
  ?merneptah dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
626,7,train,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?conflict ?opposingCommander WHERE {
  ?person rdfs:label ""Alexander I of Russia""@en .
  ?person dbo:commander ?conflict .
  ?conflict dbo:opposingCommander ?opposingCommander .
}
```",2,3,3,2,1,3,2,20,0,0,230,0,0.0,0
915,5,train,"Give me the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?child WHERE {
  ?spaulding rdf:type dbo:Person ;
             rdfs:label ""Phillip Spaulding""@en .
  ?spaulding dbo:child ?child .
  ?child rdf:type dbo:FictionalCharacter .
  OPTIONAL { 
    ?child dbo:spouse ?spouse .
    ?spouse dbo:spouse ?relatedSoapCharacter .
    FILTER EXISTS { ?relatedSoapCharacter rdf:type dbo:TelevisionSeries }
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
838,6,train,Give me the band member of Kerber and band of Raša Đelmaš.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?band WHERE {
  {
    ?person rdfs:label ""Kerber""@en .
    ?person dbo:bandMember ?band .
  }
  UNION
  {
    ?person rdfs:label ""Raša Đelmaš""@en .
    ?person dbo:bandMember ?band .
  }
}
```",2,2,3,1,2,3,2,20,0,2,1,0.0,0.0,0
356,8,train,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?currentTeam WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Wolverhampton""@en .
  
  ?person dbo:soccerPlayer true .
  ?person dbo:soccerManager true .

  OPTIONAL { ?person dbo:currentTeam ?currentTeam . }
}
```",2,4,3,2,1,3,2,20,0,0,46,0,0.0,0
838,7,train,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?memberBand WHERE {
  ?person dbo:bandMember dbr:YU_Grupa .
  ?person rdf:type dbo:Artist .
  ?person rdf:type dbo:MusicalArtist .
  ?person dbo:band ?memberBand .
}
```",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
827,9,train,"Who is the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  ?charlesAlexander rdfs:label ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?charlesAlexander dbo:parent ?parent .

  ?parent dbo:child ?child .
  
  FILTER EXISTS { ?child a dbo:Monarch } # Ensures the child is royalty
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
778,1,train,Give me the author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?author WHERE {
  ?book rdfs:label ""Chroot""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
285,5,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid SPARQL query can be generated due to missing information in the question.
```",1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
617,10,train,Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?individual WHERE {
  ?individual dbo:parent dbr:Antiochus_III_the_Great .
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  ?nysa dbo:child ?individual .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
16,11,train,Give me the spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?spouse WHERE {
  ?person rdfs:label ""Ted Martin McGinley""@en .
  ?person dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
747,9,train,Give me the person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?band WHERE {
  ?person rdfs:label ""Amba Shepherd""@en .
  ?person dbo:birthday ?birthday .
  FILTER (YEAR(?birthday) = 1985 && MONTH(?birthday) = 4 && DAY(?birthday) = 29)
  
  OPTIONAL { 
    ?person dbo:bandMember ?band .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,2,train,Give me the native of Prague.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Prague""@en .
}
```",1,1,2,1,1,2,2,9,1654,0,0,1.0,1.0,1.0
365,0,train,Give me the band of Phil Alvin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person rdfs:label ""Phil Alvin""@en .
  ?person dbo:bandMember ?band .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,7,train,"Who is the leader, that is an office holder and a politician, of Gustav Jonson?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?leader WHERE {
  ?person rdfs:label ""Gustav Jonson""@en .
  ?person rdf:type dbo:OfficeHolder ;
          dbo:officeHeld ?position .
  OPTIONAL { ?position dbo:leader ?leader . }
  FILTER (?leader != ?person)
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,12,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?ernestAugustus rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .
  ?ernestAugustus dbo:child ?child .

  OPTIONAL { 
    ?princeErnestAugustus rdfs:label ""Prince Ernest Augustus of Hanover (1914)""@en .
    ?princeErnestAugustus dbo:parent ?child .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
177,4,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in South Korea.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?headquarter WHERE {
  ?ministry rdfs:label ""Ministry of Culture, Sports and Tourism (South Korea)""@en .
  ?ministry dbo:country dbc:South_Korea .
  ?ministry dbo:headquarter ?headquarter .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
161,5,train,Who is the predecessor of Indalecio Prieto?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?person rdfs:label ""Indalecio Prieto""@en .
  ?person dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
915,7,train,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?resident WHERE {
  ?person rdfs:label ""Stephen Verona""@en .
  ?person dbo:birthPlace ?place .

  FILTER EXISTS { ?place a dbo:PopulatedPlace } .

  OPTIONAL { 
    ?place dbo:resident ?resident .
  }
}
```",2,3,3,2,1,3,2,20,0,0,15,0,0.0,0
339,9,train,Who is the child of the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?frederickVIII rdfs:label ""Frederick VIII of Denmark""@en .
  ?frederickVIII dbo:predecessor ?predecessor .
  ?predecessor dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,4,2,2,0.6666666666666666,0.6666666666666666,0.6666666666666666
345,5,train,"Who is the person born, that is a soccer player and a soccer manager, on 1978-09-15?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1978 && MONTH(?date) = 9 && DAY(?date) = 15)
  
  ?person dbo:sport ?sport .
  ?managerRole dbo:roleName ""soccer manager""@en .
  ?person ?managerProperty ?managerRole .

  ?playerRole dbo:roleName ""soccer player""@en .
  ?person ?playerProperty ?playerRole .

  FILTER (?sport = dbpedia:Soccer)
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
701,13,train,Give me the parent of the child of Ramesses II.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?parent WHERE {
  ?child dbo:childOf ?ramesses .
  ?ramesses rdfs:label ""Ramesses II""@en .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
485,1,train,Give me the birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Thomas Warner""@en .
  ?person dbo:occupation dbo:Poet .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
184,17,train,Give me the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  ?margaret rdfs:label ""Archduchess Margaret of Austria""@en .
  ?margaret dbo:birthYear ""1925""^^xsd:gYear .
  ?margaret dbo:parent ?parent .

  OPTIONAL { 
    ?parent dbo:child ?child .
  }
  
  FILTER(?child != ?margaret) # Exclude Archduchess Margaret herself
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
115,2,train,Who is the alumnus of National University of San Marcos?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person dbo:almaMater dbr:National_University_of_San_Marcos .
}
```",1,1,2,1,1,2,2,9,74,0,0,1.0,1.0,1.0
161,17,train,"Give me the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?event WHERE {
  ?person rdfs:label ""El Director""@en .
  OPTIONAL { 
    ?person dbo:associatedEvent ?event .
  }
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
303,2,train,Give me the party of Arnulfo Arias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?party WHERE {
  ?person rdfs:label ""Arnulfo Arias""@en .
  ?person dbo:party ?party .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
314,10,train,Give me the awardee of the award of Sergei Makovetsky.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardee WHERE {
  ?s rdfs:label ""Sergei Makovetsky""@en .
  ?s dbo:award ?award .

  ?otherAwardee dbo:award ?award .
  ?otherAwardee rdfs:label ?awardee .
  
  FILTER(?s != ?otherAwardee)
}
```",2,2,3,2,1,2,3,28,0,0,951,0,0.0,0
9,6,train,Who is the awardee of Royal Medal?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?person dbo:award ?award .
  ?award rdfs:label ""Royal Medal""@en .
}
```",1,1,2,1,1,3,3,71,41,233,4,0.14963503649635038,0.9111111111111111,0.25705329153605017
161,13,train,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?militaryForce WHERE {
  ?person rdfs:label ""Francisco Largo Caballero""@en .
  ?event dbo:associatedWith ?person ;
         rdf:type dbo:SocietalEvent, dbo:MilitaryConflict .
  ?event dbo:militaryForce ?militaryForce .
}
```",2,4,3,2,1,3,3,71,0,0,514,0,0.0,0
281,12,train,Give me the war of New Zealand Army and entity in Colony of New Zealand.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?army rdfs:label ""New Zealand Army""@en .
  ?army dbo:country ?country .
  FILTER (str(?country) = ""Colony of New Zealand"")
  ?army dbo:participatedIn ?war .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
701,11,train,Give me the parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?nefertari rdfs:label ""Nefertari""@en .
  ?nefertari dbo:child ?child .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
161,4,train,"Give me the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?force WHERE {
  ?franco rdfs:label ""Francisco Franco""@en .
  ?franco dbo:associatedWith ?force .

  OPTIONAL { ?force rdf:type dbo:SocietalEvent . }
  OPTIONAL { ?force rdf:type dbo:Event . }
  OPTIONAL { ?force rdf:type dbo:MilitaryConflict . }

  FILTER (COUNT(DISTINCT {
    ?force rdf:type dbo:SocietalEvent ;
           rdf:type dbo:Event ;
           rdf:type dbo:MilitaryConflict
  }) > 0)
}
```",1,4,2,1,1,3,3,71,0,0,12,0,0.0,0
488,5,train,"Who is the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?matsudaira rdfs:label ""Matsudaira Tadamasa""@en .
  ?matsudaira dbo:father ?father .
  OPTIONAL { ?father dbo:officeHolder ?office . FILTER EXISTS { ?office } }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
16,2,train,Give me the person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person rdfs:label ""Georgeanne Marie Rice""@en .
  ?person dbo:birthName ""Georgeanne Marie Rice"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
328,10,train,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:head ?position .
  ?position rdfs:label ""People's Commissariat of Defense (Soviet Union)""@en .
  ?person dbo:award ?award .
  ?award rdfs:label ""Order of Suvorov""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,14,train,"Give me the person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?capital rdfs:label ""Algiers""@en .
  ?capital rdf:type dbo:Settlement .
  ?person dbo:deathPlace ?capital .
}
```",2,3,3,2,1,3,3,71,122,0,0,1.0,1.0,1.0
404,3,train,Give me the birth name of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?person rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,12,train,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent ?spouse WHERE {
  # Find the parent of Henuttawy (19th dynasty)
  ?henuttawy rdfs:label ""Henuttawy""@en .
  ?henuttawy dbo:parent ?parent .

  # Find the spouse(s) of Ramesses II
  ?ramessesII rdfs:label ""Ramesses II""@en .
  ?ramessesII dbo:spouse ?spouse .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,11,train,Give me the person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?person rdfs:label ""Dino Merlin""@en .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
492,12,train,Give me the person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Algiers""@en .

  OPTIONAL { 
    ?conflict dbo:name ?conflictName .
    FILTER (CONTAINS(LCASE(?conflictName), ""franco-hova wars""))
    ?person dbo:militaryConflict ?conflict .
  }
  
  FILTER EXISTS {
    ?person dbo:militaryConflict ?conflict .
    ?conflict dbo:name ?conflictName .
    FILTER (CONTAINS(LCASE(?conflictName), ""franco-hova wars""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
783,5,train,"Give me the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Priscilla Opoku-Kwarteng""@en .
  ?person rdf:type dbo:Artist ;
          dbo:musicalArtist true .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
963,5,train,"Give me the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?party WHERE {
  ?place rdfs:label ""Sremski Karlovci""@en .
  ?place dbo:rulingParty ?party .
  ?party rdf:type dbo:PoliticalParty .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
285,1,train,Give me the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?spouse WHERE {
  ?person rdfs:label ""Aristotle Onassis""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
487,0,train,Give me the country of 2022 Vermont House of Representatives election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:2022_Vermont_House_of_Representatives_election dbo:country ?country .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
177,5,train,Give me the entity in the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?residence WHERE {
  ?person rdfs:label ""Alexander Gamelin""@en .
  ?person dbo:residence ?residence .
}
```",2,2,3,2,1,2,2,9,1,1,3064,0.5,0.0003262642740619902,0.0006521030322791001
465,0,train,Give me the death place of Jiřina Štěpničková.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?deathPlace WHERE {
  ?person rdfs:label ""Jiřina Štěpničková""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
404,11,train,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?spouse WHERE {
  ?person rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?person dbo:spouse ?spouse .
}
```",2,3,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
328,12,train,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?operation dbo:commanderOfMilitaryOperation ?person .
  ?operation rdfs:label ""Eastern Front (World War II)""@en .

  OPTIONAL {
    ?person dbo:headOfState <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense> .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,5,train,Who is the commander in Battle of Verdun?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?battle rdfs:label ""Battle of Verdun""@en .
  OPTIONAL { ?battle dbo:commander ?commander . }
  OPTIONAL { ?battle dbo:commandingOfficer ?commander . }
}
```",1,1,2,1,1,3,3,71,17,0,0,1.0,1.0,1.0
421,5,train,Give me the birth name of Dino Merlin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?person rdfs:label ""Dino Merlin""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
996,3,train,Who is the awardee of 1778.0?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?awardee WHERE {
  ?award dbo:identifier ""1778.0"" .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
801,5,train,"Give me the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:occupation/rdf:type ?occupation .
  FILTER EXISTS { 
    ?occupation rdfs:label ""Rapper""@en .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1363,0,0.0,0
16,16,train,Give me the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actorLabel ?professionLabel WHERE {
  ?series rdfs:label ""Unnatural (TV series)""@en .
  ?series dbo:actor ?actor .
  ?actor rdfs:label ?actorLabel .
  OPTIONAL { ?actor dbo:profession ?profession . }
  OPTIONAL { ?profession rdfs:label ?professionLabel . }
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
391,12,train,Give me the actor of All About the Andersons and actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor1 ?actor2 WHERE {
  ?film1 rdfs:label ""All About the Andersons""@en .
  ?film1 dbo:starring ?actor1 .

  ?film2 rdfs:label ""The Departed""@en .
  ?film2 dbo:starring ?actor2 .
}
```",2,2,3,1,2,3,3,71,1,11,0,0.08333333333333333,1.0,0.15384615384615385
492,9,train,Give me the person decedent at French Algeria and commander in Franco-Hova Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?event rdfs:label ""Franco-Hova Wars""@en .
  ?commander dbo:commanderOf ?event .
  ?commander rdfs:label ?personLabel .
  FILTER(LANG(?personLabel) = 'en') .
  
  ?decedent dbo:deathPlace ?place .
  ?decedent rdfs:label ?personLabel2 .
  FILTER(LANG(?personLabel2) = 'en') .
  ?place rdfs:label ""French Algeria""@en .

  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(STR(?commander), "" "", ""_""))) AS ?person)
  
  FILTER(?commander = ?decedent)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,7,train,Give me the band member of Senidah and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . }","```sparql
# Query to find the band member of Senidah
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember WHERE {
  ?senidah rdfs:label ""Senidah""@en .
  ?senidah dbo:bandMember ?bandMember .
}

UNION

# Query to find the person born as Edin Dervišhalidović
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Edin Dervišhalidović""@en .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,7,train,Give me the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parent WHERE {
  ?person rdfs:label ""Archduchess Margaret of Austria""@en .
  FILTER(CONTAINS(str(?person), ""1925"")) .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
285,9,train,Who is the child of the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?onassis rdfs:label ""Aristotle Onassis""@en .
  ?onassis dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,5,0,0,1.0,1.0,1.0
547,0,train,Give me the resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?restingPlace WHERE {
  ?person rdfs:label ""James Burton (Egyptologist)""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  OPTIONAL { ?person dbo:burialPlace ?restingPlace . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,14,train,Give me the figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?alias WHERE {
  ?university rdfs:label ""Queen's University Belfast""@en .
  ?university dbo:alias ?alias .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,15,train,"Give me the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?officeHolder ?force WHERE {
  ?officeHolder dbo:nationality dbr:Kingdom_of_Ireland ;
                a dbo:OfficeHolder .
  OPTIONAL { ?officeHolder dbo:force ?force . }
}
```",2,3,3,2,1,3,3,71,0,1,60,0.0,0.0,0
801,16,train,"Give me the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?work WHERE {
  ?artist rdf:type dbo:MusicalArtist .
  ?artist dbo:genre dbc:Rap_music .
  ?work rdf:type dbo:musicalWork ;
        rdf:type dbo:song ;
        rdf:type dbo:work ;
        dbo:creator ?artist .
}
```",2,6,3,2,1,3,3,71,0,0,2395,0,0.0,0
55,9,train,Give me the band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
# Query 1: Band members of Metallica
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?metallica rdfs:label ""Metallica""@en .
  ?metallica dbo:bandMember ?member .
}

# Query 2: Bands of Jason Newsted
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?newsted rdfs:label ""Jason Newsted""@en .
  ?newsted dbo:bandMember ?band .
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
429,0,train,Give me the administration of Andrew Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?termStart ?termEnd WHERE {
  ?president a dbo:President ;
             rdfs:label ""Andrew Johnson""@en .
  ?president dbo:presidentOf dbr:United_States ;
             dbo:termStart ?termStart ;
             dbo:termEnd ?termEnd .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
696,4,train,Who is the commander in Battle of Chishui River?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?battle rdfs:label ""Battle of Chishui River""@en .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,24,0,0,1.0,1.0,1.0
182,7,train,Give me the entity in Sri Lanka and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?entityInSriLanka ?war WHERE {
  ?person rdfs:label ""Mahesh Senanayake""@en .
  
  # Find entity in Sri Lanka
  OPTIONAL { 
    ?person dbo:country <http://dbpedia.org/resource/Sri_Lanka> .
    ?person ?property ?entityInSriLanka .
    FILTER NOT EXISTS { ?entityInSriLanka rdf:type dbo:War }
  }

  # Find war association
  OPTIONAL {
    ?person dbo:participatedIn ?war .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
197,0,train,Give me the birthplace of Dumitru Nadu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthplace WHERE {
  ?person rdfs:label ""Dumitru Nadu""@en .
  ?person dbo:birthPlace ?birthplace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
92,11,train,"Give me the band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist WHERE {
  ?band rdfs:label ""Nevermore""@en .
  ?band dbo:bandMember ?member .
  ?member dbo:artist ?artist .
}
```",2,3,3,2,1,3,3,71,0,0,12,0,0.0,0
391,2,train,Give me the actor of All About the Andersons.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actor WHERE {
  ?movie rdfs:label ""All About the Andersons""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,4,0,1,1.0,0.8,0.888888888888889
626,10,train,Give me the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?award WHERE {
  ?battle rdfs:label ""Battle of Borodino""@en .
  ?battle dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,0,53,0,0.0,0
701,5,train,Give me the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""Seti I""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
303,9,train,Give me the entity in Panama and party of Arnulfo Arias.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?person rdfs:label ""Arnulfo Arias""@en .
  ?person dbo:country dbr:Panama .
  ?person dbo:party ?party .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
435,1,train,Give me the region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?gmt rdfs:label ""Greenwich Mean Time""@en .
  ?gmt dbo:timeZone ?tz .
  ?tz dbo:country ?region .
}
```",1,1,2,1,1,2,3,28,0,0,2484,0,0.0,0
54,11,train,Give me the child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?soeMinWimalaDewi rdfs:label ""Soe Min Wimala Dewi""@en .
  ?soeMinWimalaDewi dbo:father ?father .
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
9,3,train,"Give me the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?organization WHERE {
  ?organization a dbo:Organization .
  ?organization dbo:location ?place .
  ?place rdfs:label ""Belfast""@en .
}
```",1,2,2,1,1,3,3,71,0,0,57,0,0.0,0
492,1,train,Give me the commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander WHERE {
  ?war rdfs:label ""Franco-Hova Wars""@en .
  OPTIONAL { ?war dbo:commander ?commander . }
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
232,12,train,Give me the native of London and actor of Dog Soldiers (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""Dog Soldiers""@en .
  ?movie dbo:starring ?actor .

  ?actor dbo:nativePlace ?place .
  ?place rdfs:label ""London""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country ?uk .
  ?uk rdfs:label ""United Kingdom""@en .
}
```",1,1,2,1,1,3,2,20,42999,0,0,1.0,1.0,1.0
488,11,train,Give me the birth place of the commander in Boshin War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Saigō Takamori""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,3,71,0,0,15,0,0.0,0
404,7,train,Who is the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?spouse WHERE {
  ?person rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
534,10,train,"Give me the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?owner WHERE {
  ?event rdfs:label ""2012 Pro12 Grand Final""@en .
  ?event dbo:location ?venue .
  ?venue a dbo:ArchitecturalStructure ;
         dbo:venueType dbo:SportsVenue .
  OPTIONAL { ?venue dbo:owner ?owner . }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
232,10,train,Give me the child of Jon Pertwee and native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?person rdfs:label ""Jon Pertwee""@en .
  ?person dbo:child ?child .
  ?child dbo:birthPlace ?place .
  FILTER(CONTAINS(LCASE(str(?place)), ""london""))
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
184,15,train,"Give me the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?native WHERE {
  ?landmark rdf:type dbo:Settlement .
  ?landmark dbo:elevation ""96.0""^^xsd:float .
  OPTIONAL { ?landmark dbo:nativeOf ?native . }
}
```",2,3,3,2,1,3,3,71,0,0,3320,0,0.0,0
747,2,train,Give me the band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person rdfs:label ""Shèna""@en .
  ?person dbo:band ?band .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
485,11,train,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?person rdfs:label ""Joseph Whitaker (naturalist)""@en .
  ?person rdf:type dbo:Naturalist .
  ?person dbo:birthPlace ?place .
  
  ?place rdf:type dbpedia-owl:Region .
  ?place rdfs:label ?region .
}
```",2,3,3,2,1,2,3,28,0,0,369,0,0.0,0
754,9,train,Give me the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?grandparent WHERE {
  ?minLinka rdfs:label ""Min Linka""@en .
  OPTIONAL { 
    ?minLinka dbo:parentOrganization ?parent .
    OPTIONAL {
      ?parent dbo:parentOrganization ?grandparent .
    }
  }
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
177,0,train,Give me the entity in South Korea.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?entity dbo:country ?country .
  FILTER (langMatches(lang(?country), ""en"") && str(?country) = ""South Korea"")
}
```",1,1,2,1,1,2,2,9,0,0,3065,0,0.0,0
701,0,train,Give me the parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parent WHERE {
  ?person rdfs:label ""Meritamen""@en .
  OPTIONAL { ?person dbo:mother ?parent . }
  OPTIONAL { ?person dbo:father ?parent . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
365,3,train,Give me the real name of The Blasters.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?memberLabel ?givenName WHERE {
  ?band rdfs:label ""The Blasters""@en .
  ?band dbo:member ?member .
  ?member rdfs:label ?memberLabel .
  OPTIONAL { 
    ?member foaf:givenName ?givenName .
  }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
996,2,train,Give me the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?elevation WHERE {
  ?lake rdfs:label ""Lac d'Avoriaz""@en .
  ?lake dbo:elevation ?elevation .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
9,8,train,Give me the nickname of Queen's University Belfast.,SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?nickname WHERE {
  ?university rdfs:label ""Queen's University Belfast""@en .
  ?university dbo:nickname ?nickname .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
161,10,train,Give me the military force of Rif War and commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?event rdfs:label ""Rif War""@en .
  ?event dbo:militaryConflict ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce .
}

UNION

SELECT ?commander WHERE {
  ?campaign rdfs:label ""Biscay Campaign""@en .
  ?campaign dbo:commander ?commander .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,1,train,Give me the associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?artist WHERE {
  ?band rdfs:label ""Red Tide""@en .
  ?band a dbo:Band .
  ?band dbo:associatedMusicalArtist ?artist .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
251,0,train,Give me the location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?location WHERE {
  ?battle rdfs:label ""Battle of Marengo""@en .
  ?battle dbo:location ?location .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
915,4,train,"Give me the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent WHERE {
  ?lizzie rdfs:label ""Lizzie Spaulding""@en .
  ?lizzie dbo:parent ?parent .

  OPTIONAL { ?parent rdf:type dbo:FictionalCharacter . }
  
  OPTIONAL {
    ?soap rdf:type dbo:SoapOpera .
    ?soap dbo:character ?parent .
  }

  FILTER EXISTS { ?parent rdf:type dbo:FictionalCharacter } .
}
```",1,3,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
16,13,train,Give me the professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?professional WHERE {
  ?satomiIshihara rdfs:label ""Satomi Ishihara""@en .
  ?satomiIshihara dbo:occupation ?profession .

  ?individual rdfs:label ?name .
  FILTER (lang(?name) = 'en')
  ?individual dbo:occupation ?profession .
  FILTER (?individual != ?satomiIshihara)
}
```",2,2,3,2,1,3,3,71,0,0,19241,0,0.0,0
617,2,train,Give me the parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?parent WHERE {
  ?pharnaces dbo:spouse ?nysa .
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  ?nysa dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
659,5,train,"Give me the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity WHERE {
  ?entity rdfs:label ""Polish Horse""@en .
  OPTIONAL { ?entity a dbo:MilitaryUnit . }
  OPTIONAL { ?entity a dbo:Organization . }
  FILTER (BOUND(?entity) && EXISTS { ?entity a dbo:MilitaryUnit } && EXISTS { ?entity a dbo:Organization })
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
391,7,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid SPARQL query can be generated due to missing information in the question.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
659,10,train,Give me the military force of Napoleonic Wars and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce ?commander WHERE {
  ?campaign rdfs:label ""German campaign of 1813""@en .
  ?campaign dbo:militaryParticipant ?participant .

  OPTIONAL { 
    ?participant dbo:militaryForce ?militaryForce .
  }

  OPTIONAL {
    ?participant dbo:commander ?commander .
  }
}
```",2,2,3,1,2,3,3,71,0,0,6,0,0.0,0
179,6,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara and parent of Ubol Ratana.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthName ""Mom Rajawongse Sirikit Kitiyakara"" .
  ?ubolRatana rdfs:label ""Ubol Ratana""@en .
  ?ubolRatana dbo:parent ?person .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,9,train,"Who is the member of the associated musical artist, that is an organisation and a group and a band, of The Boils?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?member WHERE {
  ?band rdfs:label ""The Boils""@en .
  ?band dbo:member ?member .
  
  FILTER EXISTS { ?member rdf:type dbo:Band . }
  FILTER EXISTS { ?member rdf:type dbo:MusicalGroup . }
  FILTER EXISTS { ?member rdf:type dbo:Organization . }
}
```",2,5,3,2,1,3,2,20,0,0,6,0,0.0,0
696,10,train,Give me the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?battle rdfs:label ""Battle of Chishui River""@en .
  ?battle dbo:commander ?commander .
}
```",2,2,3,2,1,3,2,20,0,24,9,0.0,0.0,0
492,4,train,"Give me the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?position WHERE {
  ?person rdfs:label ""Joseph C. Satterthwaite""@en .
  ?person dbo:positionHeld ?position .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,6,train,Give me the administration of George K. Nash.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?position WHERE {
  ?person rdfs:label ""George K. Nash""@en .
  ?person dbo:positionHeld ?position .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
747,10,train,Give me the band of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band ?person WHERE {
  # Find Shèna's band
  ?shena rdfs:label ""Shèna""@en .
  OPTIONAL { 
    ?shena dbo:musicalArtist ?band .
  }
  
  # Find person born on 1985-04-29
  ?person dbo:birthDate ?date .
  FILTER (str(?date) = ""1985-04-29""^^xsd:date)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
356,2,train,"Give me the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?predecessor WHERE {
  ?season rdfs:label ""2015 Sacramento Republic FC season""@en .
  ?season dbo:predecessor ?predecessor .
}
```",1,3,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
177,1,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?headquarter WHERE {
  ?ministry rdfs:label ""Ministry of Culture, Sports and Tourism""@en .
  ?ministry dbo:headquarter ?headquarter .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
666,5,train,Give me the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?team rdfs:label ""England national beach soccer team""@en .
  ?team dbo:nickname ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
378,5,train,"Give me the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war WHERE {
  ?peninsularWar rdfs:label ""Peninsular War""@en .
  ?peninsularWar dbo:partOf ?war .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,7,train,"Give me the territory administered from Reykjavík and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?territory ?articleContent WHERE {
  # Part 1: Territory administered from Reykjavík
  ?reikjavik rdfs:label ""Reykjavík""@en .
  ?reikjavik dbo:administrativeUnit ?territory .

  # Part 2: Work of Article 62, Section IV of Constitution of Iceland
  OPTIONAL {
    ?constitution rdfs:label ""Constitution of Iceland""@en .
    ?article rdfs:label ""Article 62"" .
    ?section rdfs:label ""Section IV"" .
    ?article dbo:partOf ?constitution ;
             dbo:hasPart ?section .
    ?section dbo:textContent ?articleContent .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
626,2,train,Who is the commander in Battle of Paris (1814)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?battle rdfs:label ""Battle of Paris (1814)""@en .
  OPTIONAL { ?battle dbo:commander ?commander . }
}
```",1,1,2,1,1,3,2,20,11,0,0,1.0,1.0,1.0
528,11,train,Give me the war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?belligerent WHERE {
  ?battle rdfs:label ""Battle of Pisagua""@en .
  ?battle dbo:belligerent ?belligerent .
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
281,13,train,"Give me the entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Bob Heffron""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace rdf:type dbo:Country }
}
```",2,3,3,2,1,3,3,71,0,1,1,0.0,0.0,0
783,4,train,Give me the persona of Ebony Reigns.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?occupation ?notableWork WHERE {
  ?person rdfs:label ""Ebony Reigns""@en .
  OPTIONAL { ?person dbo:occupation ?occupation . }
  OPTIONAL { ?person dbo:notableWork ?notableWork . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
492,15,train,Give me the work of the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  ?location rdfs:label ""French Algeria""@en .
  ?location dbo:author ?author .
  ?author dbo:work ?work .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
378,3,train,Give me the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
435,2,train,"Give me the work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?articleContent WHERE {
  ?constitution rdfs:label ""Constitution of Iceland""@en .
  ?constitution dbo:part ?article .
  ?article rdfs:label ""Article 62, Section IV""@en .
  ?article rdfs:comment ?articleContent .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
281,14,train,"Give me the war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?profession ?militaryUnit WHERE {
  ?person rdfs:label ""Heather Roy""@en .
  ?person dbo:profession ?profession .
  
  OPTIONAL {
    ?profession rdfs:comment ?description .
    FILTER(CONTAINS(LCASE(?description), ""military"") || CONTAINS(LCASE(?description), ""unit""))
    ?profession dbo:relatedMilitaryUnit ?militaryUnit .
  }
}
```",2,3,3,2,1,3,3,71,0,0,14,0,0.0,0
712,4,train,Give me the show of Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?show WHERE {
  ?show dbo:country dbr:Soviet_Union .
  ?show a dbo:TVSeries ; 
        rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
48,7,train,Give me the band of the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?band WHERE {
  ?album rdfs:label ""Emotion""@en .
  ?album dbo:song ?song .
  ?song dbo:lyricist ?writer .
  OPTIONAL { 
    ?writer dbo:memberOfBand ?band .
  }
}
```",2,2,3,2,1,3,2,20,0,0,95,0,0.0,0
404,5,train,"Who is the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?parent WHERE {
  ?person rdfs:label ""Prince George William of Hanover""@en .
  ?person dbo:parent ?parent .
  ?parent rdf:type ?type .
  FILTER (
    ?type = dbo:Monarch ||
    ?type = dbo:RoyalFamilyMember
  )
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
285,0,train,Give me the parent of Alexander Onassis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?parent WHERE {
  ?person dbo:child ?alexander .
  ?alexander rdfs:label ""Alexander Onassis""@en .
  OPTIONAL { ?person dbo:father ?parent . }
  OPTIONAL { ?person dbo:mother ?parent . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
281,0,train,"Give me the war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war WHERE {
  ?war rdfs:label ""War of Beauchamp Seymour, 1st Baron Alcester""@en .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
281,6,train,"Give me the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Bob Heffron""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
754,3,train,Give me the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?person rdfs:label ""May Hnin Htapi""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
429,5,train,Give me the administration of the father of Martha Johnson Patterson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father ?administration WHERE {
  ?person rdfs:label ""Martha Johnson Patterson""@en .
  ?person dbo:father ?father .

  OPTIONAL {
    ?father dbo:positionHeld ?administration .
  }
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
48,6,train,Give me the band of Carl Falk and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?band WHERE {
  VALUES ?person { 
    dbr:Claes_Falk 
    dbr:Murda_Mook
  }
  
  ?person dbo:band ?band .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
182,5,train,Give me the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?nationality WHERE {
  ?person rdfs:label ""Tamara Kunanayakam""@en .
  ?person dbo:nationality ?nationality .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
44,5,train,Give me the band member of the band of John Pettibone.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?band ?member WHERE {
  ?person rdfs:label ""John Pettibone""@en .
  ?person dbo:member ?band .
  
  OPTIONAL {
    ?bandMember dbo:band ?band .
    ?bandMember rdfs:label ?member .
  }
}
```",2,2,3,2,1,2,2,9,0,0,2,0,0.0,0
666,10,train,"Give me the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?nickname WHERE {
  ?org rdfs:label ""The Football Association""@en .
  ?org dbo:country dbr:England .
  OPTIONAL { ?org dbo:nickname ?nickname . }
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
232,6,train,"Give me the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film ?militaryConflict WHERE {
  ?person rdfs:label ""Sean Pertwee""@en .
  ?person dbo:film ?film .
  ?person dbo:militaryConflict ?militaryConflict .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
820,6,train,Give me the child of Jack Schwartzman and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child ?profession WHERE {
  ?person rdfs:label ""Jack Schwartzman""@en .
  ?person dbo:child ?child .
  OPTIONAL { ?child rdf:type ?type . FILTER (strstarts(str(?type), str(dbo:))) }
  OPTIONAL { ?child dbo:profession ?profession . }
}
```",2,2,3,1,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
54,0,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?person rdfs:label ""Thinkhaya of Pagan""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
488,16,train,"Who is the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?politicianFather WHERE {
  ?matsudaira rdfs:label ""Matsudaira Tadamasa""@en .
  ?matsudaira dbo:father ?officeHolderFather .
  ?officeHolderFather a dbo:OfficeHolder .
  
  ?officeHolderFather dbo:father ?politicianFather .
  ?politicianFather a dbo:Politician .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
391,16,train,"Give me the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseName ?work WHERE {
  ?hormann rdfs:label ""Sherry Hormann""@en .
  ?hormann dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
  OPTIONAL { 
    ?spouse dbo:notableWork ?work .
  }
}
```",2,3,3,2,1,3,3,71,0,1,4,0.0,0.0,0
666,8,train,Give me the figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?team rdfs:label ""England national beach soccer team""@en .
  ?team dbo:commonName ?nickname .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
617,7,train,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?grandchild WHERE {
  ?boleslausI rdfs:label ""Boleslaus I, Duke of Bohemia""@en .
  ?boleslausI dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild rdf:type dbo:Monarch .
}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
328,14,train,"Give me the leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?officeLeader WHERE {
  ?stalinOffice dbo:officeHolder dbr:Joseph_Stalin .
  ?stalinOffice a ?officeType .
  FILTER(?officeType = dbo:GovernmentAgency) .
  ?stalinOffice dbo:leader ?officeLeader .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
9,15,train,"Who is the mayor, that is a politician, of the entity, that is an organisation, in Belfast?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mayor WHERE {
  ?organisation dbo:location ?place .
  ?place rdfs:label ""Belfast""@en .
  
  ?organisation dbo:mayor ?mayor .
  
  ?mayor rdf:type dbo:Politician .
}
```",2,4,3,2,1,3,3,71,0,0,13,0,0.0,0
915,10,train,"Give me the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?lizzie a dbo:FictionalCharacter ;
          rdfs:label ""Lizzie Spaulding""@en .
  
  ?parent dbo:child ?lizzie ;
          a dbo:FictionalCharacter .

  ?soapParent a dbo:SoapOperaCharacter ;
              dbo:characterName ?parent .

  ?child dbo:child ?parent ;
         a dbo:FictionalCharacter ;
         dbo:SoapOperaCharacter ?soapChild .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
820,2,train,Who is the author of Understanding Comics?,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?author WHERE {
  ?book rdfs:label ""Understanding Comics""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
981,2,train,"Give me the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?timeZone WHERE {
  ?place rdfs:label ""Salak, North Sumatra""@en .
  ?place dbo:timeZone ?timeZone .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
182,9,train,Give me the war of Jagath Dias and entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war ?entity WHERE {
  ?person rdfs:label ""Jagath Dias""@en .
  ?person dbo:participatedIn ?war .
  OPTIONAL { ?war dbo:location ?entity . FILTER (CONTAINS(LCASE(?entity), ""sri lanka"")) }
}
```",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
184,3,train,"Give me the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?landmark WHERE {
  ?landmark rdf:type dbo:PopulatedPlace .
  ?landmark dbo:elevation ""96.0""^^xsd:float .
  ?landmark rdfs:label ?name .
}
```",1,2,2,1,1,3,3,71,162,7,0,0.9585798816568047,1.0,0.9788519637462235
232,13,train,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?film ?militaryConflict WHERE {
  ?person rdfs:label ""Sean Pertwee""@en .
  ?person dbo:actor ?film .
  OPTIONAL { 
    ?person dbo:militaryOccupation ?militaryRole .
    ?militaryRole rdfs:label ?militaryConflict .
  }
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
498,3,train,"Who is the member, that is an artist, of Mortician (band)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?member WHERE {
  ?band rdfs:label ""Mortician""@en .
  ?band dbo:member ?member .
  ?member a dbo:Artist .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
626,5,train,Give me the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?person rdfs:label ""Aleksey Petrovich Yermolov""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
392,0,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country ?country .
  FILTER (langMatches(lang(?country), ""en"") && str(?country) = ""Italy"")
}
UNION
{
  ?entity dcterms:isPartOf ?part .
  ?part rdfs:label ""Italy""@en .
}
```",1,1,2,1,1,2,3,28,0,0,13092,0,0.0,0
328,0,train,Give me the awardee of Order of Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?order rdfs:label ""Order of Suvorov""@en .
  ?order dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
487,3,train,Give me the administration of Patricia McCoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?administration WHERE {
  ?person rdfs:label ""Patricia McCoy""@en .
  ?person dbo:officeHolder ?positionHeld .
  ?positionHeld dbo:headOfState ?administration .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
9,7,train,"Give me the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?entity WHERE {
  ?entity rdf:type dbo:EducationalInstitution .
  ?entity rdf:type dbo:Organization .
  OPTIONAL { ?entity dbo:location ?loc . }
  FILTER (
    EXISTS { 
      ?loc rdfs:label ""Northern Ireland""@en .
    } || 
    EXISTS { 
      ?entity dbo:country <http://dbpedia.org/resource/Northern_Ireland> .
    }
  )
}
```",1,3,2,1,1,3,3,71,0,0,134,0,0.0,0
92,16,train,"Give me the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?birthDate WHERE {
  ?movie rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:actor ?person .
  ?person dbo:artist true .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",2,3,3,2,1,3,3,71,0,0,205,0,0.0,0
30,0,train,Give me the native of Paris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Paris""@en .
}
```",1,1,2,1,1,2,2,9,4485,0,0,1.0,1.0,1.0
754,4,train,Give me the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?resource WHERE {
  ?resource rdfs:label ""Ram Khamhaeng the Great""@en .
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
981,9,train,"Give me the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/property/timeZone> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region WHERE {
  ?salak rdfs:label ""Salak, North Sumatra""@en .
  ?salak dbp:timeZone ?timezone .
  ?timezone dbo:region ?region .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
820,3,train,Give me the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?award WHERE {
  ?person rdfs:label ""Scott McCloud""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,4,4,0.0,0.0,0
488,6,train,"Who is the father, that is a politician, of Yūki Hideyasu?",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?fatherName WHERE {
  ?person rdfs:label ""Yūki Hideyasu""@en .
  ?person dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER(LANG(?fatherName) = 'en')
  OPTIONAL { ?father rdf:type dbo:Politician . }
  FILTER(EXISTS { ?father rdf:type dbo:Politician })
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,11,train,Give me the reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?song rdfs:label ""Blinded by the Light""@en .
  ?song dbo:lyricist|dbo:composer ?author .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
994,14,train,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?person dbo:birthName ""Donald Maynard Dokken""@en .
  ?person a dbo:MusicalArtist .
  ?person dbo:bandMember ?band .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
421,3,train,Who is the awardee of [[#Awards and nominations?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person ?award WHERE {
  ?person dbo:award ?award .
}
```

This query retrieves all individuals (`?person`) and their corresponding awards (`?award`). To narrow it down to a specific award, replace `dbo:award` with the appropriate property or add a filter for the specific award name.",1,1,2,1,1,2,3,28,0,0,113,0,0.0,0
378,1,train,Give me the war of Joaquín Blake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?person rdfs:label ""Joaquín Blake""@en .
  ?person dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
617,6,train,Who is the child of Antiochus III the Great?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""Antiochus III the Great""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
696,6,train,Give me the landmark at elevation of 50 and birth place of Tim Brennan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?landmark ?elevation WHERE {
  ?landmark a dbo:Landmark .
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ""50""^^xsd:integer)
}

UNION

SELECT ?person ?birthPlace WHERE {
  ?person rdfs:label ""Tim Brennan""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
92,17,train,Give me the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person ?label WHERE {
  ?person dbo:birthName ""Joseph Michael""@en .
  OPTIONAL { ?person rdfs:label ?label . FILTER (lang(?label) = 'en') }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
16,5,train,Who is the actor of Unnatural (TV series)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actor WHERE {
  ?series rdfs:label ""Unnatural""@en .
  ?series dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
312,6,train,Give me the entity in the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace ?entity WHERE {
  ?person rdfs:label ""Giorgio Grigolli""@en .
  ?person dbo:birthPlace ?birthPlace .

  OPTIONAL {
    ?entity dbo:locatedIn ?birthPlace .
  }
}
```",2,2,3,2,1,2,2,9,1,1,13091,0.5,7.638252367858234e-05,0.0001527417137620284
617,1,train,Give me the parent of Mieszko II Lambert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parent WHERE {
  ?person rdfs:label ""Mieszko II Lambert""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
427,11,train,Give me the reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?label ?redirect WHERE {
  OPTIONAL { 
    ?party rdfs:label ""Italian People's Party (1994)""@en .
    ?party rdfs:label ?label .
  }
  OPTIONAL {
    ?party dbo:wikiPageRedirects ?redirect .
    ?redirect rdfs:label ?redirectLabel .
  }
}
```",2,2,3,2,1,3,3,71,0,1,2,0.0,0.0,0
92,7,train,Give me the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,2,train,Give me the military force of Napoleonic Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryForce WHERE {
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:participatedIn ?event .
  ?event rdfs:label ""Napoleonic Wars""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1051,0,0.0,0
392,10,train,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?region ?sportEvent WHERE {
  ?place rdfs:label ""Aguilar de Segarra""@en .
  ?place dbo:timeZone ?timezone .
  ?timezone dbo:region ?region .
  
  OPTIONAL {
    ?region dbo:sport ?sport .
    ?sport dbo:event ?sportEvent .
  }
}
```",2,3,3,2,1,2,3,28,0,0,49990,0,0.0,0
92,12,train,Give me the associated musical artist of Jim Sheppard and band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedArtist WHERE {
  ?person rdfs:label ""Jim Sheppard""@en .
  ?person dbo:associatedBand ?band .
  ?band rdfs:label ?associatedArtist .
}

UNION

SELECT ?bandName WHERE {
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbo:band ?band .
  ?band rdfs:label ?bandName .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
378,11,train,Give me the war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:militaryConflict ?war .
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
54,9,train,Give me the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?individual WHERE {
  ?individual dbo:child dbr:Thinkhaya_of_Pagan .
  ?individual dbo:parent dbr:Thado_Minsaw_of_Prome .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,11,train,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  ?seleucus rdfs:label ""Seleucus II Callinicus""@en .
  ?seleucus dbo:child ?child .
  ?child dbo:child ?grandchild .
  
  OPTIONAL { ?grandchild dbo:royalTitle ?title . }
  FILTER (BOUND(?title))
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
747,0,train,Give me the person born on 1985-04-29.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (xsd:date(?date) = ""1985-04-29""^^xsd:date)
}
```",1,1,2,1,1,3,3,71,30,0,0,1.0,1.0,1.0
318,5,train,Give me the person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?eelpiePublishing a dbo:Company ;
                    rdfs:label ""Eel Pie Publishing""@en .
  
  OPTIONAL { 
    ?eelpiePublishing dbo:foundingYear ?foundingYear . 
  }
  
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate .

  FILTER (YEAR(?birthDate) = ?foundingYear)
}
```",2,2,3,2,1,2,2,9,0,0,2810,0,0.0,0
232,11,train,Give me the child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?person rdfs:label ""John Devon Roland Pertwee""@en .
  ?person dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
547,1,train,Give me the resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?burialPlace WHERE {
  ?person rdfs:label ""Simon Cadell""@en .
  ?person dbo:birthName ""Simon Cadell"" .
  ?person dbo:deathPlace ?burialPlace .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
378,7,train,"Give me the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?event WHERE {
  ?person rdfs:label ""Thomas Trigge""@en .
  ?event dbo:participant ?person ;
         rdf:type dbo:MilitaryConflict, dbo:SocietalEvent, dbo:Event .
}
```",1,4,2,1,1,3,3,71,0,0,7,0,0.0,0
754,6,train,Give me the parent of Loe Thai and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person (IF(?person1Label = ""Loe Thai""@en, ""Parent of Loe Thai"", ""Parent of May Hnin Thwe-Da"") AS ?parentOf) ?parent WHERE {
  OPTIONAL {
    ?loeThai rdfs:label ""Loe Thai""@en .
    ?loeThai dbo:parent ?parent .
    ?parent rdfs:label ?person1Label .
  }
  
  OPTIONAL {
    ?mayHninThweDa rdfs:label ""May Hnin Thwe-Da""@en .
    ?mayHninThweDa dbo:parent ?parent .
    ?parent rdfs:label ?person2Label .
  }

  BIND(IF(?loeThai != '', ?person1Label, ?person2Label) AS ?person)
}
```",2,2,3,1,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
767,14,train,Give me the reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?character rdfs:label ""Black Hood""@en .
  ?character dbo:secretIdentity ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
626,3,train,"Give me the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?conflict WHERE {
  ?person rdfs:label ""Alexander I of Russia""@en .
  ?person dbo:participatedIn ?conflict .
}
```",1,2,2,1,1,3,2,20,0,0,25,0,0.0,0
996,9,train,Who is the awardee of the elevation of Lac d'Avoriaz?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity WHERE {
  ?lake rdfs:label ""Lac d'Avoriaz""@en .
  ?lake dbo:elevation ?elevation .
  OPTIONAL { ?elevation dbo:awardee ?entity . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
827,5,train,"Who is the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894)?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?person rdfs:label ""Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?person dbo:child ?child .
  ?child rdf:type ?type .
  FILTER (
    ?type IN (dbo:Monarch, dbo:RoyalFamilyMember) &&
    EXISTS { ?child rdfs:label ?label . FILTER(lang(?label) = ""en"") }
  )
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
528,3,train,"Give me the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?event WHERE {
  ?event rdf:type dbo:Event .
  ?event dbo:location ?place .
  ?place rdfs:label ""Chile""@en .
}
```",1,2,2,1,1,3,3,71,0,54,34,0.0,0.0,0
392,5,train,"Give me the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?residence WHERE {
  ?person rdfs:label ""Sebastiano Bianchetti""@en .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement .
  ?residence dbo:country dbr:Italy .
}
```",1,3,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
801,10,train,Give me the associated musical artist of Chris Taylor (music producer) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?artist WHERE {
  ?person rdfs:label ""Chris Taylor (music producer)""@en .
  ?person dbo:associatedBand ?band ;
          dbo:profession ?profession .
  FILTER(?profession = dbpedia:MusicProducer)
  ?band dbo:member ?artist .
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
303,10,train,"Give me the entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country ?subCountry WHERE {
  ?place rdfs:label ""El Valle de Antón""@en .
  ?place dbo:country ?country .

  ?entity dbo:country ?country .
  ?entity rdf:type dbo:Country .
  FILTER(?entity != ?place)
}
```",2,3,3,2,1,2,3,28,0,1,991,0.0,0.0,0
54,2,train,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  ?person rdfs:label ""Ameitta Thiri Maha Dhamma Dewi""@en .
  ?succession dbo:successor ?person .
  ?succession dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
747,11,train,Give me the person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?pavloKhudzik rdf:type dbo:Person ;
                rdfs:label ""Pavlo Khudzik""@en .
  ?pavloKhudzik dbo:birthDate ?birthDate .

  OPTIONAL { 
    ?person rdf:type dbo:Person ;
            dbo:birthDate ?birthDate .
    FILTER(?person != ?pavloKhudzik)
  }
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
404,16,train,"Who is the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?prince rdfs:label ""Prince George William of Hanover""@en .
  ?prince dbo:parent ?parent .

  ?parent dbo:child ?child .
  
  FILTER EXISTS { 
    ?child rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""royalty"") || CONTAINS(LCASE(?label), ""king"") || CONTAINS(LCASE(?label), ""queen""))
  }
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
421,1,train,Give me the native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Socialist Federal Republic of Yugoslavia""@en .
}
```",1,1,2,1,1,2,3,28,5399,0,0,1.0,1.0,1.0
498,5,train,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedBand WHERE {
  ?solace rdfs:label ""Solace of Requiem""@en .
  ?solace a dbo:Band ;
          a dbo:Organization .

  OPTIONAL { 
    ?solace dbo:member|dbo:collaboration ?relatedEntity .
    ?relatedEntity a dbo:Band .
    BIND(?relatedEntity AS ?associatedBand)
  }
}
```",2,4,3,2,1,2,2,9,0,0,11,0,0.0,0
427,17,train,"Who is the person born, that is an office holder and a politician, as the birth name of Romano Prodi?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  ?person dbo:birthName ""Romano Prodi""@en .
  ?person rdf:type dbo:OfficeHolder .
  ?person rdf:type dbo:Politician .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
360,4,train,"Give me the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?deathPlace WHERE {
  ?person rdfs:label ""Winnie Madikizela-Mandela""@en .
  ?person dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .
}
```",1,2,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
547,11,train,Give me the resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?restingPlace WHERE {
  ?jamesBurton rdfs:label ""James Burton (property developer)""@en .
  ?child dbo:childOf ?jamesBurton .
  ?child dbo:finalRestingPlace ?restingPlace .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
617,8,train,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandparent WHERE {
  ?richeza rdfs:label ""Richeza of Poland""@en .
  ?richeza dbo:father ?father .
  ?father dbo:father|dbo:mother ?grandparent .
  
  OPTIONAL { ?grandparent dbo:royalTitle ?title . }
  FILTER EXISTS { ?grandparent dbo:royalTitle ?title }
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
391,10,train,"Give me the actor of All About the Andersons and native of Compton, California.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actor WHERE {
  ?movie rdfs:label ""All About the Andersons""@en .
  ?movie dbo:starring ?actor .
  
  OPTIONAL { 
    ?actor dbo:birthPlace ?place .
    ?place rdfs:label ""Compton, California""@en .
  }
}
```",2,2,3,1,2,3,3,71,1,3,0,0.25,1.0,0.4
994,9,train,Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandLabel ?associatedArtistLabel WHERE {
  VALUES (?bandLabel) { ""Red Tide (band)"" ""S.A. Slayer"" }
  
  ?band rdfs:label ?bandLabel .
  FILTER(LANG(?bandLabel) = 'en')
  
  OPTIONAL {
    ?band dbo:associatedBand ?artist .
    ?artist rdfs:label ?associatedArtistLabel .
    FILTER(LANG(?associatedArtistLabel) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
547,10,train,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?burialPlace WHERE {
  { 
    ?person rdfs:label ""James Burton (Egyptologist)""@en .
    OPTIONAL { ?person dbo:deathPlace ?burialPlace . }
    OPTIONAL { ?person dbo:placeOfBurial ?burialPlace . }
  } UNION
  { 
    ?person rdfs:label ""Alan Cunningham""@en .
    OPTIONAL { ?person dbo:deathPlace ?burialPlace . }
    OPTIONAL { ?person dbo:placeOfBurial ?burialPlace . }
  }
}
```",2,2,3,1,2,3,3,71,0,2,1,0.0,0.0,0
251,4,train,"Give me the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?party WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:member ?leader .
  ?party dbo:region dbp:Sicily .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
915,0,train,"Give me the resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?resident WHERE {
  ?location rdfs:label ""Springfield, Illinois""@en .
  ?location dbo:residents ?resident .
}
```",1,1,2,1,1,3,2,20,0,0,15,0,0.0,0
294,9,train,"Give me the resting place of Edwin A. Keeble and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query to find the resting place of Edwin A. Keeble
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace WHERE {
  ?person rdfs:label ""Edwin A. Keeble""@en .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}

# Query to find an entity in Nashville, Tennessee
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT DISTINCT ?entity WHERE {
  ?entity dbo:location ?place .
  ?place rdfs:label ""Nashville, Tennessee""@en .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
9,5,train,"Give me the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?medal ?description WHERE {
  ?medal rdfs:label ""Royal Medal""@en .
  OPTIONAL { ?medal dbo:description ?description . }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
754,1,train,Give me the parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?person rdfs:label ""May Hnin Thwe-Da""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
77,7,train,Give me the war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?war WHERE {
  ?person dbo:award ?award .
  ?award rdfs:label ""Golden Weapon for Bravery""@en .
  ?person dbo:participatedIn ?war .
}
```",2,2,3,2,1,3,2,20,0,0,22,0,0.0,0
142,3,train,Give me the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actor WHERE {
  ?movie rdfs:label ""Papa wa Newscaster""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,2,2,9,4,0,0,1.0,1.0,1.0
115,3,train,Who is the awardee of National Order of Scientific Merit?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?person dbo:award <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> .
}
```",1,1,2,1,1,2,2,9,7,6,2,0.5384615384615384,0.7777777777777778,0.6363636363636364
312,4,train,Give me the entity in Italy and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entityInItaly WHERE {
  ?entityInItaly dbo:country dbr:Italy .
}

SELECT ?entityInBergamo WHERE {
  ?entityInBergamo dbo:administrativeArea dbr:Province_of_Bergamo .
}
```",2,2,3,1,2,2,2,9,0,0,228,0,0.0,0
754,2,train,Give me the parent of Min Linka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parent WHERE {
  ?place rdfs:label ""Min Linka""@en .
  ?place dbo:country ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
365,5,train,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:occupation ?occupation .
  
  FILTER (
    (?occupation = dbo:Vocalist || 
     ?occupation = dbo:Musician || 
     ?occupation = dbo:SingerSongwriter)
  )
  
  OPTIONAL { ?person dbo:bandMember ?band . }
}
```",2,4,3,2,1,2,2,9,0,0,2,0,0.0,0
44,4,train,Give me the band member of Undertow (band) and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?memberName WHERE {
  OPTIONAL {
    ?band rdfs:label ""Undertow""@en .
    ?band dbo:bandMember ?person .
    ?person rdfs:label ?memberName .
  }
  
  UNION
  
  OPTIONAL {
    ?band2 rdfs:label ""Sledgeback""@en .
    ?band2 dbo:bandMember ?person2 .
    ?person2 rdfs:label ?memberName .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
528,14,train,Give me the force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryUnit WHERE {
  ?person rdfs:label ""Narciso Campero Leyes""@en .
  ?person dbo:militaryUnit ?militaryUnit .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
994,8,train,"Who is the person born, that is a musical artist, as Donald Maynard Dokken?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Donald Maynard Dokken""@en .
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,10,train,Give me the region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?chiefdom rdfs:label ""Bombali Shebora Chiefdom""@en .
  ?chiefdom dbo:timeZone ?timezone .
  ?timezone dbo:region ?region .
}
```",2,2,3,2,1,2,3,28,0,0,2484,0,0.0,0
996,4,train,Who is the native of Palestine (region)?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  OPTIONAL { 
    ?person dbo:birthPlace ?place .
    ?place rdfs:label ""Palestine""@en .
  }
  OPTIONAL {
    ?person dbo:nationality ?nationality .
    ?nationality rdfs:label ""Palestinian""@en .
  }
}
```",1,1,2,1,1,3,2,20,29,1048547,18,2.765655517578125e-05,0.6170212765957447,5.5310631180128614e-05
365,2,train,"Give me the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?person WHERE {
  ?person rdf:type dbo:Person .
  ?person dbo:occupation ?occupation .
  
  FILTER (
    EXISTS { ?occupation rdfs:label ""Artist""@en }
    && (
      EXISTS { ?occupation rdfs:label ""Vocalist""@en } 
      || EXISTS { ?occupation rdfs:label ""Musician""@en }
      || EXISTS { ?occupation rdfs:label ""Songwriter""@en }
    )
  )
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
314,7,train,Give me the person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Madrid""@en .

  OPTIONAL { 
    ?person dbo:role ?role .
    FILTER(CONTAINS(LCASE(?role), ""commander"") && CONTAINS(LCASE(?role), ""spanish civil war""))
  }
}
```",2,2,3,1,2,2,3,28,0,1346,1,0.0,0.0,0
232,7,train,"Give me the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?person dbo:nationality dbr:France .
  
  { 
    ?person a dbo:Politician .
  }
  UNION
  {
    ?person a dbo:OfficeHolder .
  }
}
```",1,3,2,1,1,3,3,71,148,1010,122,0.12780656303972365,0.5481481481481482,0.20728291316526606
547,9,train,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?burialPlace WHERE {
  { 
    ?person rdfs:label ""James Burton (Egyptologist)""@en .
    OPTIONAL { ?person dbo:placeOfBurial ?burialPlace . }
  } UNION {
    ?person rdfs:label ""Simon Cadell""@en .
    OPTIONAL { ?person dbo:placeOfBurial ?burialPlace . }
  }
}
```",2,2,3,1,2,3,3,71,0,2,1,0.0,0.0,0
429,2,train,Who is the father of Martha Johnson Patterson?,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?person rdfs:label ""Martha Johnson Patterson""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,9,train,Give me the awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:recipientOf dbp:Order_of_Suvorov .
  
  OPTIONAL {
    ?person dbo:militaryCommanderOf ?operation .
    ?operation rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""eastern front"") || CONTAINS(LCASE(?label), ""soviet union""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
747,15,train,"Give me the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Athlete ;
          dbo:sport dbr:Soccer ;
          dbo:placeOfBirth ?location .
  ?location rdfs:label ""Zolotonosha""@en .
  ?person dbo:birthDate ?birthDate .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
435,6,train,Give me the territory administered from Reykjavík and region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country ?timeZone WHERE {
  ?place rdfs:label ""Reykjavík""@en .
  ?place dbo:country ?country .
  ?place dbp:timeZone ?timeZone .
  FILTER (CONTAINS(LCASE(?timeZone), ""gmt"") || CONTAINS(LCASE(?timeZone), ""utc""))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
339,2,train,Who is the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?predecessor WHERE {
  ?person rdfs:label ""Frederick VIII of Denmark""@en .
  ?person dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
142,2,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?timeZone rdfs:label ""Japan Standard Time""@en .
  ?timeZone dbo:region ?region .
}
```",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
747,16,train,"Who is the writer of the work, that is a song, of Amba Shepherd?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?song ?writer WHERE {
  ?song dbo:lyricsBy ?ambashepherd .
  ?ambashepherd rdfs:label ""Amba Shepherd""@en .
  OPTIONAL { ?song dbo:composer ?writer . }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
30,6,train,Give me the professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?profession WHERE {
  ?person rdfs:label ""Édouard Alphonse James de Rothschild""@en .
  ?person dbo:profession ?profession .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
55,0,train,Give me the band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?member WHERE {
  ?band rdfs:label ""Guns N' Roses""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,2,3,28,2,5,53,0.2857142857142857,0.03636363636363636,0.06451612903225805
701,6,train,Give me the child of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""Ramesses II""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
827,7,train,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?grandchild WHERE {
  ?mariaPavlovna rdf:type dbo:Person ;
                 rdfs:label ""Grand Duchess Maria Pavlovna of Russia""@en .
  
  ?mariaPavlovna dbo:child ?child .

  ?child dbo:child ?grandchild .

  OPTIONAL { ?grandchild dbo:royalty ?isRoyalty . FILTER(?isRoyalty != rdf:nil) }
}
```",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
528,1,train,Give me the war of Orozimbo Barbosa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war WHERE {
  ?person rdfs:label ""Orozimbo Barbosa""@en .
  ?person dbo:participatedIn ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict .
  ?conflict rdfs:label ?war .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
487,10,train,"Give me the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthName ""Phil Scott"" .
  ?person dbo:sport dbr:Soccer .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
303,1,train,Give me the entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity WHERE {
  ?entity dbo:country ?panama .
  ?panama rdfs:label ""Panama""@en .
}
```",1,1,2,1,1,2,3,28,991,0,0,1.0,1.0,1.0
492,8,train,"Give me the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?capital WHERE {
  ?algeria rdfs:label ""Algeria""@en .
  ?algeria dbo:capital ?capital .
  ?capital a dbo:Settlement .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
179,7,train,Give me the person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?person rdfs:label ""Sirikit""@en .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
391,5,train,Who is the spouse of Sherry Hormann?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?spouse WHERE {
  ?person rdfs:label ""Sherry Hormann""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
963,2,train,Give me the time zone of Herzegovina-Neretva Canton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?timeZone WHERE {
  ?place rdfs:label ""Herzegovina-Neretva Canton""@en .
  ?place dbo:timezone ?timeZone .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
232,14,train,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native WHERE {
  # Find Sylvie Bermann
  ?sylvie rdfs:label ""Sylvie Bermann""@en .
  
  # Identify her residence, which is a settlement in Britain
  ?sylvie dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement .
  ?residence dbo:country dbr:United_Kingdom .

  # Find natives of this residence (people born there)
  ?native dbo:birthPlace ?residence .
}
```",2,4,3,2,1,3,3,71,9121,0,0,1.0,1.0,1.0
77,0,train,Give me the war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?person rdfs:label ""Alexander Chechenskiy""@en .
  OPTIONAL { ?person dbo:participatedIn ?war . }
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
827,8,train,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child ?father WHERE {
  ?charles a dbo:Person ;
           rdfs:label ""Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach""@en .
  
  ?charles dbo:child ?child .

  FILTER(CONTAINS(LCASE(?childLabel), ""prince"") || CONTAINS(LCASE(?childLabel), ""princess""))
  
  ?child rdfs:label ?childLabel .
  
  OPTIONAL { 
    ?child dbo:father ?father .
  }
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,0,train,Give me the alma mater of Vladimir Cerrón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?university WHERE {
  ?person rdfs:label ""Vladimir Cerrón""@en .
  ?person dbo:almaMater ?university .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
16,4,train,Who is the person born as Ted Martin McGinley?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?fullName WHERE {
  ?person dbo:birthName ""Ted Martin McGinley""@en .
  OPTIONAL { ?person rdfs:label ?fullName FILTER (lang(?fullName) = 'en') }
}
```",1,1,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
44,2,train,Give me the band of John Pettibone.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person rdfs:label ""John Pettibone""@en .
  ?person dbo:band ?band .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,7,train,Give me the birth name of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?person rdfs:label ""Romano Prodi""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
488,7,train,"Who is the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?spouse WHERE {
  ?person rdfs:label ""Tokugawa Masako""@en .
  ?person dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?spouse rdf:type ?royaltyType .
    FILTER (
      ?royaltyType IN (dbo:Monarch, dbo:RoyalFamilyMember)
    )
  }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
701,17,train,"Give me the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?father WHERE {
  ?battle rdfs:label ""Battle of Perire""@en .
  ?battle dbo:commander ?commander .
  ?commander dbo:royalty true .
  ?commander dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
959,12,train,Give me the manager of 2013 Júbilo Iwata season and native of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?manager WHERE {
  ?team dbo:season ""2013"" .
  ?team rdfs:label ""Júbilo Iwata""@en .
  ?team dbo:manager ?manager .
  OPTIONAL { 
    ?manager dbo:nationality <http://dbpedia.org/resource/Japan> .
  }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
232,9,train,Give me the actor of Dog Soldiers (film) and child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  # Find the actor of ""Dog Soldiers""
  ?film rdfs:label ""Dog Soldiers""@en .
  ?film dbo:starring ?actor .

  # Find the child of Jon Pertwee
  ?person rdfs:label ""Jon Pertwee""@en .
  ?person dbo:child ?actor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,4,train,"Who is the child, that is a royalty, of Seleucus II Callinicus?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""Seleucus II Callinicus""@en .
  ?person dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
294,3,train,"Who is the awardee, that is a politician, of Distinguished Service Medal (U.S. Army)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?person WHERE {
  ?person dbo:award dbr:Distinguished_Service_Medal_(U.S._Army) .
  ?person rdf:type dbo:Politician .
}
```",1,2,2,1,1,2,3,28,0,0,11,0,0.0,0
547,16,train,Give me the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?otherActor WHERE {
  ?show dbo:actor ?emily .
  ?emily rdfs:label ""Emily Richard""@en .
  
  ?show dbo:actor ?otherActor .
  FILTER(?otherActor != ?emily)
}
```",2,2,3,2,1,3,3,71,0,0,22,0,0.0,0
659,6,train,"Give me the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?war WHERE {
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  ?regiment dbo:participatedIn ?war .
  ?war rdf:type dbo:MilitaryConflict .
}
```",1,3,2,1,1,3,3,71,0,0,19,0,0.0,0
182,0,train,Give me the war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?person rdfs:label ""Mahesh Senanayake""@en .
  ?person dbo:participatedIn ?war .
  FILTER (isLiteral(?war) = false)
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
54,14,train,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?predecessor WHERE {
  ?thihapate rdf:type dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .
  
  ?child dbo:parent ?thihapate ;
         rdf:type dbo:OfficeHolder, dbo:Royalty .

  OPTIONAL { 
    ?officeHolderPosition dbo:predecessor ?predecessor .
    ?child dbo:positionHeld ?officeHolderPosition .
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
339,8,train,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?father WHERE {
  ?grandDuchess rdfs:label ""Grand Duchess Elena Vladimirovna of Russia""@en .
  ?child dbo:childOf ?grandDuchess .
  ?child dbo:father ?father .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
77,10,train,"Who is the mayor of the territory administered, that is an organisation, from Warsaw?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?mayor WHERE {
  ?organisation dbo:location ?place .
  ?place rdfs:label ""Warsaw""@en .
  
  OPTIONAL { 
    ?organisation dbo:administers ?territory .
    
    ?territory dbo:mayor ?mayor .
  }
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
318,3,train,Give me the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?profession WHERE {
  ?person rdfs:label ""Robert Xavier Rodriguez""@en .
  ?person dbo:profession ?profession .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
963,7,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone ?tz .
  FILTER (CONTAINS(LCASE(?tz), ""central european time""))
}
```",2,3,3,2,1,3,2,20,0,0,173261,0,0.0,0
435,4,train,Give me the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?timezone WHERE {
  ?place rdfs:label ""Bombali Shebora Chiefdom""@en .
  ?place dbo:timeZone ?timezone .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
488,9,train,Give me the death place of Tokugawa Ieyasu and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace ?birthPlace WHERE {
  ?tokugawa rdfs:label ""Tokugawa Ieyasu""@en .
  ?tokugawa dbo:deathPlace ?deathPlace .

  ?enomoto rdfs:label ""Enomoto Takeaki""@en .
  ?enomoto dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
534,7,train,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childBirthPlace WHERE {
  ?desmond a dbo:Politician ;
           foaf:name ""Desmond FitzGerald""@en .
  
  ?desmond dbo:child ?child .

  OPTIONAL { 
    ?child dbo:officeHolder ?office . 
    FILTER EXISTS { ?office rdfs:label ?officeLabel }
  }

  OPTIONAL {
    ?child dbo:positionHeld ?position .
    FILTER EXISTS { ?position rdfs:label ?positionLabel }
  }

  ?child dbo:birthPlace ?childBirthPlace .
}
```",2,4,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
285,4,train,Give me the award of Stan Lee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?award WHERE {
  ?person rdfs:label ""Stan Lee""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,4,5,0.0,0.0,0
534,2,train,"Who is the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person WHERE {
  ?person rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), ""politician"") || CONTAINS(LCASE(?name), ""politicians""))
  ?person dbo:nativePlace ?place .
  ?place rdfs:label ?placeLabel .
  FILTER (CONTAINS(LCASE(?placeLabel), ""essex"") && langMatches(lang(?placeLabel), ""en""))
}
```",1,2,2,1,1,3,2,20,0,0,89,0,0.0,0
161,14,train,"Give me the commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?event WHERE {
  ?mola a dbo:Person ;
        foaf:name ""Emilio Mola""@en .
  
  ?event a dbo:Event ;
         dbo:commander ?mola .

}
```",2,3,3,2,1,3,3,71,0,10,85,0.0,0.0,0
820,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid SPARQL query can be generated due to incomplete question.
```",1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
314,4,train,Give me the award of Sergei Makovetsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?award WHERE {
  ?person rdfs:label ""Sergei Makovetsky""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
404,17,train,Who is the father of the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?princess rdfs:label ""Victoria Louise, Princess Royal""@en .
  ?princess dbo:spouse ?spouse .
  ?spouse dbo:father ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
485,6,train,Give me the entity in United Kingdom and birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace ?ukEntity WHERE {
  ?person rdfs:label ""Thomas Warner (poet)""@en .
  ?person dbo:birthPlace ?birthPlace .

  OPTIONAL {
    ?ukEntity dbo:country dbc:United_Kingdom ;
              dbo:relatedPerson ?person .
  }
}
```",2,2,3,1,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
312,3,train,Give me the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Giorgio Grigolli""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
232,8,train,"Give me the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?residence WHERE {
  ?person rdfs:label ""Sylvie Bermann""@en .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement .
  ?residence dbo:country ?country .
  FILTER (lang(?countryLabel) = 'en' && str(?countryLabel) = ""United Kingdom"")
  BIND(lang(?countryLabel) AS ?language)
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
747,4,train,Give me the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthDate WHERE {
  ?person rdfs:label ""Pavlo Khudzik""@en .
  ?person dbo:birthDate ?birthDate .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
197,1,train,Give me the birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""George Lusztig""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
312,1,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity WHERE {
  ?entity dbo:country ?country .
  ?country rdfs:label ""Italy""@en .
}
```",1,1,2,1,1,2,2,9,13092,0,0,1.0,1.0,1.0
9,17,train,"Give me the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://dbpedia.org/property/nickname> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?nickname WHERE {
  ?entity a dbo:EducationalInstitution ;
          dbo:organizationalUnit ?org .
  ?entity dbo:nickName ?nickname .
  ?location dbo:country dbr:Northern_Ireland ;
            dbo:administrativeArea ?entity .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
16,17,train,Give me the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?alumnus ?birthName WHERE {
  ?alumnus dbo:almaMater dbpedia:Ohio_State_University .
  ?alumnus dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,0,90,0,0.0,0
429,4,train,Give me the country of 77th Ohio Infantry Regiment and administration of Andrew Johnson.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?country WHERE {
  {
    ?regiment rdfs:label ""77th Ohio Infantry Regiment""@en .
    ?regiment dbo:country ?country .
  }
  UNION
  {
    ?person rdfs:label ""Andrew Johnson""@en .
    ?person dbo:presidentOf ?administration .
    ?administration dbo:country ?country .
  }
}
```",2,2,3,1,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
360,2,train,Give me the reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?manfredMann WHERE {
  ?manfredMann rdfs:label ""Manfred Mann""@en .
}
```",1,1,2,1,1,2,3,28,1,1,1,0.5,0.5,0.5
487,5,train,"Give me the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthDate ?birthPlace WHERE {
  ?person rdfs:label ""Philip Brian Scott""@en .
  ?person dbo:sport dbr:Soccer .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
994,6,train,"Give me the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  ?meshuggah dbo:member ?bandMember .
  FILTER (CONTAINS(LCASE(STR(?meshuggah)), ""meshuggah"")) .

  OPTIONAL { ?bandMember dbo:member ?otherBand1 . }
  OPTIONAL { ?bandMember dbo:member ?otherBand2 . }
  OPTIONAL { ?bandMember dbo:member ?otherBand3 . }

  FILTER (BOUND(?otherBand1) || BOUND(?otherBand2) || BOUND(?otherBand3))
}
```",1,4,2,1,1,3,3,71,0,0,6,0,0.0,0
427,8,train,"Who is the person born, that is an office holder and a politician, as Romano Antonio Prodi?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolder ?office ;
          dbo:birthPlace ?place .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,13,train,Give me the band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?band WHERE {
  ?song rdfs:label ""Apollo""@en .
  ?song dbo:artist <http://dbpedia.org/resource/Hardwell> .
  ?song dbo:lyricist ?writer .
  OPTIONAL { ?writer dbo:band ?band . }
}
```",2,2,3,2,1,3,3,71,0,0,13,0,0.0,0
626,9,train,"Give me the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?force WHERE {
  ?battle rdfs:label ""Battle of Paris (1814)""@en .
  ?battle dbo:commander ?commander .
  ?commander dbo:participatedIn ?force .
}
```",2,3,3,2,1,3,2,20,0,0,77,0,0.0,0
754,7,train,Give me the parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandparent WHERE {
  ?person rdfs:label ""May Hnin Htapi""@en .
  OPTIONAL { ?person dbo:spouse ?parent . }
  OPTIONAL { ?parent dbo:spouse ?grandparent . }
}
```",2,2,3,2,1,3,2,20,0,2,1,0.0,0.0,0
92,8,train,Give me the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?label WHERE {
  ?person dbo:birthName ""Joseph Michael Furney"" .
  OPTIONAL { ?person rdfs:label ?label . FILTER (lang(?label) = 'en') }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,5,train,"Give me the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?yugrupa rdfs:label ""YU Grupa""@en .
  ?member dbo:band ?yugrupa .
}
```",1,2,2,1,1,3,2,20,0,0,8,0,0.0,0
659,11,train,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?subordinate WHERE {
  ?wellington rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  ?wellington dbo:commander ?subordinate .
}
```",2,2,3,2,1,3,3,71,0,0,175,0,0.0,0
963,8,train,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?rulingParty ?administration WHERE {
  ?place rdfs:label ""Sremski Karlovci""@en .
  ?place dbo:rulingParty ?rulingParty .
  OPTIONAL { 
    ?rulingParty dbo:administration ?administration .
  }
}
```",2,3,3,2,1,3,2,20,0,0,86,0,0.0,0
77,5,train,Who is the mayor of Congress Poland?,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mayor WHERE {
  ?place rdfs:label ""Congress Poland""@en .
  ?place dbo:mayor ?mayor .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
54,17,train,"Give me the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?child WHERE {
  ?thihapate dbo:child ?child .
  FILTER(STRSTARTS(STR(?thihapate), ""http://dbpedia.org/resource/Thihapate_of_Mohnyin""))
  ?child rdf:type dbo:OfficeHolder .
  ?child rdf:type dbo:RoyalPerson .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
345,8,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          a dbo:Manager ;
          dbo:birthDate ""1978-09-15""^^xsd:date .
  
  OPTIONAL { ?person dbo:currentTeam ?team . }
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
251,9,train,Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration ?deathPlace WHERE {
  # Part 1: Administration of Forza Italia in 2013
  ?party rdfs:label ""Forza Italia""@en .
  ?party dbo:member ?person .
  ?person dbo:office ?office .
  ?office dbo:startDate ?start .
  ?office dbo:endDate ?end .
  FILTER (?start <= ""2013-01-01""^^xsd:date && (?end >= ""2013-12-31""^^xsd:date || NOT EXISTS { ?office dbo:endDate ?end }))
  BIND(?person AS ?administration)

  # Part 2: Death place of Laura Mancinelli
  ?individual rdfs:label ""Laura Mancinelli""@en .
  ?individual dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
404,4,train,"Who is the person born, that is a royalty, as Princess Victoria Louise of Prussia?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?person dbo:birthName ""Princess Victoria Louise of Prussia"" .
  ?person rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,3,train,"Give me the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?child WHERE {
  ?boleslaus rdfs:label ""Boleslaus I, Duke of Bohemia""@en .
  ?boleslaus dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
92,5,train,Give me the actor of Return to Nuke 'Em High Volume 1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actor WHERE {
  ?movie rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,1,19,0.0,0.0,0
345,7,train,Give me the figure known as the nickname of FC Vaduz.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?nickname WHERE {
  ?team rdfs:label ""FC Vaduz""@en .
  ?team dbo:commonName ?nickname .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
959,7,train,"Who is the manager, that is a sports manager, of 1998 Kashima Antlers season?",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?manager WHERE {
  ?season rdf:type dbo:SoccerSeason ;
          dbo:sportTeam ?team .
  ?team rdfs:label ""Kashima Antlers""@en .
  FILTER(YEAR(?season) = 1998)
  
  ?season dbo:manager ?manager .
  ?manager rdf:type dbo:SportsManager .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
485,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?entity ?label WHERE {
  ?entity dbo:country dbc:United_Kingdom .
  ?entity rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,42999,0,0.0,0
959,14,train,Give me the manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?manager WHERE {
  ?person rdfs:label ""Takashi Sekizuka""@en .
  ?person dbo:memberOfTeam ?team .
  ?team dbo:manager ?manager .
}
```",2,2,3,2,1,3,3,71,0,0,10,0,0.0,0
701,15,train,Give me the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?child WHERE {
  ?person rdfs:label ""Amun-her-khepeshef""@en .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,6,0,0,1.0,1.0,1.0
963,6,train,Give me the entity in Serbia and administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Serbia .
  ?entity dbo:party dbr:Serbian_Progressive_Party .
}
```",2,2,3,1,2,3,2,20,0,0,84,0,0.0,0
528,17,train,Give me the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?fullName WHERE {
  ?person dbo:birthName ""Narciso Campero"" .
  OPTIONAL { ?person rdfs:label ?fullName . FILTER (lang(?fullName) = 'en') }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,7,train,Give me the reference to Rutger Jan Schimmelpenninck.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?uri WHERE {
  ?resource rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  VALUES ?uri { <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
421,0,train,Give me the band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember WHERE {
  ?person rdfs:label ""Senidah""@en .
  ?person dbo:bandMember ?bandMember .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
281,10,train,"Give me the war of New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war WHERE {
  { 
    ?nzArmy rdfs:label ""New Zealand Army""@en .
    ?nzArmy dbo:participatedIn ?war .
  }
  UNION
  {
    ?beauchampSeymour rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .
    ?beauchampSeymour dbo:participatedIn ?war .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,7,train,Give me the death place of Laura Mancinelli and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace WHERE {
  ?person rdfs:label ""Laura Mancinelli""@en .
  ?person dbo:deathPlace ?deathPlace .
}

UNION

SELECT ?location WHERE {
  ?battle rdfs:label ""Battle of Marengo""@en .
  ?battle dbp:location ?location .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
498,4,train,Give me the band of Malevolent Creation and band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?individualLabel ?bandLabel WHERE {
  VALUES ?individualLabel { ""Malevolent Creation""@en ""Will Rahmer""@en }
  
  ?individual rdfs:label ?individualLabel .
  OPTIONAL {
    ?individual dbo:band ?band .
    ?band rdfs:label ?bandLabel .
  }
}
```",2,2,3,1,2,2,2,9,0,2,1,0.0,0.0,0
492,16,train,"Give me the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war WHERE {
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Verdun""@en .

  ?commander dbo:participatedIn ?war .
  
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type rdfs:Class .
}
```",2,4,3,2,1,3,3,71,0,0,11,0,0.0,0
465,1,train,Give me the administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office WHERE {
  ?party rdfs:label ""Czech Pirate Party""@en .
  ?party dbo:officeHolder ?office .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
528,0,train,Give me the war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war WHERE {
  ?person rdfs:label ""Irene Morales""@en .
  ?person dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
487,7,train,Give me the country of the administration of Patricia McCoy.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v1 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?country WHERE {
  ?person rdfs:label ""Patricia McCoy""@en .
  ?office dbo:positionHeldBy ?person ;
          dbo:country ?country .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
994,12,train,Give me the band member of Don Dokken and associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
# Query for band members of Don Dokken
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?band rdfs:label ""Dokken""@en .
  ?band dbo:leadMember ?dokken .
  ?dokken foaf:name ""Don Dokken"" .
  ?band dbo:bandMember ?member .
}

UNION

# Query for associated musical artists of Red Tide
SELECT ?associatedArtist WHERE {
  ?redTide rdfs:label ""Red Tide (band)""@en .
  ?redTide dbo:bandMember ?member .
  ?member dbo:associatedBand ?associatedArtist .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,3,train,"Give me the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?leader ?party ?organization WHERE {
  ?chamber rdfs:label ""Chamber of Deputies (Czech Republic)""@en .
  ?chamber dbo:leader ?leader .
  ?leader dbo:politicalParty ?party .
  ?leader dbo:organization ?organization .
}
```",1,3,2,1,1,2,2,9,0,0,5,0,0.0,0
659,4,train,"Give me the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryRank WHERE {
  ?person rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  ?person dbo:militaryRank ?militaryRank .
}
```",1,1,2,1,1,3,3,71,0,0,52,0,0.0,0
827,1,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?father WHERE {
  ?person rdfs:label ""William Ernest, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,4,train,Give me the death place of Jiřina Štěpničková and administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?deathPlace ?administration WHERE {
  # Query for Jiřina Štěpničková's death place
  ?person rdfs:label ""Jiřina Štěpničková""@en .
  ?person dbo:deathPlace ?deathPlace .

  # Query for Czech Pirate Party's administration
  ?party rdfs:label ""Czech Pirate Party""@en .
  ?party dbo:administrator ?administration .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
492,17,train,"Give me the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?capital WHERE {
  ?district rdfs:label ""Khemis Miliana District""@en .
  ?district dbo:country ?country .
  ?country dbp:capital ?capital .
  ?capital a dbo:Settlement .
}
```",2,3,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
427,1,train,Give me the party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?party WHERE {
  ?person rdfs:label ""Giulio Andreotti""@en .
  ?person dbo:party ?party .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
161,12,train,Give me the commander in Biscay Campaign and military force of Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?militaryForce WHERE {
  ?campaign rdfs:label ""Biscay Campaign""@en .
  OPTIONAL { ?campaign dbo:commander ?commander . }
  OPTIONAL { ?campaign dbo:militaryForce ?militaryForce . }
}
```",2,2,3,1,2,3,3,71,3,2,0,0.6,1.0,0.7499999999999999
994,13,train,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?associatedBand WHERE {
  ?meshuggahMember dbo:member ?band .
  FILTER(STR(?band) = ""Meshuggah"")
  
  ?meshuggahMember dbo:associatedBand ?associatedBand .
  
  ?associatedBand rdf:type dbo:MusicalArtist ;
                  rdf:type dbo:Organization .
}
```",2,5,3,2,1,3,3,71,0,0,33,0,0.0,0
30,1,train,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person rdfs:label ""François Pinault""@en .
  
  # Check for financier and businessman roles
  VALUES ?occupation { dbo:Financier dbo:Businessman }
  ?person dbo:occupation ?occupation .

  # Check for vineyard ownership
  ?vineyard dbo:owner ?person ;
            a dbo:Vineyard .
  
  # Check for art collection involvement
  ?artCollection dbo:collector ?person ;
                 a dbo:ArtCollection .

  # Check for racehorse owner/breeder role
  ?raceHorse dbo:breeder ?person ;
             a dbo:Horse .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,0,train,Give me the reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?s WHERE {
  ?s rdfs:label ""Partito Popolare Italiano""@en .
}
```",1,1,2,1,1,3,3,71,0,1,2,0.0,0.0,0
404,1,train,Give me the parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parent WHERE {
  ?person rdfs:label ""Prince Ernest Augustus of Hanover""@en .
  FILTER(YEAR(?person dbo:birthday) = 1914)
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
659,13,train,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commander ?event WHERE {
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  ?regiment dbo:event ?event .
  ?event rdf:type ?eventType .
  FILTER (?eventType IN (dbo:MilitaryConflict, dbo:War)) .
  ?event dbo:commander ?commander .
}
```",2,4,3,2,1,3,3,71,0,0,130,0,0.0,0
498,0,train,Give me the band of Malevolent Creation.,SELECT ?result WHERE { <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?member WHERE {
  ?band rdfs:label ""Malevolent Creation""@en .
  ?band a dbo:Band .
  ?band dbo:member ?member .
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
996,10,train,Give me the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?award WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Palestine (region)""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",2,2,3,2,1,3,2,20,4,50,10,0.07407407407407407,0.2857142857142857,0.11764705882352941
959,10,train,Give me the manager of 2013 Júbilo Iwata season and member of University of Tsukuba.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?team rdfs:label ""Júbilo Iwata""@en .
  ?team dbo:season ?season .
  ?season dbo:year ""2013""^^xsd:gYear .
  ?season dbo:manager ?manager .

  OPTIONAL { 
    ?manager dbo:almaMater ?university .
    ?university rdfs:label ""University of Tsukuba""@en .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
92,13,train,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?artist WHERE {
  ?person rdfs:label ""Jim Sheppard""@en .
  ?person a dbo:Artist .
  OPTIONAL { ?person dbo:associatedBand ?band . }
  ?band dbo:member ?artist .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
197,5,train,Give me the birthplace of the member of FC Politehnica Timișoara.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?player ?birthPlace WHERE {
  ?club rdfs:label ""FC Politehnica Timișoara""@en .
  ?club dbo:member ?player .
  ?player a dbo:Player .
  OPTIONAL { ?player dbo:birthPlace ?birthPlace . }
}
```",2,2,3,2,1,2,2,9,0,0,171,0,0.0,0
981,1,train,Give me the birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Novia Indriani Mamuaja""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
534,6,train,Give me the headquarter of Royal Dublin Society and birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?headquarter ?birthPlace WHERE {
  # Query for the headquarters of Royal Dublin Society
  ?society rdfs:label ""Royal Dublin Society""@en .
  ?society dbo:headquarter ?headquarter .

  # Query for the birthplace of Garret FitzGerald
  ?person rdfs:label ""Garret FitzGerald""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
783,0,train,Give me the associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?artist WHERE {
  ?appietus rdf:type dbo:MusicProducer .
  ?appietus rdfs:label ""Appietus""@en .
  
  OPTIONAL { 
    ?appietus dbo:associatedBand ?band .
    ?band dbo:member ?artist .
  }
  
  OPTIONAL {
    ?collaboration dbo:producer ?appietus ;
                   dbo:performer ?artist .
  }

  FILTER (lang(?artist) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,15,0,0.0,0
963,10,train,"Give me the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?rulingParty WHERE {
  ?location dbo:postalCode ""21205"" .
  ?location dbo:rulingParty ?party .
  ?party a dbo:PoliticalParty .
  BIND(?party AS ?rulingParty)
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
427,15,train,Give me the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?partyName WHERE {
  ?person rdfs:label ""Michele Pinto""@en .
  ?person dbo:party ?party .
  ?party rdfs:label ?partyName .
}
```",2,2,3,2,1,3,3,71,0,2,4,0.0,0.0,0
981,0,train,Give me the entity in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entityLabel WHERE {
  ?entity dbo:country dbr:Indonesia .
  ?entity rdfs:label ?entityLabel .
  FILTER(LANG(?entityLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,2762,2949,0.0,0.0,0
360,6,train,Give me the writer of The Roaring Silence and native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?writer WHERE {
  ?book rdfs:label ""The Roaring Silence""@en .
  ?book dbo:author ?writer .
  OPTIONAL { 
    ?writer dbo:nativePlace ?nativePlace .
    FILTER (CONTAINS(LCASE(STR(?nativePlace)), LCASE(""johannesburg"")))
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
492,6,train,"Give me the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?person rdfs:label ""Frédéric-Georges Herr""@en .
  ?person dbo:participatedIn ?war .
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:Event .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
712,0,train,Give me the capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?capital WHERE {
  ?country rdfs:label ""Russian Soviet Federative Socialist Republic""@en .
  ?country dbo:capital ?capital .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
392,4,train,"Give me the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?timezone WHERE {
  ?place rdfs:label ""Aguilar de Segarra""@en .
  ?event dbo:sportEvent ?place .
  ?event dbo:timeZone ?timezone .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
617,9,train,Give me the spouse of Laodice IV and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?spouse WHERE {
  ?laodiceIV rdfs:label ""Laodice IV""@en .
  ?laodiceIV dbo:childOf ?antiochusIII .
  ?antiochusIII rdfs:label ""Antiochus III the Great""@en .
  ?laodiceIV dbo:spouse ?spouse .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
378,6,train,Who is the commander in Peninsular War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?commander WHERE {
  ?war rdfs:label ""Peninsular War""@en .
  ?war dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,37,0,0,1.0,1.0,1.0
281,4,train,Who is the awardee of Knight Grand Cross of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:award <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
}
```",1,1,2,1,1,3,3,71,544,27,14,0.9527145359019265,0.974910394265233,0.9636846767050486
959,8,train,Give me the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?team WHERE {
  ?person rdfs:label ""Takashi Sekizuka""@en .
  ?person dbo:team ?team .
}
```",1,1,2,1,1,3,3,71,0,3,10,0.0,0.0,0
547,7,train,Give me the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?award WHERE {
  ?person rdfs:label ""Gerald Graham""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
838,2,train,"Give me the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?band WHERE {
  ?band a dbo:Band ;
        a dbo:MusicalGroup .
  ?member dbo:member ?band .
  ?member rdfs:label ""Žika Jelić""@en .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
378,0,train,Give me the war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
547,8,train,Give me the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?recipient WHERE {
  ?award rdfs:label ""Knight Grand Cross of the Order of St Michael and St George""@en .
  ?award dbo:recipient ?recipient .
}
```",1,1,2,1,1,3,3,71,0,0,61,0,0.0,0
485,3,train,"Give me the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?region dbo:timeZone ?tz .
  FILTER (str(?tz) = ""Western European Time"")
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
778,6,train,Give me the entity in United States and author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity ?author WHERE {
  ?chroot rdfs:label ""Chroot""@en .
  ?chroot dbo:creator ?author .
  OPTIONAL { ?author dbo:country ?country . FILTER (str(?country) = ""United States"") }
  ?entity dbo:subject ?chroot .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
617,5,train,"Give me the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?father WHERE {
  ?richeza rdfs:label ""Richeza of Poland, Queen of Hungary""@en .
  ?richeza dbo:father ?father .
  ?father rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
959,5,train,"Who is the leader, that is a politician, of 2010 Japanese House of Councillors election?",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?leader WHERE {
  ?election rdfs:label ""2010 Japanese House of Councillors election""@en .
  ?election dbo:winner ?party .
  ?party dbo:leader ?leader .
  FILTER (isLiteral(?leader))
}
```",1,2,2,1,1,3,3,71,0,0,9,0,0.0,0
30,2,train,Give me the birthplace of Silvia Cohen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Silvia Cohen""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
77,3,train,Who is the awardee of Golden Weapon for Bravery?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?award rdfs:label ""Golden Weapon for Bravery""@en .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,2,20,0,0,10,0,0.0,0
232,16,train,"Give me the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?film ?militaryConflict WHERE {
  ?person rdfs:label ""Morgan Freeman""@en .
  ?person dbo:profession dbr:Actor ;
          dbo:profession dbr:Narrator ;
          dbo:profession dbr:Film_producer .

  OPTIONAL { ?person dbo:film ?film . }
  
  OPTIONAL {
    ?work rdfs:label ?militaryConflictLabel .
    ?work dbo:genre dbr:Military_film ;
          dbo:starring ?person .
    FILTER (CONTAINS(LCASE(?militaryConflictLabel), ""war"") || CONTAINS(LCASE(?militaryConflictLabel), ""conflict""))
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
281,7,train,"Who is the professional, that is an office holder and a politician, in New Zealand Army?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person WHERE {
  ?person dbo:position ?position .
  ?position rdfs:label ""New Zealand Army""@en .
  
  OPTIONAL { 
    ?person dbo:politicalParty ?party .
  }
  
  FILTER EXISTS { ?person dbo:politicalAffiliation ?affiliation . }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,17,train,Who is the person born as the persona of Shèna?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Shèna""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
783,8,train,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember WHERE {
  ?person rdfs:label ""Priscilla Opoku-Kwarteng""@en .
  ?person a dbo:MusicalArtist ;
          dbo:musicalArtist ?musicalArtist .
  
  OPTIONAL { 
    ?musicalArtist dbo:bandMember ?bandMember .
  }
}
```",2,4,3,2,1,3,2,20,0,0,7,0,0.0,0
378,9,train,Give me the war of Joaquín Blake and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?war WHERE {
  VALUES ?person { 
    dbr:Joaquín_Blake 
    dbr:Carl_Pontus_Gahn
  }
  
  ?person dbo:participatedIn ?war .
  ?war rdfs:label ?warLabel .
  FILTER (lang(?warLabel) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
391,13,train,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?person rdfs:label ""Michael Ballhaus""@en .
  ?person dbo:claimToFame ?work .
  ?work dbo:starring ?actor .
}
```",2,3,3,2,1,3,3,71,0,0,20,0,0.0,0
534,9,train,"Who is the child, that is a politician and an office holder, of the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?parent rdf:type dbo:Politician .
  ?parent dbo:nationality ?essex .
  ?essex rdfs:label ""Essex""@en .

  ?child dbo:childOf ?parent ;
         rdf:type dbo:Politician, dbo:OfficeHolder .
}
```",2,5,3,2,1,3,2,20,0,0,7,0,0.0,0
392,8,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone ?tz .
  FILTER (CONTAINS(LCASE(?tz), ""central european time""))
}
```",2,3,3,2,1,2,3,28,0,0,173261,0,0.0,0
378,16,train,"Who is the commander in the reference, that is a military conflict, to Peninsular War?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?commander WHERE {
  ?war rdfs:label ""Peninsular War""@en .
  ?war dbo:commander ?commander .
}
```",2,3,3,2,1,3,3,71,37,0,0,1.0,1.0,1.0
435,0,train,Give me the territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?territory WHERE {
  ?reikiavik rdfs:label ""Reykjavík""@en .
  ?administrativeUnit dbo:administrativeCenter ?reikiavik .
  ?administrativeUnit rdfs:label ?territory .
}
```",1,1,2,1,1,2,3,28,0,1,2,0.0,0.0,0
251,10,train,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?party ?administration WHERE {
  # Identify Sicily
  dbr:Sicily dbo:governingParty ?party .
  
  # Ensure the party is a political party and an organization
  ?party rdf:type dbo:PoliticalParty ;
         rdf:type dbo:Organization .

  # Retrieve administration or organizational details if available
  OPTIONAL { 
    ?party dbo:administration ?administration .
  }
}
```",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
294,1,train,Give me the resting place of Edwin A. Keeble.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?burialPlace WHERE {
  ?person rdfs:label ""Edwin A. Keeble""@en .
  ?person dbo:deathPlace ?deathPlace .
  OPTIONAL { ?person dbo:burialPlace ?burialPlace . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
392,2,train,Give me the province of Schio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?province WHERE {
  ?place rdfs:label ""Schio""@en .
  ?place dbo:locatedInProvince ?province .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
994,10,train,Give me the band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember ?associatedArtist WHERE {
  # Part 1: Band members of Don Dokken
  ?dokkenBand dbo:leadMusician dbr:Don_Dokken ;
              dbo:bandMember ?bandMember .
  
  # Part 2: Associated musical artists of Slayer
  OPTIONAL {
    ?slayerBand rdfs:label ""Slayer""@en .
    ?slayerBand dbo:associatedBand ?associatedArtist .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
528,9,train,Give me the war of Orozimbo Barbosa and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?warOrozimbo ?warIrene WHERE {
  ?orozimbo rdfs:label ""Orozimbo Barbosa""@en .
  ?orozimbo dbo:participatedIn ?warOrozimbo .

  ?irene rdfs:label ""Irene Morales""@en .
  ?irene dbo:participatedIn ?warIrene .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
994,17,train,"Who is the person born, that is a musical artist, as the persona of Don Dokken?",SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person rdfs:label ""Don Dokken""@en .
  ?person dbo:musicalArtist ?artist .
  FILTER NOT EXISTS { ?person dbo:birthName ?name . }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
488,0,train,Give me the birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Enomoto Takeaki""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
391,8,train,"Give me the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?resource WHERE {
  ?resource a dbo:Film .
  ?resource a dbo:CreativeWork .
  ?resource a dbo:TelevisionShow .
  
  OPTIONAL { 
    ?resource dbo:starring ?person .
    ?person rdfs:label ""Roz Ryan""@en .
  }
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
294,11,train,"Give me the entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?settlement WHERE {
  ?person rdfs:label ""Marion James""@en .
  ?person dbo:birthPlace ?place .
  ?place rdf:type dbo:Settlement .
  ?place rdfs:label ?settlement .
}
```",2,3,3,2,1,2,3,28,0,1,340,0.0,0.0,0
92,1,train,Give me the associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person rdfs:label ""Jim Sheppard""@en .
  ?person dbo:associatedBand ?band .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
92,10,train,Give me the band of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
# Query to find the band associated with Joseph Michael
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?band WHERE {
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbo:band ?band .
}

# Query to find members of Nevermore
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?member WHERE {
  ?band rdfs:label ""Nevermore""@en .
  ?band dbo:member ?member .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
392,1,train,Give me the region of Central European Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?timeZone rdfs:label ""Central European Time""@en .
  ?timeZone dbo:region ?region .
}
```",1,1,2,1,1,2,3,28,0,0,49990,0,0.0,0
281,11,train,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardee ?war WHERE {
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Knight Grand Cross of the Order of the Bath""@en .
  
  OPTIONAL {
    ?awardee dbo:associatedWith ?war .
  }
}
```",2,2,3,2,1,3,3,71,0,0,450,0,0.0,0
427,16,train,Who is the father of the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?father WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
617,0,train,Give me the child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?antiochus rdfs:label ""Antiochus III the Great""@en .
  ?antiochus dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,4,2,1,0.6666666666666666,0.8,0.7272727272727272
161,8,train,"Give me the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?event WHERE {
  ?person rdfs:label ""Emilio Mola""@en .
  ?person dbo:associatedEvent ?event .
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
838,4,train,"Give me the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?group ?organization WHERE {
  ?yugrupa rdfs:label ""YU Grupa""@en .
  ?yugrupa dbo:band ?group .
  ?yugrupa dbo:organization ?organization .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
617,3,train,"Who is the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?successor WHERE {
  ?antiochus rdfs:label ""Antiochus II Theos""@en .
  ?antiochus dbo:successor ?successor .
  ?successor rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
356,4,train,"Give me the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Gary Williams (footballer, born 1960)""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement .
  ?birthPlace dbo:country ?country .
  FILTER(LANG(?countryLabel) = 'en' && STR(?countryLabel) = ""England"")
  SERVICE <http://dbpedia.org/sparql> {
    ?country rdfs:label ?countryLabel
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
55,5,train,"Give me the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person rdfs:label ""Jason Newsted""@en .
  ?person dbo:member ?membership .
  ?membership dbo:band ?band .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
915,2,train,Give me the director of Pipe Dreams (1976 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?director WHERE {
  ?film rdfs:label ""Pipe Dreams""@en .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1976)
  ?film dbo:director ?director .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
488,3,train,"Give me the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?war WHERE {
  ?saitoHajime rdfs:label ""Saitō Hajime""@en .
  ?saitoHajime dbo:associatedWith ?war .
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:SocietalEvent .
}
```",1,4,2,1,1,3,3,71,0,0,4,0,0.0,0
9,0,train,"Give me the alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?almaMater WHERE {
  ?person rdfs:label ""John Alderdice, Baron Alderdice""@en .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
435,11,train,Give me the work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?work WHERE {
  ?author a dbo:Writer ;
          dbo:nationality dbr:Iceland .
  ?author dbo:work ?work .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
294,8,train,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?person ?finalRestingPlace WHERE {
  ?person rdf:type dbo:Politician .
  ?award dbo:awardedBy <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> ;
         dbo:recipient ?person .
  OPTIONAL { ?person dbo:finalRestingPlace ?finalRestingPlace . }
}
```",2,3,3,2,1,2,3,28,0,0,10,0,0.0,0
528,15,train,"Give me the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?event ?militaryForce WHERE {
  ?event a dbo:SocietalEvent .
  ?event dbo:country dbr:Chile .
  OPTIONAL { ?event dbo:militaryForce ?militaryForce . }
}
```",2,3,3,2,1,3,3,71,0,35,91,0.0,0.0,0
696,0,train,Give me the birth place of Tim Brennan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Tim Brennan""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
996,1,train,Give me the entity in France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?entity ?label WHERE {
  VALUES ?country {<http://dbpedia.org/resource/France>} 
  OPTIONAL { ?entity dbo:country ?country . }
  OPTIONAL { ?entity dbo:birthPlace ?country . }
  OPTIONAL { ?entity dbo:location ?country . }
  ?entity rdfs:label ?label .
  FILTER(LANG(?label) = 'en')
}
```",1,1,2,1,1,3,2,20,0,88174,292,0.0,0.0,0
115,5,train,Give me the alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?alumnus ?almaMater WHERE {
  ?university rdfs:label ""National University of San Marcos""@en .
  ?university dbo:alumni ?alumnus .
  OPTIONAL { 
    ?alumnus dbo:almaMater ?almaMater .
  }
}
```",2,2,3,2,1,2,2,9,0,0,49,0,0.0,0
487,8,train,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace ?administration WHERE {
  ?person rdfs:label ""Philip Brian Scott""@en .
  ?person a dbo:SoccerPlayer .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?person dbo:administratorOf ?administration . }
}
```",2,3,3,2,1,3,2,20,0,0,14,0,0.0,0
179,9,train,"Give me the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?childBirthName WHERE {
  ?nak rdfs:label ""Nakkhatra Mangala""@en .
  ?nak dbo:child ?child .
  OPTIONAL { ?child dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }
  ?child rdfs:label ?childBirthName .
}
```",2,3,3,2,1,3,2,20,0,4,1,0.0,0.0,0
767,3,train,Give me the writer of Where It's At (Dustin Lynch album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?writer WHERE {
  ?album rdfs:label ""Where It's At""@en .
  ?album dbo:artist dbr:Dustin_Lynch .
  ?album dbo:song ?song .
  ?song dbo:lyricist ?writer .
}
```",1,1,2,1,1,3,3,71,0,0,35,0,0.0,0
427,12,train,Give me the party of Giulio Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?andreottiParty ?prodiParty WHERE {
  ?andreotti rdfs:label ""Giulio Andreotti""@en .
  ?andreotti dbo:partyAffiliation ?andreottiParty .

  ?prodi rdfs:label ""Romano Prodi""@en .
  ?prodi dbo:partyAffiliation ?prodiParty .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
617,2,train,Give me the parent of Mlada (abbess).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parent WHERE {
  ?person rdfs:label ""Mlada (abbess)""@en .
  ?person dbo:memberOf ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
360,5,train,Give me the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?song rdfs:label ""Blinded by the Light""@en .
  ?song dbo:lyricist ?author .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
161,9,train,Give me the military force of Rif War and military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?rifWarForce ?spanishCivilWarForce WHERE {
  # Military force in Rif War
  ?rifWarForce dbo:participatedIn ?rifWar .
  ?rifWar rdfs:label ""Rif War""@en .

  # Military force in Spanish Civil War
  ?spanishCivilWarForce dbo:participatedIn ?spanishCivilWar .
  ?spanishCivilWar rdfs:label ""Spanish Civil War""@en .
}
```",2,2,3,1,2,3,3,71,0,0,34,0,0.0,0
767,2,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?reference WHERE {
  ?entity rdfs:label ""Albert Einstein""@en .
  ?entity dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,3,71,14,552,98433,0.024734982332155476,0.0001422084979735289,0.00028279114863704767
421,9,train,Give me the person born as Edin Dervišhalidović and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthName ""Edin Dervišhalidović""@en .
  ?person dbo:nationality ?nationality .
  FILTER (str(?nationality) = str(<http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia>))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
142,4,train,Give me the birthplace of George Tokoro and entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace ?entityInJapan WHERE {
  # Query for George Tokoro's birthplace
  ?person rdfs:label ""George Tokoro""@en .
  ?person dbo:birthPlace ?birthPlace .

  # Query for an entity in Japan
  ?entity dbo:country ?japan .
  ?japan rdfs:label ""Japan""@en .
  BIND(?entity AS ?entityInJapan)
}
```",2,2,3,1,2,2,2,9,1,8915,0,0.00011215791834903544,1.0,0.000224290680722216
617,1,train,Give me the spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?spouse WHERE {
  ?person rdfs:label ""Laodice IV""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
281,8,train,"Give me the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?militaryUnit WHERE {
  ?person rdfs:label ""Heather Roy""@en .
  ?person dbo:occupation ?occupation .
  ?occupation dbo:militaryUnit ?militaryUnit .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,7,train,Give me the reference to Manfred Mann and writer of The Roaring Silence.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manfredMannResource ?writer WHERE {
  # Find the DBpedia resource for Manfred Mann
  ?manfredMannResource rdfs:label ""Manfred Mann""@en .
  
  # Find the album ""The Roaring Silence"" and its writer
  ?album dbo:title ""The Roaring Silence""@en ;
         dbo:artist ?manfredMannResource ;
         dbo:writer ?writer .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
487,1,train,Give me the administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office ?termStart WHERE {
  ?person foaf:name ""Phil Scott""@en .
  ?person dbo:office ?office ;
          dbo:termStart ?termStart .
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
184,10,train,Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentGéza ?parentIlona WHERE {
  ?geza rdfs:label ""Géza von Habsburg""@en .
  ?geza dbo:parent ?parentGéza .

  ?ilona rdfs:label ""Archduchess Ilona of Austria""@en .
  ?ilona dbo:parent ?parentIlona .
}
```",2,2,3,1,2,3,3,71,2,0,0,1.0,1.0,1.0
294,0,train,"Give me the resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?burialPlace WHERE {
  ?person rdfs:label ""Luke Lea (American politician, born 1879)""@en .
  ?person dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1879)
  ?person dbo:deathPlace ?deathPlace .
  OPTIONAL { ?person dbo:burialPlace ?burialPlace }
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
994,11,train,Give me the associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?finalArtist WHERE {
  # First level association
  ?watchtower rdfs:label ""Watchtower""@en .
  ?watchtower dbo:associatedMusicalArtist ?firstLevelArtist .

  # Second level association
  OPTIONAL { 
    ?firstLevelArtist dbo:associatedMusicalArtist ?finalArtist .
  }
  
  FILTER(?finalArtist != ?watchtower) # Ensure we don't get Watchtower itself as a result
}
```",2,2,3,2,1,3,3,71,0,0,16,0,0.0,0
232,15,train,Give me the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?person rdfs:label ""Jon Pertwee""@en .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
314,6,train,Give me the person deceased at Madrid and awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Madrid""@en .
  
  # Assuming there is a property that directly links to the number of awards
  ?person dbo:numberOfAwards ?awards .
  FILTER (?awards = 30)
}
```

Note: The assumption here is that `dbo:numberOfAwards` exists and accurately reflects the total count of awards an individual has won. If this property does not exist, further refinement or additional context would be needed to identify the correct property.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
365,1,train,Give me the reference to The Blasters.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?resource WHERE {
  ?resource rdfs:label ""The Blasters""@en .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
617,4,train,"Give me the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?richeza rdfs:label ""Richeza of Poland""@en .
  ?richeza dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?spouse dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))
  }
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
10,4,train,"Give me the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthDate ?birthPlace WHERE {
  # Find Luke Francis Vibert's details
  ?vibert rdf:type dbo:Person ;
          rdfs:label ""Luke Francis Vibert""@en ;
          dbo:birthDate ?birthDate ;
          dbo:birthPlace ?birthPlace .
  
  # Ensure he is an artist
  ?vibert dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""artist""))

  # Find other persons with the same birth details and occupation as artists
  ?person rdf:type dbo:Person ;
          dbo:birthDate ?birthDate ;
          dbo:birthPlace ?birthPlace ;
          dbo:occupation ?otherOccupation .
  FILTER(CONTAINS(LCASE(?otherOccupation), ""artist""))
  
  # Exclude Luke Francis Vibert from the results
  FILTER(?person != ?vibert)
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
767,11,train,"Give me the entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?settlement WHERE {
  ?settlement rdf:type dbo:Settlement .
  ?settlement rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""green"") && LANGMATCHES(LANG(?label), ""en"")) .
  OPTIONAL { ?settlement dbo:partOf ?administration . }
}
```",2,3,3,2,1,3,3,71,0,1643,60,0.0,0.0,0
378,4,train,Who is the person born as Carl Pontus Gahn?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?personLabel WHERE {
  ?person dbo:birthName ""Carl Pontus Gahn""@en .
  ?person rdfs:label ?personLabel .
  FILTER(LANG(?personLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
996,7,train,Give me the force of the awardee of 1778.0.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?award dbo:date ""1778"" .
  ?award dbo:recipient ?person .
  OPTIONAL { ?person dbo:militaryForce ?force . }
}
```",2,2,3,2,1,3,2,20,0,0,11,0,0.0,0
360,1,train,Give me the native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Johannesburg""@en .
}
```",1,1,2,1,1,2,3,28,1000,0,0,1.0,1.0,1.0
617,9,train,"Give me the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  ?mlada rdfs:label ""Mlada (abbess)""@en .
  ?mlada dbo:parent ?parent .

  ?parent dbo:child ?child .
  
  OPTIONAL { 
    ?child rdfs:label ?childLabel .
    FILTER(CONTAINS(LCASE(?childLabel), ""king"") || CONTAINS(LCASE(?childLabel), ""queen""))
  }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
92,14,train,Give me the band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person dbo:birthName ""Joseph Michael Furney"" .
  ?person dbo:band ?band .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,17,train,"Give me the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?event WHERE {
  ?person rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  ?person a dbo:Person .
  
  ?event dbo:societalEvent true ;
         a dbo:Event, dbo:MilitaryConflict .

  ?person dbo:associatedWith ?event .
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
184,6,train,Give me the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""Archduke Joseph Karl of Austria""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
345,0,train,Give me the figure known as Stolz von Liechtenstein.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""stolz von liechtenstein""))
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
55,11,train,"Give me the band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person rdfs:label ""Jason Newsted""@en .
  ?person dbo:band ?band .
}
```",2,3,3,2,1,2,3,28,0,0,9,0,0.0,0
701,10,train,Give me the spouse of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?spouse WHERE {
  ?ramesses rdfs:label ""Ramesses II""@en .
  ?ramesses dbo:spouse ?spouse .
  ?spouse dbo:child ?meritamen .
  ?meritamen rdfs:label ""Meritamen""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
767,10,train,Give me the entity in Baden-Württemberg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entityLabel ?reference WHERE {
  ?entity dbo:locatedInRegion dbpedia:Baden-Württemberg .
  ?entity rdfs:label ?entityLabel .
  OPTIONAL { ?entity rdfs:seeAlso ?reference }
  FILTER (LANG(?entityLabel) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,7,0,0.0,0
44,0,train,Give me the band member of Undertow (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?member WHERE {
  ?band rdfs:label ""Undertow""@en .
  ?band dbo:member ?member .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
915,8,train,"Give me the father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?spaulding rdfs:label ""Phillip Spaulding""@en .
  ?child dbo:parent ?spaulding ;
         a dbo:FictionalCharacter ;
         dbo:genre dbo:SoapOpera .
  ?child dbo:father ?father .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
783,10,train,"Give me the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthDate WHERE {
  ?person rdfs:label ""Ebony Reigns""@en .
  ?person rdf:type dbo:Artist ;
          rdf:type dbo:MusicalArtist .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",2,4,3,2,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
77,1,train,Give me the force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?person rdfs:label ""Alexander I of Russia""@en .
  OPTIONAL { 
    ?person dbo:militaryConflict ?conflict .
    ?conflict dbo:participatingArmies ?army .
    ?army rdfs:label ?militaryForce .
  }
}
```",1,1,2,1,1,3,2,20,0,0,25,0,0.0,0
115,1,train,Give me the alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?almaMater WHERE {
  ?person rdfs:label ""Jorge Sotomayor Tello""@en .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
429,3,train,"Give me the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?militaryForce WHERE {
  ?expedition rdfs:label ""Camden Expedition""@en .
  ?expedition dbo:militaryUnit ?militaryForce .
}
```",1,2,2,1,1,2,2,9,0,0,22,0,0.0,0
285,6,train,Give me the parent of Alexander Onassis and spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfAlexanderOnassis ?spouseOfAristotleOnassis WHERE {
  ?alexanderOnassis rdfs:label ""Alexander Onassis""@en .
  ?alexanderOnassis dbo:parent ?parentOfAlexanderOnassis .

  ?aristotleOnassis rdfs:label ""Aristotle Onassis""@en .
  ?aristotleOnassis dbo:spouse ?spouseOfAristotleOnassis .
}
```",2,2,3,1,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
645,8,train,Give me the alma mater of the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childName ?almaMater WHERE {
  ?person rdfs:label ""Richard Pankhurst""@en .
  ?person dbo:child ?child .
  ?child rdfs:label ?childName .
  
  OPTIONAL {
    ?child dbo:almaMater ?almaMater .
  }
}
```",2,2,3,2,1,3,2,20,2,3,0,0.4,1.0,0.5714285714285715
328,4,train,"Give me the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?person rdfs:label ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,9,0,0,1.0,1.0,1.0
617,15,train,"Who is the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?antiochus rdfs:label ""Antiochus II Theos""@en .
  ?antiochus dbo:successor ?successor .
  
  ?successor a dbo:Monarch ;
             dbo:child ?child .

  FILTER EXISTS { ?child a dbo:Monarch }
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
754,10,train,Give me the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?person rdfs:label ""Ram Khamhaeng the Great""@en .
  ?person dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
356,3,train,Give me the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  dbr:Sacramento_Republic_FC_season_2014 dbo:successor ?successor .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
996,8,train,Give me the entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award ?recipient WHERE {
  ?person rdfs:label ""Ekrem Akurgal""@en .
  ?person dbo:award ?award .
  ?award dbo:recipient ?recipient .
}
```",2,2,3,2,1,3,2,20,0,0,292,0,0.0,0
778,2,train,"Give me the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardee WHERE {
  ?awardee dbo:award ?prize .
  ?prize rdf:type dbo:WolfPrizeInMedicine .
  ?awardee dbo:nationality ?nationality .
  FILTER (CONTAINS(LCASE(?nationality), ""united states"") || CONTAINS(LCASE(?nationality), ""america""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
801,6,train,"Give me the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?work WHERE {
  ?artist foaf:name ""50 Cent""@en .
  ?work dbo:artist ?artist ;
        rdf:type dbo:MusicalWork, dbo:Song .
}
```",1,4,2,1,1,3,3,71,30,20,28,0.6,0.5172413793103449,0.5555555555555556
488,15,train,"Who is the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?event ?role WHERE {
  ?person rdfs:label ""Saitō Hajime""@en .
  ?person a dbo:MilitaryPerson ;
          dbo:commander ?event .
  ?event rdf:type dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
981,8,train,"Give me the birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> """"@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:title ""Beauty Queen""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,0,0,170,0,0.0,0
547,14,train,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?person ?restingPlace WHERE {
  ?person dbo:honoraryTitle ?title .
  FILTER(CONTAINS(LCASE(STR(?title)), ""knight grand cross of the order of st michael and st george""))
  OPTIONAL { 
    ?person dbo:finalBurialPlace ?restingPlace .
  }
}
```",2,2,3,2,1,3,3,71,0,0,28,0,0.0,0
64,6,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone ?tz .
  FILTER (CONTAINS(LCASE(?tz), ""central european time""))
}
```",2,3,3,2,1,2,2,9,0,0,173261,0,0.0,0
666,6,train,Give me the figure known as The Three Lions and player in Steve Bruce.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?player WHERE {
  ?team rdf:type dbo:NationalSoccerTeam ;
        rdfs:label ""England national football team""@en .
  ?manager foaf:name ""Steve Bruce"" ;
           dbo:managedNationalTeam ?team .
  ?player dbo:member ?team ;
          rdf:type dbo:SoccerPlayer .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,7,train,Give me the band member of Guns N' Roses and band of Newsted.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember WHERE {
  ?person dbo:bandMember ?gnr .
  ?gnr rdfs:label ""Guns N' Roses""@en .
  ?person rdfs:label ?bandMember .
}

UNION

SELECT ?band WHERE {
  ?newsted rdfs:label ""Newsted""@en .
  ?newsted dbo:member ?band .
  ?band rdfs:label ?bandLabel .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,4,train,Who is the commander in Boshin War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?war rdfs:label ""Boshin War""@en .
  ?war dbo:commander ?commander .
  ?commander rdf:type dbo:Person .
}
```",1,1,2,1,1,3,3,71,24,0,2,1.0,0.9230769230769231,0.9600000000000001
142,1,train,Give me the birthplace of George Tokoro.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""George Tokoro""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
339,10,train,Who is the child of the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?olga dbo:parent ?parent .
  FILTER (str(?olga) = ""Princess Olga of Greece and Denmark"") .
  
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
659,3,train,"Give me the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?office WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Kingdom of Ireland""@en .
  
  OPTIONAL { 
    ?person dbo:positionHeld ?office .
  }
}
```",1,2,2,1,1,3,3,71,23,161,0,0.125,1.0,0.2222222222222222
161,2,train,Give me the commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?campaign rdfs:label ""Biscay Campaign""@en .
  ?campaign dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
435,8,train,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?territory WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Iceland""@en .
  
  ?person dbo:administers ?territory .
  
  ?territory rdf:type ?type .
  FILTER (
    ?type = dbo:Settlement || 
    ?type = dbo:Town
  )
}
```",2,5,3,2,1,2,3,28,0,0,2,0,0.0,0
54,6,train,Give me the child of Narapati I of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""Narapati I of Ava""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
345,2,train,"Give me the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  ?player rdfs:label ""Armando Heeb""@en .
  ?team dbo:sportsTeam true ;
        dbo:organization true ;
        dbo:soccerClub true .
  ?player dbo:member ?team .
}
```",1,4,2,1,1,3,2,20,0,0,8,0,0.0,0
314,5,train,"Give me the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?person rdfs:label ""Lisa Gavrić""@en .
  ?person dbo:occupation ?profession .
  ?profession rdf:type dbo:Event ;
              rdf:type dbo:SocietalEvent .
}
```",1,3,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
801,2,train,Give me the associated musical artist of Chris Taylor (music producer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?artist WHERE {
  ?person rdfs:label ""Chris Taylor (music producer)""@en .
  ?person dbo:associatedMusicalArtist ?artist .
}
```",1,1,2,1,1,3,3,71,7,0,0,1.0,1.0,1.0
64,0,train,Give me the alma mater of Jovan Hristić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?almaMater WHERE {
  ?person rdfs:label ""Jovan Hristić""@en .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
339,0,train,Give me the child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""George I of Greece""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,7,0,0,1.0,1.0,1.0
48,5,train,"Give me the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actor WHERE {
  ?work rdfs:label ""Honor Up""@en .
  ?work dbo:actor ?actor .
  ?actor a dbo:Actor ;
         a dbo:MusicalArtist .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
54,8,train,"Give me the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .
  ?thihapate dbo:child ?child .
  ?child rdf:type dbo:Royalty .
  ?child dbo:officeHolder ?office .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
184,8,train,Give me the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""Archduke Joseph Francis of Austria""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
294,4,train,Who is the architect of P. D. Houston Jr. House?,SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?architect WHERE {
  ?house rdfs:label ""P. D. Houston Jr. House""@en .
  ?house dbo:architect ?architect .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
161,15,train,"Give me the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?event WHERE {
  ?franco dbo:associatedEvent ?event .
  FILTER (CONTAINS(LCASE(?event), ""francoist spain""))
  OPTIONAL { ?event a dbo:SocietalEvent . }
  OPTIONAL { ?event a dbo:Event . }
  OPTIONAL { ?event a dbo:MilitaryConflict . }
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
356,1,train,Give me the team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?team WHERE {
  ?person rdfs:label ""Mark Briggs""@en .
  ?person dbo:team ?team .
}
```",1,1,2,1,1,3,2,20,1,14,4,0.06666666666666667,0.2,0.1
378,15,train,Who is the person born as the birth name of Carl Pontus Gahn?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?personLabel WHERE {
  ?person dbo:birthName ""Carl Pontus Gahn""@en .
  ?person rdfs:label ?personLabel .
  FILTER(LANG(?personLabel) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
963,4,train,Give me the location for 21205.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?locationLabel WHERE {
  ?place dbp:zipCode ""21205"" .
  ?place rdfs:label ?locationLabel .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
666,0,train,Give me the player in Steve Bruce.,SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  ?coach rdfs:label ""Steve Bruce""@en .
  ?coach a dbo:FootballManager ;
         dbo:managedTeam ?team .
  ?team dbo:player ?player .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
30,3,train,Give me the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?profession WHERE {
  ?person rdfs:label ""Édouard Alphonse James de Rothschild""@en .
  ?person dbo:occupation ?profession .
}
```",1,1,2,1,1,2,2,9,0,2,1,0.0,0.0,0
767,5,train,Give me the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?resource WHERE {
  ?resource rdfs:label ""George Kilbon Nash""@en .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
232,3,train,Give me the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?person rdfs:label ""Jon Pertwee""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
55,10,train,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  ?symphony rdfs:label ""San Francisco Symphony""@en .
  ?symphony dbo:member ?person .

  ?person dbo:memberOf ?otherEntity .
  
  ?otherEntity rdf:type dbo:Band ;
               rdf:type dbo:Group .
}
```",2,4,3,2,1,2,3,28,0,0,15,0,0.0,0
696,5,train,Give me the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?person rdfs:label ""Nie Rongzhen""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,3,2,0.0,0.0,0
701,7,train,"Give me the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?commander WHERE {
  ?battle rdfs:label ""Battle of Perire""@en .
  ?battle dbo:commander ?commander .
  ?commander rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
314,11,train,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?person rdfs:label ""Lisa Gavrić""@en .
  ?person dbo:profession ?profession .
  ?profession rdf:type dbo:Event ;
              rdf:type ?societalEvent .
  
  ?commander dbo:profession ?profession .
}
```",2,4,3,2,1,2,3,28,0,0,28,0,0.0,0
281,17,train,"Give me the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?profession WHERE {
  ?person dbo:officeHolder true .
  ?person dbo:politician true .
  ?militaryUnit dbo:militaryBranch dbr:New_Zealand_Army .
  ?person dbo:militaryUnit ?militaryUnit .
  ?person dbo:profession ?profession .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
10,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid SPARQL query can be generated due to incomplete question.
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
645,7,train,"Give me the entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?country WHERE {
  ?person rdfs:label ""James Wilkes Maurice""@en .
  ?person dbo:residence ?residence .
  ?residence dbo:country ?country .
}
```",2,3,3,2,1,3,2,20,0,0,42999,0,0.0,0
421,4,train,Give me the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Samir Bekrić""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
421,8,train,Give me the band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?awardee ?band WHERE {
  ?awardee dbo:award ?award .
  OPTIONAL { 
    ?awardee dbo:bandMember ?band .
  }
}
```",2,2,3,2,1,2,3,28,0,77969,582,0.0,0.0,0
232,2,train,Give me the native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person ?name WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""London""@en .
  ?person rdfs:label ?name .
}
```",1,1,2,1,1,3,3,71,8770,8770,169,0.5,0.981094082112093,0.6624117224970731
92,3,train,Give me the name of Nevermore (2006 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?name WHERE {
  ?film rdfs:label ""Nevermore (2006 film)""@en .
  ?film rdfs:label ?name .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
528,5,train,Give me the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
# Unable to construct a SPARQL query due to insufficient information.
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,16,train,"Give me the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?unit rdfs:label ""Polish Horse""@en .
  ?unit rdf:type dbo:MilitaryUnit .
  
  ?war rdf:type dbo:Event ;
       rdf:type dbo:MilitaryConflict ;
       dbo:participatedIn ?unit .
}
```",2,6,3,2,1,3,3,71,0,0,19,0,0.0,0
328,8,train,"Give me the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office WHERE {
  ?person rdfs:label ""Joseph Stalin""@en .
  ?person dbo:office ?office .
  ?office rdf:type dbo:GovernmentAgency .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
427,10,train,Give me the reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?partitoPopolareItalianoUri ?romanoProdiParty WHERE {
  ?partitoPopolareItaliano rdfs:label ""Partito Popolare Italiano""@en .
  ?partitoPopolareItaliano rdf:type dbo:PoliticalParty .

  OPTIONAL { 
    ?romanoProdi rdfs:label ""Romano Prodi""@en .
    ?romanoProdi dbo:party ?romanoProdiParty .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
981,10,train,"Who is the person born, that is a beauty queen, as the author of Kamikaze Girls?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthDate WHERE {
  ?book dbo:author ?person .
  ?book rdfs:label ""Kamikaze Girls""@en .
  
  OPTIONAL { 
    ?person dbo:award ?award .
    FILTER(CONTAINS(LCASE(STR(?award)), ""beauty queen""))
  }
  
  ?person dbo:birthDate ?birthDate .
}
```",2,3,3,2,1,3,2,20,0,0,120,0,0.0,0
328,1,train,Give me the commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?front rdfs:label ""Eastern Front (World War II)""@en .
  ?front dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,63,0,0,1.0,1.0,1.0
318,0,train,Give me the person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?name WHERE {
  ?person rdf:type dbo:Person .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en') .
  ?person dbo:birthDate ?birthDate .
  FILTER (
    xsd:date(?birthDate) >= ""1970-01-01""^^xsd:date &&
    xsd:date(?birthDate) <= ""1970-12-31""^^xsd:date
  )
}
```",1,1,2,1,1,2,2,9,2244,18544,566,0.10794689243794497,0.798576512455516,0.19018560894991102
404,6,train,"Who is the child, that is a royalty, of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?child WHERE {
  ?person rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?person dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
339,7,train,Give me the child of the child of Christian IX of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?grandchild WHERE {
  ?christianIX rdfs:label ""Christian IX""@en .
  ?christianIX dbo:child ?child .
  OPTIONAL { 
    ?child dbo:child ?grandchild .
  }
}
```",2,2,3,2,1,3,2,20,0,0,32,0,0.0,0
492,2,train,Give me the person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Algiers .
}
```",1,1,2,1,1,3,3,71,122,0,0,1.0,1.0,1.0
959,9,train,Give me the native of Japan and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Japan .
  OPTIONAL { ?person dbo:almaMater dbr:University_of_Tsukuba . }
  FILTER EXISTS { ?person dbo:almaMater dbr:University_of_Tsukuba . }
}
```",2,2,3,1,2,3,3,71,0,1,84,0.0,0.0,0
48,1,train,Give me the band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person rdfs:label ""Murda Mook""@en .
  ?person dbo:band ?band .
}
```",1,1,2,1,1,3,2,20,0,0,10,0,0.0,0
392,6,train,Give me the region of Central European Time and entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region ?entity WHERE {
  ?timeZone rdfs:label ""Central European Time""@en .
  ?timeZone dbo:region ?region .

  OPTIONAL {
    ?entity dbo:country dbr:Italy .
    FILTER NOT EXISTS { ?entity rdfs:label ?label . FILTER (lang(?label) = 'en') }
  }

  LIMIT 1
}
```",2,2,3,1,2,2,3,28,0,0,513,0,0.0,0
427,6,train,Who is the father of Lamberto Andreotti?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?father WHERE {
  ?person rdfs:label ""Lamberto Andreotti""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,14,train,Give me the spouse of the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?spouse WHERE {
  ?merneptah dbo:father ?father .
  ?father dbo:spouse ?spouse .
  ?merneptah rdfs:label ""Merneptah""@en .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
404,2,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
48,8,train,"Give me the band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?actor rdfs:label ""Honor Up""@en .
  ?actor dbo:actorInBand ?band .
  ?band a dbo:MusicalArtist .
}
```",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
184,14,train,Give me the parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?parent WHERE {
  ?archduke rdfs:label ""Archduke Joseph Francis of Austria""@en .
  ?archduke dbo:child ?child .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
318,6,train,Give me the professional in the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?professional WHERE {
  ?robert a dbo:FilmDirector ;
          rdfs:label ""Robert Xavier Rodriguez""@en .
  ?robert dbo:profession ?profession .

  ?individual a dbo:Person ;
              dbo:profession ?profession ;
              rdfs:label ?professional .
  FILTER(?individual != ?robert)
}
```",2,2,3,2,1,2,2,9,0,0,1942,0,0.0,0
996,5,train,Give me the award of Ekrem Akurgal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?award WHERE {
  ?person rdfs:label ""Ekrem Akurgal""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,4,0,1,1.0,0.8,0.888888888888889
617,10,train,"Give me the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?richeza rdfs:label ""Richeza of Poland""@en .
  ?richeza rdf:type ?royaltyType .
  FILTER (EXISTS { ?richeza dbo:father ?father }).
  ?father rdf:type ?fatherRoyaltyType .
  FILTER (?royaltyType IN (dbo:Monarch, dbo:NoblePerson) && 
          ?fatherRoyaltyType IN (dbo:Monarch, dbo:NoblePerson))
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
281,9,train,"Give me the entity in Colony of New Zealand and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?entity WHERE {
  ?entity rdfs:label ""Colony of New Zealand""@en .
  ?beauchamp rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .
  ?war dbo:participatedIn ?beauchamp .
  ?entity dbo:place ?location .
  ?location dbo:country ?newZealand .
  FILTER (CONTAINS(LCASE(?newZealand), ""new zealand""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
339,5,train,Who is the child of Grand Duchess Elena Vladimirovna of Russia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?person rdfs:label ""Grand Duchess Elena Vladimirovna of Russia""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
801,3,train,Give me the true self of The Shadow.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?realName WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:realName ?realName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
783,6,train,Give me the band member of Ebony Reigns and associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?ebonyBandMember ?appietusAssociatedArtist WHERE {
  # Find band member of Ebony Reigns
  ?person rdfs:label ""Ebony Reigns""@en .
  OPTIONAL { 
    ?person dbo:bandMember ?ebonyBandMember .
  }

  # Find associated musical artist of Appietus
  ?producer rdfs:label ""Appietus""@en .
  OPTIONAL {
    ?producer dbo:associatedMusicalArtist ?appietusAssociatedArtist .
  }
}
```",2,2,3,1,2,3,2,20,1,14,0,0.06666666666666667,1.0,0.125
696,1,train,Give me the landmark at elevation of 50.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?landmarkLabel WHERE {
  ?landmark a dbo:Landmark .
  ?landmark dbo:elevation ""50""^^xsd:integer .
  ?landmark rdfs:label ?landmarkLabel .
  FILTER (lang(?landmarkLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,599,0,0.0,0
391,15,train,"Give me the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commonName WHERE {
  ?city rdfs:label ""Jackson, Tennessee""@en .
  OPTIONAL { ?city dbo:commonName ?commonName . }
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
184,9,train,Give me the child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person dbo:child <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
  ?person dbo:parent <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
44,6,train,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?band rdfs:label ""Queensrÿche""@en .
  ?band a dbo:Band .
  ?band dbo:bandMember ?member .
  ?member a dbo:Person .
}
```",2,4,3,2,1,2,2,9,0,4,13,0.0,0.0,0
485,7,train,Give me the entity in United Kingdom and entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?ukEntity ?nottinghamshireEntity WHERE {
  ?ukEntity dbo:country dbc:United_Kingdom .
  ?nottinghamshireEntity dbp:locatedIn dbc:Nottinghamshire .
}
```",2,2,3,1,2,2,3,28,0,0,357,0,0.0,0
747,14,train,Give me the band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person rdfs:label ""Tracey Elizabeth McSween""@en .
  ?person dbo:band ?band .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
314,8,train,Give me the person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?location rdfs:label ""Headquarters of House of Sombrerete""@en .
  ?person dbo:deathPlace ?location .
}
```",2,2,3,2,1,2,3,28,0,0,34,0,0.0,0
328,15,train,Give me the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?award WHERE {
  ?campaign rdfs:label ""Volcano and Ryukyu Islands campaign""@en .
  ?campaign dbo:awardsReceived ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""commander""))
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
314,9,train,Give me the commander in Spanish Civil War and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:commanderOf ?conflict .
  ?conflict rdfs:label ""Spanish Civil War""@en .

  OPTIONAL { 
    ?person dbo:award ?award .
    ?award rdfs:label ?awardLabel .
    FILTER(CONTAINS(LCASE(?awardLabel), ""30th order""))
  }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
328,6,train,Give me the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?force WHERE {
  ?person rdfs:label ""Ferenc Szálasi""@en .
  OPTIONAL { ?person dbo:memberOf ?force . }
  OPTIONAL { ?person dbo:politicalAffiliation ?force . }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
827,6,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?father WHERE {
  ?william rdfs:label ""William Ernest, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?william dbo:father ?father .

  ?charles rdfs:label ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?charles dbo:child ?father .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,0,train,Give me the entity in Baden-Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity ?label WHERE {
  ?entity dbo:locatedInRegion dbr:Baden-Württemberg .
  ?entity rdfs:label ?label .
  FILTER (LANG(?label) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,60,0,0.0,0
161,7,train,Who is the figure known as El Director?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity WHERE {
  ?entity rdfs:label ""El Director""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
10,3,train,"Give me the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Matt Colton""@en .
  ?person a dbo:Artist .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
345,10,train,"Who is the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person WHERE {
  # Find Eiður Guðjohnsen's birth date
  ?eiður a dbo:SoccerPlayer ;
         rdfs:label ""Eiður Guðjohnsen""@en .
  ?eiður dbo:birthDate ?birthDate .

  # Find another person with the same birth date who is both a soccer player and manager
  ?person a dbo:SoccerPlayer, dbo:Manager ;
          dbo:birthDate ?birthDate .
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
184,1,train,Give me the child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""Archduke Joseph August of Austria""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
666,4,train,"Give me the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://xmlns.com/foaf/0.1/name> ""England""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?org WHERE {
  ?org a dbo:Organization .
  ?org rdfs:label ?label FILTER (lang(?label) = 'en') .
  OPTIONAL { ?org dbo:sport dbpedia:Soccer . }
  OPTIONAL { ?org dbo:type ?type . FILTER (?type IN (dbo:SportsClub, dbo:SoccerClub)) }
  ?org dbo:country <http://dbpedia.org/resource/England> .
}
```",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
712,6,train,Give me the resting place of Nina Onilova and capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?restingPlace WHERE {
  ?person rdfs:label ""Nina Onilova""@en .
  ?person dbo:finalBurialPlace ?restingPlace .
}

UNION

SELECT ?capital WHERE {
  ?region rdfs:label ""South Russia (1919–1920)""@en .
  ?region dbo:capital ?capital .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
16,3,train,Give me the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?person rdfs:label ""Ted McGinley""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
528,4,train,Give me the military force of Battle of Pisagua.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?attacker ?defender WHERE {
  ?battle rdfs:label ""Battle of Pisagua""@en .
  OPTIONAL { ?battle dbo:attacker ?attacker . }
  OPTIONAL { ?battle dbo:defender ?defender . }
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
838,9,train,"Give me the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?member WHERE {
  ?band rdf:type dbo:Band ;
        rdfs:label ""Žika Jelić""@en .
  ?band rdf:type dbo:Group .
  ?band dbo:member ?person .
  ?person rdfs:label ""Žika Jelić""@en .

  ?band dbo:member ?member .
  ?member rdf:type dbo:Artist ;
          rdf:type dbo:MusicalArtist .
}
```",2,6,3,2,1,3,2,20,0,0,4,0,0.0,0
801,14,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?artist WHERE {
  ?work rdfs:label ""40 Dayz & 40 Nightz""@en .
  ?work dbo:author ?writer .
  ?writer dbo:associatedMusicalArtist ?artist .
  ?artist rdf:type dbo:MusicalArtist .
  ?artist rdf:type dbo:Artist .
}
```",2,4,3,2,1,3,3,71,0,0,50,0,0.0,0
232,1,train,Give me the actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actor WHERE {
  ?film rdfs:label ""Dog Soldiers""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
92,15,train,"Give me the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?artist WHERE {
  ?film rdfs:label ""Nevermore (2006 film)""@en .
  ?film dbo:musicBy ?artist .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
312,5,train,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?entity WHERE {
  ?member dbo:party dbr:Democratic_Party_(Italy) .
  ?member dbo:country dbr:Italy .
  ?member dbo:administrativePost ?post .
  ?post dbo:administers ?entity .

  FILTER (
    (rdf:type(?entity, dbo:Settlement) || rdf:type(?entity, dbo:Region) || rdf:type(?entity, dbo:State))
    && EXISTS { ?entity rdfs:label ?label . FILTER(langMatches(lang(?label), ""it"")) }
  )
}
```",2,6,3,2,1,2,2,9,0,0,587,0,0.0,0
177,2,train,Give me the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?residence WHERE {
  ?person rdfs:label ""Alexander Gamelin""@en .
  ?person dbo:residence ?residence .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
959,16,train,"Give me the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?residence WHERE {
  ?politician dbo:election ?election .
  ?election rdfs:label ""2010 Japanese House of Councillors election""@en .
  ?politician rdf:type dbo:Politician .
  ?politician dbo:leaderOf ?position .
  ?position dbo:officeHolder ?politician .
  
  OPTIONAL { 
    ?politician dbo:residence ?residence .
    FILTER (?residence != null)
  }
  
  ?residence rdf:type dbo:Country .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
182,3,train,Give me the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?perpetrator WHERE {
  ?event rdfs:label ""2019 Sri Lanka Easter bombings""@en .
  ?event dbo:perpetrator ?perpetrator .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
10,7,train,Give me the professional in  and associated musical artist of Matt Colton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?profession ?associatedArtist WHERE {
  ?person rdfs:label ""Matt Colton""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
  OPTIONAL { ?person dbo:associatedBand ?band . 
             ?band dbo:leadArtist ?associatedArtist . }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
696,3,train,Who is the member of Dropkick Murphys?,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?member WHERE {
  ?band rdfs:label ""Dropkick Murphys""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
285,3,train,Who is the child of Tina Onassis Niarchos?,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""Tina Onassis Niarchos""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
617,13,train,Give me the spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse WHERE {
  ?antiochus rdfs:label ""Antiochus III the Great""@en .
  ?child dbo:parent ?antiochus ;
         a dbo:Person .
  OPTIONAL { 
    ?child dbo:spouse ?spouse .
  }
}
```",2,2,3,2,1,3,3,71,5,0,0,1.0,1.0,1.0
994,7,train,Give me the persona of Don Dokken.,SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?occupation ?band WHERE {
  ?person rdfs:label ""Don Dokken""@en .
  ?person dbo:occupation ?occupation .
  OPTIONAL { 
    ?person dbo:bandMemberOf ?band .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
754,0,train,Give me the parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?loethai rdfs:label ""Loe Thai""@en .
  ?loethai dbo:partOf ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
77,2,train,Give me the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?award WHERE {
  ?person rdfs:label ""Maxim Grigorievich Vlasov""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,8,0,0,1.0,1.0,1.0
314,2,train,Give me the commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?war rdfs:label ""Spanish Civil War""@en .
  ?war dbo:commander ?commander .
}
```",1,1,2,1,1,2,3,28,28,0,0,1.0,1.0,1.0
959,1,train,Give me the native of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Japan .
}
```",1,1,2,1,1,3,3,71,316,836,8103,0.2743055555555556,0.03753414894880627,0.06603280743913907
534,3,train,"Who is the child, that is a politician and an office holder, of Desmond FitzGerald (politician)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?child WHERE {
  ?desmond rdf:type dbo:Politician ;
           rdfs:label ""Desmond FitzGerald""@en .
  ?desmond dbo:child ?child .
  ?child rdf:type ?type .
  FILTER (
    EXISTS { ?child rdf:type dbo:Politician } &&
    EXISTS { ?child rdf:type dbo:OfficeHolder }
  )
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
365,6,train,Give me the reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?realName WHERE {
  ?band rdfs:label ""The Blasters""@en .
  ?band dbo:realName ?realName .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
360,3,train,"Give me the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/property/author> ""Dave Flett""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?album WHERE {
  ?person rdfs:label ""Dave Flett""@en .
  ?person dbo:album ?album .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
54,7,train,Give me the reference to Thihapate of Mohnyin.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person rdfs:label ""Thihapate of Mohnyin""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
356,10,train,"Give me the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?nativePerson WHERE {
  # Identify Gary Williams and his birthplace
  ?gW dbo:birthPlace ?birthPlace .
  ?gW rdfs:label ""Gary Williams (footballer, born 1960)""@en .

  # Ensure the birthplace is an English settlement
  ?birthPlace rdf:type dbo:Settlement ;
              dbo:country ?country .
  FILTER (?country rdfs:label = ""England""@en)

  # Find a person who is both a soccer player and manager native to this place
  ?nativePerson dbo:nationality ?birthPlace ;
                rdf:type dbo:SoccerPlayer, dbo:SoccerManager .
}
```",2,6,3,2,1,3,2,20,0,0,17,0,0.0,0
429,1,train,Give me the country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?country WHERE {
  ?regiment rdfs:label ""77th Ohio Infantry Regiment""@en .
  ?regiment dbo:country ?country .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
48,2,train,"Give me the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?work WHERE {
  ?producer rdfs:label ""Shellback""@en .
  ?work dbo:producer ?producer .
}
```",1,2,2,1,1,3,2,20,0,0,57,0,0.0,0
281,5,train,"Who is the leader, that is a politician, of 1962 New South Wales state election?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?leader WHERE {
  ?election rdfs:label ""1962 New South Wales state election""@en .
  ?election dbo:leader ?leader .
  ?leader rdf:type dbo:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
281,2,train,Give me the war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?militaryUnit rdfs:label ""New Zealand Army""@en .
  ?militaryUnit a dbo:MilitaryUnit .
  ?militaryUnit dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
179,4,train,Who is the parent of Vajiralongkorn?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?person rdfs:label ""Vajiralongkorn""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
328,16,train,Give me the force of the person decedent at Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person ?militaryUnit WHERE {
  ?person rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""horthy miklós"") || CONTAINS(LCASE(?name), ""budapest"")) .
  OPTIONAL { ?person dbo:militaryUnit ?militaryUnit . }
}
```",2,2,3,2,1,3,3,71,0,1496,23,0.0,0.0,0
64,5,train,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  ?person a dbo:Writer ;
          dbo:deathPlace ?place .
  ?place rdfs:label ""Sremska Kamenica""@en .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",2,3,3,2,1,2,2,9,1,0,0,1.0,1.0,1.0
767,15,train,"Give me the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?writer ?administration WHERE {
  ?song rdfs:label ""Where It's At""@en .
  ?song dbo:lyricist ?writer .
  OPTIONAL { 
    ?writer dbo:residence ?administration .
  }
}
```",2,3,3,2,1,3,3,71,0,0,31,0,0.0,0
251,5,train,Give me the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?author WHERE {
  ?book rdfs:label ""The Twelve Abbots of Challant""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
314,1,train,Give me the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
         dbp:number ""30""^^xsd:int .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
184,12,train,Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?ilona dbo:parent ?person .
  ?ilona rdfs:label ""Archduchess Ilona of Austria""@en .
  
  ?josephAugust dbo:child ?person .
  ?josephAugust rdfs:label ""Archduke Joseph August of Austria""@en .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
328,5,train,Who is the person decedent at Budapest?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ?name .
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Budapest""@en .
}
```",1,1,2,1,1,3,3,71,1144,1144,3,0.5,0.997384481255449,0.6660844250363901
184,11,train,Give me the parent of the native of Budapest.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Budapest""@en .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",2,2,3,2,1,3,3,71,6,13,13,0.3157894736842105,0.3157894736842105,0.3157894736842105
617,8,train,Who is the child of Antiochus (son of Antiochus III the Great)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?antiochus rdfs:label ""Antiochus (son of Antiochus III the Great)""@en .
  ?antiochus dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
492,11,train,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?successor WHERE {
  ?satterthwaite a dbo:OfficeHolder ;
                 dbo:officeName ""United States Assistant Secretary of State for African Affairs"" ;
                 dbo:successor ?successor .
  ?satterthwaite rdfs:label ""Joseph C. Satterthwaite""@en .
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
645,2,train,Give me the commander in Battle of Diamond Rock.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?battle rdfs:label ""Battle of Diamond Rock""@en .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
16,1,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?actress ?occupation WHERE {
  ?actress rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), ""actress""))
  OPTIONAL { ?actress dbo:occupation ?occupation }
}
```",1,1,2,1,1,3,3,71,762,7719,18479,0.08984789529536612,0.03960293124058001,0.05497438857225308
498,1,train,Give me the band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person rdfs:label ""Will Rahmer""@en .
  ?person dbo:bandMember ?band .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
747,7,train,Give me the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?occupation ?notableWork WHERE {
  ?person rdfs:label ""Shèna""@en .
  OPTIONAL { ?person dbo:occupation ?occupation . }
  OPTIONAL { ?person dbo:notableWork ?notableWork . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
915,6,train,"Give me the father of Lizzie Spaulding and resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?lizzie rdfs:label ""Lizzie Spaulding""@en .
  ?lizzie dbo:father ?father .

  OPTIONAL { 
    ?father dbo:residence ?residence .
    FILTER (CONTAINS(LCASE(str(?residence)), ""springfield, illinois""))
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
161,0,train,Give me the military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?event rdfs:label ""Rif War""@en .
  ?event dbo:participatingMilitaryForce ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,56,0,0.0,0
179,2,train,"Who is the child, that is a royalty, of Nakkhatra Mangala?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?nak rdfs:label ""Nakkhatra Mangala""@en .
  ?nak dbo:child ?child .
  OPTIONAL { ?child dbo:royalty ?royalty . }
  FILTER EXISTS { ?child dbo:royalty ?royalty }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
356,0,train,Give me the player in 2015 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?player WHERE {
  ?team rdfs:label ""Sacramento Republic FC""@en .
  ?team dbo:sportTeamMember ?player .
  FILTER EXISTS { 
    ?player dbo:birthPlace ?place .
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
54,3,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""Thinkhaya of Pagan""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
9,4,train,"Who is the mayor, that is a politician, of Northern Ireland Forum?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?mayor WHERE {
  ?place rdfs:label ""Northern Ireland Forum""@en .
  ?place dbo:mayorFor ?mayor .
  ?mayor rdf:type dbo:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
626,4,train,Who is the military force of Battle of Borodino?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?militaryForce WHERE {
  ?battle rdfs:label ""Battle of Borodino""@en .
  OPTIONAL { ?battle dbo:opposingMilitaryForce1 ?militaryForce . }
  OPTIONAL { ?battle dbo:opposingMilitaryForce2 ?militaryForce . }
}
```",1,1,2,1,1,3,2,20,0,0,52,0,0.0,0
10,9,train,Give me the professional in  and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?profession ?band WHERE {
  ?person rdfs:label ""Luke Vibert""@en .
  ?person dbo:occupation ?profession .
  ?person dbo:bandMember ?band .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
485,4,train,"Who is the awardee, that is a writer and a poet, of Eric Gregory Award?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?person WHERE {
  ?person dbo:award ?award .
  ?award rdfs:label ""Eric Gregory Award""@en .
  
  # Ensure the person is a writer
  OPTIONAL { ?person dbo:occupation ?occupation1 . FILTER (CONTAINS(LCASE(?occupation1), ""writer"")) }
  
  # Ensure the person is also a poet
  OPTIONAL { ?person dbo:occupation ?occupation2 . FILTER (CONTAINS(LCASE(?occupation2), ""poet"")) }

  # Filter to ensure both conditions are met
  FILTER EXISTS { ?person dbo:occupation ?occupation1 . FILTER (CONTAINS(LCASE(?occupation1), ""writer"")) }
  FILTER EXISTS { ?person dbo:occupation ?occupation2 . FILTER (CONTAINS(LCASE(?occupation2), ""poet"")) }

  # Return the person's name
  ?person rdfs:label ?name .
}
```",1,3,2,1,1,2,3,28,0,0,7,0,0.0,0
783,2,train,Give me the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?currentName WHERE {
  ?person dbo:birthName ""Samuel Ofori Amponsah"" .
  OPTIONAL { ?person rdfs:label ?currentName . FILTER (lang(?currentName) = 'en') }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
182,11,train,Give me the entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?nationality WHERE {
  ?person rdfs:label ""Tamara Kunanayakam""@en .
  ?person dbo:nationality ?nationality .
}
```",2,2,3,2,1,2,3,28,0,1,62,0.0,0.0,0
488,17,train,"Who is the father of the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father WHERE {
  ?tokugawa rdfs:label ""Tokugawa Masako""@en .
  ?tokugawa dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?spouse rdf:type dbo:Monarch .
  }
  
  FILTER EXISTS { ?spouse rdf:type dbo:Monarch } .

  ?spouse dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
827,0,train,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?person rdfs:label ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
92,0,train,Give me the band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?member WHERE {
  ?band rdfs:label ""Nevermore""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
115,6,train,Give me the alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?almaMater WHERE {
  ?person dbo:award ?award .
  ?award rdfs:label ""National Order of Scientific Merit""@en .
  ?person dbo:almaMater ?almaMater .
}
```",2,2,3,2,1,2,2,9,5,12,0,0.29411764705882354,1.0,0.45454545454545453
701,2,train,Give me the spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Ramesses II""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,1,5,0.0,0.0,0
465,6,train,"Give me the administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?leader ?partyLabel ?organization WHERE {
  # Find the leader of the Chamber of Deputies of the Czech Republic
  ?chamber a dbo:ChamberOfDeputies ;
           dbo:country dbr:Czech_Republic ;
           dbo:leader ?leader .
  
  # Get the political party associated with this leader
  OPTIONAL { 
    ?leader dbo:politicalParty ?party .
    ?party rdfs:label ?partyLabel .
  }
  
  # Find the organization that administers or is related to this political party
  OPTIONAL {
    ?party dbo:administers ?organization .
    ?organization rdfs:label ?orgLabel .
  }

  FILTER (lang(?partyLabel) = 'en' || lang(?partyLabel) = '')
  FILTER (lang(?orgLabel) = 'en' || lang(?orgLabel) = '')

} ORDER BY ?leader
```",2,4,3,2,1,2,2,9,0,0,50,0,0.0,0
285,8,train,Give me the spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?spouse WHERE {
  ?person rdfs:label ""ProfessionalName""@en .
  ?person dbo:spouse ?spouse .
}
```

Replace `""ProfessionalName""` with the actual name of the professional to execute the query.",2,2,3,2,1,3,2,20,0,0,4149,0,0.0,0
820,8,train,Give me the child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  ?jason rdfs:label ""Jason Schwartzman""@en .
  ?parent dbo:parent ?jason .
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
778,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?entity WHERE {
  ?entity dbo:country dbc:United_States .
}
```",1,1,2,1,1,3,2,20,0,0,13008,0,0.0,0
161,3,train,Who is the person decedent at Francoist Spain?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?deathDate WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person dbo:dateOfDeath ?deathDate . }
  FILTER EXISTS {
    ?person dbo:birthPlace ?place .
    ?place rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""spain"") && CONTAINS(LCASE(STR(?person)), ""franco""))
  }
}
ORDER BY DESC(?deathDate)
```",1,1,2,1,1,3,3,71,1,9,124,0.1,0.008,0.014814814814814814
303,6,train,Give me the entity in Panama and party of Guillermo Endara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity ?party WHERE {
  ?endara rdfs:label ""Guillermo Endara""@en .
  ?endara dbo:party ?party .
  ?party dbo:country ?panama .
  ?panama rdfs:label ""Panama""@en .
  
  OPTIONAL { 
    ?entity dbo:country ?panama .
    FILTER(?entity != ?endara)
  }
}
```",2,2,3,1,2,2,3,28,2,0,0,1.0,1.0,1.0
547,17,train,Give me the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardee WHERE {
  ?person rdfs:label ""Gerald Graham""@en .
  ?person dbo:award ?award .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,3,71,0,0,2075,0,0.0,0
959,13,train,"Give me the native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?native WHERE {
  ?person rdfs:label ""Yōichi Masuzoe""@en .
  ?person dbo:residence ?residence .
  ?residence dbo:country ?country .
  ?native dbo:nativeOf ?country .
}
```",2,3,3,2,1,3,3,71,0,0,8419,0,0.0,0
251,3,train,"Give me the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?war WHERE {
  ?person rdfs:label ""Louis François Félix Musnier""@en .
  ?person dbo:participatedIn ?war .
  FILTER (isLiteral(?war) = false)
}
```",1,2,2,1,1,2,3,28,0,0,16,0,0.0,0
182,10,train,Give me the war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?person rdfs:label ""Gotabhaya Rajapaksa""@en .
  ?person dbo:occupation ?work .
  ?work dbo:participatedInWar ?war .
}
```",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
55,3,train,"Give me the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?song rdfs:label ""Used to Love Her""@en .
  ?song dbo:producer ?producer .
  ?producer a dbo:Band .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
981,5,train,"Who is the person born, that is a beauty queen, as ?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace ?birthPlace .
  OPTIONAL { 
    ?person dbo:title ?title .
    FILTER(CONTAINS(LCASE(str(?title)), ""miss"") || CONTAINS(LCASE(str(?title)), ""beauty queen""))
  }
}
```",1,2,2,1,1,3,2,20,97,781939,23,0.00012403521065526394,0.8083333333333333,0.0002480323618306322
485,9,train,Give me the entity in Nottinghamshire and birth place of Thomas Warner (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace ?entityInNottinghamshire WHERE {
  # Query for Thomas Warner's birthplace
  ?warner rdfs:label ""Thomas Warner (poet)""@en .
  ?warner dbo:birthPlace ?birthPlace .

  # Query for an entity in Nottinghamshire
  ?entityInNottinghamshire dbo:location ?nottinghamshire .
  ?nottinghamshire rdfs:label ""Nottinghamshire""@en .
}
```",2,2,3,1,2,2,3,28,1,102,0,0.009708737864077669,1.0,0.01923076923076923
783,7,train,Give me the associated musical artist of the band member of Ofori Amponsah.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?artist WHERE {
  ?person rdfs:label ""Ofori Amponsah""@en .
  ?person dbo:associatedBand ?band .
  
  ?otherPerson dbo:memberOfBand ?band ;
               a dbo:MusicalArtist .

  FILTER(?person != ?otherPerson)
  
  BIND(STRAFTER(STR(?otherPerson), ""http://dbpedia.org/resource/"") AS ?artist)
}
```",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
251,8,train,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war ?location WHERE {
  ?person rdfs:label ""Louis François Félix Musnier""@en .
  ?person dbo:militaryConflict ?war .
  ?war a dbo:MilitaryConflict ;
       dbo:location ?location .
}
```",2,3,3,2,1,2,3,28,0,0,25,0,0.0,0
345,3,train,Give me the nickname of FC Vaduz.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?team rdfs:label ""FC Vaduz""@en .
  ?team dbo:nickname ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
92,9,train,Give me the band member of Nevermore and associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Find band members of Nevermore
  ?person dbo:bandMember ?nevermore .
  ?nevermore rdfs:label ""Nevermore""@en .

  BIND(?person AS ?bandMember)

  OPTIONAL {
    # Find associated artists with Jim Sheppard
    ?sheppard rdfs:label ""Jim Sheppard""@en .
    ?sheppard dbo:associatedBand|dbo:collaborator ?artist .
    BIND(?artist AS ?associatedArtist)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
820,10,train,Who is the parent of the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorLabel ?parentLabel WHERE {
  ?actor a dbo:Actor ;
         rdfs:label ?actorLabel .
  FILTER (LANG(?actorLabel) = 'en')
  
  OPTIONAL { 
    ?actor dbo:parent ?parent .
    ?parent rdfs:label ?parentLabel .
    FILTER (LANG(?parentLabel) = 'en')
  }
}
LIMIT 1
```",2,2,3,2,1,3,2,20,0,2,921,0.0,0.0,0
626,1,train,Give me the awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?person dbo:award dbr:Order_of_St._Andrew .
}
```",1,1,2,1,1,3,2,20,33,12,0,0.7333333333333333,1.0,0.846153846153846
161,11,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?militaryForce WHERE {
  ?franco a dbo:Person ;
          rdfs:label ""Francisco Franco""@en .
  ?conflict dbo:participant ?franco ;
            rdfs:label ""Spanish Civil War""@en .
  ?conflict dbo:militaryForce ?militaryForce .
}
```",2,5,3,2,1,3,3,71,0,0,545,0,0.0,0
666,3,train,"Give me the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?manager WHERE {
  ?team rdfs:label ""Hull City A.F.C.""@en .
  ?team dbo:sportTeamSeason ?season .
  ?season dbo:yearStart ""2016""^^xsd:gYear .
  ?season dbo:yearEnd ""2017""^^xsd:gYear .
  ?team dbo:manager ?manager .
  ?manager rdf:type dbo:SportsManager .
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
232,5,train,"Give me the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation .

  FILTER (
    EXISTS { ?person dbo:occupation ?actor . ?actor rdfs:label ""Actor""@en }
    && 
    EXISTS { ?person dbo:occupation ?narrator . ?narrator rdfs:label ""Narrator""@en }
    &&
    EXISTS { ?person dbo:occupation ?producer . ?producer rdfs:label ""Producer""@en }
  )
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
179,0,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person rdfs:label ""Mom Rajawongse Sirikit Kitiyakara""@en .
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
318,1,train,Give me the professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?occupation WHERE {
  ?composer rdfs:label ""Composer""@en .
  ?composer dbo:occupation ?occupation .
}
```",1,1,2,1,1,2,2,9,0,0,1916,0,0.0,0
838,10,train,"Give me the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?band WHERE {
  ?yuGroup rdfs:label ""YU Grupa""@en .
  ?yuGroup rdf:type dbo:MusicalBand ;
           dbo:relatedBand ?band .
  
  ?band rdf:type dbo:MusicalGroup, dbo:Organization .
}
```",2,5,3,2,1,3,2,20,0,0,8,0,0.0,0
9,12,train,Give me the figure known as QUB and alma mater of Allen Hill (scientist).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?qubAlias ?almaMater WHERE {
  ?person rdfs:label ""Allen Hill (scientist)""@en .
  OPTIONAL { ?person dbo:alias ?qubAlias . FILTER(CONTAINS(LCASE(?qubAlias), ""qub"")) }
  ?person dbo:almaMater ?almaMater .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
9,16,train,"Who is the awardee of the reference, that is an award, to Royal Medals?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?person dbo:award ?award .
  ?award rdfs:label ""Royal Medal""@en .
}
```",2,3,3,2,1,3,3,71,41,233,4,0.14963503649635038,0.9111111111111111,0.25705329153605017
328,11,train,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?award WHERE {
  ?person rdfs:label ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  ?person dbo:award ?award .
}
```",2,2,3,2,1,3,3,71,0,9,1484,0.0,0.0,0
915,3,train,"Give me the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?birthplace WHERE {
  ?person rdfs:label ""Stephen Verona""@en .
  ?person dbo:birthPlace ?birthplace .
  ?birthplace rdf:type dbo:Settlement .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
55,4,train,"Give me the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?symphony rdfs:label ""San Francisco Symphony""@en .
  ?symphony dbo:member ?person .

  OPTIONAL { 
    ?band a dbo:MusicalArtist ;
          dbo:member ?person .
  }
}
```",1,3,2,1,1,2,3,28,0,0,3,0,0.0,0
345,1,train,Give me the team of Alessandro Mangiarratti.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?team WHERE {
  ?person rdfs:label ""Alessandro Mangiarratti""@en .
  ?person dbo:team ?team .
}
```",1,1,2,1,1,3,2,20,1,7,1,0.125,0.5,0.2
55,6,train,Give me the band member of Metallica and band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?member WHERE {
  ?metallicaMember dbo:bandMember ?member .
  ?metallicaMember rdfs:label ""Metallica""@en .

  ?gunsNrosesMember dbo:bandMember ?member .
  ?gunsNrosesMember rdfs:label ""Guns N' Roses""@en .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
827,2,train,"Who is the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?person rdfs:label ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
547,12,train,Give me the resting place of Simon Cadell and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?restingPlace WHERE {
  VALUES ?person { 
    dbr:Simon_Cadell 
    dbr:Alan_Cunningham
  }
  
  OPTIONAL {
    ?person dbo:placeOfBurial ?restingPlace .
  }

  FILTER(?restingPlace != """")
}
```",2,2,3,1,2,3,3,71,0,2,2,0.0,0.0,0
92,4,train,"Give me the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?band rdfs:label ""Nevermore""@en .
  ?band dbo:member ?artist .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
378,12,train,"Give me the war of Joaquín Blake and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?joaquinBlakeWar ?crillonFame WHERE {
  ?joaquinBlake dbo:name ""Joaquín Blake"" .
  ?joaquinBlake dbo:participatedIn ?joaquinBlakeWar .

  ?crillon dbo:name ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón"" .
  ?crillon dbo:famousFor ?crillonFame .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
645,1,train,Give me the alma mater of Sylvia Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?almaMater WHERE {
  ?person rdfs:label ""Sylvia Pankhurst""@en .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
427,3,train,Give me the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?party WHERE {
  ?person rdfs:label ""Michele Pinto""@en .
  ?person dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
498,6,train,"Give me the band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?memberBand ?otherBand WHERE {
  ?morticianMember dbo:member ?mortalBand .
  FILTER(STR(?mortalBand) = ""Mortician""^^xsd:string)
  
  ?morticianMember dbo:artist ?artistRole .
  
  ?memberBand dbo:band ?morticianMember .
  ?memberBand rdfs:label ?bandLabel .

  OPTIONAL {
    ?otherBand dbo:member ?morticianMember .
    FILTER(?otherBand != ?mortalBand) 
    ?otherBand rdfs:label ?otherBandLabel
  }
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
44,1,train,Give me the band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?member WHERE {
  ?band rdfs:label ""Sledgeback""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,2,2,9,2,1,6,0.6666666666666666,0.25,0.36363636363636365
281,15,train,Who is the awardee of the award of Jonathon Band?,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?awardee WHERE {
  ?person foaf:name ""Jonathon Band""@en .
  ?award dbo:recipient ?person ;
         dbo:awardee ?awardee .
}
```",2,2,3,2,1,3,3,71,0,0,558,0,0.0,0
435,3,train,"Give me the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?placeLabel WHERE {
  ?place rdf:type dbo:Town .
  ?place rdfs:label ?placeLabel .
  FILTER (lang(?placeLabel) = ""en"") .
  ?place dbo:country ?country .
  ?country rdfs:label ""Iceland""@en .
}
```",1,4,2,1,1,2,3,28,0,101,1,0.0,0.0,0
421,10,train,Give me the native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?native WHERE {
  ?person rdfs:label ""Samir Bekrić""@en .
  ?person dbo:birthPlace ?place .
  
  OPTIONAL {
    ?native dbo:nativeOf ?place .
    FILTER(LANG(?native) = 'en')
  }
}
```",2,2,3,2,1,2,3,28,0,0,5492,0,0.0,0
659,12,train,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryForce WHERE {
  ?war rdfs:label ""Napoleonic Wars""@en .
  ?militaryForce dbo:participatedIn ?war .
}

UNION

SELECT DISTINCT ?commander WHERE {
  ?battle rdfs:label ""Battle of Leipzig""@en .
  ?commander dbo:commanderOf ?battle .
}
```",2,2,3,1,2,3,3,71,0,0,5,0,0.0,0
712,1,train,Give me the resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?finalRestingPlace WHERE {
  ?person rdfs:label ""Nina Onilova""@en .
  ?person dbo:finalRestingPlace ?finalRestingPlace .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
959,6,train,"Give me the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?person rdfs:label ""Yōichi Masuzoe""@en .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  ?residence rdfs:label ?country .
}
```",1,2,2,1,1,3,3,71,0,1,1,0.0,0.0,0
712,2,train,"Give me the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce WHERE {
  ?uprising rdfs:label ""Vyoshenskaya Uprising""@en .
  ?uprising dbo:participatedIn ?militaryForce .
  FILTER (EXISTS { ?militaryForce a dbo:MilitaryUnit } && EXISTS { ?militaryForce a dbo:Organization })
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
783,3,train,Give me the band member of Ofori Amponsah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  ?person rdfs:label ""Ofori Amponsah""@en .
  ?person dbo:bandMember ?band .
  ?member dbo:bandMember ?band .
  ?member rdfs:label ?bandMember .
  FILTER(?member != ?person)
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
232,17,train,"Give me the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?residence WHERE {
  ?person dbo:nationality dbr:France .
  ?person rdf:type dbo:Politician ;
          dbo:officeHolder ?office .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:United_Kingdom .
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
179,10,train,Who is the child of the parent of Vajiralongkorn?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?grandchild WHERE {
  ?vajiralongkorn dbo:parent ?parent .
  FILTER(STR(?vajiralongkorn) = ""Vajiralongkorn""@en)
  ?parent dbo:child ?grandchild .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
10,10,train,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?band WHERE {
  ?person dbo:birthName ""Luke Francis Vibert""@en .
  ?person rdf:type dbo:Artist .
  ?person dbo:bandMemberOf ?band .
}
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
783,1,train,Give me the band member of Ebony Reigns.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person rdfs:label ""Ebony Reigns""@en .
  ?person dbo:memberOfBand ?band .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
232,0,train,Give me the child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""Jon Pertwee""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
182,4,train,Give me the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?occupation WHERE {
  ?person rdfs:label ""Gotabhaya Rajapaksa""@en .
  OPTIONAL { ?person dbo:occupation ?occupation . }
  FILTER (lang(?occupation) = 'en')
}

UNION

SELECT ?positionHeld WHERE {
  ?person rdfs:label ""Gotabhaya Rajapaksa""@en .
  OPTIONAL { ?person dbo:positionHeld ?positionHeld . }
  FILTER (lang(?positionHeld) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
391,1,train,Give me the actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?actor WHERE {
  ?movie rdfs:label ""The Departed""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,9,0,0,1.0,1.0,1.0
547,2,train,Give me the resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?finalRestingPlace WHERE {
  ?person rdfs:label ""Alan Cunningham""@en .
  ?person dbo:finalRestingPlace ?finalRestingPlace .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
142,5,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?entity dbo:timeZone ?timezone .
  FILTER (str(?timezone) = ""Japan Standard Time"")
}
```",2,2,3,2,1,2,2,9,0,0,8922,0,0.0,0
981,7,train,Give me the entity in the region of Time in Indonesia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?region rdfs:label ""Time""@en .
  ?entity dbo:locatedIn ?region .
  ?entity dbo:country dbr:Indonesia .
}
```",2,2,3,2,1,3,2,20,0,0,2949,0,0.0,0
659,9,train,Give me the commander in German campaign of 1813 and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?campaignCommander ?battleCommander WHERE {
  ?campaign rdfs:label ""German campaign of 1813""@en .
  ?campaign dbo:commander ?campaignCommander .

  ?battle rdfs:label ""Battle of Leipzig""@en .
  ?battle dbo:commander ?battleCommander .
}
```",2,2,3,1,2,3,3,71,16,20,0,0.4444444444444444,1.0,0.6153846153846153
465,5,train,Give me the death place of the native of Prague.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Prague""@en .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",2,2,3,2,1,2,2,9,254,1654,0,0.1331236897274633,1.0,0.23496762257169287
963,9,train,"Give me the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?canton rdfs:label ""Herzegovina-Neretva Canton""@en .
  ?canton dbo:timeZone ?timezone .
  ?timezone dbo:region ?region .
  ?region a dbo:Country .
  ?region rdfs:label ?country .
}
```",2,3,3,2,1,3,2,20,0,0,56,0,0.0,0
801,1,train,Give me the producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?producer WHERE {
  ?song rdfs:label ""Westside Story""@en .
  ?song dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
617,16,train,"Who is the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?child WHERE {
  ?antiochusIII a dbo:Monarch ;
                rdfs:label ""Antiochus III the Great""@en .
  
  ?son dbo:father ?antiochusIII ;
       rdfs:label ""Antiochus""@en .

  OPTIONAL { ?successor dbo:successor ?son . }
  
  FILTER EXISTS {
    ?successor a dbo:Monarch
  }

  ?child dbo:parent ?successor .
  FILTER EXISTS {
    ?child a dbo:Monarch
  }
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
820,7,train,Give me the professional in the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?profession WHERE {
  ?award dbo:recipient dbr:Scott_McCloud .
  ?award dbo:category ?profession .
}
```",2,2,3,2,1,3,2,20,0,0,39650,0,0.0,0
617,6,train,Give me the parent of Mieszko II Lambert and child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person dbo:child dbr:Doubravka_of_Bohemia .
  ?person dbo:parent dbr:Mieszko_II_Lambert .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid SPARQL query can be generated due to incomplete question.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
328,13,train,Give me the commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?szalasi rdfs:label ""Ferenc Szálasi""@en .
  ?force dbo:commander ?szalasi ;
         dbo:commander ?commander .
}
```",2,2,3,2,1,3,3,71,73,0,0,1.0,1.0,1.0
391,4,train,Give me the figure known as Hub City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?city WHERE {
  ?alias rdfs:label ""Hub City""@en .
  ?alias dbo:alsoKnownAs ?city .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
659,14,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?militaryForce WHERE {
  ?person rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  
  ?person dbo:militaryForce ?militaryForce .

  OPTIONAL { 
    ?event dbo:associatedWith ?militaryForce ;
           a dbo:SocietalEvent .
  }
  
  OPTIONAL { 
    ?conflict dbo:associatedWith ?militaryForce ;
              a dbo:MilitaryConflict .
  }

  FILTER EXISTS {
    ?event a dbo:Event .
  }
}
```",2,5,3,2,1,3,3,71,0,0,1127,0,0.0,0
617,17,train,Who is the child of the commander in Battle of Panium?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?battle rdfs:label ""Battle of Panium""@en .
  ?battle dbo:commander ?commander .
  ?commander dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,7,0,0,1.0,1.0,1.0
360,8,train,"Give me the writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer WHERE {
  ?album a dbo:Album ;
         dbo:artist dbr:Dave_Flett ;
         dbo:composer ?writer .
}
```",2,3,3,2,1,2,3,28,0,0,8,0,0.0,0
294,6,train,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?restingPlace WHERE {
  {
    ?person rdfs:label ""Luke Lea (American politician, born 1879)""@en .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
    OPTIONAL { ?person dbo:burialPlace ?restingPlace . }
  } UNION {
    ?person rdfs:label ""Edwin A. Keeble""@en .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
    OPTIONAL { ?person dbo:burialPlace ?restingPlace . }
  }
}
```",2,2,3,1,2,2,3,28,0,5,1,0.0,0.0,0
184,0,train,Give me the parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?person rdfs:label ""Géza von Habsburg""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
328,3,train,Who is the commander in Volcano and Ryukyu Islands campaign?,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?campaign rdfs:label ""Volcano and Ryukyu Islands campaign""@en .
  ?campaign dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,20,0,0,1.0,1.0,1.0
626,0,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?battle rdfs:label ""Battle of Leipzig""@en .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,21,0,0,1.0,1.0,1.0
838,3,train,"Give me the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?member WHERE {
  ?yugrupa rdfs:label ""YU Grupa""@en .
  ?yugrupa dbo:bandMember ?member .

  ?member a dbo:Artist ;
          a dbo:MusicalArtist .
}
```",1,3,2,1,1,3,2,20,0,2,4,0.0,0.0,0
747,8,train,Who is the person born as Tracey Elizabeth McSween?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?currentName WHERE {
  ?person dbo:birthName ""Tracey Elizabeth McSween""@en .
  OPTIONAL { ?person rdfs:label ?currentName . FILTER (lang(?currentName) = 'en') }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
345,6,train,Give me the figure known as Stolz von Liechtenstein and team of Alessandro Mangiarratti.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?stolz ?team WHERE {
  # Find the figure known as Stolz von Liechtenstein
  ?stolz rdfs:label ""Stolz von Liechtenstein""@en .
  
  # Find the team associated with Alessandro Mangiarratti
  ?person rdfs:label ""Alessandro Mangiarratti""@en .
  ?person dbo:memberTeam ?team .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,8,train,"Give me the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?writer WHERE {
  ?song rdfs:label ""40 Dayz & 40 Nightz""@en .
  ?song dbo:lyricist ?writer .

  ?writer a dbo:MusicalArtist ;
          a dbo:Artist .
}
```",1,3,2,1,1,3,3,71,0,0,12,0,0.0,0
666,7,train,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?manager WHERE {
  ?team rdfs:label ""Hull City A.F.C.""@en .
  ?team dbo:sportTeamSeason ?season .
  ?season dbo:yearStart ""2016""^^xsd:gYear ;
          dbo:yearEnd ""2017""^^xsd:gYear .
  ?team dbo:manager ?manager .
}
```",2,3,3,2,1,3,2,20,0,0,22,0,0.0,0
345,9,train,"Give me the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?nickname WHERE {
  ?player foaf:name ""Armando Heeb""@en .
  ?club dbo:member ?player ;
        a dbo:SportsClub, dbo:SoccerClub .
  ?club rdfs:label ?nickname .
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
981,4,train,Give me the author of Kamikaze Girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?author WHERE {
  ?book rdfs:label ""Kamikaze Girls""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,1,0,2,1.0,0.3333333333333333,0.5
391,6,train,"Give me the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?work WHERE {
  ?person rdfs:label ""Michael Ballhaus""@en .
  ?person a dbo:FilmDirector ;
          dbo:film ?work .
}
```",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
9,10,train,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?institution WHERE {
  ?qub rdfs:label ""Queen's University Belfast""@en .
  ?john dbo:almaMater ?institution .
  ?john rdfs:label ""John Alderdice, Baron Alderdice""@en .
  FILTER(?qub = ?institution)
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
197,2,train,Who is the member of FC Politehnica Timișoara?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?team rdfs:label ""FC Politehnica Timișoara""@en .
  ?team dbo:member ?member .
}
```",1,1,2,1,1,2,2,9,0,0,572,0,0.0,0
54,5,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?person rdfs:label ""Thado Minsaw""@en .
  OPTIONAL { ?person dbo:father ?parent . }
  OPTIONAL { ?person dbo:mother ?parent . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,6,train,Give me the war of Mahesh Senanayake and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war WHERE {
  OPTIONAL { 
    ?person1 rdfs:label ""Mahesh Senanayake""@en .
    ?person1 dbo:participatedIn ?war .
  }
  OPTIONAL { 
    ?person2 rdfs:label ""Jagath Dias""@en .
    ?person2 dbo:participatedIn ?war .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
778,7,train,Give me the entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?awardEntity WHERE {
  ?person foaf:name ""Ralph L. Brinster""@en .
  ?person dbo:award ?award .
  OPTIONAL { ?award dbo:givenBy ?awardEntity . }
}
```",2,2,3,2,1,3,2,20,0,0,18629,0,0.0,0
179,5,train,Who is the child of Bhumibol Adulyadej?,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""Bhumibol Adulyadej""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
54,13,train,Give me the parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandparent WHERE {
  ?narapatiI rdfs:label ""Narapati I of Ava""@en .
  ?narapatiI dbo:child ?child .
  OPTIONAL { ?child dbo:parent ?grandparent . }
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
303,5,train,"Who is the person born, that is a politician, as Arnulfo Arias Madrid?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?person WHERE {
  ?person dbo:birthName ""Arnulfo Arias Madrid"" .
  ?person rdf:type dbo:Politician .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
534,5,train,Give me the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?owner WHERE {
  ?arena rdfs:label ""RDS Arena""@en .
  ?arena dbo:owner ?owner .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
767,1,train,Give me the alma mater of Carl L. Nippert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?almaMater WHERE {
  ?person rdfs:label ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
963,1,train,Give me the administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?office ?holder WHERE {
  ?party rdfs:label ""Serbian Progressive Party""@en .
  ?party a dbo:PoliticalParty .
  ?officeHolder dbo:politicalParty ?party ;
                dbo:officeHeld ?office ;
                dbo:agent ?holder .
}
```",1,1,2,1,1,3,2,20,0,0,86,0,0.0,0
345,4,train,Give me the birth date of Eiður Guðjohnsen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthDate WHERE {
  ?person rdfs:label ""Eiður Guðjohnsen""@en .
  ?person dbo:birthDate ?birthDate .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
10,6,train,Give me the associated musical artist of Matt Colton and band member of Luke Vibert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?artist WHERE {
  # Find associated musical artists of Matt Colton
  ?colton dbo:associatedMusicalArtist ?artist .
  FILTER (str(?colton) = ""Matt_Colton"")

  # Find band members of Luke Vibert
  ?vibert dbo:bandMember ?band .
  ?band dbo:associatedMusicalArtist ?artist .
  FILTER (str(?vibert) = ""Luke_Vibert"")
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
391,3,train,"Give me the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

SELECT ?alias WHERE {
  ?location rdfs:label ""Jackson, Tennessee""@en .
  OPTIONAL { 
    ?location dbo:alias ?alias .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
696,2,train,"Give me the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?artist WHERE {
  ?boils rdfs:label ""The Boils""@en .
  ?boils rdf:type dbo:Band ;
         rdf:type dbo:MusicalArtist ;
         rdf:type dbo:Organization .
  ?boils dbo:musicalArtist ?artist .
}
```",1,4,2,1,1,3,2,20,0,0,2,0,0.0,0
994,16,train,"Give me the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember WHERE {
  ?band rdf:type dbo:Band .
  ?band rdf:type dbo:Group .
  ?band rdf:type dbo:Organization .
  ?band dbo:member ?person .
  ?person foaf:name ""Fredrik Thordendal""@en .

  ?band dbo:member ?bandMember .
  ?bandMember rdf:type dbo:Band .
  ?bandMember rdf:type dbo:Group .
  ?bandMember rdf:type dbo:Organization .
}
```",2,6,3,2,1,3,3,71,0,0,6,0,0.0,0
492,3,train,Give me the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?author WHERE {
  ?resource rdfs:label ""French Algeria""@en .
  ?disambiguation dbo:wikiPageDisambiguates ?resource .
  ?disambiguation rdfs:label ?author .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
9,1,train,Give me the alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?almaMater WHERE {
  ?person rdfs:label ""Allen Hill""@en .
  FILTER NOT EXISTS { ?person rdfs:label ?otherLabel . FILTER(?otherLabel != ""Allen Hill"") }
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,4,train,Give me the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fatherLabel WHERE {
  ?person rdfs:label ""Soe Min Wimala Dewi""@en .
  ?child foaf:parent ?person ;
         a dbo:Person .
  ?person foaf:name ?fatherLabel .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
492,13,train,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?person rdfs:label ""Frédéric-Georges Herr""@en .
  ?person dbo:commander ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         dbo:war ?war .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
485,2,train,Give me the entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?nottinghamshire rdfs:label ""Nottinghamshire""@en .
  ?entity dbo:administrativeArea ?nottinghamshire .
}
```",1,1,2,1,1,2,3,28,0,0,369,0,0.0,0
827,10,train,"Who is the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?princess rdfs:label ""Princess Pauline of Saxe-Weimar-Eisenach""@en .
  ?princess dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?spouse dbo:title ?titleSpouse .
    FILTER(CONTAINS(LCASE(STR(?titleSpouse)), ""royal"") || CONTAINS(LCASE(STR(?titleSpouse)), ""king"") || CONTAINS(LCASE(STR(?titleSpouse)), ""queen""))
  }
  
  ?spouse dbo:child ?child .
  
  OPTIONAL { 
    ?child dbo:title ?titleChild .
    FILTER(CONTAINS(LCASE(STR(?titleChild)), ""royal"") || CONTAINS(LCASE(STR(?titleChild)), ""king"") || CONTAINS(LCASE(STR(?titleChild)), ""queen""))
  }
}
```",2,4,3,2,1,3,2,20,2,0,0,1.0,1.0,1.0
142,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity ?label WHERE {
  ?entity dbo:country dbr:Japan .
  ?entity rdfs:label ?label .
}
```",1,1,2,1,1,2,2,9,8710,8710,206,0.5,0.9768954688200987,0.6614520048602673
55,2,train,Give me the band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?person rdfs:label ""Jason Newsted""@en .
  ?person dbo:band ?band .
}
```",1,1,2,1,1,2,3,28,0,0,9,0,0.0,0
392,7,train,Give me the province of Schio and entity in Italy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?province ?entity WHERE {
  # Query to find the province of Schio
  ?schio rdfs:label ""Schio""@en .
  ?schio dbo:locatedIn ?province .

  # Query to find an entity in Italy
  ?entity dbo:country <http://dbpedia.org/resource/Italy> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
427,13,train,Give me the party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?lamberto rdfs:label ""Lamberto Andreotti""@en .
  ?lamberto dbo:father ?father .
  ?father dbo:partyAffiliation ?party .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
294,2,train,"Give me the entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?entity WHERE {
  ?nashville rdfs:label ""Nashville, Tennessee""@en .
  ?entity dbo:location ?nashville .
}
```",1,1,2,1,1,2,3,28,340,0,0,1.0,1.0,1.0
303,11,train,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?person rdfs:label ""Arnulfo Arias Madrid""@en .
  ?person rdf:type dbo:Politician .
  ?person dbo:party ?party .
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
767,9,train,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
# Query to find Carl L. Nippert's alma mater
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?almaMater WHERE {
  ?person rdfs:label ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?almaMater .
}

# Query to find an entity in Baden-Württemberg
PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?entity WHERE {
  ?entity dbp:state ""Baden-Württemberg""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
488,8,train,Who is the father of Emperor Go-Mizunoo?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?father WHERE {
  ?emperor rdfs:label ""Emperor Go-Mizunoo""@en .
  ?emperor dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,8,train,"Give me the band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?member WHERE {
  ?group rdfs:label ""YU Grupa""@en .
  ?group a dbo:Band .
  ?group dbo:bandMember ?member .
}
```",2,3,3,2,1,3,2,20,2,0,38,1.0,0.05,0.09523809523809523
801,17,train,"Give me the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?artist WHERE {
  ?album rdfs:label ""What U See Is What U Get""@en .
  ?album a dbo:MusicalAlbum ;
         dbo:musicalArtist ?artist ;
         dbo:composer ?artist .
  OPTIONAL { ?artist dbo:writer ?work . }
}
```",2,6,3,2,1,3,3,71,0,0,12,0,0.0,0
48,4,train,Give me the show with Stacey Dash.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?show WHERE {
  ?person rdfs:label ""Stacey Dash""@en .
  ?person dbo:starring ?show .
}
```",1,1,2,1,1,3,2,20,0,0,18,0,0.0,0
378,10,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?crillonFame ?gahnWar WHERE {
  # Query for Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  ?crillon rdfs:label ""Louis des Balbes de Berton de Crillon""@en .
  OPTIONAL { ?crillon dbo:notableWork ?crillonFame . }
  OPTIONAL { ?crillon dbo:occupation ?crillonOccupation . }

  # Query for Carl Pontus Gahn
  ?gahn rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL { ?gahn dbo:militaryConflict ?gahnWar . }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
328,17,train,"Give me the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?office WHERE {
  ?person rdfs:label ""Gustav Jonson""@en .
  ?person dbo:officeHolder ?positionHeld .
  ?positionHeld rdf:type dbo:Position ;
                dbo:leader ?leader .
  ?leader rdfs:label ?leaderLabel .
  ?office dbo:positionHeld ?positionHeld ;
          rdf:type dbo:GovernmentAgency .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
339,4,train,Who is the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parent WHERE {
  ?person rdfs:label ""Princess Olga of Greece and Denmark""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
701,16,train,Give me the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?grandchild WHERE {
  ?setiI rdfs:label ""Seti I""@en .
  ?setiI dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
996,6,train,Give me the entity in France and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entity ?force WHERE {
  ?person rdfs:label ""Dagobert Sigmund von Wurmser""@en .
  ?person dbo:militaryConflict ?conflict .
  ?conflict rdfs:label ?entity .
  OPTIONAL { ?conflict dbo:place ?location . FILTER(CONTAINS(LCASE(?location), ""france"")) }
  OPTIONAL { ?conflict dbo:commander ?force . FILTER(?force = ?person) }
}
```",2,2,3,1,2,3,2,20,0,0,4,0,0.0,0
492,10,train,Give me the person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?person WHERE {
  ?algeria rdfs:label ""French Algeria""@en .
  ?algiers rdfs:label ""Algiers""@en .
  ?algeria dbo:decedent ?person .
  ?algiers dbo:decedent ?person .
}
```",2,2,3,1,2,3,3,71,0,0,16,0,0.0,0
421,6,train,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?bandMember WHERE {
  ?person dbo:bandMember ?senidahBand .
  ?senidahBand rdfs:label ""Senidah""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ""Socialist Federal Republic of Yugoslavia""@en .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
487,4,train,Give me the birth name of Phil Scott.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?person rdfs:label ""Phil Scott""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
827,3,train,"Who is the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?child WHERE {
  ?mariaPavlovna rdfs:label ""Grand Duchess Maria Pavlovna of Russia (1786–1859)""@en .
  ?mariaPavlovna dbo:child ?child .
  OPTIONAL { ?child dbo:title ?title . FILTER regex(?title, ""King|Queen|Duke|Duchess|Prince|Princess"", ""i"") }
}
```",1,2,2,1,1,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
435,9,train,"Give me the region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . }","```sparql
# Query for the region of Greenwich Mean Time
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?region WHERE {
  ?place dbo:timeZone ?timezone .
  ?timezone rdfs:label ""Greenwich Mean Time""@en .
  ?place rdfs:label ?region .
}

UNION

# Query for the work of Article 62, Section IV of Constitution of Iceland
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?articleContent WHERE {
  dbr:Constitution_of_Iceland dbo:part ?section .
  ?section rdfs:label ""Article 62, Section IV""@en .
  ?section dbo:text ?articleContent .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,12,train,Give me the administration of Emperor Go-Yōzei and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration ?deathPlace WHERE {
  # Query for Emperor Go-Yōzei's administration period
  ?emperor rdfs:label ""Go-Yōzei""@en .
  ?emperor dbo:reign ?administration .

  # Query for Tokugawa Ieyasu's death place
  ?shogun rdfs:label ""Tokugawa Ieyasu""@en .
  ?shogun dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
666,2,train,"Give me the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?team WHERE {
  ?coach rdfs:label ""Leonid Slutsky""@en .
  ?coach a dbo:FootballCoach .
  ?season dbo:coach ?coach ;
          dbo:sportsTeamSeason ?team .
  ?team a dbo:SoccerClub .
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
767,8,train,Give me the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?alterEgo WHERE {
  ?character rdfs:label ""Black Hood""@en .
  ?character dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
9,9,train,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?almaMater WHERE {
  VALUES ?personLabel { ""Allen Hill (scientist)"" ""John Alderdice, Baron Alderdice"" }
  
  ?person rdfs:label ?personLabel .
  FILTER(LANG(?personLabel) = 'en')
  
  OPTIONAL { 
    ?person dbo:almaMater ?almaMater .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
281,1,train,Give me the entity in Colony of New Zealand.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?place rdfs:label ""Colony of New Zealand""@en .
  ?entity dbo:locatedIn ?place .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
179,8,train,Give me the parent of the child of Bhumibol Adulyadej.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?parent WHERE {
  ?bhumibol dbo:child ?child .
  FILTER(STRSTARTS(LCASE(?bhumibol), ""http://dbpedia.org/resource/bhumibol_adulyadej""))
  
  OPTIONAL { 
    ?child dbo:parent ?parent .
  }
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
142,6,train,Give me the birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?actor dbo:character ""Papa wa Newscaster""@en .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = 'en')
  OPTIONAL { ?actor dbo:birthPlace ?birthPlace }
}
```",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
778,8,train,"Give me the author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?software ?author WHERE {
  ?person rdfs:label ""Bill Joy""@en .
  ?work dbo:creator ?person ;
        rdf:type dbo:Software .
  ?work rdfs:label ?software .
  OPTIONAL { ?work dbo:creator ?author }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
378,8,train,Who is the commander in Great Siege of Gibraltar?,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?event rdfs:label ""Great Siege of Gibraltar""@en .
  ?event dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,7,0,0,1.0,1.0,1.0
360,10,train,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?native WHERE {
  ?winnie rdfs:label ""Winnie Madikizela-Mandela""@en .
  ?winnie dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .
  
  OPTIONAL { 
    ?deathPlace rdfs:label ?placeLabel .
  }
  
  ?native dbo:birthPlace ?deathPlace .
  ?native rdfs:label ?nativeLabel .
}
```",2,3,3,2,1,2,3,28,1087,0,12,1.0,0.989080982711556,0.9945105215004574
391,0,train,"Give me the native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Compton, California""@en .
}
```",1,1,2,1,1,3,3,71,97,0,0,1.0,1.0,1.0
534,0,train,Give me the birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Garret FitzGerald""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
528,10,train,Give me the force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?narcisoForce WHERE {
  ?person rdfs:label ""Narciso Campero""@en .
  ?person dbo:militaryRank ?narcisoForce .
}

UNION

SELECT ?ireneWar WHERE {
  ?person rdfs:label ""Irene Morales""@en .
  ?person dbo:participatedIn ?ireneWar .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
303,3,train,"Who is the commander, that is a politician, in United States invasion of Panama?",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  ?event dbo:commander ?person .
  ?event rdfs:label ""United States invasion of Panama""@en .
  
  OPTIONAL { 
    ?person dbo:officeHolder ?office .
    FILTER EXISTS { ?office dbp:country dbp:United_States }
  }

  FILTER NOT EXISTS {
    ?person a dbo:Person .
    MINUS { ?person dbo:commander ?otherEvent . }
  }
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
492,7,train,Give me the country of Khemis Miliana District.,SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?country WHERE {
  ?place rdfs:label ""Khemis Miliana District""@en .
  ?place dbo:country ?country .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
427,9,train,Give me the reference to Partito Popolare Italiano and party of Giulio Andreotti.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?partitoPopolareItaliano ?party WHERE {
  ?partitoPopolareItaliano rdfs:label ""Partito Popolare Italiano""@en .
  ?giulioAndreotti dbo:birthName ""Giulio Andreotti"" ;
                   dbo:party ?party .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
9,11,train,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?almaMater WHERE {
  ?mayor rdf:type dbo:Politician .
  ?mayor dbo:mayorFor ?forum .
  ?forum rdfs:label ""Northern Ireland Forum""@en .
  OPTIONAL { ?mayor dbo:almaMater ?almaMater . }
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
427,4,train,Give me the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?memberName WHERE {
  ?party rdfs:label ""Italian People's Party (1994)""@en .
  ?party dbo:member ?member .
  ?member rdfs:label ?memberName .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,2,train,Give me the entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entityLabel WHERE {
  ?entity dbo:country dbr:Sri_Lanka .
  ?entity rdfs:label ?entityLabel .
  FILTER (lang(?entityLabel) = 'en')
}
```",1,1,2,1,1,2,3,28,0,4633,62,0.0,0.0,0
528,2,train,Give me the force of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?force WHERE {
  ?person rdfs:label ""Narciso Campero""@en .
  ?person dbo:militaryUnit ?force .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
645,9,train,"Give me the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?residence WHERE {
  ?battle rdfs:label ""Battle of Diamond Rock""@en .
  ?battle dbo:commander ?commander .
  ?commander dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
801,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
547,15,train,Give me the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?grandchild WHERE {
  ?person rdfs:label ""William Haliburton""@en .
  ?person dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
10,0,train,Give me the associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?person rdfs:label ""Matt Colton""@en .
  ?person dbo:associatedMusicalArtist ?artist .
}
```",1,1,2,1,1,2,3,28,4,0,0,1.0,1.0,1.0
528,6,train,Give me the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander WHERE {
  ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
294,7,train,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?entityInNashville ?restingPlace WHERE {
  ?lea rdfs:label ""Luke Lea""@en .
  
  # Find the entity in Nashville, Tennessee associated with Luke Lea
  ?entityInNashville dbo:location ?nashvilleLocation .
  ?nashvilleLocation rdfs:label ""Nashville, Tennessee""@en .
  ?lea dbo:associatedWith ?entityInNashville .

  # Find the resting place of Luke Lea
  ?lea dbo:finalRestingPlace ?restingPlace .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
754,8,train,Give me the parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?ramKhamhaeng rdfs:label ""Ram Khamhaeng""@en .
  ?ramKhamhaeng dbo:child ?child .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
54,1,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentLabel WHERE {
  ?person rdfs:label ""Thado Minsaw of Prome""@en .
  OPTIONAL { ?person dbo:father ?father . BIND(?father AS ?parent) }
  OPTIONAL { ?person dbo:mother ?mother . BIND(?mother AS ?parent) }
  ?parent rdfs:label ?parentLabel .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
360,9,train,Give me the native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?native ?reference WHERE {
  ?native dbo:birthPlace ?place .
  ?place rdfs:label ""Johannesburg""@en .
  
  OPTIONAL {
    ?native dbo:wikiPageRedirects ?manfredMannLink .
    ?manfredMannLink rdfs:label ""Manfred Mann""@en .
  }
  
  UNION
  
  OPTIONAL {
    ?relatedEntity dbo:bandMember ?native ;
                   dbo:bandMember ?manfredMann .
    ?manfredMann rdfs:label ""Manfred Mann""@en .
  }

  FILTER (lang(?native) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
645,5,train,Give me the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""Richard Pankhurst""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
161,6,train,"Give me the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?event WHERE {
  ?person rdfs:label ""Francisco Largo Caballero""@en .
  ?person dbo:primeMinisterForCountry ?country .
  ?event dbo:participatedIn ?person .
  ?event rdf:type ?eventType .
  
  FILTER (
    (?eventType = <http://dbpedia.org/ontology/MilitaryConflict> || 
     ?eventType = <http://dbpedia.org/ontology/SocialEvent>)
  )
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
251,2,train,Give me the death place of Laura Mancinelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?deathPlace WHERE {
  ?person rdfs:label ""Laura Mancinelli""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
314,0,train,Give me the person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Madrid""@en .
}
```",1,1,2,1,1,2,3,28,12,1334,8,0.008915304606240713,0.6,0.017569546120058566
391,14,train,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie a dbo:Work .
  ?movie a dbo:TelevisionShow .
  ?role dbo:actor ?rozRyan .
  ?rozRyan rdfs:label ""Roz Ryan""@en .
  ?role dbo:starring ?movie .
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
712,7,train,Give me the capital of the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?capital WHERE {
  ?organization rdfs:label ""Armed Forces of South Russia""@en .
  ?organization dbo:country ?country .
  ?country dbo:capital ?capital .
}
```",2,2,3,2,1,3,2,20,3,0,0,1.0,1.0,1.0
312,2,train,"Give me the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?administration WHERE {
  ?administration rdf:type dbo:AdministrativeRegion .
  ?administration dbo:country dbc:Italy .
  ?administration dbo:settlement true .
  OPTIONAL { ?administration dbo:politicalParty dbr:Democratic_Party_(Italy) . }
}
```",1,5,2,1,1,2,2,9,0,0,14,0,0.0,0
801,9,train,Give me the producer of Westside Story (song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?song rdfs:label ""Westside Story""@en .
  ?song dbo:producer ?producer .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
404,15,train,"Who is the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthName WHERE {
  ?person rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?person dbo:birthName ?birthName .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
294,10,train,Give me the resting place of the architect of P. D. Houston Jr. House.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?architect ?restingPlace WHERE {
  ?house rdfs:label ""P. D. Houston Jr. House""@en .
  ?house dbo:architect ?architect .
  OPTIONAL { 
    ?architect dbo:deathPlace ?restingPlace .
  }
}
```",2,2,3,2,1,2,3,28,0,2,1,0.0,0.0,0
339,1,train,Give me the father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?father WHERE {
  ?person rdfs:label ""Princess Elizabeth of Greece and Denmark""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
963,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?country WHERE {
  ?region rdfs:label ""Central European Time""@en .
  ?region dbo:timeZone ?tz .
  ?tz dbo:country ?country .
}
```",1,2,2,1,1,3,2,20,0,0,56,0,0.0,0
820,5,train,Who is the parent of Jason Schwartzman?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parent WHERE {
  ?person rdfs:label ""Jason Schwartzman""@en .
  OPTIONAL { ?person dbo:father ?parent . }
  OPTIONAL { ?person dbo:mother ?parent . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
994,5,train,"Give me the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?band WHERE {
  ?person rdfs:label ""Fredrik Thordendal""@en .
  ?person dbo:member ?membership .
  ?membership dbo:organization ?band .
  FILTER (rdf:type(?band, dbo:Band))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,0,train,Give me the child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?person rdfs:label ""Doubravka of Bohemia""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
16,9,train,Give me the professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Ted McGinley""@en .
  ?person dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?spouse dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""actress""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
915,9,train,"Give me the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?directorName ?birthPlace WHERE {
  ?film rdfs:label ""Pipe Dreams (1976 film)""@en .
  ?film dbo:director ?director .
  ?director rdfs:label ?directorName .
  ?director dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .
}
```",2,3,3,2,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
115,4,train,Give me the alma mater of Vladimir Cerrón and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?almaMater WHERE {
  { 
    ?person rdfs:label ""Vladimir Cerrón""@en .
    ?person dbo:almaMater ?almaMater .
  }
  UNION
  {
    ?person rdfs:label ""Jorge Sotomayor Tello""@en .
    ?person dbo:almaMater ?almaMater .
  }
}
```",2,2,3,1,2,2,2,9,1,4,0,0.2,1.0,0.33333333333333337
184,4,train,Give me the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Budapest""@en .
}
```",1,1,2,1,1,3,3,71,2751,0,0,1.0,1.0,1.0
801,7,train,"Give me the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album WHERE {
  ?album rdfs:label ""What U See Is What U Get""@en .
  ?album a dbo:Album .
  ?album dbo:musicalWork ?musicalWork .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
427,5,train,Who is the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
}
```",1,1,2,1,1,3,3,71,1559,0,0,1.0,1.0,1.0
16,12,train,Give me the professional in Actress and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:birthName ""Georgeanne Marie Rice"" .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""actress""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
16,14,train,Give me the person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?person rdfs:label ""Gigi Rice""@en .
  ?person dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
959,0,train,Give me the member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?university rdfs:label ""University of Tsukuba""@en .
  ?university dbo:member ?member .
}
```",1,1,2,1,1,3,3,71,0,0,267,0,0.0,0
712,8,train,Give me the resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:award dbr:Hero_of_the_Soviet_Union .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",2,2,3,2,1,3,2,20,6,933,43,0.006389776357827476,0.12244897959183673,0.01214574898785425
767,17,train,"Give me the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgo WHERE {
  ?person foaf:name ""Matthew Burland""@en .
  ?person dbo:alterEgo ?alterEgo .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
356,6,train,Give me the player in 2015 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?team ?player WHERE {
  ?person foaf:name ""Mark Briggs""@en .
  ?person dbo:member ?team .
  FILTER(YEAR(?teamStartDate) = 2015 && YEAR(?teamEndDate) >= 2015)
  
  OPTIONAL {
    ?team dbo:player ?player .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,1,train,Give me the band member of Metallica.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?member WHERE {
  ?metallica rdfs:label ""Metallica""@en .
  ?metallica dbo:bandMember ?member .
}
```",1,1,2,1,1,2,3,28,0,4,15,0.0,0.0,0
77,8,train,Give me the force of the mayor of Congress Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mayor ?position WHERE {
  ?mayor rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""mayor of congress poland"") || CONTAINS(LCASE(?label), ""congress poland mayor""))
  OPTIONAL { ?mayor dbo:position ?position . }
}
```",2,2,3,2,1,3,2,20,0,0,33,0,0.0,0
696,8,train,Give me the landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v0 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  ?nie rdfs:label ""Nie Rongzhen""@en .
  ?nie dbo:award ?award .

  OPTIONAL { 
    ?award dbp:elevation ?elevation .
  }

  ?landmark geo:elevation ?elevation ;
           a dbo:Landmark .
}
```",2,2,3,2,1,3,2,20,0,0,599,0,0.0,0
427,14,train,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?person rdfs:label ""Romano Antonio Prodi""@en .
  ?person a dbo:OfficeHolder ;
          a dbo:Politician .
  ?person dbo:party ?party .
}
```",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
77,4,train,"Give me the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?organization ?territory WHERE {
  ?organization a dbo:Organization .
  ?organization dbo:headquarterLocation ?location .
  ?location rdfs:label ""Warsaw""@en .
  
  OPTIONAL { 
    ?organization dbo:territory ?territory .
  }
}
```",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
281,16,train,"Give me the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?leaderName ?birthPlaceCountry WHERE {
  ?election rdfs:label ""1962 New South Wales state election""@en .
  ?election dbo:leader ?politician .
  ?politician rdfs:label ?leaderName .
  ?politician dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
  ?birthPlace rdfs:label ?birthPlaceCountry .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
801,12,train,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist ?producer WHERE {
  # Find the associated musical artist of Chris Taylor (music producer)
  OPTIONAL {
    ?chrisTaylor rdfs:label ""Chris Taylor (music producer)""@en .
    ?chrisTaylor dbo:associatedBand ?band .
    ?band dbo:leadArtist ?artist .
  }
  
  # Find the producer of Westside Story (song)
  OPTIONAL {
    ?westsideStory rdfs:label ""Westside Story""@en .
    ?westsideStory dbo:producer ?producer .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
184,16,train,"Give me the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?child WHERE {
  ?ladislaus rdfs:label ""Archduke Ladislaus Philipp of Austria""@en .
  ?ladislaus dbo:parent ?parent .
  
  # Assuming royalty can be inferred from having a title or role
  OPTIONAL { ?parent dbo:title ?title . FILTER regex(?title, ""Archduke|Princess|Prince"", ""i"") }
  
  ?parent dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
391,11,train,Give me the native of the figure known as Hub City.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?person WHERE {
  ?city rdfs:label ""Hub City""@en .
  ?person dbo:birthPlace ?city .
}
```",2,2,3,2,1,3,3,71,0,0,176,0,0.0,0
77,9,train,Who is the awardee of the award of Maxim Grigorievich Vlasov?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?awardee WHERE {
  ?vlasov rdfs:label ""Maxim Grigorievich Vlasov""@en .
  ?vlasov dbo:awardReceived ?award .
  
  ?otherAwardee dbo:awardReceived ?award .
  ?otherAwardee rdfs:label ?awardee .
  FILTER(?otherAwardee != ?vlasov)
}
```",2,2,3,2,1,3,2,20,0,0,416,0,0.0,0
16,7,train,Who is the alumnus of Ohio State University?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?alumnus WHERE {
  ?alumnus rdf:type dbo:Person .
  ?alumnus dbo:almaMater <http://dbpedia.org/resource/The_Ohio_State_University> .
}
```",1,1,2,1,1,3,3,71,0,2,467,0.0,0.0,0
92,6,train,"Give me the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthDate ?birthPlace WHERE {
  ?person rdfs:label ""Jim Sheppard""@en .
  ?person a dbo:Artist .
  ?person dbo:birthDate ?birthDate .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",1,2,2,1,1,3,3,71,0,1,1,0.0,0.0,0
981,3,train,Give me the region of Time in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?region WHERE {
  ?place rdfs:label ""Time""@en .
  ?place dbo:country dbr:Indonesia .
  ?place dbo:locatedInRegion ?region .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
